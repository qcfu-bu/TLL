logical inductive uniq‹s› (A : Type‹s›) (m : A) : U =
| Uniq of (x : A) {_ : m ≡ x}

program ex {e : uniq _ 1} : string =
  match {e} with
  | Uniq x _ ⇒ "hello" ^ "world"
  end

program main : IO unit =
  let s = ex (Uniq 1 refl) in
  print s
