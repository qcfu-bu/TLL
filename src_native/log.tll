logical inductive uniq‹s› (A : Type‹s›) (m : A) : U = Uniq of ‹s› {A : Type‹s›} {m : A} (x : A) {_ : m ≡ x} → (
(uniq‹s›) (A)
(m))

program ex‹› {e : ((uniq) (_)
(O.+1))} : string = match e as _ in _ with Uniq x _ ⇒ ((cats)
(((String) (((Char) (O.+104)))
 (((String) (((Char) (O.+101)))
  (((String) (((Char) (O.+108)))
   (((String) (((Char) (O.+108)))
    (((String) (((Char) (O.+111))) (EmptyString)))))))))))
(((String) (((Char) (O.+119)))
 (((String) (((Char) (O.+111)))
  (((String) (((Char) (O.+114)))
   (((String) (((Char) (O.+108)))
    (((String) (((Char) (O.+100))) (EmptyString))))))))))))

program main‹› : IO unit‹s› = let s = ((ex)
(((Uniq) (O.+1) (refl)))) in ((print)
(s))

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v255 : bool) (b2_v256 : bool) ⇒
    match b1_v255 as __v257 in ??1 with
    | true ⇒ b2_v256 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v260 : bool) (b2_v261 : bool) ⇒
    match b1_v260 as __v262 in ??2 with
    | true ⇒ true | false ⇒ b2_v261
    end

program notb_i3 : bool → bool =
  fn (b_v264 : bool) ⇒
    match b_v264 as __v265 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v268 : bool) (b2_v269 : bool) ⇒
    match b1_v268 as __v270 in ??4 with
    | true ⇒
      match b2_v269 as __v271 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v269 as __v272 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v275 : nat) (y_v276 : nat) ⇒
    match x_v275 as __v277 in ??7 with
    | O ⇒ true
    | S x_v278 ⇒
      match y_v276 as __v279 in ??8 with
      | O ⇒ false | S y_v280 ⇒ (lten_i5 x_v278 y_v280)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v283 : nat) (y_v284 : nat) ⇒ (lten_i5 x_v283.+1 y_v284)

program gten_i7 : nat → nat → bool =
  fn (x_v287 : nat) (y_v288 : nat) ⇒ (lten_i5 y_v288 x_v287)

program gtn_i8 : nat → nat → bool =
  fn (x_v291 : nat) (y_v292 : nat) ⇒ (ltn_i6 y_v292 x_v291)

program eqn_i9 : nat → nat → bool =
  fn (x_v295 : nat) (y_v296 : nat) ⇒
    match x_v295 as __v297 in ??9 with
    | O ⇒
      match y_v296 as __v298 in ??11 with
      | O ⇒ true | S __v299 ⇒ false
      end
    | S x_v300 ⇒
      match y_v296 as __v301 in ??10 with
      | O ⇒ false | S y_v302 ⇒ (eqn_i9 x_v300 y_v302)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v305 : nat) (n2_v306 : nat) ⇒
    match n1_v305 as __v307 in ??12 with
    | O ⇒
      match n2_v306 as __v308 in ??14 with
      | O ⇒ EQ_c3‹› | S __v309 ⇒ LT_c1‹›
      end
    | S n1_v310 ⇒
      match n2_v306 as __v311 in ??13 with
      | O ⇒ GT_c2‹› | S n2_v312 ⇒ (comparen_i10 n1_v310 n2_v312)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v314 : nat) ⇒
    match x_v314 as __v315 in ??15 with
    | O ⇒ 0 | S x_v316 ⇒ x_v316
    end

program addn_i12 : nat → nat → nat =
  fn (x_v319 : nat) (y_v320 : nat) ⇒
    match x_v319 as __v321 in ??16 with
    | O ⇒ y_v320 | S x_v322 ⇒ (addn_i12 x_v322 y_v320).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v325 : nat) (y_v326 : nat) ⇒
    match y_v326 as __v327 in ??17 with
    | O ⇒ x_v325 | S y_v328 ⇒ (subn_i13 (pred_i11 x_v325) y_v328)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v331 : nat) (y_v332 : nat) ⇒
    match x_v331 as __v333 in ??18 with
    | O ⇒ 0 | S x_v334 ⇒ (addn_i12 y_v332 (muln_i14 x_v334 y_v332))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v337 : nat) (y_v338 : nat) ⇒
    match (ltn_i6 x_v337 y_v338) as __v339 in ??19 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v337 y_v338) y_v338).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v342 : nat) (y_v343 : nat) ⇒
    (subn_i13 x_v342 (muln_i14 (divn_i15 x_v342 y_v343) y_v343))

inductive between_d2 (lower_v344 : nat) (upper_v345 : nat) : L =
| Between_c4 of
    (lower_v346 : nat) (upper_v347 : nat) (n_v348 : nat)
    {pf1_v349 : (lten_i5 lower_v346 n_v348) ≡ true}
    {pf2_v350 : (lten_i5 n_v348 upper_v347) ≡ true}
    : (between_d2 lower_v346 upper_v347)

inductive char_d3 : U =
| Char_c5 of (n_v351 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v354 : char_d3) (c2_v355 : char_d3) ⇒
    match c1_v354 as __v356 in ??22 with
    | Char_c5 n1_v357 ⇒
      match c2_v355 as __v358 in ??23 with
      | Char_c5 n2_v359 ⇒ (eqn_i9 n1_v357 n2_v359)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v362 : char_d3) (c2_v363 : char_d3) ⇒
    match c1_v362 as __v364 in ??24 with
    | Char_c5 n1_v365 ⇒
      match c2_v363 as __v366 in ??25 with
      | Char_c5 n2_v367 ⇒ (comparen_i10 n1_v365 n2_v367)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v368 : char_d3) (s_v369 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v372 : string_d4) (s2_v373 : string_d4) ⇒
    match s1_v372 as __v374 in ??26 with
    | EmptyString_c6  ⇒ s2_v373
    | String_c7 c_v375 s1_v376 ⇒
      (String_c7‹› c_v375 (cats_i19 s1_v376 s2_v373))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v378 : string_d4) ⇒
    match s_v378 as __v379 in ??27 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v380 s_v381 ⇒ (strlen_i20 s_v381).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v384 : string_d4) (s2_v385 : string_d4) ⇒
    match s1_v384 as __v386 in ??28 with
    | EmptyString_c6  ⇒
      match s2_v385 as __v387 in ??30 with
      | EmptyString_c6  ⇒ true | String_c7 __v388 __v389 ⇒ false
      end
    | String_c7 c1_v390 s1_v391 ⇒
      match s2_v385 as __v392 in ??29 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v393 s2_v394 ⇒
        (andb_i1 (eqc_i17 c1_v390 c2_v393) (eqs_i21 s1_v391 s2_v394))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v397 : string_d4) (s2_v398 : string_d4) ⇒
    match s1_v397 as __v399 in ??31 with
    | EmptyString_c6  ⇒
      match s2_v398 as __v400 in ??34 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v401 __v402 ⇒ LT_c1‹›
      end
    | String_c7 c1_v403 s1_v404 ⇒
      match s2_v398 as __v405 in ??32 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v406 s2_v407 ⇒
        match (comparec_i18 c1_v403 c2_v406) as __v408 in ??33 with
        | EQ_c3  ⇒ (compares_i22 s1_v404 s2_v407) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s409, t_s410›
  (A_v411 : Type‹s_s409›) : Type‹t_s410›
=
| None_c8 of
    ‹s_s412, t_s413› (A_v414 : Type‹s_s412›)
    : (option_d5‹s_s412, t_s413› A_v414)
| Some_c9 of
    ‹s_s415, t_s416› (A_v417 : Type‹s_s415›) (x_v418 : A_v417)
    : (option_d5‹s_s415, t_s416› A_v417)

program and_then_i23 ‹s_s419, r_s420, t_s421› :
  ∀ {A_v422 : Type‹s_s419›} →
    ∀ {B_v423 : Type‹r_s420›} →
      (option_d5‹??35, t_s421› A_v422) →
        A_v422 → (option_d5‹??36, t_s421› B_v423) ⊸
          (option_d5‹??37, t_s421› B_v423)
=
  fn {A_v427 : Type‹s_s419›} {B_v428 : Type‹r_s420›}
     (opt_v429 : (option_d5‹??35, t_s421› A_v427)) ⇒
    ln (f_v430 : ??38) ⇒
      match opt_v429 as __v431 in ??39 with
      | None_c8  ⇒ None_c8‹??42, ??41›
      | Some_c9 x_v432 ⇒ (f_v430 x_v432)
      end

inductive list_d6 ‹s_s433, t_s434›
  (A_v435 : Type‹s_s433›) : Type‹t_s434›
=
| nil_c10 of
    ‹s_s436, t_s437› (A_v438 : Type‹s_s436›)
    : (list_d6‹s_s436, t_s437› A_v438)
| cons_c11 of
    ‹s_s439, t_s440› (A_v441 : Type‹s_s439›) (hd_v442 : A_v441)
    (tl_v443 : (list_d6‹s_s439, t_s440› A_v441))
    : (list_d6‹s_s439, t_s440› A_v441)

logical llen_i24 ‹s_s444, t_s445› :
  ∀ (A_v446 : Type‹s_s444›) →
    (list_d6‹s_s444, t_s445› A_v446) → nat
=
  fn (A_v448 : Type‹s_s444›)
     (xs_v449 : (list_d6‹s_s444, t_s445› A_v448)) ⇒
    match xs_v449 as __v450 in ??43 with
    | nil_c10  ⇒ 0
    | cons_c11 x_v451 xs_v452 ⇒ (llen_i24‹??46, ??45› ??44 xs_v452).+1
    end

program len_i25 ‹s_s453, t_s454› :
  ∀ {A_v455 : Type‹s_s453›} →
    (list_d6‹??47, t_s454› A_v455) →
      nat ⊗ (list_d6‹??48, t_s454› A_v455)
=
  fn {A_v458 : Type‹s_s453›}
     (xs_v459 : (list_d6‹??47, t_s454› A_v458)) ⇒
    match xs_v459 as __v460 in ??49 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??59, ??58›⟩
    | cons_c11 x_v461 xs_v462 ⇒
      match (len_i25‹??52, ??51› ??50 xs_v462) as __v463 in ??53 with
      | ⟨n_v464, xs_v465⟩ ⇒
        ⟨n_v464.+1, (cons_c11‹??56, ??55› x_v461 xs_v465)⟩
      end
    end

program append_i26 ‹s_s466, t_s467› :
  ∀ {A_v468 : Type‹s_s466›} →
    (list_d6‹??60, t_s467› A_v468) →
      (list_d6‹??61, t_s467› A_v468) ⊸ (list_d6‹??63, ??62› A_v468)
=
  fn {A_v471 : Type‹s_s466›}
     (xs_v472 : (list_d6‹??60, t_s467› A_v471)) ⇒
    ln (ys_v473 : ??64) ⇒
      match xs_v472 as __v474 in ??65 with
      | nil_c10  ⇒ ys_v473
      | cons_c11 x_v475 xs_v476 ⇒
        (cons_c11‹??71, ??70›
          x_v475 (append_i26‹??68, ??67› ??66 xs_v476 ys_v473))
      end

logical stdin_rec_i27 : unit‹U› → proto =
  fn (__v478 : unit‹U›) ⇒
    ⇑(b_v479 : bool) ⇒
      match b_v479 as __v480 in ??72 with
      | true ⇒ ⇓(__v481 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit‹U› → proto =
  fn (__v483 : unit‹U›) ⇒
    ⇑(b_v484 : bool) ⇒
      match b_v484 as __v485 in ??73 with
      | true ⇒ ⇑(__v486 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit‹U› → proto =
  fn (__v488 : unit‹U›) ⇒
    ⇑(b_v489 : bool) ⇒
      match b_v489 as __v490 in ??74 with
      | true ⇒ ⇑(__v491 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit‹U› → IO string_d4 =
  fn (__v493 : unit‹U›) ⇒
    let ch_v494 ⇐ open stdin in
    let ch_v495 ⇐ (send ch_v494 true) in
    let __v496 ⇐ recv ch_v495 in
    match __v496 as __v497 in ??75 with
    | ⟨s_v498, ch_v499⟩ ⇒
      let ch_v500 ⇐ (send ch_v499 false) in
      let __v501 ⇐ close ch_v500 in return s_v498
    end

program print_i34 : string_d4 → IO unit‹U› =
  fn (s_v503 : string_d4) ⇒
    let ch_v504 ⇐ open stdout in
    let ch_v505 ⇐ (send ch_v504 true) in
    let ch_v506 ⇐ (send ch_v505 s_v503) in
    let ch_v507 ⇐ (send ch_v506 false) in close ch_v507

program prerr_i35 : string_d4 → IO unit‹U› =
  fn (s_v509 : string_d4) ⇒
    let ch_v510 ⇐ open stderr in
    let ch_v511 ⇐ (send ch_v510 true) in
    let ch_v512 ⇐ (send ch_v511 s_v509) in
    let ch_v513 ⇐ (send ch_v512 false) in close ch_v513

program digits_i36 : (list_d6‹??76, U› ??77) =
  (cons_c11‹??110, ??109›
    "0"
    (cons_c11‹??107, ??106›
      "1"
      (cons_c11‹??104, ??103›
        "2"
        (cons_c11‹??101, ??100›
          "3"
          (cons_c11‹??98, ??97›
            "4"
            (cons_c11‹??95, ??94›
              "5"
              (cons_c11‹??92, ??91›
                "6"
                (cons_c11‹??89, ??88›
                  "7"
                  (cons_c11‹??86, ??85›
                    "8"
                    (cons_c11‹??83, ??82› "9" nil_c10‹??80, ??79›))))))))))

program get_at_i37 :
  ∀ {A_v514 : U} →
    nat → (list_d6‹??111, U› A_v514) → A_v514 → A_v514
=
  fn {A_v518 : U} (n_v519 : nat) (xs_v520 : (list_d6‹??111, U› A_v518))
     (a_v521 : A_v518) ⇒
    match n_v519 as __v522 in ??112 with
    | O ⇒
      match xs_v520 as __v523 in ??115 with
      | nil_c10  ⇒ a_v521 | cons_c11 x_v524 __v525 ⇒ x_v524
      end
    | S n_v526 ⇒
      match xs_v520 as __v527 in ??113 with
      | nil_c10  ⇒ a_v521
      | cons_c11 __v528 xs_v529 ⇒ (get_at_i37 ??114 n_v526 xs_v529 a_v521)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v531 : nat) ⇒
    (get_at_i37 ??116 n_v531 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v533 : nat) ⇒
    let s_v534 = (string_of_digit_i38 (modn_i16 n_v533 10)) in
    let n_v535 = (divn_i15 n_v533 10) in
    match (ltn_i6 0 n_v535) as __v536 in ??117 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v535) s_v534)
    | false ⇒ s_v534
    end

program digit_of_char_i40 : char_d3 → (option_d5‹??118, L› nat) =
  fn (c_v538 : char_d3) ⇒
    match (eqc_i17 c_v538 '0') as __v539 in ??119 with
    | true ⇒ (Some_c9‹??161, ??160› 0)
    | false ⇒
      match (eqc_i17 c_v538 '1') as __v540 in ??120 with
      | true ⇒ (Some_c9‹??158, ??157› 1)
      | false ⇒
        match (eqc_i17 c_v538 '2') as __v541 in ??121 with
        | true ⇒ (Some_c9‹??155, ??154› 2)
        | false ⇒
          match (eqc_i17 c_v538 '3') as __v542 in ??122 with
          | true ⇒ (Some_c9‹??152, ??151› 3)
          | false ⇒
            match (eqc_i17 c_v538 '4') as __v543 in ??123 with
            | true ⇒ (Some_c9‹??149, ??148› 4)
            | false ⇒
              match (eqc_i17 c_v538 '5') as __v544 in ??124 with
              | true ⇒ (Some_c9‹??146, ??145› 5)
              | false ⇒
                match (eqc_i17 c_v538 '6') as __v545 in ??125 with
                | true ⇒ (Some_c9‹??143, ??142› 6)
                | false ⇒
                  match (eqc_i17 c_v538 '7') as __v546 in ??126 with
                  | true ⇒ (Some_c9‹??140, ??139› 7)
                  | false ⇒
                    match (eqc_i17 c_v538 '8') as __v547 in ??127 with
                    | true ⇒ (Some_c9‹??137, ??136› 8)
                    | false ⇒
                      match (eqc_i17 c_v538 '9') as __v548 in ??128 with
                      | true ⇒ (Some_c9‹??134, ??133› 9)
                      | false ⇒ None_c8‹??131, ??130›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹??162, L› nat)
=
  fn (s_v551 : string_d4) (acc_v552 : nat) ⇒
    match s_v551 as __v553 in ??163 with
    | EmptyString_c6  ⇒ (Some_c9‹??170, ??169› acc_v552)
    | String_c7 c_v554 s_v555 ⇒
      match (digit_of_char_i40 c_v554) as __v556 in ??164 with
      | None_c8  ⇒ None_c8‹??167, ??166›
      | Some_c9 n_v557 ⇒
        (nat_of_string_loop_i41
          s_v555 (addn_i12 (muln_i14 acc_v552 10) n_v557))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹??171, L› nat) =
  fn (s_v559 : string_d4) ⇒ (nat_of_string_loop_i41 s_v559 0)

logical inductive uniq_d7 ‹s_s560›
  (A_v561 : Type‹s_s560›) (m_v562 : A_v561) : U
=
| Uniq_c12 of
    ‹s_s563› (A_v564 : Type‹s_s563›) (m_v565 : A_v564)
    (x_v566 : A_v564) {__v567 : m_v565 ≡ x_v566}
    : (uniq_d7‹s_s563› A_v564 m_v565)

program ex_i43 : {(uniq_d7‹??174› ??173 1)} → string_d4 =
  fn {e_v569 : (uniq_d7‹??174› ??173 1)} ⇒
    match e_v569 as __v570 in ??175 with
    | Uniq_c12 x_v571 __v572 ⇒ (cats_i19 "hello" "world")
    end

program main_i44 : IO unit‹U› =
  let s_v573 = (ex_i43 (Uniq_c12‹??179› 1 refl ??176)) in
  (print_i34 s_v573)

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v9905 : bool) (b2_v9906 : bool) ⇒
    match b1_v9905 as __v9907 in bool with
    | true ⇒ b2_v9906 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v9910 : bool) (b2_v9911 : bool) ⇒
    match b1_v9910 as __v9912 in bool with
    | true ⇒ true | false ⇒ b2_v9911
    end

program notb_i3 : bool → bool =
  fn (b_v9914 : bool) ⇒
    match b_v9914 as __v9915 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v9918 : bool) (b2_v9919 : bool) ⇒
    match b1_v9918 as __v9920 in order_d1 with
    | true ⇒
      match b2_v9919 as __v9921 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v9919 as __v9922 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v9925 : nat) (y_v9926 : nat) ⇒
    match x_v9925 as __v9927 in bool with
    | O ⇒ true
    | S x_v9928 ⇒
      match y_v9926 as __v9929 in bool with
      | O ⇒ false | S y_v9930 ⇒ (lten_i5 x_v9928 y_v9930)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v9933 : nat) (y_v9934 : nat) ⇒ (lten_i5 x_v9933.+1 y_v9934)

program gten_i7 : nat → nat → bool =
  fn (x_v9937 : nat) (y_v9938 : nat) ⇒ (lten_i5 y_v9938 x_v9937)

program gtn_i8 : nat → nat → bool =
  fn (x_v9941 : nat) (y_v9942 : nat) ⇒ (ltn_i6 y_v9942 x_v9941)

program eqn_i9 : nat → nat → bool =
  fn (x_v9945 : nat) (y_v9946 : nat) ⇒
    match x_v9945 as __v9947 in bool with
    | O ⇒
      match y_v9946 as __v9948 in bool with
      | O ⇒ true | S __v9949 ⇒ false
      end
    | S x_v9950 ⇒
      match y_v9946 as __v9951 in bool with
      | O ⇒ false | S y_v9952 ⇒ (eqn_i9 x_v9950 y_v9952)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v9955 : nat) (n2_v9956 : nat) ⇒
    match n1_v9955 as __v9957 in order_d1 with
    | O ⇒
      match n2_v9956 as __v9958 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v9959 ⇒ LT_c1‹›
      end
    | S n1_v9960 ⇒
      match n2_v9956 as __v9961 in order_d1 with
      | O ⇒ GT_c2‹› | S n2_v9962 ⇒ (comparen_i10 n1_v9960 n2_v9962)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v9964 : nat) ⇒
    match x_v9964 as __v9965 in nat with
    | O ⇒ 0 | S x_v9966 ⇒ x_v9966
    end

program addn_i12 : nat → nat → nat =
  fn (x_v9969 : nat) (y_v9970 : nat) ⇒
    match x_v9969 as __v9971 in nat with
    | O ⇒ y_v9970 | S x_v9972 ⇒ (addn_i12 x_v9972 y_v9970).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v9975 : nat) (y_v9976 : nat) ⇒
    match y_v9976 as __v9977 in nat with
    | O ⇒ x_v9975 | S y_v9978 ⇒ (subn_i13 (pred_i11 x_v9975) y_v9978)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v9981 : nat) (y_v9982 : nat) ⇒
    match x_v9981 as __v9983 in nat with
    | O ⇒ 0 | S x_v9984 ⇒ (addn_i12 y_v9982 (muln_i14 x_v9984 y_v9982))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v9987 : nat) (y_v9988 : nat) ⇒
    match (ltn_i6 x_v9987 y_v9988) as __v9989 in nat with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v9987 y_v9988) y_v9988).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v9992 : nat) (y_v9993 : nat) ⇒
    (subn_i13 x_v9992 (muln_i14 (divn_i15 x_v9992 y_v9993) y_v9993))

inductive between_d2 (lower_v9994 : nat) (upper_v9995 : nat) : L =
| Between_c4 of
    (lower_v9996 : nat) (upper_v9997 : nat) (n_v9998 : nat)
    {pf1_v9999 : (lten_i5 lower_v9996 n_v9998) ≡ true}
    {pf2_v10000 : (lten_i5 n_v9998 upper_v9997) ≡ true}
    : (between_d2 lower_v9996 upper_v9997)

inductive char_d3 : U =
| Char_c5 of (n_v10001 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v10004 : char_d3) (c2_v10005 : char_d3) ⇒
    match c1_v10004 as __v10006 in bool with
    | Char_c5 n1_v10007 ⇒
      match c2_v10005 as __v10008 in bool with
      | Char_c5 n2_v10009 ⇒ (eqn_i9 n1_v10007 n2_v10009)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v10012 : char_d3) (c2_v10013 : char_d3) ⇒
    match c1_v10012 as __v10014 in order_d1 with
    | Char_c5 n1_v10015 ⇒
      match c2_v10013 as __v10016 in order_d1 with
      | Char_c5 n2_v10017 ⇒ (comparen_i10 n1_v10015 n2_v10017)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v10018 : char_d3) (s_v10019 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v10022 : string_d4) (s2_v10023 : string_d4) ⇒
    match s1_v10022 as __v10024 in string_d4 with
    | EmptyString_c6  ⇒ s2_v10023
    | String_c7 c_v10025 s1_v10026 ⇒
      (String_c7‹› c_v10025 (cats_i19 s1_v10026 s2_v10023))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v10028 : string_d4) ⇒
    match s_v10028 as __v10029 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v10030 s_v10031 ⇒ (strlen_i20 s_v10031).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v10034 : string_d4) (s2_v10035 : string_d4) ⇒
    match s1_v10034 as __v10036 in bool with
    | EmptyString_c6  ⇒
      match s2_v10035 as __v10037 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v10038 __v10039 ⇒ false
      end
    | String_c7 c1_v10040 s1_v10041 ⇒
      match s2_v10035 as __v10042 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v10043 s2_v10044 ⇒
        (andb_i1 (eqc_i17 c1_v10040 c2_v10043) (eqs_i21 s1_v10041 s2_v10044))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v10047 : string_d4) (s2_v10048 : string_d4) ⇒
    match s1_v10047 as __v10049 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v10048 as __v10050 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v10051 __v10052 ⇒ LT_c1‹›
      end
    | String_c7 c1_v10053 s1_v10054 ⇒
      match s2_v10048 as __v10055 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v10056 s2_v10057 ⇒
        match (comparec_i18 c1_v10053 c2_v10056) as __v10058 in order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v10054 s2_v10057)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s10059, t_s10060›
  (A_v10061 : Type‹s_s10059›) : Type‹t_s10060›
=
| None_c8 of
    ‹s_s10062, t_s10063› (A_v10064 : Type‹s_s10062›)
    : (option_d5‹s_s10062, t_s10063› A_v10064)
| Some_c9 of
    ‹s_s10065, t_s10066› (A_v10067 : Type‹s_s10065›)
    (x_v10068 : A_v10067) : (option_d5‹s_s10065, t_s10066› A_v10067)

program and_then_i23 ‹s_s10069, r_s10070, t_s10071› :
  ∀ {A_v10072 : Type‹s_s10069›} →
    ∀ {B_v10073 : Type‹r_s10070›} →
      (option_d5‹s_s10069, t_s10071› A_v10072) →
        A_v10072 → (option_d5‹r_s10070, t_s10071› B_v10073) ⊸
          (option_d5‹r_s10070, t_s10071› B_v10073)
=
  fn {A_v10077 : Type‹s_s10069›} {B_v10078 : Type‹r_s10070›}
     (opt_v10079 : (option_d5‹s_s10069, t_s10071› A_v10077)) ⇒
    ln (f_v10080 : A_v10077 → (option_d5‹r_s10070, t_s10071› B_v10078)) ⇒
      match opt_v10079 as __v10082 in
        (option_d5‹r_s10070, t_s10071› B_v10078) with
      | None_c8  ⇒ None_c8‹r_s10070, t_s10071›
      | Some_c9 x_v10083 ⇒ (f_v10080 x_v10083)
      end

inductive list_d6 ‹s_s10084, t_s10085›
  (A_v10086 : Type‹s_s10084›) : Type‹t_s10085›
=
| nil_c10 of
    ‹s_s10087, t_s10088› (A_v10089 : Type‹s_s10087›)
    : (list_d6‹s_s10087, t_s10088› A_v10089)
| cons_c11 of
    ‹s_s10090, t_s10091› (A_v10092 : Type‹s_s10090›)
    (hd_v10093 : A_v10092)
    (tl_v10094 : (list_d6‹s_s10090, t_s10091› A_v10092))
    : (list_d6‹s_s10090, t_s10091› A_v10092)

logical llen_i24 ‹s_s10095, t_s10096› :
  ∀ (A_v10097 : Type‹s_s10095›) →
    (list_d6‹s_s10095, t_s10096› A_v10097) → nat
=
  fn (A_v10099 : Type‹s_s10095›)
     (xs_v10100 : (list_d6‹s_s10095, t_s10096› A_v10099)) ⇒
    match xs_v10100 as __v10101 in nat with
    | nil_c10  ⇒ 0
    | cons_c11 x_v10102 xs_v10103 ⇒
      (llen_i24‹s_s10095, t_s10096› A_v10099 xs_v10103).+1
    end

program len_i25 ‹s_s10104, t_s10105› :
  ∀ {A_v10106 : Type‹s_s10104›} →
    (list_d6‹s_s10104, t_s10105› A_v10106) →
      nat ⊗ (list_d6‹s_s10104, t_s10105› A_v10106)
=
  fn {A_v10109 : Type‹s_s10104›}
     (xs_v10110 : (list_d6‹s_s10104, t_s10105› A_v10109)) ⇒
    match xs_v10110 as __v10111 in
      nat ⊗ (list_d6‹s_s10104, t_s10105› A_v10109) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s10104, t_s10105›⟩
    | cons_c11 x_v10113 xs_v10114 ⇒
      match (len_i25‹s_s10104, t_s10105› A_v10109 xs_v10114) as __v10115 in
        nat ⊗ (list_d6‹s_s10104, t_s10105› A_v10109) with
      | ⟨n_v10117, xs_v10118⟩ ⇒
        ⟨n_v10117.+1, (cons_c11‹s_s10104, t_s10105› x_v10113 xs_v10118)⟩
      end
    end

program append_i26 ‹s_s10119, t_s10120› :
  ∀ {A_v10121 : Type‹s_s10119›} →
    (list_d6‹s_s10119, t_s10120› A_v10121) →
      (list_d6‹s_s10119, t_s10120› A_v10121) ⊸
        (list_d6‹s_s10119, t_s10120› A_v10121)
=
  fn {A_v10124 : Type‹s_s10119›}
     (xs_v10125 : (list_d6‹s_s10119, t_s10120› A_v10124)) ⇒
    ln (ys_v10126 : (list_d6‹s_s10119, t_s10120› A_v10124)) ⇒
      match xs_v10125 as __v10127 in
        (list_d6‹s_s10119, t_s10120› A_v10124) with
      | nil_c10  ⇒ ys_v10126
      | cons_c11 x_v10128 xs_v10129 ⇒
        (cons_c11‹s_s10119, t_s10120›
          x_v10128
          (append_i26‹s_s10119, t_s10120› A_v10124 xs_v10129 ys_v10126))
      end

logical stdin_rec_i27 : unit‹U› → proto =
  fn (__v10131 : unit‹U›) ⇒
    ⇑(b_v10132 : bool) ⇒
      match b_v10132 as __v10133 in proto with
      | true ⇒ ⇓(__v10134 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit‹U› → proto =
  fn (__v10136 : unit‹U›) ⇒
    ⇑(b_v10137 : bool) ⇒
      match b_v10137 as __v10138 in proto with
      | true ⇒ ⇑(__v10139 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit‹U› → proto =
  fn (__v10141 : unit‹U›) ⇒
    ⇑(b_v10142 : bool) ⇒
      match b_v10142 as __v10143 in proto with
      | true ⇒ ⇑(__v10144 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit‹U› → IO string_d4 =
  fn (__v10146 : unit‹U›) ⇒
    let ch_v10147 ⇐ open stdin in
    let ch_v10148 ⇐ (send ch_v10147 true) in
    let __v10149 ⇐ recv ch_v10148 in
    match __v10149 as __v10150 in IO string_d4 with
    | ⟨s_v10151, ch_v10152⟩ ⇒
      let ch_v10153 ⇐ (send ch_v10152 false) in
      let __v10154 ⇐ close ch_v10153 in return s_v10151
    end

program print_i34 : string_d4 → IO unit‹U› =
  fn (s_v10156 : string_d4) ⇒
    let ch_v10157 ⇐ open stdout in
    let ch_v10158 ⇐ (send ch_v10157 true) in
    let ch_v10159 ⇐ (send ch_v10158 s_v10156) in
    let ch_v10160 ⇐ (send ch_v10159 false) in close ch_v10160

program prerr_i35 : string_d4 → IO unit‹U› =
  fn (s_v10162 : string_d4) ⇒
    let ch_v10163 ⇐ open stderr in
    let ch_v10164 ⇐ (send ch_v10163 true) in
    let ch_v10165 ⇐ (send ch_v10164 s_v10162) in
    let ch_v10166 ⇐ (send ch_v10165 false) in close ch_v10166

program digits_i36 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i37 :
  ∀ {A_v10167 : U} →
    nat → (list_d6‹U, U› A_v10167) → A_v10167 → A_v10167
=
  fn {A_v10171 : U} (n_v10172 : nat)
     (xs_v10173 : (list_d6‹U, U› A_v10171)) (a_v10174 : A_v10171) ⇒
    match n_v10172 as __v10175 in A_v10171 with
    | O ⇒
      match xs_v10173 as __v10176 in A_v10171 with
      | nil_c10  ⇒ a_v10174 | cons_c11 x_v10177 __v10178 ⇒ x_v10177
      end
    | S n_v10179 ⇒
      match xs_v10173 as __v10180 in A_v10171 with
      | nil_c10  ⇒ a_v10174
      | cons_c11 __v10181 xs_v10182 ⇒
        (get_at_i37 A_v10171 n_v10179 xs_v10182 a_v10174)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v10184 : nat) ⇒
    (get_at_i37 string_d4 n_v10184 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v10186 : nat) ⇒
    let s_v10187 = (string_of_digit_i38 (modn_i16 n_v10186 10)) in
    let n_v10188 = (divn_i15 n_v10186 10) in
    match (ltn_i6 0 n_v10188) as __v10189 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v10188) s_v10187)
    | false ⇒ s_v10187
    end

program digit_of_char_i40 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v10191 : char_d3) ⇒
    match (eqc_i17 c_v10191 '0') as __v10192 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v10191 '1') as __v10193 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v10191 '2') as __v10194 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v10191 '3') as __v10195 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v10191 '4') as __v10196 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v10191 '5') as __v10197 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v10191 '6') as __v10198 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v10191 '7') as __v10199 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v10191 '8') as __v10200 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v10191 '9') as __v10201 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v10204 : string_d4) (acc_v10205 : nat) ⇒
    match s_v10204 as __v10206 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v10205)
    | String_c7 c_v10207 s_v10208 ⇒
      match (digit_of_char_i40 c_v10207) as __v10209 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v10210 ⇒
        (nat_of_string_loop_i41
          s_v10208 (addn_i12 (muln_i14 acc_v10205 10) n_v10210))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v10212 : string_d4) ⇒ (nat_of_string_loop_i41 s_v10212 0)

logical inductive uniq_d7 ‹s_s10213›
  (A_v10214 : Type‹s_s10213›) (m_v10215 : A_v10214) : U
=
| Uniq_c12 of
    ‹s_s10216› (A_v10217 : Type‹s_s10216›) (m_v10218 : A_v10217)
    (x_v10219 : A_v10217) {__v10220 : m_v10218 ≡ x_v10219}
    : (uniq_d7‹s_s10216› A_v10217 m_v10218)

program ex_i43 : {(uniq_d7‹U› nat 1)} → string_d4 =
  fn {e_v10222 : (uniq_d7‹U› nat 1)} ⇒
    match e_v10222 as __v10223 in string_d4 with
    | Uniq_c12 x_v10224 __v10225 ⇒ (cats_i19 "hello" "world")
    end

program main_i44 : IO unit‹U› =
  let s_v10226 = (ex_i43 (Uniq_c12‹U› 1 refl 1)) in (print_i34 s_v10226)

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v10703 b2_v10704 ⇒
    match b1_v10703 with
    | true ⇒ b2_v10704 | false ⇒ false
    end

def orb_i2 =
  fn b1_v10705 b2_v10706 ⇒
    match b1_v10705 with
    | true ⇒ true | false ⇒ b2_v10706
    end

def notb_i3 =
  fn b_v10707 ⇒ match b_v10707 with
                  | true ⇒ false | false ⇒ true
                  end

def compareb_i4 =
  fn b1_v10708 b2_v10709 ⇒
    match b1_v10708 with
    | true ⇒ match b2_v10709 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v10709 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v10710 y_v10711 ⇒
    match x_v10710 with
    | O ⇒ true
    | S x_v10712 ⇒
      match y_v10711 with
      | O ⇒ false | S y_v10713 ⇒ ((lten_i5 x_v10712) y_v10713)
      end
    end

def ltn_i6 = fn x_v10714 y_v10715 ⇒ ((lten_i5 x_v10714.+1) y_v10715)

def gten_i7 = fn x_v10716 y_v10717 ⇒ ((lten_i5 y_v10717) x_v10716)

def gtn_i8 = fn x_v10718 y_v10719 ⇒ ((ltn_i6 y_v10719) x_v10718)

def eqn_i9 =
  fn x_v10720 y_v10721 ⇒
    match x_v10720 with
    | O ⇒ match y_v10721 with
            | O ⇒ true | S __v10722 ⇒ false
            end
    | S x_v10723 ⇒
      match y_v10721 with
      | O ⇒ false | S y_v10724 ⇒ ((eqn_i9 x_v10723) y_v10724)
      end
    end

def comparen_i10 =
  fn n1_v10725 n2_v10726 ⇒
    match n1_v10725 with
    | O ⇒ match n2_v10726 with
            | O ⇒ EQ_c3 | S __v10727 ⇒ LT_c1
            end
    | S n1_v10728 ⇒
      match n2_v10726 with
      | O ⇒ GT_c2 | S n2_v10729 ⇒ ((comparen_i10 n1_v10728) n2_v10729)
      end
    end

def pred_i11 =
  fn x_v10730 ⇒ match x_v10730 with
                  | O ⇒ 0 | S x_v10731 ⇒ x_v10731
                  end

def addn_i12 =
  fn x_v10732 y_v10733 ⇒
    match x_v10732 with
    | O ⇒ y_v10733 | S x_v10734 ⇒ ((addn_i12 x_v10734) y_v10733).+1
    end

def subn_i13 =
  fn x_v10735 y_v10736 ⇒
    match y_v10736 with
    | O ⇒ x_v10735
    | S y_v10737 ⇒ ((subn_i13 (pred_i11 x_v10735)) y_v10737)
    end

def muln_i14 =
  fn x_v10738 y_v10739 ⇒
    match x_v10738 with
    | O ⇒ 0
    | S x_v10740 ⇒ ((addn_i12 y_v10739) ((muln_i14 x_v10740) y_v10739))
    end

def divn_i15 =
  fn x_v10741 y_v10742 ⇒
    match ((ltn_i6 x_v10741) y_v10742) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v10741) y_v10742)) y_v10742).+1
    end

def modn_i16 =
  fn x_v10743 y_v10744 ⇒
    ((subn_i13 x_v10743)
      ((muln_i14 ((divn_i15 x_v10743) y_v10744)) y_v10744))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v10745 c2_v10746 ⇒
    match c1_v10745 with
    | Char_c5 n1_v10747 ⇒
      match c2_v10746 with
      | Char_c5 n2_v10748 ⇒ ((eqn_i9 n1_v10747) n2_v10748)
      end
    end

def comparec_i18 =
  fn c1_v10749 c2_v10750 ⇒
    match c1_v10749 with
    | Char_c5 n1_v10751 ⇒
      match c2_v10750 with
      | Char_c5 n2_v10752 ⇒ ((comparen_i10 n1_v10751) n2_v10752)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v10753 s2_v10754 ⇒
    match s1_v10753 with
    | EmptyString_c6  ⇒ s2_v10754
    | String_c7 c_v10755 s1_v10756 ⇒
      (String_c7 c_v10755 ((cats_i19 s1_v10756) s2_v10754))
    end

def strlen_i20 =
  fn s_v10757 ⇒
    match s_v10757 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v10758 s_v10759 ⇒ (strlen_i20 s_v10759).+1
    end

def eqs_i21 =
  fn s1_v10760 s2_v10761 ⇒
    match s1_v10760 with
    | EmptyString_c6  ⇒
      match s2_v10761 with
      | EmptyString_c6  ⇒ true | String_c7 __v10762 __v10763 ⇒ false
      end
    | String_c7 c1_v10764 s1_v10765 ⇒
      match s2_v10761 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v10766 s2_v10767 ⇒
        ((andb_i1 ((eqc_i17 c1_v10764) c2_v10766))
          ((eqs_i21 s1_v10765) s2_v10767))
      end
    end

def compares_i22 =
  fn s1_v10768 s2_v10769 ⇒
    match s1_v10768 with
    | EmptyString_c6  ⇒
      match s2_v10769 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v10770 __v10771 ⇒ LT_c1
      end
    | String_c7 c1_v10772 s1_v10773 ⇒
      match s2_v10769 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v10774 s2_v10775 ⇒
        match ((comparec_i18 c1_v10772) c2_v10774) with
        | EQ_c3  ⇒ ((compares_i22 s1_v10773) s2_v10775) | LT_c1  ⇒ LT_c1
        | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d11 =
| NoneUU_c19 of size(0) | SomeUU_c20 of size(1)

data optionUL_d10 =
| NoneUL_c17 of size(0) | SomeUL_c18 of size(1)

data optionLU_d9 =
| NoneLU_c15 of size(0)

data optionLL_d8 =
| NoneLL_c13 of size(0) | SomeLL_c14 of size(1)

def and_thenUUU_i52 =
  fn A_v10776 B_v10777 opt_v10778 ⇒
    ln f_v10779 ⇒
      match opt_v10778 with
      | NoneUU_c19  ⇒ NoneUU_c19
      | SomeUU_c20 x_v10780 ⇒ (f_v10779 x_v10780)
      end

def and_thenUUL_i51 =
  fn A_v10781 B_v10782 opt_v10783 ⇒
    ln f_v10784 ⇒
      match opt_v10783 with
      | NoneUL_c17  ⇒ NoneUL_c17
      | SomeUL_c18 x_v10785 ⇒ (f_v10784 x_v10785)
      end

def and_thenULU_i50 =
  fn A_v10786 B_v10787 opt_v10788 ⇒
    ln f_v10789 ⇒
      match opt_v10788 with
      | NoneUU_c19  ⇒ NoneLU_c15
      | SomeUU_c20 x_v10790 ⇒ (f_v10789 x_v10790)
      end

def and_thenULL_i49 =
  fn A_v10791 B_v10792 opt_v10793 ⇒
    ln f_v10794 ⇒
      match opt_v10793 with
      | NoneUL_c17  ⇒ NoneLL_c13
      | SomeUL_c18 x_v10795 ⇒ (f_v10794 x_v10795)
      end

def and_thenLUL_i47 =
  fn A_v10796 B_v10797 opt_v10798 ⇒
    ln f_v10799 ⇒
      match opt_v10798 with
      | NoneLL_c13  ⇒ NoneUL_c17
      | SomeLL_c14 x_v10800 ⇒ (f_v10799 x_v10800)
      end

def and_thenLLL_i45 =
  fn A_v10801 B_v10802 opt_v10803 ⇒
    ln f_v10804 ⇒
      match opt_v10803 with
      | NoneLL_c13  ⇒ NoneLL_c13
      | SomeLL_c14 x_v10805 ⇒ (f_v10804 x_v10805)
      end

data listUU_d15 =
| nilUU_c27 of size(0) | consUU_c28 of size(2)

data listUL_d14 =
| nilUL_c25 of size(0) | consUL_c26 of size(2)

data listLU_d13 =
| nilLU_c23 of size(0)

data listLL_d12 =
| nilLL_c21 of size(0) | consLL_c22 of size(2)

def lenUU_i60 =
  fn A_v10806 xs_v10807 ⇒
    match xs_v10807 with
    | nilUU_c27  ⇒ (0, nilUU_c27)
    | consUU_c28 x_v10808 xs_v10809 ⇒
      match ((lenUU_i60 NULL) xs_v10809) with
      | (n_v10810, xs_v10811) ⇒
        (n_v10810.+1, (consUU_c28 x_v10808 xs_v10811))
      end
    end

def lenUL_i59 =
  fn A_v10812 xs_v10813 ⇒
    match xs_v10813 with
    | nilUL_c25  ⇒ (0, nilUL_c25)
    | consUL_c26 x_v10814 xs_v10815 ⇒
      match ((lenUL_i59 NULL) xs_v10815) with
      | (n_v10816, xs_v10817) ⇒
        (n_v10816.+1, (consUL_c26 x_v10814 xs_v10817))
      end
    end

def lenLL_i57 =
  fn A_v10818 xs_v10819 ⇒
    match xs_v10819 with
    | nilLL_c21  ⇒ (0, nilLL_c21)
    | consLL_c22 x_v10820 xs_v10821 ⇒
      match ((lenLL_i57 NULL) xs_v10821) with
      | (n_v10822, xs_v10823) ⇒
        (n_v10822.+1, (consLL_c22 x_v10820 xs_v10823))
      end
    end

def appendUU_i64 =
  fn A_v10824 xs_v10825 ⇒
    ln ys_v10826 ⇒
      match xs_v10825 with
      | nilUU_c27  ⇒ ys_v10826
      | consUU_c28 x_v10827 xs_v10828 ⇒
        (consUU_c28 x_v10827 (((appendUU_i64 NULL) xs_v10828) ys_v10826))
      end

def appendUL_i63 =
  fn A_v10829 xs_v10830 ⇒
    ln ys_v10831 ⇒
      match xs_v10830 with
      | nilUL_c25  ⇒ ys_v10831
      | consUL_c26 x_v10832 xs_v10833 ⇒
        (consUL_c26 x_v10832 (((appendUL_i63 NULL) xs_v10833) ys_v10831))
      end

def appendLL_i61 =
  fn A_v10834 xs_v10835 ⇒
    ln ys_v10836 ⇒
      match xs_v10835 with
      | nilLL_c21  ⇒ ys_v10836
      | consLL_c22 x_v10837 xs_v10838 ⇒
        (consLL_c22 x_v10837 (((appendLL_i61 NULL) xs_v10838) ys_v10836))
      end

def readline_i33 =
  fn __v10839 ⇒
    let ch_v10840 ⇐ open stdin in
    let ch_v10841 ⇐ (send ch_v10840 true) in
    let __v10842 ⇐ recv ch_v10841 in
    match __v10842 with
    | (s_v10843, ch_v10844) ⇒
      let ch_v10845 ⇐ (send ch_v10844 false) in
      let __v10846 ⇐ close⇑ ch_v10845 in return s_v10843
    end

def print_i34 =
  fn s_v10847 ⇒
    let ch_v10848 ⇐ open stdout in
    let ch_v10849 ⇐ (send ch_v10848 true) in
    let ch_v10850 ⇐ (send ch_v10849 s_v10847) in
    let ch_v10851 ⇐ (send ch_v10850 false) in close⇑ ch_v10851

def prerr_i35 =
  fn s_v10852 ⇒
    let ch_v10853 ⇐ open stderr in
    let ch_v10854 ⇐ (send ch_v10853 true) in
    let ch_v10855 ⇐ (send ch_v10854 s_v10852) in
    let ch_v10856 ⇐ (send ch_v10855 false) in close⇑ ch_v10856

def digits_i36 =
  (consUU_c28
    "0"
    (consUU_c28
      "1"
      (consUU_c28
        "2"
        (consUU_c28
          "3"
          (consUU_c28
            "4"
            (consUU_c28
              "5"
              (consUU_c28
                "6"
                (consUU_c28 "7" (consUU_c28 "8" (consUU_c28 "9" nilUU_c27))))))))))

def get_at_i37 =
  fn A_v10857 n_v10858 xs_v10859 a_v10860 ⇒
    match n_v10858 with
    | O ⇒
      match xs_v10859 with
      | nilUU_c27  ⇒ a_v10860 | consUU_c28 x_v10861 __v10862 ⇒ x_v10861
      end
    | S n_v10863 ⇒
      match xs_v10859 with
      | nilUU_c27  ⇒ a_v10860
      | consUU_c28 __v10864 xs_v10865 ⇒
        ((((get_at_i37 NULL) n_v10863) xs_v10865) a_v10860)
      end
    end

def string_of_digit_i38 =
  fn n_v10866 ⇒ ((((get_at_i37 NULL) n_v10866) digits_i36) EmptyString_c6)

def string_of_nat_i39 =
  fn n_v10867 ⇒
    let s_v10868 = (string_of_digit_i38 ((modn_i16 n_v10867) 10)) in
    let n_v10869 = ((divn_i15 n_v10867) 10) in
    match ((ltn_i6 0) n_v10869) with
    | true ⇒ ((cats_i19 (string_of_nat_i39 n_v10869)) s_v10868)
    | false ⇒ s_v10868
    end

def digit_of_char_i40 =
  fn c_v10870 ⇒
    match ((eqc_i17 c_v10870) '0') with
    | true ⇒ (SomeUL_c18 0)
    | false ⇒
      match ((eqc_i17 c_v10870) '1') with
      | true ⇒ (SomeUL_c18 1)
      | false ⇒
        match ((eqc_i17 c_v10870) '2') with
        | true ⇒ (SomeUL_c18 2)
        | false ⇒
          match ((eqc_i17 c_v10870) '3') with
          | true ⇒ (SomeUL_c18 3)
          | false ⇒
            match ((eqc_i17 c_v10870) '4') with
            | true ⇒ (SomeUL_c18 4)
            | false ⇒
              match ((eqc_i17 c_v10870) '5') with
              | true ⇒ (SomeUL_c18 5)
              | false ⇒
                match ((eqc_i17 c_v10870) '6') with
                | true ⇒ (SomeUL_c18 6)
                | false ⇒
                  match ((eqc_i17 c_v10870) '7') with
                  | true ⇒ (SomeUL_c18 7)
                  | false ⇒
                    match ((eqc_i17 c_v10870) '8') with
                    | true ⇒ (SomeUL_c18 8)
                    | false ⇒
                      match ((eqc_i17 c_v10870) '9') with
                      | true ⇒ (SomeUL_c18 9) | false ⇒ NoneUL_c17
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i41 =
  fn s_v10871 acc_v10872 ⇒
    match s_v10871 with
    | EmptyString_c6  ⇒ (SomeUL_c18 acc_v10872)
    | String_c7 c_v10873 s_v10874 ⇒
      match (digit_of_char_i40 c_v10873) with
      | NoneUL_c17  ⇒ NoneUL_c17
      | SomeUL_c18 n_v10875 ⇒
        ((nat_of_string_loop_i41 s_v10874)
          ((addn_i12 ((muln_i14 acc_v10872) 10)) n_v10875))
      end
    end

def nat_of_string_i42 = fn s_v10876 ⇒ ((nat_of_string_loop_i41 s_v10876) 0)

data uniqU_d17 =
| UniqU_c30 of size(2)

data uniqL_d16 =
| UniqL_c29 of size(2)

def ex_i43 =
  fn e_v10877 ⇒
    match NULL with
    | UniqU_c30 x_v10878 __v10879 ⇒ ((cats_i19 "hello") "world")
    end

main = let s_v10880 = (ex_i43 NULL) in (print_i34 s_v10880)

trans12 success--------------------------

fun andb_i1(b1_v11100, b2_v11101) = if b1_v11100 then
                                      b2_v11101
                                    else
                                      0

val andbclo_i65 = fn b1_v11102 b2_v11103 ⇒ andb_i1(b1_v11102, b2_v11103)

fun orb_i2(b1_v11104, b2_v11105) = if b1_v11104 then
                                     1
                                   else
                                     b2_v11105

val orbclo_i66 = fn b1_v11106 b2_v11107 ⇒ orb_i2(b1_v11106, b2_v11107)

fun notb_i3(b_v11108) = if b_v11108 then
                          0
                        else
                          1

val notbclo_i67 = fn b_v11109 ⇒ notb_i3(b_v11109)

fun compareb_i4(b1_v11110, b2_v11111) =
  if b1_v11110 then
    if b2_v11111 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v11111 then
      LT_c1
    else
      EQ_c3

val comparebclo_i68 =
  fn b1_v11112 b2_v11113 ⇒ compareb_i4(b1_v11112, b2_v11113)

fun lten_i5(x_v11114, y_v11115) =
  let __v11116 = x_v11114 in
  if __v11116 then
    let x_v11117 = __v11116.-1 in
    let __v11118 = y_v11115 in
    if __v11118 then
      let y_v11119 = __v11118.-1 in lten_i5(x_v11117, y_v11119)
    else
      0
  else
    1

val ltenclo_i69 = fn x_v11120 y_v11121 ⇒ lten_i5(x_v11120, y_v11121)

fun ltn_i6(x_v11122, y_v11123) = lten_i5(x_v11122.+1, y_v11123)

val ltnclo_i70 = fn x_v11124 y_v11125 ⇒ ltn_i6(x_v11124, y_v11125)

fun gten_i7(x_v11126, y_v11127) = lten_i5(y_v11127, x_v11126)

val gtenclo_i71 = fn x_v11128 y_v11129 ⇒ gten_i7(x_v11128, y_v11129)

fun gtn_i8(x_v11130, y_v11131) = ltn_i6(y_v11131, x_v11130)

val gtnclo_i72 = fn x_v11132 y_v11133 ⇒ gtn_i8(x_v11132, y_v11133)

fun eqn_i9(x_v11134, y_v11135) =
  let __v11136 = x_v11134 in
  if __v11136 then
    let x_v11137 = __v11136.-1 in
    let __v11138 = y_v11135 in
    if __v11138 then
      let y_v11139 = __v11138.-1 in eqn_i9(x_v11137, y_v11139)
    else
      0
  else
    let __v11140 = y_v11135 in
    if __v11140 then
      let __v11141 = __v11140.-1 in 0
    else
      1

val eqnclo_i73 = fn x_v11142 y_v11143 ⇒ eqn_i9(x_v11142, y_v11143)

fun comparen_i10(n1_v11144, n2_v11145) =
  let __v11146 = n1_v11144 in
  if __v11146 then
    let n1_v11147 = __v11146.-1 in
    let __v11148 = n2_v11145 in
    if __v11148 then
      let n2_v11149 = __v11148.-1 in comparen_i10(n1_v11147, n2_v11149)
    else
      GT_c2
  else
    let __v11150 = n2_v11145 in
    if __v11150 then
      let __v11151 = __v11150.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i74 =
  fn n1_v11152 n2_v11153 ⇒ comparen_i10(n1_v11152, n2_v11153)

fun pred_i11(x_v11154) =
  let __v11155 = x_v11154 in
  if __v11155 then
    let x_v11156 = __v11155.-1 in x_v11156
  else
    0

val predclo_i75 = fn x_v11157 ⇒ pred_i11(x_v11157)

fun addn_i12(x_v11158, y_v11159) =
  let __v11160 = x_v11158 in
  if __v11160 then
    let x_v11161 = __v11160.-1 in addn_i12(x_v11161, y_v11159).+1
  else
    y_v11159

val addnclo_i76 = fn x_v11162 y_v11163 ⇒ addn_i12(x_v11162, y_v11163)

fun subn_i13(x_v11164, y_v11165) =
  let __v11166 = y_v11165 in
  if __v11166 then
    let y_v11167 = __v11166.-1 in subn_i13(pred_i11(x_v11164), y_v11167)
  else
    x_v11164

val subnclo_i77 = fn x_v11168 y_v11169 ⇒ subn_i13(x_v11168, y_v11169)

fun muln_i14(x_v11170, y_v11171) =
  let __v11172 = x_v11170 in
  if __v11172 then
    let x_v11173 = __v11172.-1 in
    addn_i12(y_v11171, muln_i14(x_v11173, y_v11171))
  else
    0

val mulnclo_i78 = fn x_v11174 y_v11175 ⇒ muln_i14(x_v11174, y_v11175)

fun divn_i15(x_v11176, y_v11177) =
  if ltn_i6(x_v11176, y_v11177) then
    0
  else
    divn_i15(subn_i13(x_v11176, y_v11177), y_v11177).+1

val divnclo_i79 = fn x_v11178 y_v11179 ⇒ divn_i15(x_v11178, y_v11179)

fun modn_i16(x_v11180, y_v11181) =
  subn_i13(x_v11180, muln_i14(divn_i15(x_v11180, y_v11181), y_v11181))

val modnclo_i80 = fn x_v11182 y_v11183 ⇒ modn_i16(x_v11182, y_v11183)

fun eqc_i17(c1_v11184, c2_v11185) =
  match c1_v11184 with
  | Char_c5 n1_v11186 ⇒
    match c2_v11185 with
    | Char_c5 n2_v11187 ⇒ eqn_i9(n1_v11186, n2_v11187)
    end
  end

val eqcclo_i81 = fn c1_v11188 c2_v11189 ⇒ eqc_i17(c1_v11188, c2_v11189)

fun comparec_i18(c1_v11190, c2_v11191) =
  match c1_v11190 with
  | Char_c5 n1_v11192 ⇒
    match c2_v11191 with
    | Char_c5 n2_v11193 ⇒ comparen_i10(n1_v11192, n2_v11193)
    end
  end

val comparecclo_i82 =
  fn c1_v11194 c2_v11195 ⇒ comparec_i18(c1_v11194, c2_v11195)

fun cats_i19(s1_v11196, s2_v11197) =
  match s1_v11196 with
  | EmptyString_c6  ⇒ s2_v11197
  | String_c7 c_v11198 s1_v11199 ⇒
    (String_c7 c_v11198 cats_i19(s1_v11199, s2_v11197))
  end

val catsclo_i83 = fn s1_v11200 s2_v11201 ⇒ cats_i19(s1_v11200, s2_v11201)

fun strlen_i20(s_v11202) =
  match s_v11202 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v11203 s_v11204 ⇒ strlen_i20(s_v11204).+1
  end

val strlenclo_i84 = fn s_v11205 ⇒ strlen_i20(s_v11205)

fun eqs_i21(s1_v11206, s2_v11207) =
  match s1_v11206 with
  | EmptyString_c6  ⇒
    match s2_v11207 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v11208 __v11209 ⇒ 0
    end
  | String_c7 c1_v11210 s1_v11211 ⇒
    match s2_v11207 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v11212 s2_v11213 ⇒
      andb_i1(eqc_i17(c1_v11210, c2_v11212), eqs_i21(s1_v11211, s2_v11213))
    end
  end

val eqsclo_i85 = fn s1_v11214 s2_v11215 ⇒ eqs_i21(s1_v11214, s2_v11215)

fun compares_i22(s1_v11216, s2_v11217) =
  match s1_v11216 with
  | EmptyString_c6  ⇒
    match s2_v11217 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v11218 __v11219 ⇒ LT_c1
    end
  | String_c7 c1_v11220 s1_v11221 ⇒
    match s2_v11217 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v11222 s2_v11223 ⇒
      match comparec_i18(c1_v11220, c2_v11222) with
      | EQ_c3  ⇒ compares_i22(s1_v11221, s2_v11223) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i86 =
  fn s1_v11224 s2_v11225 ⇒ compares_i22(s1_v11224, s2_v11225)

fun and_thenUUU_i52(A_v11226, B_v11227, opt_v11228, f_v11229) =
  match opt_v11228 with
  | NoneUU_c19  ⇒ NoneUU_c19 | SomeUU_c20 x_v11230 ⇒ (f_v11229) x_v11230
  end

val and_thenUUUclo_i87 =
  fn A_v11231 B_v11232 opt_v11233 ⇒
    ln f_v11234 ⇒ and_thenUUU_i52(A_v11231, B_v11232, opt_v11233, f_v11234)

fun and_thenUUL_i51(A_v11235, B_v11236, opt_v11237, f_v11238) =
  match opt_v11237 with
  | NoneUL_c17  ⇒ NoneUL_c17 | SomeUL_c18 x_v11239 ⇒ (f_v11238) x_v11239
  end

val and_thenUULclo_i88 =
  fn A_v11240 B_v11241 opt_v11242 ⇒
    ln f_v11243 ⇒ and_thenUUL_i51(A_v11240, B_v11241, opt_v11242, f_v11243)

fun and_thenULU_i50(A_v11244, B_v11245, opt_v11246, f_v11247) =
  match opt_v11246 with
  | NoneUU_c19  ⇒ NoneLU_c15 | SomeUU_c20 x_v11248 ⇒ (f_v11247) x_v11248
  end

val and_thenULUclo_i89 =
  fn A_v11249 B_v11250 opt_v11251 ⇒
    ln f_v11252 ⇒ and_thenULU_i50(A_v11249, B_v11250, opt_v11251, f_v11252)

fun and_thenULL_i49(A_v11253, B_v11254, opt_v11255, f_v11256) =
  match opt_v11255 with
  | NoneUL_c17  ⇒ NoneLL_c13 | SomeUL_c18 x_v11257 ⇒ (f_v11256) x_v11257
  end

val and_thenULLclo_i90 =
  fn A_v11258 B_v11259 opt_v11260 ⇒
    ln f_v11261 ⇒ and_thenULL_i49(A_v11258, B_v11259, opt_v11260, f_v11261)

fun and_thenLUL_i47(A_v11262, B_v11263, opt_v11264, f_v11265) =
  match opt_v11264 with
  | NoneLL_c13  ⇒ NoneUL_c17 | SomeLL_c14 x_v11266 ⇒ (f_v11265) x_v11266
  end

val and_thenLULclo_i91 =
  fn A_v11267 B_v11268 opt_v11269 ⇒
    ln f_v11270 ⇒ and_thenLUL_i47(A_v11267, B_v11268, opt_v11269, f_v11270)

fun and_thenLLL_i45(A_v11271, B_v11272, opt_v11273, f_v11274) =
  match opt_v11273 with
  | NoneLL_c13  ⇒ NoneLL_c13 | SomeLL_c14 x_v11275 ⇒ (f_v11274) x_v11275
  end

val and_thenLLLclo_i92 =
  fn A_v11276 B_v11277 opt_v11278 ⇒
    ln f_v11279 ⇒ and_thenLLL_i45(A_v11276, B_v11277, opt_v11278, f_v11279)

fun lenUU_i60(A_v11280, xs_v11281) =
  match xs_v11281 with
  | nilUU_c27  ⇒ (0, nilUU_c27)
  | consUU_c28 x_v11282 xs_v11283 ⇒
    match lenUU_i60(NULL, xs_v11283) with
    | (n_v11284, xs_v11285) ⇒
      (n_v11284.+1, (consUU_c28 x_v11282 xs_v11285))
    end
  end

val lenUUclo_i93 = fn A_v11286 xs_v11287 ⇒ lenUU_i60(A_v11286, xs_v11287)

fun lenUL_i59(A_v11288, xs_v11289) =
  match xs_v11289 with
  | nilUL_c25  ⇒ (0, nilUL_c25)
  | consUL_c26 x_v11290 xs_v11291 ⇒
    match lenUL_i59(NULL, xs_v11291) with
    | (n_v11292, xs_v11293) ⇒
      (n_v11292.+1, (consUL_c26 x_v11290 xs_v11293))
    end
  end

val lenULclo_i94 = fn A_v11294 xs_v11295 ⇒ lenUL_i59(A_v11294, xs_v11295)

fun lenLL_i57(A_v11296, xs_v11297) =
  match xs_v11297 with
  | nilLL_c21  ⇒ (0, nilLL_c21)
  | consLL_c22 x_v11298 xs_v11299 ⇒
    match lenLL_i57(NULL, xs_v11299) with
    | (n_v11300, xs_v11301) ⇒
      (n_v11300.+1, (consLL_c22 x_v11298 xs_v11301))
    end
  end

val lenLLclo_i95 = fn A_v11302 xs_v11303 ⇒ lenLL_i57(A_v11302, xs_v11303)

fun appendUU_i64(A_v11304, xs_v11305, ys_v11306) =
  match xs_v11305 with
  | nilUU_c27  ⇒ ys_v11306
  | consUU_c28 x_v11307 xs_v11308 ⇒
    (consUU_c28 x_v11307 appendUU_i64(NULL, xs_v11308, ys_v11306))
  end

val appendUUclo_i96 =
  fn A_v11309 xs_v11310 ⇒
    ln ys_v11311 ⇒ appendUU_i64(A_v11309, xs_v11310, ys_v11311)

fun appendUL_i63(A_v11312, xs_v11313, ys_v11314) =
  match xs_v11313 with
  | nilUL_c25  ⇒ ys_v11314
  | consUL_c26 x_v11315 xs_v11316 ⇒
    (consUL_c26 x_v11315 appendUL_i63(NULL, xs_v11316, ys_v11314))
  end

val appendULclo_i97 =
  fn A_v11317 xs_v11318 ⇒
    ln ys_v11319 ⇒ appendUL_i63(A_v11317, xs_v11318, ys_v11319)

fun appendLL_i61(A_v11320, xs_v11321, ys_v11322) =
  match xs_v11321 with
  | nilLL_c21  ⇒ ys_v11322
  | consLL_c22 x_v11323 xs_v11324 ⇒
    (consLL_c22 x_v11323 appendLL_i61(NULL, xs_v11324, ys_v11322))
  end

val appendLLclo_i98 =
  fn A_v11325 xs_v11326 ⇒
    ln ys_v11327 ⇒ appendLL_i61(A_v11325, xs_v11326, ys_v11327)

fun readline_i33(__v11328) =
  ln __v11329 ⇒
    let ch_v11330 = (ln __v11331 ⇒ open stdin) NULL in
    let ch_v11332 =
      ((fn x_v11333 ⇒ ln __v11334 ⇒ send(ch_v11330, x_v11333)) 1) NULL
    in
    let __v11335 = (ln __v11336 ⇒ recv(ch_v11332)) NULL in
    (match __v11335 with
     | (s_v11337, ch_v11338) ⇒
       ln __v11339 ⇒
         let ch_v11340 =
           ((fn x_v11341 ⇒ ln __v11342 ⇒ send(ch_v11338, x_v11341)) 0)
             NULL
         in
         let __v11343 =
           (ln __v11344 ⇒ let __v11345 = ch_v11340 in NULL) NULL
         in (ln __v11346 ⇒ s_v11337) NULL
     end) NULL

val readlineclo_i99 = fn __v11347 ⇒ readline_i33(__v11347)

fun print_i34(s_v11348) =
  ln __v11349 ⇒
    let ch_v11350 = (ln __v11351 ⇒ open stdout) NULL in
    let ch_v11352 =
      ((fn x_v11353 ⇒ ln __v11354 ⇒ send(ch_v11350, x_v11353)) 1) NULL
    in
    let ch_v11355 =
      ((fn x_v11356 ⇒ ln __v11357 ⇒ send(ch_v11352, x_v11356)) s_v11348)
        NULL
    in
    let ch_v11358 =
      ((fn x_v11359 ⇒ ln __v11360 ⇒ send(ch_v11355, x_v11359)) 0) NULL
    in (ln __v11361 ⇒ let __v11362 = ch_v11358 in NULL) NULL

val printclo_i100 = fn s_v11363 ⇒ print_i34(s_v11363)

fun prerr_i35(s_v11364) =
  ln __v11365 ⇒
    let ch_v11366 = (ln __v11367 ⇒ open stderr) NULL in
    let ch_v11368 =
      ((fn x_v11369 ⇒ ln __v11370 ⇒ send(ch_v11366, x_v11369)) 1) NULL
    in
    let ch_v11371 =
      ((fn x_v11372 ⇒ ln __v11373 ⇒ send(ch_v11368, x_v11372)) s_v11364)
        NULL
    in
    let ch_v11374 =
      ((fn x_v11375 ⇒ ln __v11376 ⇒ send(ch_v11371, x_v11375)) 0) NULL
    in (ln __v11377 ⇒ let __v11378 = ch_v11374 in NULL) NULL

val prerrclo_i101 = fn s_v11379 ⇒ prerr_i35(s_v11379)

val digits_i36 =
  (consUU_c28
    "0"
    (consUU_c28
      "1"
      (consUU_c28
        "2"
        (consUU_c28
          "3"
          (consUU_c28
            "4"
            (consUU_c28
              "5"
              (consUU_c28
                "6"
                (consUU_c28 "7" (consUU_c28 "8" (consUU_c28 "9" nilUU_c27))))))))))

fun get_at_i37(A_v11380, n_v11381, xs_v11382, a_v11383) =
  let __v11384 = n_v11381 in
  if __v11384 then
    let n_v11385 = __v11384.-1 in
    match xs_v11382 with
    | nilUU_c27  ⇒ a_v11383
    | consUU_c28 __v11386 xs_v11387 ⇒
      get_at_i37(NULL, n_v11385, xs_v11387, a_v11383)
    end
  else
    match xs_v11382 with
    | nilUU_c27  ⇒ a_v11383 | consUU_c28 x_v11388 __v11389 ⇒ x_v11388
    end

val get_atclo_i102 =
  fn A_v11390 n_v11391 xs_v11392 a_v11393 ⇒
    get_at_i37(A_v11390, n_v11391, xs_v11392, a_v11393)

fun string_of_digit_i38(n_v11394) =
  get_at_i37(NULL, n_v11394, digits_i36, EmptyString_c6)

val string_of_digitclo_i103 = fn n_v11395 ⇒ string_of_digit_i38(n_v11395)

fun string_of_nat_i39(n_v11396) =
  let s_v11397 = string_of_digit_i38(modn_i16(n_v11396, 10)) in
  let n_v11398 = divn_i15(n_v11396, 10) in
  if ltn_i6(0, n_v11398) then
    cats_i19(string_of_nat_i39(n_v11398), s_v11397)
  else
    s_v11397

val string_of_natclo_i104 = fn n_v11399 ⇒ string_of_nat_i39(n_v11399)

fun digit_of_char_i40(c_v11400) =
  if eqc_i17(c_v11400, '0') then
    (SomeUL_c18 0)
  else
    if eqc_i17(c_v11400, '1') then
      (SomeUL_c18 1)
    else
      if eqc_i17(c_v11400, '2') then
        (SomeUL_c18 2)
      else
        if eqc_i17(c_v11400, '3') then
          (SomeUL_c18 3)
        else
          if eqc_i17(c_v11400, '4') then
            (SomeUL_c18 4)
          else
            if eqc_i17(c_v11400, '5') then
              (SomeUL_c18 5)
            else
              if eqc_i17(c_v11400, '6') then
                (SomeUL_c18 6)
              else
                if eqc_i17(c_v11400, '7') then
                  (SomeUL_c18 7)
                else
                  if eqc_i17(c_v11400, '8') then
                    (SomeUL_c18 8)
                  else
                    if eqc_i17(c_v11400, '9') then
                      (SomeUL_c18 9)
                    else
                      NoneUL_c17

val digit_of_charclo_i105 = fn c_v11401 ⇒ digit_of_char_i40(c_v11401)

fun nat_of_string_loop_i41(s_v11402, acc_v11403) =
  match s_v11402 with
  | EmptyString_c6  ⇒ (SomeUL_c18 acc_v11403)
  | String_c7 c_v11404 s_v11405 ⇒
    match digit_of_char_i40(c_v11404) with
    | NoneUL_c17  ⇒ NoneUL_c17
    | SomeUL_c18 n_v11406 ⇒
      nat_of_string_loop_i41(s_v11405,
                             addn_i12(muln_i14(acc_v11403, 10), n_v11406))
    end
  end

val nat_of_string_loopclo_i106 =
  fn s_v11407 acc_v11408 ⇒ nat_of_string_loop_i41(s_v11407, acc_v11408)

fun nat_of_string_i42(s_v11409) = nat_of_string_loop_i41(s_v11409, 0)

val nat_of_stringclo_i107 = fn s_v11410 ⇒ nat_of_string_i42(s_v11410)

fun ex_i43(e_v11411) =
  let x_v11412 = NULL in let __v11413 = NULL in cats_i19("hello", "world")

val exclo_i108 = fn e_v11414 ⇒ ex_i43(e_v11414)

main = (let s_v11415 = ex_i43(NULL) in print_i34(s_v11415)) NULL

trans23 success--------------------------

fun andb_i1(b1_v11763, b2_v11764) = if b1_v11763 then
                                      b2_v11764
                                    else
                                      0

val andbclo_i65 = fn b1_v11765 b2_v11766 ⇒ andb_i1(b1_v11765, b2_v11766)

fun orb_i2(b1_v11767, b2_v11768) = if b1_v11767 then
                                     1
                                   else
                                     b2_v11768

val orbclo_i66 = fn b1_v11769 b2_v11770 ⇒ orb_i2(b1_v11769, b2_v11770)

fun notb_i3(b_v11771) = if b_v11771 then
                          0
                        else
                          1

val notbclo_i67 = fn b_v11772 ⇒ notb_i3(b_v11772)

fun compareb_i4(b1_v11773, b2_v11774) =
  if b1_v11773 then
    if b2_v11774 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v11774 then
      LT_c1
    else
      EQ_c3

val comparebclo_i68 =
  fn b1_v11775 b2_v11776 ⇒ compareb_i4(b1_v11775, b2_v11776)

fun lten_i5(x_v11777, y_v11778) =
  if x_v11777 then
    if y_v11778 then
      lten_i5(x_v11777.-1, y_v11778.-1)
    else
      0
  else
    1

val ltenclo_i69 = fn x_v11779 y_v11780 ⇒ lten_i5(x_v11779, y_v11780)

fun ltn_i6(x_v11781, y_v11782) = lten_i5(x_v11781.+1, y_v11782)

val ltnclo_i70 = fn x_v11783 y_v11784 ⇒ ltn_i6(x_v11783, y_v11784)

fun gten_i7(x_v11785, y_v11786) = lten_i5(y_v11786, x_v11785)

val gtenclo_i71 = fn x_v11787 y_v11788 ⇒ gten_i7(x_v11787, y_v11788)

fun gtn_i8(x_v11789, y_v11790) = ltn_i6(y_v11790, x_v11789)

val gtnclo_i72 = fn x_v11791 y_v11792 ⇒ gtn_i8(x_v11791, y_v11792)

fun eqn_i9(x_v11793, y_v11794) =
  if x_v11793 then
    if y_v11794 then
      eqn_i9(x_v11793.-1, y_v11794.-1)
    else
      0
  else
    if y_v11794 then
      0
    else
      1

val eqnclo_i73 = fn x_v11795 y_v11796 ⇒ eqn_i9(x_v11795, y_v11796)

fun comparen_i10(n1_v11797, n2_v11798) =
  if n1_v11797 then
    if n2_v11798 then
      comparen_i10(n1_v11797.-1, n2_v11798.-1)
    else
      GT_c2
  else
    if n2_v11798 then
      LT_c1
    else
      EQ_c3

val comparenclo_i74 =
  fn n1_v11799 n2_v11800 ⇒ comparen_i10(n1_v11799, n2_v11800)

fun pred_i11(x_v11801) = if x_v11801 then
                           x_v11801.-1
                         else
                           0

val predclo_i75 = fn x_v11802 ⇒ pred_i11(x_v11802)

fun addn_i12(x_v11803, y_v11804) =
  if x_v11803 then
    addn_i12(x_v11803.-1, y_v11804).+1
  else
    y_v11804

val addnclo_i76 = fn x_v11805 y_v11806 ⇒ addn_i12(x_v11805, y_v11806)

fun subn_i13(x_v11807, y_v11808) =
  if y_v11808 then
    subn_i13(pred_i11(x_v11807), y_v11808.-1)
  else
    x_v11807

val subnclo_i77 = fn x_v11809 y_v11810 ⇒ subn_i13(x_v11809, y_v11810)

fun muln_i14(x_v11811, y_v11812) =
  if x_v11811 then
    addn_i12(y_v11812, muln_i14(x_v11811.-1, y_v11812))
  else
    0

val mulnclo_i78 = fn x_v11813 y_v11814 ⇒ muln_i14(x_v11813, y_v11814)

fun divn_i15(x_v11815, y_v11816) =
  if ltn_i6(x_v11815, y_v11816) then
    0
  else
    divn_i15(subn_i13(x_v11815, y_v11816), y_v11816).+1

val divnclo_i79 = fn x_v11817 y_v11818 ⇒ divn_i15(x_v11817, y_v11818)

fun modn_i16(x_v11819, y_v11820) =
  subn_i13(x_v11819, muln_i14(divn_i15(x_v11819, y_v11820), y_v11820))

val modnclo_i80 = fn x_v11821 y_v11822 ⇒ modn_i16(x_v11821, y_v11822)

fun eqc_i17(c1_v11823, c2_v11824) =
  match c1_v11823 with
  | Char_c5 n1_v11825 ⇒
    match c2_v11824 with
    | Char_c5 n2_v11826 ⇒ eqn_i9(n1_v11825, n2_v11826)
    end
  end

val eqcclo_i81 = fn c1_v11827 c2_v11828 ⇒ eqc_i17(c1_v11827, c2_v11828)

fun comparec_i18(c1_v11829, c2_v11830) =
  match c1_v11829 with
  | Char_c5 n1_v11831 ⇒
    match c2_v11830 with
    | Char_c5 n2_v11832 ⇒ comparen_i10(n1_v11831, n2_v11832)
    end
  end

val comparecclo_i82 =
  fn c1_v11833 c2_v11834 ⇒ comparec_i18(c1_v11833, c2_v11834)

fun cats_i19(s1_v11835, s2_v11836) =
  match s1_v11835 with
  | EmptyString_c6  ⇒ s2_v11836
  | String_c7 c_v11837 s1_v11838 ⇒
    (String_c7 c_v11837 cats_i19(s1_v11838, s2_v11836))
  end

val catsclo_i83 = fn s1_v11839 s2_v11840 ⇒ cats_i19(s1_v11839, s2_v11840)

fun strlen_i20(s_v11841) =
  match s_v11841 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v11842 s_v11843 ⇒ strlen_i20(s_v11843).+1
  end

val strlenclo_i84 = fn s_v11844 ⇒ strlen_i20(s_v11844)

fun eqs_i21(s1_v11845, s2_v11846) =
  match s1_v11845 with
  | EmptyString_c6  ⇒
    match s2_v11846 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v11847 __v11848 ⇒ 0
    end
  | String_c7 c1_v11849 s1_v11850 ⇒
    match s2_v11846 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v11851 s2_v11852 ⇒
      andb_i1(eqc_i17(c1_v11849, c2_v11851), eqs_i21(s1_v11850, s2_v11852))
    end
  end

val eqsclo_i85 = fn s1_v11853 s2_v11854 ⇒ eqs_i21(s1_v11853, s2_v11854)

fun compares_i22(s1_v11855, s2_v11856) =
  match s1_v11855 with
  | EmptyString_c6  ⇒
    match s2_v11856 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v11857 __v11858 ⇒ LT_c1
    end
  | String_c7 c1_v11859 s1_v11860 ⇒
    match s2_v11856 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v11861 s2_v11862 ⇒
      match comparec_i18(c1_v11859, c2_v11861) with
      | EQ_c3  ⇒ compares_i22(s1_v11860, s2_v11862) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i86 =
  fn s1_v11863 s2_v11864 ⇒ compares_i22(s1_v11863, s2_v11864)

fun and_thenUUU_i52(A_v11865, B_v11866, opt_v11867, f_v11868) =
  match opt_v11867 with
  | NoneUU_c19  ⇒ NoneUU_c19 | SomeUU_c20 x_v11869 ⇒ (f_v11868) x_v11869
  end

val and_thenUUUclo_i87 =
  fn A_v11870 B_v11871 opt_v11872 ⇒
    ln f_v11873 ⇒ and_thenUUU_i52(A_v11870, B_v11871, opt_v11872, f_v11873)

fun and_thenUUL_i51(A_v11874, B_v11875, opt_v11876, f_v11877) =
  match opt_v11876 with
  | NoneUL_c17  ⇒ NoneUL_c17 | SomeUL_c18 x_v11878 ⇒ (f_v11877) x_v11878
  end

val and_thenUULclo_i88 =
  fn A_v11879 B_v11880 opt_v11881 ⇒
    ln f_v11882 ⇒ and_thenUUL_i51(A_v11879, B_v11880, opt_v11881, f_v11882)

fun and_thenULU_i50(A_v11883, B_v11884, opt_v11885, f_v11886) =
  match opt_v11885 with
  | NoneUU_c19  ⇒ NoneLU_c15 | SomeUU_c20 x_v11887 ⇒ (f_v11886) x_v11887
  end

val and_thenULUclo_i89 =
  fn A_v11888 B_v11889 opt_v11890 ⇒
    ln f_v11891 ⇒ and_thenULU_i50(A_v11888, B_v11889, opt_v11890, f_v11891)

fun and_thenULL_i49(A_v11892, B_v11893, opt_v11894, f_v11895) =
  match opt_v11894 with
  | NoneUL_c17  ⇒ NoneLL_c13 | SomeUL_c18 x_v11896 ⇒ (f_v11895) x_v11896
  end

val and_thenULLclo_i90 =
  fn A_v11897 B_v11898 opt_v11899 ⇒
    ln f_v11900 ⇒ and_thenULL_i49(A_v11897, B_v11898, opt_v11899, f_v11900)

fun and_thenLUL_i47(A_v11901, B_v11902, opt_v11903, f_v11904) =
  match opt_v11903 with
  | NoneLL_c13  ⇒ NoneUL_c17 | SomeLL_c14 x_v11905 ⇒ (f_v11904) x_v11905
  end

val and_thenLULclo_i91 =
  fn A_v11906 B_v11907 opt_v11908 ⇒
    ln f_v11909 ⇒ and_thenLUL_i47(A_v11906, B_v11907, opt_v11908, f_v11909)

fun and_thenLLL_i45(A_v11910, B_v11911, opt_v11912, f_v11913) =
  match opt_v11912 with
  | NoneLL_c13  ⇒ NoneLL_c13 | SomeLL_c14 x_v11914 ⇒ (f_v11913) x_v11914
  end

val and_thenLLLclo_i92 =
  fn A_v11915 B_v11916 opt_v11917 ⇒
    ln f_v11918 ⇒ and_thenLLL_i45(A_v11915, B_v11916, opt_v11917, f_v11918)

fun lenUU_i60(A_v11919, xs_v11920) =
  match xs_v11920 with
  | nilUU_c27  ⇒ (0, nilUU_c27)
  | consUU_c28 x_v11921 xs_v11922 ⇒
    match lenUU_i60(NULL, xs_v11922) with
    | (n_v11923, xs_v11924) ⇒
      (n_v11923.+1, (consUU_c28 x_v11921 xs_v11924))
    end
  end

val lenUUclo_i93 = fn A_v11925 xs_v11926 ⇒ lenUU_i60(A_v11925, xs_v11926)

fun lenUL_i59(A_v11927, xs_v11928) =
  match xs_v11928 with
  | nilUL_c25  ⇒ (0, nilUL_c25)
  | consUL_c26 x_v11929 xs_v11930 ⇒
    match lenUL_i59(NULL, xs_v11930) with
    | (n_v11931, xs_v11932) ⇒
      (n_v11931.+1, (consUL_c26 x_v11929 xs_v11932))
    end
  end

val lenULclo_i94 = fn A_v11933 xs_v11934 ⇒ lenUL_i59(A_v11933, xs_v11934)

fun lenLL_i57(A_v11935, xs_v11936) =
  match xs_v11936 with
  | nilLL_c21  ⇒ (0, nilLL_c21)
  | consLL_c22 x_v11937 xs_v11938 ⇒
    match lenLL_i57(NULL, xs_v11938) with
    | (n_v11939, xs_v11940) ⇒
      (n_v11939.+1, (consLL_c22 x_v11937 xs_v11940))
    end
  end

val lenLLclo_i95 = fn A_v11941 xs_v11942 ⇒ lenLL_i57(A_v11941, xs_v11942)

fun appendUU_i64(A_v11943, xs_v11944, ys_v11945) =
  match xs_v11944 with
  | nilUU_c27  ⇒ ys_v11945
  | consUU_c28 x_v11946 xs_v11947 ⇒
    (consUU_c28 x_v11946 appendUU_i64(NULL, xs_v11947, ys_v11945))
  end

val appendUUclo_i96 =
  fn A_v11948 xs_v11949 ⇒
    ln ys_v11950 ⇒ appendUU_i64(A_v11948, xs_v11949, ys_v11950)

fun appendUL_i63(A_v11951, xs_v11952, ys_v11953) =
  match xs_v11952 with
  | nilUL_c25  ⇒ ys_v11953
  | consUL_c26 x_v11954 xs_v11955 ⇒
    (consUL_c26 x_v11954 appendUL_i63(NULL, xs_v11955, ys_v11953))
  end

val appendULclo_i97 =
  fn A_v11956 xs_v11957 ⇒
    ln ys_v11958 ⇒ appendUL_i63(A_v11956, xs_v11957, ys_v11958)

fun appendLL_i61(A_v11959, xs_v11960, ys_v11961) =
  match xs_v11960 with
  | nilLL_c21  ⇒ ys_v11961
  | consLL_c22 x_v11962 xs_v11963 ⇒
    (consLL_c22 x_v11962 appendLL_i61(NULL, xs_v11963, ys_v11961))
  end

val appendLLclo_i98 =
  fn A_v11964 xs_v11965 ⇒
    ln ys_v11966 ⇒ appendLL_i61(A_v11964, xs_v11965, ys_v11966)

fun readline_i33(__v11967) =
  ln __v11968 ⇒
    let ch_v11969 = open stdin in
    let ch_v11970 = send(ch_v11969, 1) in
    let __v11971 = recv(ch_v11970) in
    match __v11971 with
    | (s_v11972, ch_v11973) ⇒
      let ch_v11974 = send(ch_v11973, 0) in s_v11972
    end

val readlineclo_i99 = fn __v11975 ⇒ readline_i33(__v11975)

fun print_i34(s_v11976) =
  ln __v11977 ⇒
    let ch_v11978 = open stdout in
    let ch_v11979 = send(ch_v11978, 1) in
    let ch_v11980 = send(ch_v11979, s_v11976) in
    let ch_v11981 = send(ch_v11980, 0) in NULL

val printclo_i100 = fn s_v11982 ⇒ print_i34(s_v11982)

fun prerr_i35(s_v11983) =
  ln __v11984 ⇒
    let ch_v11985 = open stderr in
    let ch_v11986 = send(ch_v11985, 1) in
    let ch_v11987 = send(ch_v11986, s_v11983) in
    let ch_v11988 = send(ch_v11987, 0) in NULL

val prerrclo_i101 = fn s_v11989 ⇒ prerr_i35(s_v11989)

val digits_i36 =
  (consUU_c28
    "0"
    (consUU_c28
      "1"
      (consUU_c28
        "2"
        (consUU_c28
          "3"
          (consUU_c28
            "4"
            (consUU_c28
              "5"
              (consUU_c28
                "6"
                (consUU_c28 "7" (consUU_c28 "8" (consUU_c28 "9" nilUU_c27))))))))))

fun get_at_i37(A_v11990, n_v11991, xs_v11992, a_v11993) =
  if n_v11991 then
    match xs_v11992 with
    | nilUU_c27  ⇒ a_v11993
    | consUU_c28 __v11994 xs_v11995 ⇒
      get_at_i37(NULL, n_v11991.-1, xs_v11995, a_v11993)
    end
  else
    match xs_v11992 with
    | nilUU_c27  ⇒ a_v11993 | consUU_c28 x_v11996 __v11997 ⇒ x_v11996
    end

val get_atclo_i102 =
  fn A_v11998 n_v11999 xs_v12000 a_v12001 ⇒
    get_at_i37(A_v11998, n_v11999, xs_v12000, a_v12001)

fun string_of_digit_i38(n_v12002) =
  get_at_i37(NULL, n_v12002, digits_i36, EmptyString_c6)

val string_of_digitclo_i103 = fn n_v12003 ⇒ string_of_digit_i38(n_v12003)

fun string_of_nat_i39(n_v12004) =
  let s_v12005 = string_of_digit_i38(modn_i16(n_v12004, 10)) in
  let n_v12006 = divn_i15(n_v12004, 10) in
  if ltn_i6(0, n_v12006) then
    cats_i19(string_of_nat_i39(n_v12006), s_v12005)
  else
    s_v12005

val string_of_natclo_i104 = fn n_v12007 ⇒ string_of_nat_i39(n_v12007)

fun digit_of_char_i40(c_v12008) =
  if eqc_i17(c_v12008, '0') then
    (SomeUL_c18 0)
  else
    if eqc_i17(c_v12008, '1') then
      (SomeUL_c18 1)
    else
      if eqc_i17(c_v12008, '2') then
        (SomeUL_c18 2)
      else
        if eqc_i17(c_v12008, '3') then
          (SomeUL_c18 3)
        else
          if eqc_i17(c_v12008, '4') then
            (SomeUL_c18 4)
          else
            if eqc_i17(c_v12008, '5') then
              (SomeUL_c18 5)
            else
              if eqc_i17(c_v12008, '6') then
                (SomeUL_c18 6)
              else
                if eqc_i17(c_v12008, '7') then
                  (SomeUL_c18 7)
                else
                  if eqc_i17(c_v12008, '8') then
                    (SomeUL_c18 8)
                  else
                    if eqc_i17(c_v12008, '9') then
                      (SomeUL_c18 9)
                    else
                      NoneUL_c17

val digit_of_charclo_i105 = fn c_v12009 ⇒ digit_of_char_i40(c_v12009)

fun nat_of_string_loop_i41(s_v12010, acc_v12011) =
  match s_v12010 with
  | EmptyString_c6  ⇒ (SomeUL_c18 acc_v12011)
  | String_c7 c_v12012 s_v12013 ⇒
    match digit_of_char_i40(c_v12012) with
    | NoneUL_c17  ⇒ NoneUL_c17
    | SomeUL_c18 n_v12014 ⇒
      nat_of_string_loop_i41(s_v12013,
                             addn_i12(muln_i14(acc_v12011, 10), n_v12014))
    end
  end

val nat_of_string_loopclo_i106 =
  fn s_v12015 acc_v12016 ⇒ nat_of_string_loop_i41(s_v12015, acc_v12016)

fun nat_of_string_i42(s_v12017) = nat_of_string_loop_i41(s_v12017, 0)

val nat_of_stringclo_i107 = fn s_v12018 ⇒ nat_of_string_i42(s_v12018)

fun ex_i43(e_v12019) = cats_i19("hello", "world")

val exclo_i108 = fn e_v12020 ⇒ ex_i43(e_v12020)

main = let s_v12021 = ex_i43(NULL) in (print_i34(s_v12021)) NULL

trans3e success--------------------------

trans34 success--------------------------

