program split‹t› (zs : ((list‹_, t›)
(nat))) : (∃ (_ : ((list‹_, t›) (nat))) ⊗ ((list‹_, t›)
(nat))) = match zs as _ in _ with nil  ⇒ ⟨nil, nil⟩ | cons x
zs ⇒ match zs as _ in _ with nil  ⇒ ⟨((cons) (x)
(nil)), nil⟩ | cons y zs ⇒ let ⟨xs, ys⟩ = ((split)
(zs)) in ⟨((cons) (x) (xs)), ((cons) (y)
(ys))⟩

program merge‹t› (xs : ((list‹_, t›)
(nat))) : (∀ (_ : ((list‹_, t›) (nat))) ⊸ ((list‹_, t›)
(nat))) = (ln (ys : _) ⇒ match xs as _ in _ with nil  ⇒ ys | cons x
xs0 ⇒ match ys as _ in _ with nil  ⇒ ((cons) (x) (xs0)) | cons y
ys0 ⇒ match ((lten) (x) (y)) as _ in _ with true ⇒ ((cons) (x)
(((merge) (xs0) (((cons) (y) (ys0)))))) | false ⇒ ((cons) (y)
(((merge) (((cons) (x) (xs0))) (ys0)))))

program msort‹t› (zs : ((list‹_, t›) (nat))) : ((list‹_, t›)
(nat)) = match zs as _ in _ with nil  ⇒ nil | cons x
zs ⇒ match zs as _ in _ with nil  ⇒ ((cons) (x) (nil)) | cons y
zs ⇒ let ⟨xs, ys⟩ = ((split)
(((cons) (x) (((cons) (y) (zs)))))) in ((merge) (((msort) (xs)))
(((msort) (ys))))

logical cmsort_ch‹t› : L = ch‹!(_ : ((list‹_, t›)
(nat))) → end›

program cmsort_worker‹t› (n : nat) (zs : ((list‹_, t›)
(nat))) : (∀ (_ : cmsort_ch‹t›) ⊸ IO unit) = (ln (c : _) ⇒ match n as _ in _ with O ⇒ let c ⇐ (
(send c)
(((msort) (zs)))) in close c | S n ⇒ match zs as _ in _ with nil  ⇒ let c ⇐ (
(send c) (nil)) in close c | cons z0
zs0 ⇒ match zs0 as _ in _ with nil  ⇒ let c ⇐ ((send c)
(nil)) in close c | cons z1 zs1 ⇒ let ⟨xs0, ys0⟩ = ((split)
(((cons) (z0) (((cons) (z1) (zs1)))))) in let r1 ⇐ fork (r1 : cmsort_ch) in (
(cmsort_worker) (n) (xs0)
(r1)) in let r2 ⇐ fork (r2 : cmsort_ch) in ((cmsort_worker) (n) (ys0)
(r2)) in let ⟨xs1, r1⟩ ⇐ recv r1 in let ⟨ys1, r2⟩ ⇐ recv r2 in let zs = (
(merge) (xs1) (ys1)) in let c ⇐ ((send c)
(zs)) in let _ ⇐ close r1 in let _ ⇐ close r2 in close c)

program cmsort‹t› (zs0 : ((list‹_, t›) (nat))) : IO ((list‹_, t›)
(nat)) = let c ⇐ fork (c : cmsort_ch) in ((cmsort_worker) (O.+4) (zs0)
(c)) in let ⟨zs1, c⟩ ⇐ recv c in let _ ⇐ close c in return zs1

program mkList‹t› (n : nat) : ((list‹_, t›)
(nat)) = match n as _ in _ with O ⇒ nil | S n0 ⇒ ((cons) (n)
(((mkList) (n0))))

program main‹› : IO unit = let test = ((mkList‹U›)
(O.+800000)) in let sorted ⇐ ((cmsort)
(test)) in return ()

parsing success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v222 : bool) (b2_v223 : bool) ⇒
    match b1_v222 as __v224 in ??1 with
    | true ⇒ b2_v223 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v227 : bool) (b2_v228 : bool) ⇒
    match b1_v227 as __v229 in ??2 with
    | true ⇒ true | false ⇒ b2_v228
    end

program notb_i3 : bool → bool =
  fn (b_v231 : bool) ⇒
    match b_v231 as __v232 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v235 : nat) (y_v236 : nat) ⇒
    match x_v235 as __v237 in ??4 with
    | O ⇒ true
    | S x_v238 ⇒
      match y_v236 as __v239 in ??5 with
      | O ⇒ false | S y_v240 ⇒ (lten_i4 x_v238 y_v240)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v243 : nat) (y_v244 : nat) ⇒
    match x_v243 as __v245 in ??6 with
    | O ⇒
      match y_v244 as __v246 in ??8 with
      | O ⇒ true | S __v247 ⇒ false
      end
    | S x_v248 ⇒
      match y_v244 as __v249 in ??7 with
      | O ⇒ true | S y_v250 ⇒ (gten_i5 x_v248 y_v250)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v253 : nat) (y_v254 : nat) ⇒
    match x_v253 as __v255 in ??9 with
    | O ⇒
      match y_v254 as __v256 in ??11 with
      | O ⇒ false | S y_v257 ⇒ true
      end
    | S x_v258 ⇒
      match y_v254 as __v259 in ??10 with
      | O ⇒ false | S y_v260 ⇒ (ltn_i6 x_v258 y_v260)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v263 : nat) (y_v264 : nat) ⇒
    match x_v263 as __v265 in ??12 with
    | O ⇒ false
    | S x_v266 ⇒
      match y_v264 as __v267 in ??13 with
      | O ⇒ true | S y_v268 ⇒ (gtn_i7 x_v266 y_v268)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v271 : nat) (y_v272 : nat) ⇒
    match x_v271 as __v273 in ??14 with
    | O ⇒
      match y_v272 as __v274 in ??16 with
      | O ⇒ true | S __v275 ⇒ false
      end
    | S x_v276 ⇒
      match y_v272 as __v277 in ??15 with
      | O ⇒ false | S y_v278 ⇒ (eqn_i8 x_v276 y_v278)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v280 : nat) ⇒
    match x_v280 as __v281 in ??17 with
    | O ⇒ 0 | S x_v282 ⇒ x_v282
    end

program addn_i10 : nat → nat → nat =
  fn (x_v285 : nat) (y_v286 : nat) ⇒
    match x_v285 as __v287 in ??18 with
    | O ⇒ y_v286 | S x_v288 ⇒ (addn_i10 x_v288 y_v286).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v291 : nat) (y_v292 : nat) ⇒
    match y_v292 as __v293 in ??19 with
    | O ⇒ x_v291 | S y_v294 ⇒ (subn_i11 (pred_i9 x_v291) y_v294)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v297 : nat) (y_v298 : nat) ⇒
    match x_v297 as __v299 in ??20 with
    | O ⇒ 0 | S x_v300 ⇒ (addn_i10 y_v298 (muln_i12 x_v300 y_v298))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v303 : nat) (y_v304 : nat) ⇒
    match (ltn_i6 x_v303 y_v304) as __v305 in ??21 with
    | true ⇒ 0 | false ⇒ (divn_i13 (subn_i11 x_v303 y_v304) y_v304).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v308 : nat) (y_v309 : nat) ⇒
    (subn_i11 x_v308 (muln_i12 (divn_i13 x_v308 y_v309) y_v309))

inductive char_d1 : U =
| Char_c1 of (n_v310 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v311 : char_d1) (s_v312 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v315 : string_d2) (s2_v316 : string_d2) ⇒
    match s1_v315 as __v317 in ??22 with
    | EmptyString_c2  ⇒ s2_v316
    | String_c3 c_v318 s1_v319 ⇒
      (String_c3‹› c_v318 (cats_i15 s1_v319 s2_v316))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v321 : string_d2) ⇒
    match s_v321 as __v322 in ??23 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v323 s_v324 ⇒ (strlen_i16 s_v324).+1
    end

inductive list_d3 ‹s_s325, t_s326›
  (A_v327 : Type‹s_s325›) : Type‹t_s326›
=
| nil_c4 of
    ‹s_s328, t_s329› (A_v330 : Type‹s_s328›)
    : (list_d3‹s_s328, t_s329› A_v330)
| cons_c5 of
    ‹s_s331, t_s332› (A_v333 : Type‹s_s331›) (hd_v334 : A_v333)
    (tl_v335 : (list_d3‹s_s331, t_s332› A_v333))
    : (list_d3‹s_s331, t_s332› A_v333)

program len_i17 ‹s_s336, t_s337› :
  ∀ {A_v338 : Type‹s_s336›} →
    (list_d3‹??24, t_s337› A_v338) →
      nat ⊗ (list_d3‹??25, t_s337› A_v338)
=
  fn {A_v341 : Type‹s_s336›}
     (xs_v342 : (list_d3‹??24, t_s337› A_v341)) ⇒
    match xs_v342 as __v343 in ??26 with
    | nil_c4  ⇒ ⟨0, nil_c4‹??36, ??35›⟩
    | cons_c5 x_v344 xs_v345 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v345) as __v346 in ??30 with
      | ⟨n_v347, xs_v348⟩ ⇒
        ⟨n_v347.+1, (cons_c5‹??33, ??32› x_v344 xs_v348)⟩
      end
    end

program append_i18 ‹s_s349, t_s350› :
  ∀ {A_v351 : Type‹s_s349›} →
    (list_d3‹??37, t_s350› A_v351) →
      (list_d3‹??38, t_s350› A_v351) ⊸ (list_d3‹??40, ??39› A_v351)
=
  fn {A_v354 : Type‹s_s349›}
     (xs_v355 : (list_d3‹??37, t_s350› A_v354)) ⇒
    ln (ys_v356 : ??41) ⇒
      match xs_v355 as __v357 in ??42 with
      | nil_c4  ⇒ ys_v356
      | cons_c5 x_v358 xs_v359 ⇒
        (cons_c5‹??48, ??47›
          x_v358 (append_i18‹??45, ??44› ??43 xs_v359 ys_v356))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v361 : unit) ⇒
    ⇑(b_v362 : bool) ⇒
      match b_v362 as __v363 in ??49 with
      | true ⇒ ⇓(__v364 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v366 : unit) ⇒
    ⇑(b_v367 : bool) ⇒
      match b_v367 as __v368 in ??50 with
      | true ⇒ ⇑(__v369 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v371 : unit) ⇒
    ⇑(b_v372 : bool) ⇒
      match b_v372 as __v373 in ??51 with
      | true ⇒ ⇑(__v374 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v376 : unit) ⇒
    let ch_v377 ⇐ open stdin in
    let ch_v378 ⇐ (send ch_v377 true) in
    let __v379 ⇐ recv ch_v378 in
    match __v379 as __v380 in ??52 with
    | ⟨s_v381, ch_v382⟩ ⇒
      let ch_v383 ⇐ (send ch_v382 false) in
      let __v384 ⇐ close ch_v383 in return s_v381
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v386 : string_d2) ⇒
    let ch_v387 ⇐ open stdout in
    let ch_v388 ⇐ (send ch_v387 true) in
    let ch_v389 ⇐ (send ch_v388 s_v386) in
    let ch_v390 ⇐ (send ch_v389 false) in close ch_v390

program prerr_i27 : string_d2 → IO unit =
  fn (s_v392 : string_d2) ⇒
    let ch_v393 ⇐ open stderr in
    let ch_v394 ⇐ (send ch_v393 true) in
    let ch_v395 ⇐ (send ch_v394 s_v392) in
    let ch_v396 ⇐ (send ch_v395 false) in close ch_v396

program split_i28 ‹t_s397› :
  (list_d3‹??53, t_s397› nat) →
    (list_d3‹??54, t_s397› nat) ⊗ (list_d3‹??55, t_s397› nat)
=
  fn (zs_v400 : (list_d3‹??53, t_s397› nat)) ⇒
    match zs_v400 as __v401 in ??56 with
    | nil_c4  ⇒ ⟨nil_c4‹??77, ??76›, nil_c4‹??80, ??79›⟩
    | cons_c5 x_v402 zs_v403 ⇒
      match zs_v403 as __v404 in ??57 with
      | nil_c4  ⇒
        ⟨(cons_c5‹??71, ??70› x_v402 nil_c4‹??68, ??67›), nil_c4‹??74,
        ??73›⟩
      | cons_c5 y_v405 zs_v406 ⇒
        let __v407 = (split_i28‹??58› zs_v406) in
        match __v407 as __v408 in ??65 with
        | ⟨xs_v409, ys_v410⟩ ⇒
          ⟨(cons_c5‹??61, ??60› x_v402 xs_v409), (cons_c5‹??64,
                                                       ??63›
                                                         y_v405 ys_v410)⟩
        end
      end
    end

program merge_i29 ‹t_s411› :
  (list_d3‹??81, t_s411› nat) →
    (list_d3‹??82, t_s411› nat) ⊸ (list_d3‹??83, t_s411› nat)
=
  fn (xs_v414 : (list_d3‹??81, t_s411› nat)) ⇒
    ln (ys_v415 : ??84) ⇒
      match xs_v414 as __v416 in ??85 with
      | nil_c4  ⇒ ys_v415
      | cons_c5 x_v417 xs0_v418 ⇒
        match ys_v415 as __v419 in ??86 with
        | nil_c4  ⇒ (cons_c5‹??104, ??103› x_v417 xs0_v418)
        | cons_c5 y_v420 ys0_v421 ⇒
          match (lten_i4 x_v417 y_v420) as __v422 in ??87 with
          | true ⇒
            (cons_c5‹??101, ??100›
              x_v417
              (merge_i29‹??98›
                xs0_v418 (cons_c5‹??97, ??96› y_v420 ys0_v421)))
          | false ⇒
            (cons_c5‹??94, ??93›
              y_v420
              (merge_i29‹??91›
                (cons_c5‹??90, ??89› x_v417 xs0_v418) ys0_v421))
          end
        end
      end

program msort_i30 ‹t_s423› :
  (list_d3‹??105, t_s423› nat) → (list_d3‹??106, t_s423› nat)
=
  fn (zs_v425 : (list_d3‹??105, t_s423› nat)) ⇒
    match zs_v425 as __v426 in ??107 with
    | nil_c4  ⇒ nil_c4‹??128, ??127›
    | cons_c5 x_v427 zs_v428 ⇒
      match zs_v428 as __v429 in ??108 with
      | nil_c4  ⇒
        (cons_c5‹??125, ??124› x_v427 nil_c4‹??122, ??121›)
      | cons_c5 y_v430 zs_v431 ⇒
        let __v432 =
          (split_i28‹??115›
            (cons_c5‹??114, ??113›
              x_v427 (cons_c5‹??111, ??110› y_v430 zs_v431)))
        in
        match __v432 as __v433 in ??119 with
        | ⟨xs_v434, ys_v435⟩ ⇒
          (merge_i29‹??118›
            (msort_i30‹??117› xs_v434) (msort_i30‹??116› ys_v435))
        end
      end
    end

logical cmsort_ch_i31 ‹t_s436› : L =
  ch⟨⇑(__v437 : (list_d3‹??129, t_s436› nat)) ⇒ end⟩

program cmsort_worker_i32 ‹t_s438› :
  nat →
    (list_d3‹??130, t_s438› nat) →
      cmsort_ch_i31‹t_s438› ⊸ IO unit
=
  fn (n_v442 : nat) (zs_v443 : (list_d3‹??130, t_s438› nat)) ⇒
    ln (c_v444 : ??131) ⇒
      match n_v442 as __v445 in ??132 with
      | O ⇒
        let c_v446 ⇐ (send c_v444 (msort_i30‹??156› zs_v443)) in
        close c_v446
      | S n_v447 ⇒
        match zs_v443 as __v448 in ??133 with
        | nil_c4  ⇒
          let c_v449 ⇐ (send c_v444 nil_c4‹??155, ??154›) in
          close c_v449
        | cons_c5 z0_v450 zs0_v451 ⇒
          match zs0_v451 as __v452 in ??134 with
          | nil_c4  ⇒
            let c_v453 ⇐ (send c_v444 nil_c4‹??152, ??151›) in
            close c_v453
          | cons_c5 z1_v454 zs1_v455 ⇒
            let __v456 =
              (split_i28‹??141›
                (cons_c5‹??140, ??139›
                  z0_v450 (cons_c5‹??137, ??136› z1_v454 zs1_v455)))
            in
            match __v456 as __v457 in ??149 with
            | ⟨xs0_v458, ys0_v459⟩ ⇒
              let r1_v460 ⇐
                fork (r1_v461 : cmsort_ch_i31‹??142›) in
                  (cmsort_worker_i32‹??143› n_v447 xs0_v458 r1_v461)
              in
              let r2_v462 ⇐
                fork (r2_v463 : cmsort_ch_i31‹??144›) in
                  (cmsort_worker_i32‹??145› n_v447 ys0_v459 r2_v463)
              in
              let __v464 ⇐ recv r1_v460 in
              match __v464 as __v465 in ??148 with
              | ⟨xs1_v466, r1_v467⟩ ⇒
                let __v468 ⇐ recv r2_v462 in
                match __v468 as __v469 in ??147 with
                | ⟨ys1_v470, r2_v471⟩ ⇒
                  let zs_v472 = (merge_i29‹??146› xs1_v466 ys1_v470) in
                  let c_v473 ⇐ (send c_v444 zs_v472) in
                  let __v474 ⇐ close r1_v467 in
                  let __v475 ⇐ close r2_v471 in close c_v473
                end
              end
            end
          end
        end
      end

program cmsort_i33 ‹t_s476› :
  (list_d3‹??157, t_s476› nat) → IO (list_d3‹??158, t_s476› nat)
=
  fn (zs0_v478 : (list_d3‹??157, t_s476› nat)) ⇒
    let c_v479 ⇐
      fork (c_v480 : cmsort_ch_i31‹??159›) in
        (cmsort_worker_i32‹??160› 4 zs0_v478 c_v480)
    in
    let __v481 ⇐ recv c_v479 in
    match __v481 as __v482 in ??161 with
    | ⟨zs1_v483, c_v484⟩ ⇒
      let __v485 ⇐ close c_v484 in return zs1_v483
    end

program mkList_i34 ‹t_s486› : nat → (list_d3‹??162, t_s486› nat) =
  fn (n_v488 : nat) ⇒
    match n_v488 as __v489 in ??163 with
    | O ⇒ nil_c4‹??170, ??169›
    | S n0_v490 ⇒
      (cons_c5‹??167, ??166› n_v488 (mkList_i34‹??164› n0_v490))
    end

program main_i35 : IO unit =
  let test_v491 = (mkList_i34‹U› 800000) in
  let sorted_v492 ⇐ (cmsort_i33‹??171› test_v491) in return ()

trans01 success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v12164 : bool) (b2_v12165 : bool) ⇒
    match b1_v12164 as __v12166 in bool with
    | true ⇒ b2_v12165 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v12169 : bool) (b2_v12170 : bool) ⇒
    match b1_v12169 as __v12171 in bool with
    | true ⇒ true | false ⇒ b2_v12170
    end

program notb_i3 : bool → bool =
  fn (b_v12173 : bool) ⇒
    match b_v12173 as __v12174 in bool with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v12177 : nat) (y_v12178 : nat) ⇒
    match x_v12177 as __v12179 in bool with
    | O ⇒ true
    | S x_v12180 ⇒
      match y_v12178 as __v12181 in bool with
      | O ⇒ false | S y_v12182 ⇒ (lten_i4 x_v12180 y_v12182)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v12185 : nat) (y_v12186 : nat) ⇒
    match x_v12185 as __v12187 in bool with
    | O ⇒
      match y_v12186 as __v12188 in bool with
      | O ⇒ true | S __v12189 ⇒ false
      end
    | S x_v12190 ⇒
      match y_v12186 as __v12191 in bool with
      | O ⇒ true | S y_v12192 ⇒ (gten_i5 x_v12190 y_v12192)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v12195 : nat) (y_v12196 : nat) ⇒
    match x_v12195 as __v12197 in bool with
    | O ⇒
      match y_v12196 as __v12198 in bool with
      | O ⇒ false | S y_v12199 ⇒ true
      end
    | S x_v12200 ⇒
      match y_v12196 as __v12201 in bool with
      | O ⇒ false | S y_v12202 ⇒ (ltn_i6 x_v12200 y_v12202)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v12205 : nat) (y_v12206 : nat) ⇒
    match x_v12205 as __v12207 in bool with
    | O ⇒ false
    | S x_v12208 ⇒
      match y_v12206 as __v12209 in bool with
      | O ⇒ true | S y_v12210 ⇒ (gtn_i7 x_v12208 y_v12210)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v12213 : nat) (y_v12214 : nat) ⇒
    match x_v12213 as __v12215 in bool with
    | O ⇒
      match y_v12214 as __v12216 in bool with
      | O ⇒ true | S __v12217 ⇒ false
      end
    | S x_v12218 ⇒
      match y_v12214 as __v12219 in bool with
      | O ⇒ false | S y_v12220 ⇒ (eqn_i8 x_v12218 y_v12220)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v12222 : nat) ⇒
    match x_v12222 as __v12223 in nat with
    | O ⇒ 0 | S x_v12224 ⇒ x_v12224
    end

program addn_i10 : nat → nat → nat =
  fn (x_v12227 : nat) (y_v12228 : nat) ⇒
    match x_v12227 as __v12229 in nat with
    | O ⇒ y_v12228 | S x_v12230 ⇒ (addn_i10 x_v12230 y_v12228).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v12233 : nat) (y_v12234 : nat) ⇒
    match y_v12234 as __v12235 in nat with
    | O ⇒ x_v12233 | S y_v12236 ⇒ (subn_i11 (pred_i9 x_v12233) y_v12236)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v12239 : nat) (y_v12240 : nat) ⇒
    match x_v12239 as __v12241 in nat with
    | O ⇒ 0
    | S x_v12242 ⇒ (addn_i10 y_v12240 (muln_i12 x_v12242 y_v12240))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v12245 : nat) (y_v12246 : nat) ⇒
    match (ltn_i6 x_v12245 y_v12246) as __v12247 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i13 (subn_i11 x_v12245 y_v12246) y_v12246).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v12250 : nat) (y_v12251 : nat) ⇒
    (subn_i11 x_v12250 (muln_i12 (divn_i13 x_v12250 y_v12251) y_v12251))

inductive char_d1 : U =
| Char_c1 of (n_v12252 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v12253 : char_d1) (s_v12254 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v12257 : string_d2) (s2_v12258 : string_d2) ⇒
    match s1_v12257 as __v12259 in string_d2 with
    | EmptyString_c2  ⇒ s2_v12258
    | String_c3 c_v12260 s1_v12261 ⇒
      (String_c3‹› c_v12260 (cats_i15 s1_v12261 s2_v12258))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v12263 : string_d2) ⇒
    match s_v12263 as __v12264 in nat with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v12265 s_v12266 ⇒ (strlen_i16 s_v12266).+1
    end

inductive list_d3 ‹s_s12267, t_s12268›
  (A_v12269 : Type‹s_s12267›) : Type‹t_s12268›
=
| nil_c4 of
    ‹s_s12270, t_s12271› (A_v12272 : Type‹s_s12270›)
    : (list_d3‹s_s12270, t_s12271› A_v12272)
| cons_c5 of
    ‹s_s12273, t_s12274› (A_v12275 : Type‹s_s12273›)
    (hd_v12276 : A_v12275)
    (tl_v12277 : (list_d3‹s_s12273, t_s12274› A_v12275))
    : (list_d3‹s_s12273, t_s12274› A_v12275)

program len_i17 ‹s_s12278, t_s12279› :
  ∀ {A_v12280 : Type‹s_s12278›} →
    (list_d3‹s_s12278, t_s12279› A_v12280) →
      nat ⊗ (list_d3‹s_s12278, t_s12279› A_v12280)
=
  fn {A_v12283 : Type‹s_s12278›}
     (xs_v12284 : (list_d3‹s_s12278, t_s12279› A_v12283)) ⇒
    match xs_v12284 as __v12285 in
      nat ⊗ (list_d3‹s_s12278, t_s12279› A_v12283) with
    | nil_c4  ⇒ ⟨0, nil_c4‹s_s12278, t_s12279›⟩
    | cons_c5 x_v12287 xs_v12288 ⇒
      match (len_i17‹s_s12278, t_s12279› A_v12283 xs_v12288) as __v12289 in
        nat ⊗ (list_d3‹s_s12278, t_s12279› A_v12283) with
      | ⟨n_v12291, xs_v12292⟩ ⇒
        ⟨n_v12291.+1, (cons_c5‹s_s12278, t_s12279› x_v12287 xs_v12292)⟩
      end
    end

program append_i18 ‹s_s12293, t_s12294› :
  ∀ {A_v12295 : Type‹s_s12293›} →
    (list_d3‹s_s12293, t_s12294› A_v12295) →
      (list_d3‹s_s12293, t_s12294› A_v12295) ⊸
        (list_d3‹s_s12293, t_s12294› A_v12295)
=
  fn {A_v12298 : Type‹s_s12293›}
     (xs_v12299 : (list_d3‹s_s12293, t_s12294› A_v12298)) ⇒
    ln (ys_v12300 : (list_d3‹s_s12293, t_s12294› A_v12298)) ⇒
      match xs_v12299 as __v12301 in
        (list_d3‹s_s12293, t_s12294› A_v12298) with
      | nil_c4  ⇒ ys_v12300
      | cons_c5 x_v12302 xs_v12303 ⇒
        (cons_c5‹s_s12293, t_s12294›
          x_v12302
          (append_i18‹s_s12293, t_s12294› A_v12298 xs_v12303 ys_v12300))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v12305 : unit) ⇒
    ⇑(b_v12306 : bool) ⇒
      match b_v12306 as __v12307 in proto with
      | true ⇒ ⇓(__v12308 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v12310 : unit) ⇒
    ⇑(b_v12311 : bool) ⇒
      match b_v12311 as __v12312 in proto with
      | true ⇒ ⇑(__v12313 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v12315 : unit) ⇒
    ⇑(b_v12316 : bool) ⇒
      match b_v12316 as __v12317 in proto with
      | true ⇒ ⇑(__v12318 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v12320 : unit) ⇒
    let ch_v12321 ⇐ open stdin in
    let ch_v12322 ⇐ (send ch_v12321 true) in
    let __v12323 ⇐ recv ch_v12322 in
    match __v12323 as __v12324 in IO string_d2 with
    | ⟨s_v12325, ch_v12326⟩ ⇒
      let ch_v12327 ⇐ (send ch_v12326 false) in
      let __v12328 ⇐ close ch_v12327 in return s_v12325
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v12330 : string_d2) ⇒
    let ch_v12331 ⇐ open stdout in
    let ch_v12332 ⇐ (send ch_v12331 true) in
    let ch_v12333 ⇐ (send ch_v12332 s_v12330) in
    let ch_v12334 ⇐ (send ch_v12333 false) in close ch_v12334

program prerr_i27 : string_d2 → IO unit =
  fn (s_v12336 : string_d2) ⇒
    let ch_v12337 ⇐ open stderr in
    let ch_v12338 ⇐ (send ch_v12337 true) in
    let ch_v12339 ⇐ (send ch_v12338 s_v12336) in
    let ch_v12340 ⇐ (send ch_v12339 false) in close ch_v12340

program split_i28 ‹t_s12341› :
  (list_d3‹U, t_s12341› nat) →
    (list_d3‹U, t_s12341› nat) ⊗ (list_d3‹U, t_s12341› nat)
=
  fn (zs_v12344 : (list_d3‹U, t_s12341› nat)) ⇒
    match zs_v12344 as __v12345 in
      (list_d3‹U, t_s12341› nat) ⊗ (list_d3‹U, t_s12341› nat) with
    | nil_c4  ⇒ ⟨nil_c4‹U, t_s12341›, nil_c4‹U, t_s12341›⟩
    | cons_c5 x_v12347 zs_v12348 ⇒
      match zs_v12348 as __v12349 in
        (list_d3‹U, t_s12341› nat) ⊗ (list_d3‹U, t_s12341› nat) with
      | nil_c4  ⇒
        ⟨(cons_c5‹U, t_s12341› x_v12347 nil_c4‹U, t_s12341›), nil_c4‹U,
        t_s12341›⟩
      | cons_c5 y_v12351 zs_v12352 ⇒
        let __v12353 = (split_i28‹t_s12341› zs_v12352) in
        match __v12353 as __v12354 in
          (list_d3‹U, t_s12341› nat) ⊗ (list_d3‹U, t_s12341› nat) with
        | ⟨xs_v12356, ys_v12357⟩ ⇒
          ⟨(cons_c5‹U, t_s12341› x_v12347 xs_v12356), (cons_c5‹U,
                                                            t_s12341›
                                                              y_v12351
                                                              ys_v12357)⟩
        end
      end
    end

program merge_i29 ‹t_s12358› :
  (list_d3‹U, t_s12358› nat) →
    (list_d3‹U, t_s12358› nat) ⊸ (list_d3‹U, t_s12358› nat)
=
  fn (xs_v12361 : (list_d3‹U, t_s12358› nat)) ⇒
    ln (ys_v12362 : (list_d3‹U, t_s12358› nat)) ⇒
      match xs_v12361 as __v12363 in (list_d3‹U, t_s12358› nat) with
      | nil_c4  ⇒ ys_v12362
      | cons_c5 x_v12364 xs0_v12365 ⇒
        match ys_v12362 as __v12366 in (list_d3‹U, t_s12358› nat) with
        | nil_c4  ⇒ (cons_c5‹U, t_s12358› x_v12364 xs0_v12365)
        | cons_c5 y_v12367 ys0_v12368 ⇒
          match (lten_i4 x_v12364 y_v12367) as __v12369 in
            (list_d3‹U, t_s12358› nat) with
          | true ⇒
            (cons_c5‹U, t_s12358›
              x_v12364
              (merge_i29‹t_s12358›
                xs0_v12365 (cons_c5‹U, t_s12358› y_v12367 ys0_v12368)))
          | false ⇒
            (cons_c5‹U, t_s12358›
              y_v12367
              (merge_i29‹t_s12358›
                (cons_c5‹U, t_s12358› x_v12364 xs0_v12365) ys0_v12368))
          end
        end
      end

program msort_i30 ‹t_s12370› :
  (list_d3‹U, t_s12370› nat) → (list_d3‹U, t_s12370› nat)
=
  fn (zs_v12372 : (list_d3‹U, t_s12370› nat)) ⇒
    match zs_v12372 as __v12373 in (list_d3‹U, t_s12370› nat) with
    | nil_c4  ⇒ nil_c4‹U, t_s12370›
    | cons_c5 x_v12374 zs_v12375 ⇒
      match zs_v12375 as __v12376 in (list_d3‹U, t_s12370› nat) with
      | nil_c4  ⇒
        (cons_c5‹U, t_s12370› x_v12374 nil_c4‹U, t_s12370›)
      | cons_c5 y_v12377 zs_v12378 ⇒
        let __v12379 =
          (split_i28‹t_s12370›
            (cons_c5‹U, t_s12370›
              x_v12374 (cons_c5‹U, t_s12370› y_v12377 zs_v12378)))
        in
        match __v12379 as __v12380 in (list_d3‹U, t_s12370› nat) with
        | ⟨xs_v12381, ys_v12382⟩ ⇒
          (merge_i29‹t_s12370›
            (msort_i30‹t_s12370› xs_v12381)
            (msort_i30‹t_s12370› ys_v12382))
        end
      end
    end

logical cmsort_ch_i31 ‹t_s12383› : L =
  ch⟨⇑(__v12384 : (list_d3‹U, t_s12383› nat)) ⇒ end⟩

program cmsort_worker_i32 ‹t_s12385› :
  nat →
    (list_d3‹U, t_s12385› nat) →
      cmsort_ch_i31‹t_s12385› ⊸ IO unit
=
  fn (n_v12389 : nat) (zs_v12390 : (list_d3‹U, t_s12385› nat)) ⇒
    ln (c_v12391 : cmsort_ch_i31‹t_s12385›) ⇒
      match n_v12389 as __v12392 in IO unit with
      | O ⇒
        let c_v12393 ⇐ (send c_v12391 (msort_i30‹t_s12385› zs_v12390))
        in close c_v12393
      | S n_v12394 ⇒
        match zs_v12390 as __v12395 in IO unit with
        | nil_c4  ⇒
          let c_v12396 ⇐ (send c_v12391 nil_c4‹U, t_s12385›) in
          close c_v12396
        | cons_c5 z0_v12397 zs0_v12398 ⇒
          match zs0_v12398 as __v12399 in IO unit with
          | nil_c4  ⇒
            let c_v12400 ⇐ (send c_v12391 nil_c4‹U, t_s12385›) in
            close c_v12400
          | cons_c5 z1_v12401 zs1_v12402 ⇒
            let __v12403 =
              (split_i28‹t_s12385›
                (cons_c5‹U, t_s12385›
                  z0_v12397 (cons_c5‹U, t_s12385› z1_v12401 zs1_v12402)))
            in
            match __v12403 as __v12404 in IO unit with
            | ⟨xs0_v12405, ys0_v12406⟩ ⇒
              let r1_v12407 ⇐
                fork (r1_v12408 : cmsort_ch_i31‹t_s12385›) in
                  (cmsort_worker_i32‹t_s12385›
                    n_v12394 xs0_v12405 r1_v12408)
              in
              let r2_v12409 ⇐
                fork (r2_v12410 : cmsort_ch_i31‹t_s12385›) in
                  (cmsort_worker_i32‹t_s12385›
                    n_v12394 ys0_v12406 r2_v12410)
              in
              let __v12411 ⇐ recv r1_v12407 in
              match __v12411 as __v12412 in IO unit with
              | ⟨xs1_v12413, r1_v12414⟩ ⇒
                let __v12415 ⇐ recv r2_v12409 in
                match __v12415 as __v12416 in IO unit with
                | ⟨ys1_v12417, r2_v12418⟩ ⇒
                  let zs_v12419 =
                    (merge_i29‹t_s12385› xs1_v12413 ys1_v12417)
                  in
                  let c_v12420 ⇐ (send c_v12391 zs_v12419) in
                  let __v12421 ⇐ close r1_v12414 in
                  let __v12422 ⇐ close r2_v12418 in close c_v12420
                end
              end
            end
          end
        end
      end

program cmsort_i33 ‹t_s12423› :
  (list_d3‹U, t_s12423› nat) → IO (list_d3‹U, t_s12423› nat)
=
  fn (zs0_v12425 : (list_d3‹U, t_s12423› nat)) ⇒
    let c_v12426 ⇐
      fork (c_v12427 : cmsort_ch_i31‹t_s12423›) in
        (cmsort_worker_i32‹t_s12423› 4 zs0_v12425 c_v12427)
    in
    let __v12428 ⇐ recv c_v12426 in
    match __v12428 as __v12429 in IO (list_d3‹U, t_s12423› nat) with
    | ⟨zs1_v12430, c_v12431⟩ ⇒
      let __v12432 ⇐ close c_v12431 in return zs1_v12430
    end

program mkList_i34 ‹t_s12433› : nat → (list_d3‹U, t_s12433› nat) =
  fn (n_v12435 : nat) ⇒
    match n_v12435 as __v12436 in (list_d3‹U, t_s12433› nat) with
    | O ⇒ nil_c4‹U, t_s12433›
    | S n0_v12437 ⇒
      (cons_c5‹U, t_s12433›
        n_v12435 (mkList_i34‹t_s12433› n0_v12437))
    end

program main_i35 : IO unit =
  let test_v12438 = (mkList_i34‹U› 800000) in
  let sorted_v12439 ⇐ (cmsort_i33‹U› test_v12438) in return ()

trans1e success--------------------------

def andb_i1 =
  fn b1_v12902 b2_v12903 ⇒
    match b1_v12902 with
    | true ⇒ b2_v12903 | false ⇒ false
    end

def orb_i2 =
  fn b1_v12904 b2_v12905 ⇒
    match b1_v12904 with
    | true ⇒ true | false ⇒ b2_v12905
    end

def notb_i3 =
  fn b_v12906 ⇒ match b_v12906 with
                  | true ⇒ false | false ⇒ true
                  end

def lten_i4 =
  fn x_v12907 y_v12908 ⇒
    match x_v12907 with
    | O ⇒ true
    | S x_v12909 ⇒
      match y_v12908 with
      | O ⇒ false | S y_v12910 ⇒ ((lten_i4 x_v12909) y_v12910)
      end
    end

def gten_i5 =
  fn x_v12911 y_v12912 ⇒
    match x_v12911 with
    | O ⇒ match y_v12912 with
            | O ⇒ true | S __v12913 ⇒ false
            end
    | S x_v12914 ⇒
      match y_v12912 with
      | O ⇒ true | S y_v12915 ⇒ ((gten_i5 x_v12914) y_v12915)
      end
    end

def ltn_i6 =
  fn x_v12916 y_v12917 ⇒
    match x_v12916 with
    | O ⇒ match y_v12917 with
            | O ⇒ false | S y_v12918 ⇒ true
            end
    | S x_v12919 ⇒
      match y_v12917 with
      | O ⇒ false | S y_v12920 ⇒ ((ltn_i6 x_v12919) y_v12920)
      end
    end

def gtn_i7 =
  fn x_v12921 y_v12922 ⇒
    match x_v12921 with
    | O ⇒ false
    | S x_v12923 ⇒
      match y_v12922 with
      | O ⇒ true | S y_v12924 ⇒ ((gtn_i7 x_v12923) y_v12924)
      end
    end

def eqn_i8 =
  fn x_v12925 y_v12926 ⇒
    match x_v12925 with
    | O ⇒ match y_v12926 with
            | O ⇒ true | S __v12927 ⇒ false
            end
    | S x_v12928 ⇒
      match y_v12926 with
      | O ⇒ false | S y_v12929 ⇒ ((eqn_i8 x_v12928) y_v12929)
      end
    end

def pred_i9 =
  fn x_v12930 ⇒ match x_v12930 with
                  | O ⇒ 0 | S x_v12931 ⇒ x_v12931
                  end

def addn_i10 =
  fn x_v12932 y_v12933 ⇒
    match x_v12932 with
    | O ⇒ y_v12933 | S x_v12934 ⇒ ((addn_i10 x_v12934) y_v12933).+1
    end

def subn_i11 =
  fn x_v12935 y_v12936 ⇒
    match y_v12936 with
    | O ⇒ x_v12935
    | S y_v12937 ⇒ ((subn_i11 (pred_i9 x_v12935)) y_v12937)
    end

def muln_i12 =
  fn x_v12938 y_v12939 ⇒
    match x_v12938 with
    | O ⇒ 0
    | S x_v12940 ⇒ ((addn_i10 y_v12939) ((muln_i12 x_v12940) y_v12939))
    end

def divn_i13 =
  fn x_v12941 y_v12942 ⇒
    match ((ltn_i6 x_v12941) y_v12942) with
    | true ⇒ 0
    | false ⇒ ((divn_i13 ((subn_i11 x_v12941) y_v12942)) y_v12942).+1
    end

def modn_i14 =
  fn x_v12943 y_v12944 ⇒
    ((subn_i11 x_v12943)
      ((muln_i12 ((divn_i13 x_v12943) y_v12944)) y_v12944))

data char_d1 =
| Char_c1 of size(1)

data string_d2 =
| EmptyString_c2 of size(0) | String_c3 of size(2)

def cats_i15 =
  fn s1_v12945 s2_v12946 ⇒
    match s1_v12945 with
    | EmptyString_c2  ⇒ s2_v12946
    | String_c3 c_v12947 s1_v12948 ⇒
      (String_c3 c_v12947 ((cats_i15 s1_v12948) s2_v12946))
    end

def strlen_i16 =
  fn s_v12949 ⇒
    match s_v12949 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v12950 s_v12951 ⇒ (strlen_i16 s_v12951).+1
    end

data listUU_d7 =
| nilUU_c12 of size(0) | consUU_c13 of size(2)

data listUL_d6 =
| nilUL_c10 of size(0) | consUL_c11 of size(2)

data listLU_d5 =
| nilLU_c8 of size(0)

data listLL_d4 =
| nilLL_c6 of size(0) | consLL_c7 of size(2)

def lenUU_i39 =
  fn A_v12952 xs_v12953 ⇒
    match xs_v12953 with
    | nilUU_c12  ⇒ (0, nilUU_c12)
    | consUU_c13 x_v12954 xs_v12955 ⇒
      match ((lenUU_i39 NULL) xs_v12955) with
      | (n_v12956, xs_v12957) ⇒
        (n_v12956.+1, (consUU_c13 x_v12954 xs_v12957))
      end
    end

def lenUL_i38 =
  fn A_v12958 xs_v12959 ⇒
    match xs_v12959 with
    | nilUL_c10  ⇒ (0, nilUL_c10)
    | consUL_c11 x_v12960 xs_v12961 ⇒
      match ((lenUL_i38 NULL) xs_v12961) with
      | (n_v12962, xs_v12963) ⇒
        (n_v12962.+1, (consUL_c11 x_v12960 xs_v12963))
      end
    end

def lenLL_i36 =
  fn A_v12964 xs_v12965 ⇒
    match xs_v12965 with
    | nilLL_c6  ⇒ (0, nilLL_c6)
    | consLL_c7 x_v12966 xs_v12967 ⇒
      match ((lenLL_i36 NULL) xs_v12967) with
      | (n_v12968, xs_v12969) ⇒
        (n_v12968.+1, (consLL_c7 x_v12966 xs_v12969))
      end
    end

def appendUU_i43 =
  fn A_v12970 xs_v12971 ⇒
    ln ys_v12972 ⇒
      match xs_v12971 with
      | nilUU_c12  ⇒ ys_v12972
      | consUU_c13 x_v12973 xs_v12974 ⇒
        (consUU_c13 x_v12973 (((appendUU_i43 NULL) xs_v12974) ys_v12972))
      end

def appendUL_i42 =
  fn A_v12975 xs_v12976 ⇒
    ln ys_v12977 ⇒
      match xs_v12976 with
      | nilUL_c10  ⇒ ys_v12977
      | consUL_c11 x_v12978 xs_v12979 ⇒
        (consUL_c11 x_v12978 (((appendUL_i42 NULL) xs_v12979) ys_v12977))
      end

def appendLL_i40 =
  fn A_v12980 xs_v12981 ⇒
    ln ys_v12982 ⇒
      match xs_v12981 with
      | nilLL_c6  ⇒ ys_v12982
      | consLL_c7 x_v12983 xs_v12984 ⇒
        (consLL_c7 x_v12983 (((appendLL_i40 NULL) xs_v12984) ys_v12982))
      end

def readline_i25 =
  fn __v12985 ⇒
    let ch_v12986 ⇐ open stdin in
    let ch_v12987 ⇐ (send ch_v12986 true) in
    let __v12988 ⇐ recv ch_v12987 in
    match __v12988 with
    | (s_v12989, ch_v12990) ⇒
      let ch_v12991 ⇐ (send ch_v12990 false) in
      let __v12992 ⇐ close⇑ ch_v12991 in return s_v12989
    end

def print_i26 =
  fn s_v12993 ⇒
    let ch_v12994 ⇐ open stdout in
    let ch_v12995 ⇐ (send ch_v12994 true) in
    let ch_v12996 ⇐ (send ch_v12995 s_v12993) in
    let ch_v12997 ⇐ (send ch_v12996 false) in close⇑ ch_v12997

def prerr_i27 =
  fn s_v12998 ⇒
    let ch_v12999 ⇐ open stderr in
    let ch_v13000 ⇐ (send ch_v12999 true) in
    let ch_v13001 ⇐ (send ch_v13000 s_v12998) in
    let ch_v13002 ⇐ (send ch_v13001 false) in close⇑ ch_v13002

def splitU_i45 =
  fn zs_v13003 ⇒
    match zs_v13003 with
    | nilUU_c12  ⇒ (nilUU_c12, nilUU_c12)
    | consUU_c13 x_v13004 zs_v13005 ⇒
      match zs_v13005 with
      | nilUU_c12  ⇒ ((consUU_c13 x_v13004 nilUU_c12), nilUU_c12)
      | consUU_c13 y_v13006 zs_v13007 ⇒
        let __v13008 = (splitU_i45 zs_v13007) in
        match __v13008 with
        | (xs_v13009, ys_v13010) ⇒
          ((consUU_c13 x_v13004 xs_v13009), (consUU_c13 y_v13006 ys_v13010))
        end
      end
    end

def splitL_i44 =
  fn zs_v13011 ⇒
    match zs_v13011 with
    | nilUL_c10  ⇒ (nilUL_c10, nilUL_c10)
    | consUL_c11 x_v13012 zs_v13013 ⇒
      match zs_v13013 with
      | nilUL_c10  ⇒ ((consUL_c11 x_v13012 nilUL_c10), nilUL_c10)
      | consUL_c11 y_v13014 zs_v13015 ⇒
        let __v13016 = (splitL_i44 zs_v13015) in
        match __v13016 with
        | (xs_v13017, ys_v13018) ⇒
          ((consUL_c11 x_v13012 xs_v13017), (consUL_c11 y_v13014 ys_v13018))
        end
      end
    end

def mergeU_i47 =
  fn xs_v13019 ⇒
    ln ys_v13020 ⇒
      match xs_v13019 with
      | nilUU_c12  ⇒ ys_v13020
      | consUU_c13 x_v13021 xs0_v13022 ⇒
        match ys_v13020 with
        | nilUU_c12  ⇒ (consUU_c13 x_v13021 xs0_v13022)
        | consUU_c13 y_v13023 ys0_v13024 ⇒
          match ((lten_i4 x_v13021) y_v13023) with
          | true ⇒
            (consUU_c13
              x_v13021
              ((mergeU_i47 xs0_v13022) (consUU_c13 y_v13023 ys0_v13024)))
          | false ⇒
            (consUU_c13
              y_v13023
              ((mergeU_i47 (consUU_c13 x_v13021 xs0_v13022)) ys0_v13024))
          end
        end
      end

def mergeL_i46 =
  fn xs_v13025 ⇒
    ln ys_v13026 ⇒
      match xs_v13025 with
      | nilUL_c10  ⇒ ys_v13026
      | consUL_c11 x_v13027 xs0_v13028 ⇒
        match ys_v13026 with
        | nilUL_c10  ⇒ (consUL_c11 x_v13027 xs0_v13028)
        | consUL_c11 y_v13029 ys0_v13030 ⇒
          match ((lten_i4 x_v13027) y_v13029) with
          | true ⇒
            (consUL_c11
              x_v13027
              ((mergeL_i46 xs0_v13028) (consUL_c11 y_v13029 ys0_v13030)))
          | false ⇒
            (consUL_c11
              y_v13029
              ((mergeL_i46 (consUL_c11 x_v13027 xs0_v13028)) ys0_v13030))
          end
        end
      end

def msortU_i49 =
  fn zs_v13031 ⇒
    match zs_v13031 with
    | nilUU_c12  ⇒ nilUU_c12
    | consUU_c13 x_v13032 zs_v13033 ⇒
      match zs_v13033 with
      | nilUU_c12  ⇒ (consUU_c13 x_v13032 nilUU_c12)
      | consUU_c13 y_v13034 zs_v13035 ⇒
        let __v13036 =
          (splitU_i45 (consUU_c13 x_v13032 (consUU_c13 y_v13034 zs_v13035)))
        in
        match __v13036 with
        | (xs_v13037, ys_v13038) ⇒
          ((mergeU_i47 (msortU_i49 xs_v13037)) (msortU_i49 ys_v13038))
        end
      end
    end

def msortL_i48 =
  fn zs_v13039 ⇒
    match zs_v13039 with
    | nilUL_c10  ⇒ nilUL_c10
    | consUL_c11 x_v13040 zs_v13041 ⇒
      match zs_v13041 with
      | nilUL_c10  ⇒ (consUL_c11 x_v13040 nilUL_c10)
      | consUL_c11 y_v13042 zs_v13043 ⇒
        let __v13044 =
          (splitL_i44 (consUL_c11 x_v13040 (consUL_c11 y_v13042 zs_v13043)))
        in
        match __v13044 with
        | (xs_v13045, ys_v13046) ⇒
          ((mergeL_i46 (msortL_i48 xs_v13045)) (msortL_i48 ys_v13046))
        end
      end
    end

def cmsort_workerU_i53 =
  fn n_v13047 zs_v13048 ⇒
    ln c_v13049 ⇒
      match n_v13047 with
      | O ⇒
        let c_v13050 ⇐ (send c_v13049 (msortU_i49 zs_v13048)) in
        close⇑ c_v13050
      | S n_v13051 ⇒
        match zs_v13048 with
        | nilUU_c12  ⇒
          let c_v13052 ⇐ (send c_v13049 nilUU_c12) in close⇑ c_v13052
        | consUU_c13 z0_v13053 zs0_v13054 ⇒
          match zs0_v13054 with
          | nilUU_c12  ⇒
            let c_v13055 ⇐ (send c_v13049 nilUU_c12) in close⇑ c_v13055
          | consUU_c13 z1_v13056 zs1_v13057 ⇒
            let __v13058 =
              (splitU_i45
                (consUU_c13 z0_v13053 (consUU_c13 z1_v13056 zs1_v13057)))
            in
            match __v13058 with
            | (xs0_v13059, ys0_v13060) ⇒
              let r1_v13061 ⇐
                fork r1_v13062 in
                  (((cmsort_workerU_i53 n_v13051) xs0_v13059) r1_v13062)
              in
              let r2_v13063 ⇐
                fork r2_v13064 in
                  (((cmsort_workerU_i53 n_v13051) ys0_v13060) r2_v13064)
              in
              let __v13065 ⇐ recv r1_v13061 in
              match __v13065 with
              | (xs1_v13066, r1_v13067) ⇒
                let __v13068 ⇐ recv r2_v13063 in
                match __v13068 with
                | (ys1_v13069, r2_v13070) ⇒
                  let zs_v13071 = ((mergeU_i47 xs1_v13066) ys1_v13069) in
                  let c_v13072 ⇐ (send c_v13049 zs_v13071) in
                  let __v13073 ⇐ close⇓ r1_v13067 in
                  let __v13074 ⇐ close⇓ r2_v13070 in close⇑ c_v13072
                end
              end
            end
          end
        end
      end

def cmsort_workerL_i52 =
  fn n_v13075 zs_v13076 ⇒
    ln c_v13077 ⇒
      match n_v13075 with
      | O ⇒
        let c_v13078 ⇐ (send c_v13077 (msortL_i48 zs_v13076)) in
        close⇑ c_v13078
      | S n_v13079 ⇒
        match zs_v13076 with
        | nilUL_c10  ⇒
          let c_v13080 ⇐ (send c_v13077 nilUL_c10) in close⇑ c_v13080
        | consUL_c11 z0_v13081 zs0_v13082 ⇒
          match zs0_v13082 with
          | nilUL_c10  ⇒
            let c_v13083 ⇐ (send c_v13077 nilUL_c10) in close⇑ c_v13083
          | consUL_c11 z1_v13084 zs1_v13085 ⇒
            let __v13086 =
              (splitL_i44
                (consUL_c11 z0_v13081 (consUL_c11 z1_v13084 zs1_v13085)))
            in
            match __v13086 with
            | (xs0_v13087, ys0_v13088) ⇒
              let r1_v13089 ⇐
                fork r1_v13090 in
                  (((cmsort_workerL_i52 n_v13079) xs0_v13087) r1_v13090)
              in
              let r2_v13091 ⇐
                fork r2_v13092 in
                  (((cmsort_workerL_i52 n_v13079) ys0_v13088) r2_v13092)
              in
              let __v13093 ⇐ recv r1_v13089 in
              match __v13093 with
              | (xs1_v13094, r1_v13095) ⇒
                let __v13096 ⇐ recv r2_v13091 in
                match __v13096 with
                | (ys1_v13097, r2_v13098) ⇒
                  let zs_v13099 = ((mergeL_i46 xs1_v13094) ys1_v13097) in
                  let c_v13100 ⇐ (send c_v13077 zs_v13099) in
                  let __v13101 ⇐ close⇓ r1_v13095 in
                  let __v13102 ⇐ close⇓ r2_v13098 in close⇑ c_v13100
                end
              end
            end
          end
        end
      end

def cmsortU_i55 =
  fn zs0_v13103 ⇒
    let c_v13104 ⇐
      fork c_v13105 in (((cmsort_workerU_i53 4) zs0_v13103) c_v13105)
    in
    let __v13106 ⇐ recv c_v13104 in
    match __v13106 with
    | (zs1_v13107, c_v13108) ⇒
      let __v13109 ⇐ close⇓ c_v13108 in return zs1_v13107
    end

def cmsortL_i54 =
  fn zs0_v13110 ⇒
    let c_v13111 ⇐
      fork c_v13112 in (((cmsort_workerL_i52 4) zs0_v13110) c_v13112)
    in
    let __v13113 ⇐ recv c_v13111 in
    match __v13113 with
    | (zs1_v13114, c_v13115) ⇒
      let __v13116 ⇐ close⇓ c_v13115 in return zs1_v13114
    end

def mkListU_i57 =
  fn n_v13117 ⇒
    match n_v13117 with
    | O ⇒ nilUU_c12
    | S n0_v13118 ⇒ (consUU_c13 n_v13117 (mkListU_i57 n0_v13118))
    end

def mkListL_i56 =
  fn n_v13119 ⇒
    match n_v13119 with
    | O ⇒ nilUL_c10
    | S n0_v13120 ⇒ (consUL_c11 n_v13119 (mkListL_i56 n0_v13120))
    end

main =
  let test_v13121 = (mkListU_i57 800000) in
  let sorted_v13122 ⇐ (cmsortU_i55 test_v13121) in return ()

trans12 success--------------------------

fun andb_i1(b1_v13455, b2_v13456) = if b1_v13455 then
                                      b2_v13456
                                    else
                                      0

val andbclo_i58 = fn b1_v13457 b2_v13458 ⇒ andb_i1(b1_v13457, b2_v13458)

fun orb_i2(b1_v13459, b2_v13460) = if b1_v13459 then
                                     1
                                   else
                                     b2_v13460

val orbclo_i59 = fn b1_v13461 b2_v13462 ⇒ orb_i2(b1_v13461, b2_v13462)

fun notb_i3(b_v13463) = if b_v13463 then
                          0
                        else
                          1

val notbclo_i60 = fn b_v13464 ⇒ notb_i3(b_v13464)

fun lten_i4(x_v13465, y_v13466) =
  let __v13467 = x_v13465 in
  if __v13467 then
    let x_v13468 = __v13467.-1 in
    let __v13469 = y_v13466 in
    if __v13469 then
      let y_v13470 = __v13469.-1 in lten_i4(x_v13468, y_v13470)
    else
      0
  else
    1

val ltenclo_i61 = fn x_v13471 y_v13472 ⇒ lten_i4(x_v13471, y_v13472)

fun gten_i5(x_v13473, y_v13474) =
  let __v13475 = x_v13473 in
  if __v13475 then
    let x_v13476 = __v13475.-1 in
    let __v13477 = y_v13474 in
    if __v13477 then
      let y_v13478 = __v13477.-1 in gten_i5(x_v13476, y_v13478)
    else
      1
  else
    let __v13479 = y_v13474 in
    if __v13479 then
      let __v13480 = __v13479.-1 in 0
    else
      1

val gtenclo_i62 = fn x_v13481 y_v13482 ⇒ gten_i5(x_v13481, y_v13482)

fun ltn_i6(x_v13483, y_v13484) =
  let __v13485 = x_v13483 in
  if __v13485 then
    let x_v13486 = __v13485.-1 in
    let __v13487 = y_v13484 in
    if __v13487 then
      let y_v13488 = __v13487.-1 in ltn_i6(x_v13486, y_v13488)
    else
      0
  else
    let __v13489 = y_v13484 in
    if __v13489 then
      let y_v13490 = __v13489.-1 in 1
    else
      0

val ltnclo_i63 = fn x_v13491 y_v13492 ⇒ ltn_i6(x_v13491, y_v13492)

fun gtn_i7(x_v13493, y_v13494) =
  let __v13495 = x_v13493 in
  if __v13495 then
    let x_v13496 = __v13495.-1 in
    let __v13497 = y_v13494 in
    if __v13497 then
      let y_v13498 = __v13497.-1 in gtn_i7(x_v13496, y_v13498)
    else
      1
  else
    0

val gtnclo_i64 = fn x_v13499 y_v13500 ⇒ gtn_i7(x_v13499, y_v13500)

fun eqn_i8(x_v13501, y_v13502) =
  let __v13503 = x_v13501 in
  if __v13503 then
    let x_v13504 = __v13503.-1 in
    let __v13505 = y_v13502 in
    if __v13505 then
      let y_v13506 = __v13505.-1 in eqn_i8(x_v13504, y_v13506)
    else
      0
  else
    let __v13507 = y_v13502 in
    if __v13507 then
      let __v13508 = __v13507.-1 in 0
    else
      1

val eqnclo_i65 = fn x_v13509 y_v13510 ⇒ eqn_i8(x_v13509, y_v13510)

fun pred_i9(x_v13511) =
  let __v13512 = x_v13511 in
  if __v13512 then
    let x_v13513 = __v13512.-1 in x_v13513
  else
    0

val predclo_i66 = fn x_v13514 ⇒ pred_i9(x_v13514)

fun addn_i10(x_v13515, y_v13516) =
  let __v13517 = x_v13515 in
  if __v13517 then
    let x_v13518 = __v13517.-1 in addn_i10(x_v13518, y_v13516).+1
  else
    y_v13516

val addnclo_i67 = fn x_v13519 y_v13520 ⇒ addn_i10(x_v13519, y_v13520)

fun subn_i11(x_v13521, y_v13522) =
  let __v13523 = y_v13522 in
  if __v13523 then
    let y_v13524 = __v13523.-1 in subn_i11(pred_i9(x_v13521), y_v13524)
  else
    x_v13521

val subnclo_i68 = fn x_v13525 y_v13526 ⇒ subn_i11(x_v13525, y_v13526)

fun muln_i12(x_v13527, y_v13528) =
  let __v13529 = x_v13527 in
  if __v13529 then
    let x_v13530 = __v13529.-1 in
    addn_i10(y_v13528, muln_i12(x_v13530, y_v13528))
  else
    0

val mulnclo_i69 = fn x_v13531 y_v13532 ⇒ muln_i12(x_v13531, y_v13532)

fun divn_i13(x_v13533, y_v13534) =
  if ltn_i6(x_v13533, y_v13534) then
    0
  else
    divn_i13(subn_i11(x_v13533, y_v13534), y_v13534).+1

val divnclo_i70 = fn x_v13535 y_v13536 ⇒ divn_i13(x_v13535, y_v13536)

fun modn_i14(x_v13537, y_v13538) =
  subn_i11(x_v13537, muln_i12(divn_i13(x_v13537, y_v13538), y_v13538))

val modnclo_i71 = fn x_v13539 y_v13540 ⇒ modn_i14(x_v13539, y_v13540)

fun cats_i15(s1_v13541, s2_v13542) =
  match s1_v13541 with
  | EmptyString_c2  ⇒ s2_v13542
  | String_c3 c_v13543 s1_v13544 ⇒
    (String_c3 c_v13543 cats_i15(s1_v13544, s2_v13542))
  end

val catsclo_i72 = fn s1_v13545 s2_v13546 ⇒ cats_i15(s1_v13545, s2_v13546)

fun strlen_i16(s_v13547) =
  match s_v13547 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v13548 s_v13549 ⇒ strlen_i16(s_v13549).+1
  end

val strlenclo_i73 = fn s_v13550 ⇒ strlen_i16(s_v13550)

fun lenUU_i39(A_v13551, xs_v13552) =
  match xs_v13552 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v13553 xs_v13554 ⇒
    match lenUU_i39(NULL, xs_v13554) with
    | (n_v13555, xs_v13556) ⇒
      (n_v13555.+1, (consUU_c13 x_v13553 xs_v13556))
    end
  end

val lenUUclo_i74 = fn A_v13557 xs_v13558 ⇒ lenUU_i39(A_v13557, xs_v13558)

fun lenUL_i38(A_v13559, xs_v13560) =
  match xs_v13560 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v13561 xs_v13562 ⇒
    match lenUL_i38(NULL, xs_v13562) with
    | (n_v13563, xs_v13564) ⇒
      (n_v13563.+1, (consUL_c11 x_v13561 xs_v13564))
    end
  end

val lenULclo_i75 = fn A_v13565 xs_v13566 ⇒ lenUL_i38(A_v13565, xs_v13566)

fun lenLL_i36(A_v13567, xs_v13568) =
  match xs_v13568 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v13569 xs_v13570 ⇒
    match lenLL_i36(NULL, xs_v13570) with
    | (n_v13571, xs_v13572) ⇒ (n_v13571.+1, (consLL_c7 x_v13569 xs_v13572))
    end
  end

val lenLLclo_i76 = fn A_v13573 xs_v13574 ⇒ lenLL_i36(A_v13573, xs_v13574)

fun appendUU_i43(A_v13575, xs_v13576, ys_v13577) =
  match xs_v13576 with
  | nilUU_c12  ⇒ ys_v13577
  | consUU_c13 x_v13578 xs_v13579 ⇒
    (consUU_c13 x_v13578 appendUU_i43(NULL, xs_v13579, ys_v13577))
  end

val appendUUclo_i77 =
  fn A_v13580 xs_v13581 ⇒
    ln ys_v13582 ⇒ appendUU_i43(A_v13580, xs_v13581, ys_v13582)

fun appendUL_i42(A_v13583, xs_v13584, ys_v13585) =
  match xs_v13584 with
  | nilUL_c10  ⇒ ys_v13585
  | consUL_c11 x_v13586 xs_v13587 ⇒
    (consUL_c11 x_v13586 appendUL_i42(NULL, xs_v13587, ys_v13585))
  end

val appendULclo_i78 =
  fn A_v13588 xs_v13589 ⇒
    ln ys_v13590 ⇒ appendUL_i42(A_v13588, xs_v13589, ys_v13590)

fun appendLL_i40(A_v13591, xs_v13592, ys_v13593) =
  match xs_v13592 with
  | nilLL_c6  ⇒ ys_v13593
  | consLL_c7 x_v13594 xs_v13595 ⇒
    (consLL_c7 x_v13594 appendLL_i40(NULL, xs_v13595, ys_v13593))
  end

val appendLLclo_i79 =
  fn A_v13596 xs_v13597 ⇒
    ln ys_v13598 ⇒ appendLL_i40(A_v13596, xs_v13597, ys_v13598)

fun readline_i25(__v13599) =
  ln __v13600 ⇒
    let ch_v13601 = (ln __v13602 ⇒ open stdin) NULL in
    let ch_v13603 =
      ((fn x_v13604 ⇒ ln __v13605 ⇒ send(ch_v13601, x_v13604)) 1) NULL
    in
    let __v13606 = (ln __v13607 ⇒ recv(ch_v13603)) NULL in
    (match __v13606 with
     | (s_v13608, ch_v13609) ⇒
       ln __v13610 ⇒
         let ch_v13611 =
           ((fn x_v13612 ⇒ ln __v13613 ⇒ send(ch_v13609, x_v13612)) 0)
             NULL
         in
         let __v13614 =
           (ln __v13615 ⇒ let __v13616 = ch_v13611 in NULL) NULL
         in (ln __v13617 ⇒ s_v13608) NULL
     end) NULL

val readlineclo_i80 = fn __v13618 ⇒ readline_i25(__v13618)

fun print_i26(s_v13619) =
  ln __v13620 ⇒
    let ch_v13621 = (ln __v13622 ⇒ open stdout) NULL in
    let ch_v13623 =
      ((fn x_v13624 ⇒ ln __v13625 ⇒ send(ch_v13621, x_v13624)) 1) NULL
    in
    let ch_v13626 =
      ((fn x_v13627 ⇒ ln __v13628 ⇒ send(ch_v13623, x_v13627)) s_v13619)
        NULL
    in
    let ch_v13629 =
      ((fn x_v13630 ⇒ ln __v13631 ⇒ send(ch_v13626, x_v13630)) 0) NULL
    in (ln __v13632 ⇒ let __v13633 = ch_v13629 in NULL) NULL

val printclo_i81 = fn s_v13634 ⇒ print_i26(s_v13634)

fun prerr_i27(s_v13635) =
  ln __v13636 ⇒
    let ch_v13637 = (ln __v13638 ⇒ open stderr) NULL in
    let ch_v13639 =
      ((fn x_v13640 ⇒ ln __v13641 ⇒ send(ch_v13637, x_v13640)) 1) NULL
    in
    let ch_v13642 =
      ((fn x_v13643 ⇒ ln __v13644 ⇒ send(ch_v13639, x_v13643)) s_v13635)
        NULL
    in
    let ch_v13645 =
      ((fn x_v13646 ⇒ ln __v13647 ⇒ send(ch_v13642, x_v13646)) 0) NULL
    in (ln __v13648 ⇒ let __v13649 = ch_v13645 in NULL) NULL

val prerrclo_i82 = fn s_v13650 ⇒ prerr_i27(s_v13650)

fun splitU_i45(zs_v13651) =
  match zs_v13651 with
  | nilUU_c12  ⇒ (nilUU_c12, nilUU_c12)
  | consUU_c13 x_v13652 zs_v13653 ⇒
    match zs_v13653 with
    | nilUU_c12  ⇒ ((consUU_c13 x_v13652 nilUU_c12), nilUU_c12)
    | consUU_c13 y_v13654 zs_v13655 ⇒
      let __v13656 = splitU_i45(zs_v13655) in
      match __v13656 with
      | (xs_v13657, ys_v13658) ⇒
        ((consUU_c13 x_v13652 xs_v13657), (consUU_c13 y_v13654 ys_v13658))
      end
    end
  end

val splitUclo_i83 = fn zs_v13659 ⇒ splitU_i45(zs_v13659)

fun splitL_i44(zs_v13660) =
  match zs_v13660 with
  | nilUL_c10  ⇒ (nilUL_c10, nilUL_c10)
  | consUL_c11 x_v13661 zs_v13662 ⇒
    match zs_v13662 with
    | nilUL_c10  ⇒ ((consUL_c11 x_v13661 nilUL_c10), nilUL_c10)
    | consUL_c11 y_v13663 zs_v13664 ⇒
      let __v13665 = splitL_i44(zs_v13664) in
      match __v13665 with
      | (xs_v13666, ys_v13667) ⇒
        ((consUL_c11 x_v13661 xs_v13666), (consUL_c11 y_v13663 ys_v13667))
      end
    end
  end

val splitLclo_i84 = fn zs_v13668 ⇒ splitL_i44(zs_v13668)

fun mergeU_i47(xs_v13669, ys_v13670) =
  match xs_v13669 with
  | nilUU_c12  ⇒ ys_v13670
  | consUU_c13 x_v13671 xs0_v13672 ⇒
    match ys_v13670 with
    | nilUU_c12  ⇒ (consUU_c13 x_v13671 xs0_v13672)
    | consUU_c13 y_v13673 ys0_v13674 ⇒
      if lten_i4(x_v13671, y_v13673) then
        (consUU_c13
          x_v13671 mergeU_i47(xs0_v13672, (consUU_c13 y_v13673 ys0_v13674)))
      else
        (consUU_c13
          y_v13673 mergeU_i47((consUU_c13 x_v13671 xs0_v13672), ys0_v13674))
    end
  end

val mergeUclo_i85 =
  fn xs_v13675 ⇒ ln ys_v13676 ⇒ mergeU_i47(xs_v13675, ys_v13676)

fun mergeL_i46(xs_v13677, ys_v13678) =
  match xs_v13677 with
  | nilUL_c10  ⇒ ys_v13678
  | consUL_c11 x_v13679 xs0_v13680 ⇒
    match ys_v13678 with
    | nilUL_c10  ⇒ (consUL_c11 x_v13679 xs0_v13680)
    | consUL_c11 y_v13681 ys0_v13682 ⇒
      if lten_i4(x_v13679, y_v13681) then
        (consUL_c11
          x_v13679 mergeL_i46(xs0_v13680, (consUL_c11 y_v13681 ys0_v13682)))
      else
        (consUL_c11
          y_v13681 mergeL_i46((consUL_c11 x_v13679 xs0_v13680), ys0_v13682))
    end
  end

val mergeLclo_i86 =
  fn xs_v13683 ⇒ ln ys_v13684 ⇒ mergeL_i46(xs_v13683, ys_v13684)

fun msortU_i49(zs_v13685) =
  match zs_v13685 with
  | nilUU_c12  ⇒ nilUU_c12
  | consUU_c13 x_v13686 zs_v13687 ⇒
    match zs_v13687 with
    | nilUU_c12  ⇒ (consUU_c13 x_v13686 nilUU_c12)
    | consUU_c13 y_v13688 zs_v13689 ⇒
      let __v13690 =
        splitU_i45((consUU_c13 x_v13686 (consUU_c13 y_v13688 zs_v13689)))
      in
      match __v13690 with
      | (xs_v13691, ys_v13692) ⇒
        mergeU_i47(msortU_i49(xs_v13691), msortU_i49(ys_v13692))
      end
    end
  end

val msortUclo_i87 = fn zs_v13693 ⇒ msortU_i49(zs_v13693)

fun msortL_i48(zs_v13694) =
  match zs_v13694 with
  | nilUL_c10  ⇒ nilUL_c10
  | consUL_c11 x_v13695 zs_v13696 ⇒
    match zs_v13696 with
    | nilUL_c10  ⇒ (consUL_c11 x_v13695 nilUL_c10)
    | consUL_c11 y_v13697 zs_v13698 ⇒
      let __v13699 =
        splitL_i44((consUL_c11 x_v13695 (consUL_c11 y_v13697 zs_v13698)))
      in
      match __v13699 with
      | (xs_v13700, ys_v13701) ⇒
        mergeL_i46(msortL_i48(xs_v13700), msortL_i48(ys_v13701))
      end
    end
  end

val msortLclo_i88 = fn zs_v13702 ⇒ msortL_i48(zs_v13702)

fun cmsort_workerU_i53(n_v13703, zs_v13704, c_v13705) =
  let __v13706 = n_v13703 in
  if __v13706 then
    let n_v13707 = __v13706.-1 in
    match zs_v13704 with
    | nilUU_c12  ⇒
      ln __v13708 ⇒
        let c_v13709 =
          ((fn x_v13710 ⇒ ln __v13711 ⇒ send(c_v13705, x_v13710))
             nilUU_c12)
            NULL
        in (ln __v13712 ⇒ let __v13713 = c_v13709 in NULL) NULL
    | consUU_c13 z0_v13714 zs0_v13715 ⇒
      match zs0_v13715 with
      | nilUU_c12  ⇒
        ln __v13716 ⇒
          let c_v13717 =
            ((fn x_v13718 ⇒ ln __v13719 ⇒ send(c_v13705, x_v13718))
               nilUU_c12)
              NULL
          in (ln __v13720 ⇒ let __v13721 = c_v13717 in NULL) NULL
      | consUU_c13 z1_v13722 zs1_v13723 ⇒
        let __v13724 =
          splitU_i45((consUU_c13 z0_v13714 (consUU_c13 z1_v13722 zs1_v13723)))
        in
        match __v13724 with
        | (xs0_v13725, ys0_v13726) ⇒
          ln __v13727 ⇒
            let r1_v13728 =
              (ln __v13729 ⇒
                 fork r1_v13730 in
                   (cmsort_workerU_i53(n_v13707, xs0_v13725, r1_v13730)) NULL)
                NULL
            in
            let r2_v13731 =
              (ln __v13732 ⇒
                 fork r2_v13733 in
                   (cmsort_workerU_i53(n_v13707, ys0_v13726, r2_v13733)) NULL)
                NULL
            in
            let __v13734 = (ln __v13735 ⇒ recv(r1_v13728)) NULL in
            (match __v13734 with
             | (xs1_v13736, r1_v13737) ⇒
               ln __v13738 ⇒
                 let __v13739 = (ln __v13740 ⇒ recv(r2_v13731)) NULL in
                 (match __v13739 with
                  | (ys1_v13741, r2_v13742) ⇒
                    let zs_v13743 = mergeU_i47(xs1_v13736, ys1_v13741) in
                    ln __v13744 ⇒
                      let c_v13745 =
                        ((fn x_v13746 ⇒
                            ln __v13747 ⇒ send(c_v13705, x_v13746))
                           zs_v13743)
                          NULL
                      in
                      let __v13748 = (ln __v13749 ⇒ close(r1_v13737)) NULL
                      in
                      let __v13750 = (ln __v13751 ⇒ close(r2_v13742)) NULL
                      in
                      (ln __v13752 ⇒ let __v13753 = c_v13745 in NULL) NULL
                  end) NULL
             end) NULL
        end
      end
    end
  else
    ln __v13754 ⇒
      let c_v13755 =
        ((fn x_v13756 ⇒ ln __v13757 ⇒ send(c_v13705, x_v13756))
           msortU_i49(zs_v13704))
          NULL
      in (ln __v13758 ⇒ let __v13759 = c_v13755 in NULL) NULL

val cmsort_workerUclo_i89 =
  fn n_v13760 zs_v13761 ⇒
    ln c_v13762 ⇒ cmsort_workerU_i53(n_v13760, zs_v13761, c_v13762)

fun cmsort_workerL_i52(n_v13763, zs_v13764, c_v13765) =
  let __v13766 = n_v13763 in
  if __v13766 then
    let n_v13767 = __v13766.-1 in
    match zs_v13764 with
    | nilUL_c10  ⇒
      ln __v13768 ⇒
        let c_v13769 =
          ((ln x_v13770 __v13771 ⇒ send(c_v13765, x_v13770)) nilUL_c10)
            NULL
        in (ln __v13772 ⇒ let __v13773 = c_v13769 in NULL) NULL
    | consUL_c11 z0_v13774 zs0_v13775 ⇒
      match zs0_v13775 with
      | nilUL_c10  ⇒
        ln __v13776 ⇒
          let c_v13777 =
            ((ln x_v13778 __v13779 ⇒ send(c_v13765, x_v13778)) nilUL_c10)
              NULL
          in (ln __v13780 ⇒ let __v13781 = c_v13777 in NULL) NULL
      | consUL_c11 z1_v13782 zs1_v13783 ⇒
        let __v13784 =
          splitL_i44((consUL_c11 z0_v13774 (consUL_c11 z1_v13782 zs1_v13783)))
        in
        match __v13784 with
        | (xs0_v13785, ys0_v13786) ⇒
          ln __v13787 ⇒
            let r1_v13788 =
              (ln __v13789 ⇒
                 fork r1_v13790 in
                   (cmsort_workerL_i52(n_v13767, xs0_v13785, r1_v13790)) NULL)
                NULL
            in
            let r2_v13791 =
              (ln __v13792 ⇒
                 fork r2_v13793 in
                   (cmsort_workerL_i52(n_v13767, ys0_v13786, r2_v13793)) NULL)
                NULL
            in
            let __v13794 = (ln __v13795 ⇒ recv(r1_v13788)) NULL in
            (match __v13794 with
             | (xs1_v13796, r1_v13797) ⇒
               ln __v13798 ⇒
                 let __v13799 = (ln __v13800 ⇒ recv(r2_v13791)) NULL in
                 (match __v13799 with
                  | (ys1_v13801, r2_v13802) ⇒
                    let zs_v13803 = mergeL_i46(xs1_v13796, ys1_v13801) in
                    ln __v13804 ⇒
                      let c_v13805 =
                        ((ln x_v13806 __v13807 ⇒ send(c_v13765, x_v13806))
                           zs_v13803)
                          NULL
                      in
                      let __v13808 = (ln __v13809 ⇒ close(r1_v13797)) NULL
                      in
                      let __v13810 = (ln __v13811 ⇒ close(r2_v13802)) NULL
                      in
                      (ln __v13812 ⇒ let __v13813 = c_v13805 in NULL) NULL
                  end) NULL
             end) NULL
        end
      end
    end
  else
    ln __v13814 ⇒
      let c_v13815 =
        ((ln x_v13816 __v13817 ⇒ send(c_v13765, x_v13816))
           msortL_i48(zs_v13764))
          NULL
      in (ln __v13818 ⇒ let __v13819 = c_v13815 in NULL) NULL

val cmsort_workerLclo_i90 =
  fn n_v13820 zs_v13821 ⇒
    ln c_v13822 ⇒ cmsort_workerL_i52(n_v13820, zs_v13821, c_v13822)

fun cmsortU_i55(zs0_v13823) =
  ln __v13824 ⇒
    let c_v13825 =
      (ln __v13826 ⇒
         fork c_v13827 in (cmsort_workerU_i53(4, zs0_v13823, c_v13827)) NULL)
        NULL
    in
    let __v13828 = (ln __v13829 ⇒ recv(c_v13825)) NULL in
    (match __v13828 with
     | (zs1_v13830, c_v13831) ⇒
       ln __v13832 ⇒
         let __v13833 = (ln __v13834 ⇒ close(c_v13831)) NULL in
         (ln __v13835 ⇒ zs1_v13830) NULL
     end) NULL

val cmsortUclo_i91 = fn zs0_v13836 ⇒ cmsortU_i55(zs0_v13836)

fun cmsortL_i54(zs0_v13837) =
  ln __v13838 ⇒
    let c_v13839 =
      (ln __v13840 ⇒
         fork c_v13841 in (cmsort_workerL_i52(4, zs0_v13837, c_v13841)) NULL)
        NULL
    in
    let __v13842 = (ln __v13843 ⇒ recv(c_v13839)) NULL in
    (match __v13842 with
     | (zs1_v13844, c_v13845) ⇒
       ln __v13846 ⇒
         let __v13847 = (ln __v13848 ⇒ close(c_v13845)) NULL in
         (ln __v13849 ⇒ zs1_v13844) NULL
     end) NULL

val cmsortLclo_i92 = fn zs0_v13850 ⇒ cmsortL_i54(zs0_v13850)

fun mkListU_i57(n_v13851) =
  let __v13852 = n_v13851 in
  if __v13852 then
    let n0_v13853 = __v13852.-1 in
    (consUU_c13 n_v13851 mkListU_i57(n0_v13853))
  else
    nilUU_c12

val mkListUclo_i93 = fn n_v13854 ⇒ mkListU_i57(n_v13854)

fun mkListL_i56(n_v13855) =
  let __v13856 = n_v13855 in
  if __v13856 then
    let n0_v13857 = __v13856.-1 in
    (consUL_c11 n_v13855 mkListL_i56(n0_v13857))
  else
    nilUL_c10

val mkListLclo_i94 = fn n_v13858 ⇒ mkListL_i56(n_v13858)

main =
  (let test_v13859 = mkListU_i57(800000) in
   ln __v13860 ⇒
     let sorted_v13861 = (cmsortU_i55(test_v13859)) NULL in
     (ln __v13862 ⇒ NULL) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v14704, b2_v14705) = if b1_v14704 then
                                      b2_v14705
                                    else
                                      0

val andbclo_i58 = fn b1_v14706 b2_v14707 ⇒ andb_i1(b1_v14706, b2_v14707)

fun orb_i2(b1_v14708, b2_v14709) = if b1_v14708 then
                                     1
                                   else
                                     b2_v14709

val orbclo_i59 = fn b1_v14710 b2_v14711 ⇒ orb_i2(b1_v14710, b2_v14711)

fun notb_i3(b_v14712) = if b_v14712 then
                          0
                        else
                          1

val notbclo_i60 = fn b_v14713 ⇒ notb_i3(b_v14713)

fun lten_i4(x_v14714, y_v14715) =
  if x_v14714 then
    if y_v14715 then
      lten_i4(x_v14714.-1, y_v14715.-1)
    else
      0
  else
    1

val ltenclo_i61 = fn x_v14716 y_v14717 ⇒ lten_i4(x_v14716, y_v14717)

fun gten_i5(x_v14718, y_v14719) =
  if x_v14718 then
    if y_v14719 then
      gten_i5(x_v14718.-1, y_v14719.-1)
    else
      1
  else
    if y_v14719 then
      0
    else
      1

val gtenclo_i62 = fn x_v14720 y_v14721 ⇒ gten_i5(x_v14720, y_v14721)

fun ltn_i6(x_v14722, y_v14723) =
  if x_v14722 then
    if y_v14723 then
      ltn_i6(x_v14722.-1, y_v14723.-1)
    else
      0
  else
    if y_v14723 then
      1
    else
      0

val ltnclo_i63 = fn x_v14724 y_v14725 ⇒ ltn_i6(x_v14724, y_v14725)

fun gtn_i7(x_v14726, y_v14727) =
  if x_v14726 then
    if y_v14727 then
      gtn_i7(x_v14726.-1, y_v14727.-1)
    else
      1
  else
    0

val gtnclo_i64 = fn x_v14728 y_v14729 ⇒ gtn_i7(x_v14728, y_v14729)

fun eqn_i8(x_v14730, y_v14731) =
  if x_v14730 then
    if y_v14731 then
      eqn_i8(x_v14730.-1, y_v14731.-1)
    else
      0
  else
    if y_v14731 then
      0
    else
      1

val eqnclo_i65 = fn x_v14732 y_v14733 ⇒ eqn_i8(x_v14732, y_v14733)

fun pred_i9(x_v14734) = if x_v14734 then
                          x_v14734.-1
                        else
                          0

val predclo_i66 = fn x_v14735 ⇒ pred_i9(x_v14735)

fun addn_i10(x_v14736, y_v14737) =
  if x_v14736 then
    addn_i10(x_v14736.-1, y_v14737).+1
  else
    y_v14737

val addnclo_i67 = fn x_v14738 y_v14739 ⇒ addn_i10(x_v14738, y_v14739)

fun subn_i11(x_v14740, y_v14741) =
  if y_v14741 then
    subn_i11(pred_i9(x_v14740), y_v14741.-1)
  else
    x_v14740

val subnclo_i68 = fn x_v14742 y_v14743 ⇒ subn_i11(x_v14742, y_v14743)

fun muln_i12(x_v14744, y_v14745) =
  if x_v14744 then
    addn_i10(y_v14745, muln_i12(x_v14744.-1, y_v14745))
  else
    0

val mulnclo_i69 = fn x_v14746 y_v14747 ⇒ muln_i12(x_v14746, y_v14747)

fun divn_i13(x_v14748, y_v14749) =
  if ltn_i6(x_v14748, y_v14749) then
    0
  else
    divn_i13(subn_i11(x_v14748, y_v14749), y_v14749).+1

val divnclo_i70 = fn x_v14750 y_v14751 ⇒ divn_i13(x_v14750, y_v14751)

fun modn_i14(x_v14752, y_v14753) =
  subn_i11(x_v14752, muln_i12(divn_i13(x_v14752, y_v14753), y_v14753))

val modnclo_i71 = fn x_v14754 y_v14755 ⇒ modn_i14(x_v14754, y_v14755)

fun cats_i15(s1_v14756, s2_v14757) =
  match s1_v14756 with
  | EmptyString_c2  ⇒ s2_v14757
  | String_c3 c_v14758 s1_v14759 ⇒
    (String_c3 c_v14758 cats_i15(s1_v14759, s2_v14757))
  end

val catsclo_i72 = fn s1_v14760 s2_v14761 ⇒ cats_i15(s1_v14760, s2_v14761)

fun strlen_i16(s_v14762) =
  match s_v14762 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v14763 s_v14764 ⇒ strlen_i16(s_v14764).+1
  end

val strlenclo_i73 = fn s_v14765 ⇒ strlen_i16(s_v14765)

fun lenUU_i39(A_v14766, xs_v14767) =
  match xs_v14767 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v14768 xs_v14769 ⇒
    match lenUU_i39(NULL, xs_v14769) with
    | (n_v14770, xs_v14771) ⇒
      (n_v14770.+1, (consUU_c13 x_v14768 xs_v14771))
    end
  end

val lenUUclo_i74 = fn A_v14772 xs_v14773 ⇒ lenUU_i39(A_v14772, xs_v14773)

fun lenUL_i38(A_v14774, xs_v14775) =
  match xs_v14775 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v14776 xs_v14777 ⇒
    match lenUL_i38(NULL, xs_v14777) with
    | (n_v14778, xs_v14779) ⇒
      (n_v14778.+1, (consUL_c11 x_v14776 xs_v14779))
    end
  end

val lenULclo_i75 = fn A_v14780 xs_v14781 ⇒ lenUL_i38(A_v14780, xs_v14781)

fun lenLL_i36(A_v14782, xs_v14783) =
  match xs_v14783 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v14784 xs_v14785 ⇒
    match lenLL_i36(NULL, xs_v14785) with
    | (n_v14786, xs_v14787) ⇒ (n_v14786.+1, (consLL_c7 x_v14784 xs_v14787))
    end
  end

val lenLLclo_i76 = fn A_v14788 xs_v14789 ⇒ lenLL_i36(A_v14788, xs_v14789)

fun appendUU_i43(A_v14790, xs_v14791, ys_v14792) =
  match xs_v14791 with
  | nilUU_c12  ⇒ ys_v14792
  | consUU_c13 x_v14793 xs_v14794 ⇒
    (consUU_c13 x_v14793 appendUU_i43(NULL, xs_v14794, ys_v14792))
  end

val appendUUclo_i77 =
  fn A_v14795 xs_v14796 ⇒
    ln ys_v14797 ⇒ appendUU_i43(A_v14795, xs_v14796, ys_v14797)

fun appendUL_i42(A_v14798, xs_v14799, ys_v14800) =
  match xs_v14799 with
  | nilUL_c10  ⇒ ys_v14800
  | consUL_c11 x_v14801 xs_v14802 ⇒
    (consUL_c11 x_v14801 appendUL_i42(NULL, xs_v14802, ys_v14800))
  end

val appendULclo_i78 =
  fn A_v14803 xs_v14804 ⇒
    ln ys_v14805 ⇒ appendUL_i42(A_v14803, xs_v14804, ys_v14805)

fun appendLL_i40(A_v14806, xs_v14807, ys_v14808) =
  match xs_v14807 with
  | nilLL_c6  ⇒ ys_v14808
  | consLL_c7 x_v14809 xs_v14810 ⇒
    (consLL_c7 x_v14809 appendLL_i40(NULL, xs_v14810, ys_v14808))
  end

val appendLLclo_i79 =
  fn A_v14811 xs_v14812 ⇒
    ln ys_v14813 ⇒ appendLL_i40(A_v14811, xs_v14812, ys_v14813)

fun readline_i25(__v14814) =
  ln __v14815 ⇒
    let ch_v14816 = open stdin in
    let ch_v14817 = send(ch_v14816, 1) in
    let __v14818 = recv(ch_v14817) in
    match __v14818 with
    | (s_v14819, ch_v14820) ⇒
      let ch_v14821 = send(ch_v14820, 0) in s_v14819
    end

val readlineclo_i80 = fn __v14822 ⇒ readline_i25(__v14822)

fun print_i26(s_v14823) =
  ln __v14824 ⇒
    let ch_v14825 = open stdout in
    let ch_v14826 = send(ch_v14825, 1) in
    let ch_v14827 = send(ch_v14826, s_v14823) in
    let ch_v14828 = send(ch_v14827, 0) in NULL

val printclo_i81 = fn s_v14829 ⇒ print_i26(s_v14829)

fun prerr_i27(s_v14830) =
  ln __v14831 ⇒
    let ch_v14832 = open stderr in
    let ch_v14833 = send(ch_v14832, 1) in
    let ch_v14834 = send(ch_v14833, s_v14830) in
    let ch_v14835 = send(ch_v14834, 0) in NULL

val prerrclo_i82 = fn s_v14836 ⇒ prerr_i27(s_v14836)

fun splitU_i45(zs_v14837) =
  match zs_v14837 with
  | nilUU_c12  ⇒ (nilUU_c12, nilUU_c12)
  | consUU_c13 x_v14838 zs_v14839 ⇒
    match zs_v14839 with
    | nilUU_c12  ⇒ ((consUU_c13 x_v14838 nilUU_c12), nilUU_c12)
    | consUU_c13 y_v14840 zs_v14841 ⇒
      let __v14842 = splitU_i45(zs_v14841) in
      match __v14842 with
      | (xs_v14843, ys_v14844) ⇒
        ((consUU_c13 x_v14838 xs_v14843), (consUU_c13 y_v14840 ys_v14844))
      end
    end
  end

val splitUclo_i83 = fn zs_v14845 ⇒ splitU_i45(zs_v14845)

fun splitL_i44(zs_v14846) =
  match zs_v14846 with
  | nilUL_c10  ⇒ (nilUL_c10, nilUL_c10)
  | consUL_c11 x_v14847 zs_v14848 ⇒
    match zs_v14848 with
    | nilUL_c10  ⇒ ((consUL_c11 x_v14847 nilUL_c10), nilUL_c10)
    | consUL_c11 y_v14849 zs_v14850 ⇒
      let __v14851 = splitL_i44(zs_v14850) in
      match __v14851 with
      | (xs_v14852, ys_v14853) ⇒
        ((consUL_c11 x_v14847 xs_v14852), (consUL_c11 y_v14849 ys_v14853))
      end
    end
  end

val splitLclo_i84 = fn zs_v14854 ⇒ splitL_i44(zs_v14854)

fun mergeU_i47(xs_v14855, ys_v14856) =
  match xs_v14855 with
  | nilUU_c12  ⇒ ys_v14856
  | consUU_c13 x_v14857 xs0_v14858 ⇒
    match ys_v14856 with
    | nilUU_c12  ⇒ (consUU_c13 x_v14857 xs0_v14858)
    | consUU_c13 y_v14859 ys0_v14860 ⇒
      if lten_i4(x_v14857, y_v14859) then
        (consUU_c13
          x_v14857 mergeU_i47(xs0_v14858, (consUU_c13 y_v14859 ys0_v14860)))
      else
        (consUU_c13
          y_v14859 mergeU_i47((consUU_c13 x_v14857 xs0_v14858), ys0_v14860))
    end
  end

val mergeUclo_i85 =
  fn xs_v14861 ⇒ ln ys_v14862 ⇒ mergeU_i47(xs_v14861, ys_v14862)

fun mergeL_i46(xs_v14863, ys_v14864) =
  match xs_v14863 with
  | nilUL_c10  ⇒ ys_v14864
  | consUL_c11 x_v14865 xs0_v14866 ⇒
    match ys_v14864 with
    | nilUL_c10  ⇒ (consUL_c11 x_v14865 xs0_v14866)
    | consUL_c11 y_v14867 ys0_v14868 ⇒
      if lten_i4(x_v14865, y_v14867) then
        (consUL_c11
          x_v14865 mergeL_i46(xs0_v14866, (consUL_c11 y_v14867 ys0_v14868)))
      else
        (consUL_c11
          y_v14867 mergeL_i46((consUL_c11 x_v14865 xs0_v14866), ys0_v14868))
    end
  end

val mergeLclo_i86 =
  fn xs_v14869 ⇒ ln ys_v14870 ⇒ mergeL_i46(xs_v14869, ys_v14870)

fun msortU_i49(zs_v14871) =
  match zs_v14871 with
  | nilUU_c12  ⇒ nilUU_c12
  | consUU_c13 x_v14872 zs_v14873 ⇒
    match zs_v14873 with
    | nilUU_c12  ⇒ (consUU_c13 x_v14872 nilUU_c12)
    | consUU_c13 y_v14874 zs_v14875 ⇒
      let __v14876 =
        splitU_i45((consUU_c13 x_v14872 (consUU_c13 y_v14874 zs_v14875)))
      in
      match __v14876 with
      | (xs_v14877, ys_v14878) ⇒
        mergeU_i47(msortU_i49(xs_v14877), msortU_i49(ys_v14878))
      end
    end
  end

val msortUclo_i87 = fn zs_v14879 ⇒ msortU_i49(zs_v14879)

fun msortL_i48(zs_v14880) =
  match zs_v14880 with
  | nilUL_c10  ⇒ nilUL_c10
  | consUL_c11 x_v14881 zs_v14882 ⇒
    match zs_v14882 with
    | nilUL_c10  ⇒ (consUL_c11 x_v14881 nilUL_c10)
    | consUL_c11 y_v14883 zs_v14884 ⇒
      let __v14885 =
        splitL_i44((consUL_c11 x_v14881 (consUL_c11 y_v14883 zs_v14884)))
      in
      match __v14885 with
      | (xs_v14886, ys_v14887) ⇒
        mergeL_i46(msortL_i48(xs_v14886), msortL_i48(ys_v14887))
      end
    end
  end

val msortLclo_i88 = fn zs_v14888 ⇒ msortL_i48(zs_v14888)

fun cmsort_workerU_i53(n_v14889, zs_v14890, c_v14891) =
  if n_v14889 then
    match zs_v14890 with
    | nilUU_c12  ⇒
      ln __v14892 ⇒ let c_v14893 = send(c_v14891, nilUU_c12) in NULL
    | consUU_c13 z0_v14894 zs0_v14895 ⇒
      match zs0_v14895 with
      | nilUU_c12  ⇒
        ln __v14896 ⇒ let c_v14897 = send(c_v14891, nilUU_c12) in NULL
      | consUU_c13 z1_v14898 zs1_v14899 ⇒
        let __v14900 =
          splitU_i45((consUU_c13 z0_v14894 (consUU_c13 z1_v14898 zs1_v14899)))
        in
        match __v14900 with
        | (xs0_v14901, ys0_v14902) ⇒
          ln __v14903 ⇒
            let r1_v14904 =
              fork r1_v14905 in
                (cmsort_workerU_i53(n_v14889.-1, xs0_v14901, r1_v14905)) NULL
            in
            let r2_v14906 =
              fork r2_v14907 in
                (cmsort_workerU_i53(n_v14889.-1, ys0_v14902, r2_v14907)) NULL
            in
            let __v14908 = recv(r1_v14904) in
            match __v14908 with
            | (xs1_v14909, r1_v14910) ⇒
              let __v14911 = recv(r2_v14906) in
              match __v14911 with
              | (ys1_v14912, r2_v14913) ⇒
                let zs_v14914 = mergeU_i47(xs1_v14909, ys1_v14912) in
                let c_v14915 = send(c_v14891, zs_v14914) in
                let __v14916 = close(r1_v14910) in
                let __v14917 = close(r2_v14913) in NULL
              end
            end
        end
      end
    end
  else
    ln __v14918 ⇒
      let c_v14919 =
        ((fn x_v14920 ⇒ ln __v14921 ⇒ send(c_v14891, x_v14920))
           msortU_i49(zs_v14890))
          NULL
      in NULL

val cmsort_workerUclo_i89 =
  fn n_v14922 zs_v14923 ⇒
    ln c_v14924 ⇒ cmsort_workerU_i53(n_v14922, zs_v14923, c_v14924)

fun cmsort_workerL_i52(n_v14925, zs_v14926, c_v14927) =
  if n_v14925 then
    match zs_v14926 with
    | nilUL_c10  ⇒
      ln __v14928 ⇒ let c_v14929 = send(c_v14927, nilUL_c10) in NULL
    | consUL_c11 z0_v14930 zs0_v14931 ⇒
      match zs0_v14931 with
      | nilUL_c10  ⇒
        ln __v14932 ⇒ let c_v14933 = send(c_v14927, nilUL_c10) in NULL
      | consUL_c11 z1_v14934 zs1_v14935 ⇒
        let __v14936 =
          splitL_i44((consUL_c11 z0_v14930 (consUL_c11 z1_v14934 zs1_v14935)))
        in
        match __v14936 with
        | (xs0_v14937, ys0_v14938) ⇒
          ln __v14939 ⇒
            let r1_v14940 =
              fork r1_v14941 in
                (cmsort_workerL_i52(n_v14925.-1, xs0_v14937, r1_v14941)) NULL
            in
            let r2_v14942 =
              fork r2_v14943 in
                (cmsort_workerL_i52(n_v14925.-1, ys0_v14938, r2_v14943)) NULL
            in
            let __v14944 = recv(r1_v14940) in
            match __v14944 with
            | (xs1_v14945, r1_v14946) ⇒
              let __v14947 = recv(r2_v14942) in
              match __v14947 with
              | (ys1_v14948, r2_v14949) ⇒
                let zs_v14950 = mergeL_i46(xs1_v14945, ys1_v14948) in
                let c_v14951 = send(c_v14927, zs_v14950) in
                let __v14952 = close(r1_v14946) in
                let __v14953 = close(r2_v14949) in NULL
              end
            end
        end
      end
    end
  else
    ln __v14954 ⇒
      let c_v14955 =
        ((ln x_v14956 __v14957 ⇒ send(c_v14927, x_v14956))
           msortL_i48(zs_v14926))
          NULL
      in NULL

val cmsort_workerLclo_i90 =
  fn n_v14958 zs_v14959 ⇒
    ln c_v14960 ⇒ cmsort_workerL_i52(n_v14958, zs_v14959, c_v14960)

fun cmsortU_i55(zs0_v14961) =
  ln __v14962 ⇒
    let c_v14963 =
      fork c_v14964 in (cmsort_workerU_i53(4, zs0_v14961, c_v14964)) NULL
    in
    let __v14965 = recv(c_v14963) in
    match __v14965 with
    | (zs1_v14966, c_v14967) ⇒ let __v14968 = close(c_v14967) in zs1_v14966
    end

val cmsortUclo_i91 = fn zs0_v14969 ⇒ cmsortU_i55(zs0_v14969)

fun cmsortL_i54(zs0_v14970) =
  ln __v14971 ⇒
    let c_v14972 =
      fork c_v14973 in (cmsort_workerL_i52(4, zs0_v14970, c_v14973)) NULL
    in
    let __v14974 = recv(c_v14972) in
    match __v14974 with
    | (zs1_v14975, c_v14976) ⇒ let __v14977 = close(c_v14976) in zs1_v14975
    end

val cmsortLclo_i92 = fn zs0_v14978 ⇒ cmsortL_i54(zs0_v14978)

fun mkListU_i57(n_v14979) =
  if n_v14979 then
    (consUU_c13 n_v14979 mkListU_i57(n_v14979.-1))
  else
    nilUU_c12

val mkListUclo_i93 = fn n_v14980 ⇒ mkListU_i57(n_v14980)

fun mkListL_i56(n_v14981) =
  if n_v14981 then
    (consUL_c11 n_v14981 mkListL_i56(n_v14981.-1))
  else
    nilUL_c10

val mkListLclo_i94 = fn n_v14982 ⇒ mkListL_i56(n_v14982)

main =
  let test_v14983 = mkListU_i57(800000) in
  let sorted_v14984 = (cmsortU_i55(test_v14983)) NULL in NULL

trans3e success--------------------------

trans34 success--------------------------

