logical game_loop‹› (ans : nat) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ !(n : nat) → !{_ : n ≡ ans} → end | S repeat ⇒ ?(guess : nat) → !(ord : order) → !{_ : ord ≡ (
(comparen) (ans)
(guess))} → match ord as _ in _ with EQ  ⇒ end | LT  ⇒ ((game_loop)
(ans) (repeat)) | GT  ⇒ ((game_loop) (ans)
(repeat))

logical game‹› : proto = !(lower : nat) → !(upper : nat) → !{ans : nat} → !{_ : (
(lten) (lower) (ans)) ≡ true} → !{_ : ((lten) (ans)
(upper)) ≡ true} → !(repeat : nat) → ((game_loop) (ans)
(repeat))

logical loop_ch‹› (ans : nat) (repeat : nat) : L = ch‹((game_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : nat) (repeat : nat) : L = hc‹((game_loop)
(ans)
(repeat))›

logical game_ch‹› : L = ch‹game›

logical game_hc‹› : L = hc‹game›

program read_nat‹› (_ : unit) : IO nat = let s ⇐ ((readline)
(())) in match ((nat_of_string)
(s)) as _ in _ with Some n ⇒ return n | None  ⇒ let _ ⇐ ((print)
(((String) (((Char) (O.+112)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+105)))
        (((String) (((Char) (O.+110)))
         (((String) (((Char) (O.+112)))
          (((String) (((Char) (O.+117)))
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+110)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+116)))
                  (((String) (((Char) (O.+117)))
                   (((String) (((Char) (O.+114)))
                    (((String) (((Char) (O.+97)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+117)))
                         (((String) (((Char) (O.+109)))
                          (((String) (((Char) (O.+98)))
                           (((String) (((Char) (O.+101)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
(read_nat)
(()))

program player_loop‹› {ans : nat} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_hc)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let ⟨ans, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in let _ ⇐ (
                         (print)
                         (((cats)
                          (((cats)
                           (((String) (((Char) (O.+89)))
                            (((String) (((Char) (O.+111)))
                             (((String) (((Char) (O.+117)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+76)))
                                (((String) (((Char) (O.+111)))
                                 (((String) (((Char) (O.+115)))
                                  (((String) (((Char) (O.+101)))
                                   (((String) (((Char) (O.+33)))
                                    (((String) (((Char) (O.+32)))
                                     (((String) (((Char) (O.+84)))
                                      (((String) (((Char) (O.+104)))
                                       (((String) (((Char) (O.+101)))
                                        (((String) (((Char) (O.+32)))
                                         (((String) (((Char) (O.+97)))
                                          (((String) (((Char) (O.+110)))
                                           (((String) (((Char) (O.+115)))
                                            (((String) (((Char) (O.+119)))
                                             (((String) (((Char) (O.+101)))
                                              (((String) (((Char) (O.+114)))
                                               (((String) (((Char) (O.+32)))
                                                (((String)
                                                 (((Char) (O.+105)))
                                                 (((String)
                                                  (((Char) (O.+115)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))
                           (((string_of_nat) (ans)))))
                          (((String) (((Char) (O.+46)))
                           (((String) (((Char) (O.+10))) (EmptyString)))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                         (read_nat) (())) in let c ⇐ ((send c)
                         (guess)) in let ⟨ord, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                         (match ord as ord0 in (∀ (_ : hc‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                          (game_loop) (ans) (repeat)) | GT  ⇒ ((game_loop)
                          (ans)
                          (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((String) (((Char) (O.+89)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+117)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+87)))
                               (((String) (((Char) (O.+105)))
                                (((String) (((Char) (O.+110)))
                                 (((String) (((Char) (O.+33)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))))))))))))))) in close c) | LT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+108)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+115)))
                                             (((String) (((Char) (O.+115)))
                                              (((String) (((Char) (O.+101)))
                                               (((String) (((Char) (O.+114)))
                                                (((String) (((Char) (O.+44)))
                                                 (((String)
                                                  (((Char) (O.+32)))
                                                  (((String)
                                                   (((Char) (O.+121)))
                                                   (((String)
                                                    (((Char) (O.+111)))
                                                    (((String)
                                                     (((Char) (O.+117)))
                                                     (((String)
                                                      (((Char) (O.+32)))
                                                      (((String)
                                                       (((Char) (O.+104)))
                                                       (((String)
                                                        (((Char) (O.+97)))
                                                        (((String)
                                                         (((Char) (O.+118)))
                                                         (((String)
                                                          (((Char) (O.+101)))
                                                          (((String)
                                                           (((Char) (O.+32)))
                                                           (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat)
                          (c))) | GT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+103)))
                                           (((String) (((Char) (O.+114)))
                                            (((String) (((Char) (O.+101)))
                                             (((String) (((Char) (O.+97)))
                                              (((String) (((Char) (O.+116)))
                                               (((String) (((Char) (O.+101)))
                                                (((String)
                                                 (((Char) (O.+114)))
                                                 (((String)
                                                  (((Char) (O.+44)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (((String)
                                                    (((Char) (O.+121)))
                                                    (((String)
                                                     (((Char) (O.+111)))
                                                     (((String)
                                                      (((Char) (O.+117)))
                                                      (((String)
                                                       (((Char) (O.+32)))
                                                       (((String)
                                                        (((Char) (O.+104)))
                                                        (((String)
                                                         (((Char) (O.+97)))
                                                         (((String)
                                                          (((Char) (O.+118)))
                                                          (((String)
                                                           (((Char)
                                                            (O.+101)))
                                                           (((String)
                                                            (((Char)
                                                             (O.+32)))
                                                            (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program player‹› (c : game_hc) : IO unit = let ⟨lower, c⟩ ⇐ recv c in let ⟨upper, c⟩ ⇐ recv c in let ⟨{ans}, c⟩ ⇐ recv c in let ⟨{pf1}, c⟩ ⇐ recv c in let ⟨{pf2}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((cats)
   (((cats)
    (((String) (((Char) (O.+80)))
     (((String) (((Char) (O.+108)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+115)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32)))
           (((String) (((Char) (O.+109)))
            (((String) (((Char) (O.+97)))
             (((String) (((Char) (O.+107)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+32)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+103)))
                   (((String) (((Char) (O.+117)))
                    (((String) (((Char) (O.+101)))
                     (((String) (((Char) (O.+115)))
                      (((String) (((Char) (O.+115)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+98)))
                         (((String) (((Char) (O.+101)))
                          (((String) (((Char) (O.+116)))
                           (((String) (((Char) (O.+119)))
                            (((String) (((Char) (O.+101)))
                             (((String) (((Char) (O.+101)))
                              (((String) (((Char) (O.+110)))
                               (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    (((string_of_nat) (lower)))))
   (((String) (((Char) (O.+32)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+110)))
      (((String) (((Char) (O.+100)))
       (((String) (((Char) (O.+32))) (EmptyString)))))))))))))
  (((string_of_nat) (upper)))))
 (((String) (((Char) (O.+46)))
  (((String) (((Char) (O.+10))) (EmptyString)))))))) in let _ ⇐ ((print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

program server_loop‹› (ans : nat) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_ch)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let c ⇐ (
                         (send c) (ans)) in let c ⇐ ((send c)
                         (refl)) in close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨n, c⟩ ⇐ recv c in let ord = (
                         (comparen) (ans) (n)) in let c ⇐ ((send c)
                         (ord)) in let c ⇐ ((send c)
                         (refl)) in ((match ord as ord0 in (∀ (_ : ch‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                                      (game_loop) (ans)
                                      (repeat)) | GT  ⇒ ((game_loop) 
                                      (ans)
                                      (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ close c) | LT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat)
                                      (c))) | GT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program server‹› (c : game_ch) : IO unit = let lower = O.+0 in let upper = O.+127 in let res ⇐ rand lower upper refl in match res as _ in _ with Between ans
pf1 pf2 ⇒ let repeat = O.+6 in let c ⇐ ((send c)
(lower)) in let c ⇐ ((send c) (upper)) in let c ⇐ ((send c)
(ans)) in let c ⇐ ((send c) (pf1)) in let c ⇐ ((send c)
(pf2)) in let c ⇐ ((send c) (repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit = let c ⇐ fork (c : game_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : game_hc) → !(_ : unit) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v381 : bool) (b2_v382 : bool) ⇒
    match b1_v381 as __v383 in ??1 with
    | true ⇒ b2_v382 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v386 : bool) (b2_v387 : bool) ⇒
    match b1_v386 as __v388 in ??2 with
    | true ⇒ true | false ⇒ b2_v387
    end

program notb_i3 : bool → bool =
  fn (b_v390 : bool) ⇒
    match b_v390 as __v391 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v394 : bool) (b2_v395 : bool) ⇒
    match b1_v394 as __v396 in ??4 with
    | true ⇒
      match b2_v395 as __v397 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v395 as __v398 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v401 : nat) (y_v402 : nat) ⇒
    match x_v401 as __v403 in ??7 with
    | O ⇒ true
    | S x_v404 ⇒
      match y_v402 as __v405 in ??8 with
      | O ⇒ false | S y_v406 ⇒ (lten_i5 x_v404 y_v406)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v409 : nat) (y_v410 : nat) ⇒
    match x_v409 as __v411 in ??9 with
    | O ⇒
      match y_v410 as __v412 in ??11 with
      | O ⇒ true | S __v413 ⇒ false
      end
    | S x_v414 ⇒
      match y_v410 as __v415 in ??10 with
      | O ⇒ true | S y_v416 ⇒ (gten_i6 x_v414 y_v416)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v419 : nat) (y_v420 : nat) ⇒
    match x_v419 as __v421 in ??12 with
    | O ⇒
      match y_v420 as __v422 in ??14 with
      | O ⇒ false | S y_v423 ⇒ true
      end
    | S x_v424 ⇒
      match y_v420 as __v425 in ??13 with
      | O ⇒ false | S y_v426 ⇒ (ltn_i7 x_v424 y_v426)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v429 : nat) (y_v430 : nat) ⇒
    match x_v429 as __v431 in ??15 with
    | O ⇒ false
    | S x_v432 ⇒
      match y_v430 as __v433 in ??16 with
      | O ⇒ true | S y_v434 ⇒ (gtn_i8 x_v432 y_v434)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v437 : nat) (y_v438 : nat) ⇒
    match x_v437 as __v439 in ??17 with
    | O ⇒
      match y_v438 as __v440 in ??19 with
      | O ⇒ true | S __v441 ⇒ false
      end
    | S x_v442 ⇒
      match y_v438 as __v443 in ??18 with
      | O ⇒ false | S y_v444 ⇒ (eqn_i9 x_v442 y_v444)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v447 : nat) (n2_v448 : nat) ⇒
    match n1_v447 as __v449 in ??20 with
    | O ⇒
      match n2_v448 as __v450 in ??22 with
      | O ⇒ EQ_c3‹› | S __v451 ⇒ LT_c1‹›
      end
    | S n1_v452 ⇒
      match n2_v448 as __v453 in ??21 with
      | O ⇒ GT_c2‹› | S n2_v454 ⇒ (comparen_i10 n1_v452 n2_v454)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v456 : nat) ⇒
    match x_v456 as __v457 in ??23 with
    | O ⇒ 0 | S x_v458 ⇒ x_v458
    end

program addn_i12 : nat → nat → nat =
  fn (x_v461 : nat) (y_v462 : nat) ⇒
    match x_v461 as __v463 in ??24 with
    | O ⇒ y_v462 | S x_v464 ⇒ (addn_i12 x_v464 y_v462).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v467 : nat) (y_v468 : nat) ⇒
    match y_v468 as __v469 in ??25 with
    | O ⇒ x_v467 | S y_v470 ⇒ (subn_i13 (pred_i11 x_v467) y_v470)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v473 : nat) (y_v474 : nat) ⇒
    match x_v473 as __v475 in ??26 with
    | O ⇒ 0 | S x_v476 ⇒ (addn_i12 y_v474 (muln_i14 x_v476 y_v474))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v479 : nat) (y_v480 : nat) ⇒
    match (ltn_i7 x_v479 y_v480) as __v481 in ??27 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v479 y_v480) y_v480).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v484 : nat) (y_v485 : nat) ⇒
    (subn_i13 x_v484 (muln_i14 (divn_i15 x_v484 y_v485) y_v485))

inductive between_d2 (lower_v486 : nat) (upper_v487 : nat) : L =
| Between_c4 of
    (lower_v488 : nat) (upper_v489 : nat) (n_v490 : nat)
    {pf1_v491 : (lten_i5 lower_v488 n_v490) ≡ true}
    {pf2_v492 : (lten_i5 n_v490 upper_v489) ≡ true}
    : (between_d2 lower_v488 upper_v489)

inductive char_d3 : U =
| Char_c5 of (n_v493 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v496 : char_d3) (c2_v497 : char_d3) ⇒
    match c1_v496 as __v498 in ??30 with
    | Char_c5 n1_v499 ⇒
      match c2_v497 as __v500 in ??31 with
      | Char_c5 n2_v501 ⇒ (eqn_i9 n1_v499 n2_v501)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v504 : char_d3) (c2_v505 : char_d3) ⇒
    match c1_v504 as __v506 in ??32 with
    | Char_c5 n1_v507 ⇒
      match c2_v505 as __v508 in ??33 with
      | Char_c5 n2_v509 ⇒ (comparen_i10 n1_v507 n2_v509)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v510 : char_d3) (s_v511 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v514 : string_d4) (s2_v515 : string_d4) ⇒
    match s1_v514 as __v516 in ??34 with
    | EmptyString_c6  ⇒ s2_v515
    | String_c7 c_v517 s1_v518 ⇒
      (String_c7‹› c_v517 (cats_i19 s1_v518 s2_v515))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v520 : string_d4) ⇒
    match s_v520 as __v521 in ??35 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v522 s_v523 ⇒ (strlen_i20 s_v523).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v526 : string_d4) (s2_v527 : string_d4) ⇒
    match s1_v526 as __v528 in ??36 with
    | EmptyString_c6  ⇒
      match s2_v527 as __v529 in ??38 with
      | EmptyString_c6  ⇒ true | String_c7 __v530 __v531 ⇒ false
      end
    | String_c7 c1_v532 s1_v533 ⇒
      match s2_v527 as __v534 in ??37 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v535 s2_v536 ⇒
        (andb_i1 (eqc_i17 c1_v532 c2_v535) (eqs_i21 s1_v533 s2_v536))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v539 : string_d4) (s2_v540 : string_d4) ⇒
    match s1_v539 as __v541 in ??39 with
    | EmptyString_c6  ⇒
      match s2_v540 as __v542 in ??42 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v543 __v544 ⇒ LT_c1‹›
      end
    | String_c7 c1_v545 s1_v546 ⇒
      match s2_v540 as __v547 in ??40 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v548 s2_v549 ⇒
        match (comparec_i18 c1_v545 c2_v548) as __v550 in ??41 with
        | EQ_c3  ⇒ (compares_i22 s1_v546 s2_v549) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s551, t_s552›
  (A_v553 : Type‹s_s551›) : Type‹t_s552›
=
| None_c8 of
    ‹s_s554, t_s555› (A_v556 : Type‹s_s554›)
    : (option_d5‹s_s554, t_s555› A_v556)
| Some_c9 of
    ‹s_s557, t_s558› (A_v559 : Type‹s_s557›) (x_v560 : A_v559)
    : (option_d5‹s_s557, t_s558› A_v559)

program and_then_i23 ‹s_s561, r_s562, t_s563› :
  ∀ {A_v564 : Type‹s_s561›} →
    ∀ {B_v565 : Type‹r_s562›} →
      (option_d5‹??43, t_s563› A_v564) →
        A_v564 → (option_d5‹??44, t_s563› B_v565) ⊸
          (option_d5‹??45, t_s563› B_v565)
=
  fn {A_v569 : Type‹s_s561›} {B_v570 : Type‹r_s562›}
     (opt_v571 : (option_d5‹??43, t_s563› A_v569)) ⇒
    ln (f_v572 : ??46) ⇒
      match opt_v571 as __v573 in ??47 with
      | None_c8  ⇒ None_c8‹??50, ??49›
      | Some_c9 x_v574 ⇒ (f_v572 x_v574)
      end

inductive list_d6 ‹s_s575, t_s576›
  (A_v577 : Type‹s_s575›) : Type‹t_s576›
=
| nil_c10 of
    ‹s_s578, t_s579› (A_v580 : Type‹s_s578›)
    : (list_d6‹s_s578, t_s579› A_v580)
| cons_c11 of
    ‹s_s581, t_s582› (A_v583 : Type‹s_s581›) (hd_v584 : A_v583)
    (tl_v585 : (list_d6‹s_s581, t_s582› A_v583))
    : (list_d6‹s_s581, t_s582› A_v583)

program len_i24 ‹s_s586, t_s587› :
  ∀ {A_v588 : Type‹s_s586›} →
    (list_d6‹??51, t_s587› A_v588) →
      nat ⊗ (list_d6‹??52, t_s587› A_v588)
=
  fn {A_v591 : Type‹s_s586›}
     (xs_v592 : (list_d6‹??51, t_s587› A_v591)) ⇒
    match xs_v592 as __v593 in ??53 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??63, ??62›⟩
    | cons_c11 x_v594 xs_v595 ⇒
      match (len_i24‹??56, ??55› ??54 xs_v595) as __v596 in ??57 with
      | ⟨n_v597, xs_v598⟩ ⇒
        ⟨n_v597.+1, (cons_c11‹??60, ??59› x_v594 xs_v598)⟩
      end
    end

program append_i25 ‹s_s599, t_s600› :
  ∀ {A_v601 : Type‹s_s599›} →
    (list_d6‹??64, t_s600› A_v601) →
      (list_d6‹??65, t_s600› A_v601) ⊸ (list_d6‹??67, ??66› A_v601)
=
  fn {A_v604 : Type‹s_s599›}
     (xs_v605 : (list_d6‹??64, t_s600› A_v604)) ⇒
    ln (ys_v606 : ??68) ⇒
      match xs_v605 as __v607 in ??69 with
      | nil_c10  ⇒ ys_v606
      | cons_c11 x_v608 xs_v609 ⇒
        (cons_c11‹??75, ??74›
          x_v608 (append_i25‹??72, ??71› ??70 xs_v609 ys_v606))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v611 : unit) ⇒
    ⇑(b_v612 : bool) ⇒
      match b_v612 as __v613 in ??76 with
      | true ⇒ ⇓(__v614 : string_d4) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v616 : unit) ⇒
    ⇑(b_v617 : bool) ⇒
      match b_v617 as __v618 in ??77 with
      | true ⇒ ⇑(__v619 : string_d4) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v621 : unit) ⇒
    ⇑(b_v622 : bool) ⇒
      match b_v622 as __v623 in ??78 with
      | true ⇒ ⇑(__v624 : string_d4) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d4 =
  fn (__v626 : unit) ⇒
    let ch_v627 ⇐ open stdin in
    let ch_v628 ⇐ (send ch_v627 true) in
    let __v629 ⇐ recv ch_v628 in
    match __v629 as __v630 in ??79 with
    | ⟨s_v631, ch_v632⟩ ⇒
      let ch_v633 ⇐ (send ch_v632 false) in
      let __v634 ⇐ close ch_v633 in return s_v631
    end

program print_i33 : string_d4 → IO unit =
  fn (s_v636 : string_d4) ⇒
    let ch_v637 ⇐ open stdout in
    let ch_v638 ⇐ (send ch_v637 true) in
    let ch_v639 ⇐ (send ch_v638 s_v636) in
    let ch_v640 ⇐ (send ch_v639 false) in close ch_v640

program prerr_i34 : string_d4 → IO unit =
  fn (s_v642 : string_d4) ⇒
    let ch_v643 ⇐ open stderr in
    let ch_v644 ⇐ (send ch_v643 true) in
    let ch_v645 ⇐ (send ch_v644 s_v642) in
    let ch_v646 ⇐ (send ch_v645 false) in close ch_v646

program digits_i35 : (list_d6‹??80, U› ??81) =
  (cons_c11‹??114, ??113›
    "0"
    (cons_c11‹??111, ??110›
      "1"
      (cons_c11‹??108, ??107›
        "2"
        (cons_c11‹??105, ??104›
          "3"
          (cons_c11‹??102, ??101›
            "4"
            (cons_c11‹??99, ??98›
              "5"
              (cons_c11‹??96, ??95›
                "6"
                (cons_c11‹??93, ??92›
                  "7"
                  (cons_c11‹??90, ??89›
                    "8"
                    (cons_c11‹??87, ??86› "9" nil_c10‹??84, ??83›))))))))))

program get_at_i36 :
  ∀ {A_v647 : U} →
    nat → (list_d6‹??115, U› A_v647) → A_v647 → A_v647
=
  fn {A_v651 : U} (n_v652 : nat) (xs_v653 : (list_d6‹??115, U› A_v651))
     (a_v654 : A_v651) ⇒
    match n_v652 as __v655 in ??116 with
    | O ⇒
      match xs_v653 as __v656 in ??119 with
      | nil_c10  ⇒ a_v654 | cons_c11 x_v657 __v658 ⇒ x_v657
      end
    | S n_v659 ⇒
      match xs_v653 as __v660 in ??117 with
      | nil_c10  ⇒ a_v654
      | cons_c11 __v661 xs_v662 ⇒ (get_at_i36 ??118 n_v659 xs_v662 a_v654)
      end
    end

program string_of_digit_i37 : nat → string_d4 =
  fn (n_v664 : nat) ⇒
    (get_at_i36 ??120 n_v664 digits_i35 EmptyString_c6‹›)

program string_of_nat_i38 : nat → string_d4 =
  fn (n_v666 : nat) ⇒
    let s_v667 = (string_of_digit_i37 (modn_i16 n_v666 10)) in
    let n_v668 = (divn_i15 n_v666 10) in
    match (ltn_i7 0 n_v668) as __v669 in ??121 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v668) s_v667)
    | false ⇒ s_v667
    end

program digit_of_char_i39 : char_d3 → (option_d5‹??122, L› nat) =
  fn (c_v671 : char_d3) ⇒
    match (eqc_i17 c_v671 '0') as __v672 in ??123 with
    | true ⇒ (Some_c9‹??165, ??164› 0)
    | false ⇒
      match (eqc_i17 c_v671 '1') as __v673 in ??124 with
      | true ⇒ (Some_c9‹??162, ??161› 1)
      | false ⇒
        match (eqc_i17 c_v671 '2') as __v674 in ??125 with
        | true ⇒ (Some_c9‹??159, ??158› 2)
        | false ⇒
          match (eqc_i17 c_v671 '3') as __v675 in ??126 with
          | true ⇒ (Some_c9‹??156, ??155› 3)
          | false ⇒
            match (eqc_i17 c_v671 '4') as __v676 in ??127 with
            | true ⇒ (Some_c9‹??153, ??152› 4)
            | false ⇒
              match (eqc_i17 c_v671 '5') as __v677 in ??128 with
              | true ⇒ (Some_c9‹??150, ??149› 5)
              | false ⇒
                match (eqc_i17 c_v671 '6') as __v678 in ??129 with
                | true ⇒ (Some_c9‹??147, ??146› 6)
                | false ⇒
                  match (eqc_i17 c_v671 '7') as __v679 in ??130 with
                  | true ⇒ (Some_c9‹??144, ??143› 7)
                  | false ⇒
                    match (eqc_i17 c_v671 '8') as __v680 in ??131 with
                    | true ⇒ (Some_c9‹??141, ??140› 8)
                    | false ⇒
                      match (eqc_i17 c_v671 '9') as __v681 in ??132 with
                      | true ⇒ (Some_c9‹??138, ??137› 9)
                      | false ⇒ None_c8‹??135, ??134›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d4 → nat → (option_d5‹??166, L› nat)
=
  fn (s_v684 : string_d4) (acc_v685 : nat) ⇒
    match s_v684 as __v686 in ??167 with
    | EmptyString_c6  ⇒ (Some_c9‹??174, ??173› acc_v685)
    | String_c7 c_v687 s_v688 ⇒
      match (digit_of_char_i39 c_v687) as __v689 in ??168 with
      | None_c8  ⇒ None_c8‹??171, ??170›
      | Some_c9 n_v690 ⇒
        (nat_of_string_loop_i40
          s_v688 (addn_i12 (muln_i14 acc_v685 10) n_v690))
      end
    end

program nat_of_string_i41 : string_d4 → (option_d5‹??175, L› nat) =
  fn (s_v692 : string_d4) ⇒ (nat_of_string_loop_i40 s_v692 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v695 : nat) (repeat_v696 : nat) ⇒
    match repeat_v696 as __v697 in ??176 with
    | O ⇒ ⇑(n_v698 : nat) ⇒ ⇑{__v699 : n_v698 ≡ ans_v695} ⇒ end
    | S repeat_v700 ⇒
      ⇓(guess_v701 : nat) ⇒
        ⇑(ord_v702 : order_d1) ⇒
          ⇑{__v703 : ord_v702 ≡ (comparen_i10 ans_v695 guess_v701)} ⇒
            match ord_v702 as __v704 in ??178 with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v695 repeat_v700)
            | GT_c2  ⇒ (game_loop_i42 ans_v695 repeat_v700)
            end
    end

logical game_i43 : proto =
  ⇑(lower_v705 : nat) ⇒
    ⇑(upper_v706 : nat) ⇒
      ⇑{ans_v707 : nat} ⇒
        ⇑{__v708 : (lten_i5 lower_v705 ans_v707) ≡ true} ⇒
          ⇑{__v709 : (lten_i5 ans_v707 upper_v706) ≡ true} ⇒
            ⇑(repeat_v710 : nat) ⇒ (game_loop_i42 ans_v707 repeat_v710)

logical loop_ch_i44 : nat → nat → L =
  fn (ans_v713 : nat) (repeat_v714 : nat) ⇒
    ch⟨(game_loop_i42 ans_v713 repeat_v714)⟩

logical loop_hc_i45 : nat → nat → L =
  fn (ans_v717 : nat) (repeat_v718 : nat) ⇒
    hc⟨(game_loop_i42 ans_v717 repeat_v718)⟩

logical game_ch_i46 : L = ch⟨game_i43⟩

logical game_hc_i47 : L = hc⟨game_i43⟩

program read_nat_i48 : unit → IO nat =
  fn (__v720 : unit) ⇒
    let s_v721 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v721) as __v722 in ??182 with
    | Some_c9 n_v723 ⇒ return n_v723
    | None_c8  ⇒
      let __v724 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v725 : nat} →
    ∀ (repeat_v726 : nat) →
      (loop_hc_i45 ans_v725 repeat_v726) → IO unit
=
  fn {ans_v728 : nat} (repeat_v729 : nat)
     (c_v730 : (loop_hc_i45 ans_v728 repeat_v729)) ⇒
    (match repeat_v729 as repeat0_v731 in
       (loop_hc_i45 ans_v728 repeat0_v731) → IO unit with
     | O ⇒
       fn (c_v733 : ??190) ⇒
         let __v734 ⇐ recv c_v733 in
         match __v734 as __v735 in ??192 with
         | ⟨ans_v736, c_v737⟩ ⇒
           let __v738 ⇐ recv c_v737 in
           match __v738 as __v739 in ??191 with
           | ⟨{pf_v740}, c_v741⟩ ⇒
             let __v742 ⇐
               (print_i33
                 (cats_i19
                   (cats_i19
                     "You Lose! The answer is " (string_of_nat_i38 ans_v736))
                   ".\n"))
             in close c_v741
           end
         end
     | S repeat_v743 ⇒
       fn (c_v744 : ??183) ⇒
         let guess_v745 ⇐ (read_nat_i48 ()) in
         let c_v746 ⇐ (send c_v744 guess_v745) in
         let __v747 ⇐ recv c_v746 in
         match __v747 as __v748 in ??189 with
         | ⟨ord_v749, c_v750⟩ ⇒
           let __v751 ⇐ recv c_v750 in
           match __v751 as __v752 in ??188 with
           | ⟨{pf_v753}, c_v754⟩ ⇒
             (match ord_v749 as ord0_v755 in
                hc⟨match ord0_v755 as __v757 in ??184 with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v728 repeat_v743)
                     | GT_c2  ⇒ (game_loop_i42 ans_v728 repeat_v743)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v758 : ??187) ⇒
                  let __v759 ⇐ (print_i33 "You Win!\n") in close c_v758
              | LT_c1  ⇒
                fn (c_v760 : ??186) ⇒
                  let __v761 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v743))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v728 repeat_v743 c_v760)
              | GT_c2  ⇒
                fn (c_v762 : ??185) ⇒
                  let __v763 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v743))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v728 repeat_v743 c_v762)
              end c_v754)
           end
         end
     end c_v730)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v765 : game_hc_i47) ⇒
    let __v766 ⇐ recv c_v765 in
    match __v766 as __v767 in ??198 with
    | ⟨lower_v768, c_v769⟩ ⇒
      let __v770 ⇐ recv c_v769 in
      match __v770 as __v771 in ??197 with
      | ⟨upper_v772, c_v773⟩ ⇒
        let __v774 ⇐ recv c_v773 in
        match __v774 as __v775 in ??196 with
        | ⟨{ans_v776}, c_v777⟩ ⇒
          let __v778 ⇐ recv c_v777 in
          match __v778 as __v779 in ??195 with
          | ⟨{pf1_v780}, c_v781⟩ ⇒
            let __v782 ⇐ recv c_v781 in
            match __v782 as __v783 in ??194 with
            | ⟨{pf2_v784}, c_v785⟩ ⇒
              let __v786 ⇐ recv c_v785 in
              match __v786 as __v787 in ??193 with
              | ⟨repeat_v788, c_v789⟩ ⇒
                let __v790 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v768))
                          " and ")
                        (string_of_nat_i38 upper_v772))
                      ".\n"))
                in
                let __v791 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19 "You have " (string_of_nat_i38 repeat_v788))
                      " tries.\n"))
                in (player_loop_i49 ans_v776 repeat_v788 c_v789)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v792 : nat) →
    ∀ (repeat_v793 : nat) →
      (loop_ch_i44 ans_v792 repeat_v793) → IO unit
=
  fn (ans_v795 : nat) (repeat_v796 : nat)
     (c_v797 : (loop_ch_i44 ans_v795 repeat_v796)) ⇒
    (match repeat_v796 as repeat0_v798 in
       (loop_ch_i44 ans_v795 repeat0_v798) → IO unit with
     | O ⇒
       fn (c_v800 : ??206) ⇒
         let c_v801 ⇐ (send c_v800 ans_v795) in
         let c_v802 ⇐ (send c_v801 refl ??207) in close c_v802
     | S repeat_v803 ⇒
       fn (c_v804 : ??199) ⇒
         let __v805 ⇐ recv c_v804 in
         match __v805 as __v806 in ??205 with
         | ⟨n_v807, c_v808⟩ ⇒
           let ord_v809 = (comparen_i10 ans_v795 n_v807) in
           let c_v810 ⇐ (send c_v808 ord_v809) in
           let c_v811 ⇐ (send c_v810 refl ??200) in
           (match ord_v809 as ord0_v812 in
              ch⟨match ord0_v812 as __v814 in ??201 with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v795 repeat_v803)
                   | GT_c2  ⇒ (game_loop_i42 ans_v795 repeat_v803)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v815 : ??204) ⇒ close c_v815
            | LT_c1  ⇒
              fn (c_v816 : ??203) ⇒
                (server_loop_i51 ans_v795 repeat_v803 c_v816)
            | GT_c2  ⇒
              fn (c_v817 : ??202) ⇒
                (server_loop_i51 ans_v795 repeat_v803 c_v817)
            end c_v811)
         end
     end c_v797)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v819 : game_ch_i46) ⇒
    let lower_v820 = 0 in
    let upper_v821 = 127 in
    let res_v822 ⇐ rand lower_v820 upper_v821 refl ??208 in
    match res_v822 as __v823 in ??209 with
    | Between_c4 ans_v824 pf1_v825 pf2_v826 ⇒
      let repeat_v827 = 6 in
      let c_v828 ⇐ (send c_v819 lower_v820) in
      let c_v829 ⇐ (send c_v828 upper_v821) in
      let c_v830 ⇐ (send c_v829 ans_v824) in
      let c_v831 ⇐ (send c_v830 pf1_v825) in
      let c_v832 ⇐ (send c_v831 pf2_v826) in
      let c_v833 ⇐ (send c_v832 repeat_v827) in
      (server_loop_i51 ans_v824 repeat_v827 c_v833)
    end

program main_i53 : IO unit =
  let c_v834 ⇐ fork (c_v835 : game_ch_i46) in (server_i52 c_v835) in
  let c0_v836 ⇐
    fork (c0_v837 :
      ch⟨⇓(__v838 : game_hc_i47) ⇒ ⇑(__v839 : unit) ⇒ end⟩)
    in
      let __v840 ⇐ recv c0_v837 in
      match __v840 as __v841 in ??210 with
      | ⟨c_v842, c0_v843⟩ ⇒
        let __v844 ⇐ (player_i50 c_v842) in
        let c0_v845 ⇐ (send c0_v843 ()) in close c0_v845
      end
  in
  let c0_v846 ⇐ (send c0_v836 c_v834) in
  let __v847 ⇐ recv c0_v846 in
  match __v847 as __v848 in ??211 with
  | ⟨__v849, c0_v850⟩ ⇒ close c0_v850
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v34725 : bool) (b2_v34726 : bool) ⇒
    match b1_v34725 as __v34727 in bool with
    | true ⇒ b2_v34726 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v34730 : bool) (b2_v34731 : bool) ⇒
    match b1_v34730 as __v34732 in bool with
    | true ⇒ true | false ⇒ b2_v34731
    end

program notb_i3 : bool → bool =
  fn (b_v34734 : bool) ⇒
    match b_v34734 as __v34735 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v34738 : bool) (b2_v34739 : bool) ⇒
    match b1_v34738 as __v34740 in order_d1 with
    | true ⇒
      match b2_v34739 as __v34741 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v34739 as __v34742 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v34745 : nat) (y_v34746 : nat) ⇒
    match x_v34745 as __v34747 in bool with
    | O ⇒ true
    | S x_v34748 ⇒
      match y_v34746 as __v34749 in bool with
      | O ⇒ false | S y_v34750 ⇒ (lten_i5 x_v34748 y_v34750)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v34753 : nat) (y_v34754 : nat) ⇒
    match x_v34753 as __v34755 in bool with
    | O ⇒
      match y_v34754 as __v34756 in bool with
      | O ⇒ true | S __v34757 ⇒ false
      end
    | S x_v34758 ⇒
      match y_v34754 as __v34759 in bool with
      | O ⇒ true | S y_v34760 ⇒ (gten_i6 x_v34758 y_v34760)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v34763 : nat) (y_v34764 : nat) ⇒
    match x_v34763 as __v34765 in bool with
    | O ⇒
      match y_v34764 as __v34766 in bool with
      | O ⇒ false | S y_v34767 ⇒ true
      end
    | S x_v34768 ⇒
      match y_v34764 as __v34769 in bool with
      | O ⇒ false | S y_v34770 ⇒ (ltn_i7 x_v34768 y_v34770)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v34773 : nat) (y_v34774 : nat) ⇒
    match x_v34773 as __v34775 in bool with
    | O ⇒ false
    | S x_v34776 ⇒
      match y_v34774 as __v34777 in bool with
      | O ⇒ true | S y_v34778 ⇒ (gtn_i8 x_v34776 y_v34778)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v34781 : nat) (y_v34782 : nat) ⇒
    match x_v34781 as __v34783 in bool with
    | O ⇒
      match y_v34782 as __v34784 in bool with
      | O ⇒ true | S __v34785 ⇒ false
      end
    | S x_v34786 ⇒
      match y_v34782 as __v34787 in bool with
      | O ⇒ false | S y_v34788 ⇒ (eqn_i9 x_v34786 y_v34788)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v34791 : nat) (n2_v34792 : nat) ⇒
    match n1_v34791 as __v34793 in order_d1 with
    | O ⇒
      match n2_v34792 as __v34794 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v34795 ⇒ LT_c1‹›
      end
    | S n1_v34796 ⇒
      match n2_v34792 as __v34797 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v34798 ⇒ (comparen_i10 n1_v34796 n2_v34798)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v34800 : nat) ⇒
    match x_v34800 as __v34801 in nat with
    | O ⇒ 0 | S x_v34802 ⇒ x_v34802
    end

program addn_i12 : nat → nat → nat =
  fn (x_v34805 : nat) (y_v34806 : nat) ⇒
    match x_v34805 as __v34807 in nat with
    | O ⇒ y_v34806 | S x_v34808 ⇒ (addn_i12 x_v34808 y_v34806).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v34811 : nat) (y_v34812 : nat) ⇒
    match y_v34812 as __v34813 in nat with
    | O ⇒ x_v34811 | S y_v34814 ⇒ (subn_i13 (pred_i11 x_v34811) y_v34814)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v34817 : nat) (y_v34818 : nat) ⇒
    match x_v34817 as __v34819 in nat with
    | O ⇒ 0
    | S x_v34820 ⇒ (addn_i12 y_v34818 (muln_i14 x_v34820 y_v34818))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v34823 : nat) (y_v34824 : nat) ⇒
    match (ltn_i7 x_v34823 y_v34824) as __v34825 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v34823 y_v34824) y_v34824).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v34828 : nat) (y_v34829 : nat) ⇒
    (subn_i13 x_v34828 (muln_i14 (divn_i15 x_v34828 y_v34829) y_v34829))

inductive between_d2 (lower_v34830 : nat) (upper_v34831 : nat) : L =
| Between_c4 of
    (lower_v34832 : nat) (upper_v34833 : nat) (n_v34834 : nat)
    {pf1_v34835 : (lten_i5 lower_v34832 n_v34834) ≡ true}
    {pf2_v34836 : (lten_i5 n_v34834 upper_v34833) ≡ true}
    : (between_d2 lower_v34832 upper_v34833)

inductive char_d3 : U =
| Char_c5 of (n_v34837 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v34840 : char_d3) (c2_v34841 : char_d3) ⇒
    match c1_v34840 as __v34842 in bool with
    | Char_c5 n1_v34843 ⇒
      match c2_v34841 as __v34844 in bool with
      | Char_c5 n2_v34845 ⇒ (eqn_i9 n1_v34843 n2_v34845)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v34848 : char_d3) (c2_v34849 : char_d3) ⇒
    match c1_v34848 as __v34850 in order_d1 with
    | Char_c5 n1_v34851 ⇒
      match c2_v34849 as __v34852 in order_d1 with
      | Char_c5 n2_v34853 ⇒ (comparen_i10 n1_v34851 n2_v34853)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v34854 : char_d3) (s_v34855 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v34858 : string_d4) (s2_v34859 : string_d4) ⇒
    match s1_v34858 as __v34860 in string_d4 with
    | EmptyString_c6  ⇒ s2_v34859
    | String_c7 c_v34861 s1_v34862 ⇒
      (String_c7‹› c_v34861 (cats_i19 s1_v34862 s2_v34859))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v34864 : string_d4) ⇒
    match s_v34864 as __v34865 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v34866 s_v34867 ⇒ (strlen_i20 s_v34867).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v34870 : string_d4) (s2_v34871 : string_d4) ⇒
    match s1_v34870 as __v34872 in bool with
    | EmptyString_c6  ⇒
      match s2_v34871 as __v34873 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v34874 __v34875 ⇒ false
      end
    | String_c7 c1_v34876 s1_v34877 ⇒
      match s2_v34871 as __v34878 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v34879 s2_v34880 ⇒
        (andb_i1 (eqc_i17 c1_v34876 c2_v34879) (eqs_i21 s1_v34877 s2_v34880))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v34883 : string_d4) (s2_v34884 : string_d4) ⇒
    match s1_v34883 as __v34885 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v34884 as __v34886 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v34887 __v34888 ⇒ LT_c1‹›
      end
    | String_c7 c1_v34889 s1_v34890 ⇒
      match s2_v34884 as __v34891 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v34892 s2_v34893 ⇒
        match (comparec_i18 c1_v34889 c2_v34892) as __v34894 in order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v34890 s2_v34893)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s34895, t_s34896›
  (A_v34897 : Type‹s_s34895›) : Type‹t_s34896›
=
| None_c8 of
    ‹s_s34898, t_s34899› (A_v34900 : Type‹s_s34898›)
    : (option_d5‹s_s34898, t_s34899› A_v34900)
| Some_c9 of
    ‹s_s34901, t_s34902› (A_v34903 : Type‹s_s34901›)
    (x_v34904 : A_v34903) : (option_d5‹s_s34901, t_s34902› A_v34903)

program and_then_i23 ‹s_s34905, r_s34906, t_s34907› :
  ∀ {A_v34908 : Type‹s_s34905›} →
    ∀ {B_v34909 : Type‹r_s34906›} →
      (option_d5‹s_s34905, t_s34907› A_v34908) →
        A_v34908 → (option_d5‹r_s34906, t_s34907› B_v34909) ⊸
          (option_d5‹r_s34906, t_s34907› B_v34909)
=
  fn {A_v34913 : Type‹s_s34905›} {B_v34914 : Type‹r_s34906›}
     (opt_v34915 : (option_d5‹s_s34905, t_s34907› A_v34913)) ⇒
    ln (f_v34916 : A_v34913 → (option_d5‹r_s34906, t_s34907› B_v34914)) ⇒
      match opt_v34915 as __v34918 in
        (option_d5‹r_s34906, t_s34907› B_v34914) with
      | None_c8  ⇒ None_c8‹r_s34906, t_s34907›
      | Some_c9 x_v34919 ⇒ (f_v34916 x_v34919)
      end

inductive list_d6 ‹s_s34920, t_s34921›
  (A_v34922 : Type‹s_s34920›) : Type‹t_s34921›
=
| nil_c10 of
    ‹s_s34923, t_s34924› (A_v34925 : Type‹s_s34923›)
    : (list_d6‹s_s34923, t_s34924› A_v34925)
| cons_c11 of
    ‹s_s34926, t_s34927› (A_v34928 : Type‹s_s34926›)
    (hd_v34929 : A_v34928)
    (tl_v34930 : (list_d6‹s_s34926, t_s34927› A_v34928))
    : (list_d6‹s_s34926, t_s34927› A_v34928)

program len_i24 ‹s_s34931, t_s34932› :
  ∀ {A_v34933 : Type‹s_s34931›} →
    (list_d6‹s_s34931, t_s34932› A_v34933) →
      nat ⊗ (list_d6‹s_s34931, t_s34932› A_v34933)
=
  fn {A_v34936 : Type‹s_s34931›}
     (xs_v34937 : (list_d6‹s_s34931, t_s34932› A_v34936)) ⇒
    match xs_v34937 as __v34938 in
      nat ⊗ (list_d6‹s_s34931, t_s34932› A_v34936) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s34931, t_s34932›⟩
    | cons_c11 x_v34940 xs_v34941 ⇒
      match (len_i24‹s_s34931, t_s34932› A_v34936 xs_v34941) as __v34942 in
        nat ⊗ (list_d6‹s_s34931, t_s34932› A_v34936) with
      | ⟨n_v34944, xs_v34945⟩ ⇒
        ⟨n_v34944.+1, (cons_c11‹s_s34931, t_s34932› x_v34940 xs_v34945)⟩
      end
    end

program append_i25 ‹s_s34946, t_s34947› :
  ∀ {A_v34948 : Type‹s_s34946›} →
    (list_d6‹s_s34946, t_s34947› A_v34948) →
      (list_d6‹s_s34946, t_s34947› A_v34948) ⊸
        (list_d6‹s_s34946, t_s34947› A_v34948)
=
  fn {A_v34951 : Type‹s_s34946›}
     (xs_v34952 : (list_d6‹s_s34946, t_s34947› A_v34951)) ⇒
    ln (ys_v34953 : (list_d6‹s_s34946, t_s34947› A_v34951)) ⇒
      match xs_v34952 as __v34954 in
        (list_d6‹s_s34946, t_s34947› A_v34951) with
      | nil_c10  ⇒ ys_v34953
      | cons_c11 x_v34955 xs_v34956 ⇒
        (cons_c11‹s_s34946, t_s34947›
          x_v34955
          (append_i25‹s_s34946, t_s34947› A_v34951 xs_v34956 ys_v34953))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v34958 : unit) ⇒
    ⇑(b_v34959 : bool) ⇒
      match b_v34959 as __v34960 in proto with
      | true ⇒ ⇓(__v34961 : string_d4) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v34963 : unit) ⇒
    ⇑(b_v34964 : bool) ⇒
      match b_v34964 as __v34965 in proto with
      | true ⇒ ⇑(__v34966 : string_d4) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v34968 : unit) ⇒
    ⇑(b_v34969 : bool) ⇒
      match b_v34969 as __v34970 in proto with
      | true ⇒ ⇑(__v34971 : string_d4) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d4 =
  fn (__v34973 : unit) ⇒
    let ch_v34974 ⇐ open stdin in
    let ch_v34975 ⇐ (send ch_v34974 true) in
    let __v34976 ⇐ recv ch_v34975 in
    match __v34976 as __v34977 in IO string_d4 with
    | ⟨s_v34978, ch_v34979⟩ ⇒
      let ch_v34980 ⇐ (send ch_v34979 false) in
      let __v34981 ⇐ close ch_v34980 in return s_v34978
    end

program print_i33 : string_d4 → IO unit =
  fn (s_v34983 : string_d4) ⇒
    let ch_v34984 ⇐ open stdout in
    let ch_v34985 ⇐ (send ch_v34984 true) in
    let ch_v34986 ⇐ (send ch_v34985 s_v34983) in
    let ch_v34987 ⇐ (send ch_v34986 false) in close ch_v34987

program prerr_i34 : string_d4 → IO unit =
  fn (s_v34989 : string_d4) ⇒
    let ch_v34990 ⇐ open stderr in
    let ch_v34991 ⇐ (send ch_v34990 true) in
    let ch_v34992 ⇐ (send ch_v34991 s_v34989) in
    let ch_v34993 ⇐ (send ch_v34992 false) in close ch_v34993

program digits_i35 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i36 :
  ∀ {A_v34994 : U} →
    nat → (list_d6‹U, U› A_v34994) → A_v34994 → A_v34994
=
  fn {A_v34998 : U} (n_v34999 : nat)
     (xs_v35000 : (list_d6‹U, U› A_v34998)) (a_v35001 : A_v34998) ⇒
    match n_v34999 as __v35002 in A_v34998 with
    | O ⇒
      match xs_v35000 as __v35003 in A_v34998 with
      | nil_c10  ⇒ a_v35001 | cons_c11 x_v35004 __v35005 ⇒ x_v35004
      end
    | S n_v35006 ⇒
      match xs_v35000 as __v35007 in A_v34998 with
      | nil_c10  ⇒ a_v35001
      | cons_c11 __v35008 xs_v35009 ⇒
        (get_at_i36 A_v34998 n_v35006 xs_v35009 a_v35001)
      end
    end

program string_of_digit_i37 : nat → string_d4 =
  fn (n_v35011 : nat) ⇒
    (get_at_i36 string_d4 n_v35011 digits_i35 EmptyString_c6‹›)

program string_of_nat_i38 : nat → string_d4 =
  fn (n_v35013 : nat) ⇒
    let s_v35014 = (string_of_digit_i37 (modn_i16 n_v35013 10)) in
    let n_v35015 = (divn_i15 n_v35013 10) in
    match (ltn_i7 0 n_v35015) as __v35016 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v35015) s_v35014)
    | false ⇒ s_v35014
    end

program digit_of_char_i39 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v35018 : char_d3) ⇒
    match (eqc_i17 c_v35018 '0') as __v35019 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v35018 '1') as __v35020 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v35018 '2') as __v35021 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v35018 '3') as __v35022 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v35018 '4') as __v35023 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v35018 '5') as __v35024 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v35018 '6') as __v35025 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v35018 '7') as __v35026 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v35018 '8') as __v35027 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v35018 '9') as __v35028 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v35031 : string_d4) (acc_v35032 : nat) ⇒
    match s_v35031 as __v35033 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v35032)
    | String_c7 c_v35034 s_v35035 ⇒
      match (digit_of_char_i39 c_v35034) as __v35036 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v35037 ⇒
        (nat_of_string_loop_i40
          s_v35035 (addn_i12 (muln_i14 acc_v35032 10) n_v35037))
      end
    end

program nat_of_string_i41 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v35039 : string_d4) ⇒ (nat_of_string_loop_i40 s_v35039 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v35042 : nat) (repeat_v35043 : nat) ⇒
    match repeat_v35043 as __v35044 in proto with
    | O ⇒
      ⇑(n_v35045 : nat) ⇒ ⇑{__v35046 : n_v35045 ≡ ans_v35042} ⇒ end
    | S repeat_v35047 ⇒
      ⇓(guess_v35048 : nat) ⇒
        ⇑(ord_v35049 : order_d1) ⇒
          ⇑{__v35050 :
            ord_v35049 ≡ (comparen_i10 ans_v35042 guess_v35048)} ⇒
            match ord_v35049 as __v35051 in proto with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v35042 repeat_v35047)
            | GT_c2  ⇒ (game_loop_i42 ans_v35042 repeat_v35047)
            end
    end

logical game_i43 : proto =
  ⇑(lower_v35052 : nat) ⇒
    ⇑(upper_v35053 : nat) ⇒
      ⇑{ans_v35054 : nat} ⇒
        ⇑{__v35055 : (lten_i5 lower_v35052 ans_v35054) ≡ true} ⇒
          ⇑{__v35056 : (lten_i5 ans_v35054 upper_v35053) ≡ true} ⇒
            ⇑(repeat_v35057 : nat) ⇒
              (game_loop_i42 ans_v35054 repeat_v35057)

logical loop_ch_i44 : nat → nat → L =
  fn (ans_v35060 : nat) (repeat_v35061 : nat) ⇒
    ch⟨(game_loop_i42 ans_v35060 repeat_v35061)⟩

logical loop_hc_i45 : nat → nat → L =
  fn (ans_v35064 : nat) (repeat_v35065 : nat) ⇒
    hc⟨(game_loop_i42 ans_v35064 repeat_v35065)⟩

logical game_ch_i46 : L = ch⟨game_i43⟩

logical game_hc_i47 : L = hc⟨game_i43⟩

program read_nat_i48 : unit → IO nat =
  fn (__v35067 : unit) ⇒
    let s_v35068 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v35068) as __v35069 in IO (nat : U) with
    | Some_c9 n_v35070 ⇒ return n_v35070
    | None_c8  ⇒
      let __v35071 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v35072 : nat} →
    ∀ (repeat_v35073 : nat) →
      (loop_hc_i45 ans_v35072 repeat_v35073) → IO unit
=
  fn {ans_v35075 : nat} (repeat_v35076 : nat)
     (c_v35077 : (loop_hc_i45 ans_v35075 repeat_v35076)) ⇒
    (match repeat_v35076 as repeat0_v35078 in
       (loop_hc_i45 ans_v35075 repeat0_v35078) → IO unit with
     | O ⇒
       fn (c_v35080 : (loop_hc_i45 ans_v35075 0)) ⇒
         let __v35081 ⇐ recv c_v35080 in
         match __v35081 as __v35082 in IO unit with
         | ⟨ans_v35083, c_v35084⟩ ⇒
           let __v35085 ⇐ recv c_v35084 in
           match __v35085 as __v35086 in IO unit with
           | ⟨{pf_v35087}, c_v35088⟩ ⇒
             let __v35089 ⇐
               (print_i33
                 (cats_i19
                   (cats_i19
                     "You Lose! The answer is "
                     (string_of_nat_i38 ans_v35083))
                   ".\n"))
             in close c_v35088
           end
         end
     | S repeat_v35090 ⇒
       fn (c_v35091 : (loop_hc_i45 ans_v35075 repeat_v35090.+1)) ⇒
         let guess_v35092 ⇐ (read_nat_i48 ()) in
         let c_v35093 ⇐ (send c_v35091 guess_v35092) in
         let __v35094 ⇐ recv c_v35093 in
         match __v35094 as __v35095 in IO unit with
         | ⟨ord_v35096, c_v35097⟩ ⇒
           let __v35098 ⇐ recv c_v35097 in
           match __v35098 as __v35099 in IO unit with
           | ⟨{pf_v35100}, c_v35101⟩ ⇒
             (match ord_v35096 as ord0_v35102 in
                hc⟨match ord0_v35102 as __v35104 in proto with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v35075 repeat_v35090)
                     | GT_c2  ⇒ (game_loop_i42 ans_v35075 repeat_v35090)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v35105 : hc⟨end⟩) ⇒
                  let __v35106 ⇐ (print_i33 "You Win!\n") in close c_v35105
              | LT_c1  ⇒
                fn (c_v35107 : hc⟨(game_loop_i42 ans_v35075 repeat_v35090)⟩) ⇒
                  let __v35108 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v35090))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v35075 repeat_v35090 c_v35107)
              | GT_c2  ⇒
                fn (c_v35109 : hc⟨(game_loop_i42 ans_v35075 repeat_v35090)⟩) ⇒
                  let __v35110 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v35090))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v35075 repeat_v35090 c_v35109)
              end c_v35101)
           end
         end
     end c_v35077)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v35112 : game_hc_i47) ⇒
    let __v35113 ⇐ recv c_v35112 in
    match __v35113 as __v35114 in IO unit with
    | ⟨lower_v35115, c_v35116⟩ ⇒
      let __v35117 ⇐ recv c_v35116 in
      match __v35117 as __v35118 in IO unit with
      | ⟨upper_v35119, c_v35120⟩ ⇒
        let __v35121 ⇐ recv c_v35120 in
        match __v35121 as __v35122 in IO unit with
        | ⟨{ans_v35123}, c_v35124⟩ ⇒
          let __v35125 ⇐ recv c_v35124 in
          match __v35125 as __v35126 in IO unit with
          | ⟨{pf1_v35127}, c_v35128⟩ ⇒
            let __v35129 ⇐ recv c_v35128 in
            match __v35129 as __v35130 in IO unit with
            | ⟨{pf2_v35131}, c_v35132⟩ ⇒
              let __v35133 ⇐ recv c_v35132 in
              match __v35133 as __v35134 in IO unit with
              | ⟨repeat_v35135, c_v35136⟩ ⇒
                let __v35137 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v35115))
                          " and ")
                        (string_of_nat_i38 upper_v35119))
                      ".\n"))
                in
                let __v35138 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        "You have " (string_of_nat_i38 repeat_v35135))
                      " tries.\n"))
                in (player_loop_i49 ans_v35123 repeat_v35135 c_v35136)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v35139 : nat) →
    ∀ (repeat_v35140 : nat) →
      (loop_ch_i44 ans_v35139 repeat_v35140) → IO unit
=
  fn (ans_v35142 : nat) (repeat_v35143 : nat)
     (c_v35144 : (loop_ch_i44 ans_v35142 repeat_v35143)) ⇒
    (match repeat_v35143 as repeat0_v35145 in
       (loop_ch_i44 ans_v35142 repeat0_v35145) → IO unit with
     | O ⇒
       fn (c_v35147 : (loop_ch_i44 ans_v35142 0)) ⇒
         let c_v35148 ⇐ (send c_v35147 ans_v35142) in
         let c_v35149 ⇐ (send c_v35148 refl ans_v35142) in close c_v35149
     | S repeat_v35150 ⇒
       fn (c_v35151 : (loop_ch_i44 ans_v35142 repeat_v35150.+1)) ⇒
         let __v35152 ⇐ recv c_v35151 in
         match __v35152 as __v35153 in IO unit with
         | ⟨n_v35154, c_v35155⟩ ⇒
           let ord_v35156 = (comparen_i10 ans_v35142 n_v35154) in
           let c_v35157 ⇐ (send c_v35155 ord_v35156) in
           let c_v35158 ⇐
             (send c_v35157 refl (comparen_i10 ans_v35142 n_v35154))
           in
           (match ord_v35156 as ord0_v35159 in
              ch⟨match ord0_v35159 as __v35161 in proto with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v35142 repeat_v35150)
                   | GT_c2  ⇒ (game_loop_i42 ans_v35142 repeat_v35150)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v35162 : ch⟨end⟩) ⇒ close c_v35162
            | LT_c1  ⇒
              fn (c_v35163 : ch⟨(game_loop_i42 ans_v35142 repeat_v35150)⟩) ⇒
                (server_loop_i51 ans_v35142 repeat_v35150 c_v35163)
            | GT_c2  ⇒
              fn (c_v35164 : ch⟨(game_loop_i42 ans_v35142 repeat_v35150)⟩) ⇒
                (server_loop_i51 ans_v35142 repeat_v35150 c_v35164)
            end c_v35158)
         end
     end c_v35144)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v35166 : game_ch_i46) ⇒
    let lower_v35167 = 0 in
    let upper_v35168 = 127 in
    let res_v35169 ⇐ rand lower_v35167 upper_v35168 refl true in
    match res_v35169 as __v35170 in IO unit with
    | Between_c4 ans_v35171 pf1_v35172 pf2_v35173 ⇒
      let repeat_v35174 = 6 in
      let c_v35175 ⇐ (send c_v35166 lower_v35167) in
      let c_v35176 ⇐ (send c_v35175 upper_v35168) in
      let c_v35177 ⇐ (send c_v35176 ans_v35171) in
      let c_v35178 ⇐ (send c_v35177 pf1_v35172) in
      let c_v35179 ⇐ (send c_v35178 pf2_v35173) in
      let c_v35180 ⇐ (send c_v35179 repeat_v35174) in
      (server_loop_i51 ans_v35171 repeat_v35174 c_v35180)
    end

program main_i53 : IO unit =
  let c_v35181 ⇐ fork (c_v35182 : game_ch_i46) in (server_i52 c_v35182) in
  let c0_v35183 ⇐
    fork (c0_v35184 :
      ch⟨⇓(__v35185 : game_hc_i47) ⇒ ⇑(__v35186 : unit) ⇒ end⟩)
    in
      let __v35187 ⇐ recv c0_v35184 in
      match __v35187 as __v35188 in IO unit with
      | ⟨c_v35189, c0_v35190⟩ ⇒
        let __v35191 ⇐ (player_i50 c_v35189) in
        let c0_v35192 ⇐ (send c0_v35190 ()) in close c0_v35192
      end
  in
  let c0_v35193 ⇐ (send c0_v35183 c_v35181) in
  let __v35194 ⇐ recv c0_v35193 in
  match __v35194 as __v35195 in IO unit with
  | ⟨__v35196, c0_v35197⟩ ⇒ close c0_v35197
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v35999 b2_v36000 ⇒
    match b1_v35999 with
    | true ⇒ b2_v36000 | false ⇒ false
    end

def orb_i2 =
  fn b1_v36001 b2_v36002 ⇒
    match b1_v36001 with
    | true ⇒ true | false ⇒ b2_v36002
    end

def notb_i3 =
  fn b_v36003 ⇒ match b_v36003 with
                  | true ⇒ false | false ⇒ true
                  end

def compareb_i4 =
  fn b1_v36004 b2_v36005 ⇒
    match b1_v36004 with
    | true ⇒ match b2_v36005 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v36005 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v36006 y_v36007 ⇒
    match x_v36006 with
    | O ⇒ true
    | S x_v36008 ⇒
      match y_v36007 with
      | O ⇒ false | S y_v36009 ⇒ ((lten_i5 x_v36008) y_v36009)
      end
    end

def gten_i6 =
  fn x_v36010 y_v36011 ⇒
    match x_v36010 with
    | O ⇒ match y_v36011 with
            | O ⇒ true | S __v36012 ⇒ false
            end
    | S x_v36013 ⇒
      match y_v36011 with
      | O ⇒ true | S y_v36014 ⇒ ((gten_i6 x_v36013) y_v36014)
      end
    end

def ltn_i7 =
  fn x_v36015 y_v36016 ⇒
    match x_v36015 with
    | O ⇒ match y_v36016 with
            | O ⇒ false | S y_v36017 ⇒ true
            end
    | S x_v36018 ⇒
      match y_v36016 with
      | O ⇒ false | S y_v36019 ⇒ ((ltn_i7 x_v36018) y_v36019)
      end
    end

def gtn_i8 =
  fn x_v36020 y_v36021 ⇒
    match x_v36020 with
    | O ⇒ false
    | S x_v36022 ⇒
      match y_v36021 with
      | O ⇒ true | S y_v36023 ⇒ ((gtn_i8 x_v36022) y_v36023)
      end
    end

def eqn_i9 =
  fn x_v36024 y_v36025 ⇒
    match x_v36024 with
    | O ⇒ match y_v36025 with
            | O ⇒ true | S __v36026 ⇒ false
            end
    | S x_v36027 ⇒
      match y_v36025 with
      | O ⇒ false | S y_v36028 ⇒ ((eqn_i9 x_v36027) y_v36028)
      end
    end

def comparen_i10 =
  fn n1_v36029 n2_v36030 ⇒
    match n1_v36029 with
    | O ⇒ match n2_v36030 with
            | O ⇒ EQ_c3 | S __v36031 ⇒ LT_c1
            end
    | S n1_v36032 ⇒
      match n2_v36030 with
      | O ⇒ GT_c2 | S n2_v36033 ⇒ ((comparen_i10 n1_v36032) n2_v36033)
      end
    end

def pred_i11 =
  fn x_v36034 ⇒ match x_v36034 with
                  | O ⇒ 0 | S x_v36035 ⇒ x_v36035
                  end

def addn_i12 =
  fn x_v36036 y_v36037 ⇒
    match x_v36036 with
    | O ⇒ y_v36037 | S x_v36038 ⇒ ((addn_i12 x_v36038) y_v36037).+1
    end

def subn_i13 =
  fn x_v36039 y_v36040 ⇒
    match y_v36040 with
    | O ⇒ x_v36039
    | S y_v36041 ⇒ ((subn_i13 (pred_i11 x_v36039)) y_v36041)
    end

def muln_i14 =
  fn x_v36042 y_v36043 ⇒
    match x_v36042 with
    | O ⇒ 0
    | S x_v36044 ⇒ ((addn_i12 y_v36043) ((muln_i14 x_v36044) y_v36043))
    end

def divn_i15 =
  fn x_v36045 y_v36046 ⇒
    match ((ltn_i7 x_v36045) y_v36046) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v36045) y_v36046)) y_v36046).+1
    end

def modn_i16 =
  fn x_v36047 y_v36048 ⇒
    ((subn_i13 x_v36047)
      ((muln_i14 ((divn_i15 x_v36047) y_v36048)) y_v36048))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v36049 c2_v36050 ⇒
    match c1_v36049 with
    | Char_c5 n1_v36051 ⇒
      match c2_v36050 with
      | Char_c5 n2_v36052 ⇒ ((eqn_i9 n1_v36051) n2_v36052)
      end
    end

def comparec_i18 =
  fn c1_v36053 c2_v36054 ⇒
    match c1_v36053 with
    | Char_c5 n1_v36055 ⇒
      match c2_v36054 with
      | Char_c5 n2_v36056 ⇒ ((comparen_i10 n1_v36055) n2_v36056)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v36057 s2_v36058 ⇒
    match s1_v36057 with
    | EmptyString_c6  ⇒ s2_v36058
    | String_c7 c_v36059 s1_v36060 ⇒
      (String_c7 c_v36059 ((cats_i19 s1_v36060) s2_v36058))
    end

def strlen_i20 =
  fn s_v36061 ⇒
    match s_v36061 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v36062 s_v36063 ⇒ (strlen_i20 s_v36063).+1
    end

def eqs_i21 =
  fn s1_v36064 s2_v36065 ⇒
    match s1_v36064 with
    | EmptyString_c6  ⇒
      match s2_v36065 with
      | EmptyString_c6  ⇒ true | String_c7 __v36066 __v36067 ⇒ false
      end
    | String_c7 c1_v36068 s1_v36069 ⇒
      match s2_v36065 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v36070 s2_v36071 ⇒
        ((andb_i1 ((eqc_i17 c1_v36068) c2_v36070))
          ((eqs_i21 s1_v36069) s2_v36071))
      end
    end

def compares_i22 =
  fn s1_v36072 s2_v36073 ⇒
    match s1_v36072 with
    | EmptyString_c6  ⇒
      match s2_v36073 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v36074 __v36075 ⇒ LT_c1
      end
    | String_c7 c1_v36076 s1_v36077 ⇒
      match s2_v36073 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v36078 s2_v36079 ⇒
        match ((comparec_i18 c1_v36076) c2_v36078) with
        | EQ_c3  ⇒ ((compares_i22 s1_v36077) s2_v36079) | LT_c1  ⇒ LT_c1
        | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d10 =
| NoneUU_c18 of size(0) | SomeUU_c19 of size(1)

data optionUL_d9 =
| NoneUL_c16 of size(0) | SomeUL_c17 of size(1)

data optionLU_d8 =
| NoneLU_c14 of size(0)

data optionLL_d7 =
| NoneLL_c12 of size(0) | SomeLL_c13 of size(1)

def and_thenUUU_i61 =
  fn A_v36080 B_v36081 opt_v36082 ⇒
    ln f_v36083 ⇒
      match opt_v36082 with
      | NoneUU_c18  ⇒ NoneUU_c18
      | SomeUU_c19 x_v36084 ⇒ (f_v36083 x_v36084)
      end

def and_thenUUL_i60 =
  fn A_v36085 B_v36086 opt_v36087 ⇒
    ln f_v36088 ⇒
      match opt_v36087 with
      | NoneUL_c16  ⇒ NoneUL_c16
      | SomeUL_c17 x_v36089 ⇒ (f_v36088 x_v36089)
      end

def and_thenULU_i59 =
  fn A_v36090 B_v36091 opt_v36092 ⇒
    ln f_v36093 ⇒
      match opt_v36092 with
      | NoneUU_c18  ⇒ NoneLU_c14
      | SomeUU_c19 x_v36094 ⇒ (f_v36093 x_v36094)
      end

def and_thenULL_i58 =
  fn A_v36095 B_v36096 opt_v36097 ⇒
    ln f_v36098 ⇒
      match opt_v36097 with
      | NoneUL_c16  ⇒ NoneLL_c12
      | SomeUL_c17 x_v36099 ⇒ (f_v36098 x_v36099)
      end

def and_thenLUL_i56 =
  fn A_v36100 B_v36101 opt_v36102 ⇒
    ln f_v36103 ⇒
      match opt_v36102 with
      | NoneLL_c12  ⇒ NoneUL_c16
      | SomeLL_c13 x_v36104 ⇒ (f_v36103 x_v36104)
      end

def and_thenLLL_i54 =
  fn A_v36105 B_v36106 opt_v36107 ⇒
    ln f_v36108 ⇒
      match opt_v36107 with
      | NoneLL_c12  ⇒ NoneLL_c12
      | SomeLL_c13 x_v36109 ⇒ (f_v36108 x_v36109)
      end

data listUU_d14 =
| nilUU_c26 of size(0) | consUU_c27 of size(2)

data listUL_d13 =
| nilUL_c24 of size(0) | consUL_c25 of size(2)

data listLU_d12 =
| nilLU_c22 of size(0)

data listLL_d11 =
| nilLL_c20 of size(0) | consLL_c21 of size(2)

def lenUU_i65 =
  fn A_v36110 xs_v36111 ⇒
    match xs_v36111 with
    | nilUU_c26  ⇒ (0, nilUU_c26)
    | consUU_c27 x_v36112 xs_v36113 ⇒
      match ((lenUU_i65 NULL) xs_v36113) with
      | (n_v36114, xs_v36115) ⇒
        (n_v36114.+1, (consUU_c27 x_v36112 xs_v36115))
      end
    end

def lenUL_i64 =
  fn A_v36116 xs_v36117 ⇒
    match xs_v36117 with
    | nilUL_c24  ⇒ (0, nilUL_c24)
    | consUL_c25 x_v36118 xs_v36119 ⇒
      match ((lenUL_i64 NULL) xs_v36119) with
      | (n_v36120, xs_v36121) ⇒
        (n_v36120.+1, (consUL_c25 x_v36118 xs_v36121))
      end
    end

def lenLL_i62 =
  fn A_v36122 xs_v36123 ⇒
    match xs_v36123 with
    | nilLL_c20  ⇒ (0, nilLL_c20)
    | consLL_c21 x_v36124 xs_v36125 ⇒
      match ((lenLL_i62 NULL) xs_v36125) with
      | (n_v36126, xs_v36127) ⇒
        (n_v36126.+1, (consLL_c21 x_v36124 xs_v36127))
      end
    end

def appendUU_i69 =
  fn A_v36128 xs_v36129 ⇒
    ln ys_v36130 ⇒
      match xs_v36129 with
      | nilUU_c26  ⇒ ys_v36130
      | consUU_c27 x_v36131 xs_v36132 ⇒
        (consUU_c27 x_v36131 (((appendUU_i69 NULL) xs_v36132) ys_v36130))
      end

def appendUL_i68 =
  fn A_v36133 xs_v36134 ⇒
    ln ys_v36135 ⇒
      match xs_v36134 with
      | nilUL_c24  ⇒ ys_v36135
      | consUL_c25 x_v36136 xs_v36137 ⇒
        (consUL_c25 x_v36136 (((appendUL_i68 NULL) xs_v36137) ys_v36135))
      end

def appendLL_i66 =
  fn A_v36138 xs_v36139 ⇒
    ln ys_v36140 ⇒
      match xs_v36139 with
      | nilLL_c20  ⇒ ys_v36140
      | consLL_c21 x_v36141 xs_v36142 ⇒
        (consLL_c21 x_v36141 (((appendLL_i66 NULL) xs_v36142) ys_v36140))
      end

def readline_i32 =
  fn __v36143 ⇒
    let ch_v36144 ⇐ open stdin in
    let ch_v36145 ⇐ (send ch_v36144 true) in
    let __v36146 ⇐ recv ch_v36145 in
    match __v36146 with
    | (s_v36147, ch_v36148) ⇒
      let ch_v36149 ⇐ (send ch_v36148 false) in
      let __v36150 ⇐ close⇑ ch_v36149 in return s_v36147
    end

def print_i33 =
  fn s_v36151 ⇒
    let ch_v36152 ⇐ open stdout in
    let ch_v36153 ⇐ (send ch_v36152 true) in
    let ch_v36154 ⇐ (send ch_v36153 s_v36151) in
    let ch_v36155 ⇐ (send ch_v36154 false) in close⇑ ch_v36155

def prerr_i34 =
  fn s_v36156 ⇒
    let ch_v36157 ⇐ open stderr in
    let ch_v36158 ⇐ (send ch_v36157 true) in
    let ch_v36159 ⇐ (send ch_v36158 s_v36156) in
    let ch_v36160 ⇐ (send ch_v36159 false) in close⇑ ch_v36160

def digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

def get_at_i36 =
  fn A_v36161 n_v36162 xs_v36163 a_v36164 ⇒
    match n_v36162 with
    | O ⇒
      match xs_v36163 with
      | nilUU_c26  ⇒ a_v36164 | consUU_c27 x_v36165 __v36166 ⇒ x_v36165
      end
    | S n_v36167 ⇒
      match xs_v36163 with
      | nilUU_c26  ⇒ a_v36164
      | consUU_c27 __v36168 xs_v36169 ⇒
        ((((get_at_i36 NULL) n_v36167) xs_v36169) a_v36164)
      end
    end

def string_of_digit_i37 =
  fn n_v36170 ⇒ ((((get_at_i36 NULL) n_v36170) digits_i35) EmptyString_c6)

def string_of_nat_i38 =
  fn n_v36171 ⇒
    let s_v36172 = (string_of_digit_i37 ((modn_i16 n_v36171) 10)) in
    let n_v36173 = ((divn_i15 n_v36171) 10) in
    match ((ltn_i7 0) n_v36173) with
    | true ⇒ ((cats_i19 (string_of_nat_i38 n_v36173)) s_v36172)
    | false ⇒ s_v36172
    end

def digit_of_char_i39 =
  fn c_v36174 ⇒
    match ((eqc_i17 c_v36174) '0') with
    | true ⇒ (SomeUL_c17 0)
    | false ⇒
      match ((eqc_i17 c_v36174) '1') with
      | true ⇒ (SomeUL_c17 1)
      | false ⇒
        match ((eqc_i17 c_v36174) '2') with
        | true ⇒ (SomeUL_c17 2)
        | false ⇒
          match ((eqc_i17 c_v36174) '3') with
          | true ⇒ (SomeUL_c17 3)
          | false ⇒
            match ((eqc_i17 c_v36174) '4') with
            | true ⇒ (SomeUL_c17 4)
            | false ⇒
              match ((eqc_i17 c_v36174) '5') with
              | true ⇒ (SomeUL_c17 5)
              | false ⇒
                match ((eqc_i17 c_v36174) '6') with
                | true ⇒ (SomeUL_c17 6)
                | false ⇒
                  match ((eqc_i17 c_v36174) '7') with
                  | true ⇒ (SomeUL_c17 7)
                  | false ⇒
                    match ((eqc_i17 c_v36174) '8') with
                    | true ⇒ (SomeUL_c17 8)
                    | false ⇒
                      match ((eqc_i17 c_v36174) '9') with
                      | true ⇒ (SomeUL_c17 9) | false ⇒ NoneUL_c16
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i40 =
  fn s_v36175 acc_v36176 ⇒
    match s_v36175 with
    | EmptyString_c6  ⇒ (SomeUL_c17 acc_v36176)
    | String_c7 c_v36177 s_v36178 ⇒
      match (digit_of_char_i39 c_v36177) with
      | NoneUL_c16  ⇒ NoneUL_c16
      | SomeUL_c17 n_v36179 ⇒
        ((nat_of_string_loop_i40 s_v36178)
          ((addn_i12 ((muln_i14 acc_v36176) 10)) n_v36179))
      end
    end

def nat_of_string_i41 = fn s_v36180 ⇒ ((nat_of_string_loop_i40 s_v36180) 0)

def read_nat_i48 =
  fn __v36181 ⇒
    let s_v36182 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v36182) with
    | SomeUL_c17 n_v36183 ⇒ return n_v36183
    | NoneUL_c16  ⇒
      let __v36184 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

def player_loop_i49 =
  fn ans_v36185 repeat_v36186 c_v36187 ⇒
    (match repeat_v36186 with
     | O ⇒
       fn c_v36188 ⇒
         let __v36189 ⇐ recv c_v36188 in
         match __v36189 with
         | (ans_v36190, c_v36191) ⇒
           let __v36192 ⇐ {recv} c_v36191 in
           match __v36192 with
           | (pf_v36193, c_v36194) ⇒
             let __v36195 ⇐
               (print_i33
                 ((cats_i19
                    ((cats_i19 "You Lose! The answer is ")
                      (string_of_nat_i38 ans_v36190)))
                   ".\n"))
             in close⇓ c_v36194
           end
         end
     | S repeat_v36196 ⇒
       fn c_v36197 ⇒
         let guess_v36198 ⇐ (read_nat_i48 ()) in
         let c_v36199 ⇐ (send c_v36197 guess_v36198) in
         let __v36200 ⇐ recv c_v36199 in
         match __v36200 with
         | (ord_v36201, c_v36202) ⇒
           let __v36203 ⇐ {recv} c_v36202 in
           match __v36203 with
           | (pf_v36204, c_v36205) ⇒
             (match ord_v36201 with
              | EQ_c3  ⇒
                fn c_v36206 ⇒
                  let __v36207 ⇐ (print_i33 "You Win!\n") in
                  close⇓ c_v36206
              | LT_c1  ⇒
                fn c_v36208 ⇒
                  let __v36209 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is lesser, you have ")
                           (string_of_nat_i38 repeat_v36196)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v36196) c_v36208)
              | GT_c2  ⇒
                fn c_v36210 ⇒
                  let __v36211 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is greater, you have ")
                           (string_of_nat_i38 repeat_v36196)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v36196) c_v36210)
              end c_v36205)
           end
         end
     end c_v36187)

def player_i50 =
  fn c_v36212 ⇒
    let __v36213 ⇐ recv c_v36212 in
    match __v36213 with
    | (lower_v36214, c_v36215) ⇒
      let __v36216 ⇐ recv c_v36215 in
      match __v36216 with
      | (upper_v36217, c_v36218) ⇒
        let __v36219 ⇐ {recv} c_v36218 in
        match __v36219 with
        | (ans_v36220, c_v36221) ⇒
          let __v36222 ⇐ {recv} c_v36221 in
          match __v36222 with
          | (pf1_v36223, c_v36224) ⇒
            let __v36225 ⇐ {recv} c_v36224 in
            match __v36225 with
            | (pf2_v36226, c_v36227) ⇒
              let __v36228 ⇐ recv c_v36227 in
              match __v36228 with
              | (repeat_v36229, c_v36230) ⇒
                let __v36231 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19
                          ((cats_i19
                             ((cats_i19 "Please make a guess between ")
                               (string_of_nat_i38 lower_v36214)))
                            " and "))
                         (string_of_nat_i38 upper_v36217)))
                      ".\n"))
                in
                let __v36232 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19 "You have ")
                         (string_of_nat_i38 repeat_v36229)))
                      " tries.\n"))
                in (((player_loop_i49 NULL) repeat_v36229) c_v36230)
              end
            end
          end
        end
      end
    end

def server_loop_i51 =
  fn ans_v36233 repeat_v36234 c_v36235 ⇒
    (match repeat_v36234 with
     | O ⇒
       fn c_v36236 ⇒
         let c_v36237 ⇐ (send c_v36236 ans_v36233) in
         let c_v36238 ⇐ ({send} c_v36237 NULL) in close⇑ c_v36238
     | S repeat_v36239 ⇒
       fn c_v36240 ⇒
         let __v36241 ⇐ recv c_v36240 in
         match __v36241 with
         | (n_v36242, c_v36243) ⇒
           let ord_v36244 = ((comparen_i10 ans_v36233) n_v36242) in
           let c_v36245 ⇐ (send c_v36243 ord_v36244) in
           let c_v36246 ⇐ ({send} c_v36245 NULL) in
           (match ord_v36244 with
            | EQ_c3  ⇒ fn c_v36247 ⇒ close⇑ c_v36247
            | LT_c1  ⇒
              fn c_v36248 ⇒
                (((server_loop_i51 ans_v36233) repeat_v36239) c_v36248)
            | GT_c2  ⇒
              fn c_v36249 ⇒
                (((server_loop_i51 ans_v36233) repeat_v36239) c_v36249)
            end c_v36246)
         end
     end c_v36235)

def server_i52 =
  fn c_v36250 ⇒
    let lower_v36251 = 0 in
    let upper_v36252 = 127 in
    let res_v36253 ⇐ rand lower_v36251 upper_v36252 in
    match res_v36253 with
    | Between_c4 ans_v36254 pf1_v36255 pf2_v36256 ⇒
      let repeat_v36257 = 6 in
      let c_v36258 ⇐ (send c_v36250 lower_v36251) in
      let c_v36259 ⇐ (send c_v36258 upper_v36252) in
      let c_v36260 ⇐ ({send} c_v36259 NULL) in
      let c_v36261 ⇐ ({send} c_v36260 NULL) in
      let c_v36262 ⇐ ({send} c_v36261 NULL) in
      let c_v36263 ⇐ (send c_v36262 repeat_v36257) in
      (((server_loop_i51 ans_v36254) repeat_v36257) c_v36263)
    end

main =
  let c_v36264 ⇐ fork c_v36265 in (server_i52 c_v36265) in
  let c0_v36266 ⇐
    fork c0_v36267 in
      let __v36268 ⇐ recv c0_v36267 in
      match __v36268 with
      | (c_v36269, c0_v36270) ⇒
        let __v36271 ⇐ (player_i50 c_v36269) in
        let c0_v36272 ⇐ (send c0_v36270 ()) in close⇑ c0_v36272
      end
  in
  let c0_v36273 ⇐ (send c0_v36266 c_v36264) in
  let __v36274 ⇐ recv c0_v36273 in
  match __v36274 with
  | (__v36275, c0_v36276) ⇒ close⇓ c0_v36276
  end

trans12 success--------------------------

fun andb_i1(b1_v36680, b2_v36681) = if b1_v36680 then
                                      b2_v36681
                                    else
                                      0

val andbclo_i70 = fn b1_v36682 b2_v36683 ⇒ andb_i1(b1_v36682, b2_v36683)

fun orb_i2(b1_v36684, b2_v36685) = if b1_v36684 then
                                     1
                                   else
                                     b2_v36685

val orbclo_i71 = fn b1_v36686 b2_v36687 ⇒ orb_i2(b1_v36686, b2_v36687)

fun notb_i3(b_v36688) = if b_v36688 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v36689 ⇒ notb_i3(b_v36689)

fun compareb_i4(b1_v36690, b2_v36691) =
  if b1_v36690 then
    if b2_v36691 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v36691 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v36692 b2_v36693 ⇒ compareb_i4(b1_v36692, b2_v36693)

fun lten_i5(x_v36694, y_v36695) =
  let __v36696 = x_v36694 in
  if __v36696 then
    let x_v36697 = __v36696.-1 in
    let __v36698 = y_v36695 in
    if __v36698 then
      let y_v36699 = __v36698.-1 in lten_i5(x_v36697, y_v36699)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v36700 y_v36701 ⇒ lten_i5(x_v36700, y_v36701)

fun gten_i6(x_v36702, y_v36703) =
  let __v36704 = x_v36702 in
  if __v36704 then
    let x_v36705 = __v36704.-1 in
    let __v36706 = y_v36703 in
    if __v36706 then
      let y_v36707 = __v36706.-1 in gten_i6(x_v36705, y_v36707)
    else
      1
  else
    let __v36708 = y_v36703 in
    if __v36708 then
      let __v36709 = __v36708.-1 in 0
    else
      1

val gtenclo_i75 = fn x_v36710 y_v36711 ⇒ gten_i6(x_v36710, y_v36711)

fun ltn_i7(x_v36712, y_v36713) =
  let __v36714 = x_v36712 in
  if __v36714 then
    let x_v36715 = __v36714.-1 in
    let __v36716 = y_v36713 in
    if __v36716 then
      let y_v36717 = __v36716.-1 in ltn_i7(x_v36715, y_v36717)
    else
      0
  else
    let __v36718 = y_v36713 in
    if __v36718 then
      let y_v36719 = __v36718.-1 in 1
    else
      0

val ltnclo_i76 = fn x_v36720 y_v36721 ⇒ ltn_i7(x_v36720, y_v36721)

fun gtn_i8(x_v36722, y_v36723) =
  let __v36724 = x_v36722 in
  if __v36724 then
    let x_v36725 = __v36724.-1 in
    let __v36726 = y_v36723 in
    if __v36726 then
      let y_v36727 = __v36726.-1 in gtn_i8(x_v36725, y_v36727)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v36728 y_v36729 ⇒ gtn_i8(x_v36728, y_v36729)

fun eqn_i9(x_v36730, y_v36731) =
  let __v36732 = x_v36730 in
  if __v36732 then
    let x_v36733 = __v36732.-1 in
    let __v36734 = y_v36731 in
    if __v36734 then
      let y_v36735 = __v36734.-1 in eqn_i9(x_v36733, y_v36735)
    else
      0
  else
    let __v36736 = y_v36731 in
    if __v36736 then
      let __v36737 = __v36736.-1 in 0
    else
      1

val eqnclo_i78 = fn x_v36738 y_v36739 ⇒ eqn_i9(x_v36738, y_v36739)

fun comparen_i10(n1_v36740, n2_v36741) =
  let __v36742 = n1_v36740 in
  if __v36742 then
    let n1_v36743 = __v36742.-1 in
    let __v36744 = n2_v36741 in
    if __v36744 then
      let n2_v36745 = __v36744.-1 in comparen_i10(n1_v36743, n2_v36745)
    else
      GT_c2
  else
    let __v36746 = n2_v36741 in
    if __v36746 then
      let __v36747 = __v36746.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v36748 n2_v36749 ⇒ comparen_i10(n1_v36748, n2_v36749)

fun pred_i11(x_v36750) =
  let __v36751 = x_v36750 in
  if __v36751 then
    let x_v36752 = __v36751.-1 in x_v36752
  else
    0

val predclo_i80 = fn x_v36753 ⇒ pred_i11(x_v36753)

fun addn_i12(x_v36754, y_v36755) =
  let __v36756 = x_v36754 in
  if __v36756 then
    let x_v36757 = __v36756.-1 in addn_i12(x_v36757, y_v36755).+1
  else
    y_v36755

val addnclo_i81 = fn x_v36758 y_v36759 ⇒ addn_i12(x_v36758, y_v36759)

fun subn_i13(x_v36760, y_v36761) =
  let __v36762 = y_v36761 in
  if __v36762 then
    let y_v36763 = __v36762.-1 in subn_i13(pred_i11(x_v36760), y_v36763)
  else
    x_v36760

val subnclo_i82 = fn x_v36764 y_v36765 ⇒ subn_i13(x_v36764, y_v36765)

fun muln_i14(x_v36766, y_v36767) =
  let __v36768 = x_v36766 in
  if __v36768 then
    let x_v36769 = __v36768.-1 in
    addn_i12(y_v36767, muln_i14(x_v36769, y_v36767))
  else
    0

val mulnclo_i83 = fn x_v36770 y_v36771 ⇒ muln_i14(x_v36770, y_v36771)

fun divn_i15(x_v36772, y_v36773) =
  if ltn_i7(x_v36772, y_v36773) then
    0
  else
    divn_i15(subn_i13(x_v36772, y_v36773), y_v36773).+1

val divnclo_i84 = fn x_v36774 y_v36775 ⇒ divn_i15(x_v36774, y_v36775)

fun modn_i16(x_v36776, y_v36777) =
  subn_i13(x_v36776, muln_i14(divn_i15(x_v36776, y_v36777), y_v36777))

val modnclo_i85 = fn x_v36778 y_v36779 ⇒ modn_i16(x_v36778, y_v36779)

fun eqc_i17(c1_v36780, c2_v36781) =
  match c1_v36780 with
  | Char_c5 n1_v36782 ⇒
    match c2_v36781 with
    | Char_c5 n2_v36783 ⇒ eqn_i9(n1_v36782, n2_v36783)
    end
  end

val eqcclo_i86 = fn c1_v36784 c2_v36785 ⇒ eqc_i17(c1_v36784, c2_v36785)

fun comparec_i18(c1_v36786, c2_v36787) =
  match c1_v36786 with
  | Char_c5 n1_v36788 ⇒
    match c2_v36787 with
    | Char_c5 n2_v36789 ⇒ comparen_i10(n1_v36788, n2_v36789)
    end
  end

val comparecclo_i87 =
  fn c1_v36790 c2_v36791 ⇒ comparec_i18(c1_v36790, c2_v36791)

fun cats_i19(s1_v36792, s2_v36793) =
  match s1_v36792 with
  | EmptyString_c6  ⇒ s2_v36793
  | String_c7 c_v36794 s1_v36795 ⇒
    (String_c7 c_v36794 cats_i19(s1_v36795, s2_v36793))
  end

val catsclo_i88 = fn s1_v36796 s2_v36797 ⇒ cats_i19(s1_v36796, s2_v36797)

fun strlen_i20(s_v36798) =
  match s_v36798 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v36799 s_v36800 ⇒ strlen_i20(s_v36800).+1
  end

val strlenclo_i89 = fn s_v36801 ⇒ strlen_i20(s_v36801)

fun eqs_i21(s1_v36802, s2_v36803) =
  match s1_v36802 with
  | EmptyString_c6  ⇒
    match s2_v36803 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v36804 __v36805 ⇒ 0
    end
  | String_c7 c1_v36806 s1_v36807 ⇒
    match s2_v36803 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v36808 s2_v36809 ⇒
      andb_i1(eqc_i17(c1_v36806, c2_v36808), eqs_i21(s1_v36807, s2_v36809))
    end
  end

val eqsclo_i90 = fn s1_v36810 s2_v36811 ⇒ eqs_i21(s1_v36810, s2_v36811)

fun compares_i22(s1_v36812, s2_v36813) =
  match s1_v36812 with
  | EmptyString_c6  ⇒
    match s2_v36813 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v36814 __v36815 ⇒ LT_c1
    end
  | String_c7 c1_v36816 s1_v36817 ⇒
    match s2_v36813 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v36818 s2_v36819 ⇒
      match comparec_i18(c1_v36816, c2_v36818) with
      | EQ_c3  ⇒ compares_i22(s1_v36817, s2_v36819) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v36820 s2_v36821 ⇒ compares_i22(s1_v36820, s2_v36821)

fun and_thenUUU_i61(A_v36822, B_v36823, opt_v36824, f_v36825) =
  match opt_v36824 with
  | NoneUU_c18  ⇒ NoneUU_c18 | SomeUU_c19 x_v36826 ⇒ (f_v36825) x_v36826
  end

val and_thenUUUclo_i92 =
  fn A_v36827 B_v36828 opt_v36829 ⇒
    ln f_v36830 ⇒ and_thenUUU_i61(A_v36827, B_v36828, opt_v36829, f_v36830)

fun and_thenUUL_i60(A_v36831, B_v36832, opt_v36833, f_v36834) =
  match opt_v36833 with
  | NoneUL_c16  ⇒ NoneUL_c16 | SomeUL_c17 x_v36835 ⇒ (f_v36834) x_v36835
  end

val and_thenUULclo_i93 =
  fn A_v36836 B_v36837 opt_v36838 ⇒
    ln f_v36839 ⇒ and_thenUUL_i60(A_v36836, B_v36837, opt_v36838, f_v36839)

fun and_thenULU_i59(A_v36840, B_v36841, opt_v36842, f_v36843) =
  match opt_v36842 with
  | NoneUU_c18  ⇒ NoneLU_c14 | SomeUU_c19 x_v36844 ⇒ (f_v36843) x_v36844
  end

val and_thenULUclo_i94 =
  fn A_v36845 B_v36846 opt_v36847 ⇒
    ln f_v36848 ⇒ and_thenULU_i59(A_v36845, B_v36846, opt_v36847, f_v36848)

fun and_thenULL_i58(A_v36849, B_v36850, opt_v36851, f_v36852) =
  match opt_v36851 with
  | NoneUL_c16  ⇒ NoneLL_c12 | SomeUL_c17 x_v36853 ⇒ (f_v36852) x_v36853
  end

val and_thenULLclo_i95 =
  fn A_v36854 B_v36855 opt_v36856 ⇒
    ln f_v36857 ⇒ and_thenULL_i58(A_v36854, B_v36855, opt_v36856, f_v36857)

fun and_thenLUL_i56(A_v36858, B_v36859, opt_v36860, f_v36861) =
  match opt_v36860 with
  | NoneLL_c12  ⇒ NoneUL_c16 | SomeLL_c13 x_v36862 ⇒ (f_v36861) x_v36862
  end

val and_thenLULclo_i96 =
  fn A_v36863 B_v36864 opt_v36865 ⇒
    ln f_v36866 ⇒ and_thenLUL_i56(A_v36863, B_v36864, opt_v36865, f_v36866)

fun and_thenLLL_i54(A_v36867, B_v36868, opt_v36869, f_v36870) =
  match opt_v36869 with
  | NoneLL_c12  ⇒ NoneLL_c12 | SomeLL_c13 x_v36871 ⇒ (f_v36870) x_v36871
  end

val and_thenLLLclo_i97 =
  fn A_v36872 B_v36873 opt_v36874 ⇒
    ln f_v36875 ⇒ and_thenLLL_i54(A_v36872, B_v36873, opt_v36874, f_v36875)

fun lenUU_i65(A_v36876, xs_v36877) =
  match xs_v36877 with
  | nilUU_c26  ⇒ (0, nilUU_c26)
  | consUU_c27 x_v36878 xs_v36879 ⇒
    match lenUU_i65(NULL, xs_v36879) with
    | (n_v36880, xs_v36881) ⇒
      (n_v36880.+1, (consUU_c27 x_v36878 xs_v36881))
    end
  end

val lenUUclo_i98 = fn A_v36882 xs_v36883 ⇒ lenUU_i65(A_v36882, xs_v36883)

fun lenUL_i64(A_v36884, xs_v36885) =
  match xs_v36885 with
  | nilUL_c24  ⇒ (0, nilUL_c24)
  | consUL_c25 x_v36886 xs_v36887 ⇒
    match lenUL_i64(NULL, xs_v36887) with
    | (n_v36888, xs_v36889) ⇒
      (n_v36888.+1, (consUL_c25 x_v36886 xs_v36889))
    end
  end

val lenULclo_i99 = fn A_v36890 xs_v36891 ⇒ lenUL_i64(A_v36890, xs_v36891)

fun lenLL_i62(A_v36892, xs_v36893) =
  match xs_v36893 with
  | nilLL_c20  ⇒ (0, nilLL_c20)
  | consLL_c21 x_v36894 xs_v36895 ⇒
    match lenLL_i62(NULL, xs_v36895) with
    | (n_v36896, xs_v36897) ⇒
      (n_v36896.+1, (consLL_c21 x_v36894 xs_v36897))
    end
  end

val lenLLclo_i100 = fn A_v36898 xs_v36899 ⇒ lenLL_i62(A_v36898, xs_v36899)

fun appendUU_i69(A_v36900, xs_v36901, ys_v36902) =
  match xs_v36901 with
  | nilUU_c26  ⇒ ys_v36902
  | consUU_c27 x_v36903 xs_v36904 ⇒
    (consUU_c27 x_v36903 appendUU_i69(NULL, xs_v36904, ys_v36902))
  end

val appendUUclo_i101 =
  fn A_v36905 xs_v36906 ⇒
    ln ys_v36907 ⇒ appendUU_i69(A_v36905, xs_v36906, ys_v36907)

fun appendUL_i68(A_v36908, xs_v36909, ys_v36910) =
  match xs_v36909 with
  | nilUL_c24  ⇒ ys_v36910
  | consUL_c25 x_v36911 xs_v36912 ⇒
    (consUL_c25 x_v36911 appendUL_i68(NULL, xs_v36912, ys_v36910))
  end

val appendULclo_i102 =
  fn A_v36913 xs_v36914 ⇒
    ln ys_v36915 ⇒ appendUL_i68(A_v36913, xs_v36914, ys_v36915)

fun appendLL_i66(A_v36916, xs_v36917, ys_v36918) =
  match xs_v36917 with
  | nilLL_c20  ⇒ ys_v36918
  | consLL_c21 x_v36919 xs_v36920 ⇒
    (consLL_c21 x_v36919 appendLL_i66(NULL, xs_v36920, ys_v36918))
  end

val appendLLclo_i103 =
  fn A_v36921 xs_v36922 ⇒
    ln ys_v36923 ⇒ appendLL_i66(A_v36921, xs_v36922, ys_v36923)

fun readline_i32(__v36924) =
  ln __v36925 ⇒
    let ch_v36926 = (ln __v36927 ⇒ open stdin) NULL in
    let ch_v36928 =
      ((fn x_v36929 ⇒ ln __v36930 ⇒ send(ch_v36926, x_v36929)) 1) NULL
    in
    let __v36931 = (ln __v36932 ⇒ recv(ch_v36928)) NULL in
    (match __v36931 with
     | (s_v36933, ch_v36934) ⇒
       ln __v36935 ⇒
         let ch_v36936 =
           ((fn x_v36937 ⇒ ln __v36938 ⇒ send(ch_v36934, x_v36937)) 0)
             NULL
         in
         let __v36939 =
           (ln __v36940 ⇒ let __v36941 = ch_v36936 in NULL) NULL
         in (ln __v36942 ⇒ s_v36933) NULL
     end) NULL

val readlineclo_i104 = fn __v36943 ⇒ readline_i32(__v36943)

fun print_i33(s_v36944) =
  ln __v36945 ⇒
    let ch_v36946 = (ln __v36947 ⇒ open stdout) NULL in
    let ch_v36948 =
      ((fn x_v36949 ⇒ ln __v36950 ⇒ send(ch_v36946, x_v36949)) 1) NULL
    in
    let ch_v36951 =
      ((fn x_v36952 ⇒ ln __v36953 ⇒ send(ch_v36948, x_v36952)) s_v36944)
        NULL
    in
    let ch_v36954 =
      ((fn x_v36955 ⇒ ln __v36956 ⇒ send(ch_v36951, x_v36955)) 0) NULL
    in (ln __v36957 ⇒ let __v36958 = ch_v36954 in NULL) NULL

val printclo_i105 = fn s_v36959 ⇒ print_i33(s_v36959)

fun prerr_i34(s_v36960) =
  ln __v36961 ⇒
    let ch_v36962 = (ln __v36963 ⇒ open stderr) NULL in
    let ch_v36964 =
      ((fn x_v36965 ⇒ ln __v36966 ⇒ send(ch_v36962, x_v36965)) 1) NULL
    in
    let ch_v36967 =
      ((fn x_v36968 ⇒ ln __v36969 ⇒ send(ch_v36964, x_v36968)) s_v36960)
        NULL
    in
    let ch_v36970 =
      ((fn x_v36971 ⇒ ln __v36972 ⇒ send(ch_v36967, x_v36971)) 0) NULL
    in (ln __v36973 ⇒ let __v36974 = ch_v36970 in NULL) NULL

val prerrclo_i106 = fn s_v36975 ⇒ prerr_i34(s_v36975)

val digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

fun get_at_i36(A_v36976, n_v36977, xs_v36978, a_v36979) =
  let __v36980 = n_v36977 in
  if __v36980 then
    let n_v36981 = __v36980.-1 in
    match xs_v36978 with
    | nilUU_c26  ⇒ a_v36979
    | consUU_c27 __v36982 xs_v36983 ⇒
      get_at_i36(NULL, n_v36981, xs_v36983, a_v36979)
    end
  else
    match xs_v36978 with
    | nilUU_c26  ⇒ a_v36979 | consUU_c27 x_v36984 __v36985 ⇒ x_v36984
    end

val get_atclo_i107 =
  fn A_v36986 n_v36987 xs_v36988 a_v36989 ⇒
    get_at_i36(A_v36986, n_v36987, xs_v36988, a_v36989)

fun string_of_digit_i37(n_v36990) =
  get_at_i36(NULL, n_v36990, digits_i35, EmptyString_c6)

val string_of_digitclo_i108 = fn n_v36991 ⇒ string_of_digit_i37(n_v36991)

fun string_of_nat_i38(n_v36992) =
  let s_v36993 = string_of_digit_i37(modn_i16(n_v36992, 10)) in
  let n_v36994 = divn_i15(n_v36992, 10) in
  if ltn_i7(0, n_v36994) then
    cats_i19(string_of_nat_i38(n_v36994), s_v36993)
  else
    s_v36993

val string_of_natclo_i109 = fn n_v36995 ⇒ string_of_nat_i38(n_v36995)

fun digit_of_char_i39(c_v36996) =
  if eqc_i17(c_v36996, '0') then
    (SomeUL_c17 0)
  else
    if eqc_i17(c_v36996, '1') then
      (SomeUL_c17 1)
    else
      if eqc_i17(c_v36996, '2') then
        (SomeUL_c17 2)
      else
        if eqc_i17(c_v36996, '3') then
          (SomeUL_c17 3)
        else
          if eqc_i17(c_v36996, '4') then
            (SomeUL_c17 4)
          else
            if eqc_i17(c_v36996, '5') then
              (SomeUL_c17 5)
            else
              if eqc_i17(c_v36996, '6') then
                (SomeUL_c17 6)
              else
                if eqc_i17(c_v36996, '7') then
                  (SomeUL_c17 7)
                else
                  if eqc_i17(c_v36996, '8') then
                    (SomeUL_c17 8)
                  else
                    if eqc_i17(c_v36996, '9') then
                      (SomeUL_c17 9)
                    else
                      NoneUL_c16

val digit_of_charclo_i110 = fn c_v36997 ⇒ digit_of_char_i39(c_v36997)

fun nat_of_string_loop_i40(s_v36998, acc_v36999) =
  match s_v36998 with
  | EmptyString_c6  ⇒ (SomeUL_c17 acc_v36999)
  | String_c7 c_v37000 s_v37001 ⇒
    match digit_of_char_i39(c_v37000) with
    | NoneUL_c16  ⇒ NoneUL_c16
    | SomeUL_c17 n_v37002 ⇒
      nat_of_string_loop_i40(s_v37001,
                             addn_i12(muln_i14(acc_v36999, 10), n_v37002))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v37003 acc_v37004 ⇒ nat_of_string_loop_i40(s_v37003, acc_v37004)

fun nat_of_string_i41(s_v37005) = nat_of_string_loop_i40(s_v37005, 0)

val nat_of_stringclo_i112 = fn s_v37006 ⇒ nat_of_string_i41(s_v37006)

fun read_nat_i48(__v37007) =
  ln __v37008 ⇒
    let s_v37009 = (readline_i32(NULL)) NULL in
    (match nat_of_string_i41(s_v37009) with
     | SomeUL_c17 n_v37010 ⇒ ln __v37011 ⇒ n_v37010
     | NoneUL_c16  ⇒
       ln __v37012 ⇒
         let __v37013 = (print_i33("please input a natural number\n")) NULL
         in (read_nat_i48(NULL)) NULL
     end) NULL

val read_natclo_i113 = fn __v37014 ⇒ read_nat_i48(__v37014)

fun player_loop_i49(ans_v37015, repeat_v37016, c_v37017) =
  (let __v37018 = repeat_v37016 in
   if __v37018 then
     let repeat_v37019 = __v37018.-1 in
     fn c_v37020 ⇒
       ln __v37021 ⇒
         let guess_v37022 = (read_nat_i48(NULL)) NULL in
         let c_v37023 =
           ((fn x_v37024 ⇒ ln __v37025 ⇒ send(c_v37020, x_v37024))
              guess_v37022)
             NULL
         in
         let __v37026 = (ln __v37027 ⇒ recv(c_v37023)) NULL in
         (match __v37026 with
          | (ord_v37028, c_v37029) ⇒
            ln __v37030 ⇒
              let __v37031 = (ln __v37032 ⇒ (NULL, c_v37029)) NULL in
              (match __v37031 with
               | (pf_v37033, c_v37034) ⇒
                 (match ord_v37028 with
                  | EQ_c3  ⇒
                    fn c_v37035 ⇒
                      ln __v37036 ⇒
                        let __v37037 = (print_i33("You Win!\n")) NULL in
                        (ln __v37038 ⇒ close(c_v37035)) NULL
                  | LT_c1  ⇒
                    fn c_v37039 ⇒
                      ln __v37040 ⇒
                        let __v37041 =
                          (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v37019)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v37019, c_v37039)) NULL
                  | GT_c2  ⇒
                    fn c_v37042 ⇒
                      ln __v37043 ⇒
                        let __v37044 =
                          (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v37019)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v37019, c_v37042)) NULL
                  end) c_v37034
               end) NULL
          end) NULL
   else
     fn c_v37045 ⇒
       ln __v37046 ⇒
         let __v37047 = (ln __v37048 ⇒ recv(c_v37045)) NULL in
         (match __v37047 with
          | (ans_v37049, c_v37050) ⇒
            ln __v37051 ⇒
              let __v37052 = (ln __v37053 ⇒ (NULL, c_v37050)) NULL in
              (match __v37052 with
               | (pf_v37054, c_v37055) ⇒
                 ln __v37056 ⇒
                   let __v37057 =
                     (print_i33(cats_i19(cats_i19("You Lose! The answer is ",
                                                  string_of_nat_i38(ans_v37049)),
                                         ".\n")))
                       NULL
                   in (ln __v37058 ⇒ close(c_v37055)) NULL
               end) NULL
          end) NULL)
    c_v37017

val player_loopclo_i114 =
  fn ans_v37059 repeat_v37060 c_v37061 ⇒
    player_loop_i49(ans_v37059, repeat_v37060, c_v37061)

fun player_i50(c_v37062) =
  ln __v37063 ⇒
    let __v37064 = (ln __v37065 ⇒ recv(c_v37062)) NULL in
    (match __v37064 with
     | (lower_v37066, c_v37067) ⇒
       ln __v37068 ⇒
         let __v37069 = (ln __v37070 ⇒ recv(c_v37067)) NULL in
         (match __v37069 with
          | (upper_v37071, c_v37072) ⇒
            ln __v37073 ⇒
              let __v37074 = (ln __v37075 ⇒ (NULL, c_v37072)) NULL in
              (match __v37074 with
               | (ans_v37076, c_v37077) ⇒
                 ln __v37078 ⇒
                   let __v37079 = (ln __v37080 ⇒ (NULL, c_v37077)) NULL in
                   (match __v37079 with
                    | (pf1_v37081, c_v37082) ⇒
                      ln __v37083 ⇒
                        let __v37084 =
                          (ln __v37085 ⇒ (NULL, c_v37082)) NULL
                        in
                        (match __v37084 with
                         | (pf2_v37086, c_v37087) ⇒
                           ln __v37088 ⇒
                             let __v37089 =
                               (ln __v37090 ⇒ recv(c_v37087)) NULL
                             in
                             (match __v37089 with
                              | (repeat_v37091, c_v37092) ⇒
                                ln __v37093 ⇒
                                  let __v37094 =
                                    (print_i33(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v37066)),
                                                                 " and "),
                                                                 string_of_nat_i38(
                                                                 upper_v37071)),
                                                        ".\n")))
                                      NULL
                                  in
                                  let __v37095 =
                                    (print_i33(cats_i19(cats_i19("You have ",
                                                                 string_of_nat_i38(
                                                                 repeat_v37091)),
                                                        " tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i49(NULL, repeat_v37091,
                                                   c_v37092))
                                    NULL
                              end) NULL
                         end) NULL
                    end) NULL
               end) NULL
          end) NULL
     end) NULL

val playerclo_i115 = fn c_v37096 ⇒ player_i50(c_v37096)

fun server_loop_i51(ans_v37097, repeat_v37098, c_v37099) =
  (let __v37100 = repeat_v37098 in
   if __v37100 then
     let repeat_v37101 = __v37100.-1 in
     fn c_v37102 ⇒
       ln __v37103 ⇒
         let __v37104 = (ln __v37105 ⇒ recv(c_v37102)) NULL in
         (match __v37104 with
          | (n_v37106, c_v37107) ⇒
            let ord_v37108 = comparen_i10(ans_v37097, n_v37106) in
            ln __v37109 ⇒
              let c_v37110 =
                ((fn x_v37111 ⇒ ln __v37112 ⇒ send(c_v37107, x_v37111))
                   ord_v37108)
                  NULL
              in
              let c_v37113 =
                ((fn x_v37114 ⇒ ln __v37115 ⇒ c_v37110) NULL) NULL
              in
              ((match ord_v37108 with
                | EQ_c3  ⇒
                  fn c_v37116 ⇒
                    ln __v37117 ⇒ let __v37118 = c_v37116 in NULL
                | LT_c1  ⇒
                  fn c_v37119 ⇒
                    server_loop_i51(ans_v37097, repeat_v37101, c_v37119)
                | GT_c2  ⇒
                  fn c_v37120 ⇒
                    server_loop_i51(ans_v37097, repeat_v37101, c_v37120)
                end) c_v37113) NULL
          end) NULL
   else
     fn c_v37121 ⇒
       ln __v37122 ⇒
         let c_v37123 =
           ((fn x_v37124 ⇒ ln __v37125 ⇒ send(c_v37121, x_v37124))
              ans_v37097)
             NULL
         in
         let c_v37126 =
           ((fn x_v37127 ⇒ ln __v37128 ⇒ c_v37123) NULL) NULL
         in (ln __v37129 ⇒ let __v37130 = c_v37126 in NULL) NULL)
    c_v37099

val server_loopclo_i116 =
  fn ans_v37131 repeat_v37132 c_v37133 ⇒
    server_loop_i51(ans_v37131, repeat_v37132, c_v37133)

fun server_i52(c_v37134) =
  let lower_v37135 = 0 in
  let upper_v37136 = 127 in
  ln __v37137 ⇒
    let res_v37138 = (ln __v37139 ⇒ rand(lower_v37135, upper_v37136)) NULL
    in
    (match res_v37138 with
     | Between_c4 ans_v37140 pf1_v37141 pf2_v37142 ⇒
       let repeat_v37143 = 6 in
       ln __v37144 ⇒
         let c_v37145 =
           ((fn x_v37146 ⇒ ln __v37147 ⇒ send(c_v37134, x_v37146))
              lower_v37135)
             NULL
         in
         let c_v37148 =
           ((fn x_v37149 ⇒ ln __v37150 ⇒ send(c_v37145, x_v37149))
              upper_v37136)
             NULL
         in
         let c_v37151 =
           ((fn x_v37152 ⇒ ln __v37153 ⇒ c_v37148) NULL) NULL
         in
         let c_v37154 =
           ((fn x_v37155 ⇒ ln __v37156 ⇒ c_v37151) NULL) NULL
         in
         let c_v37157 =
           ((fn x_v37158 ⇒ ln __v37159 ⇒ c_v37154) NULL) NULL
         in
         let c_v37160 =
           ((fn x_v37161 ⇒ ln __v37162 ⇒ send(c_v37157, x_v37161))
              repeat_v37143)
             NULL
         in (server_loop_i51(ans_v37140, repeat_v37143, c_v37160)) NULL
     end) NULL

val serverclo_i117 = fn c_v37163 ⇒ server_i52(c_v37163)

main =
  (ln __v37164 ⇒
     let c_v37165 =
       (ln __v37166 ⇒ fork c_v37167 in (server_i52(c_v37167)) NULL) NULL
     in
     let c0_v37168 =
       (ln __v37169 ⇒
          fork c0_v37170 in
            (ln __v37171 ⇒
               let __v37172 = (ln __v37173 ⇒ recv(c0_v37170)) NULL in
               (match __v37172 with
                | (c_v37174, c0_v37175) ⇒
                  ln __v37176 ⇒
                    let __v37177 = (player_i50(c_v37174)) NULL in
                    let c0_v37178 =
                      ((fn x_v37179 ⇒
                          ln __v37180 ⇒ send(c0_v37175, x_v37179))
                         NULL)
                        NULL
                    in
                    (ln __v37181 ⇒ let __v37182 = c0_v37178 in NULL) NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v37183 =
       ((ln x_v37184 __v37185 ⇒ send(c0_v37168, x_v37184)) c_v37165) NULL
     in
     let __v37186 = (ln __v37187 ⇒ recv(c0_v37183)) NULL in
     (match __v37186 with
      | (__v37188, c0_v37189) ⇒ ln __v37190 ⇒ close(c0_v37189)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v38333, b2_v38334) = if b1_v38333 then
                                      b2_v38334
                                    else
                                      0

val andbclo_i70 = fn b1_v38335 b2_v38336 ⇒ andb_i1(b1_v38335, b2_v38336)

fun orb_i2(b1_v38337, b2_v38338) = if b1_v38337 then
                                     1
                                   else
                                     b2_v38338

val orbclo_i71 = fn b1_v38339 b2_v38340 ⇒ orb_i2(b1_v38339, b2_v38340)

fun notb_i3(b_v38341) = if b_v38341 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v38342 ⇒ notb_i3(b_v38342)

fun compareb_i4(b1_v38343, b2_v38344) =
  if b1_v38343 then
    if b2_v38344 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v38344 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v38345 b2_v38346 ⇒ compareb_i4(b1_v38345, b2_v38346)

fun lten_i5(x_v38347, y_v38348) =
  if x_v38347 then
    if y_v38348 then
      lten_i5(x_v38347.-1, y_v38348.-1)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v38349 y_v38350 ⇒ lten_i5(x_v38349, y_v38350)

fun gten_i6(x_v38351, y_v38352) =
  if x_v38351 then
    if y_v38352 then
      gten_i6(x_v38351.-1, y_v38352.-1)
    else
      1
  else
    if y_v38352 then
      0
    else
      1

val gtenclo_i75 = fn x_v38353 y_v38354 ⇒ gten_i6(x_v38353, y_v38354)

fun ltn_i7(x_v38355, y_v38356) =
  if x_v38355 then
    if y_v38356 then
      ltn_i7(x_v38355.-1, y_v38356.-1)
    else
      0
  else
    if y_v38356 then
      1
    else
      0

val ltnclo_i76 = fn x_v38357 y_v38358 ⇒ ltn_i7(x_v38357, y_v38358)

fun gtn_i8(x_v38359, y_v38360) =
  if x_v38359 then
    if y_v38360 then
      gtn_i8(x_v38359.-1, y_v38360.-1)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v38361 y_v38362 ⇒ gtn_i8(x_v38361, y_v38362)

fun eqn_i9(x_v38363, y_v38364) =
  if x_v38363 then
    if y_v38364 then
      eqn_i9(x_v38363.-1, y_v38364.-1)
    else
      0
  else
    if y_v38364 then
      0
    else
      1

val eqnclo_i78 = fn x_v38365 y_v38366 ⇒ eqn_i9(x_v38365, y_v38366)

fun comparen_i10(n1_v38367, n2_v38368) =
  if n1_v38367 then
    if n2_v38368 then
      comparen_i10(n1_v38367.-1, n2_v38368.-1)
    else
      GT_c2
  else
    if n2_v38368 then
      LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v38369 n2_v38370 ⇒ comparen_i10(n1_v38369, n2_v38370)

fun pred_i11(x_v38371) = if x_v38371 then
                           x_v38371.-1
                         else
                           0

val predclo_i80 = fn x_v38372 ⇒ pred_i11(x_v38372)

fun addn_i12(x_v38373, y_v38374) =
  if x_v38373 then
    addn_i12(x_v38373.-1, y_v38374).+1
  else
    y_v38374

val addnclo_i81 = fn x_v38375 y_v38376 ⇒ addn_i12(x_v38375, y_v38376)

fun subn_i13(x_v38377, y_v38378) =
  if y_v38378 then
    subn_i13(pred_i11(x_v38377), y_v38378.-1)
  else
    x_v38377

val subnclo_i82 = fn x_v38379 y_v38380 ⇒ subn_i13(x_v38379, y_v38380)

fun muln_i14(x_v38381, y_v38382) =
  if x_v38381 then
    addn_i12(y_v38382, muln_i14(x_v38381.-1, y_v38382))
  else
    0

val mulnclo_i83 = fn x_v38383 y_v38384 ⇒ muln_i14(x_v38383, y_v38384)

fun divn_i15(x_v38385, y_v38386) =
  if ltn_i7(x_v38385, y_v38386) then
    0
  else
    divn_i15(subn_i13(x_v38385, y_v38386), y_v38386).+1

val divnclo_i84 = fn x_v38387 y_v38388 ⇒ divn_i15(x_v38387, y_v38388)

fun modn_i16(x_v38389, y_v38390) =
  subn_i13(x_v38389, muln_i14(divn_i15(x_v38389, y_v38390), y_v38390))

val modnclo_i85 = fn x_v38391 y_v38392 ⇒ modn_i16(x_v38391, y_v38392)

fun eqc_i17(c1_v38393, c2_v38394) =
  match c1_v38393 with
  | Char_c5 n1_v38395 ⇒
    match c2_v38394 with
    | Char_c5 n2_v38396 ⇒ eqn_i9(n1_v38395, n2_v38396)
    end
  end

val eqcclo_i86 = fn c1_v38397 c2_v38398 ⇒ eqc_i17(c1_v38397, c2_v38398)

fun comparec_i18(c1_v38399, c2_v38400) =
  match c1_v38399 with
  | Char_c5 n1_v38401 ⇒
    match c2_v38400 with
    | Char_c5 n2_v38402 ⇒ comparen_i10(n1_v38401, n2_v38402)
    end
  end

val comparecclo_i87 =
  fn c1_v38403 c2_v38404 ⇒ comparec_i18(c1_v38403, c2_v38404)

fun cats_i19(s1_v38405, s2_v38406) =
  match s1_v38405 with
  | EmptyString_c6  ⇒ s2_v38406
  | String_c7 c_v38407 s1_v38408 ⇒
    (String_c7 c_v38407 cats_i19(s1_v38408, s2_v38406))
  end

val catsclo_i88 = fn s1_v38409 s2_v38410 ⇒ cats_i19(s1_v38409, s2_v38410)

fun strlen_i20(s_v38411) =
  match s_v38411 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v38412 s_v38413 ⇒ strlen_i20(s_v38413).+1
  end

val strlenclo_i89 = fn s_v38414 ⇒ strlen_i20(s_v38414)

fun eqs_i21(s1_v38415, s2_v38416) =
  match s1_v38415 with
  | EmptyString_c6  ⇒
    match s2_v38416 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v38417 __v38418 ⇒ 0
    end
  | String_c7 c1_v38419 s1_v38420 ⇒
    match s2_v38416 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v38421 s2_v38422 ⇒
      andb_i1(eqc_i17(c1_v38419, c2_v38421), eqs_i21(s1_v38420, s2_v38422))
    end
  end

val eqsclo_i90 = fn s1_v38423 s2_v38424 ⇒ eqs_i21(s1_v38423, s2_v38424)

fun compares_i22(s1_v38425, s2_v38426) =
  match s1_v38425 with
  | EmptyString_c6  ⇒
    match s2_v38426 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v38427 __v38428 ⇒ LT_c1
    end
  | String_c7 c1_v38429 s1_v38430 ⇒
    match s2_v38426 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v38431 s2_v38432 ⇒
      match comparec_i18(c1_v38429, c2_v38431) with
      | EQ_c3  ⇒ compares_i22(s1_v38430, s2_v38432) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v38433 s2_v38434 ⇒ compares_i22(s1_v38433, s2_v38434)

fun and_thenUUU_i61(A_v38435, B_v38436, opt_v38437, f_v38438) =
  match opt_v38437 with
  | NoneUU_c18  ⇒ NoneUU_c18 | SomeUU_c19 x_v38439 ⇒ (f_v38438) x_v38439
  end

val and_thenUUUclo_i92 =
  fn A_v38440 B_v38441 opt_v38442 ⇒
    ln f_v38443 ⇒ and_thenUUU_i61(A_v38440, B_v38441, opt_v38442, f_v38443)

fun and_thenUUL_i60(A_v38444, B_v38445, opt_v38446, f_v38447) =
  match opt_v38446 with
  | NoneUL_c16  ⇒ NoneUL_c16 | SomeUL_c17 x_v38448 ⇒ (f_v38447) x_v38448
  end

val and_thenUULclo_i93 =
  fn A_v38449 B_v38450 opt_v38451 ⇒
    ln f_v38452 ⇒ and_thenUUL_i60(A_v38449, B_v38450, opt_v38451, f_v38452)

fun and_thenULU_i59(A_v38453, B_v38454, opt_v38455, f_v38456) =
  match opt_v38455 with
  | NoneUU_c18  ⇒ NoneLU_c14 | SomeUU_c19 x_v38457 ⇒ (f_v38456) x_v38457
  end

val and_thenULUclo_i94 =
  fn A_v38458 B_v38459 opt_v38460 ⇒
    ln f_v38461 ⇒ and_thenULU_i59(A_v38458, B_v38459, opt_v38460, f_v38461)

fun and_thenULL_i58(A_v38462, B_v38463, opt_v38464, f_v38465) =
  match opt_v38464 with
  | NoneUL_c16  ⇒ NoneLL_c12 | SomeUL_c17 x_v38466 ⇒ (f_v38465) x_v38466
  end

val and_thenULLclo_i95 =
  fn A_v38467 B_v38468 opt_v38469 ⇒
    ln f_v38470 ⇒ and_thenULL_i58(A_v38467, B_v38468, opt_v38469, f_v38470)

fun and_thenLUL_i56(A_v38471, B_v38472, opt_v38473, f_v38474) =
  match opt_v38473 with
  | NoneLL_c12  ⇒ NoneUL_c16 | SomeLL_c13 x_v38475 ⇒ (f_v38474) x_v38475
  end

val and_thenLULclo_i96 =
  fn A_v38476 B_v38477 opt_v38478 ⇒
    ln f_v38479 ⇒ and_thenLUL_i56(A_v38476, B_v38477, opt_v38478, f_v38479)

fun and_thenLLL_i54(A_v38480, B_v38481, opt_v38482, f_v38483) =
  match opt_v38482 with
  | NoneLL_c12  ⇒ NoneLL_c12 | SomeLL_c13 x_v38484 ⇒ (f_v38483) x_v38484
  end

val and_thenLLLclo_i97 =
  fn A_v38485 B_v38486 opt_v38487 ⇒
    ln f_v38488 ⇒ and_thenLLL_i54(A_v38485, B_v38486, opt_v38487, f_v38488)

fun lenUU_i65(A_v38489, xs_v38490) =
  match xs_v38490 with
  | nilUU_c26  ⇒ (0, nilUU_c26)
  | consUU_c27 x_v38491 xs_v38492 ⇒
    match lenUU_i65(NULL, xs_v38492) with
    | (n_v38493, xs_v38494) ⇒
      (n_v38493.+1, (consUU_c27 x_v38491 xs_v38494))
    end
  end

val lenUUclo_i98 = fn A_v38495 xs_v38496 ⇒ lenUU_i65(A_v38495, xs_v38496)

fun lenUL_i64(A_v38497, xs_v38498) =
  match xs_v38498 with
  | nilUL_c24  ⇒ (0, nilUL_c24)
  | consUL_c25 x_v38499 xs_v38500 ⇒
    match lenUL_i64(NULL, xs_v38500) with
    | (n_v38501, xs_v38502) ⇒
      (n_v38501.+1, (consUL_c25 x_v38499 xs_v38502))
    end
  end

val lenULclo_i99 = fn A_v38503 xs_v38504 ⇒ lenUL_i64(A_v38503, xs_v38504)

fun lenLL_i62(A_v38505, xs_v38506) =
  match xs_v38506 with
  | nilLL_c20  ⇒ (0, nilLL_c20)
  | consLL_c21 x_v38507 xs_v38508 ⇒
    match lenLL_i62(NULL, xs_v38508) with
    | (n_v38509, xs_v38510) ⇒
      (n_v38509.+1, (consLL_c21 x_v38507 xs_v38510))
    end
  end

val lenLLclo_i100 = fn A_v38511 xs_v38512 ⇒ lenLL_i62(A_v38511, xs_v38512)

fun appendUU_i69(A_v38513, xs_v38514, ys_v38515) =
  match xs_v38514 with
  | nilUU_c26  ⇒ ys_v38515
  | consUU_c27 x_v38516 xs_v38517 ⇒
    (consUU_c27 x_v38516 appendUU_i69(NULL, xs_v38517, ys_v38515))
  end

val appendUUclo_i101 =
  fn A_v38518 xs_v38519 ⇒
    ln ys_v38520 ⇒ appendUU_i69(A_v38518, xs_v38519, ys_v38520)

fun appendUL_i68(A_v38521, xs_v38522, ys_v38523) =
  match xs_v38522 with
  | nilUL_c24  ⇒ ys_v38523
  | consUL_c25 x_v38524 xs_v38525 ⇒
    (consUL_c25 x_v38524 appendUL_i68(NULL, xs_v38525, ys_v38523))
  end

val appendULclo_i102 =
  fn A_v38526 xs_v38527 ⇒
    ln ys_v38528 ⇒ appendUL_i68(A_v38526, xs_v38527, ys_v38528)

fun appendLL_i66(A_v38529, xs_v38530, ys_v38531) =
  match xs_v38530 with
  | nilLL_c20  ⇒ ys_v38531
  | consLL_c21 x_v38532 xs_v38533 ⇒
    (consLL_c21 x_v38532 appendLL_i66(NULL, xs_v38533, ys_v38531))
  end

val appendLLclo_i103 =
  fn A_v38534 xs_v38535 ⇒
    ln ys_v38536 ⇒ appendLL_i66(A_v38534, xs_v38535, ys_v38536)

fun readline_i32(__v38537) =
  ln __v38538 ⇒
    let ch_v38539 = open stdin in
    let ch_v38540 = send(ch_v38539, 1) in
    let __v38541 = recv(ch_v38540) in
    match __v38541 with
    | (s_v38542, ch_v38543) ⇒
      let ch_v38544 = send(ch_v38543, 0) in s_v38542
    end

val readlineclo_i104 = fn __v38545 ⇒ readline_i32(__v38545)

fun print_i33(s_v38546) =
  ln __v38547 ⇒
    let ch_v38548 = open stdout in
    let ch_v38549 = send(ch_v38548, 1) in
    let ch_v38550 = send(ch_v38549, s_v38546) in
    let ch_v38551 = send(ch_v38550, 0) in NULL

val printclo_i105 = fn s_v38552 ⇒ print_i33(s_v38552)

fun prerr_i34(s_v38553) =
  ln __v38554 ⇒
    let ch_v38555 = open stderr in
    let ch_v38556 = send(ch_v38555, 1) in
    let ch_v38557 = send(ch_v38556, s_v38553) in
    let ch_v38558 = send(ch_v38557, 0) in NULL

val prerrclo_i106 = fn s_v38559 ⇒ prerr_i34(s_v38559)

val digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

fun get_at_i36(A_v38560, n_v38561, xs_v38562, a_v38563) =
  if n_v38561 then
    match xs_v38562 with
    | nilUU_c26  ⇒ a_v38563
    | consUU_c27 __v38564 xs_v38565 ⇒
      get_at_i36(NULL, n_v38561.-1, xs_v38565, a_v38563)
    end
  else
    match xs_v38562 with
    | nilUU_c26  ⇒ a_v38563 | consUU_c27 x_v38566 __v38567 ⇒ x_v38566
    end

val get_atclo_i107 =
  fn A_v38568 n_v38569 xs_v38570 a_v38571 ⇒
    get_at_i36(A_v38568, n_v38569, xs_v38570, a_v38571)

fun string_of_digit_i37(n_v38572) =
  get_at_i36(NULL, n_v38572, digits_i35, EmptyString_c6)

val string_of_digitclo_i108 = fn n_v38573 ⇒ string_of_digit_i37(n_v38573)

fun string_of_nat_i38(n_v38574) =
  let s_v38575 = string_of_digit_i37(modn_i16(n_v38574, 10)) in
  let n_v38576 = divn_i15(n_v38574, 10) in
  if ltn_i7(0, n_v38576) then
    cats_i19(string_of_nat_i38(n_v38576), s_v38575)
  else
    s_v38575

val string_of_natclo_i109 = fn n_v38577 ⇒ string_of_nat_i38(n_v38577)

fun digit_of_char_i39(c_v38578) =
  if eqc_i17(c_v38578, '0') then
    (SomeUL_c17 0)
  else
    if eqc_i17(c_v38578, '1') then
      (SomeUL_c17 1)
    else
      if eqc_i17(c_v38578, '2') then
        (SomeUL_c17 2)
      else
        if eqc_i17(c_v38578, '3') then
          (SomeUL_c17 3)
        else
          if eqc_i17(c_v38578, '4') then
            (SomeUL_c17 4)
          else
            if eqc_i17(c_v38578, '5') then
              (SomeUL_c17 5)
            else
              if eqc_i17(c_v38578, '6') then
                (SomeUL_c17 6)
              else
                if eqc_i17(c_v38578, '7') then
                  (SomeUL_c17 7)
                else
                  if eqc_i17(c_v38578, '8') then
                    (SomeUL_c17 8)
                  else
                    if eqc_i17(c_v38578, '9') then
                      (SomeUL_c17 9)
                    else
                      NoneUL_c16

val digit_of_charclo_i110 = fn c_v38579 ⇒ digit_of_char_i39(c_v38579)

fun nat_of_string_loop_i40(s_v38580, acc_v38581) =
  match s_v38580 with
  | EmptyString_c6  ⇒ (SomeUL_c17 acc_v38581)
  | String_c7 c_v38582 s_v38583 ⇒
    match digit_of_char_i39(c_v38582) with
    | NoneUL_c16  ⇒ NoneUL_c16
    | SomeUL_c17 n_v38584 ⇒
      nat_of_string_loop_i40(s_v38583,
                             addn_i12(muln_i14(acc_v38581, 10), n_v38584))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v38585 acc_v38586 ⇒ nat_of_string_loop_i40(s_v38585, acc_v38586)

fun nat_of_string_i41(s_v38587) = nat_of_string_loop_i40(s_v38587, 0)

val nat_of_stringclo_i112 = fn s_v38588 ⇒ nat_of_string_i41(s_v38588)

fun read_nat_i48(__v38589) =
  ln __v38590 ⇒
    let s_v38591 = (readline_i32(NULL)) NULL in
    match nat_of_string_i41(s_v38591) with
    | SomeUL_c17 n_v38592 ⇒ n_v38592
    | NoneUL_c16  ⇒
      let __v38593 = (print_i33("please input a natural number\n")) NULL in
      (read_nat_i48(NULL)) NULL
    end

val read_natclo_i113 = fn __v38594 ⇒ read_nat_i48(__v38594)

fun player_loop_i49(ans_v38595, repeat_v38596, c_v38597) =
  (if repeat_v38596 then
     fn c_v38598 ⇒
       ln __v38599 ⇒
         let guess_v38600 = (read_nat_i48(NULL)) NULL in
         let c_v38601 = send(c_v38598, guess_v38600) in
         let __v38602 = recv(c_v38601) in
         match __v38602 with
         | (ord_v38603, c_v38604) ⇒
           match (NULL, c_v38604) with
           | (pf_v38605, c_v38606) ⇒
             match ord_v38603 with
             | EQ_c3  ⇒
               let __v38607 = (print_i33("You Win!\n")) NULL in
               close(c_v38606)
             | LT_c1  ⇒
               let __v38608 =
                 (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                              string_of_nat_i38(repeat_v38596.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v38596.-1, c_v38606)) NULL
             | GT_c2  ⇒
               let __v38609 =
                 (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                              string_of_nat_i38(repeat_v38596.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v38596.-1, c_v38606)) NULL
             end
           end
         end
   else
     fn c_v38610 ⇒
       ln __v38611 ⇒
         let __v38612 = recv(c_v38610) in
         match __v38612 with
         | (ans_v38613, c_v38614) ⇒
           match (NULL, c_v38614) with
           | (pf_v38615, c_v38616) ⇒
             let __v38617 =
               (print_i33(cats_i19(cats_i19("You Lose! The answer is ",
                                            string_of_nat_i38(ans_v38613)),
                                   ".\n")))
                 NULL
             in close(c_v38616)
           end
         end)
    c_v38597

val player_loopclo_i114 =
  fn ans_v38618 repeat_v38619 c_v38620 ⇒
    player_loop_i49(ans_v38618, repeat_v38619, c_v38620)

fun player_i50(c_v38621) =
  ln __v38622 ⇒
    let __v38623 = recv(c_v38621) in
    match __v38623 with
    | (lower_v38624, c_v38625) ⇒
      let __v38626 = recv(c_v38625) in
      match __v38626 with
      | (upper_v38627, c_v38628) ⇒
        match (NULL, c_v38628) with
        | (ans_v38629, c_v38630) ⇒
          match (NULL, c_v38630) with
          | (pf1_v38631, c_v38632) ⇒
            match (NULL, c_v38632) with
            | (pf2_v38633, c_v38634) ⇒
              let __v38635 = recv(c_v38634) in
              match __v38635 with
              | (repeat_v38636, c_v38637) ⇒
                let __v38638 =
                  (print_i33(cats_i19(cats_i19(cats_i19(cats_i19("Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v38624)),
                                                        " and "),
                                               string_of_nat_i38(upper_v38627)),
                                      ".\n")))
                    NULL
                in
                let __v38639 =
                  (print_i33(cats_i19(cats_i19("You have ",
                                               string_of_nat_i38(repeat_v38636)),
                                      " tries.\n")))
                    NULL
                in (player_loop_i49(NULL, repeat_v38636, c_v38637)) NULL
              end
            end
          end
        end
      end
    end

val playerclo_i115 = fn c_v38640 ⇒ player_i50(c_v38640)

fun server_loop_i51(ans_v38641, repeat_v38642, c_v38643) =
  (if repeat_v38642 then
     fn c_v38644 ⇒
       ln __v38645 ⇒
         let __v38646 = recv(c_v38644) in
         match __v38646 with
         | (n_v38647, c_v38648) ⇒
           let ord_v38649 = comparen_i10(ans_v38641, n_v38647) in
           let c_v38650 = send(c_v38648, ord_v38649) in
           match ord_v38649 with
           | EQ_c3  ⇒ NULL
           | LT_c1  ⇒
             (server_loop_i51(ans_v38641, repeat_v38642.-1, c_v38650)) NULL
           | GT_c2  ⇒
             (server_loop_i51(ans_v38641, repeat_v38642.-1, c_v38650)) NULL
           end
         end
   else
     fn c_v38651 ⇒
       ln __v38652 ⇒ let c_v38653 = send(c_v38651, ans_v38641) in NULL)
    c_v38643

val server_loopclo_i116 =
  fn ans_v38654 repeat_v38655 c_v38656 ⇒
    server_loop_i51(ans_v38654, repeat_v38655, c_v38656)

fun server_i52(c_v38657) =
  ln __v38658 ⇒
    let res_v38659 = rand(0, 127) in
    match res_v38659 with
    | Between_c4 ans_v38660 pf1_v38661 pf2_v38662 ⇒
      let c_v38663 = send(c_v38657, 0) in
      let c_v38664 = send(c_v38663, 127) in
      let c_v38665 = send(c_v38664, 6) in
      (server_loop_i51(ans_v38660, 6, c_v38665)) NULL
    end

val serverclo_i117 = fn c_v38666 ⇒ server_i52(c_v38666)

main =
  let c_v38667 = fork c_v38668 in (server_i52(c_v38668)) NULL in
  let c0_v38669 =
    fork c0_v38670 in
      let __v38671 = recv(c0_v38670) in
      match __v38671 with
      | (c_v38672, c0_v38673) ⇒
        let __v38674 = (player_i50(c_v38672)) NULL in
        let c0_v38675 = send(c0_v38673, NULL) in NULL
      end
  in
  let c0_v38676 = send(c0_v38669, c_v38667) in
  let __v38677 = recv(c0_v38676) in
  match __v38677 with
  | (__v38678, c0_v38679) ⇒ close(c0_v38679)
  end

trans3e success--------------------------

trans34 success--------------------------

