program split‹t› (zs : ((list‹_, t›)
(nat))) : (∃ (_ : ((list‹_, t›) (nat))) ⊗ ((list‹_, t›)
(nat))) = match zs as _ in _ with nil  ⇒ ⟨nil, nil⟩ | cons x
zs ⇒ match zs as _ in _ with nil  ⇒ ⟨((cons) (x)
(nil)), nil⟩ | cons y zs ⇒ let ⟨xs, ys⟩ = ((split)
(zs)) in ⟨((cons) (x) (xs)), ((cons) (y)
(ys))⟩

program merge‹t› (xs : ((list‹_, t›)
(nat))) : (∀ (_ : ((list‹_, t›) (nat))) ⊸ ((list‹_, t›)
(nat))) = (ln (ys : _) ⇒ match xs as _ in _ with nil  ⇒ ys | cons x
xs0 ⇒ match ys as _ in _ with nil  ⇒ ((cons) (x) (xs0)) | cons y
ys0 ⇒ match ((lten) (x) (y)) as _ in _ with true ⇒ ((cons) (x)
(((merge) (xs0) (((cons) (y) (ys0)))))) | false ⇒ ((cons) (y)
(((merge) (((cons) (x) (xs0))) (ys0)))))

program msort‹t› (zs : ((list‹_, t›) (nat))) : ((list‹_, t›)
(nat)) = match zs as _ in _ with nil  ⇒ nil | cons x
zs ⇒ match zs as _ in _ with nil  ⇒ ((cons) (x) (nil)) | cons y
zs ⇒ let ⟨xs, ys⟩ = ((split)
(((cons) (x) (((cons) (y) (zs)))))) in ((merge) (((msort) (xs)))
(((msort) (ys))))

inductive uniq‹t› (A : Type‹t›) (a : A) : Type‹t› = Uniq of ‹t› {A : Type‹t›} {a : A} (m : A) {pf : m ≡ a} → (
(uniq‹t›) (A)
(a))

logical cmsort_ch‹t› (xs : ((list‹_, t›)
(nat))) : L = ch‹!(_ : ((uniq) (_)
(((msort) (xs))))) → end›

program cmsort_worker‹t› (n : nat) (zs : ((list‹_, t›)
(nat))) : (∀ (_ : ((cmsort_ch‹t›)
(zs))) ⊸ IO unit) = (ln (c : _) ⇒ match n as _ in _ with O ⇒ let c ⇐ (
(send c)
(((Uniq) (((msort) (zs))) (refl)))) in close c | S n0 ⇒ ((match zs as _zs_ in (∀ (_ : (
                                                            (cmsort_ch)
                                                            (_zs_))) ⊸ IO unit) with nil  ⇒ (ln (c : _) ⇒ let c ⇐ (
                                                            (send c)
                                                            (((Uniq) 
                                                             (nil) (refl)))) in close c) | cons z0
                                                            zs0 ⇒ (ln (c : _) ⇒ (
                                                            (match zs0 as _zs0_ in (∀ (_ : (
                                                             (cmsort_ch)
                                                             (((cons) 
                                                              (z0) (_zs0_))))) ⊸ IO unit) with nil  ⇒ (ln (c : _) ⇒ let c ⇐ (
                                                             (send c)
                                                             (((Uniq)
                                                              (((cons) 
                                                               (z0) (nil)))
                                                              (refl)))) in close c) | cons z1
                                                             zs1 ⇒ (ln (c : _) ⇒ (
                                                             (match (
                                                              (split)
                                                              (((cons) 
                                                               (z0)
                                                               (((cons) 
                                                                (z1) 
                                                                (zs1)))))) as _p_ in (∀ {_ : _p_ ≡ (
                                                              (split)
                                                              (((cons) 
                                                               (z0)
                                                               (((cons) 
                                                                (z1) 
                                                                (zs1))))))} ⊸ IO unit) with ⟨xs0, ys0⟩ ⇒ (ln {e : _} ⇒ let r1 ⇐ fork (r1 : (
                                                              (cmsort_ch)
                                                              (xs0))) in (
                                                              (cmsort_worker)
                                                              (n0) (xs0)
                                                              (r1)) in let r2 ⇐ fork (r2 : (
                                                              (cmsort_ch)
                                                              (ys0))) in (
                                                              (cmsort_worker)
                                                              (n0) (ys0)
                                                              (r2)) in let ⟨msg1, r1⟩ ⇐ recv r1 in let ⟨msg2, r2⟩ ⇐ recv r2 in match msg1 as _ in _ with Uniq xs1
                                                              pf1 ⇒ match msg2 as _ in _ with Uniq xs2
                                                              pf2 ⇒ let zs = (
                                                              (merge) 
                                                              (xs1)
                                                              (xs2)) in let c ⇐ (
                                                              (send c)
                                                              (((Uniq) 
                                                               (zs)
                                                               (rew [p, _ ⇒ zs ≡ let ⟨xs, ys⟩ = p in (
                                                                (merge)
                                                                (((msort)
                                                                 (xs)))
                                                                (((msort)
                                                                 (ys))))] e in rew [l, _ ⇒ zs ≡ (
                                                                (merge) 
                                                                (l)
                                                                (((msort)
                                                                 (ys0))))] pf1 in rew [l, _ ⇒ zs ≡ (
                                                                (merge) 
                                                                (xs1)
                                                                (l))] pf2 in refl)))) in let _ ⇐ close r1 in let _ ⇐ close r2 in close c))
                                                             (refl))))
                                                            (c))))
(c)))

program cmsort‹t› (zs : ((list‹_, t›) (nat))) : IO ((uniq‹t›) 
(_) (((msort) (zs)))) = let c ⇐ fork (c : ((cmsort_ch)
(zs))) in ((cmsort_worker) (O.+4) (zs)
(c)) in let ⟨msg, c⟩ ⇐ recv c in let _ ⇐ close c in return msg

program mkList‹t› (n : nat) : ((list‹_, t›)
(nat)) = match n as _ in _ with O ⇒ nil | S n0 ⇒ ((cons) (n)
(((mkList) (n0))))

program free‹› {A : U} (ls : ((list‹_, L›)
(A))) : unit = match ls as _ in _ with nil  ⇒ () | cons _ ls ⇒ ((free)
(_)
(ls))

program main‹› : IO unit = let test = ((mkList‹L›)
(O.+2000000)) in let msg ⇐ ((cmsort)
(test)) in match msg as _ in _ with Uniq sorted _ ⇒ let _ = ((free) 
(_)
(sorted)) in return ()

parsing success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v263 : bool) (b2_v264 : bool) ⇒
    match b1_v263 as __v265 in ??1 with
    | true ⇒ b2_v264 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v268 : bool) (b2_v269 : bool) ⇒
    match b1_v268 as __v270 in ??2 with
    | true ⇒ true | false ⇒ b2_v269
    end

program notb_i3 : bool → bool =
  fn (b_v272 : bool) ⇒
    match b_v272 as __v273 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v276 : nat) (y_v277 : nat) ⇒
    match x_v276 as __v278 in ??4 with
    | O ⇒ true
    | S x_v279 ⇒
      match y_v277 as __v280 in ??5 with
      | O ⇒ false | S y_v281 ⇒ (lten_i4 x_v279 y_v281)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v284 : nat) (y_v285 : nat) ⇒
    match x_v284 as __v286 in ??6 with
    | O ⇒
      match y_v285 as __v287 in ??8 with
      | O ⇒ true | S __v288 ⇒ false
      end
    | S x_v289 ⇒
      match y_v285 as __v290 in ??7 with
      | O ⇒ true | S y_v291 ⇒ (gten_i5 x_v289 y_v291)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v294 : nat) (y_v295 : nat) ⇒
    match x_v294 as __v296 in ??9 with
    | O ⇒
      match y_v295 as __v297 in ??11 with
      | O ⇒ false | S y_v298 ⇒ true
      end
    | S x_v299 ⇒
      match y_v295 as __v300 in ??10 with
      | O ⇒ false | S y_v301 ⇒ (ltn_i6 x_v299 y_v301)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v304 : nat) (y_v305 : nat) ⇒
    match x_v304 as __v306 in ??12 with
    | O ⇒ false
    | S x_v307 ⇒
      match y_v305 as __v308 in ??13 with
      | O ⇒ true | S y_v309 ⇒ (gtn_i7 x_v307 y_v309)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v312 : nat) (y_v313 : nat) ⇒
    match x_v312 as __v314 in ??14 with
    | O ⇒
      match y_v313 as __v315 in ??16 with
      | O ⇒ true | S __v316 ⇒ false
      end
    | S x_v317 ⇒
      match y_v313 as __v318 in ??15 with
      | O ⇒ false | S y_v319 ⇒ (eqn_i8 x_v317 y_v319)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v321 : nat) ⇒
    match x_v321 as __v322 in ??17 with
    | O ⇒ 0 | S x_v323 ⇒ x_v323
    end

program addn_i10 : nat → nat → nat =
  fn (x_v326 : nat) (y_v327 : nat) ⇒
    match x_v326 as __v328 in ??18 with
    | O ⇒ y_v327 | S x_v329 ⇒ (addn_i10 x_v329 y_v327).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v332 : nat) (y_v333 : nat) ⇒
    match y_v333 as __v334 in ??19 with
    | O ⇒ x_v332 | S y_v335 ⇒ (subn_i11 (pred_i9 x_v332) y_v335)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v338 : nat) (y_v339 : nat) ⇒
    match x_v338 as __v340 in ??20 with
    | O ⇒ 0 | S x_v341 ⇒ (addn_i10 y_v339 (muln_i12 x_v341 y_v339))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v344 : nat) (y_v345 : nat) ⇒
    match (ltn_i6 x_v344 y_v345) as __v346 in ??21 with
    | true ⇒ 0 | false ⇒ (divn_i13 (subn_i11 x_v344 y_v345) y_v345).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v349 : nat) (y_v350 : nat) ⇒
    (subn_i11 x_v349 (muln_i12 (divn_i13 x_v349 y_v350) y_v350))

inductive char_d1 : U =
| Char_c1 of (n_v351 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v352 : char_d1) (s_v353 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v356 : string_d2) (s2_v357 : string_d2) ⇒
    match s1_v356 as __v358 in ??22 with
    | EmptyString_c2  ⇒ s2_v357
    | String_c3 c_v359 s1_v360 ⇒
      (String_c3‹› c_v359 (cats_i15 s1_v360 s2_v357))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v362 : string_d2) ⇒
    match s_v362 as __v363 in ??23 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v364 s_v365 ⇒ (strlen_i16 s_v365).+1
    end

inductive list_d3 ‹s_s366, t_s367›
  (A_v368 : Type‹s_s366›) : Type‹t_s367›
=
| nil_c4 of
    ‹s_s369, t_s370› (A_v371 : Type‹s_s369›)
    : (list_d3‹s_s369, t_s370› A_v371)
| cons_c5 of
    ‹s_s372, t_s373› (A_v374 : Type‹s_s372›) (hd_v375 : A_v374)
    (tl_v376 : (list_d3‹s_s372, t_s373› A_v374))
    : (list_d3‹s_s372, t_s373› A_v374)

program len_i17 ‹s_s377, t_s378› :
  ∀ {A_v379 : Type‹s_s377›} →
    (list_d3‹??24, t_s378› A_v379) →
      nat ⊗ (list_d3‹??25, t_s378› A_v379)
=
  fn {A_v382 : Type‹s_s377›}
     (xs_v383 : (list_d3‹??24, t_s378› A_v382)) ⇒
    match xs_v383 as __v384 in ??26 with
    | nil_c4  ⇒ ⟨0, nil_c4‹??36, ??35›⟩
    | cons_c5 x_v385 xs_v386 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v386) as __v387 in ??30 with
      | ⟨n_v388, xs_v389⟩ ⇒
        ⟨n_v388.+1, (cons_c5‹??33, ??32› x_v385 xs_v389)⟩
      end
    end

program append_i18 ‹s_s390, t_s391› :
  ∀ {A_v392 : Type‹s_s390›} →
    (list_d3‹??37, t_s391› A_v392) →
      (list_d3‹??38, t_s391› A_v392) ⊸ (list_d3‹??40, ??39› A_v392)
=
  fn {A_v395 : Type‹s_s390›}
     (xs_v396 : (list_d3‹??37, t_s391› A_v395)) ⇒
    ln (ys_v397 : ??41) ⇒
      match xs_v396 as __v398 in ??42 with
      | nil_c4  ⇒ ys_v397
      | cons_c5 x_v399 xs_v400 ⇒
        (cons_c5‹??48, ??47›
          x_v399 (append_i18‹??45, ??44› ??43 xs_v400 ys_v397))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v402 : unit) ⇒
    ⇑(b_v403 : bool) ⇒
      match b_v403 as __v404 in ??49 with
      | true ⇒ ⇓(__v405 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v407 : unit) ⇒
    ⇑(b_v408 : bool) ⇒
      match b_v408 as __v409 in ??50 with
      | true ⇒ ⇑(__v410 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v412 : unit) ⇒
    ⇑(b_v413 : bool) ⇒
      match b_v413 as __v414 in ??51 with
      | true ⇒ ⇑(__v415 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v417 : unit) ⇒
    let ch_v418 ⇐ open stdin in
    let ch_v419 ⇐ (send ch_v418 true) in
    let __v420 ⇐ recv ch_v419 in
    match __v420 as __v421 in ??52 with
    | ⟨s_v422, ch_v423⟩ ⇒
      let ch_v424 ⇐ (send ch_v423 false) in
      let __v425 ⇐ close ch_v424 in return s_v422
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v427 : string_d2) ⇒
    let ch_v428 ⇐ open stdout in
    let ch_v429 ⇐ (send ch_v428 true) in
    let ch_v430 ⇐ (send ch_v429 s_v427) in
    let ch_v431 ⇐ (send ch_v430 false) in close ch_v431

program prerr_i27 : string_d2 → IO unit =
  fn (s_v433 : string_d2) ⇒
    let ch_v434 ⇐ open stderr in
    let ch_v435 ⇐ (send ch_v434 true) in
    let ch_v436 ⇐ (send ch_v435 s_v433) in
    let ch_v437 ⇐ (send ch_v436 false) in close ch_v437

program split_i28 ‹t_s438› :
  (list_d3‹??53, t_s438› nat) →
    (list_d3‹??54, t_s438› nat) ⊗ (list_d3‹??55, t_s438› nat)
=
  fn (zs_v441 : (list_d3‹??53, t_s438› nat)) ⇒
    match zs_v441 as __v442 in ??56 with
    | nil_c4  ⇒ ⟨nil_c4‹??77, ??76›, nil_c4‹??80, ??79›⟩
    | cons_c5 x_v443 zs_v444 ⇒
      match zs_v444 as __v445 in ??57 with
      | nil_c4  ⇒
        ⟨(cons_c5‹??71, ??70› x_v443 nil_c4‹??68, ??67›), nil_c4‹??74,
        ??73›⟩
      | cons_c5 y_v446 zs_v447 ⇒
        let __v448 = (split_i28‹??58› zs_v447) in
        match __v448 as __v449 in ??65 with
        | ⟨xs_v450, ys_v451⟩ ⇒
          ⟨(cons_c5‹??61, ??60› x_v443 xs_v450), (cons_c5‹??64,
                                                       ??63›
                                                         y_v446 ys_v451)⟩
        end
      end
    end

program merge_i29 ‹t_s452› :
  (list_d3‹??81, t_s452› nat) →
    (list_d3‹??82, t_s452› nat) ⊸ (list_d3‹??83, t_s452› nat)
=
  fn (xs_v455 : (list_d3‹??81, t_s452› nat)) ⇒
    ln (ys_v456 : ??84) ⇒
      match xs_v455 as __v457 in ??85 with
      | nil_c4  ⇒ ys_v456
      | cons_c5 x_v458 xs0_v459 ⇒
        match ys_v456 as __v460 in ??86 with
        | nil_c4  ⇒ (cons_c5‹??104, ??103› x_v458 xs0_v459)
        | cons_c5 y_v461 ys0_v462 ⇒
          match (lten_i4 x_v458 y_v461) as __v463 in ??87 with
          | true ⇒
            (cons_c5‹??101, ??100›
              x_v458
              (merge_i29‹??98›
                xs0_v459 (cons_c5‹??97, ??96› y_v461 ys0_v462)))
          | false ⇒
            (cons_c5‹??94, ??93›
              y_v461
              (merge_i29‹??91›
                (cons_c5‹??90, ??89› x_v458 xs0_v459) ys0_v462))
          end
        end
      end

program msort_i30 ‹t_s464› :
  (list_d3‹??105, t_s464› nat) → (list_d3‹??106, t_s464› nat)
=
  fn (zs_v466 : (list_d3‹??105, t_s464› nat)) ⇒
    match zs_v466 as __v467 in ??107 with
    | nil_c4  ⇒ nil_c4‹??128, ??127›
    | cons_c5 x_v468 zs_v469 ⇒
      match zs_v469 as __v470 in ??108 with
      | nil_c4  ⇒
        (cons_c5‹??125, ??124› x_v468 nil_c4‹??122, ??121›)
      | cons_c5 y_v471 zs_v472 ⇒
        let __v473 =
          (split_i28‹??115›
            (cons_c5‹??114, ??113›
              x_v468 (cons_c5‹??111, ??110› y_v471 zs_v472)))
        in
        match __v473 as __v474 in ??119 with
        | ⟨xs_v475, ys_v476⟩ ⇒
          (merge_i29‹??118›
            (msort_i30‹??117› xs_v475) (msort_i30‹??116› ys_v476))
        end
      end
    end

inductive uniq_d4 ‹t_s477›
  (A_v478 : Type‹t_s477›) (a_v479 : A_v478) : Type‹t_s477›
=
| Uniq_c6 of
    ‹t_s480› (A_v481 : Type‹t_s480›) (a_v482 : A_v481)
    (m_v483 : A_v481) {pf_v484 : m_v483 ≡ a_v482}
    : (uniq_d4‹t_s480› A_v481 a_v482)

logical cmsort_ch_i31 ‹t_s485› : (list_d3‹??130, t_s485› nat) → L =
  fn (xs_v487 : (list_d3‹??130, t_s485› nat)) ⇒
    ch⟨⇑(__v488 :
           (uniq_d4‹??133› ??132 (msort_i30‹??131› xs_v487))) ⇒ end⟩

program cmsort_worker_i32 ‹t_s489› :
  nat →
    ∀ (zs_v491 : (list_d3‹??134, t_s489› nat)) →
      (cmsort_ch_i31‹t_s489› zs_v491) ⊸ IO unit
=
  fn (n_v493 : nat) (zs_v494 : (list_d3‹??134, t_s489› nat)) ⇒
    ln (c_v495 : ??135) ⇒
      match n_v493 as __v496 in ??136 with
      | O ⇒
        let c_v497 ⇐
          (send c_v495
            (Uniq_c6‹??207› (msort_i30‹??204› zs_v494) refl ??203))
        in close c_v497
      | S n0_v498 ⇒
        (match zs_v494 as _zs__v499 in
           (cmsort_ch_i31‹??137› _zs__v499) ⊸ IO unit with
         | nil_c4  ⇒
           ln (c_v501 : ??195) ⇒
             let c_v502 ⇐
               (send c_v501
                 (Uniq_c6‹??202› nil_c4‹??199, ??198› refl ??196))
             in close c_v502
         | cons_c5 z0_v503 zs0_v504 ⇒
           ln (c_v505 : ??138) ⇒
             (match zs0_v504 as _zs0__v506 in
                (cmsort_ch_i31‹??142›
                  (cons_c5‹??141, ??140› z0_v503 _zs0__v506)) ⊸ IO unit with
              | nil_c4  ⇒
                ln (c_v508 : ??184) ⇒
                  let c_v509 ⇐
                    (send c_v508
                      (Uniq_c6‹??194›
                        (cons_c5‹??191, ??190›
                          z0_v503 nil_c4‹??188, ??187›)
                        refl ??185))
                  in close c_v509
              | cons_c5 z1_v510 zs1_v511 ⇒
                ln (c_v512 : ??143) ⇒
                  (match (split_i28‹??150›
                           (cons_c5‹??149, ??148›
                             z0_v503
                             (cons_c5‹??146, ??145› z1_v510 zs1_v511))) as _p__v513 in
                     {_p__v513 ≡
                        (split_i28‹??157›
                          (cons_c5‹??156, ??155›
                            z0_v503
                            (cons_c5‹??153, ??152› z1_v510 zs1_v511)))} ⊸
                       IO unit with
                   | ⟨xs0_v515, ys0_v516⟩ ⇒
                     ln {e_v517 : ??159} ⇒
                       let r1_v518 ⇐
                         fork (r1_v519 : (cmsort_ch_i31‹??160› xs0_v515))
                         in
                           (cmsort_worker_i32‹??161›
                             n0_v498 xs0_v515 r1_v519)
                       in
                       let r2_v520 ⇐
                         fork (r2_v521 : (cmsort_ch_i31‹??162› ys0_v516))
                         in
                           (cmsort_worker_i32‹??163›
                             n0_v498 ys0_v516 r2_v521)
                       in
                       let __v522 ⇐ recv r1_v518 in
                       match __v522 as __v523 in ??182 with
                       | ⟨msg1_v524, r1_v525⟩ ⇒
                         let __v526 ⇐ recv r2_v520 in
                         match __v526 as __v527 in ??181 with
                         | ⟨msg2_v528, r2_v529⟩ ⇒
                           match msg1_v524 as __v530 in ??164 with
                           | Uniq_c6 xs1_v531 pf1_v532 ⇒
                             match msg2_v528 as __v533 in ??165 with
                             | Uniq_c6 xs2_v534 pf2_v535 ⇒
                               let zs_v536 =
                                 (merge_i29‹??166› xs1_v531 xs2_v534)
                               in
                               let c_v537 ⇐
                                 (send c_v512
                                   (Uniq_c6‹??180›
                                     zs_v536
                                     rew [p_v538, __v539 ⇒
                                       zs_v536 ≡
                                         let __v540 = p_v538 in
                                         match __v540 as __v541 in ??176 with
                                         | ⟨xs_v542, ys_v543⟩ ⇒
                                           (merge_i29‹??175›
                                             (msort_i30‹??174› xs_v542)
                                             (msort_i30‹??173› ys_v543))
                                         end]
                                       e_v517 in
                                     rew [l_v544, __v545 ⇒
                                       zs_v536 ≡
                                         (merge_i29‹??171›
                                           l_v544
                                           (msort_i30‹??170› ys0_v516))]
                                       pf1_v532 in
                                     rew [l_v546, __v547 ⇒
                                       zs_v536 ≡
                                         (merge_i29‹??168›
                                           xs1_v531 l_v546)]
                                       pf2_v535 in
                                     refl ??167))
                               in
                               let __v548 ⇐ close r1_v525 in
                               let __v549 ⇐ close r2_v529 in close c_v537
                             end
                           end
                         end
                       end
                   end refl ??183)
              end c_v505)
         end c_v495)
      end

program cmsort_i33 ‹t_s550› :
  ∀ (zs_v551 : (list_d3‹??208, t_s550› nat)) →
    IO (uniq_d4‹t_s550› ??210 (msort_i30‹??209› zs_v551))
=
  fn (zs_v552 : (list_d3‹??208, t_s550› nat)) ⇒
    let c_v553 ⇐
      fork (c_v554 : (cmsort_ch_i31‹??211› zs_v552)) in
        (cmsort_worker_i32‹??212› 4 zs_v552 c_v554)
    in
    let __v555 ⇐ recv c_v553 in
    match __v555 as __v556 in ??213 with
    | ⟨msg_v557, c_v558⟩ ⇒
      let __v559 ⇐ close c_v558 in return msg_v557
    end

program mkList_i34 ‹t_s560› : nat → (list_d3‹??214, t_s560› nat) =
  fn (n_v562 : nat) ⇒
    match n_v562 as __v563 in ??215 with
    | O ⇒ nil_c4‹??222, ??221›
    | S n0_v564 ⇒
      (cons_c5‹??219, ??218› n_v562 (mkList_i34‹??216› n0_v564))
    end

program free_i35 :
  ∀ {A_v565 : U} → (list_d3‹??223, L› A_v565) → unit
=
  fn {A_v567 : U} (ls_v568 : (list_d3‹??223, L› A_v567)) ⇒
    match ls_v568 as __v569 in ??224 with
    | nil_c4  ⇒ () | cons_c5 __v570 ls_v571 ⇒ (free_i35 ??225 ls_v571)
    end

program main_i36 : IO unit =
  let test_v572 = (mkList_i34‹L› 2000000) in
  let msg_v573 ⇐ (cmsort_i33‹??226› test_v572) in
  match msg_v573 as __v574 in ??227 with
  | Uniq_c6 sorted_v575 __v576 ⇒
    let __v577 = (free_i35 ??228 sorted_v575) in return ()
  end

trans01 success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v77592 : bool) (b2_v77593 : bool) ⇒
    match b1_v77592 as __v77594 in bool with
    | true ⇒ b2_v77593 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v77597 : bool) (b2_v77598 : bool) ⇒
    match b1_v77597 as __v77599 in bool with
    | true ⇒ true | false ⇒ b2_v77598
    end

program notb_i3 : bool → bool =
  fn (b_v77601 : bool) ⇒
    match b_v77601 as __v77602 in bool with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v77605 : nat) (y_v77606 : nat) ⇒
    match x_v77605 as __v77607 in bool with
    | O ⇒ true
    | S x_v77608 ⇒
      match y_v77606 as __v77609 in bool with
      | O ⇒ false | S y_v77610 ⇒ (lten_i4 x_v77608 y_v77610)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v77613 : nat) (y_v77614 : nat) ⇒
    match x_v77613 as __v77615 in bool with
    | O ⇒
      match y_v77614 as __v77616 in bool with
      | O ⇒ true | S __v77617 ⇒ false
      end
    | S x_v77618 ⇒
      match y_v77614 as __v77619 in bool with
      | O ⇒ true | S y_v77620 ⇒ (gten_i5 x_v77618 y_v77620)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v77623 : nat) (y_v77624 : nat) ⇒
    match x_v77623 as __v77625 in bool with
    | O ⇒
      match y_v77624 as __v77626 in bool with
      | O ⇒ false | S y_v77627 ⇒ true
      end
    | S x_v77628 ⇒
      match y_v77624 as __v77629 in bool with
      | O ⇒ false | S y_v77630 ⇒ (ltn_i6 x_v77628 y_v77630)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v77633 : nat) (y_v77634 : nat) ⇒
    match x_v77633 as __v77635 in bool with
    | O ⇒ false
    | S x_v77636 ⇒
      match y_v77634 as __v77637 in bool with
      | O ⇒ true | S y_v77638 ⇒ (gtn_i7 x_v77636 y_v77638)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v77641 : nat) (y_v77642 : nat) ⇒
    match x_v77641 as __v77643 in bool with
    | O ⇒
      match y_v77642 as __v77644 in bool with
      | O ⇒ true | S __v77645 ⇒ false
      end
    | S x_v77646 ⇒
      match y_v77642 as __v77647 in bool with
      | O ⇒ false | S y_v77648 ⇒ (eqn_i8 x_v77646 y_v77648)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v77650 : nat) ⇒
    match x_v77650 as __v77651 in nat with
    | O ⇒ 0 | S x_v77652 ⇒ x_v77652
    end

program addn_i10 : nat → nat → nat =
  fn (x_v77655 : nat) (y_v77656 : nat) ⇒
    match x_v77655 as __v77657 in nat with
    | O ⇒ y_v77656 | S x_v77658 ⇒ (addn_i10 x_v77658 y_v77656).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v77661 : nat) (y_v77662 : nat) ⇒
    match y_v77662 as __v77663 in nat with
    | O ⇒ x_v77661 | S y_v77664 ⇒ (subn_i11 (pred_i9 x_v77661) y_v77664)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v77667 : nat) (y_v77668 : nat) ⇒
    match x_v77667 as __v77669 in nat with
    | O ⇒ 0
    | S x_v77670 ⇒ (addn_i10 y_v77668 (muln_i12 x_v77670 y_v77668))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v77673 : nat) (y_v77674 : nat) ⇒
    match (ltn_i6 x_v77673 y_v77674) as __v77675 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i13 (subn_i11 x_v77673 y_v77674) y_v77674).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v77678 : nat) (y_v77679 : nat) ⇒
    (subn_i11 x_v77678 (muln_i12 (divn_i13 x_v77678 y_v77679) y_v77679))

inductive char_d1 : U =
| Char_c1 of (n_v77680 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v77681 : char_d1) (s_v77682 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v77685 : string_d2) (s2_v77686 : string_d2) ⇒
    match s1_v77685 as __v77687 in string_d2 with
    | EmptyString_c2  ⇒ s2_v77686
    | String_c3 c_v77688 s1_v77689 ⇒
      (String_c3‹› c_v77688 (cats_i15 s1_v77689 s2_v77686))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v77691 : string_d2) ⇒
    match s_v77691 as __v77692 in nat with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v77693 s_v77694 ⇒ (strlen_i16 s_v77694).+1
    end

inductive list_d3 ‹s_s77695, t_s77696›
  (A_v77697 : Type‹s_s77695›) : Type‹t_s77696›
=
| nil_c4 of
    ‹s_s77698, t_s77699› (A_v77700 : Type‹s_s77698›)
    : (list_d3‹s_s77698, t_s77699› A_v77700)
| cons_c5 of
    ‹s_s77701, t_s77702› (A_v77703 : Type‹s_s77701›)
    (hd_v77704 : A_v77703)
    (tl_v77705 : (list_d3‹s_s77701, t_s77702› A_v77703))
    : (list_d3‹s_s77701, t_s77702› A_v77703)

program len_i17 ‹s_s77706, t_s77707› :
  ∀ {A_v77708 : Type‹s_s77706›} →
    (list_d3‹s_s77706, t_s77707› A_v77708) →
      nat ⊗ (list_d3‹s_s77706, t_s77707› A_v77708)
=
  fn {A_v77711 : Type‹s_s77706›}
     (xs_v77712 : (list_d3‹s_s77706, t_s77707› A_v77711)) ⇒
    match xs_v77712 as __v77713 in
      nat ⊗ (list_d3‹s_s77706, t_s77707› A_v77711) with
    | nil_c4  ⇒ ⟨0, nil_c4‹s_s77706, t_s77707›⟩
    | cons_c5 x_v77715 xs_v77716 ⇒
      match (len_i17‹s_s77706, t_s77707› A_v77711 xs_v77716) as __v77717 in
        nat ⊗ (list_d3‹s_s77706, t_s77707› A_v77711) with
      | ⟨n_v77719, xs_v77720⟩ ⇒
        ⟨n_v77719.+1, (cons_c5‹s_s77706, t_s77707› x_v77715 xs_v77720)⟩
      end
    end

program append_i18 ‹s_s77721, t_s77722› :
  ∀ {A_v77723 : Type‹s_s77721›} →
    (list_d3‹s_s77721, t_s77722› A_v77723) →
      (list_d3‹s_s77721, t_s77722› A_v77723) ⊸
        (list_d3‹s_s77721, t_s77722› A_v77723)
=
  fn {A_v77726 : Type‹s_s77721›}
     (xs_v77727 : (list_d3‹s_s77721, t_s77722› A_v77726)) ⇒
    ln (ys_v77728 : (list_d3‹s_s77721, t_s77722› A_v77726)) ⇒
      match xs_v77727 as __v77729 in
        (list_d3‹s_s77721, t_s77722› A_v77726) with
      | nil_c4  ⇒ ys_v77728
      | cons_c5 x_v77730 xs_v77731 ⇒
        (cons_c5‹s_s77721, t_s77722›
          x_v77730
          (append_i18‹s_s77721, t_s77722› A_v77726 xs_v77731 ys_v77728))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v77733 : unit) ⇒
    ⇑(b_v77734 : bool) ⇒
      match b_v77734 as __v77735 in proto with
      | true ⇒ ⇓(__v77736 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v77738 : unit) ⇒
    ⇑(b_v77739 : bool) ⇒
      match b_v77739 as __v77740 in proto with
      | true ⇒ ⇑(__v77741 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v77743 : unit) ⇒
    ⇑(b_v77744 : bool) ⇒
      match b_v77744 as __v77745 in proto with
      | true ⇒ ⇑(__v77746 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v77748 : unit) ⇒
    let ch_v77749 ⇐ open stdin in
    let ch_v77750 ⇐ (send ch_v77749 true) in
    let __v77751 ⇐ recv ch_v77750 in
    match __v77751 as __v77752 in IO string_d2 with
    | ⟨s_v77753, ch_v77754⟩ ⇒
      let ch_v77755 ⇐ (send ch_v77754 false) in
      let __v77756 ⇐ close ch_v77755 in return s_v77753
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v77758 : string_d2) ⇒
    let ch_v77759 ⇐ open stdout in
    let ch_v77760 ⇐ (send ch_v77759 true) in
    let ch_v77761 ⇐ (send ch_v77760 s_v77758) in
    let ch_v77762 ⇐ (send ch_v77761 false) in close ch_v77762

program prerr_i27 : string_d2 → IO unit =
  fn (s_v77764 : string_d2) ⇒
    let ch_v77765 ⇐ open stderr in
    let ch_v77766 ⇐ (send ch_v77765 true) in
    let ch_v77767 ⇐ (send ch_v77766 s_v77764) in
    let ch_v77768 ⇐ (send ch_v77767 false) in close ch_v77768

program split_i28 ‹t_s77769› :
  (list_d3‹U, t_s77769› nat) →
    (list_d3‹U, t_s77769› nat) ⊗ (list_d3‹U, t_s77769› nat)
=
  fn (zs_v77772 : (list_d3‹U, t_s77769› nat)) ⇒
    match zs_v77772 as __v77773 in
      (list_d3‹U, t_s77769› nat) ⊗ (list_d3‹U, t_s77769› nat) with
    | nil_c4  ⇒ ⟨nil_c4‹U, t_s77769›, nil_c4‹U, t_s77769›⟩
    | cons_c5 x_v77775 zs_v77776 ⇒
      match zs_v77776 as __v77777 in
        (list_d3‹U, t_s77769› nat) ⊗ (list_d3‹U, t_s77769› nat) with
      | nil_c4  ⇒
        ⟨(cons_c5‹U, t_s77769› x_v77775 nil_c4‹U, t_s77769›), nil_c4‹U,
        t_s77769›⟩
      | cons_c5 y_v77779 zs_v77780 ⇒
        let __v77781 = (split_i28‹t_s77769› zs_v77780) in
        match __v77781 as __v77782 in
          (list_d3‹U, t_s77769› nat) ⊗ (list_d3‹U, t_s77769› nat) with
        | ⟨xs_v77784, ys_v77785⟩ ⇒
          ⟨(cons_c5‹U, t_s77769› x_v77775 xs_v77784), (cons_c5‹U,
                                                            t_s77769›
                                                              y_v77779
                                                              ys_v77785)⟩
        end
      end
    end

program merge_i29 ‹t_s77786› :
  (list_d3‹U, t_s77786› nat) →
    (list_d3‹U, t_s77786› nat) ⊸ (list_d3‹U, t_s77786› nat)
=
  fn (xs_v77789 : (list_d3‹U, t_s77786› nat)) ⇒
    ln (ys_v77790 : (list_d3‹U, t_s77786› nat)) ⇒
      match xs_v77789 as __v77791 in (list_d3‹U, t_s77786› nat) with
      | nil_c4  ⇒ ys_v77790
      | cons_c5 x_v77792 xs0_v77793 ⇒
        match ys_v77790 as __v77794 in (list_d3‹U, t_s77786› nat) with
        | nil_c4  ⇒ (cons_c5‹U, t_s77786› x_v77792 xs0_v77793)
        | cons_c5 y_v77795 ys0_v77796 ⇒
          match (lten_i4 x_v77792 y_v77795) as __v77797 in
            (list_d3‹U, t_s77786› nat) with
          | true ⇒
            (cons_c5‹U, t_s77786›
              x_v77792
              (merge_i29‹t_s77786›
                xs0_v77793 (cons_c5‹U, t_s77786› y_v77795 ys0_v77796)))
          | false ⇒
            (cons_c5‹U, t_s77786›
              y_v77795
              (merge_i29‹t_s77786›
                (cons_c5‹U, t_s77786› x_v77792 xs0_v77793) ys0_v77796))
          end
        end
      end

program msort_i30 ‹t_s77798› :
  (list_d3‹U, t_s77798› nat) → (list_d3‹U, t_s77798› nat)
=
  fn (zs_v77800 : (list_d3‹U, t_s77798› nat)) ⇒
    match zs_v77800 as __v77801 in (list_d3‹U, t_s77798› nat) with
    | nil_c4  ⇒ nil_c4‹U, t_s77798›
    | cons_c5 x_v77802 zs_v77803 ⇒
      match zs_v77803 as __v77804 in (list_d3‹U, t_s77798› nat) with
      | nil_c4  ⇒
        (cons_c5‹U, t_s77798› x_v77802 nil_c4‹U, t_s77798›)
      | cons_c5 y_v77805 zs_v77806 ⇒
        let __v77807 =
          (split_i28‹t_s77798›
            (cons_c5‹U, t_s77798›
              x_v77802 (cons_c5‹U, t_s77798› y_v77805 zs_v77806)))
        in
        match __v77807 as __v77808 in (list_d3‹U, t_s77798› nat) with
        | ⟨xs_v77809, ys_v77810⟩ ⇒
          (merge_i29‹t_s77798›
            (msort_i30‹t_s77798› xs_v77809)
            (msort_i30‹t_s77798› ys_v77810))
        end
      end
    end

inductive uniq_d4 ‹t_s77811›
  (A_v77812 : Type‹t_s77811›) (a_v77813 : A_v77812) : Type‹t_s77811›
=
| Uniq_c6 of
    ‹t_s77814› (A_v77815 : Type‹t_s77814›) (a_v77816 : A_v77815)
    (m_v77817 : A_v77815) {pf_v77818 : m_v77817 ≡ a_v77816}
    : (uniq_d4‹t_s77814› A_v77815 a_v77816)

logical cmsort_ch_i31 ‹t_s77819› : (list_d3‹U, t_s77819› nat) → L =
  fn (xs_v77821 : (list_d3‹U, t_s77819› nat)) ⇒
    ch⟨⇑(__v77822 :
           (uniq_d4‹t_s77819›
             (list_d3‹U, t_s77819› nat)
             (msort_i30‹t_s77819› xs_v77821))) ⇒
           end⟩

program cmsort_worker_i32 ‹t_s77823› :
  nat →
    ∀ (zs_v77825 : (list_d3‹U, t_s77823› nat)) →
      (cmsort_ch_i31‹t_s77823› zs_v77825) ⊸ IO unit
=
  fn (n_v77827 : nat) (zs_v77828 : (list_d3‹U, t_s77823› nat)) ⇒
    ln (c_v77829 : (cmsort_ch_i31‹t_s77823› zs_v77828)) ⇒
      match n_v77827 as __v77830 in IO unit with
      | O ⇒
        let c_v77831 ⇐
          (send c_v77829
            (Uniq_c6‹t_s77823›
              (msort_i30‹t_s77823› zs_v77828)
              refl (msort_i30‹t_s77823› zs_v77828)))
        in close c_v77831
      | S n0_v77832 ⇒
        (match zs_v77828 as _zs__v77833 in
           (cmsort_ch_i31‹t_s77823› _zs__v77833) ⊸ IO unit with
         | nil_c4  ⇒
           ln (c_v77835 : (cmsort_ch_i31‹t_s77823›
                            nil_c4‹U, t_s77823›)) ⇒
             let c_v77836 ⇐
               (send c_v77835
                 (Uniq_c6‹t_s77823›
                   nil_c4‹U, t_s77823› refl nil_c4‹U, t_s77823›))
             in close c_v77836
         | cons_c5 z0_v77837 zs0_v77838 ⇒
           ln (c_v77839 : (cmsort_ch_i31‹t_s77823›
                            (cons_c5‹U, t_s77823› z0_v77837 zs0_v77838))) ⇒
             (match zs0_v77838 as _zs0__v77840 in
                (cmsort_ch_i31‹t_s77823›
                  (cons_c5‹U, t_s77823› z0_v77837 _zs0__v77840)) ⊸
                  IO unit with
              | nil_c4  ⇒
                ln (c_v77842 : (cmsort_ch_i31‹t_s77823›
                                 (cons_c5‹U, t_s77823›
                                   z0_v77837 nil_c4‹U, t_s77823›))) ⇒
                  let c_v77843 ⇐
                    (send c_v77842
                      (Uniq_c6‹t_s77823›
                        (cons_c5‹U, t_s77823›
                          z0_v77837 nil_c4‹U, t_s77823›)
                        refl (cons_c5‹U, t_s77823›
                               z0_v77837 nil_c4‹U, t_s77823›)))
                  in close c_v77843
              | cons_c5 z1_v77844 zs1_v77845 ⇒
                ln (c_v77846 : (cmsort_ch_i31‹t_s77823›
                                 (cons_c5‹U, t_s77823›
                                   z0_v77837
                                   (cons_c5‹U, t_s77823›
                                     z1_v77844 zs1_v77845)))) ⇒
                  (match (split_i28‹t_s77823›
                           (cons_c5‹U, t_s77823›
                             z0_v77837
                             (cons_c5‹U, t_s77823› z1_v77844 zs1_v77845))) as _p__v77847 in
                     {_p__v77847 ≡
                        (split_i28‹t_s77823›
                          (cons_c5‹U, t_s77823›
                            z0_v77837
                            (cons_c5‹U, t_s77823› z1_v77844 zs1_v77845)))} ⊸
                       IO unit with
                   | ⟨xs0_v77849, ys0_v77850⟩ ⇒
                     ln {e_v77851 : (⟨xs0_v77849, ys0_v77850⟩
                                      : (list_d3‹U, t_s77823› nat) ⊗
                                          (list_d3‹U, t_s77823› nat)) ≡
                                      (split_i28‹t_s77823›
                                        (cons_c5‹U, t_s77823›
                                          z0_v77837
                                          (cons_c5‹U, t_s77823›
                                            z1_v77844 zs1_v77845)))} ⇒
                       let r1_v77853 ⇐
                         fork (r1_v77854 :
                           (cmsort_ch_i31‹t_s77823› xs0_v77849))
                         in
                           (cmsort_worker_i32‹t_s77823›
                             n0_v77832 xs0_v77849 r1_v77854)
                       in
                       let r2_v77855 ⇐
                         fork (r2_v77856 :
                           (cmsort_ch_i31‹t_s77823› ys0_v77850))
                         in
                           (cmsort_worker_i32‹t_s77823›
                             n0_v77832 ys0_v77850 r2_v77856)
                       in
                       let __v77857 ⇐ recv r1_v77853 in
                       match __v77857 as __v77858 in IO unit with
                       | ⟨msg1_v77859, r1_v77860⟩ ⇒
                         let __v77861 ⇐ recv r2_v77855 in
                         match __v77861 as __v77862 in IO unit with
                         | ⟨msg2_v77863, r2_v77864⟩ ⇒
                           match msg1_v77859 as __v77865 in IO unit with
                           | Uniq_c6 xs1_v77866 pf1_v77867 ⇒
                             match msg2_v77863 as __v77868 in IO unit with
                             | Uniq_c6 xs2_v77869 pf2_v77870 ⇒
                               let zs_v77871 =
                                 (merge_i29‹t_s77823›
                                   xs1_v77866 xs2_v77869)
                               in
                               let c_v77872 ⇐
                                 (send c_v77846
                                   (Uniq_c6‹t_s77823›
                                     zs_v77871
                                     rew [p_v77873, __v77874 ⇒
                                       zs_v77871 ≡
                                         let __v77875 = p_v77873 in
                                         match __v77875 as __v77876 in
                                           (list_d3‹U, t_s77823› nat) with
                                         | ⟨xs_v77877, ys_v77878⟩ ⇒
                                           (merge_i29‹t_s77823›
                                             (msort_i30‹t_s77823›
                                               xs_v77877)
                                             (msort_i30‹t_s77823›
                                               ys_v77878))
                                         end]
                                       e_v77851 in
                                     rew [l_v77879, __v77880 ⇒
                                       zs_v77871 ≡
                                         (merge_i29‹t_s77823›
                                           l_v77879
                                           (msort_i30‹t_s77823›
                                             ys0_v77850))]
                                       pf1_v77867 in
                                     rew [l_v77881, __v77882 ⇒
                                       zs_v77871 ≡
                                         (merge_i29‹t_s77823›
                                           xs1_v77866 l_v77881)]
                                       pf2_v77870 in
                                     refl (merge_i29‹t_s77823›
                                            xs1_v77866 xs2_v77869)))
                               in
                               let __v77883 ⇐ close r1_v77860 in
                               let __v77884 ⇐ close r2_v77864 in
                               close c_v77872
                             end
                           end
                         end
                       end
                   end
                    refl (split_i28‹t_s77823›
                           (cons_c5‹U, t_s77823›
                             z0_v77837
                             (cons_c5‹U, t_s77823› z1_v77844 zs1_v77845))))
              end c_v77839)
         end c_v77829)
      end

program cmsort_i33 ‹t_s77885› :
  ∀ (zs_v77886 : (list_d3‹U, t_s77885› nat)) →
    IO (uniq_d4‹t_s77885›
         (list_d3‹U, t_s77885› nat) (msort_i30‹t_s77885› zs_v77886))
=
  fn (zs_v77887 : (list_d3‹U, t_s77885› nat)) ⇒
    let c_v77888 ⇐
      fork (c_v77889 : (cmsort_ch_i31‹t_s77885› zs_v77887)) in
        (cmsort_worker_i32‹t_s77885› 4 zs_v77887 c_v77889)
    in
    let __v77890 ⇐ recv c_v77888 in
    match __v77890 as __v77891 in
      IO (uniq_d4‹t_s77885›
           (list_d3‹U, t_s77885› nat) (msort_i30‹t_s77885› zs_v77887)) with
    | ⟨msg_v77892, c_v77893⟩ ⇒
      let __v77894 ⇐ close c_v77893 in return msg_v77892
    end

program mkList_i34 ‹t_s77895› : nat → (list_d3‹U, t_s77895› nat) =
  fn (n_v77897 : nat) ⇒
    match n_v77897 as __v77898 in (list_d3‹U, t_s77895› nat) with
    | O ⇒ nil_c4‹U, t_s77895›
    | S n0_v77899 ⇒
      (cons_c5‹U, t_s77895›
        n_v77897 (mkList_i34‹t_s77895› n0_v77899))
    end

program free_i35 :
  ∀ {A_v77900 : U} → (list_d3‹U, L› A_v77900) → unit
=
  fn {A_v77902 : U} (ls_v77903 : (list_d3‹U, L› A_v77902)) ⇒
    match ls_v77903 as __v77904 in unit with
    | nil_c4  ⇒ ()
    | cons_c5 __v77905 ls_v77906 ⇒ (free_i35 A_v77902 ls_v77906)
    end

program main_i36 : IO unit =
  let test_v77907 = (mkList_i34‹L› 2000000) in
  let msg_v77908 ⇐ (cmsort_i33‹L› test_v77907) in
  match msg_v77908 as __v77909 in IO unit with
  | Uniq_c6 sorted_v77910 __v77911 ⇒
    let __v77912 = (free_i35 nat sorted_v77910) in return ()
  end

trans1e success--------------------------

def andb_i1 =
  fn b1_v78699 b2_v78700 ⇒
    match b1_v78699 with
    | true ⇒ b2_v78700 | false ⇒ false
    end

def orb_i2 =
  fn b1_v78701 b2_v78702 ⇒
    match b1_v78701 with
    | true ⇒ true | false ⇒ b2_v78702
    end

def notb_i3 =
  fn b_v78703 ⇒ match b_v78703 with
                  | true ⇒ false | false ⇒ true
                  end

def lten_i4 =
  fn x_v78704 y_v78705 ⇒
    match x_v78704 with
    | O ⇒ true
    | S x_v78706 ⇒
      match y_v78705 with
      | O ⇒ false | S y_v78707 ⇒ ((lten_i4 x_v78706) y_v78707)
      end
    end

def gten_i5 =
  fn x_v78708 y_v78709 ⇒
    match x_v78708 with
    | O ⇒ match y_v78709 with
            | O ⇒ true | S __v78710 ⇒ false
            end
    | S x_v78711 ⇒
      match y_v78709 with
      | O ⇒ true | S y_v78712 ⇒ ((gten_i5 x_v78711) y_v78712)
      end
    end

def ltn_i6 =
  fn x_v78713 y_v78714 ⇒
    match x_v78713 with
    | O ⇒ match y_v78714 with
            | O ⇒ false | S y_v78715 ⇒ true
            end
    | S x_v78716 ⇒
      match y_v78714 with
      | O ⇒ false | S y_v78717 ⇒ ((ltn_i6 x_v78716) y_v78717)
      end
    end

def gtn_i7 =
  fn x_v78718 y_v78719 ⇒
    match x_v78718 with
    | O ⇒ false
    | S x_v78720 ⇒
      match y_v78719 with
      | O ⇒ true | S y_v78721 ⇒ ((gtn_i7 x_v78720) y_v78721)
      end
    end

def eqn_i8 =
  fn x_v78722 y_v78723 ⇒
    match x_v78722 with
    | O ⇒ match y_v78723 with
            | O ⇒ true | S __v78724 ⇒ false
            end
    | S x_v78725 ⇒
      match y_v78723 with
      | O ⇒ false | S y_v78726 ⇒ ((eqn_i8 x_v78725) y_v78726)
      end
    end

def pred_i9 =
  fn x_v78727 ⇒ match x_v78727 with
                  | O ⇒ 0 | S x_v78728 ⇒ x_v78728
                  end

def addn_i10 =
  fn x_v78729 y_v78730 ⇒
    match x_v78729 with
    | O ⇒ y_v78730 | S x_v78731 ⇒ ((addn_i10 x_v78731) y_v78730).+1
    end

def subn_i11 =
  fn x_v78732 y_v78733 ⇒
    match y_v78733 with
    | O ⇒ x_v78732
    | S y_v78734 ⇒ ((subn_i11 (pred_i9 x_v78732)) y_v78734)
    end

def muln_i12 =
  fn x_v78735 y_v78736 ⇒
    match x_v78735 with
    | O ⇒ 0
    | S x_v78737 ⇒ ((addn_i10 y_v78736) ((muln_i12 x_v78737) y_v78736))
    end

def divn_i13 =
  fn x_v78738 y_v78739 ⇒
    match ((ltn_i6 x_v78738) y_v78739) with
    | true ⇒ 0
    | false ⇒ ((divn_i13 ((subn_i11 x_v78738) y_v78739)) y_v78739).+1
    end

def modn_i14 =
  fn x_v78740 y_v78741 ⇒
    ((subn_i11 x_v78740)
      ((muln_i12 ((divn_i13 x_v78740) y_v78741)) y_v78741))

data char_d1 =
| Char_c1 of size(1)

data string_d2 =
| EmptyString_c2 of size(0) | String_c3 of size(2)

def cats_i15 =
  fn s1_v78742 s2_v78743 ⇒
    match s1_v78742 with
    | EmptyString_c2  ⇒ s2_v78743
    | String_c3 c_v78744 s1_v78745 ⇒
      (String_c3 c_v78744 ((cats_i15 s1_v78745) s2_v78743))
    end

def strlen_i16 =
  fn s_v78746 ⇒
    match s_v78746 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v78747 s_v78748 ⇒ (strlen_i16 s_v78748).+1
    end

data listUU_d8 =
| nilUU_c13 of size(0) | consUU_c14 of size(2)

data listUL_d7 =
| nilUL_c11 of size(0) | consUL_c12 of size(2)

data listLU_d6 =
| nilLU_c9 of size(0)

data listLL_d5 =
| nilLL_c7 of size(0) | consLL_c8 of size(2)

def lenUU_i40 =
  fn A_v78749 xs_v78750 ⇒
    match xs_v78750 with
    | nilUU_c13  ⇒ (0, nilUU_c13)
    | consUU_c14 x_v78751 xs_v78752 ⇒
      match ((lenUU_i40 NULL) xs_v78752) with
      | (n_v78753, xs_v78754) ⇒
        (n_v78753.+1, (consUU_c14 x_v78751 xs_v78754))
      end
    end

def lenUL_i39 =
  fn A_v78755 xs_v78756 ⇒
    match xs_v78756 with
    | nilUL_c11  ⇒ (0, nilUL_c11)
    | consUL_c12 x_v78757 xs_v78758 ⇒
      match ((lenUL_i39 NULL) xs_v78758) with
      | (n_v78759, xs_v78760) ⇒
        (n_v78759.+1, (consUL_c12 x_v78757 xs_v78760))
      end
    end

def lenLL_i37 =
  fn A_v78761 xs_v78762 ⇒
    match xs_v78762 with
    | nilLL_c7  ⇒ (0, nilLL_c7)
    | consLL_c8 x_v78763 xs_v78764 ⇒
      match ((lenLL_i37 NULL) xs_v78764) with
      | (n_v78765, xs_v78766) ⇒
        (n_v78765.+1, (consLL_c8 x_v78763 xs_v78766))
      end
    end

def appendUU_i44 =
  fn A_v78767 xs_v78768 ⇒
    ln ys_v78769 ⇒
      match xs_v78768 with
      | nilUU_c13  ⇒ ys_v78769
      | consUU_c14 x_v78770 xs_v78771 ⇒
        (consUU_c14 x_v78770 (((appendUU_i44 NULL) xs_v78771) ys_v78769))
      end

def appendUL_i43 =
  fn A_v78772 xs_v78773 ⇒
    ln ys_v78774 ⇒
      match xs_v78773 with
      | nilUL_c11  ⇒ ys_v78774
      | consUL_c12 x_v78775 xs_v78776 ⇒
        (consUL_c12 x_v78775 (((appendUL_i43 NULL) xs_v78776) ys_v78774))
      end

def appendLL_i41 =
  fn A_v78777 xs_v78778 ⇒
    ln ys_v78779 ⇒
      match xs_v78778 with
      | nilLL_c7  ⇒ ys_v78779
      | consLL_c8 x_v78780 xs_v78781 ⇒
        (consLL_c8 x_v78780 (((appendLL_i41 NULL) xs_v78781) ys_v78779))
      end

def readline_i25 =
  fn __v78782 ⇒
    let ch_v78783 ⇐ open stdin in
    let ch_v78784 ⇐ (send ch_v78783 true) in
    let __v78785 ⇐ recv ch_v78784 in
    match __v78785 with
    | (s_v78786, ch_v78787) ⇒
      let ch_v78788 ⇐ (send ch_v78787 false) in
      let __v78789 ⇐ close⇑ ch_v78788 in return s_v78786
    end

def print_i26 =
  fn s_v78790 ⇒
    let ch_v78791 ⇐ open stdout in
    let ch_v78792 ⇐ (send ch_v78791 true) in
    let ch_v78793 ⇐ (send ch_v78792 s_v78790) in
    let ch_v78794 ⇐ (send ch_v78793 false) in close⇑ ch_v78794

def prerr_i27 =
  fn s_v78795 ⇒
    let ch_v78796 ⇐ open stderr in
    let ch_v78797 ⇐ (send ch_v78796 true) in
    let ch_v78798 ⇐ (send ch_v78797 s_v78795) in
    let ch_v78799 ⇐ (send ch_v78798 false) in close⇑ ch_v78799

def splitU_i46 =
  fn zs_v78800 ⇒
    match zs_v78800 with
    | nilUU_c13  ⇒ (nilUU_c13, nilUU_c13)
    | consUU_c14 x_v78801 zs_v78802 ⇒
      match zs_v78802 with
      | nilUU_c13  ⇒ ((consUU_c14 x_v78801 nilUU_c13), nilUU_c13)
      | consUU_c14 y_v78803 zs_v78804 ⇒
        let __v78805 = (splitU_i46 zs_v78804) in
        match __v78805 with
        | (xs_v78806, ys_v78807) ⇒
          ((consUU_c14 x_v78801 xs_v78806), (consUU_c14 y_v78803 ys_v78807))
        end
      end
    end

def splitL_i45 =
  fn zs_v78808 ⇒
    match zs_v78808 with
    | nilUL_c11  ⇒ (nilUL_c11, nilUL_c11)
    | consUL_c12 x_v78809 zs_v78810 ⇒
      match zs_v78810 with
      | nilUL_c11  ⇒ ((consUL_c12 x_v78809 nilUL_c11), nilUL_c11)
      | consUL_c12 y_v78811 zs_v78812 ⇒
        let __v78813 = (splitL_i45 zs_v78812) in
        match __v78813 with
        | (xs_v78814, ys_v78815) ⇒
          ((consUL_c12 x_v78809 xs_v78814), (consUL_c12 y_v78811 ys_v78815))
        end
      end
    end

def mergeU_i48 =
  fn xs_v78816 ⇒
    ln ys_v78817 ⇒
      match xs_v78816 with
      | nilUU_c13  ⇒ ys_v78817
      | consUU_c14 x_v78818 xs0_v78819 ⇒
        match ys_v78817 with
        | nilUU_c13  ⇒ (consUU_c14 x_v78818 xs0_v78819)
        | consUU_c14 y_v78820 ys0_v78821 ⇒
          match ((lten_i4 x_v78818) y_v78820) with
          | true ⇒
            (consUU_c14
              x_v78818
              ((mergeU_i48 xs0_v78819) (consUU_c14 y_v78820 ys0_v78821)))
          | false ⇒
            (consUU_c14
              y_v78820
              ((mergeU_i48 (consUU_c14 x_v78818 xs0_v78819)) ys0_v78821))
          end
        end
      end

def mergeL_i47 =
  fn xs_v78822 ⇒
    ln ys_v78823 ⇒
      match xs_v78822 with
      | nilUL_c11  ⇒ ys_v78823
      | consUL_c12 x_v78824 xs0_v78825 ⇒
        match ys_v78823 with
        | nilUL_c11  ⇒ (consUL_c12 x_v78824 xs0_v78825)
        | consUL_c12 y_v78826 ys0_v78827 ⇒
          match ((lten_i4 x_v78824) y_v78826) with
          | true ⇒
            (consUL_c12
              x_v78824
              ((mergeL_i47 xs0_v78825) (consUL_c12 y_v78826 ys0_v78827)))
          | false ⇒
            (consUL_c12
              y_v78826
              ((mergeL_i47 (consUL_c12 x_v78824 xs0_v78825)) ys0_v78827))
          end
        end
      end

def msortU_i50 =
  fn zs_v78828 ⇒
    match zs_v78828 with
    | nilUU_c13  ⇒ nilUU_c13
    | consUU_c14 x_v78829 zs_v78830 ⇒
      match zs_v78830 with
      | nilUU_c13  ⇒ (consUU_c14 x_v78829 nilUU_c13)
      | consUU_c14 y_v78831 zs_v78832 ⇒
        let __v78833 =
          (splitU_i46 (consUU_c14 x_v78829 (consUU_c14 y_v78831 zs_v78832)))
        in
        match __v78833 with
        | (xs_v78834, ys_v78835) ⇒
          ((mergeU_i48 (msortU_i50 xs_v78834)) (msortU_i50 ys_v78835))
        end
      end
    end

def msortL_i49 =
  fn zs_v78836 ⇒
    match zs_v78836 with
    | nilUL_c11  ⇒ nilUL_c11
    | consUL_c12 x_v78837 zs_v78838 ⇒
      match zs_v78838 with
      | nilUL_c11  ⇒ (consUL_c12 x_v78837 nilUL_c11)
      | consUL_c12 y_v78839 zs_v78840 ⇒
        let __v78841 =
          (splitL_i45 (consUL_c12 x_v78837 (consUL_c12 y_v78839 zs_v78840)))
        in
        match __v78841 with
        | (xs_v78842, ys_v78843) ⇒
          ((mergeL_i47 (msortL_i49 xs_v78842)) (msortL_i49 ys_v78843))
        end
      end
    end

data uniqU_d10 =
| UniqU_c16 of size(2)

data uniqL_d9 =
| UniqL_c15 of size(2)

def cmsort_workerU_i54 =
  fn n_v78844 zs_v78845 ⇒
    ln c_v78846 ⇒
      match n_v78844 with
      | O ⇒
        let c_v78847 ⇐
          (send c_v78846 (UniqU_c16 (msortU_i50 zs_v78845) NULL))
        in close⇑ c_v78847
      | S n0_v78848 ⇒
        (match zs_v78845 with
         | nilUU_c13  ⇒
           ln c_v78849 ⇒
             let c_v78850 ⇐ (send c_v78849 (UniqU_c16 nilUU_c13 NULL)) in
             close⇑ c_v78850
         | consUU_c14 z0_v78851 zs0_v78852 ⇒
           ln c_v78853 ⇒
             (match zs0_v78852 with
              | nilUU_c13  ⇒
                ln c_v78854 ⇒
                  let c_v78855 ⇐
                    (send c_v78854
                      (UniqU_c16 (consUU_c14 z0_v78851 nilUU_c13) NULL))
                  in close⇑ c_v78855
              | consUU_c14 z1_v78856 zs1_v78857 ⇒
                ln c_v78858 ⇒
                  (match (splitU_i46
                           (consUU_c14
                             z0_v78851 (consUU_c14 z1_v78856 zs1_v78857))) with
                   | (xs0_v78859, ys0_v78860) ⇒
                     ln e_v78861 ⇒
                       let r1_v78862 ⇐
                         fork r1_v78863 in
                           (((cmsort_workerU_i54 n0_v78848) xs0_v78859)
                             r1_v78863)
                       in
                       let r2_v78864 ⇐
                         fork r2_v78865 in
                           (((cmsort_workerU_i54 n0_v78848) ys0_v78860)
                             r2_v78865)
                       in
                       let __v78866 ⇐ recv r1_v78862 in
                       match __v78866 with
                       | (msg1_v78867, r1_v78868) ⇒
                         let __v78869 ⇐ recv r2_v78864 in
                         match __v78869 with
                         | (msg2_v78870, r2_v78871) ⇒
                           match msg1_v78867 with
                           | UniqU_c16 xs1_v78872 pf1_v78873 ⇒
                             match msg2_v78870 with
                             | UniqU_c16 xs2_v78874 pf2_v78875 ⇒
                               let zs_v78876 =
                                 ((mergeU_i48 xs1_v78872) xs2_v78874)
                               in
                               let c_v78877 ⇐
                                 (send c_v78858 (UniqU_c16 zs_v78876 NULL))
                               in
                               let __v78878 ⇐ close⇓ r1_v78868 in
                               let __v78879 ⇐ close⇓ r2_v78871 in
                               close⇑ c_v78877
                             end
                           end
                         end
                       end
                   end NULL)
              end c_v78853)
         end c_v78846)
      end

def cmsort_workerL_i53 =
  fn n_v78880 zs_v78881 ⇒
    ln c_v78882 ⇒
      match n_v78880 with
      | O ⇒
        let c_v78883 ⇐
          (send c_v78882 (UniqL_c15 (msortL_i49 zs_v78881) NULL))
        in close⇑ c_v78883
      | S n0_v78884 ⇒
        (match zs_v78881 with
         | nilUL_c11  ⇒
           ln c_v78885 ⇒
             let c_v78886 ⇐ (send c_v78885 (UniqL_c15 nilUL_c11 NULL)) in
             close⇑ c_v78886
         | consUL_c12 z0_v78887 zs0_v78888 ⇒
           ln c_v78889 ⇒
             (match zs0_v78888 with
              | nilUL_c11  ⇒
                ln c_v78890 ⇒
                  let c_v78891 ⇐
                    (send c_v78890
                      (UniqL_c15 (consUL_c12 z0_v78887 nilUL_c11) NULL))
                  in close⇑ c_v78891
              | consUL_c12 z1_v78892 zs1_v78893 ⇒
                ln c_v78894 ⇒
                  (match (splitL_i45
                           (consUL_c12
                             z0_v78887 (consUL_c12 z1_v78892 zs1_v78893))) with
                   | (xs0_v78895, ys0_v78896) ⇒
                     ln e_v78897 ⇒
                       let r1_v78898 ⇐
                         fork r1_v78899 in
                           (((cmsort_workerL_i53 n0_v78884) xs0_v78895)
                             r1_v78899)
                       in
                       let r2_v78900 ⇐
                         fork r2_v78901 in
                           (((cmsort_workerL_i53 n0_v78884) ys0_v78896)
                             r2_v78901)
                       in
                       let __v78902 ⇐ recv r1_v78898 in
                       match __v78902 with
                       | (msg1_v78903, r1_v78904) ⇒
                         let __v78905 ⇐ recv r2_v78900 in
                         match __v78905 with
                         | (msg2_v78906, r2_v78907) ⇒
                           match msg1_v78903 with
                           | UniqL_c15 xs1_v78908 pf1_v78909 ⇒
                             match msg2_v78906 with
                             | UniqL_c15 xs2_v78910 pf2_v78911 ⇒
                               let zs_v78912 =
                                 ((mergeL_i47 xs1_v78908) xs2_v78910)
                               in
                               let c_v78913 ⇐
                                 (send c_v78894 (UniqL_c15 zs_v78912 NULL))
                               in
                               let __v78914 ⇐ close⇓ r1_v78904 in
                               let __v78915 ⇐ close⇓ r2_v78907 in
                               close⇑ c_v78913
                             end
                           end
                         end
                       end
                   end NULL)
              end c_v78889)
         end c_v78882)
      end

def cmsortU_i56 =
  fn zs_v78916 ⇒
    let c_v78917 ⇐
      fork c_v78918 in (((cmsort_workerU_i54 4) zs_v78916) c_v78918)
    in
    let __v78919 ⇐ recv c_v78917 in
    match __v78919 with
    | (msg_v78920, c_v78921) ⇒
      let __v78922 ⇐ close⇓ c_v78921 in return msg_v78920
    end

def cmsortL_i55 =
  fn zs_v78923 ⇒
    let c_v78924 ⇐
      fork c_v78925 in (((cmsort_workerL_i53 4) zs_v78923) c_v78925)
    in
    let __v78926 ⇐ recv c_v78924 in
    match __v78926 with
    | (msg_v78927, c_v78928) ⇒
      let __v78929 ⇐ close⇓ c_v78928 in return msg_v78927
    end

def mkListU_i58 =
  fn n_v78930 ⇒
    match n_v78930 with
    | O ⇒ nilUU_c13
    | S n0_v78931 ⇒ (consUU_c14 n_v78930 (mkListU_i58 n0_v78931))
    end

def mkListL_i57 =
  fn n_v78932 ⇒
    match n_v78932 with
    | O ⇒ nilUL_c11
    | S n0_v78933 ⇒ (consUL_c12 n_v78932 (mkListL_i57 n0_v78933))
    end

def free_i35 =
  fn A_v78934 ls_v78935 ⇒
    match ls_v78935 with
    | nilUL_c11  ⇒ ()
    | consUL_c12 __v78936 ls_v78937 ⇒ ((free_i35 NULL) ls_v78937)
    end

main =
  let test_v78938 = (mkListL_i57 2000000) in
  let msg_v78939 ⇐ (cmsortL_i55 test_v78938) in
  match msg_v78939 with
  | UniqL_c15 sorted_v78940 __v78941 ⇒
    let __v78942 = ((free_i35 NULL) sorted_v78940) in return ()
  end

trans12 success--------------------------

fun andb_i1(b1_v79298, b2_v79299) = if b1_v79298 then
                                      b2_v79299
                                    else
                                      0

val andbclo_i59 = fn b1_v79300 b2_v79301 ⇒ andb_i1(b1_v79300, b2_v79301)

fun orb_i2(b1_v79302, b2_v79303) = if b1_v79302 then
                                     1
                                   else
                                     b2_v79303

val orbclo_i60 = fn b1_v79304 b2_v79305 ⇒ orb_i2(b1_v79304, b2_v79305)

fun notb_i3(b_v79306) = if b_v79306 then
                          0
                        else
                          1

val notbclo_i61 = fn b_v79307 ⇒ notb_i3(b_v79307)

fun lten_i4(x_v79308, y_v79309) =
  let __v79310 = x_v79308 in
  if __v79310 then
    let x_v79311 = __v79310.-1 in
    let __v79312 = y_v79309 in
    if __v79312 then
      let y_v79313 = __v79312.-1 in lten_i4(x_v79311, y_v79313)
    else
      0
  else
    1

val ltenclo_i62 = fn x_v79314 y_v79315 ⇒ lten_i4(x_v79314, y_v79315)

fun gten_i5(x_v79316, y_v79317) =
  let __v79318 = x_v79316 in
  if __v79318 then
    let x_v79319 = __v79318.-1 in
    let __v79320 = y_v79317 in
    if __v79320 then
      let y_v79321 = __v79320.-1 in gten_i5(x_v79319, y_v79321)
    else
      1
  else
    let __v79322 = y_v79317 in
    if __v79322 then
      let __v79323 = __v79322.-1 in 0
    else
      1

val gtenclo_i63 = fn x_v79324 y_v79325 ⇒ gten_i5(x_v79324, y_v79325)

fun ltn_i6(x_v79326, y_v79327) =
  let __v79328 = x_v79326 in
  if __v79328 then
    let x_v79329 = __v79328.-1 in
    let __v79330 = y_v79327 in
    if __v79330 then
      let y_v79331 = __v79330.-1 in ltn_i6(x_v79329, y_v79331)
    else
      0
  else
    let __v79332 = y_v79327 in
    if __v79332 then
      let y_v79333 = __v79332.-1 in 1
    else
      0

val ltnclo_i64 = fn x_v79334 y_v79335 ⇒ ltn_i6(x_v79334, y_v79335)

fun gtn_i7(x_v79336, y_v79337) =
  let __v79338 = x_v79336 in
  if __v79338 then
    let x_v79339 = __v79338.-1 in
    let __v79340 = y_v79337 in
    if __v79340 then
      let y_v79341 = __v79340.-1 in gtn_i7(x_v79339, y_v79341)
    else
      1
  else
    0

val gtnclo_i65 = fn x_v79342 y_v79343 ⇒ gtn_i7(x_v79342, y_v79343)

fun eqn_i8(x_v79344, y_v79345) =
  let __v79346 = x_v79344 in
  if __v79346 then
    let x_v79347 = __v79346.-1 in
    let __v79348 = y_v79345 in
    if __v79348 then
      let y_v79349 = __v79348.-1 in eqn_i8(x_v79347, y_v79349)
    else
      0
  else
    let __v79350 = y_v79345 in
    if __v79350 then
      let __v79351 = __v79350.-1 in 0
    else
      1

val eqnclo_i66 = fn x_v79352 y_v79353 ⇒ eqn_i8(x_v79352, y_v79353)

fun pred_i9(x_v79354) =
  let __v79355 = x_v79354 in
  if __v79355 then
    let x_v79356 = __v79355.-1 in x_v79356
  else
    0

val predclo_i67 = fn x_v79357 ⇒ pred_i9(x_v79357)

fun addn_i10(x_v79358, y_v79359) =
  let __v79360 = x_v79358 in
  if __v79360 then
    let x_v79361 = __v79360.-1 in addn_i10(x_v79361, y_v79359).+1
  else
    y_v79359

val addnclo_i68 = fn x_v79362 y_v79363 ⇒ addn_i10(x_v79362, y_v79363)

fun subn_i11(x_v79364, y_v79365) =
  let __v79366 = y_v79365 in
  if __v79366 then
    let y_v79367 = __v79366.-1 in subn_i11(pred_i9(x_v79364), y_v79367)
  else
    x_v79364

val subnclo_i69 = fn x_v79368 y_v79369 ⇒ subn_i11(x_v79368, y_v79369)

fun muln_i12(x_v79370, y_v79371) =
  let __v79372 = x_v79370 in
  if __v79372 then
    let x_v79373 = __v79372.-1 in
    addn_i10(y_v79371, muln_i12(x_v79373, y_v79371))
  else
    0

val mulnclo_i70 = fn x_v79374 y_v79375 ⇒ muln_i12(x_v79374, y_v79375)

fun divn_i13(x_v79376, y_v79377) =
  if ltn_i6(x_v79376, y_v79377) then
    0
  else
    divn_i13(subn_i11(x_v79376, y_v79377), y_v79377).+1

val divnclo_i71 = fn x_v79378 y_v79379 ⇒ divn_i13(x_v79378, y_v79379)

fun modn_i14(x_v79380, y_v79381) =
  subn_i11(x_v79380, muln_i12(divn_i13(x_v79380, y_v79381), y_v79381))

val modnclo_i72 = fn x_v79382 y_v79383 ⇒ modn_i14(x_v79382, y_v79383)

fun cats_i15(s1_v79384, s2_v79385) =
  match s1_v79384 with
  | EmptyString_c2  ⇒ s2_v79385
  | String_c3 c_v79386 s1_v79387 ⇒
    (String_c3 c_v79386 cats_i15(s1_v79387, s2_v79385))
  end

val catsclo_i73 = fn s1_v79388 s2_v79389 ⇒ cats_i15(s1_v79388, s2_v79389)

fun strlen_i16(s_v79390) =
  match s_v79390 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v79391 s_v79392 ⇒ strlen_i16(s_v79392).+1
  end

val strlenclo_i74 = fn s_v79393 ⇒ strlen_i16(s_v79393)

fun lenUU_i40(A_v79394, xs_v79395) =
  match xs_v79395 with
  | nilUU_c13  ⇒ (0, nilUU_c13)
  | consUU_c14 x_v79396 xs_v79397 ⇒
    match lenUU_i40(NULL, xs_v79397) with
    | (n_v79398, xs_v79399) ⇒
      (n_v79398.+1, (consUU_c14 x_v79396 xs_v79399))
    end
  end

val lenUUclo_i75 = fn A_v79400 xs_v79401 ⇒ lenUU_i40(A_v79400, xs_v79401)

fun lenUL_i39(A_v79402, xs_v79403) =
  match xs_v79403 with
  | nilUL_c11  ⇒ (0, nilUL_c11)
  | consUL_c12 x_v79404 xs_v79405 ⇒
    match lenUL_i39(NULL, xs_v79405) with
    | (n_v79406, xs_v79407) ⇒
      (n_v79406.+1, (consUL_c12 x_v79404 xs_v79407))
    end
  end

val lenULclo_i76 = fn A_v79408 xs_v79409 ⇒ lenUL_i39(A_v79408, xs_v79409)

fun lenLL_i37(A_v79410, xs_v79411) =
  match xs_v79411 with
  | nilLL_c7  ⇒ (0, nilLL_c7)
  | consLL_c8 x_v79412 xs_v79413 ⇒
    match lenLL_i37(NULL, xs_v79413) with
    | (n_v79414, xs_v79415) ⇒ (n_v79414.+1, (consLL_c8 x_v79412 xs_v79415))
    end
  end

val lenLLclo_i77 = fn A_v79416 xs_v79417 ⇒ lenLL_i37(A_v79416, xs_v79417)

fun appendUU_i44(A_v79418, xs_v79419, ys_v79420) =
  match xs_v79419 with
  | nilUU_c13  ⇒ ys_v79420
  | consUU_c14 x_v79421 xs_v79422 ⇒
    (consUU_c14 x_v79421 appendUU_i44(NULL, xs_v79422, ys_v79420))
  end

val appendUUclo_i78 =
  fn A_v79423 xs_v79424 ⇒
    ln ys_v79425 ⇒ appendUU_i44(A_v79423, xs_v79424, ys_v79425)

fun appendUL_i43(A_v79426, xs_v79427, ys_v79428) =
  match xs_v79427 with
  | nilUL_c11  ⇒ ys_v79428
  | consUL_c12 x_v79429 xs_v79430 ⇒
    (consUL_c12 x_v79429 appendUL_i43(NULL, xs_v79430, ys_v79428))
  end

val appendULclo_i79 =
  fn A_v79431 xs_v79432 ⇒
    ln ys_v79433 ⇒ appendUL_i43(A_v79431, xs_v79432, ys_v79433)

fun appendLL_i41(A_v79434, xs_v79435, ys_v79436) =
  match xs_v79435 with
  | nilLL_c7  ⇒ ys_v79436
  | consLL_c8 x_v79437 xs_v79438 ⇒
    (consLL_c8 x_v79437 appendLL_i41(NULL, xs_v79438, ys_v79436))
  end

val appendLLclo_i80 =
  fn A_v79439 xs_v79440 ⇒
    ln ys_v79441 ⇒ appendLL_i41(A_v79439, xs_v79440, ys_v79441)

fun readline_i25(__v79442) =
  ln __v79443 ⇒
    let ch_v79444 = (ln __v79445 ⇒ open stdin) NULL in
    let ch_v79446 =
      ((fn x_v79447 ⇒ ln __v79448 ⇒ send(ch_v79444, x_v79447)) 1) NULL
    in
    let __v79449 = (ln __v79450 ⇒ recv(ch_v79446)) NULL in
    (match __v79449 with
     | (s_v79451, ch_v79452) ⇒
       ln __v79453 ⇒
         let ch_v79454 =
           ((fn x_v79455 ⇒ ln __v79456 ⇒ send(ch_v79452, x_v79455)) 0)
             NULL
         in
         let __v79457 =
           (ln __v79458 ⇒ let __v79459 = ch_v79454 in NULL) NULL
         in (ln __v79460 ⇒ s_v79451) NULL
     end) NULL

val readlineclo_i81 = fn __v79461 ⇒ readline_i25(__v79461)

fun print_i26(s_v79462) =
  ln __v79463 ⇒
    let ch_v79464 = (ln __v79465 ⇒ open stdout) NULL in
    let ch_v79466 =
      ((fn x_v79467 ⇒ ln __v79468 ⇒ send(ch_v79464, x_v79467)) 1) NULL
    in
    let ch_v79469 =
      ((fn x_v79470 ⇒ ln __v79471 ⇒ send(ch_v79466, x_v79470)) s_v79462)
        NULL
    in
    let ch_v79472 =
      ((fn x_v79473 ⇒ ln __v79474 ⇒ send(ch_v79469, x_v79473)) 0) NULL
    in (ln __v79475 ⇒ let __v79476 = ch_v79472 in NULL) NULL

val printclo_i82 = fn s_v79477 ⇒ print_i26(s_v79477)

fun prerr_i27(s_v79478) =
  ln __v79479 ⇒
    let ch_v79480 = (ln __v79481 ⇒ open stderr) NULL in
    let ch_v79482 =
      ((fn x_v79483 ⇒ ln __v79484 ⇒ send(ch_v79480, x_v79483)) 1) NULL
    in
    let ch_v79485 =
      ((fn x_v79486 ⇒ ln __v79487 ⇒ send(ch_v79482, x_v79486)) s_v79478)
        NULL
    in
    let ch_v79488 =
      ((fn x_v79489 ⇒ ln __v79490 ⇒ send(ch_v79485, x_v79489)) 0) NULL
    in (ln __v79491 ⇒ let __v79492 = ch_v79488 in NULL) NULL

val prerrclo_i83 = fn s_v79493 ⇒ prerr_i27(s_v79493)

fun splitU_i46(zs_v79494) =
  match zs_v79494 with
  | nilUU_c13  ⇒ (nilUU_c13, nilUU_c13)
  | consUU_c14 x_v79495 zs_v79496 ⇒
    match zs_v79496 with
    | nilUU_c13  ⇒ ((consUU_c14 x_v79495 nilUU_c13), nilUU_c13)
    | consUU_c14 y_v79497 zs_v79498 ⇒
      let __v79499 = splitU_i46(zs_v79498) in
      match __v79499 with
      | (xs_v79500, ys_v79501) ⇒
        ((consUU_c14 x_v79495 xs_v79500), (consUU_c14 y_v79497 ys_v79501))
      end
    end
  end

val splitUclo_i84 = fn zs_v79502 ⇒ splitU_i46(zs_v79502)

fun splitL_i45(zs_v79503) =
  match zs_v79503 with
  | nilUL_c11  ⇒ (nilUL_c11, nilUL_c11)
  | consUL_c12 x_v79504 zs_v79505 ⇒
    match zs_v79505 with
    | nilUL_c11  ⇒ ((consUL_c12 x_v79504 nilUL_c11), nilUL_c11)
    | consUL_c12 y_v79506 zs_v79507 ⇒
      let __v79508 = splitL_i45(zs_v79507) in
      match __v79508 with
      | (xs_v79509, ys_v79510) ⇒
        ((consUL_c12 x_v79504 xs_v79509), (consUL_c12 y_v79506 ys_v79510))
      end
    end
  end

val splitLclo_i85 = fn zs_v79511 ⇒ splitL_i45(zs_v79511)

fun mergeU_i48(xs_v79512, ys_v79513) =
  match xs_v79512 with
  | nilUU_c13  ⇒ ys_v79513
  | consUU_c14 x_v79514 xs0_v79515 ⇒
    match ys_v79513 with
    | nilUU_c13  ⇒ (consUU_c14 x_v79514 xs0_v79515)
    | consUU_c14 y_v79516 ys0_v79517 ⇒
      if lten_i4(x_v79514, y_v79516) then
        (consUU_c14
          x_v79514 mergeU_i48(xs0_v79515, (consUU_c14 y_v79516 ys0_v79517)))
      else
        (consUU_c14
          y_v79516 mergeU_i48((consUU_c14 x_v79514 xs0_v79515), ys0_v79517))
    end
  end

val mergeUclo_i86 =
  fn xs_v79518 ⇒ ln ys_v79519 ⇒ mergeU_i48(xs_v79518, ys_v79519)

fun mergeL_i47(xs_v79520, ys_v79521) =
  match xs_v79520 with
  | nilUL_c11  ⇒ ys_v79521
  | consUL_c12 x_v79522 xs0_v79523 ⇒
    match ys_v79521 with
    | nilUL_c11  ⇒ (consUL_c12 x_v79522 xs0_v79523)
    | consUL_c12 y_v79524 ys0_v79525 ⇒
      if lten_i4(x_v79522, y_v79524) then
        (consUL_c12
          x_v79522 mergeL_i47(xs0_v79523, (consUL_c12 y_v79524 ys0_v79525)))
      else
        (consUL_c12
          y_v79524 mergeL_i47((consUL_c12 x_v79522 xs0_v79523), ys0_v79525))
    end
  end

val mergeLclo_i87 =
  fn xs_v79526 ⇒ ln ys_v79527 ⇒ mergeL_i47(xs_v79526, ys_v79527)

fun msortU_i50(zs_v79528) =
  match zs_v79528 with
  | nilUU_c13  ⇒ nilUU_c13
  | consUU_c14 x_v79529 zs_v79530 ⇒
    match zs_v79530 with
    | nilUU_c13  ⇒ (consUU_c14 x_v79529 nilUU_c13)
    | consUU_c14 y_v79531 zs_v79532 ⇒
      let __v79533 =
        splitU_i46((consUU_c14 x_v79529 (consUU_c14 y_v79531 zs_v79532)))
      in
      match __v79533 with
      | (xs_v79534, ys_v79535) ⇒
        mergeU_i48(msortU_i50(xs_v79534), msortU_i50(ys_v79535))
      end
    end
  end

val msortUclo_i88 = fn zs_v79536 ⇒ msortU_i50(zs_v79536)

fun msortL_i49(zs_v79537) =
  match zs_v79537 with
  | nilUL_c11  ⇒ nilUL_c11
  | consUL_c12 x_v79538 zs_v79539 ⇒
    match zs_v79539 with
    | nilUL_c11  ⇒ (consUL_c12 x_v79538 nilUL_c11)
    | consUL_c12 y_v79540 zs_v79541 ⇒
      let __v79542 =
        splitL_i45((consUL_c12 x_v79538 (consUL_c12 y_v79540 zs_v79541)))
      in
      match __v79542 with
      | (xs_v79543, ys_v79544) ⇒
        mergeL_i47(msortL_i49(xs_v79543), msortL_i49(ys_v79544))
      end
    end
  end

val msortLclo_i89 = fn zs_v79545 ⇒ msortL_i49(zs_v79545)

fun cmsort_workerU_i54(n_v79546, zs_v79547, c_v79548) =
  let __v79549 = n_v79546 in
  if __v79549 then
    let n0_v79550 = __v79549.-1 in
    (match zs_v79547 with
     | nilUU_c13  ⇒
       ln c_v79551 __v79552 ⇒
         let c_v79553 =
           ((fn x_v79554 ⇒ ln __v79555 ⇒ send(c_v79551, x_v79554))
              (UniqU_c16 nilUU_c13 NULL))
             NULL
         in (ln __v79556 ⇒ let __v79557 = c_v79553 in NULL) NULL
     | consUU_c14 z0_v79558 zs0_v79559 ⇒
       ln c_v79560 ⇒
         (match zs0_v79559 with
          | nilUU_c13  ⇒
            ln c_v79561 __v79562 ⇒
              let c_v79563 =
                ((fn x_v79564 ⇒ ln __v79565 ⇒ send(c_v79561, x_v79564))
                   (UniqU_c16 (consUU_c14 z0_v79558 nilUU_c13) NULL))
                  NULL
              in (ln __v79566 ⇒ let __v79567 = c_v79563 in NULL) NULL
          | consUU_c14 z1_v79568 zs1_v79569 ⇒
            ln c_v79570 ⇒
              (match splitU_i46((consUU_c14
                                  z0_v79558 (consUU_c14 z1_v79568 zs1_v79569))) with
               | (xs0_v79571, ys0_v79572) ⇒
                 ln e_v79573 __v79574 ⇒
                   let r1_v79575 =
                     (ln __v79576 ⇒
                        fork r1_v79577 in
                          (cmsort_workerU_i54(n0_v79550, xs0_v79571,
                                              r1_v79577))
                            NULL)
                       NULL
                   in
                   let r2_v79578 =
                     (ln __v79579 ⇒
                        fork r2_v79580 in
                          (cmsort_workerU_i54(n0_v79550, ys0_v79572,
                                              r2_v79580))
                            NULL)
                       NULL
                   in
                   let __v79581 = (ln __v79582 ⇒ recv(r1_v79575)) NULL in
                   (match __v79581 with
                    | (msg1_v79583, r1_v79584) ⇒
                      ln __v79585 ⇒
                        let __v79586 = (ln __v79587 ⇒ recv(r2_v79578)) NULL
                        in
                        (match __v79586 with
                         | (msg2_v79588, r2_v79589) ⇒
                           match msg1_v79583 with
                           | UniqU_c16 xs1_v79590 pf1_v79591 ⇒
                             match msg2_v79588 with
                             | UniqU_c16 xs2_v79592 pf2_v79593 ⇒
                               let zs_v79594 =
                                 mergeU_i48(xs1_v79590, xs2_v79592)
                               in
                               ln __v79595 ⇒
                                 let c_v79596 =
                                   ((fn x_v79597 ⇒
                                       ln __v79598 ⇒
                                         send(c_v79570, x_v79597))
                                      (UniqU_c16 zs_v79594 NULL))
                                     NULL
                                 in
                                 let __v79599 =
                                   (ln __v79600 ⇒ close(r1_v79584)) NULL
                                 in
                                 let __v79601 =
                                   (ln __v79602 ⇒ close(r2_v79589)) NULL
                                 in
                                 (ln __v79603 ⇒
                                    let __v79604 = c_v79596 in NULL)
                                   NULL
                             end
                           end
                         end) NULL
                    end) NULL
               end) NULL
          end) c_v79560
     end) c_v79548
  else
    ln __v79605 ⇒
      let c_v79606 =
        ((fn x_v79607 ⇒ ln __v79608 ⇒ send(c_v79548, x_v79607))
           (UniqU_c16 msortU_i50(zs_v79547) NULL))
          NULL
      in (ln __v79609 ⇒ let __v79610 = c_v79606 in NULL) NULL

val cmsort_workerUclo_i90 =
  fn n_v79611 zs_v79612 ⇒
    ln c_v79613 ⇒ cmsort_workerU_i54(n_v79611, zs_v79612, c_v79613)

fun cmsort_workerL_i53(n_v79614, zs_v79615, c_v79616) =
  let __v79617 = n_v79614 in
  if __v79617 then
    let n0_v79618 = __v79617.-1 in
    (match zs_v79615 with
     | nilUL_c11  ⇒
       ln c_v79619 __v79620 ⇒
         let c_v79621 =
           ((ln x_v79622 __v79623 ⇒ send(c_v79619, x_v79622))
              (UniqL_c15 nilUL_c11 NULL))
             NULL
         in (ln __v79624 ⇒ let __v79625 = c_v79621 in NULL) NULL
     | consUL_c12 z0_v79626 zs0_v79627 ⇒
       ln c_v79628 ⇒
         (match zs0_v79627 with
          | nilUL_c11  ⇒
            ln c_v79629 __v79630 ⇒
              let c_v79631 =
                ((ln x_v79632 __v79633 ⇒ send(c_v79629, x_v79632))
                   (UniqL_c15 (consUL_c12 z0_v79626 nilUL_c11) NULL))
                  NULL
              in (ln __v79634 ⇒ let __v79635 = c_v79631 in NULL) NULL
          | consUL_c12 z1_v79636 zs1_v79637 ⇒
            ln c_v79638 ⇒
              (match splitL_i45((consUL_c12
                                  z0_v79626 (consUL_c12 z1_v79636 zs1_v79637))) with
               | (xs0_v79639, ys0_v79640) ⇒
                 ln e_v79641 __v79642 ⇒
                   let r1_v79643 =
                     (ln __v79644 ⇒
                        fork r1_v79645 in
                          (cmsort_workerL_i53(n0_v79618, xs0_v79639,
                                              r1_v79645))
                            NULL)
                       NULL
                   in
                   let r2_v79646 =
                     (ln __v79647 ⇒
                        fork r2_v79648 in
                          (cmsort_workerL_i53(n0_v79618, ys0_v79640,
                                              r2_v79648))
                            NULL)
                       NULL
                   in
                   let __v79649 = (ln __v79650 ⇒ recv(r1_v79643)) NULL in
                   (match __v79649 with
                    | (msg1_v79651, r1_v79652) ⇒
                      ln __v79653 ⇒
                        let __v79654 = (ln __v79655 ⇒ recv(r2_v79646)) NULL
                        in
                        (match __v79654 with
                         | (msg2_v79656, r2_v79657) ⇒
                           match msg1_v79651 with
                           | UniqL_c15 xs1_v79658 pf1_v79659 ⇒
                             match msg2_v79656 with
                             | UniqL_c15 xs2_v79660 pf2_v79661 ⇒
                               let zs_v79662 =
                                 mergeL_i47(xs1_v79658, xs2_v79660)
                               in
                               ln __v79663 ⇒
                                 let c_v79664 =
                                   ((ln x_v79665 __v79666 ⇒
                                       send(c_v79638, x_v79665))
                                      (UniqL_c15 zs_v79662 NULL))
                                     NULL
                                 in
                                 let __v79667 =
                                   (ln __v79668 ⇒ close(r1_v79652)) NULL
                                 in
                                 let __v79669 =
                                   (ln __v79670 ⇒ close(r2_v79657)) NULL
                                 in
                                 (ln __v79671 ⇒
                                    let __v79672 = c_v79664 in NULL)
                                   NULL
                             end
                           end
                         end) NULL
                    end) NULL
               end) NULL
          end) c_v79628
     end) c_v79616
  else
    ln __v79673 ⇒
      let c_v79674 =
        ((ln x_v79675 __v79676 ⇒ send(c_v79616, x_v79675))
           (UniqL_c15 msortL_i49(zs_v79615) NULL))
          NULL
      in (ln __v79677 ⇒ let __v79678 = c_v79674 in NULL) NULL

val cmsort_workerLclo_i91 =
  fn n_v79679 zs_v79680 ⇒
    ln c_v79681 ⇒ cmsort_workerL_i53(n_v79679, zs_v79680, c_v79681)

fun cmsortU_i56(zs_v79682) =
  ln __v79683 ⇒
    let c_v79684 =
      (ln __v79685 ⇒
         fork c_v79686 in (cmsort_workerU_i54(4, zs_v79682, c_v79686)) NULL)
        NULL
    in
    let __v79687 = (ln __v79688 ⇒ recv(c_v79684)) NULL in
    (match __v79687 with
     | (msg_v79689, c_v79690) ⇒
       ln __v79691 ⇒
         let __v79692 = (ln __v79693 ⇒ close(c_v79690)) NULL in
         (ln __v79694 ⇒ msg_v79689) NULL
     end) NULL

val cmsortUclo_i92 = fn zs_v79695 ⇒ cmsortU_i56(zs_v79695)

fun cmsortL_i55(zs_v79696) =
  ln __v79697 ⇒
    let c_v79698 =
      (ln __v79699 ⇒
         fork c_v79700 in (cmsort_workerL_i53(4, zs_v79696, c_v79700)) NULL)
        NULL
    in
    let __v79701 = (ln __v79702 ⇒ recv(c_v79698)) NULL in
    (match __v79701 with
     | (msg_v79703, c_v79704) ⇒
       ln __v79705 ⇒
         let __v79706 = (ln __v79707 ⇒ close(c_v79704)) NULL in
         (ln __v79708 ⇒ msg_v79703) NULL
     end) NULL

val cmsortLclo_i93 = fn zs_v79709 ⇒ cmsortL_i55(zs_v79709)

fun mkListU_i58(n_v79710) =
  let __v79711 = n_v79710 in
  if __v79711 then
    let n0_v79712 = __v79711.-1 in
    (consUU_c14 n_v79710 mkListU_i58(n0_v79712))
  else
    nilUU_c13

val mkListUclo_i94 = fn n_v79713 ⇒ mkListU_i58(n_v79713)

fun mkListL_i57(n_v79714) =
  let __v79715 = n_v79714 in
  if __v79715 then
    let n0_v79716 = __v79715.-1 in
    (consUL_c12 n_v79714 mkListL_i57(n0_v79716))
  else
    nilUL_c11

val mkListLclo_i95 = fn n_v79717 ⇒ mkListL_i57(n_v79717)

fun free_i35(A_v79718, ls_v79719) =
  match ls_v79719 with
  | nilUL_c11  ⇒ NULL
  | consUL_c12 __v79720 ls_v79721 ⇒ free_i35(NULL, ls_v79721)
  end

val freeclo_i96 = fn A_v79722 ls_v79723 ⇒ free_i35(A_v79722, ls_v79723)

main =
  (let test_v79724 = mkListL_i57(2000000) in
   ln __v79725 ⇒
     let msg_v79726 = (cmsortL_i55(test_v79724)) NULL in
     (match msg_v79726 with
      | UniqL_c15 sorted_v79727 __v79728 ⇒
        let __v79729 = free_i35(NULL, sorted_v79727) in ln __v79730 ⇒ NULL
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v81882, b2_v81883) = if b1_v81882 then
                                      b2_v81883
                                    else
                                      0

val andbclo_i59 = fn b1_v81884 b2_v81885 ⇒ andb_i1(b1_v81884, b2_v81885)

fun orb_i2(b1_v81886, b2_v81887) = if b1_v81886 then
                                     1
                                   else
                                     b2_v81887

val orbclo_i60 = fn b1_v81888 b2_v81889 ⇒ orb_i2(b1_v81888, b2_v81889)

fun notb_i3(b_v81890) = if b_v81890 then
                          0
                        else
                          1

val notbclo_i61 = fn b_v81891 ⇒ notb_i3(b_v81891)

fun lten_i4(x_v81892, y_v81893) =
  let __v81894 = x_v81892 in
  if __v81894 then
    let __v81895 = y_v81893 in
    if __v81895 then
      lten_i4(__v81894.-1, __v81895.-1)
    else
      0
  else
    1

val ltenclo_i62 = fn x_v81896 y_v81897 ⇒ lten_i4(x_v81896, y_v81897)

fun gten_i5(x_v81898, y_v81899) =
  let __v81900 = x_v81898 in
  if __v81900 then
    let __v81901 = y_v81899 in
    if __v81901 then
      gten_i5(__v81900.-1, __v81901.-1)
    else
      1
  else
    if y_v81899 then
      0
    else
      1

val gtenclo_i63 = fn x_v81902 y_v81903 ⇒ gten_i5(x_v81902, y_v81903)

fun ltn_i6(x_v81904, y_v81905) =
  let __v81906 = x_v81904 in
  if __v81906 then
    let __v81907 = y_v81905 in
    if __v81907 then
      ltn_i6(__v81906.-1, __v81907.-1)
    else
      0
  else
    if y_v81905 then
      1
    else
      0

val ltnclo_i64 = fn x_v81908 y_v81909 ⇒ ltn_i6(x_v81908, y_v81909)

fun gtn_i7(x_v81910, y_v81911) =
  let __v81912 = x_v81910 in
  if __v81912 then
    let __v81913 = y_v81911 in
    if __v81913 then
      gtn_i7(__v81912.-1, __v81913.-1)
    else
      1
  else
    0

val gtnclo_i65 = fn x_v81914 y_v81915 ⇒ gtn_i7(x_v81914, y_v81915)

fun eqn_i8(x_v81916, y_v81917) =
  let __v81918 = x_v81916 in
  if __v81918 then
    let __v81919 = y_v81917 in
    if __v81919 then
      eqn_i8(__v81918.-1, __v81919.-1)
    else
      0
  else
    if y_v81917 then
      0
    else
      1

val eqnclo_i66 = fn x_v81920 y_v81921 ⇒ eqn_i8(x_v81920, y_v81921)

fun pred_i9(x_v81922) =
  let __v81923 = x_v81922 in if __v81923 then
                               __v81923.-1
                             else
                               0

val predclo_i67 = fn x_v81924 ⇒ pred_i9(x_v81924)

fun addn_i10(x_v81925, y_v81926) =
  let __v81927 = x_v81925 in
  if __v81927 then
    addn_i10(__v81927.-1, y_v81926).+1
  else
    y_v81926

val addnclo_i68 = fn x_v81928 y_v81929 ⇒ addn_i10(x_v81928, y_v81929)

fun subn_i11(x_v81930, y_v81931) =
  let __v81932 = y_v81931 in
  if __v81932 then
    subn_i11(pred_i9(x_v81930), __v81932.-1)
  else
    x_v81930

val subnclo_i69 = fn x_v81933 y_v81934 ⇒ subn_i11(x_v81933, y_v81934)

fun muln_i12(x_v81935, y_v81936) =
  let __v81937 = x_v81935 in
  if __v81937 then
    addn_i10(y_v81936, muln_i12(__v81937.-1, y_v81936))
  else
    0

val mulnclo_i70 = fn x_v81938 y_v81939 ⇒ muln_i12(x_v81938, y_v81939)

fun divn_i13(x_v81940, y_v81941) =
  if ltn_i6(x_v81940, y_v81941) then
    0
  else
    divn_i13(subn_i11(x_v81940, y_v81941), y_v81941).+1

val divnclo_i71 = fn x_v81942 y_v81943 ⇒ divn_i13(x_v81942, y_v81943)

fun modn_i14(x_v81944, y_v81945) =
  subn_i11(x_v81944, muln_i12(divn_i13(x_v81944, y_v81945), y_v81945))

val modnclo_i72 = fn x_v81946 y_v81947 ⇒ modn_i14(x_v81946, y_v81947)

fun cats_i15(s1_v81948, s2_v81949) =
  match s1_v81948 with
  | EmptyString_c2  ⇒ s2_v81949
  | String_c3 c_v81950 s1_v81951 ⇒
    (String_c3 c_v81950 cats_i15(s1_v81951, s2_v81949))
  end

val catsclo_i73 = fn s1_v81952 s2_v81953 ⇒ cats_i15(s1_v81952, s2_v81953)

fun strlen_i16(s_v81954) =
  match s_v81954 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v81955 s_v81956 ⇒ strlen_i16(s_v81956).+1
  end

val strlenclo_i74 = fn s_v81957 ⇒ strlen_i16(s_v81957)

fun lenUU_i40(A_v81958, xs_v81959) =
  match xs_v81959 with
  | nilUU_c13  ⇒ (0, nilUU_c13)
  | consUU_c14 x_v81960 xs_v81961 ⇒
    match lenUU_i40(NULL, xs_v81961) with
    | (n_v81962, xs_v81963) ⇒
      (n_v81962.+1, (consUU_c14 x_v81960 xs_v81963))
    end
  end

val lenUUclo_i75 = fn A_v81964 xs_v81965 ⇒ lenUU_i40(A_v81964, xs_v81965)

fun lenUL_i39(A_v81966, xs_v81967) =
  match xs_v81967 with
  | nilUL_c11  ⇒ (0, nilUL_c11)
  | consUL_c12 x_v81968 xs_v81969 ⇒
    match lenUL_i39(NULL, xs_v81969) with
    | (n_v81970, xs_v81971) ⇒
      (n_v81970.+1, (consUL_c12 x_v81968 xs_v81971))
    end
  end

val lenULclo_i76 = fn A_v81972 xs_v81973 ⇒ lenUL_i39(A_v81972, xs_v81973)

fun lenLL_i37(A_v81974, xs_v81975) =
  match xs_v81975 with
  | nilLL_c7  ⇒ (0, nilLL_c7)
  | consLL_c8 x_v81976 xs_v81977 ⇒
    match lenLL_i37(NULL, xs_v81977) with
    | (n_v81978, xs_v81979) ⇒ (n_v81978.+1, (consLL_c8 x_v81976 xs_v81979))
    end
  end

val lenLLclo_i77 = fn A_v81980 xs_v81981 ⇒ lenLL_i37(A_v81980, xs_v81981)

fun appendUU_i44(A_v81982, xs_v81983, ys_v81984) =
  match xs_v81983 with
  | nilUU_c13  ⇒ ys_v81984
  | consUU_c14 x_v81985 xs_v81986 ⇒
    (consUU_c14 x_v81985 appendUU_i44(NULL, xs_v81986, ys_v81984))
  end

val appendUUclo_i78 =
  fn A_v81987 xs_v81988 ⇒
    ln ys_v81989 ⇒ appendUU_i44(A_v81987, xs_v81988, ys_v81989)

fun appendUL_i43(A_v81990, xs_v81991, ys_v81992) =
  match xs_v81991 with
  | nilUL_c11  ⇒ ys_v81992
  | consUL_c12 x_v81993 xs_v81994 ⇒
    (consUL_c12 x_v81993 appendUL_i43(NULL, xs_v81994, ys_v81992))
  end

val appendULclo_i79 =
  fn A_v81995 xs_v81996 ⇒
    ln ys_v81997 ⇒ appendUL_i43(A_v81995, xs_v81996, ys_v81997)

fun appendLL_i41(A_v81998, xs_v81999, ys_v82000) =
  match xs_v81999 with
  | nilLL_c7  ⇒ ys_v82000
  | consLL_c8 x_v82001 xs_v82002 ⇒
    (consLL_c8 x_v82001 appendLL_i41(NULL, xs_v82002, ys_v82000))
  end

val appendLLclo_i80 =
  fn A_v82003 xs_v82004 ⇒
    ln ys_v82005 ⇒ appendLL_i41(A_v82003, xs_v82004, ys_v82005)

fun readline_i25(__v82006) =
  ln __v82007 ⇒
    let ch_v82008 = open stdin in
    let ch_v82009 = send(ch_v82008, 1) in
    let __v82010 = recv(ch_v82009) in
    match __v82010 with
    | (s_v82011, ch_v82012) ⇒
      let ch_v82013 = send(ch_v82012, 0) in s_v82011
    end

val readlineclo_i81 = fn __v82014 ⇒ readline_i25(__v82014)

fun print_i26(s_v82015) =
  ln __v82016 ⇒
    let ch_v82017 = open stdout in
    let ch_v82018 = send(ch_v82017, 1) in
    let ch_v82019 = send(ch_v82018, s_v82015) in
    let ch_v82020 = send(ch_v82019, 0) in NULL

val printclo_i82 = fn s_v82021 ⇒ print_i26(s_v82021)

fun prerr_i27(s_v82022) =
  ln __v82023 ⇒
    let ch_v82024 = open stderr in
    let ch_v82025 = send(ch_v82024, 1) in
    let ch_v82026 = send(ch_v82025, s_v82022) in
    let ch_v82027 = send(ch_v82026, 0) in NULL

val prerrclo_i83 = fn s_v82028 ⇒ prerr_i27(s_v82028)

fun splitU_i46(zs_v82029) =
  match zs_v82029 with
  | nilUU_c13  ⇒ (nilUU_c13, nilUU_c13)
  | consUU_c14 x_v82030 zs_v82031 ⇒
    match zs_v82031 with
    | nilUU_c13  ⇒ ((consUU_c14 x_v82030 nilUU_c13), nilUU_c13)
    | consUU_c14 y_v82032 zs_v82033 ⇒
      match splitU_i46(zs_v82033) with
      | (xs_v82034, ys_v82035) ⇒
        ((consUU_c14 x_v82030 xs_v82034), (consUU_c14 y_v82032 ys_v82035))
      end
    end
  end

val splitUclo_i84 = fn zs_v82036 ⇒ splitU_i46(zs_v82036)

fun splitL_i45(zs_v82037) =
  match zs_v82037 with
  | nilUL_c11  ⇒ (nilUL_c11, nilUL_c11)
  | consUL_c12 x_v82038 zs_v82039 ⇒
    match zs_v82039 with
    | nilUL_c11  ⇒ ((consUL_c12 x_v82038 nilUL_c11), nilUL_c11)
    | consUL_c12 y_v82040 zs_v82041 ⇒
      match splitL_i45(zs_v82041) with
      | (xs_v82042, ys_v82043) ⇒
        ((consUL_c12 x_v82038 xs_v82042), (consUL_c12 y_v82040 ys_v82043))
      end
    end
  end

val splitLclo_i85 = fn zs_v82044 ⇒ splitL_i45(zs_v82044)

fun mergeU_i48(xs_v82045, ys_v82046) =
  match xs_v82045 with
  | nilUU_c13  ⇒ ys_v82046
  | consUU_c14 x_v82047 xs0_v82048 ⇒
    match ys_v82046 with
    | nilUU_c13  ⇒ (consUU_c14 x_v82047 xs0_v82048)
    | consUU_c14 y_v82049 ys0_v82050 ⇒
      if lten_i4(x_v82047, y_v82049) then
        (consUU_c14
          x_v82047 mergeU_i48(xs0_v82048, (consUU_c14 y_v82049 ys0_v82050)))
      else
        (consUU_c14
          y_v82049 mergeU_i48((consUU_c14 x_v82047 xs0_v82048), ys0_v82050))
    end
  end

val mergeUclo_i86 =
  fn xs_v82051 ⇒ ln ys_v82052 ⇒ mergeU_i48(xs_v82051, ys_v82052)

fun mergeL_i47(xs_v82053, ys_v82054) =
  match xs_v82053 with
  | nilUL_c11  ⇒ ys_v82054
  | consUL_c12 x_v82055 xs0_v82056 ⇒
    match ys_v82054 with
    | nilUL_c11  ⇒ (consUL_c12 x_v82055 xs0_v82056)
    | consUL_c12 y_v82057 ys0_v82058 ⇒
      if lten_i4(x_v82055, y_v82057) then
        (consUL_c12
          x_v82055 mergeL_i47(xs0_v82056, (consUL_c12 y_v82057 ys0_v82058)))
      else
        (consUL_c12
          y_v82057 mergeL_i47((consUL_c12 x_v82055 xs0_v82056), ys0_v82058))
    end
  end

val mergeLclo_i87 =
  fn xs_v82059 ⇒ ln ys_v82060 ⇒ mergeL_i47(xs_v82059, ys_v82060)

fun msortU_i50(zs_v82061) =
  match zs_v82061 with
  | nilUU_c13  ⇒ nilUU_c13
  | consUU_c14 x_v82062 zs_v82063 ⇒
    match zs_v82063 with
    | nilUU_c13  ⇒ (consUU_c14 x_v82062 nilUU_c13)
    | consUU_c14 y_v82064 zs_v82065 ⇒
      match splitU_i46((consUU_c14 x_v82062 (consUU_c14 y_v82064 zs_v82065))) with
      | (xs_v82066, ys_v82067) ⇒
        mergeU_i48(msortU_i50(xs_v82066), msortU_i50(ys_v82067))
      end
    end
  end

val msortUclo_i88 = fn zs_v82068 ⇒ msortU_i50(zs_v82068)

fun msortL_i49(zs_v82069) =
  match zs_v82069 with
  | nilUL_c11  ⇒ nilUL_c11
  | consUL_c12 x_v82070 zs_v82071 ⇒
    match zs_v82071 with
    | nilUL_c11  ⇒ (consUL_c12 x_v82070 nilUL_c11)
    | consUL_c12 y_v82072 zs_v82073 ⇒
      match splitL_i45((consUL_c12 x_v82070 (consUL_c12 y_v82072 zs_v82073))) with
      | (xs_v82074, ys_v82075) ⇒
        mergeL_i47(msortL_i49(xs_v82074), msortL_i49(ys_v82075))
      end
    end
  end

val msortLclo_i89 = fn zs_v82076 ⇒ msortL_i49(zs_v82076)

fun cmsort_workerU_i54(n_v82077, zs_v82078, c_v82079) =
  let __v82080 = n_v82077 in
  if __v82080 then
    let n0_v82081 = __v82080.-1 in
    match zs_v82078 with
    | nilUU_c13  ⇒
      ln __v82082 ⇒
        let c_v82083 = send(c_v82079, (UniqU_c16 nilUU_c13 NULL)) in NULL
    | consUU_c14 z0_v82084 zs0_v82085 ⇒
      (ln c_v82086 ⇒
         match zs0_v82085 with
         | nilUU_c13  ⇒
           ln __v82087 ⇒
             let c_v82088 =
               send(c_v82086, (UniqU_c16
                                (consUU_c14 z0_v82084 nilUU_c13) NULL))
             in NULL
         | consUU_c14 z1_v82089 zs1_v82090 ⇒
           match splitU_i46((consUU_c14
                              z0_v82084 (consUU_c14 z1_v82089 zs1_v82090))) with
           | (xs0_v82091, ys0_v82092) ⇒
             ln __v82093 ⇒
               let r1_v82094 =
                 fork r1_v82095 in
                   (cmsort_workerU_i54(n0_v82081, xs0_v82091, r1_v82095))
                     NULL
               in
               let r2_v82096 =
                 fork r2_v82097 in
                   (cmsort_workerU_i54(n0_v82081, ys0_v82092, r2_v82097))
                     NULL
               in
               let __v82098 = recv(r1_v82094) in
               match __v82098 with
               | (msg1_v82099, r1_v82100) ⇒
                 let __v82101 = recv(r2_v82096) in
                 match __v82101 with
                 | (msg2_v82102, r2_v82103) ⇒
                   match msg1_v82099 with
                   | UniqU_c16 xs1_v82104 pf1_v82105 ⇒
                     match msg2_v82102 with
                     | UniqU_c16 xs2_v82106 pf2_v82107 ⇒
                       let c_v82108 =
                         send(c_v82086, (UniqU_c16
                                          mergeU_i48(xs1_v82104, xs2_v82106)
                                          NULL))
                       in
                       let __v82109 = close(r1_v82100) in
                       let __v82110 = close(r2_v82103) in NULL
                     end
                   end
                 end
               end
           end
         end)
        c_v82079
    end
  else
    ln __v82111 ⇒
      let c_v82112 = send(c_v82079, (UniqU_c16 msortU_i50(zs_v82078) NULL))
      in NULL

val cmsort_workerUclo_i90 =
  fn n_v82113 zs_v82114 ⇒
    ln c_v82115 ⇒ cmsort_workerU_i54(n_v82113, zs_v82114, c_v82115)

fun cmsort_workerL_i53(n_v82116, zs_v82117, c_v82118) =
  let __v82119 = n_v82116 in
  if __v82119 then
    let n0_v82120 = __v82119.-1 in
    match zs_v82117 with
    | nilUL_c11  ⇒
      ln __v82121 ⇒
        let c_v82122 = send(c_v82118, (UniqL_c15 nilUL_c11 NULL)) in NULL
    | consUL_c12 z0_v82123 zs0_v82124 ⇒
      (ln c_v82125 ⇒
         match zs0_v82124 with
         | nilUL_c11  ⇒
           ln __v82126 ⇒
             let c_v82127 =
               send(c_v82125, (UniqL_c15
                                (consUL_c12 z0_v82123 nilUL_c11) NULL))
             in NULL
         | consUL_c12 z1_v82128 zs1_v82129 ⇒
           match splitL_i45((consUL_c12
                              z0_v82123 (consUL_c12 z1_v82128 zs1_v82129))) with
           | (xs0_v82130, ys0_v82131) ⇒
             ln __v82132 ⇒
               let r1_v82133 =
                 fork r1_v82134 in
                   (cmsort_workerL_i53(n0_v82120, xs0_v82130, r1_v82134))
                     NULL
               in
               let r2_v82135 =
                 fork r2_v82136 in
                   (cmsort_workerL_i53(n0_v82120, ys0_v82131, r2_v82136))
                     NULL
               in
               let __v82137 = recv(r1_v82133) in
               match __v82137 with
               | (msg1_v82138, r1_v82139) ⇒
                 let __v82140 = recv(r2_v82135) in
                 match __v82140 with
                 | (msg2_v82141, r2_v82142) ⇒
                   match msg1_v82138 with
                   | UniqL_c15 xs1_v82143 pf1_v82144 ⇒
                     match msg2_v82141 with
                     | UniqL_c15 xs2_v82145 pf2_v82146 ⇒
                       let c_v82147 =
                         send(c_v82125, (UniqL_c15
                                          mergeL_i47(xs1_v82143, xs2_v82145)
                                          NULL))
                       in
                       let __v82148 = close(r1_v82139) in
                       let __v82149 = close(r2_v82142) in NULL
                     end
                   end
                 end
               end
           end
         end)
        c_v82118
    end
  else
    ln __v82150 ⇒
      let c_v82151 = send(c_v82118, (UniqL_c15 msortL_i49(zs_v82117) NULL))
      in NULL

val cmsort_workerLclo_i91 =
  fn n_v82152 zs_v82153 ⇒
    ln c_v82154 ⇒ cmsort_workerL_i53(n_v82152, zs_v82153, c_v82154)

fun cmsortU_i56(zs_v82155) =
  ln __v82156 ⇒
    let c_v82157 =
      fork c_v82158 in (cmsort_workerU_i54(4, zs_v82155, c_v82158)) NULL
    in
    let __v82159 = recv(c_v82157) in
    match __v82159 with
    | (msg_v82160, c_v82161) ⇒ let __v82162 = close(c_v82161) in msg_v82160
    end

val cmsortUclo_i92 = fn zs_v82163 ⇒ cmsortU_i56(zs_v82163)

fun cmsortL_i55(zs_v82164) =
  ln __v82165 ⇒
    let c_v82166 =
      fork c_v82167 in (cmsort_workerL_i53(4, zs_v82164, c_v82167)) NULL
    in
    let __v82168 = recv(c_v82166) in
    match __v82168 with
    | (msg_v82169, c_v82170) ⇒ let __v82171 = close(c_v82170) in msg_v82169
    end

val cmsortLclo_i93 = fn zs_v82172 ⇒ cmsortL_i55(zs_v82172)

fun mkListU_i58(n_v82173) =
  let __v82174 = n_v82173 in
  if __v82174 then
    (consUU_c14 n_v82173 mkListU_i58(__v82174.-1))
  else
    nilUU_c13

val mkListUclo_i94 = fn n_v82175 ⇒ mkListU_i58(n_v82175)

fun mkListL_i57(n_v82176) =
  let __v82177 = n_v82176 in
  if __v82177 then
    (consUL_c12 n_v82176 mkListL_i57(__v82177.-1))
  else
    nilUL_c11

val mkListLclo_i95 = fn n_v82178 ⇒ mkListL_i57(n_v82178)

fun free_i35(A_v82179, ls_v82180) =
  match ls_v82180 with
  | nilUL_c11  ⇒ NULL
  | consUL_c12 __v82181 ls_v82182 ⇒ free_i35(NULL, ls_v82182)
  end

val freeclo_i96 = fn A_v82183 ls_v82184 ⇒ free_i35(A_v82183, ls_v82184)

main =
  let msg_v82185 = (cmsortL_i55(mkListL_i57(2000000))) NULL in
  match msg_v82185 with
  | UniqL_c15 sorted_v82186 __v82187 ⇒ NULL
  end

trans3e success--------------------------

trans34 success--------------------------

