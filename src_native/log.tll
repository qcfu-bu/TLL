logical game_loop‹› (ans : nat) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ !(n : nat) → !{_ : n ≡ ans} → end | S repeat ⇒ ?(guess : nat) → !(ord : order) → !{_ : ord ≡ (
(comparen) (ans)
(guess))} → match ord as _ in _ with EQ  ⇒ end | LT  ⇒ ((game_loop)
(ans) (repeat)) | GT  ⇒ ((game_loop) (ans)
(repeat))

logical game‹› : proto = !(lower : nat) → !(upper : nat) → !{ans : nat} → !{_ : (
(lten) (lower) (ans)) ≡ true} → !{_ : ((lten) (ans)
(upper)) ≡ true} → !(repeat : nat) → ((game_loop) (ans)
(repeat))

logical loop_ch‹› (ans : nat) (repeat : nat) : L = ch‹((game_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : nat) (repeat : nat) : L = hc‹((game_loop)
(ans)
(repeat))›

logical game_ch‹› : L = ch‹game›

logical game_hc‹› : L = hc‹game›

program read_nat‹› (_ : unit) : IO nat = let s ⇐ ((readline)
(())) in match ((nat_of_string)
(s)) as _ in _ with Some n ⇒ return n | None  ⇒ let _ ⇐ ((print)
(((String) (((Char) (O.+112)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+105)))
        (((String) (((Char) (O.+110)))
         (((String) (((Char) (O.+112)))
          (((String) (((Char) (O.+117)))
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+110)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+116)))
                  (((String) (((Char) (O.+117)))
                   (((String) (((Char) (O.+114)))
                    (((String) (((Char) (O.+97)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+117)))
                         (((String) (((Char) (O.+109)))
                          (((String) (((Char) (O.+98)))
                           (((String) (((Char) (O.+101)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
(read_nat)
(()))

program player_loop‹› {ans : nat} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_hc)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let ⟨ans, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in let _ ⇐ (
                         (print)
                         (((cats)
                          (((cats)
                           (((String) (((Char) (O.+89)))
                            (((String) (((Char) (O.+111)))
                             (((String) (((Char) (O.+117)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+76)))
                                (((String) (((Char) (O.+111)))
                                 (((String) (((Char) (O.+115)))
                                  (((String) (((Char) (O.+101)))
                                   (((String) (((Char) (O.+33)))
                                    (((String) (((Char) (O.+32)))
                                     (((String) (((Char) (O.+84)))
                                      (((String) (((Char) (O.+104)))
                                       (((String) (((Char) (O.+101)))
                                        (((String) (((Char) (O.+32)))
                                         (((String) (((Char) (O.+97)))
                                          (((String) (((Char) (O.+110)))
                                           (((String) (((Char) (O.+115)))
                                            (((String) (((Char) (O.+119)))
                                             (((String) (((Char) (O.+101)))
                                              (((String) (((Char) (O.+114)))
                                               (((String) (((Char) (O.+32)))
                                                (((String)
                                                 (((Char) (O.+105)))
                                                 (((String)
                                                  (((Char) (O.+115)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))
                           (((string_of_nat) (ans)))))
                          (((String) (((Char) (O.+46)))
                           (((String) (((Char) (O.+10))) (EmptyString)))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                         (read_nat) (())) in let c ⇐ ((send c)
                         (guess)) in let ⟨ord, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                         (match ord as ord0 in (∀ (_ : hc‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                          (game_loop) (ans) (repeat)) | GT  ⇒ ((game_loop)
                          (ans)
                          (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((String) (((Char) (O.+89)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+117)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+87)))
                               (((String) (((Char) (O.+105)))
                                (((String) (((Char) (O.+110)))
                                 (((String) (((Char) (O.+33)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))))))))))))))) in close c) | LT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+108)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+115)))
                                             (((String) (((Char) (O.+115)))
                                              (((String) (((Char) (O.+101)))
                                               (((String) (((Char) (O.+114)))
                                                (((String) (((Char) (O.+44)))
                                                 (((String)
                                                  (((Char) (O.+32)))
                                                  (((String)
                                                   (((Char) (O.+121)))
                                                   (((String)
                                                    (((Char) (O.+111)))
                                                    (((String)
                                                     (((Char) (O.+117)))
                                                     (((String)
                                                      (((Char) (O.+32)))
                                                      (((String)
                                                       (((Char) (O.+104)))
                                                       (((String)
                                                        (((Char) (O.+97)))
                                                        (((String)
                                                         (((Char) (O.+118)))
                                                         (((String)
                                                          (((Char) (O.+101)))
                                                          (((String)
                                                           (((Char) (O.+32)))
                                                           (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat)
                          (c))) | GT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+103)))
                                           (((String) (((Char) (O.+114)))
                                            (((String) (((Char) (O.+101)))
                                             (((String) (((Char) (O.+97)))
                                              (((String) (((Char) (O.+116)))
                                               (((String) (((Char) (O.+101)))
                                                (((String)
                                                 (((Char) (O.+114)))
                                                 (((String)
                                                  (((Char) (O.+44)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (((String)
                                                    (((Char) (O.+121)))
                                                    (((String)
                                                     (((Char) (O.+111)))
                                                     (((String)
                                                      (((Char) (O.+117)))
                                                      (((String)
                                                       (((Char) (O.+32)))
                                                       (((String)
                                                        (((Char) (O.+104)))
                                                        (((String)
                                                         (((Char) (O.+97)))
                                                         (((String)
                                                          (((Char) (O.+118)))
                                                          (((String)
                                                           (((Char)
                                                            (O.+101)))
                                                           (((String)
                                                            (((Char)
                                                             (O.+32)))
                                                            (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program player‹› (c : game_hc) : IO unit = let ⟨lower, c⟩ ⇐ recv c in let ⟨upper, c⟩ ⇐ recv c in let ⟨{ans}, c⟩ ⇐ recv c in let ⟨{pf1}, c⟩ ⇐ recv c in let ⟨{pf2}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((cats)
   (((cats)
    (((String) (((Char) (O.+80)))
     (((String) (((Char) (O.+108)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+115)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32)))
           (((String) (((Char) (O.+109)))
            (((String) (((Char) (O.+97)))
             (((String) (((Char) (O.+107)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+32)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+103)))
                   (((String) (((Char) (O.+117)))
                    (((String) (((Char) (O.+101)))
                     (((String) (((Char) (O.+115)))
                      (((String) (((Char) (O.+115)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+98)))
                         (((String) (((Char) (O.+101)))
                          (((String) (((Char) (O.+116)))
                           (((String) (((Char) (O.+119)))
                            (((String) (((Char) (O.+101)))
                             (((String) (((Char) (O.+101)))
                              (((String) (((Char) (O.+110)))
                               (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    (((string_of_nat) (lower)))))
   (((String) (((Char) (O.+32)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+110)))
      (((String) (((Char) (O.+100)))
       (((String) (((Char) (O.+32))) (EmptyString)))))))))))))
  (((string_of_nat) (upper)))))
 (((String) (((Char) (O.+46)))
  (((String) (((Char) (O.+10))) (EmptyString)))))))) in let _ ⇐ ((print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

program server_loop‹› (ans : nat) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_ch)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let c ⇐ (
                         (send c) (ans)) in let c ⇐ ((send c)
                         (refl)) in close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨n, c⟩ ⇐ recv c in let ord = (
                         (comparen) (ans) (n)) in let c ⇐ ((send c)
                         (ord)) in let c ⇐ ((send c)
                         (refl)) in ((match ord as ord0 in (∀ (_ : ch‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                                      (game_loop) (ans)
                                      (repeat)) | GT  ⇒ ((game_loop) 
                                      (ans)
                                      (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ close c) | LT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat)
                                      (c))) | GT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program server‹› (c : game_ch) : IO unit = let lower = O.+1 in let upper = O.+128 in let res ⇐ rand lower upper in match res as _ in _ with Between ans
pf1 pf2 ⇒ let repeat = O.+7 in let c ⇐ ((send c)
(lower)) in let c ⇐ ((send c) (upper)) in let c ⇐ ((send c)
(ans)) in let c ⇐ ((send c) (pf1)) in let c ⇐ ((send c)
(pf2)) in let c ⇐ ((send c) (repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit = let c ⇐ fork (c : game_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : game_hc) → !(_ : unit) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v381 : bool) (b2_v382 : bool) ⇒
    match b1_v381 as __v383 in ??1 with
    | true ⇒ b2_v382 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v386 : bool) (b2_v387 : bool) ⇒
    match b1_v386 as __v388 in ??2 with
    | true ⇒ true | false ⇒ b2_v387
    end

program notb_i3 : bool → bool =
  fn (b_v390 : bool) ⇒
    match b_v390 as __v391 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v394 : bool) (b2_v395 : bool) ⇒
    match b1_v394 as __v396 in ??4 with
    | true ⇒
      match b2_v395 as __v397 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v395 as __v398 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v401 : nat) (y_v402 : nat) ⇒
    match x_v401 as __v403 in ??7 with
    | O ⇒ true
    | S x_v404 ⇒
      match y_v402 as __v405 in ??8 with
      | O ⇒ false | S y_v406 ⇒ (lten_i5 x_v404 y_v406)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v409 : nat) (y_v410 : nat) ⇒
    match x_v409 as __v411 in ??9 with
    | O ⇒
      match y_v410 as __v412 in ??11 with
      | O ⇒ true | S __v413 ⇒ false
      end
    | S x_v414 ⇒
      match y_v410 as __v415 in ??10 with
      | O ⇒ true | S y_v416 ⇒ (gten_i6 x_v414 y_v416)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v419 : nat) (y_v420 : nat) ⇒
    match x_v419 as __v421 in ??12 with
    | O ⇒
      match y_v420 as __v422 in ??14 with
      | O ⇒ false | S y_v423 ⇒ true
      end
    | S x_v424 ⇒
      match y_v420 as __v425 in ??13 with
      | O ⇒ false | S y_v426 ⇒ (ltn_i7 x_v424 y_v426)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v429 : nat) (y_v430 : nat) ⇒
    match x_v429 as __v431 in ??15 with
    | O ⇒ false
    | S x_v432 ⇒
      match y_v430 as __v433 in ??16 with
      | O ⇒ true | S y_v434 ⇒ (gtn_i8 x_v432 y_v434)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v437 : nat) (y_v438 : nat) ⇒
    match x_v437 as __v439 in ??17 with
    | O ⇒
      match y_v438 as __v440 in ??19 with
      | O ⇒ true | S __v441 ⇒ false
      end
    | S x_v442 ⇒
      match y_v438 as __v443 in ??18 with
      | O ⇒ false | S y_v444 ⇒ (eqn_i9 x_v442 y_v444)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v447 : nat) (n2_v448 : nat) ⇒
    match n1_v447 as __v449 in ??20 with
    | O ⇒
      match n2_v448 as __v450 in ??22 with
      | O ⇒ EQ_c3‹› | S __v451 ⇒ LT_c1‹›
      end
    | S n1_v452 ⇒
      match n2_v448 as __v453 in ??21 with
      | O ⇒ GT_c2‹› | S n2_v454 ⇒ (comparen_i10 n1_v452 n2_v454)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v456 : nat) ⇒
    match x_v456 as __v457 in ??23 with
    | O ⇒ 0 | S x_v458 ⇒ x_v458
    end

program addn_i12 : nat → nat → nat =
  fn (x_v461 : nat) (y_v462 : nat) ⇒
    match x_v461 as __v463 in ??24 with
    | O ⇒ y_v462 | S x_v464 ⇒ (addn_i12 x_v464 y_v462).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v467 : nat) (y_v468 : nat) ⇒
    match y_v468 as __v469 in ??25 with
    | O ⇒ x_v467 | S y_v470 ⇒ (subn_i13 (pred_i11 x_v467) y_v470)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v473 : nat) (y_v474 : nat) ⇒
    match x_v473 as __v475 in ??26 with
    | O ⇒ 0 | S x_v476 ⇒ (addn_i12 y_v474 (muln_i14 x_v476 y_v474))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v479 : nat) (y_v480 : nat) ⇒
    match (ltn_i7 x_v479 y_v480) as __v481 in ??27 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v479 y_v480) y_v480).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v484 : nat) (y_v485 : nat) ⇒
    (subn_i13 x_v484 (muln_i14 (divn_i15 x_v484 y_v485) y_v485))

inductive between_d2 (lower_v486 : nat) (upper_v487 : nat) : U =
| Between_c4 of
    (lower_v488 : nat) (upper_v489 : nat) (n_v490 : nat)
    {pf1_v491 : (lten_i5 lower_v488 n_v490) ≡ true}
    {pf2_v492 : (lten_i5 n_v490 upper_v489) ≡ true}
    : (between_d2 lower_v488 upper_v489)

inductive char_d3 : U =
| Char_c5 of (n_v493 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v496 : char_d3) (c2_v497 : char_d3) ⇒
    match c1_v496 as __v498 in ??30 with
    | Char_c5 n1_v499 ⇒
      match c2_v497 as __v500 in ??31 with
      | Char_c5 n2_v501 ⇒ (eqn_i9 n1_v499 n2_v501)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v504 : char_d3) (c2_v505 : char_d3) ⇒
    match c1_v504 as __v506 in ??32 with
    | Char_c5 n1_v507 ⇒
      match c2_v505 as __v508 in ??33 with
      | Char_c5 n2_v509 ⇒ (comparen_i10 n1_v507 n2_v509)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v510 : char_d3) (s_v511 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v514 : string_d4) (s2_v515 : string_d4) ⇒
    match s1_v514 as __v516 in ??34 with
    | EmptyString_c6  ⇒ s2_v515
    | String_c7 c_v517 s1_v518 ⇒
      (String_c7‹› c_v517 (cats_i19 s1_v518 s2_v515))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v520 : string_d4) ⇒
    match s_v520 as __v521 in ??35 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v522 s_v523 ⇒ (strlen_i20 s_v523).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v526 : string_d4) (s2_v527 : string_d4) ⇒
    match s1_v526 as __v528 in ??36 with
    | EmptyString_c6  ⇒
      match s2_v527 as __v529 in ??38 with
      | EmptyString_c6  ⇒ true | String_c7 __v530 __v531 ⇒ false
      end
    | String_c7 c1_v532 s1_v533 ⇒
      match s2_v527 as __v534 in ??37 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v535 s2_v536 ⇒
        (andb_i1 (eqc_i17 c1_v532 c2_v535) (eqs_i21 s1_v533 s2_v536))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v539 : string_d4) (s2_v540 : string_d4) ⇒
    match s1_v539 as __v541 in ??39 with
    | EmptyString_c6  ⇒
      match s2_v540 as __v542 in ??42 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v543 __v544 ⇒ LT_c1‹›
      end
    | String_c7 c1_v545 s1_v546 ⇒
      match s2_v540 as __v547 in ??40 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v548 s2_v549 ⇒
        match (comparec_i18 c1_v545 c2_v548) as __v550 in ??41 with
        | EQ_c3  ⇒ (compares_i22 s1_v546 s2_v549) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s551, t_s552›
  (A_v553 : Type‹s_s551›) : Type‹t_s552›
=
| None_c8 of
    ‹s_s554, t_s555› (A_v556 : Type‹s_s554›)
    : (option_d5‹s_s554, t_s555› A_v556)
| Some_c9 of
    ‹s_s557, t_s558› (A_v559 : Type‹s_s557›) (x_v560 : A_v559)
    : (option_d5‹s_s557, t_s558› A_v559)

program and_then_i23 ‹s_s561, r_s562, t_s563› :
  ∀ {A_v564 : Type‹s_s561›} →
    ∀ {B_v565 : Type‹r_s562›} →
      (option_d5‹??43, t_s563› A_v564) →
        A_v564 → (option_d5‹??44, t_s563› B_v565) ⊸
          (option_d5‹??45, t_s563› B_v565)
=
  fn {A_v569 : Type‹s_s561›} {B_v570 : Type‹r_s562›}
     (opt_v571 : (option_d5‹??43, t_s563› A_v569)) ⇒
    ln (f_v572 : ??46) ⇒
      match opt_v571 as __v573 in ??47 with
      | None_c8  ⇒ None_c8‹??50, ??49›
      | Some_c9 x_v574 ⇒ (f_v572 x_v574)
      end

inductive list_d6 ‹s_s575, t_s576›
  (A_v577 : Type‹s_s575›) : Type‹t_s576›
=
| nil_c10 of
    ‹s_s578, t_s579› (A_v580 : Type‹s_s578›)
    : (list_d6‹s_s578, t_s579› A_v580)
| cons_c11 of
    ‹s_s581, t_s582› (A_v583 : Type‹s_s581›) (hd_v584 : A_v583)
    (tl_v585 : (list_d6‹s_s581, t_s582› A_v583))
    : (list_d6‹s_s581, t_s582› A_v583)

program len_i24 ‹s_s586, t_s587› :
  ∀ {A_v588 : Type‹s_s586›} →
    (list_d6‹??51, t_s587› A_v588) →
      nat ⊗ (list_d6‹??52, t_s587› A_v588)
=
  fn {A_v591 : Type‹s_s586›}
     (xs_v592 : (list_d6‹??51, t_s587› A_v591)) ⇒
    match xs_v592 as __v593 in ??53 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??63, ??62›⟩
    | cons_c11 x_v594 xs_v595 ⇒
      match (len_i24‹??56, ??55› ??54 xs_v595) as __v596 in ??57 with
      | ⟨n_v597, xs_v598⟩ ⇒
        ⟨n_v597.+1, (cons_c11‹??60, ??59› x_v594 xs_v598)⟩
      end
    end

program append_i25 ‹s_s599, t_s600› :
  ∀ {A_v601 : Type‹s_s599›} →
    (list_d6‹??64, t_s600› A_v601) →
      (list_d6‹??65, t_s600› A_v601) ⊸ (list_d6‹??67, ??66› A_v601)
=
  fn {A_v604 : Type‹s_s599›}
     (xs_v605 : (list_d6‹??64, t_s600› A_v604)) ⇒
    ln (ys_v606 : ??68) ⇒
      match xs_v605 as __v607 in ??69 with
      | nil_c10  ⇒ ys_v606
      | cons_c11 x_v608 xs_v609 ⇒
        (cons_c11‹??75, ??74›
          x_v608 (append_i25‹??72, ??71› ??70 xs_v609 ys_v606))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v611 : unit) ⇒
    ⇑(b_v612 : bool) ⇒
      match b_v612 as __v613 in ??76 with
      | true ⇒ ⇓(__v614 : string_d4) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v616 : unit) ⇒
    ⇑(b_v617 : bool) ⇒
      match b_v617 as __v618 in ??77 with
      | true ⇒ ⇑(__v619 : string_d4) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v621 : unit) ⇒
    ⇑(b_v622 : bool) ⇒
      match b_v622 as __v623 in ??78 with
      | true ⇒ ⇑(__v624 : string_d4) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d4 =
  fn (__v626 : unit) ⇒
    let ch_v627 ⇐ open stdin in
    let ch_v628 ⇐ (send ch_v627 true) in
    let __v629 ⇐ recv ch_v628 in
    match __v629 as __v630 in ??79 with
    | ⟨s_v631, ch_v632⟩ ⇒
      let ch_v633 ⇐ (send ch_v632 false) in
      let __v634 ⇐ close ch_v633 in return s_v631
    end

program print_i33 : string_d4 → IO unit =
  fn (s_v636 : string_d4) ⇒
    let ch_v637 ⇐ open stdout in
    let ch_v638 ⇐ (send ch_v637 true) in
    let ch_v639 ⇐ (send ch_v638 s_v636) in
    let ch_v640 ⇐ (send ch_v639 false) in close ch_v640

program prerr_i34 : string_d4 → IO unit =
  fn (s_v642 : string_d4) ⇒
    let ch_v643 ⇐ open stderr in
    let ch_v644 ⇐ (send ch_v643 true) in
    let ch_v645 ⇐ (send ch_v644 s_v642) in
    let ch_v646 ⇐ (send ch_v645 false) in close ch_v646

program digits_i35 : (list_d6‹??80, U› ??81) =
  (cons_c11‹??114, ??113›
    "0"
    (cons_c11‹??111, ??110›
      "1"
      (cons_c11‹??108, ??107›
        "2"
        (cons_c11‹??105, ??104›
          "3"
          (cons_c11‹??102, ??101›
            "4"
            (cons_c11‹??99, ??98›
              "5"
              (cons_c11‹??96, ??95›
                "6"
                (cons_c11‹??93, ??92›
                  "7"
                  (cons_c11‹??90, ??89›
                    "8"
                    (cons_c11‹??87, ??86› "9" nil_c10‹??84, ??83›))))))))))

program get_at_i36 :
  ∀ {A_v647 : U} →
    nat → (list_d6‹??115, U› A_v647) → A_v647 → A_v647
=
  fn {A_v651 : U} (n_v652 : nat) (xs_v653 : (list_d6‹??115, U› A_v651))
     (a_v654 : A_v651) ⇒
    match n_v652 as __v655 in ??116 with
    | O ⇒
      match xs_v653 as __v656 in ??119 with
      | nil_c10  ⇒ a_v654 | cons_c11 x_v657 __v658 ⇒ x_v657
      end
    | S n_v659 ⇒
      match xs_v653 as __v660 in ??117 with
      | nil_c10  ⇒ a_v654
      | cons_c11 __v661 xs_v662 ⇒ (get_at_i36 ??118 n_v659 xs_v662 a_v654)
      end
    end

program string_of_digit_i37 : nat → string_d4 =
  fn (n_v664 : nat) ⇒
    (get_at_i36 ??120 n_v664 digits_i35 EmptyString_c6‹›)

program string_of_nat_i38 : nat → string_d4 =
  fn (n_v666 : nat) ⇒
    let s_v667 = (string_of_digit_i37 (modn_i16 n_v666 10)) in
    let n_v668 = (divn_i15 n_v666 10) in
    match (ltn_i7 0 n_v668) as __v669 in ??121 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v668) s_v667)
    | false ⇒ s_v667
    end

program digit_of_char_i39 : char_d3 → (option_d5‹??122, L› nat) =
  fn (c_v671 : char_d3) ⇒
    match (eqc_i17 c_v671 '0') as __v672 in ??123 with
    | true ⇒ (Some_c9‹??165, ??164› 0)
    | false ⇒
      match (eqc_i17 c_v671 '1') as __v673 in ??124 with
      | true ⇒ (Some_c9‹??162, ??161› 1)
      | false ⇒
        match (eqc_i17 c_v671 '2') as __v674 in ??125 with
        | true ⇒ (Some_c9‹??159, ??158› 2)
        | false ⇒
          match (eqc_i17 c_v671 '3') as __v675 in ??126 with
          | true ⇒ (Some_c9‹??156, ??155› 3)
          | false ⇒
            match (eqc_i17 c_v671 '4') as __v676 in ??127 with
            | true ⇒ (Some_c9‹??153, ??152› 4)
            | false ⇒
              match (eqc_i17 c_v671 '5') as __v677 in ??128 with
              | true ⇒ (Some_c9‹??150, ??149› 5)
              | false ⇒
                match (eqc_i17 c_v671 '6') as __v678 in ??129 with
                | true ⇒ (Some_c9‹??147, ??146› 6)
                | false ⇒
                  match (eqc_i17 c_v671 '7') as __v679 in ??130 with
                  | true ⇒ (Some_c9‹??144, ??143› 7)
                  | false ⇒
                    match (eqc_i17 c_v671 '8') as __v680 in ??131 with
                    | true ⇒ (Some_c9‹??141, ??140› 8)
                    | false ⇒
                      match (eqc_i17 c_v671 '9') as __v681 in ??132 with
                      | true ⇒ (Some_c9‹??138, ??137› 9)
                      | false ⇒ None_c8‹??135, ??134›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d4 → nat → (option_d5‹??166, L› nat)
=
  fn (s_v684 : string_d4) (acc_v685 : nat) ⇒
    match s_v684 as __v686 in ??167 with
    | EmptyString_c6  ⇒ (Some_c9‹??174, ??173› acc_v685)
    | String_c7 c_v687 s_v688 ⇒
      match (digit_of_char_i39 c_v687) as __v689 in ??168 with
      | None_c8  ⇒ None_c8‹??171, ??170›
      | Some_c9 n_v690 ⇒
        (nat_of_string_loop_i40
          s_v688 (addn_i12 (muln_i14 acc_v685 10) n_v690))
      end
    end

program nat_of_string_i41 : string_d4 → (option_d5‹??175, L› nat) =
  fn (s_v692 : string_d4) ⇒ (nat_of_string_loop_i40 s_v692 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v695 : nat) (repeat_v696 : nat) ⇒
    match repeat_v696 as __v697 in ??176 with
    | O ⇒ ⇑(n_v698 : nat) ⇒ ⇑{__v699 : n_v698 ≡ ans_v695} ⇒ end
    | S repeat_v700 ⇒
      ⇓(guess_v701 : nat) ⇒
        ⇑(ord_v702 : order_d1) ⇒
          ⇑{__v703 : ord_v702 ≡ (comparen_i10 ans_v695 guess_v701)} ⇒
            match ord_v702 as __v704 in ??178 with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v695 repeat_v700)
            | GT_c2  ⇒ (game_loop_i42 ans_v695 repeat_v700)
            end
    end

logical game_i43 : proto =
  ⇑(lower_v705 : nat) ⇒
    ⇑(upper_v706 : nat) ⇒
      ⇑{ans_v707 : nat} ⇒
        ⇑{__v708 : (lten_i5 lower_v705 ans_v707) ≡ true} ⇒
          ⇑{__v709 : (lten_i5 ans_v707 upper_v706) ≡ true} ⇒
            ⇑(repeat_v710 : nat) ⇒ (game_loop_i42 ans_v707 repeat_v710)

logical loop_ch_i44 : nat → nat → L =
  fn (ans_v713 : nat) (repeat_v714 : nat) ⇒
    ch⟨(game_loop_i42 ans_v713 repeat_v714)⟩

logical loop_hc_i45 : nat → nat → L =
  fn (ans_v717 : nat) (repeat_v718 : nat) ⇒
    hc⟨(game_loop_i42 ans_v717 repeat_v718)⟩

logical game_ch_i46 : L = ch⟨game_i43⟩

logical game_hc_i47 : L = hc⟨game_i43⟩

program read_nat_i48 : unit → IO nat =
  fn (__v720 : unit) ⇒
    let s_v721 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v721) as __v722 in ??182 with
    | Some_c9 n_v723 ⇒ return n_v723
    | None_c8  ⇒
      let __v724 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v725 : nat} →
    ∀ (repeat_v726 : nat) →
      (loop_hc_i45 ans_v725 repeat_v726) → IO unit
=
  fn {ans_v728 : nat} (repeat_v729 : nat)
     (c_v730 : (loop_hc_i45 ans_v728 repeat_v729)) ⇒
    (match repeat_v729 as repeat0_v731 in
       (loop_hc_i45 ans_v728 repeat0_v731) → IO unit with
     | O ⇒
       fn (c_v733 : ??190) ⇒
         let __v734 ⇐ recv c_v733 in
         match __v734 as __v735 in ??192 with
         | ⟨ans_v736, c_v737⟩ ⇒
           let __v738 ⇐ recv c_v737 in
           match __v738 as __v739 in ??191 with
           | ⟨{pf_v740}, c_v741⟩ ⇒
             let __v742 ⇐
               (print_i33
                 (cats_i19
                   (cats_i19
                     "You Lose! The answer is " (string_of_nat_i38 ans_v736))
                   ".\n"))
             in close c_v741
           end
         end
     | S repeat_v743 ⇒
       fn (c_v744 : ??183) ⇒
         let guess_v745 ⇐ (read_nat_i48 ()) in
         let c_v746 ⇐ (send c_v744 guess_v745) in
         let __v747 ⇐ recv c_v746 in
         match __v747 as __v748 in ??189 with
         | ⟨ord_v749, c_v750⟩ ⇒
           let __v751 ⇐ recv c_v750 in
           match __v751 as __v752 in ??188 with
           | ⟨{pf_v753}, c_v754⟩ ⇒
             (match ord_v749 as ord0_v755 in
                hc⟨match ord0_v755 as __v757 in ??184 with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v728 repeat_v743)
                     | GT_c2  ⇒ (game_loop_i42 ans_v728 repeat_v743)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v758 : ??187) ⇒
                  let __v759 ⇐ (print_i33 "You Win!\n") in close c_v758
              | LT_c1  ⇒
                fn (c_v760 : ??186) ⇒
                  let __v761 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v743))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v728 repeat_v743 c_v760)
              | GT_c2  ⇒
                fn (c_v762 : ??185) ⇒
                  let __v763 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v743))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v728 repeat_v743 c_v762)
              end c_v754)
           end
         end
     end c_v730)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v765 : game_hc_i47) ⇒
    let __v766 ⇐ recv c_v765 in
    match __v766 as __v767 in ??198 with
    | ⟨lower_v768, c_v769⟩ ⇒
      let __v770 ⇐ recv c_v769 in
      match __v770 as __v771 in ??197 with
      | ⟨upper_v772, c_v773⟩ ⇒
        let __v774 ⇐ recv c_v773 in
        match __v774 as __v775 in ??196 with
        | ⟨{ans_v776}, c_v777⟩ ⇒
          let __v778 ⇐ recv c_v777 in
          match __v778 as __v779 in ??195 with
          | ⟨{pf1_v780}, c_v781⟩ ⇒
            let __v782 ⇐ recv c_v781 in
            match __v782 as __v783 in ??194 with
            | ⟨{pf2_v784}, c_v785⟩ ⇒
              let __v786 ⇐ recv c_v785 in
              match __v786 as __v787 in ??193 with
              | ⟨repeat_v788, c_v789⟩ ⇒
                let __v790 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v768))
                          " and ")
                        (string_of_nat_i38 upper_v772))
                      ".\n"))
                in
                let __v791 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19 "You have " (string_of_nat_i38 repeat_v788))
                      " tries.\n"))
                in (player_loop_i49 ans_v776 repeat_v788 c_v789)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v792 : nat) →
    ∀ (repeat_v793 : nat) →
      (loop_ch_i44 ans_v792 repeat_v793) → IO unit
=
  fn (ans_v795 : nat) (repeat_v796 : nat)
     (c_v797 : (loop_ch_i44 ans_v795 repeat_v796)) ⇒
    (match repeat_v796 as repeat0_v798 in
       (loop_ch_i44 ans_v795 repeat0_v798) → IO unit with
     | O ⇒
       fn (c_v800 : ??206) ⇒
         let c_v801 ⇐ (send c_v800 ans_v795) in
         let c_v802 ⇐ (send c_v801 refl ??207) in close c_v802
     | S repeat_v803 ⇒
       fn (c_v804 : ??199) ⇒
         let __v805 ⇐ recv c_v804 in
         match __v805 as __v806 in ??205 with
         | ⟨n_v807, c_v808⟩ ⇒
           let ord_v809 = (comparen_i10 ans_v795 n_v807) in
           let c_v810 ⇐ (send c_v808 ord_v809) in
           let c_v811 ⇐ (send c_v810 refl ??200) in
           (match ord_v809 as ord0_v812 in
              ch⟨match ord0_v812 as __v814 in ??201 with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v795 repeat_v803)
                   | GT_c2  ⇒ (game_loop_i42 ans_v795 repeat_v803)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v815 : ??204) ⇒ close c_v815
            | LT_c1  ⇒
              fn (c_v816 : ??203) ⇒
                (server_loop_i51 ans_v795 repeat_v803 c_v816)
            | GT_c2  ⇒
              fn (c_v817 : ??202) ⇒
                (server_loop_i51 ans_v795 repeat_v803 c_v817)
            end c_v811)
         end
     end c_v797)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v819 : game_ch_i46) ⇒
    let lower_v820 = 1 in
    let upper_v821 = 128 in
    let res_v822 ⇐ rand lower_v820 upper_v821 in
    match res_v822 as __v823 in ??208 with
    | Between_c4 ans_v824 pf1_v825 pf2_v826 ⇒
      let repeat_v827 = 7 in
      let c_v828 ⇐ (send c_v819 lower_v820) in
      let c_v829 ⇐ (send c_v828 upper_v821) in
      let c_v830 ⇐ (send c_v829 ans_v824) in
      let c_v831 ⇐ (send c_v830 pf1_v825) in
      let c_v832 ⇐ (send c_v831 pf2_v826) in
      let c_v833 ⇐ (send c_v832 repeat_v827) in
      (server_loop_i51 ans_v824 repeat_v827 c_v833)
    end

program main_i53 : IO unit =
  let c_v834 ⇐ fork (c_v835 : game_ch_i46) in (server_i52 c_v835) in
  let c0_v836 ⇐
    fork (c0_v837 :
      ch⟨⇓(__v838 : game_hc_i47) ⇒ ⇑(__v839 : unit) ⇒ end⟩)
    in
      let __v840 ⇐ recv c0_v837 in
      match __v840 as __v841 in ??209 with
      | ⟨c_v842, c0_v843⟩ ⇒
        let __v844 ⇐ (player_i50 c_v842) in
        let c0_v845 ⇐ (send c0_v843 ()) in close c0_v845
      end
  in
  let c0_v846 ⇐ (send c0_v836 c_v834) in
  let __v847 ⇐ recv c0_v846 in
  match __v847 as __v848 in ??210 with
  | ⟨__v849, c0_v850⟩ ⇒ close c0_v850
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v34587 : bool) (b2_v34588 : bool) ⇒
    match b1_v34587 as __v34589 in bool with
    | true ⇒ b2_v34588 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v34592 : bool) (b2_v34593 : bool) ⇒
    match b1_v34592 as __v34594 in bool with
    | true ⇒ true | false ⇒ b2_v34593
    end

program notb_i3 : bool → bool =
  fn (b_v34596 : bool) ⇒
    match b_v34596 as __v34597 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v34600 : bool) (b2_v34601 : bool) ⇒
    match b1_v34600 as __v34602 in order_d1 with
    | true ⇒
      match b2_v34601 as __v34603 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v34601 as __v34604 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v34607 : nat) (y_v34608 : nat) ⇒
    match x_v34607 as __v34609 in bool with
    | O ⇒ true
    | S x_v34610 ⇒
      match y_v34608 as __v34611 in bool with
      | O ⇒ false | S y_v34612 ⇒ (lten_i5 x_v34610 y_v34612)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v34615 : nat) (y_v34616 : nat) ⇒
    match x_v34615 as __v34617 in bool with
    | O ⇒
      match y_v34616 as __v34618 in bool with
      | O ⇒ true | S __v34619 ⇒ false
      end
    | S x_v34620 ⇒
      match y_v34616 as __v34621 in bool with
      | O ⇒ true | S y_v34622 ⇒ (gten_i6 x_v34620 y_v34622)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v34625 : nat) (y_v34626 : nat) ⇒
    match x_v34625 as __v34627 in bool with
    | O ⇒
      match y_v34626 as __v34628 in bool with
      | O ⇒ false | S y_v34629 ⇒ true
      end
    | S x_v34630 ⇒
      match y_v34626 as __v34631 in bool with
      | O ⇒ false | S y_v34632 ⇒ (ltn_i7 x_v34630 y_v34632)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v34635 : nat) (y_v34636 : nat) ⇒
    match x_v34635 as __v34637 in bool with
    | O ⇒ false
    | S x_v34638 ⇒
      match y_v34636 as __v34639 in bool with
      | O ⇒ true | S y_v34640 ⇒ (gtn_i8 x_v34638 y_v34640)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v34643 : nat) (y_v34644 : nat) ⇒
    match x_v34643 as __v34645 in bool with
    | O ⇒
      match y_v34644 as __v34646 in bool with
      | O ⇒ true | S __v34647 ⇒ false
      end
    | S x_v34648 ⇒
      match y_v34644 as __v34649 in bool with
      | O ⇒ false | S y_v34650 ⇒ (eqn_i9 x_v34648 y_v34650)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v34653 : nat) (n2_v34654 : nat) ⇒
    match n1_v34653 as __v34655 in order_d1 with
    | O ⇒
      match n2_v34654 as __v34656 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v34657 ⇒ LT_c1‹›
      end
    | S n1_v34658 ⇒
      match n2_v34654 as __v34659 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v34660 ⇒ (comparen_i10 n1_v34658 n2_v34660)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v34662 : nat) ⇒
    match x_v34662 as __v34663 in nat with
    | O ⇒ 0 | S x_v34664 ⇒ x_v34664
    end

program addn_i12 : nat → nat → nat =
  fn (x_v34667 : nat) (y_v34668 : nat) ⇒
    match x_v34667 as __v34669 in nat with
    | O ⇒ y_v34668 | S x_v34670 ⇒ (addn_i12 x_v34670 y_v34668).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v34673 : nat) (y_v34674 : nat) ⇒
    match y_v34674 as __v34675 in nat with
    | O ⇒ x_v34673 | S y_v34676 ⇒ (subn_i13 (pred_i11 x_v34673) y_v34676)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v34679 : nat) (y_v34680 : nat) ⇒
    match x_v34679 as __v34681 in nat with
    | O ⇒ 0
    | S x_v34682 ⇒ (addn_i12 y_v34680 (muln_i14 x_v34682 y_v34680))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v34685 : nat) (y_v34686 : nat) ⇒
    match (ltn_i7 x_v34685 y_v34686) as __v34687 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v34685 y_v34686) y_v34686).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v34690 : nat) (y_v34691 : nat) ⇒
    (subn_i13 x_v34690 (muln_i14 (divn_i15 x_v34690 y_v34691) y_v34691))

inductive between_d2 (lower_v34692 : nat) (upper_v34693 : nat) : U =
| Between_c4 of
    (lower_v34694 : nat) (upper_v34695 : nat) (n_v34696 : nat)
    {pf1_v34697 : (lten_i5 lower_v34694 n_v34696) ≡ true}
    {pf2_v34698 : (lten_i5 n_v34696 upper_v34695) ≡ true}
    : (between_d2 lower_v34694 upper_v34695)

inductive char_d3 : U =
| Char_c5 of (n_v34699 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v34702 : char_d3) (c2_v34703 : char_d3) ⇒
    match c1_v34702 as __v34704 in bool with
    | Char_c5 n1_v34705 ⇒
      match c2_v34703 as __v34706 in bool with
      | Char_c5 n2_v34707 ⇒ (eqn_i9 n1_v34705 n2_v34707)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v34710 : char_d3) (c2_v34711 : char_d3) ⇒
    match c1_v34710 as __v34712 in order_d1 with
    | Char_c5 n1_v34713 ⇒
      match c2_v34711 as __v34714 in order_d1 with
      | Char_c5 n2_v34715 ⇒ (comparen_i10 n1_v34713 n2_v34715)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v34716 : char_d3) (s_v34717 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v34720 : string_d4) (s2_v34721 : string_d4) ⇒
    match s1_v34720 as __v34722 in string_d4 with
    | EmptyString_c6  ⇒ s2_v34721
    | String_c7 c_v34723 s1_v34724 ⇒
      (String_c7‹› c_v34723 (cats_i19 s1_v34724 s2_v34721))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v34726 : string_d4) ⇒
    match s_v34726 as __v34727 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v34728 s_v34729 ⇒ (strlen_i20 s_v34729).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v34732 : string_d4) (s2_v34733 : string_d4) ⇒
    match s1_v34732 as __v34734 in bool with
    | EmptyString_c6  ⇒
      match s2_v34733 as __v34735 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v34736 __v34737 ⇒ false
      end
    | String_c7 c1_v34738 s1_v34739 ⇒
      match s2_v34733 as __v34740 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v34741 s2_v34742 ⇒
        (andb_i1 (eqc_i17 c1_v34738 c2_v34741) (eqs_i21 s1_v34739 s2_v34742))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v34745 : string_d4) (s2_v34746 : string_d4) ⇒
    match s1_v34745 as __v34747 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v34746 as __v34748 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v34749 __v34750 ⇒ LT_c1‹›
      end
    | String_c7 c1_v34751 s1_v34752 ⇒
      match s2_v34746 as __v34753 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v34754 s2_v34755 ⇒
        match (comparec_i18 c1_v34751 c2_v34754) as __v34756 in order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v34752 s2_v34755)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s34757, t_s34758›
  (A_v34759 : Type‹s_s34757›) : Type‹t_s34758›
=
| None_c8 of
    ‹s_s34760, t_s34761› (A_v34762 : Type‹s_s34760›)
    : (option_d5‹s_s34760, t_s34761› A_v34762)
| Some_c9 of
    ‹s_s34763, t_s34764› (A_v34765 : Type‹s_s34763›)
    (x_v34766 : A_v34765) : (option_d5‹s_s34763, t_s34764› A_v34765)

program and_then_i23 ‹s_s34767, r_s34768, t_s34769› :
  ∀ {A_v34770 : Type‹s_s34767›} →
    ∀ {B_v34771 : Type‹r_s34768›} →
      (option_d5‹s_s34767, t_s34769› A_v34770) →
        A_v34770 → (option_d5‹r_s34768, t_s34769› B_v34771) ⊸
          (option_d5‹r_s34768, t_s34769› B_v34771)
=
  fn {A_v34775 : Type‹s_s34767›} {B_v34776 : Type‹r_s34768›}
     (opt_v34777 : (option_d5‹s_s34767, t_s34769› A_v34775)) ⇒
    ln (f_v34778 : A_v34775 → (option_d5‹r_s34768, t_s34769› B_v34776)) ⇒
      match opt_v34777 as __v34780 in
        (option_d5‹r_s34768, t_s34769› B_v34776) with
      | None_c8  ⇒ None_c8‹r_s34768, t_s34769›
      | Some_c9 x_v34781 ⇒ (f_v34778 x_v34781)
      end

inductive list_d6 ‹s_s34782, t_s34783›
  (A_v34784 : Type‹s_s34782›) : Type‹t_s34783›
=
| nil_c10 of
    ‹s_s34785, t_s34786› (A_v34787 : Type‹s_s34785›)
    : (list_d6‹s_s34785, t_s34786› A_v34787)
| cons_c11 of
    ‹s_s34788, t_s34789› (A_v34790 : Type‹s_s34788›)
    (hd_v34791 : A_v34790)
    (tl_v34792 : (list_d6‹s_s34788, t_s34789› A_v34790))
    : (list_d6‹s_s34788, t_s34789› A_v34790)

program len_i24 ‹s_s34793, t_s34794› :
  ∀ {A_v34795 : Type‹s_s34793›} →
    (list_d6‹s_s34793, t_s34794› A_v34795) →
      nat ⊗ (list_d6‹s_s34793, t_s34794› A_v34795)
=
  fn {A_v34798 : Type‹s_s34793›}
     (xs_v34799 : (list_d6‹s_s34793, t_s34794› A_v34798)) ⇒
    match xs_v34799 as __v34800 in
      nat ⊗ (list_d6‹s_s34793, t_s34794› A_v34798) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s34793, t_s34794›⟩
    | cons_c11 x_v34802 xs_v34803 ⇒
      match (len_i24‹s_s34793, t_s34794› A_v34798 xs_v34803) as __v34804 in
        nat ⊗ (list_d6‹s_s34793, t_s34794› A_v34798) with
      | ⟨n_v34806, xs_v34807⟩ ⇒
        ⟨n_v34806.+1, (cons_c11‹s_s34793, t_s34794› x_v34802 xs_v34807)⟩
      end
    end

program append_i25 ‹s_s34808, t_s34809› :
  ∀ {A_v34810 : Type‹s_s34808›} →
    (list_d6‹s_s34808, t_s34809› A_v34810) →
      (list_d6‹s_s34808, t_s34809› A_v34810) ⊸
        (list_d6‹s_s34808, t_s34809› A_v34810)
=
  fn {A_v34813 : Type‹s_s34808›}
     (xs_v34814 : (list_d6‹s_s34808, t_s34809› A_v34813)) ⇒
    ln (ys_v34815 : (list_d6‹s_s34808, t_s34809› A_v34813)) ⇒
      match xs_v34814 as __v34816 in
        (list_d6‹s_s34808, t_s34809› A_v34813) with
      | nil_c10  ⇒ ys_v34815
      | cons_c11 x_v34817 xs_v34818 ⇒
        (cons_c11‹s_s34808, t_s34809›
          x_v34817
          (append_i25‹s_s34808, t_s34809› A_v34813 xs_v34818 ys_v34815))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v34820 : unit) ⇒
    ⇑(b_v34821 : bool) ⇒
      match b_v34821 as __v34822 in proto with
      | true ⇒ ⇓(__v34823 : string_d4) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v34825 : unit) ⇒
    ⇑(b_v34826 : bool) ⇒
      match b_v34826 as __v34827 in proto with
      | true ⇒ ⇑(__v34828 : string_d4) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v34830 : unit) ⇒
    ⇑(b_v34831 : bool) ⇒
      match b_v34831 as __v34832 in proto with
      | true ⇒ ⇑(__v34833 : string_d4) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d4 =
  fn (__v34835 : unit) ⇒
    let ch_v34836 ⇐ open stdin in
    let ch_v34837 ⇐ (send ch_v34836 true) in
    let __v34838 ⇐ recv ch_v34837 in
    match __v34838 as __v34839 in IO string_d4 with
    | ⟨s_v34840, ch_v34841⟩ ⇒
      let ch_v34842 ⇐ (send ch_v34841 false) in
      let __v34843 ⇐ close ch_v34842 in return s_v34840
    end

program print_i33 : string_d4 → IO unit =
  fn (s_v34845 : string_d4) ⇒
    let ch_v34846 ⇐ open stdout in
    let ch_v34847 ⇐ (send ch_v34846 true) in
    let ch_v34848 ⇐ (send ch_v34847 s_v34845) in
    let ch_v34849 ⇐ (send ch_v34848 false) in close ch_v34849

program prerr_i34 : string_d4 → IO unit =
  fn (s_v34851 : string_d4) ⇒
    let ch_v34852 ⇐ open stderr in
    let ch_v34853 ⇐ (send ch_v34852 true) in
    let ch_v34854 ⇐ (send ch_v34853 s_v34851) in
    let ch_v34855 ⇐ (send ch_v34854 false) in close ch_v34855

program digits_i35 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i36 :
  ∀ {A_v34856 : U} →
    nat → (list_d6‹U, U› A_v34856) → A_v34856 → A_v34856
=
  fn {A_v34860 : U} (n_v34861 : nat)
     (xs_v34862 : (list_d6‹U, U› A_v34860)) (a_v34863 : A_v34860) ⇒
    match n_v34861 as __v34864 in A_v34860 with
    | O ⇒
      match xs_v34862 as __v34865 in A_v34860 with
      | nil_c10  ⇒ a_v34863 | cons_c11 x_v34866 __v34867 ⇒ x_v34866
      end
    | S n_v34868 ⇒
      match xs_v34862 as __v34869 in A_v34860 with
      | nil_c10  ⇒ a_v34863
      | cons_c11 __v34870 xs_v34871 ⇒
        (get_at_i36 A_v34860 n_v34868 xs_v34871 a_v34863)
      end
    end

program string_of_digit_i37 : nat → string_d4 =
  fn (n_v34873 : nat) ⇒
    (get_at_i36 string_d4 n_v34873 digits_i35 EmptyString_c6‹›)

program string_of_nat_i38 : nat → string_d4 =
  fn (n_v34875 : nat) ⇒
    let s_v34876 = (string_of_digit_i37 (modn_i16 n_v34875 10)) in
    let n_v34877 = (divn_i15 n_v34875 10) in
    match (ltn_i7 0 n_v34877) as __v34878 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v34877) s_v34876)
    | false ⇒ s_v34876
    end

program digit_of_char_i39 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v34880 : char_d3) ⇒
    match (eqc_i17 c_v34880 '0') as __v34881 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v34880 '1') as __v34882 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v34880 '2') as __v34883 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v34880 '3') as __v34884 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v34880 '4') as __v34885 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v34880 '5') as __v34886 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v34880 '6') as __v34887 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v34880 '7') as __v34888 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v34880 '8') as __v34889 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v34880 '9') as __v34890 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v34893 : string_d4) (acc_v34894 : nat) ⇒
    match s_v34893 as __v34895 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v34894)
    | String_c7 c_v34896 s_v34897 ⇒
      match (digit_of_char_i39 c_v34896) as __v34898 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v34899 ⇒
        (nat_of_string_loop_i40
          s_v34897 (addn_i12 (muln_i14 acc_v34894 10) n_v34899))
      end
    end

program nat_of_string_i41 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v34901 : string_d4) ⇒ (nat_of_string_loop_i40 s_v34901 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v34904 : nat) (repeat_v34905 : nat) ⇒
    match repeat_v34905 as __v34906 in proto with
    | O ⇒
      ⇑(n_v34907 : nat) ⇒ ⇑{__v34908 : n_v34907 ≡ ans_v34904} ⇒ end
    | S repeat_v34909 ⇒
      ⇓(guess_v34910 : nat) ⇒
        ⇑(ord_v34911 : order_d1) ⇒
          ⇑{__v34912 :
            ord_v34911 ≡ (comparen_i10 ans_v34904 guess_v34910)} ⇒
            match ord_v34911 as __v34913 in proto with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v34904 repeat_v34909)
            | GT_c2  ⇒ (game_loop_i42 ans_v34904 repeat_v34909)
            end
    end

logical game_i43 : proto =
  ⇑(lower_v34914 : nat) ⇒
    ⇑(upper_v34915 : nat) ⇒
      ⇑{ans_v34916 : nat} ⇒
        ⇑{__v34917 : (lten_i5 lower_v34914 ans_v34916) ≡ true} ⇒
          ⇑{__v34918 : (lten_i5 ans_v34916 upper_v34915) ≡ true} ⇒
            ⇑(repeat_v34919 : nat) ⇒
              (game_loop_i42 ans_v34916 repeat_v34919)

logical loop_ch_i44 : nat → nat → L =
  fn (ans_v34922 : nat) (repeat_v34923 : nat) ⇒
    ch⟨(game_loop_i42 ans_v34922 repeat_v34923)⟩

logical loop_hc_i45 : nat → nat → L =
  fn (ans_v34926 : nat) (repeat_v34927 : nat) ⇒
    hc⟨(game_loop_i42 ans_v34926 repeat_v34927)⟩

logical game_ch_i46 : L = ch⟨game_i43⟩

logical game_hc_i47 : L = hc⟨game_i43⟩

program read_nat_i48 : unit → IO nat =
  fn (__v34929 : unit) ⇒
    let s_v34930 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v34930) as __v34931 in IO (nat : U) with
    | Some_c9 n_v34932 ⇒ return n_v34932
    | None_c8  ⇒
      let __v34933 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v34934 : nat} →
    ∀ (repeat_v34935 : nat) →
      (loop_hc_i45 ans_v34934 repeat_v34935) → IO unit
=
  fn {ans_v34937 : nat} (repeat_v34938 : nat)
     (c_v34939 : (loop_hc_i45 ans_v34937 repeat_v34938)) ⇒
    (match repeat_v34938 as repeat0_v34940 in
       (loop_hc_i45 ans_v34937 repeat0_v34940) → IO unit with
     | O ⇒
       fn (c_v34942 : (loop_hc_i45 ans_v34937 0)) ⇒
         let __v34943 ⇐ recv c_v34942 in
         match __v34943 as __v34944 in IO unit with
         | ⟨ans_v34945, c_v34946⟩ ⇒
           let __v34947 ⇐ recv c_v34946 in
           match __v34947 as __v34948 in IO unit with
           | ⟨{pf_v34949}, c_v34950⟩ ⇒
             let __v34951 ⇐
               (print_i33
                 (cats_i19
                   (cats_i19
                     "You Lose! The answer is "
                     (string_of_nat_i38 ans_v34945))
                   ".\n"))
             in close c_v34950
           end
         end
     | S repeat_v34952 ⇒
       fn (c_v34953 : (loop_hc_i45 ans_v34937 repeat_v34952.+1)) ⇒
         let guess_v34954 ⇐ (read_nat_i48 ()) in
         let c_v34955 ⇐ (send c_v34953 guess_v34954) in
         let __v34956 ⇐ recv c_v34955 in
         match __v34956 as __v34957 in IO unit with
         | ⟨ord_v34958, c_v34959⟩ ⇒
           let __v34960 ⇐ recv c_v34959 in
           match __v34960 as __v34961 in IO unit with
           | ⟨{pf_v34962}, c_v34963⟩ ⇒
             (match ord_v34958 as ord0_v34964 in
                hc⟨match ord0_v34964 as __v34966 in proto with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v34937 repeat_v34952)
                     | GT_c2  ⇒ (game_loop_i42 ans_v34937 repeat_v34952)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v34967 : hc⟨end⟩) ⇒
                  let __v34968 ⇐ (print_i33 "You Win!\n") in close c_v34967
              | LT_c1  ⇒
                fn (c_v34969 : hc⟨(game_loop_i42 ans_v34937 repeat_v34952)⟩) ⇒
                  let __v34970 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v34952))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v34937 repeat_v34952 c_v34969)
              | GT_c2  ⇒
                fn (c_v34971 : hc⟨(game_loop_i42 ans_v34937 repeat_v34952)⟩) ⇒
                  let __v34972 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v34952))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v34937 repeat_v34952 c_v34971)
              end c_v34963)
           end
         end
     end c_v34939)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v34974 : game_hc_i47) ⇒
    let __v34975 ⇐ recv c_v34974 in
    match __v34975 as __v34976 in IO unit with
    | ⟨lower_v34977, c_v34978⟩ ⇒
      let __v34979 ⇐ recv c_v34978 in
      match __v34979 as __v34980 in IO unit with
      | ⟨upper_v34981, c_v34982⟩ ⇒
        let __v34983 ⇐ recv c_v34982 in
        match __v34983 as __v34984 in IO unit with
        | ⟨{ans_v34985}, c_v34986⟩ ⇒
          let __v34987 ⇐ recv c_v34986 in
          match __v34987 as __v34988 in IO unit with
          | ⟨{pf1_v34989}, c_v34990⟩ ⇒
            let __v34991 ⇐ recv c_v34990 in
            match __v34991 as __v34992 in IO unit with
            | ⟨{pf2_v34993}, c_v34994⟩ ⇒
              let __v34995 ⇐ recv c_v34994 in
              match __v34995 as __v34996 in IO unit with
              | ⟨repeat_v34997, c_v34998⟩ ⇒
                let __v34999 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v34977))
                          " and ")
                        (string_of_nat_i38 upper_v34981))
                      ".\n"))
                in
                let __v35000 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        "You have " (string_of_nat_i38 repeat_v34997))
                      " tries.\n"))
                in (player_loop_i49 ans_v34985 repeat_v34997 c_v34998)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v35001 : nat) →
    ∀ (repeat_v35002 : nat) →
      (loop_ch_i44 ans_v35001 repeat_v35002) → IO unit
=
  fn (ans_v35004 : nat) (repeat_v35005 : nat)
     (c_v35006 : (loop_ch_i44 ans_v35004 repeat_v35005)) ⇒
    (match repeat_v35005 as repeat0_v35007 in
       (loop_ch_i44 ans_v35004 repeat0_v35007) → IO unit with
     | O ⇒
       fn (c_v35009 : (loop_ch_i44 ans_v35004 0)) ⇒
         let c_v35010 ⇐ (send c_v35009 ans_v35004) in
         let c_v35011 ⇐ (send c_v35010 refl ans_v35004) in close c_v35011
     | S repeat_v35012 ⇒
       fn (c_v35013 : (loop_ch_i44 ans_v35004 repeat_v35012.+1)) ⇒
         let __v35014 ⇐ recv c_v35013 in
         match __v35014 as __v35015 in IO unit with
         | ⟨n_v35016, c_v35017⟩ ⇒
           let ord_v35018 = (comparen_i10 ans_v35004 n_v35016) in
           let c_v35019 ⇐ (send c_v35017 ord_v35018) in
           let c_v35020 ⇐
             (send c_v35019 refl (comparen_i10 ans_v35004 n_v35016))
           in
           (match ord_v35018 as ord0_v35021 in
              ch⟨match ord0_v35021 as __v35023 in proto with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v35004 repeat_v35012)
                   | GT_c2  ⇒ (game_loop_i42 ans_v35004 repeat_v35012)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v35024 : ch⟨end⟩) ⇒ close c_v35024
            | LT_c1  ⇒
              fn (c_v35025 : ch⟨(game_loop_i42 ans_v35004 repeat_v35012)⟩) ⇒
                (server_loop_i51 ans_v35004 repeat_v35012 c_v35025)
            | GT_c2  ⇒
              fn (c_v35026 : ch⟨(game_loop_i42 ans_v35004 repeat_v35012)⟩) ⇒
                (server_loop_i51 ans_v35004 repeat_v35012 c_v35026)
            end c_v35020)
         end
     end c_v35006)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v35028 : game_ch_i46) ⇒
    let lower_v35029 = 1 in
    let upper_v35030 = 128 in
    let res_v35031 ⇐ rand lower_v35029 upper_v35030 in
    match res_v35031 as __v35032 in IO unit with
    | Between_c4 ans_v35033 pf1_v35034 pf2_v35035 ⇒
      let repeat_v35036 = 7 in
      let c_v35037 ⇐ (send c_v35028 lower_v35029) in
      let c_v35038 ⇐ (send c_v35037 upper_v35030) in
      let c_v35039 ⇐ (send c_v35038 ans_v35033) in
      let c_v35040 ⇐ (send c_v35039 pf1_v35034) in
      let c_v35041 ⇐ (send c_v35040 pf2_v35035) in
      let c_v35042 ⇐ (send c_v35041 repeat_v35036) in
      (server_loop_i51 ans_v35033 repeat_v35036 c_v35042)
    end

program main_i53 : IO unit =
  let c_v35043 ⇐ fork (c_v35044 : game_ch_i46) in (server_i52 c_v35044) in
  let c0_v35045 ⇐
    fork (c0_v35046 :
      ch⟨⇓(__v35047 : game_hc_i47) ⇒ ⇑(__v35048 : unit) ⇒ end⟩)
    in
      let __v35049 ⇐ recv c0_v35046 in
      match __v35049 as __v35050 in IO unit with
      | ⟨c_v35051, c0_v35052⟩ ⇒
        let __v35053 ⇐ (player_i50 c_v35051) in
        let c0_v35054 ⇐ (send c0_v35052 ()) in close c0_v35054
      end
  in
  let c0_v35055 ⇐ (send c0_v35045 c_v35043) in
  let __v35056 ⇐ recv c0_v35055 in
  match __v35056 as __v35057 in IO unit with
  | ⟨__v35058, c0_v35059⟩ ⇒ close c0_v35059
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v35861 b2_v35862 ⇒
    match b1_v35861 with
    | true ⇒ b2_v35862 | false ⇒ false
    end

def orb_i2 =
  fn b1_v35863 b2_v35864 ⇒
    match b1_v35863 with
    | true ⇒ true | false ⇒ b2_v35864
    end

def notb_i3 =
  fn b_v35865 ⇒ match b_v35865 with
                  | true ⇒ false | false ⇒ true
                  end

def compareb_i4 =
  fn b1_v35866 b2_v35867 ⇒
    match b1_v35866 with
    | true ⇒ match b2_v35867 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v35867 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v35868 y_v35869 ⇒
    match x_v35868 with
    | O ⇒ true
    | S x_v35870 ⇒
      match y_v35869 with
      | O ⇒ false | S y_v35871 ⇒ ((lten_i5 x_v35870) y_v35871)
      end
    end

def gten_i6 =
  fn x_v35872 y_v35873 ⇒
    match x_v35872 with
    | O ⇒ match y_v35873 with
            | O ⇒ true | S __v35874 ⇒ false
            end
    | S x_v35875 ⇒
      match y_v35873 with
      | O ⇒ true | S y_v35876 ⇒ ((gten_i6 x_v35875) y_v35876)
      end
    end

def ltn_i7 =
  fn x_v35877 y_v35878 ⇒
    match x_v35877 with
    | O ⇒ match y_v35878 with
            | O ⇒ false | S y_v35879 ⇒ true
            end
    | S x_v35880 ⇒
      match y_v35878 with
      | O ⇒ false | S y_v35881 ⇒ ((ltn_i7 x_v35880) y_v35881)
      end
    end

def gtn_i8 =
  fn x_v35882 y_v35883 ⇒
    match x_v35882 with
    | O ⇒ false
    | S x_v35884 ⇒
      match y_v35883 with
      | O ⇒ true | S y_v35885 ⇒ ((gtn_i8 x_v35884) y_v35885)
      end
    end

def eqn_i9 =
  fn x_v35886 y_v35887 ⇒
    match x_v35886 with
    | O ⇒ match y_v35887 with
            | O ⇒ true | S __v35888 ⇒ false
            end
    | S x_v35889 ⇒
      match y_v35887 with
      | O ⇒ false | S y_v35890 ⇒ ((eqn_i9 x_v35889) y_v35890)
      end
    end

def comparen_i10 =
  fn n1_v35891 n2_v35892 ⇒
    match n1_v35891 with
    | O ⇒ match n2_v35892 with
            | O ⇒ EQ_c3 | S __v35893 ⇒ LT_c1
            end
    | S n1_v35894 ⇒
      match n2_v35892 with
      | O ⇒ GT_c2 | S n2_v35895 ⇒ ((comparen_i10 n1_v35894) n2_v35895)
      end
    end

def pred_i11 =
  fn x_v35896 ⇒ match x_v35896 with
                  | O ⇒ 0 | S x_v35897 ⇒ x_v35897
                  end

def addn_i12 =
  fn x_v35898 y_v35899 ⇒
    match x_v35898 with
    | O ⇒ y_v35899 | S x_v35900 ⇒ ((addn_i12 x_v35900) y_v35899).+1
    end

def subn_i13 =
  fn x_v35901 y_v35902 ⇒
    match y_v35902 with
    | O ⇒ x_v35901
    | S y_v35903 ⇒ ((subn_i13 (pred_i11 x_v35901)) y_v35903)
    end

def muln_i14 =
  fn x_v35904 y_v35905 ⇒
    match x_v35904 with
    | O ⇒ 0
    | S x_v35906 ⇒ ((addn_i12 y_v35905) ((muln_i14 x_v35906) y_v35905))
    end

def divn_i15 =
  fn x_v35907 y_v35908 ⇒
    match ((ltn_i7 x_v35907) y_v35908) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v35907) y_v35908)) y_v35908).+1
    end

def modn_i16 =
  fn x_v35909 y_v35910 ⇒
    ((subn_i13 x_v35909)
      ((muln_i14 ((divn_i15 x_v35909) y_v35910)) y_v35910))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v35911 c2_v35912 ⇒
    match c1_v35911 with
    | Char_c5 n1_v35913 ⇒
      match c2_v35912 with
      | Char_c5 n2_v35914 ⇒ ((eqn_i9 n1_v35913) n2_v35914)
      end
    end

def comparec_i18 =
  fn c1_v35915 c2_v35916 ⇒
    match c1_v35915 with
    | Char_c5 n1_v35917 ⇒
      match c2_v35916 with
      | Char_c5 n2_v35918 ⇒ ((comparen_i10 n1_v35917) n2_v35918)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v35919 s2_v35920 ⇒
    match s1_v35919 with
    | EmptyString_c6  ⇒ s2_v35920
    | String_c7 c_v35921 s1_v35922 ⇒
      (String_c7 c_v35921 ((cats_i19 s1_v35922) s2_v35920))
    end

def strlen_i20 =
  fn s_v35923 ⇒
    match s_v35923 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v35924 s_v35925 ⇒ (strlen_i20 s_v35925).+1
    end

def eqs_i21 =
  fn s1_v35926 s2_v35927 ⇒
    match s1_v35926 with
    | EmptyString_c6  ⇒
      match s2_v35927 with
      | EmptyString_c6  ⇒ true | String_c7 __v35928 __v35929 ⇒ false
      end
    | String_c7 c1_v35930 s1_v35931 ⇒
      match s2_v35927 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v35932 s2_v35933 ⇒
        ((andb_i1 ((eqc_i17 c1_v35930) c2_v35932))
          ((eqs_i21 s1_v35931) s2_v35933))
      end
    end

def compares_i22 =
  fn s1_v35934 s2_v35935 ⇒
    match s1_v35934 with
    | EmptyString_c6  ⇒
      match s2_v35935 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v35936 __v35937 ⇒ LT_c1
      end
    | String_c7 c1_v35938 s1_v35939 ⇒
      match s2_v35935 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v35940 s2_v35941 ⇒
        match ((comparec_i18 c1_v35938) c2_v35940) with
        | EQ_c3  ⇒ ((compares_i22 s1_v35939) s2_v35941) | LT_c1  ⇒ LT_c1
        | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d10 =
| NoneUU_c18 of size(0) | SomeUU_c19 of size(1)

data optionUL_d9 =
| NoneUL_c16 of size(0) | SomeUL_c17 of size(1)

data optionLU_d8 =
| NoneLU_c14 of size(0)

data optionLL_d7 =
| NoneLL_c12 of size(0) | SomeLL_c13 of size(1)

def and_thenUUU_i61 =
  fn A_v35942 B_v35943 opt_v35944 ⇒
    ln f_v35945 ⇒
      match opt_v35944 with
      | NoneUU_c18  ⇒ NoneUU_c18
      | SomeUU_c19 x_v35946 ⇒ (f_v35945 x_v35946)
      end

def and_thenUUL_i60 =
  fn A_v35947 B_v35948 opt_v35949 ⇒
    ln f_v35950 ⇒
      match opt_v35949 with
      | NoneUL_c16  ⇒ NoneUL_c16
      | SomeUL_c17 x_v35951 ⇒ (f_v35950 x_v35951)
      end

def and_thenULU_i59 =
  fn A_v35952 B_v35953 opt_v35954 ⇒
    ln f_v35955 ⇒
      match opt_v35954 with
      | NoneUU_c18  ⇒ NoneLU_c14
      | SomeUU_c19 x_v35956 ⇒ (f_v35955 x_v35956)
      end

def and_thenULL_i58 =
  fn A_v35957 B_v35958 opt_v35959 ⇒
    ln f_v35960 ⇒
      match opt_v35959 with
      | NoneUL_c16  ⇒ NoneLL_c12
      | SomeUL_c17 x_v35961 ⇒ (f_v35960 x_v35961)
      end

def and_thenLUL_i56 =
  fn A_v35962 B_v35963 opt_v35964 ⇒
    ln f_v35965 ⇒
      match opt_v35964 with
      | NoneLL_c12  ⇒ NoneUL_c16
      | SomeLL_c13 x_v35966 ⇒ (f_v35965 x_v35966)
      end

def and_thenLLL_i54 =
  fn A_v35967 B_v35968 opt_v35969 ⇒
    ln f_v35970 ⇒
      match opt_v35969 with
      | NoneLL_c12  ⇒ NoneLL_c12
      | SomeLL_c13 x_v35971 ⇒ (f_v35970 x_v35971)
      end

data listUU_d14 =
| nilUU_c26 of size(0) | consUU_c27 of size(2)

data listUL_d13 =
| nilUL_c24 of size(0) | consUL_c25 of size(2)

data listLU_d12 =
| nilLU_c22 of size(0)

data listLL_d11 =
| nilLL_c20 of size(0) | consLL_c21 of size(2)

def lenUU_i65 =
  fn A_v35972 xs_v35973 ⇒
    match xs_v35973 with
    | nilUU_c26  ⇒ (0, nilUU_c26)
    | consUU_c27 x_v35974 xs_v35975 ⇒
      match ((lenUU_i65 NULL) xs_v35975) with
      | (n_v35976, xs_v35977) ⇒
        (n_v35976.+1, (consUU_c27 x_v35974 xs_v35977))
      end
    end

def lenUL_i64 =
  fn A_v35978 xs_v35979 ⇒
    match xs_v35979 with
    | nilUL_c24  ⇒ (0, nilUL_c24)
    | consUL_c25 x_v35980 xs_v35981 ⇒
      match ((lenUL_i64 NULL) xs_v35981) with
      | (n_v35982, xs_v35983) ⇒
        (n_v35982.+1, (consUL_c25 x_v35980 xs_v35983))
      end
    end

def lenLL_i62 =
  fn A_v35984 xs_v35985 ⇒
    match xs_v35985 with
    | nilLL_c20  ⇒ (0, nilLL_c20)
    | consLL_c21 x_v35986 xs_v35987 ⇒
      match ((lenLL_i62 NULL) xs_v35987) with
      | (n_v35988, xs_v35989) ⇒
        (n_v35988.+1, (consLL_c21 x_v35986 xs_v35989))
      end
    end

def appendUU_i69 =
  fn A_v35990 xs_v35991 ⇒
    ln ys_v35992 ⇒
      match xs_v35991 with
      | nilUU_c26  ⇒ ys_v35992
      | consUU_c27 x_v35993 xs_v35994 ⇒
        (consUU_c27 x_v35993 (((appendUU_i69 NULL) xs_v35994) ys_v35992))
      end

def appendUL_i68 =
  fn A_v35995 xs_v35996 ⇒
    ln ys_v35997 ⇒
      match xs_v35996 with
      | nilUL_c24  ⇒ ys_v35997
      | consUL_c25 x_v35998 xs_v35999 ⇒
        (consUL_c25 x_v35998 (((appendUL_i68 NULL) xs_v35999) ys_v35997))
      end

def appendLL_i66 =
  fn A_v36000 xs_v36001 ⇒
    ln ys_v36002 ⇒
      match xs_v36001 with
      | nilLL_c20  ⇒ ys_v36002
      | consLL_c21 x_v36003 xs_v36004 ⇒
        (consLL_c21 x_v36003 (((appendLL_i66 NULL) xs_v36004) ys_v36002))
      end

def readline_i32 =
  fn __v36005 ⇒
    let ch_v36006 ⇐ open stdin in
    let ch_v36007 ⇐ (send ch_v36006 true) in
    let __v36008 ⇐ recv ch_v36007 in
    match __v36008 with
    | (s_v36009, ch_v36010) ⇒
      let ch_v36011 ⇐ (send ch_v36010 false) in
      let __v36012 ⇐ close⇑ ch_v36011 in return s_v36009
    end

def print_i33 =
  fn s_v36013 ⇒
    let ch_v36014 ⇐ open stdout in
    let ch_v36015 ⇐ (send ch_v36014 true) in
    let ch_v36016 ⇐ (send ch_v36015 s_v36013) in
    let ch_v36017 ⇐ (send ch_v36016 false) in close⇑ ch_v36017

def prerr_i34 =
  fn s_v36018 ⇒
    let ch_v36019 ⇐ open stderr in
    let ch_v36020 ⇐ (send ch_v36019 true) in
    let ch_v36021 ⇐ (send ch_v36020 s_v36018) in
    let ch_v36022 ⇐ (send ch_v36021 false) in close⇑ ch_v36022

def digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

def get_at_i36 =
  fn A_v36023 n_v36024 xs_v36025 a_v36026 ⇒
    match n_v36024 with
    | O ⇒
      match xs_v36025 with
      | nilUU_c26  ⇒ a_v36026 | consUU_c27 x_v36027 __v36028 ⇒ x_v36027
      end
    | S n_v36029 ⇒
      match xs_v36025 with
      | nilUU_c26  ⇒ a_v36026
      | consUU_c27 __v36030 xs_v36031 ⇒
        ((((get_at_i36 NULL) n_v36029) xs_v36031) a_v36026)
      end
    end

def string_of_digit_i37 =
  fn n_v36032 ⇒ ((((get_at_i36 NULL) n_v36032) digits_i35) EmptyString_c6)

def string_of_nat_i38 =
  fn n_v36033 ⇒
    let s_v36034 = (string_of_digit_i37 ((modn_i16 n_v36033) 10)) in
    let n_v36035 = ((divn_i15 n_v36033) 10) in
    match ((ltn_i7 0) n_v36035) with
    | true ⇒ ((cats_i19 (string_of_nat_i38 n_v36035)) s_v36034)
    | false ⇒ s_v36034
    end

def digit_of_char_i39 =
  fn c_v36036 ⇒
    match ((eqc_i17 c_v36036) '0') with
    | true ⇒ (SomeUL_c17 0)
    | false ⇒
      match ((eqc_i17 c_v36036) '1') with
      | true ⇒ (SomeUL_c17 1)
      | false ⇒
        match ((eqc_i17 c_v36036) '2') with
        | true ⇒ (SomeUL_c17 2)
        | false ⇒
          match ((eqc_i17 c_v36036) '3') with
          | true ⇒ (SomeUL_c17 3)
          | false ⇒
            match ((eqc_i17 c_v36036) '4') with
            | true ⇒ (SomeUL_c17 4)
            | false ⇒
              match ((eqc_i17 c_v36036) '5') with
              | true ⇒ (SomeUL_c17 5)
              | false ⇒
                match ((eqc_i17 c_v36036) '6') with
                | true ⇒ (SomeUL_c17 6)
                | false ⇒
                  match ((eqc_i17 c_v36036) '7') with
                  | true ⇒ (SomeUL_c17 7)
                  | false ⇒
                    match ((eqc_i17 c_v36036) '8') with
                    | true ⇒ (SomeUL_c17 8)
                    | false ⇒
                      match ((eqc_i17 c_v36036) '9') with
                      | true ⇒ (SomeUL_c17 9) | false ⇒ NoneUL_c16
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i40 =
  fn s_v36037 acc_v36038 ⇒
    match s_v36037 with
    | EmptyString_c6  ⇒ (SomeUL_c17 acc_v36038)
    | String_c7 c_v36039 s_v36040 ⇒
      match (digit_of_char_i39 c_v36039) with
      | NoneUL_c16  ⇒ NoneUL_c16
      | SomeUL_c17 n_v36041 ⇒
        ((nat_of_string_loop_i40 s_v36040)
          ((addn_i12 ((muln_i14 acc_v36038) 10)) n_v36041))
      end
    end

def nat_of_string_i41 = fn s_v36042 ⇒ ((nat_of_string_loop_i40 s_v36042) 0)

def read_nat_i48 =
  fn __v36043 ⇒
    let s_v36044 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v36044) with
    | SomeUL_c17 n_v36045 ⇒ return n_v36045
    | NoneUL_c16  ⇒
      let __v36046 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

def player_loop_i49 =
  fn ans_v36047 repeat_v36048 c_v36049 ⇒
    (match repeat_v36048 with
     | O ⇒
       fn c_v36050 ⇒
         let __v36051 ⇐ recv c_v36050 in
         match __v36051 with
         | (ans_v36052, c_v36053) ⇒
           let __v36054 ⇐ {recv} c_v36053 in
           match __v36054 with
           | (pf_v36055, c_v36056) ⇒
             let __v36057 ⇐
               (print_i33
                 ((cats_i19
                    ((cats_i19 "You Lose! The answer is ")
                      (string_of_nat_i38 ans_v36052)))
                   ".\n"))
             in close⇓ c_v36056
           end
         end
     | S repeat_v36058 ⇒
       fn c_v36059 ⇒
         let guess_v36060 ⇐ (read_nat_i48 ()) in
         let c_v36061 ⇐ (send c_v36059 guess_v36060) in
         let __v36062 ⇐ recv c_v36061 in
         match __v36062 with
         | (ord_v36063, c_v36064) ⇒
           let __v36065 ⇐ {recv} c_v36064 in
           match __v36065 with
           | (pf_v36066, c_v36067) ⇒
             (match ord_v36063 with
              | EQ_c3  ⇒
                fn c_v36068 ⇒
                  let __v36069 ⇐ (print_i33 "You Win!\n") in
                  close⇓ c_v36068
              | LT_c1  ⇒
                fn c_v36070 ⇒
                  let __v36071 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is lesser, you have ")
                           (string_of_nat_i38 repeat_v36058)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v36058) c_v36070)
              | GT_c2  ⇒
                fn c_v36072 ⇒
                  let __v36073 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is greater, you have ")
                           (string_of_nat_i38 repeat_v36058)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v36058) c_v36072)
              end c_v36067)
           end
         end
     end c_v36049)

def player_i50 =
  fn c_v36074 ⇒
    let __v36075 ⇐ recv c_v36074 in
    match __v36075 with
    | (lower_v36076, c_v36077) ⇒
      let __v36078 ⇐ recv c_v36077 in
      match __v36078 with
      | (upper_v36079, c_v36080) ⇒
        let __v36081 ⇐ {recv} c_v36080 in
        match __v36081 with
        | (ans_v36082, c_v36083) ⇒
          let __v36084 ⇐ {recv} c_v36083 in
          match __v36084 with
          | (pf1_v36085, c_v36086) ⇒
            let __v36087 ⇐ {recv} c_v36086 in
            match __v36087 with
            | (pf2_v36088, c_v36089) ⇒
              let __v36090 ⇐ recv c_v36089 in
              match __v36090 with
              | (repeat_v36091, c_v36092) ⇒
                let __v36093 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19
                          ((cats_i19
                             ((cats_i19 "Please make a guess between ")
                               (string_of_nat_i38 lower_v36076)))
                            " and "))
                         (string_of_nat_i38 upper_v36079)))
                      ".\n"))
                in
                let __v36094 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19 "You have ")
                         (string_of_nat_i38 repeat_v36091)))
                      " tries.\n"))
                in (((player_loop_i49 NULL) repeat_v36091) c_v36092)
              end
            end
          end
        end
      end
    end

def server_loop_i51 =
  fn ans_v36095 repeat_v36096 c_v36097 ⇒
    (match repeat_v36096 with
     | O ⇒
       fn c_v36098 ⇒
         let c_v36099 ⇐ (send c_v36098 ans_v36095) in
         let c_v36100 ⇐ ({send} c_v36099 NULL) in close⇑ c_v36100
     | S repeat_v36101 ⇒
       fn c_v36102 ⇒
         let __v36103 ⇐ recv c_v36102 in
         match __v36103 with
         | (n_v36104, c_v36105) ⇒
           let ord_v36106 = ((comparen_i10 ans_v36095) n_v36104) in
           let c_v36107 ⇐ (send c_v36105 ord_v36106) in
           let c_v36108 ⇐ ({send} c_v36107 NULL) in
           (match ord_v36106 with
            | EQ_c3  ⇒ fn c_v36109 ⇒ close⇑ c_v36109
            | LT_c1  ⇒
              fn c_v36110 ⇒
                (((server_loop_i51 ans_v36095) repeat_v36101) c_v36110)
            | GT_c2  ⇒
              fn c_v36111 ⇒
                (((server_loop_i51 ans_v36095) repeat_v36101) c_v36111)
            end c_v36108)
         end
     end c_v36097)

def server_i52 =
  fn c_v36112 ⇒
    let lower_v36113 = 1 in
    let upper_v36114 = 128 in
    let res_v36115 ⇐ rand lower_v36113 upper_v36114 in
    match res_v36115 with
    | Between_c4 ans_v36116 pf1_v36117 pf2_v36118 ⇒
      let repeat_v36119 = 7 in
      let c_v36120 ⇐ (send c_v36112 lower_v36113) in
      let c_v36121 ⇐ (send c_v36120 upper_v36114) in
      let c_v36122 ⇐ ({send} c_v36121 NULL) in
      let c_v36123 ⇐ ({send} c_v36122 NULL) in
      let c_v36124 ⇐ ({send} c_v36123 NULL) in
      let c_v36125 ⇐ (send c_v36124 repeat_v36119) in
      (((server_loop_i51 ans_v36116) repeat_v36119) c_v36125)
    end

main =
  let c_v36126 ⇐ fork c_v36127 in (server_i52 c_v36127) in
  let c0_v36128 ⇐
    fork c0_v36129 in
      let __v36130 ⇐ recv c0_v36129 in
      match __v36130 with
      | (c_v36131, c0_v36132) ⇒
        let __v36133 ⇐ (player_i50 c_v36131) in
        let c0_v36134 ⇐ (send c0_v36132 ()) in close⇑ c0_v36134
      end
  in
  let c0_v36135 ⇐ (send c0_v36128 c_v36126) in
  let __v36136 ⇐ recv c0_v36135 in
  match __v36136 with
  | (__v36137, c0_v36138) ⇒ close⇓ c0_v36138
  end

trans12 success--------------------------

fun andb_i1(b1_v36542, b2_v36543) = if b1_v36542 then
                                      b2_v36543
                                    else
                                      0

val andbclo_i70 = fn b1_v36544 b2_v36545 ⇒ andb_i1(b1_v36544, b2_v36545)

fun orb_i2(b1_v36546, b2_v36547) = if b1_v36546 then
                                     1
                                   else
                                     b2_v36547

val orbclo_i71 = fn b1_v36548 b2_v36549 ⇒ orb_i2(b1_v36548, b2_v36549)

fun notb_i3(b_v36550) = if b_v36550 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v36551 ⇒ notb_i3(b_v36551)

fun compareb_i4(b1_v36552, b2_v36553) =
  if b1_v36552 then
    if b2_v36553 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v36553 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v36554 b2_v36555 ⇒ compareb_i4(b1_v36554, b2_v36555)

fun lten_i5(x_v36556, y_v36557) =
  let __v36558 = x_v36556 in
  if __v36558 then
    let x_v36559 = __v36558.-1 in
    let __v36560 = y_v36557 in
    if __v36560 then
      let y_v36561 = __v36560.-1 in lten_i5(x_v36559, y_v36561)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v36562 y_v36563 ⇒ lten_i5(x_v36562, y_v36563)

fun gten_i6(x_v36564, y_v36565) =
  let __v36566 = x_v36564 in
  if __v36566 then
    let x_v36567 = __v36566.-1 in
    let __v36568 = y_v36565 in
    if __v36568 then
      let y_v36569 = __v36568.-1 in gten_i6(x_v36567, y_v36569)
    else
      1
  else
    let __v36570 = y_v36565 in
    if __v36570 then
      let __v36571 = __v36570.-1 in 0
    else
      1

val gtenclo_i75 = fn x_v36572 y_v36573 ⇒ gten_i6(x_v36572, y_v36573)

fun ltn_i7(x_v36574, y_v36575) =
  let __v36576 = x_v36574 in
  if __v36576 then
    let x_v36577 = __v36576.-1 in
    let __v36578 = y_v36575 in
    if __v36578 then
      let y_v36579 = __v36578.-1 in ltn_i7(x_v36577, y_v36579)
    else
      0
  else
    let __v36580 = y_v36575 in
    if __v36580 then
      let y_v36581 = __v36580.-1 in 1
    else
      0

val ltnclo_i76 = fn x_v36582 y_v36583 ⇒ ltn_i7(x_v36582, y_v36583)

fun gtn_i8(x_v36584, y_v36585) =
  let __v36586 = x_v36584 in
  if __v36586 then
    let x_v36587 = __v36586.-1 in
    let __v36588 = y_v36585 in
    if __v36588 then
      let y_v36589 = __v36588.-1 in gtn_i8(x_v36587, y_v36589)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v36590 y_v36591 ⇒ gtn_i8(x_v36590, y_v36591)

fun eqn_i9(x_v36592, y_v36593) =
  let __v36594 = x_v36592 in
  if __v36594 then
    let x_v36595 = __v36594.-1 in
    let __v36596 = y_v36593 in
    if __v36596 then
      let y_v36597 = __v36596.-1 in eqn_i9(x_v36595, y_v36597)
    else
      0
  else
    let __v36598 = y_v36593 in
    if __v36598 then
      let __v36599 = __v36598.-1 in 0
    else
      1

val eqnclo_i78 = fn x_v36600 y_v36601 ⇒ eqn_i9(x_v36600, y_v36601)

fun comparen_i10(n1_v36602, n2_v36603) =
  let __v36604 = n1_v36602 in
  if __v36604 then
    let n1_v36605 = __v36604.-1 in
    let __v36606 = n2_v36603 in
    if __v36606 then
      let n2_v36607 = __v36606.-1 in comparen_i10(n1_v36605, n2_v36607)
    else
      GT_c2
  else
    let __v36608 = n2_v36603 in
    if __v36608 then
      let __v36609 = __v36608.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v36610 n2_v36611 ⇒ comparen_i10(n1_v36610, n2_v36611)

fun pred_i11(x_v36612) =
  let __v36613 = x_v36612 in
  if __v36613 then
    let x_v36614 = __v36613.-1 in x_v36614
  else
    0

val predclo_i80 = fn x_v36615 ⇒ pred_i11(x_v36615)

fun addn_i12(x_v36616, y_v36617) =
  let __v36618 = x_v36616 in
  if __v36618 then
    let x_v36619 = __v36618.-1 in addn_i12(x_v36619, y_v36617).+1
  else
    y_v36617

val addnclo_i81 = fn x_v36620 y_v36621 ⇒ addn_i12(x_v36620, y_v36621)

fun subn_i13(x_v36622, y_v36623) =
  let __v36624 = y_v36623 in
  if __v36624 then
    let y_v36625 = __v36624.-1 in subn_i13(pred_i11(x_v36622), y_v36625)
  else
    x_v36622

val subnclo_i82 = fn x_v36626 y_v36627 ⇒ subn_i13(x_v36626, y_v36627)

fun muln_i14(x_v36628, y_v36629) =
  let __v36630 = x_v36628 in
  if __v36630 then
    let x_v36631 = __v36630.-1 in
    addn_i12(y_v36629, muln_i14(x_v36631, y_v36629))
  else
    0

val mulnclo_i83 = fn x_v36632 y_v36633 ⇒ muln_i14(x_v36632, y_v36633)

fun divn_i15(x_v36634, y_v36635) =
  if ltn_i7(x_v36634, y_v36635) then
    0
  else
    divn_i15(subn_i13(x_v36634, y_v36635), y_v36635).+1

val divnclo_i84 = fn x_v36636 y_v36637 ⇒ divn_i15(x_v36636, y_v36637)

fun modn_i16(x_v36638, y_v36639) =
  subn_i13(x_v36638, muln_i14(divn_i15(x_v36638, y_v36639), y_v36639))

val modnclo_i85 = fn x_v36640 y_v36641 ⇒ modn_i16(x_v36640, y_v36641)

fun eqc_i17(c1_v36642, c2_v36643) =
  match c1_v36642 with
  | Char_c5 n1_v36644 ⇒
    match c2_v36643 with
    | Char_c5 n2_v36645 ⇒ eqn_i9(n1_v36644, n2_v36645)
    end
  end

val eqcclo_i86 = fn c1_v36646 c2_v36647 ⇒ eqc_i17(c1_v36646, c2_v36647)

fun comparec_i18(c1_v36648, c2_v36649) =
  match c1_v36648 with
  | Char_c5 n1_v36650 ⇒
    match c2_v36649 with
    | Char_c5 n2_v36651 ⇒ comparen_i10(n1_v36650, n2_v36651)
    end
  end

val comparecclo_i87 =
  fn c1_v36652 c2_v36653 ⇒ comparec_i18(c1_v36652, c2_v36653)

fun cats_i19(s1_v36654, s2_v36655) =
  match s1_v36654 with
  | EmptyString_c6  ⇒ s2_v36655
  | String_c7 c_v36656 s1_v36657 ⇒
    (String_c7 c_v36656 cats_i19(s1_v36657, s2_v36655))
  end

val catsclo_i88 = fn s1_v36658 s2_v36659 ⇒ cats_i19(s1_v36658, s2_v36659)

fun strlen_i20(s_v36660) =
  match s_v36660 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v36661 s_v36662 ⇒ strlen_i20(s_v36662).+1
  end

val strlenclo_i89 = fn s_v36663 ⇒ strlen_i20(s_v36663)

fun eqs_i21(s1_v36664, s2_v36665) =
  match s1_v36664 with
  | EmptyString_c6  ⇒
    match s2_v36665 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v36666 __v36667 ⇒ 0
    end
  | String_c7 c1_v36668 s1_v36669 ⇒
    match s2_v36665 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v36670 s2_v36671 ⇒
      andb_i1(eqc_i17(c1_v36668, c2_v36670), eqs_i21(s1_v36669, s2_v36671))
    end
  end

val eqsclo_i90 = fn s1_v36672 s2_v36673 ⇒ eqs_i21(s1_v36672, s2_v36673)

fun compares_i22(s1_v36674, s2_v36675) =
  match s1_v36674 with
  | EmptyString_c6  ⇒
    match s2_v36675 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v36676 __v36677 ⇒ LT_c1
    end
  | String_c7 c1_v36678 s1_v36679 ⇒
    match s2_v36675 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v36680 s2_v36681 ⇒
      match comparec_i18(c1_v36678, c2_v36680) with
      | EQ_c3  ⇒ compares_i22(s1_v36679, s2_v36681) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v36682 s2_v36683 ⇒ compares_i22(s1_v36682, s2_v36683)

fun and_thenUUU_i61(A_v36684, B_v36685, opt_v36686, f_v36687) =
  match opt_v36686 with
  | NoneUU_c18  ⇒ NoneUU_c18 | SomeUU_c19 x_v36688 ⇒ (f_v36687) x_v36688
  end

val and_thenUUUclo_i92 =
  fn A_v36689 B_v36690 opt_v36691 ⇒
    ln f_v36692 ⇒ and_thenUUU_i61(A_v36689, B_v36690, opt_v36691, f_v36692)

fun and_thenUUL_i60(A_v36693, B_v36694, opt_v36695, f_v36696) =
  match opt_v36695 with
  | NoneUL_c16  ⇒ NoneUL_c16 | SomeUL_c17 x_v36697 ⇒ (f_v36696) x_v36697
  end

val and_thenUULclo_i93 =
  fn A_v36698 B_v36699 opt_v36700 ⇒
    ln f_v36701 ⇒ and_thenUUL_i60(A_v36698, B_v36699, opt_v36700, f_v36701)

fun and_thenULU_i59(A_v36702, B_v36703, opt_v36704, f_v36705) =
  match opt_v36704 with
  | NoneUU_c18  ⇒ NoneLU_c14 | SomeUU_c19 x_v36706 ⇒ (f_v36705) x_v36706
  end

val and_thenULUclo_i94 =
  fn A_v36707 B_v36708 opt_v36709 ⇒
    ln f_v36710 ⇒ and_thenULU_i59(A_v36707, B_v36708, opt_v36709, f_v36710)

fun and_thenULL_i58(A_v36711, B_v36712, opt_v36713, f_v36714) =
  match opt_v36713 with
  | NoneUL_c16  ⇒ NoneLL_c12 | SomeUL_c17 x_v36715 ⇒ (f_v36714) x_v36715
  end

val and_thenULLclo_i95 =
  fn A_v36716 B_v36717 opt_v36718 ⇒
    ln f_v36719 ⇒ and_thenULL_i58(A_v36716, B_v36717, opt_v36718, f_v36719)

fun and_thenLUL_i56(A_v36720, B_v36721, opt_v36722, f_v36723) =
  match opt_v36722 with
  | NoneLL_c12  ⇒ NoneUL_c16 | SomeLL_c13 x_v36724 ⇒ (f_v36723) x_v36724
  end

val and_thenLULclo_i96 =
  fn A_v36725 B_v36726 opt_v36727 ⇒
    ln f_v36728 ⇒ and_thenLUL_i56(A_v36725, B_v36726, opt_v36727, f_v36728)

fun and_thenLLL_i54(A_v36729, B_v36730, opt_v36731, f_v36732) =
  match opt_v36731 with
  | NoneLL_c12  ⇒ NoneLL_c12 | SomeLL_c13 x_v36733 ⇒ (f_v36732) x_v36733
  end

val and_thenLLLclo_i97 =
  fn A_v36734 B_v36735 opt_v36736 ⇒
    ln f_v36737 ⇒ and_thenLLL_i54(A_v36734, B_v36735, opt_v36736, f_v36737)

fun lenUU_i65(A_v36738, xs_v36739) =
  match xs_v36739 with
  | nilUU_c26  ⇒ (0, nilUU_c26)
  | consUU_c27 x_v36740 xs_v36741 ⇒
    match lenUU_i65(NULL, xs_v36741) with
    | (n_v36742, xs_v36743) ⇒
      (n_v36742.+1, (consUU_c27 x_v36740 xs_v36743))
    end
  end

val lenUUclo_i98 = fn A_v36744 xs_v36745 ⇒ lenUU_i65(A_v36744, xs_v36745)

fun lenUL_i64(A_v36746, xs_v36747) =
  match xs_v36747 with
  | nilUL_c24  ⇒ (0, nilUL_c24)
  | consUL_c25 x_v36748 xs_v36749 ⇒
    match lenUL_i64(NULL, xs_v36749) with
    | (n_v36750, xs_v36751) ⇒
      (n_v36750.+1, (consUL_c25 x_v36748 xs_v36751))
    end
  end

val lenULclo_i99 = fn A_v36752 xs_v36753 ⇒ lenUL_i64(A_v36752, xs_v36753)

fun lenLL_i62(A_v36754, xs_v36755) =
  match xs_v36755 with
  | nilLL_c20  ⇒ (0, nilLL_c20)
  | consLL_c21 x_v36756 xs_v36757 ⇒
    match lenLL_i62(NULL, xs_v36757) with
    | (n_v36758, xs_v36759) ⇒
      (n_v36758.+1, (consLL_c21 x_v36756 xs_v36759))
    end
  end

val lenLLclo_i100 = fn A_v36760 xs_v36761 ⇒ lenLL_i62(A_v36760, xs_v36761)

fun appendUU_i69(A_v36762, xs_v36763, ys_v36764) =
  match xs_v36763 with
  | nilUU_c26  ⇒ ys_v36764
  | consUU_c27 x_v36765 xs_v36766 ⇒
    (consUU_c27 x_v36765 appendUU_i69(NULL, xs_v36766, ys_v36764))
  end

val appendUUclo_i101 =
  fn A_v36767 xs_v36768 ⇒
    ln ys_v36769 ⇒ appendUU_i69(A_v36767, xs_v36768, ys_v36769)

fun appendUL_i68(A_v36770, xs_v36771, ys_v36772) =
  match xs_v36771 with
  | nilUL_c24  ⇒ ys_v36772
  | consUL_c25 x_v36773 xs_v36774 ⇒
    (consUL_c25 x_v36773 appendUL_i68(NULL, xs_v36774, ys_v36772))
  end

val appendULclo_i102 =
  fn A_v36775 xs_v36776 ⇒
    ln ys_v36777 ⇒ appendUL_i68(A_v36775, xs_v36776, ys_v36777)

fun appendLL_i66(A_v36778, xs_v36779, ys_v36780) =
  match xs_v36779 with
  | nilLL_c20  ⇒ ys_v36780
  | consLL_c21 x_v36781 xs_v36782 ⇒
    (consLL_c21 x_v36781 appendLL_i66(NULL, xs_v36782, ys_v36780))
  end

val appendLLclo_i103 =
  fn A_v36783 xs_v36784 ⇒
    ln ys_v36785 ⇒ appendLL_i66(A_v36783, xs_v36784, ys_v36785)

fun readline_i32(__v36786) =
  ln __v36787 ⇒
    let ch_v36788 = (ln __v36789 ⇒ open stdin) NULL in
    let ch_v36790 =
      ((fn x_v36791 ⇒ ln __v36792 ⇒ send(ch_v36788, x_v36791)) 1) NULL
    in
    let __v36793 = (ln __v36794 ⇒ recv(ch_v36790)) NULL in
    (match __v36793 with
     | (s_v36795, ch_v36796) ⇒
       ln __v36797 ⇒
         let ch_v36798 =
           ((fn x_v36799 ⇒ ln __v36800 ⇒ send(ch_v36796, x_v36799)) 0)
             NULL
         in
         let __v36801 =
           (ln __v36802 ⇒ let __v36803 = ch_v36798 in NULL) NULL
         in (ln __v36804 ⇒ s_v36795) NULL
     end) NULL

val readlineclo_i104 = fn __v36805 ⇒ readline_i32(__v36805)

fun print_i33(s_v36806) =
  ln __v36807 ⇒
    let ch_v36808 = (ln __v36809 ⇒ open stdout) NULL in
    let ch_v36810 =
      ((fn x_v36811 ⇒ ln __v36812 ⇒ send(ch_v36808, x_v36811)) 1) NULL
    in
    let ch_v36813 =
      ((fn x_v36814 ⇒ ln __v36815 ⇒ send(ch_v36810, x_v36814)) s_v36806)
        NULL
    in
    let ch_v36816 =
      ((fn x_v36817 ⇒ ln __v36818 ⇒ send(ch_v36813, x_v36817)) 0) NULL
    in (ln __v36819 ⇒ let __v36820 = ch_v36816 in NULL) NULL

val printclo_i105 = fn s_v36821 ⇒ print_i33(s_v36821)

fun prerr_i34(s_v36822) =
  ln __v36823 ⇒
    let ch_v36824 = (ln __v36825 ⇒ open stderr) NULL in
    let ch_v36826 =
      ((fn x_v36827 ⇒ ln __v36828 ⇒ send(ch_v36824, x_v36827)) 1) NULL
    in
    let ch_v36829 =
      ((fn x_v36830 ⇒ ln __v36831 ⇒ send(ch_v36826, x_v36830)) s_v36822)
        NULL
    in
    let ch_v36832 =
      ((fn x_v36833 ⇒ ln __v36834 ⇒ send(ch_v36829, x_v36833)) 0) NULL
    in (ln __v36835 ⇒ let __v36836 = ch_v36832 in NULL) NULL

val prerrclo_i106 = fn s_v36837 ⇒ prerr_i34(s_v36837)

val digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

fun get_at_i36(A_v36838, n_v36839, xs_v36840, a_v36841) =
  let __v36842 = n_v36839 in
  if __v36842 then
    let n_v36843 = __v36842.-1 in
    match xs_v36840 with
    | nilUU_c26  ⇒ a_v36841
    | consUU_c27 __v36844 xs_v36845 ⇒
      get_at_i36(NULL, n_v36843, xs_v36845, a_v36841)
    end
  else
    match xs_v36840 with
    | nilUU_c26  ⇒ a_v36841 | consUU_c27 x_v36846 __v36847 ⇒ x_v36846
    end

val get_atclo_i107 =
  fn A_v36848 n_v36849 xs_v36850 a_v36851 ⇒
    get_at_i36(A_v36848, n_v36849, xs_v36850, a_v36851)

fun string_of_digit_i37(n_v36852) =
  get_at_i36(NULL, n_v36852, digits_i35, EmptyString_c6)

val string_of_digitclo_i108 = fn n_v36853 ⇒ string_of_digit_i37(n_v36853)

fun string_of_nat_i38(n_v36854) =
  let s_v36855 = string_of_digit_i37(modn_i16(n_v36854, 10)) in
  let n_v36856 = divn_i15(n_v36854, 10) in
  if ltn_i7(0, n_v36856) then
    cats_i19(string_of_nat_i38(n_v36856), s_v36855)
  else
    s_v36855

val string_of_natclo_i109 = fn n_v36857 ⇒ string_of_nat_i38(n_v36857)

fun digit_of_char_i39(c_v36858) =
  if eqc_i17(c_v36858, '0') then
    (SomeUL_c17 0)
  else
    if eqc_i17(c_v36858, '1') then
      (SomeUL_c17 1)
    else
      if eqc_i17(c_v36858, '2') then
        (SomeUL_c17 2)
      else
        if eqc_i17(c_v36858, '3') then
          (SomeUL_c17 3)
        else
          if eqc_i17(c_v36858, '4') then
            (SomeUL_c17 4)
          else
            if eqc_i17(c_v36858, '5') then
              (SomeUL_c17 5)
            else
              if eqc_i17(c_v36858, '6') then
                (SomeUL_c17 6)
              else
                if eqc_i17(c_v36858, '7') then
                  (SomeUL_c17 7)
                else
                  if eqc_i17(c_v36858, '8') then
                    (SomeUL_c17 8)
                  else
                    if eqc_i17(c_v36858, '9') then
                      (SomeUL_c17 9)
                    else
                      NoneUL_c16

val digit_of_charclo_i110 = fn c_v36859 ⇒ digit_of_char_i39(c_v36859)

fun nat_of_string_loop_i40(s_v36860, acc_v36861) =
  match s_v36860 with
  | EmptyString_c6  ⇒ (SomeUL_c17 acc_v36861)
  | String_c7 c_v36862 s_v36863 ⇒
    match digit_of_char_i39(c_v36862) with
    | NoneUL_c16  ⇒ NoneUL_c16
    | SomeUL_c17 n_v36864 ⇒
      nat_of_string_loop_i40(s_v36863,
                             addn_i12(muln_i14(acc_v36861, 10), n_v36864))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v36865 acc_v36866 ⇒ nat_of_string_loop_i40(s_v36865, acc_v36866)

fun nat_of_string_i41(s_v36867) = nat_of_string_loop_i40(s_v36867, 0)

val nat_of_stringclo_i112 = fn s_v36868 ⇒ nat_of_string_i41(s_v36868)

fun read_nat_i48(__v36869) =
  ln __v36870 ⇒
    let s_v36871 = (readline_i32(NULL)) NULL in
    (match nat_of_string_i41(s_v36871) with
     | SomeUL_c17 n_v36872 ⇒ ln __v36873 ⇒ n_v36872
     | NoneUL_c16  ⇒
       ln __v36874 ⇒
         let __v36875 = (print_i33("please input a natural number\n")) NULL
         in (read_nat_i48(NULL)) NULL
     end) NULL

val read_natclo_i113 = fn __v36876 ⇒ read_nat_i48(__v36876)

fun player_loop_i49(ans_v36877, repeat_v36878, c_v36879) =
  (let __v36880 = repeat_v36878 in
   if __v36880 then
     let repeat_v36881 = __v36880.-1 in
     fn c_v36882 ⇒
       ln __v36883 ⇒
         let guess_v36884 = (read_nat_i48(NULL)) NULL in
         let c_v36885 =
           ((fn x_v36886 ⇒ ln __v36887 ⇒ send(c_v36882, x_v36886))
              guess_v36884)
             NULL
         in
         let __v36888 = (ln __v36889 ⇒ recv(c_v36885)) NULL in
         (match __v36888 with
          | (ord_v36890, c_v36891) ⇒
            ln __v36892 ⇒
              let __v36893 = (ln __v36894 ⇒ (NULL, c_v36891)) NULL in
              (match __v36893 with
               | (pf_v36895, c_v36896) ⇒
                 (match ord_v36890 with
                  | EQ_c3  ⇒
                    fn c_v36897 ⇒
                      ln __v36898 ⇒
                        let __v36899 = (print_i33("You Win!\n")) NULL in
                        (ln __v36900 ⇒ close(c_v36897)) NULL
                  | LT_c1  ⇒
                    fn c_v36901 ⇒
                      ln __v36902 ⇒
                        let __v36903 =
                          (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v36881)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v36881, c_v36901)) NULL
                  | GT_c2  ⇒
                    fn c_v36904 ⇒
                      ln __v36905 ⇒
                        let __v36906 =
                          (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v36881)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v36881, c_v36904)) NULL
                  end) c_v36896
               end) NULL
          end) NULL
   else
     fn c_v36907 ⇒
       ln __v36908 ⇒
         let __v36909 = (ln __v36910 ⇒ recv(c_v36907)) NULL in
         (match __v36909 with
          | (ans_v36911, c_v36912) ⇒
            ln __v36913 ⇒
              let __v36914 = (ln __v36915 ⇒ (NULL, c_v36912)) NULL in
              (match __v36914 with
               | (pf_v36916, c_v36917) ⇒
                 ln __v36918 ⇒
                   let __v36919 =
                     (print_i33(cats_i19(cats_i19("You Lose! The answer is ",
                                                  string_of_nat_i38(ans_v36911)),
                                         ".\n")))
                       NULL
                   in (ln __v36920 ⇒ close(c_v36917)) NULL
               end) NULL
          end) NULL)
    c_v36879

val player_loopclo_i114 =
  fn ans_v36921 repeat_v36922 c_v36923 ⇒
    player_loop_i49(ans_v36921, repeat_v36922, c_v36923)

fun player_i50(c_v36924) =
  ln __v36925 ⇒
    let __v36926 = (ln __v36927 ⇒ recv(c_v36924)) NULL in
    (match __v36926 with
     | (lower_v36928, c_v36929) ⇒
       ln __v36930 ⇒
         let __v36931 = (ln __v36932 ⇒ recv(c_v36929)) NULL in
         (match __v36931 with
          | (upper_v36933, c_v36934) ⇒
            ln __v36935 ⇒
              let __v36936 = (ln __v36937 ⇒ (NULL, c_v36934)) NULL in
              (match __v36936 with
               | (ans_v36938, c_v36939) ⇒
                 ln __v36940 ⇒
                   let __v36941 = (ln __v36942 ⇒ (NULL, c_v36939)) NULL in
                   (match __v36941 with
                    | (pf1_v36943, c_v36944) ⇒
                      ln __v36945 ⇒
                        let __v36946 =
                          (ln __v36947 ⇒ (NULL, c_v36944)) NULL
                        in
                        (match __v36946 with
                         | (pf2_v36948, c_v36949) ⇒
                           ln __v36950 ⇒
                             let __v36951 =
                               (ln __v36952 ⇒ recv(c_v36949)) NULL
                             in
                             (match __v36951 with
                              | (repeat_v36953, c_v36954) ⇒
                                ln __v36955 ⇒
                                  let __v36956 =
                                    (print_i33(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v36928)),
                                                                 " and "),
                                                                 string_of_nat_i38(
                                                                 upper_v36933)),
                                                        ".\n")))
                                      NULL
                                  in
                                  let __v36957 =
                                    (print_i33(cats_i19(cats_i19("You have ",
                                                                 string_of_nat_i38(
                                                                 repeat_v36953)),
                                                        " tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i49(NULL, repeat_v36953,
                                                   c_v36954))
                                    NULL
                              end) NULL
                         end) NULL
                    end) NULL
               end) NULL
          end) NULL
     end) NULL

val playerclo_i115 = fn c_v36958 ⇒ player_i50(c_v36958)

fun server_loop_i51(ans_v36959, repeat_v36960, c_v36961) =
  (let __v36962 = repeat_v36960 in
   if __v36962 then
     let repeat_v36963 = __v36962.-1 in
     fn c_v36964 ⇒
       ln __v36965 ⇒
         let __v36966 = (ln __v36967 ⇒ recv(c_v36964)) NULL in
         (match __v36966 with
          | (n_v36968, c_v36969) ⇒
            let ord_v36970 = comparen_i10(ans_v36959, n_v36968) in
            ln __v36971 ⇒
              let c_v36972 =
                ((fn x_v36973 ⇒ ln __v36974 ⇒ send(c_v36969, x_v36973))
                   ord_v36970)
                  NULL
              in
              let c_v36975 =
                ((fn x_v36976 ⇒ ln __v36977 ⇒ c_v36972) NULL) NULL
              in
              ((match ord_v36970 with
                | EQ_c3  ⇒
                  fn c_v36978 ⇒
                    ln __v36979 ⇒ let __v36980 = c_v36978 in NULL
                | LT_c1  ⇒
                  fn c_v36981 ⇒
                    server_loop_i51(ans_v36959, repeat_v36963, c_v36981)
                | GT_c2  ⇒
                  fn c_v36982 ⇒
                    server_loop_i51(ans_v36959, repeat_v36963, c_v36982)
                end) c_v36975) NULL
          end) NULL
   else
     fn c_v36983 ⇒
       ln __v36984 ⇒
         let c_v36985 =
           ((fn x_v36986 ⇒ ln __v36987 ⇒ send(c_v36983, x_v36986))
              ans_v36959)
             NULL
         in
         let c_v36988 =
           ((fn x_v36989 ⇒ ln __v36990 ⇒ c_v36985) NULL) NULL
         in (ln __v36991 ⇒ let __v36992 = c_v36988 in NULL) NULL)
    c_v36961

val server_loopclo_i116 =
  fn ans_v36993 repeat_v36994 c_v36995 ⇒
    server_loop_i51(ans_v36993, repeat_v36994, c_v36995)

fun server_i52(c_v36996) =
  let lower_v36997 = 1 in
  let upper_v36998 = 128 in
  ln __v36999 ⇒
    let res_v37000 = (ln __v37001 ⇒ rand(lower_v36997, upper_v36998)) NULL
    in
    (match res_v37000 with
     | Between_c4 ans_v37002 pf1_v37003 pf2_v37004 ⇒
       let repeat_v37005 = 7 in
       ln __v37006 ⇒
         let c_v37007 =
           ((fn x_v37008 ⇒ ln __v37009 ⇒ send(c_v36996, x_v37008))
              lower_v36997)
             NULL
         in
         let c_v37010 =
           ((fn x_v37011 ⇒ ln __v37012 ⇒ send(c_v37007, x_v37011))
              upper_v36998)
             NULL
         in
         let c_v37013 =
           ((fn x_v37014 ⇒ ln __v37015 ⇒ c_v37010) NULL) NULL
         in
         let c_v37016 =
           ((fn x_v37017 ⇒ ln __v37018 ⇒ c_v37013) NULL) NULL
         in
         let c_v37019 =
           ((fn x_v37020 ⇒ ln __v37021 ⇒ c_v37016) NULL) NULL
         in
         let c_v37022 =
           ((fn x_v37023 ⇒ ln __v37024 ⇒ send(c_v37019, x_v37023))
              repeat_v37005)
             NULL
         in (server_loop_i51(ans_v37002, repeat_v37005, c_v37022)) NULL
     end) NULL

val serverclo_i117 = fn c_v37025 ⇒ server_i52(c_v37025)

main =
  (ln __v37026 ⇒
     let c_v37027 =
       (ln __v37028 ⇒ fork c_v37029 in (server_i52(c_v37029)) NULL) NULL
     in
     let c0_v37030 =
       (ln __v37031 ⇒
          fork c0_v37032 in
            (ln __v37033 ⇒
               let __v37034 = (ln __v37035 ⇒ recv(c0_v37032)) NULL in
               (match __v37034 with
                | (c_v37036, c0_v37037) ⇒
                  ln __v37038 ⇒
                    let __v37039 = (player_i50(c_v37036)) NULL in
                    let c0_v37040 =
                      ((fn x_v37041 ⇒
                          ln __v37042 ⇒ send(c0_v37037, x_v37041))
                         NULL)
                        NULL
                    in
                    (ln __v37043 ⇒ let __v37044 = c0_v37040 in NULL) NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v37045 =
       ((ln x_v37046 __v37047 ⇒ send(c0_v37030, x_v37046)) c_v37027) NULL
     in
     let __v37048 = (ln __v37049 ⇒ recv(c0_v37045)) NULL in
     (match __v37048 with
      | (__v37050, c0_v37051) ⇒ ln __v37052 ⇒ close(c0_v37051)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v38195, b2_v38196) = if b1_v38195 then
                                      b2_v38196
                                    else
                                      0

val andbclo_i70 = fn b1_v38197 b2_v38198 ⇒ andb_i1(b1_v38197, b2_v38198)

fun orb_i2(b1_v38199, b2_v38200) = if b1_v38199 then
                                     1
                                   else
                                     b2_v38200

val orbclo_i71 = fn b1_v38201 b2_v38202 ⇒ orb_i2(b1_v38201, b2_v38202)

fun notb_i3(b_v38203) = if b_v38203 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v38204 ⇒ notb_i3(b_v38204)

fun compareb_i4(b1_v38205, b2_v38206) =
  if b1_v38205 then
    if b2_v38206 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v38206 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v38207 b2_v38208 ⇒ compareb_i4(b1_v38207, b2_v38208)

fun lten_i5(x_v38209, y_v38210) =
  if x_v38209 then
    if y_v38210 then
      lten_i5(x_v38209.-1, y_v38210.-1)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v38211 y_v38212 ⇒ lten_i5(x_v38211, y_v38212)

fun gten_i6(x_v38213, y_v38214) =
  if x_v38213 then
    if y_v38214 then
      gten_i6(x_v38213.-1, y_v38214.-1)
    else
      1
  else
    if y_v38214 then
      0
    else
      1

val gtenclo_i75 = fn x_v38215 y_v38216 ⇒ gten_i6(x_v38215, y_v38216)

fun ltn_i7(x_v38217, y_v38218) =
  if x_v38217 then
    if y_v38218 then
      ltn_i7(x_v38217.-1, y_v38218.-1)
    else
      0
  else
    if y_v38218 then
      1
    else
      0

val ltnclo_i76 = fn x_v38219 y_v38220 ⇒ ltn_i7(x_v38219, y_v38220)

fun gtn_i8(x_v38221, y_v38222) =
  if x_v38221 then
    if y_v38222 then
      gtn_i8(x_v38221.-1, y_v38222.-1)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v38223 y_v38224 ⇒ gtn_i8(x_v38223, y_v38224)

fun eqn_i9(x_v38225, y_v38226) =
  if x_v38225 then
    if y_v38226 then
      eqn_i9(x_v38225.-1, y_v38226.-1)
    else
      0
  else
    if y_v38226 then
      0
    else
      1

val eqnclo_i78 = fn x_v38227 y_v38228 ⇒ eqn_i9(x_v38227, y_v38228)

fun comparen_i10(n1_v38229, n2_v38230) =
  if n1_v38229 then
    if n2_v38230 then
      comparen_i10(n1_v38229.-1, n2_v38230.-1)
    else
      GT_c2
  else
    if n2_v38230 then
      LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v38231 n2_v38232 ⇒ comparen_i10(n1_v38231, n2_v38232)

fun pred_i11(x_v38233) = if x_v38233 then
                           x_v38233.-1
                         else
                           0

val predclo_i80 = fn x_v38234 ⇒ pred_i11(x_v38234)

fun addn_i12(x_v38235, y_v38236) =
  if x_v38235 then
    addn_i12(x_v38235.-1, y_v38236).+1
  else
    y_v38236

val addnclo_i81 = fn x_v38237 y_v38238 ⇒ addn_i12(x_v38237, y_v38238)

fun subn_i13(x_v38239, y_v38240) =
  if y_v38240 then
    subn_i13(pred_i11(x_v38239), y_v38240.-1)
  else
    x_v38239

val subnclo_i82 = fn x_v38241 y_v38242 ⇒ subn_i13(x_v38241, y_v38242)

fun muln_i14(x_v38243, y_v38244) =
  if x_v38243 then
    addn_i12(y_v38244, muln_i14(x_v38243.-1, y_v38244))
  else
    0

val mulnclo_i83 = fn x_v38245 y_v38246 ⇒ muln_i14(x_v38245, y_v38246)

fun divn_i15(x_v38247, y_v38248) =
  if ltn_i7(x_v38247, y_v38248) then
    0
  else
    divn_i15(subn_i13(x_v38247, y_v38248), y_v38248).+1

val divnclo_i84 = fn x_v38249 y_v38250 ⇒ divn_i15(x_v38249, y_v38250)

fun modn_i16(x_v38251, y_v38252) =
  subn_i13(x_v38251, muln_i14(divn_i15(x_v38251, y_v38252), y_v38252))

val modnclo_i85 = fn x_v38253 y_v38254 ⇒ modn_i16(x_v38253, y_v38254)

fun eqc_i17(c1_v38255, c2_v38256) =
  match c1_v38255 with
  | Char_c5 n1_v38257 ⇒
    match c2_v38256 with
    | Char_c5 n2_v38258 ⇒ eqn_i9(n1_v38257, n2_v38258)
    end
  end

val eqcclo_i86 = fn c1_v38259 c2_v38260 ⇒ eqc_i17(c1_v38259, c2_v38260)

fun comparec_i18(c1_v38261, c2_v38262) =
  match c1_v38261 with
  | Char_c5 n1_v38263 ⇒
    match c2_v38262 with
    | Char_c5 n2_v38264 ⇒ comparen_i10(n1_v38263, n2_v38264)
    end
  end

val comparecclo_i87 =
  fn c1_v38265 c2_v38266 ⇒ comparec_i18(c1_v38265, c2_v38266)

fun cats_i19(s1_v38267, s2_v38268) =
  match s1_v38267 with
  | EmptyString_c6  ⇒ s2_v38268
  | String_c7 c_v38269 s1_v38270 ⇒
    (String_c7 c_v38269 cats_i19(s1_v38270, s2_v38268))
  end

val catsclo_i88 = fn s1_v38271 s2_v38272 ⇒ cats_i19(s1_v38271, s2_v38272)

fun strlen_i20(s_v38273) =
  match s_v38273 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v38274 s_v38275 ⇒ strlen_i20(s_v38275).+1
  end

val strlenclo_i89 = fn s_v38276 ⇒ strlen_i20(s_v38276)

fun eqs_i21(s1_v38277, s2_v38278) =
  match s1_v38277 with
  | EmptyString_c6  ⇒
    match s2_v38278 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v38279 __v38280 ⇒ 0
    end
  | String_c7 c1_v38281 s1_v38282 ⇒
    match s2_v38278 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v38283 s2_v38284 ⇒
      andb_i1(eqc_i17(c1_v38281, c2_v38283), eqs_i21(s1_v38282, s2_v38284))
    end
  end

val eqsclo_i90 = fn s1_v38285 s2_v38286 ⇒ eqs_i21(s1_v38285, s2_v38286)

fun compares_i22(s1_v38287, s2_v38288) =
  match s1_v38287 with
  | EmptyString_c6  ⇒
    match s2_v38288 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v38289 __v38290 ⇒ LT_c1
    end
  | String_c7 c1_v38291 s1_v38292 ⇒
    match s2_v38288 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v38293 s2_v38294 ⇒
      match comparec_i18(c1_v38291, c2_v38293) with
      | EQ_c3  ⇒ compares_i22(s1_v38292, s2_v38294) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v38295 s2_v38296 ⇒ compares_i22(s1_v38295, s2_v38296)

fun and_thenUUU_i61(A_v38297, B_v38298, opt_v38299, f_v38300) =
  match opt_v38299 with
  | NoneUU_c18  ⇒ NoneUU_c18 | SomeUU_c19 x_v38301 ⇒ (f_v38300) x_v38301
  end

val and_thenUUUclo_i92 =
  fn A_v38302 B_v38303 opt_v38304 ⇒
    ln f_v38305 ⇒ and_thenUUU_i61(A_v38302, B_v38303, opt_v38304, f_v38305)

fun and_thenUUL_i60(A_v38306, B_v38307, opt_v38308, f_v38309) =
  match opt_v38308 with
  | NoneUL_c16  ⇒ NoneUL_c16 | SomeUL_c17 x_v38310 ⇒ (f_v38309) x_v38310
  end

val and_thenUULclo_i93 =
  fn A_v38311 B_v38312 opt_v38313 ⇒
    ln f_v38314 ⇒ and_thenUUL_i60(A_v38311, B_v38312, opt_v38313, f_v38314)

fun and_thenULU_i59(A_v38315, B_v38316, opt_v38317, f_v38318) =
  match opt_v38317 with
  | NoneUU_c18  ⇒ NoneLU_c14 | SomeUU_c19 x_v38319 ⇒ (f_v38318) x_v38319
  end

val and_thenULUclo_i94 =
  fn A_v38320 B_v38321 opt_v38322 ⇒
    ln f_v38323 ⇒ and_thenULU_i59(A_v38320, B_v38321, opt_v38322, f_v38323)

fun and_thenULL_i58(A_v38324, B_v38325, opt_v38326, f_v38327) =
  match opt_v38326 with
  | NoneUL_c16  ⇒ NoneLL_c12 | SomeUL_c17 x_v38328 ⇒ (f_v38327) x_v38328
  end

val and_thenULLclo_i95 =
  fn A_v38329 B_v38330 opt_v38331 ⇒
    ln f_v38332 ⇒ and_thenULL_i58(A_v38329, B_v38330, opt_v38331, f_v38332)

fun and_thenLUL_i56(A_v38333, B_v38334, opt_v38335, f_v38336) =
  match opt_v38335 with
  | NoneLL_c12  ⇒ NoneUL_c16 | SomeLL_c13 x_v38337 ⇒ (f_v38336) x_v38337
  end

val and_thenLULclo_i96 =
  fn A_v38338 B_v38339 opt_v38340 ⇒
    ln f_v38341 ⇒ and_thenLUL_i56(A_v38338, B_v38339, opt_v38340, f_v38341)

fun and_thenLLL_i54(A_v38342, B_v38343, opt_v38344, f_v38345) =
  match opt_v38344 with
  | NoneLL_c12  ⇒ NoneLL_c12 | SomeLL_c13 x_v38346 ⇒ (f_v38345) x_v38346
  end

val and_thenLLLclo_i97 =
  fn A_v38347 B_v38348 opt_v38349 ⇒
    ln f_v38350 ⇒ and_thenLLL_i54(A_v38347, B_v38348, opt_v38349, f_v38350)

fun lenUU_i65(A_v38351, xs_v38352) =
  match xs_v38352 with
  | nilUU_c26  ⇒ (0, nilUU_c26)
  | consUU_c27 x_v38353 xs_v38354 ⇒
    match lenUU_i65(NULL, xs_v38354) with
    | (n_v38355, xs_v38356) ⇒
      (n_v38355.+1, (consUU_c27 x_v38353 xs_v38356))
    end
  end

val lenUUclo_i98 = fn A_v38357 xs_v38358 ⇒ lenUU_i65(A_v38357, xs_v38358)

fun lenUL_i64(A_v38359, xs_v38360) =
  match xs_v38360 with
  | nilUL_c24  ⇒ (0, nilUL_c24)
  | consUL_c25 x_v38361 xs_v38362 ⇒
    match lenUL_i64(NULL, xs_v38362) with
    | (n_v38363, xs_v38364) ⇒
      (n_v38363.+1, (consUL_c25 x_v38361 xs_v38364))
    end
  end

val lenULclo_i99 = fn A_v38365 xs_v38366 ⇒ lenUL_i64(A_v38365, xs_v38366)

fun lenLL_i62(A_v38367, xs_v38368) =
  match xs_v38368 with
  | nilLL_c20  ⇒ (0, nilLL_c20)
  | consLL_c21 x_v38369 xs_v38370 ⇒
    match lenLL_i62(NULL, xs_v38370) with
    | (n_v38371, xs_v38372) ⇒
      (n_v38371.+1, (consLL_c21 x_v38369 xs_v38372))
    end
  end

val lenLLclo_i100 = fn A_v38373 xs_v38374 ⇒ lenLL_i62(A_v38373, xs_v38374)

fun appendUU_i69(A_v38375, xs_v38376, ys_v38377) =
  match xs_v38376 with
  | nilUU_c26  ⇒ ys_v38377
  | consUU_c27 x_v38378 xs_v38379 ⇒
    (consUU_c27 x_v38378 appendUU_i69(NULL, xs_v38379, ys_v38377))
  end

val appendUUclo_i101 =
  fn A_v38380 xs_v38381 ⇒
    ln ys_v38382 ⇒ appendUU_i69(A_v38380, xs_v38381, ys_v38382)

fun appendUL_i68(A_v38383, xs_v38384, ys_v38385) =
  match xs_v38384 with
  | nilUL_c24  ⇒ ys_v38385
  | consUL_c25 x_v38386 xs_v38387 ⇒
    (consUL_c25 x_v38386 appendUL_i68(NULL, xs_v38387, ys_v38385))
  end

val appendULclo_i102 =
  fn A_v38388 xs_v38389 ⇒
    ln ys_v38390 ⇒ appendUL_i68(A_v38388, xs_v38389, ys_v38390)

fun appendLL_i66(A_v38391, xs_v38392, ys_v38393) =
  match xs_v38392 with
  | nilLL_c20  ⇒ ys_v38393
  | consLL_c21 x_v38394 xs_v38395 ⇒
    (consLL_c21 x_v38394 appendLL_i66(NULL, xs_v38395, ys_v38393))
  end

val appendLLclo_i103 =
  fn A_v38396 xs_v38397 ⇒
    ln ys_v38398 ⇒ appendLL_i66(A_v38396, xs_v38397, ys_v38398)

fun readline_i32(__v38399) =
  ln __v38400 ⇒
    let ch_v38401 = open stdin in
    let ch_v38402 = send(ch_v38401, 1) in
    let __v38403 = recv(ch_v38402) in
    match __v38403 with
    | (s_v38404, ch_v38405) ⇒
      let ch_v38406 = send(ch_v38405, 0) in s_v38404
    end

val readlineclo_i104 = fn __v38407 ⇒ readline_i32(__v38407)

fun print_i33(s_v38408) =
  ln __v38409 ⇒
    let ch_v38410 = open stdout in
    let ch_v38411 = send(ch_v38410, 1) in
    let ch_v38412 = send(ch_v38411, s_v38408) in
    let ch_v38413 = send(ch_v38412, 0) in NULL

val printclo_i105 = fn s_v38414 ⇒ print_i33(s_v38414)

fun prerr_i34(s_v38415) =
  ln __v38416 ⇒
    let ch_v38417 = open stderr in
    let ch_v38418 = send(ch_v38417, 1) in
    let ch_v38419 = send(ch_v38418, s_v38415) in
    let ch_v38420 = send(ch_v38419, 0) in NULL

val prerrclo_i106 = fn s_v38421 ⇒ prerr_i34(s_v38421)

val digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

fun get_at_i36(A_v38422, n_v38423, xs_v38424, a_v38425) =
  if n_v38423 then
    match xs_v38424 with
    | nilUU_c26  ⇒ a_v38425
    | consUU_c27 __v38426 xs_v38427 ⇒
      get_at_i36(NULL, n_v38423.-1, xs_v38427, a_v38425)
    end
  else
    match xs_v38424 with
    | nilUU_c26  ⇒ a_v38425 | consUU_c27 x_v38428 __v38429 ⇒ x_v38428
    end

val get_atclo_i107 =
  fn A_v38430 n_v38431 xs_v38432 a_v38433 ⇒
    get_at_i36(A_v38430, n_v38431, xs_v38432, a_v38433)

fun string_of_digit_i37(n_v38434) =
  get_at_i36(NULL, n_v38434, digits_i35, EmptyString_c6)

val string_of_digitclo_i108 = fn n_v38435 ⇒ string_of_digit_i37(n_v38435)

fun string_of_nat_i38(n_v38436) =
  let s_v38437 = string_of_digit_i37(modn_i16(n_v38436, 10)) in
  let n_v38438 = divn_i15(n_v38436, 10) in
  if ltn_i7(0, n_v38438) then
    cats_i19(string_of_nat_i38(n_v38438), s_v38437)
  else
    s_v38437

val string_of_natclo_i109 = fn n_v38439 ⇒ string_of_nat_i38(n_v38439)

fun digit_of_char_i39(c_v38440) =
  if eqc_i17(c_v38440, '0') then
    (SomeUL_c17 0)
  else
    if eqc_i17(c_v38440, '1') then
      (SomeUL_c17 1)
    else
      if eqc_i17(c_v38440, '2') then
        (SomeUL_c17 2)
      else
        if eqc_i17(c_v38440, '3') then
          (SomeUL_c17 3)
        else
          if eqc_i17(c_v38440, '4') then
            (SomeUL_c17 4)
          else
            if eqc_i17(c_v38440, '5') then
              (SomeUL_c17 5)
            else
              if eqc_i17(c_v38440, '6') then
                (SomeUL_c17 6)
              else
                if eqc_i17(c_v38440, '7') then
                  (SomeUL_c17 7)
                else
                  if eqc_i17(c_v38440, '8') then
                    (SomeUL_c17 8)
                  else
                    if eqc_i17(c_v38440, '9') then
                      (SomeUL_c17 9)
                    else
                      NoneUL_c16

val digit_of_charclo_i110 = fn c_v38441 ⇒ digit_of_char_i39(c_v38441)

fun nat_of_string_loop_i40(s_v38442, acc_v38443) =
  match s_v38442 with
  | EmptyString_c6  ⇒ (SomeUL_c17 acc_v38443)
  | String_c7 c_v38444 s_v38445 ⇒
    match digit_of_char_i39(c_v38444) with
    | NoneUL_c16  ⇒ NoneUL_c16
    | SomeUL_c17 n_v38446 ⇒
      nat_of_string_loop_i40(s_v38445,
                             addn_i12(muln_i14(acc_v38443, 10), n_v38446))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v38447 acc_v38448 ⇒ nat_of_string_loop_i40(s_v38447, acc_v38448)

fun nat_of_string_i41(s_v38449) = nat_of_string_loop_i40(s_v38449, 0)

val nat_of_stringclo_i112 = fn s_v38450 ⇒ nat_of_string_i41(s_v38450)

fun read_nat_i48(__v38451) =
  ln __v38452 ⇒
    let s_v38453 = (readline_i32(NULL)) NULL in
    match nat_of_string_i41(s_v38453) with
    | SomeUL_c17 n_v38454 ⇒ n_v38454
    | NoneUL_c16  ⇒
      let __v38455 = (print_i33("please input a natural number\n")) NULL in
      (read_nat_i48(NULL)) NULL
    end

val read_natclo_i113 = fn __v38456 ⇒ read_nat_i48(__v38456)

fun player_loop_i49(ans_v38457, repeat_v38458, c_v38459) =
  (if repeat_v38458 then
     fn c_v38460 ⇒
       ln __v38461 ⇒
         let guess_v38462 = (read_nat_i48(NULL)) NULL in
         let c_v38463 = send(c_v38460, guess_v38462) in
         let __v38464 = recv(c_v38463) in
         match __v38464 with
         | (ord_v38465, c_v38466) ⇒
           match (NULL, c_v38466) with
           | (pf_v38467, c_v38468) ⇒
             match ord_v38465 with
             | EQ_c3  ⇒
               let __v38469 = (print_i33("You Win!\n")) NULL in
               close(c_v38468)
             | LT_c1  ⇒
               let __v38470 =
                 (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                              string_of_nat_i38(repeat_v38458.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v38458.-1, c_v38468)) NULL
             | GT_c2  ⇒
               let __v38471 =
                 (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                              string_of_nat_i38(repeat_v38458.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v38458.-1, c_v38468)) NULL
             end
           end
         end
   else
     fn c_v38472 ⇒
       ln __v38473 ⇒
         let __v38474 = recv(c_v38472) in
         match __v38474 with
         | (ans_v38475, c_v38476) ⇒
           match (NULL, c_v38476) with
           | (pf_v38477, c_v38478) ⇒
             let __v38479 =
               (print_i33(cats_i19(cats_i19("You Lose! The answer is ",
                                            string_of_nat_i38(ans_v38475)),
                                   ".\n")))
                 NULL
             in close(c_v38478)
           end
         end)
    c_v38459

val player_loopclo_i114 =
  fn ans_v38480 repeat_v38481 c_v38482 ⇒
    player_loop_i49(ans_v38480, repeat_v38481, c_v38482)

fun player_i50(c_v38483) =
  ln __v38484 ⇒
    let __v38485 = recv(c_v38483) in
    match __v38485 with
    | (lower_v38486, c_v38487) ⇒
      let __v38488 = recv(c_v38487) in
      match __v38488 with
      | (upper_v38489, c_v38490) ⇒
        match (NULL, c_v38490) with
        | (ans_v38491, c_v38492) ⇒
          match (NULL, c_v38492) with
          | (pf1_v38493, c_v38494) ⇒
            match (NULL, c_v38494) with
            | (pf2_v38495, c_v38496) ⇒
              let __v38497 = recv(c_v38496) in
              match __v38497 with
              | (repeat_v38498, c_v38499) ⇒
                let __v38500 =
                  (print_i33(cats_i19(cats_i19(cats_i19(cats_i19("Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v38486)),
                                                        " and "),
                                               string_of_nat_i38(upper_v38489)),
                                      ".\n")))
                    NULL
                in
                let __v38501 =
                  (print_i33(cats_i19(cats_i19("You have ",
                                               string_of_nat_i38(repeat_v38498)),
                                      " tries.\n")))
                    NULL
                in (player_loop_i49(NULL, repeat_v38498, c_v38499)) NULL
              end
            end
          end
        end
      end
    end

val playerclo_i115 = fn c_v38502 ⇒ player_i50(c_v38502)

fun server_loop_i51(ans_v38503, repeat_v38504, c_v38505) =
  (if repeat_v38504 then
     fn c_v38506 ⇒
       ln __v38507 ⇒
         let __v38508 = recv(c_v38506) in
         match __v38508 with
         | (n_v38509, c_v38510) ⇒
           let ord_v38511 = comparen_i10(ans_v38503, n_v38509) in
           let c_v38512 = send(c_v38510, ord_v38511) in
           match ord_v38511 with
           | EQ_c3  ⇒ NULL
           | LT_c1  ⇒
             (server_loop_i51(ans_v38503, repeat_v38504.-1, c_v38512)) NULL
           | GT_c2  ⇒
             (server_loop_i51(ans_v38503, repeat_v38504.-1, c_v38512)) NULL
           end
         end
   else
     fn c_v38513 ⇒
       ln __v38514 ⇒ let c_v38515 = send(c_v38513, ans_v38503) in NULL)
    c_v38505

val server_loopclo_i116 =
  fn ans_v38516 repeat_v38517 c_v38518 ⇒
    server_loop_i51(ans_v38516, repeat_v38517, c_v38518)

fun server_i52(c_v38519) =
  ln __v38520 ⇒
    let res_v38521 = rand(1, 128) in
    match res_v38521 with
    | Between_c4 ans_v38522 pf1_v38523 pf2_v38524 ⇒
      let c_v38525 = send(c_v38519, 1) in
      let c_v38526 = send(c_v38525, 128) in
      let c_v38527 = send(c_v38526, 7) in
      (server_loop_i51(ans_v38522, 7, c_v38527)) NULL
    end

val serverclo_i117 = fn c_v38528 ⇒ server_i52(c_v38528)

main =
  let c_v38529 = fork c_v38530 in (server_i52(c_v38530)) NULL in
  let c0_v38531 =
    fork c0_v38532 in
      let __v38533 = recv(c0_v38532) in
      match __v38533 with
      | (c_v38534, c0_v38535) ⇒
        let __v38536 = (player_i50(c_v38534)) NULL in
        let c0_v38537 = send(c0_v38535, NULL) in NULL
      end
  in
  let c0_v38538 = send(c0_v38531, c_v38529) in
  let __v38539 = recv(c0_v38538) in
  match __v38539 with
  | (__v38540, c0_v38541) ⇒ close(c0_v38541)
  end

trans3e success--------------------------

trans34 success--------------------------

