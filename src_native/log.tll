program split‹t› (zs : ((list‹_, t›)
(nat))) : (∃ (_ : ((list‹_, t›) (nat))) ⊗ ((list‹_, t›)
(nat))) = match zs as _ in _ with nil  ⇒ ⟨nil, nil⟩ | cons x
zs ⇒ match zs as _ in _ with nil  ⇒ ⟨((cons) (x)
(nil)), nil⟩ | cons y zs ⇒ let ⟨xs, ys⟩ = ((split)
(zs)) in ⟨((cons) (x) (xs)), ((cons) (y)
(ys))⟩

program merge‹t› (xs : ((list‹_, t›)
(nat))) : (∀ (_ : ((list‹_, t›) (nat))) ⊸ ((list‹_, t›)
(nat))) = (ln (ys : _) ⇒ match xs as _ in _ with nil  ⇒ ys | cons x
xs0 ⇒ match ys as _ in _ with nil  ⇒ ((cons) (x) (xs0)) | cons y
ys0 ⇒ match ((lten) (x) (y)) as _ in _ with true ⇒ ((cons) (x)
(((merge) (xs0) (((cons) (y) (ys0)))))) | false ⇒ ((cons) (y)
(((merge) (((cons) (x) (xs0))) (ys0)))))

program msort‹t› (zs : ((list‹_, t›) (nat))) : ((list‹_, t›)
(nat)) = match zs as _ in _ with nil  ⇒ nil | cons x
zs ⇒ match zs as _ in _ with nil  ⇒ ((cons) (x) (nil)) | cons y
zs ⇒ let ⟨xs, ys⟩ = ((split)
(((cons) (x) (((cons) (y) (zs)))))) in ((merge) (((msort) (xs)))
(((msort) (ys))))

logical cmsort_ch‹t› : L = ch‹!(_ : ((list‹_, t›)
(nat))) → end›

program cmsort_worker‹t› (n : nat) (zs : ((list‹_, t›)
(nat))) : (∀ (_ : cmsort_ch‹t›) ⊸ IO unit) = (ln (c : _) ⇒ match n as _ in _ with O ⇒ let c ⇐ (
(send c)
(((msort) (zs)))) in close c | S n ⇒ match zs as _ in _ with nil  ⇒ let c ⇐ (
(send c) (nil)) in close c | cons z0
zs0 ⇒ match zs0 as _ in _ with nil  ⇒ let c ⇐ ((send c)
(nil)) in close c | cons z1 zs1 ⇒ let ⟨xs0, ys0⟩ = ((split)
(((cons) (z0) (((cons) (z1) (zs1)))))) in let r1 ⇐ fork (r1 : cmsort_ch) in (
(cmsort_worker) (n) (xs0)
(r1)) in let r2 ⇐ fork (r2 : cmsort_ch) in ((cmsort_worker) (n) (ys0)
(r2)) in let ⟨xs1, r1⟩ ⇐ recv r1 in let ⟨ys1, r2⟩ ⇐ recv r2 in let zs = (
(merge) (xs1) (ys1)) in let c ⇐ ((send c)
(zs)) in let _ ⇐ close r1 in let _ ⇐ close r2 in close c)

program cmsort‹t› (zs0 : ((list‹_, t›) (nat))) : IO ((list‹_, t›)
(nat)) = let c ⇐ fork (c : cmsort_ch) in ((cmsort_worker) (O.+4) (zs0)
(c)) in let ⟨zs1, c⟩ ⇐ recv c in let _ ⇐ close c in return zs1

program mkList‹t› (n : nat) : ((list‹_, t›)
(nat)) = match n as _ in _ with O ⇒ nil | S n0 ⇒ ((cons) (n)
(((mkList) (n0))))

program free‹› {A : U} (ls : ((list‹_, L›)
(A))) : unit = match ls as _ in _ with nil  ⇒ () | cons _ ls ⇒ ((free)
(_)
(ls))

program main‹› : IO unit = let test = ((mkList‹L›)
(O.+400000)) in let sorted ⇐ ((cmsort) (test)) in let _ = ((free) (_)
(sorted)) in return ()

parsing success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v228 : bool) (b2_v229 : bool) ⇒
    match b1_v228 as __v230 in ??1 with
    | true ⇒ b2_v229 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v233 : bool) (b2_v234 : bool) ⇒
    match b1_v233 as __v235 in ??2 with
    | true ⇒ true | false ⇒ b2_v234
    end

program notb_i3 : bool → bool =
  fn (b_v237 : bool) ⇒
    match b_v237 as __v238 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v241 : nat) (y_v242 : nat) ⇒
    match x_v241 as __v243 in ??4 with
    | O ⇒ true
    | S x_v244 ⇒
      match y_v242 as __v245 in ??5 with
      | O ⇒ false | S y_v246 ⇒ (lten_i4 x_v244 y_v246)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v249 : nat) (y_v250 : nat) ⇒
    match x_v249 as __v251 in ??6 with
    | O ⇒
      match y_v250 as __v252 in ??8 with
      | O ⇒ true | S __v253 ⇒ false
      end
    | S x_v254 ⇒
      match y_v250 as __v255 in ??7 with
      | O ⇒ true | S y_v256 ⇒ (gten_i5 x_v254 y_v256)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v259 : nat) (y_v260 : nat) ⇒
    match x_v259 as __v261 in ??9 with
    | O ⇒
      match y_v260 as __v262 in ??11 with
      | O ⇒ false | S y_v263 ⇒ true
      end
    | S x_v264 ⇒
      match y_v260 as __v265 in ??10 with
      | O ⇒ false | S y_v266 ⇒ (ltn_i6 x_v264 y_v266)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v269 : nat) (y_v270 : nat) ⇒
    match x_v269 as __v271 in ??12 with
    | O ⇒ false
    | S x_v272 ⇒
      match y_v270 as __v273 in ??13 with
      | O ⇒ true | S y_v274 ⇒ (gtn_i7 x_v272 y_v274)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v277 : nat) (y_v278 : nat) ⇒
    match x_v277 as __v279 in ??14 with
    | O ⇒
      match y_v278 as __v280 in ??16 with
      | O ⇒ true | S __v281 ⇒ false
      end
    | S x_v282 ⇒
      match y_v278 as __v283 in ??15 with
      | O ⇒ false | S y_v284 ⇒ (eqn_i8 x_v282 y_v284)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v286 : nat) ⇒
    match x_v286 as __v287 in ??17 with
    | O ⇒ 0 | S x_v288 ⇒ x_v288
    end

program addn_i10 : nat → nat → nat =
  fn (x_v291 : nat) (y_v292 : nat) ⇒
    match x_v291 as __v293 in ??18 with
    | O ⇒ y_v292 | S x_v294 ⇒ (addn_i10 x_v294 y_v292).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v297 : nat) (y_v298 : nat) ⇒
    match y_v298 as __v299 in ??19 with
    | O ⇒ x_v297 | S y_v300 ⇒ (subn_i11 (pred_i9 x_v297) y_v300)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v303 : nat) (y_v304 : nat) ⇒
    match x_v303 as __v305 in ??20 with
    | O ⇒ 0 | S x_v306 ⇒ (addn_i10 y_v304 (muln_i12 x_v306 y_v304))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v309 : nat) (y_v310 : nat) ⇒
    match (ltn_i6 x_v309 y_v310) as __v311 in ??21 with
    | true ⇒ 0 | false ⇒ (divn_i13 (subn_i11 x_v309 y_v310) y_v310).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v314 : nat) (y_v315 : nat) ⇒
    (subn_i11 x_v314 (muln_i12 (divn_i13 x_v314 y_v315) y_v315))

inductive char_d1 : U =
| Char_c1 of (n_v316 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v317 : char_d1) (s_v318 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v321 : string_d2) (s2_v322 : string_d2) ⇒
    match s1_v321 as __v323 in ??22 with
    | EmptyString_c2  ⇒ s2_v322
    | String_c3 c_v324 s1_v325 ⇒
      (String_c3‹› c_v324 (cats_i15 s1_v325 s2_v322))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v327 : string_d2) ⇒
    match s_v327 as __v328 in ??23 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v329 s_v330 ⇒ (strlen_i16 s_v330).+1
    end

inductive list_d3 ‹s_s331, t_s332›
  (A_v333 : Type‹s_s331›) : Type‹t_s332›
=
| nil_c4 of
    ‹s_s334, t_s335› (A_v336 : Type‹s_s334›)
    : (list_d3‹s_s334, t_s335› A_v336)
| cons_c5 of
    ‹s_s337, t_s338› (A_v339 : Type‹s_s337›) (hd_v340 : A_v339)
    (tl_v341 : (list_d3‹s_s337, t_s338› A_v339))
    : (list_d3‹s_s337, t_s338› A_v339)

program len_i17 ‹s_s342, t_s343› :
  ∀ {A_v344 : Type‹s_s342›} →
    (list_d3‹??24, t_s343› A_v344) →
      nat ⊗ (list_d3‹??25, t_s343› A_v344)
=
  fn {A_v347 : Type‹s_s342›}
     (xs_v348 : (list_d3‹??24, t_s343› A_v347)) ⇒
    match xs_v348 as __v349 in ??26 with
    | nil_c4  ⇒ ⟨0, nil_c4‹??36, ??35›⟩
    | cons_c5 x_v350 xs_v351 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v351) as __v352 in ??30 with
      | ⟨n_v353, xs_v354⟩ ⇒
        ⟨n_v353.+1, (cons_c5‹??33, ??32› x_v350 xs_v354)⟩
      end
    end

program append_i18 ‹s_s355, t_s356› :
  ∀ {A_v357 : Type‹s_s355›} →
    (list_d3‹??37, t_s356› A_v357) →
      (list_d3‹??38, t_s356› A_v357) ⊸ (list_d3‹??40, ??39› A_v357)
=
  fn {A_v360 : Type‹s_s355›}
     (xs_v361 : (list_d3‹??37, t_s356› A_v360)) ⇒
    ln (ys_v362 : ??41) ⇒
      match xs_v361 as __v363 in ??42 with
      | nil_c4  ⇒ ys_v362
      | cons_c5 x_v364 xs_v365 ⇒
        (cons_c5‹??48, ??47›
          x_v364 (append_i18‹??45, ??44› ??43 xs_v365 ys_v362))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v367 : unit) ⇒
    ⇑(b_v368 : bool) ⇒
      match b_v368 as __v369 in ??49 with
      | true ⇒ ⇓(__v370 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v372 : unit) ⇒
    ⇑(b_v373 : bool) ⇒
      match b_v373 as __v374 in ??50 with
      | true ⇒ ⇑(__v375 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v377 : unit) ⇒
    ⇑(b_v378 : bool) ⇒
      match b_v378 as __v379 in ??51 with
      | true ⇒ ⇑(__v380 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v382 : unit) ⇒
    let ch_v383 ⇐ open stdin in
    let ch_v384 ⇐ (send ch_v383 true) in
    let __v385 ⇐ recv ch_v384 in
    match __v385 as __v386 in ??52 with
    | ⟨s_v387, ch_v388⟩ ⇒
      let ch_v389 ⇐ (send ch_v388 false) in
      let __v390 ⇐ close ch_v389 in return s_v387
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v392 : string_d2) ⇒
    let ch_v393 ⇐ open stdout in
    let ch_v394 ⇐ (send ch_v393 true) in
    let ch_v395 ⇐ (send ch_v394 s_v392) in
    let ch_v396 ⇐ (send ch_v395 false) in close ch_v396

program prerr_i27 : string_d2 → IO unit =
  fn (s_v398 : string_d2) ⇒
    let ch_v399 ⇐ open stderr in
    let ch_v400 ⇐ (send ch_v399 true) in
    let ch_v401 ⇐ (send ch_v400 s_v398) in
    let ch_v402 ⇐ (send ch_v401 false) in close ch_v402

program split_i28 ‹t_s403› :
  (list_d3‹??53, t_s403› nat) →
    (list_d3‹??54, t_s403› nat) ⊗ (list_d3‹??55, t_s403› nat)
=
  fn (zs_v406 : (list_d3‹??53, t_s403› nat)) ⇒
    match zs_v406 as __v407 in ??56 with
    | nil_c4  ⇒ ⟨nil_c4‹??77, ??76›, nil_c4‹??80, ??79›⟩
    | cons_c5 x_v408 zs_v409 ⇒
      match zs_v409 as __v410 in ??57 with
      | nil_c4  ⇒
        ⟨(cons_c5‹??71, ??70› x_v408 nil_c4‹??68, ??67›), nil_c4‹??74,
        ??73›⟩
      | cons_c5 y_v411 zs_v412 ⇒
        let __v413 = (split_i28‹??58› zs_v412) in
        match __v413 as __v414 in ??65 with
        | ⟨xs_v415, ys_v416⟩ ⇒
          ⟨(cons_c5‹??61, ??60› x_v408 xs_v415), (cons_c5‹??64,
                                                       ??63›
                                                         y_v411 ys_v416)⟩
        end
      end
    end

program merge_i29 ‹t_s417› :
  (list_d3‹??81, t_s417› nat) →
    (list_d3‹??82, t_s417› nat) ⊸ (list_d3‹??83, t_s417› nat)
=
  fn (xs_v420 : (list_d3‹??81, t_s417› nat)) ⇒
    ln (ys_v421 : ??84) ⇒
      match xs_v420 as __v422 in ??85 with
      | nil_c4  ⇒ ys_v421
      | cons_c5 x_v423 xs0_v424 ⇒
        match ys_v421 as __v425 in ??86 with
        | nil_c4  ⇒ (cons_c5‹??104, ??103› x_v423 xs0_v424)
        | cons_c5 y_v426 ys0_v427 ⇒
          match (lten_i4 x_v423 y_v426) as __v428 in ??87 with
          | true ⇒
            (cons_c5‹??101, ??100›
              x_v423
              (merge_i29‹??98›
                xs0_v424 (cons_c5‹??97, ??96› y_v426 ys0_v427)))
          | false ⇒
            (cons_c5‹??94, ??93›
              y_v426
              (merge_i29‹??91›
                (cons_c5‹??90, ??89› x_v423 xs0_v424) ys0_v427))
          end
        end
      end

program msort_i30 ‹t_s429› :
  (list_d3‹??105, t_s429› nat) → (list_d3‹??106, t_s429› nat)
=
  fn (zs_v431 : (list_d3‹??105, t_s429› nat)) ⇒
    match zs_v431 as __v432 in ??107 with
    | nil_c4  ⇒ nil_c4‹??128, ??127›
    | cons_c5 x_v433 zs_v434 ⇒
      match zs_v434 as __v435 in ??108 with
      | nil_c4  ⇒
        (cons_c5‹??125, ??124› x_v433 nil_c4‹??122, ??121›)
      | cons_c5 y_v436 zs_v437 ⇒
        let __v438 =
          (split_i28‹??115›
            (cons_c5‹??114, ??113›
              x_v433 (cons_c5‹??111, ??110› y_v436 zs_v437)))
        in
        match __v438 as __v439 in ??119 with
        | ⟨xs_v440, ys_v441⟩ ⇒
          (merge_i29‹??118›
            (msort_i30‹??117› xs_v440) (msort_i30‹??116› ys_v441))
        end
      end
    end

logical cmsort_ch_i31 ‹t_s442› : L =
  ch⟨⇑(__v443 : (list_d3‹??129, t_s442› nat)) ⇒ end⟩

program cmsort_worker_i32 ‹t_s444› :
  nat →
    (list_d3‹??130, t_s444› nat) →
      cmsort_ch_i31‹t_s444› ⊸ IO unit
=
  fn (n_v448 : nat) (zs_v449 : (list_d3‹??130, t_s444› nat)) ⇒
    ln (c_v450 : ??131) ⇒
      match n_v448 as __v451 in ??132 with
      | O ⇒
        let c_v452 ⇐ (send c_v450 (msort_i30‹??156› zs_v449)) in
        close c_v452
      | S n_v453 ⇒
        match zs_v449 as __v454 in ??133 with
        | nil_c4  ⇒
          let c_v455 ⇐ (send c_v450 nil_c4‹??155, ??154›) in
          close c_v455
        | cons_c5 z0_v456 zs0_v457 ⇒
          match zs0_v457 as __v458 in ??134 with
          | nil_c4  ⇒
            let c_v459 ⇐ (send c_v450 nil_c4‹??152, ??151›) in
            close c_v459
          | cons_c5 z1_v460 zs1_v461 ⇒
            let __v462 =
              (split_i28‹??141›
                (cons_c5‹??140, ??139›
                  z0_v456 (cons_c5‹??137, ??136› z1_v460 zs1_v461)))
            in
            match __v462 as __v463 in ??149 with
            | ⟨xs0_v464, ys0_v465⟩ ⇒
              let r1_v466 ⇐
                fork (r1_v467 : cmsort_ch_i31‹??142›) in
                  (cmsort_worker_i32‹??143› n_v453 xs0_v464 r1_v467)
              in
              let r2_v468 ⇐
                fork (r2_v469 : cmsort_ch_i31‹??144›) in
                  (cmsort_worker_i32‹??145› n_v453 ys0_v465 r2_v469)
              in
              let __v470 ⇐ recv r1_v466 in
              match __v470 as __v471 in ??148 with
              | ⟨xs1_v472, r1_v473⟩ ⇒
                let __v474 ⇐ recv r2_v468 in
                match __v474 as __v475 in ??147 with
                | ⟨ys1_v476, r2_v477⟩ ⇒
                  let zs_v478 = (merge_i29‹??146› xs1_v472 ys1_v476) in
                  let c_v479 ⇐ (send c_v450 zs_v478) in
                  let __v480 ⇐ close r1_v473 in
                  let __v481 ⇐ close r2_v477 in close c_v479
                end
              end
            end
          end
        end
      end

program cmsort_i33 ‹t_s482› :
  (list_d3‹??157, t_s482› nat) → IO (list_d3‹??158, t_s482› nat)
=
  fn (zs0_v484 : (list_d3‹??157, t_s482› nat)) ⇒
    let c_v485 ⇐
      fork (c_v486 : cmsort_ch_i31‹??159›) in
        (cmsort_worker_i32‹??160› 4 zs0_v484 c_v486)
    in
    let __v487 ⇐ recv c_v485 in
    match __v487 as __v488 in ??161 with
    | ⟨zs1_v489, c_v490⟩ ⇒
      let __v491 ⇐ close c_v490 in return zs1_v489
    end

program mkList_i34 ‹t_s492› : nat → (list_d3‹??162, t_s492› nat) =
  fn (n_v494 : nat) ⇒
    match n_v494 as __v495 in ??163 with
    | O ⇒ nil_c4‹??170, ??169›
    | S n0_v496 ⇒
      (cons_c5‹??167, ??166› n_v494 (mkList_i34‹??164› n0_v496))
    end

program free_i35 :
  ∀ {A_v497 : U} → (list_d3‹??171, L› A_v497) → unit
=
  fn {A_v499 : U} (ls_v500 : (list_d3‹??171, L› A_v499)) ⇒
    match ls_v500 as __v501 in ??172 with
    | nil_c4  ⇒ () | cons_c5 __v502 ls_v503 ⇒ (free_i35 ??173 ls_v503)
    end

program main_i36 : IO unit =
  let test_v504 = (mkList_i34‹L› 400000) in
  let sorted_v505 ⇐ (cmsort_i33‹??174› test_v504) in
  let __v506 = (free_i35 ??175 sorted_v505) in return ()

trans01 success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v12892 : bool) (b2_v12893 : bool) ⇒
    match b1_v12892 as __v12894 in bool with
    | true ⇒ b2_v12893 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v12897 : bool) (b2_v12898 : bool) ⇒
    match b1_v12897 as __v12899 in bool with
    | true ⇒ true | false ⇒ b2_v12898
    end

program notb_i3 : bool → bool =
  fn (b_v12901 : bool) ⇒
    match b_v12901 as __v12902 in bool with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v12905 : nat) (y_v12906 : nat) ⇒
    match x_v12905 as __v12907 in bool with
    | O ⇒ true
    | S x_v12908 ⇒
      match y_v12906 as __v12909 in bool with
      | O ⇒ false | S y_v12910 ⇒ (lten_i4 x_v12908 y_v12910)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v12913 : nat) (y_v12914 : nat) ⇒
    match x_v12913 as __v12915 in bool with
    | O ⇒
      match y_v12914 as __v12916 in bool with
      | O ⇒ true | S __v12917 ⇒ false
      end
    | S x_v12918 ⇒
      match y_v12914 as __v12919 in bool with
      | O ⇒ true | S y_v12920 ⇒ (gten_i5 x_v12918 y_v12920)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v12923 : nat) (y_v12924 : nat) ⇒
    match x_v12923 as __v12925 in bool with
    | O ⇒
      match y_v12924 as __v12926 in bool with
      | O ⇒ false | S y_v12927 ⇒ true
      end
    | S x_v12928 ⇒
      match y_v12924 as __v12929 in bool with
      | O ⇒ false | S y_v12930 ⇒ (ltn_i6 x_v12928 y_v12930)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v12933 : nat) (y_v12934 : nat) ⇒
    match x_v12933 as __v12935 in bool with
    | O ⇒ false
    | S x_v12936 ⇒
      match y_v12934 as __v12937 in bool with
      | O ⇒ true | S y_v12938 ⇒ (gtn_i7 x_v12936 y_v12938)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v12941 : nat) (y_v12942 : nat) ⇒
    match x_v12941 as __v12943 in bool with
    | O ⇒
      match y_v12942 as __v12944 in bool with
      | O ⇒ true | S __v12945 ⇒ false
      end
    | S x_v12946 ⇒
      match y_v12942 as __v12947 in bool with
      | O ⇒ false | S y_v12948 ⇒ (eqn_i8 x_v12946 y_v12948)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v12950 : nat) ⇒
    match x_v12950 as __v12951 in nat with
    | O ⇒ 0 | S x_v12952 ⇒ x_v12952
    end

program addn_i10 : nat → nat → nat =
  fn (x_v12955 : nat) (y_v12956 : nat) ⇒
    match x_v12955 as __v12957 in nat with
    | O ⇒ y_v12956 | S x_v12958 ⇒ (addn_i10 x_v12958 y_v12956).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v12961 : nat) (y_v12962 : nat) ⇒
    match y_v12962 as __v12963 in nat with
    | O ⇒ x_v12961 | S y_v12964 ⇒ (subn_i11 (pred_i9 x_v12961) y_v12964)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v12967 : nat) (y_v12968 : nat) ⇒
    match x_v12967 as __v12969 in nat with
    | O ⇒ 0
    | S x_v12970 ⇒ (addn_i10 y_v12968 (muln_i12 x_v12970 y_v12968))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v12973 : nat) (y_v12974 : nat) ⇒
    match (ltn_i6 x_v12973 y_v12974) as __v12975 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i13 (subn_i11 x_v12973 y_v12974) y_v12974).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v12978 : nat) (y_v12979 : nat) ⇒
    (subn_i11 x_v12978 (muln_i12 (divn_i13 x_v12978 y_v12979) y_v12979))

inductive char_d1 : U =
| Char_c1 of (n_v12980 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v12981 : char_d1) (s_v12982 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v12985 : string_d2) (s2_v12986 : string_d2) ⇒
    match s1_v12985 as __v12987 in string_d2 with
    | EmptyString_c2  ⇒ s2_v12986
    | String_c3 c_v12988 s1_v12989 ⇒
      (String_c3‹› c_v12988 (cats_i15 s1_v12989 s2_v12986))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v12991 : string_d2) ⇒
    match s_v12991 as __v12992 in nat with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v12993 s_v12994 ⇒ (strlen_i16 s_v12994).+1
    end

inductive list_d3 ‹s_s12995, t_s12996›
  (A_v12997 : Type‹s_s12995›) : Type‹t_s12996›
=
| nil_c4 of
    ‹s_s12998, t_s12999› (A_v13000 : Type‹s_s12998›)
    : (list_d3‹s_s12998, t_s12999› A_v13000)
| cons_c5 of
    ‹s_s13001, t_s13002› (A_v13003 : Type‹s_s13001›)
    (hd_v13004 : A_v13003)
    (tl_v13005 : (list_d3‹s_s13001, t_s13002› A_v13003))
    : (list_d3‹s_s13001, t_s13002› A_v13003)

program len_i17 ‹s_s13006, t_s13007› :
  ∀ {A_v13008 : Type‹s_s13006›} →
    (list_d3‹s_s13006, t_s13007› A_v13008) →
      nat ⊗ (list_d3‹s_s13006, t_s13007› A_v13008)
=
  fn {A_v13011 : Type‹s_s13006›}
     (xs_v13012 : (list_d3‹s_s13006, t_s13007› A_v13011)) ⇒
    match xs_v13012 as __v13013 in
      nat ⊗ (list_d3‹s_s13006, t_s13007› A_v13011) with
    | nil_c4  ⇒ ⟨0, nil_c4‹s_s13006, t_s13007›⟩
    | cons_c5 x_v13015 xs_v13016 ⇒
      match (len_i17‹s_s13006, t_s13007› A_v13011 xs_v13016) as __v13017 in
        nat ⊗ (list_d3‹s_s13006, t_s13007› A_v13011) with
      | ⟨n_v13019, xs_v13020⟩ ⇒
        ⟨n_v13019.+1, (cons_c5‹s_s13006, t_s13007› x_v13015 xs_v13020)⟩
      end
    end

program append_i18 ‹s_s13021, t_s13022› :
  ∀ {A_v13023 : Type‹s_s13021›} →
    (list_d3‹s_s13021, t_s13022› A_v13023) →
      (list_d3‹s_s13021, t_s13022› A_v13023) ⊸
        (list_d3‹s_s13021, t_s13022› A_v13023)
=
  fn {A_v13026 : Type‹s_s13021›}
     (xs_v13027 : (list_d3‹s_s13021, t_s13022› A_v13026)) ⇒
    ln (ys_v13028 : (list_d3‹s_s13021, t_s13022› A_v13026)) ⇒
      match xs_v13027 as __v13029 in
        (list_d3‹s_s13021, t_s13022› A_v13026) with
      | nil_c4  ⇒ ys_v13028
      | cons_c5 x_v13030 xs_v13031 ⇒
        (cons_c5‹s_s13021, t_s13022›
          x_v13030
          (append_i18‹s_s13021, t_s13022› A_v13026 xs_v13031 ys_v13028))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v13033 : unit) ⇒
    ⇑(b_v13034 : bool) ⇒
      match b_v13034 as __v13035 in proto with
      | true ⇒ ⇓(__v13036 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v13038 : unit) ⇒
    ⇑(b_v13039 : bool) ⇒
      match b_v13039 as __v13040 in proto with
      | true ⇒ ⇑(__v13041 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v13043 : unit) ⇒
    ⇑(b_v13044 : bool) ⇒
      match b_v13044 as __v13045 in proto with
      | true ⇒ ⇑(__v13046 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v13048 : unit) ⇒
    let ch_v13049 ⇐ open stdin in
    let ch_v13050 ⇐ (send ch_v13049 true) in
    let __v13051 ⇐ recv ch_v13050 in
    match __v13051 as __v13052 in IO string_d2 with
    | ⟨s_v13053, ch_v13054⟩ ⇒
      let ch_v13055 ⇐ (send ch_v13054 false) in
      let __v13056 ⇐ close ch_v13055 in return s_v13053
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v13058 : string_d2) ⇒
    let ch_v13059 ⇐ open stdout in
    let ch_v13060 ⇐ (send ch_v13059 true) in
    let ch_v13061 ⇐ (send ch_v13060 s_v13058) in
    let ch_v13062 ⇐ (send ch_v13061 false) in close ch_v13062

program prerr_i27 : string_d2 → IO unit =
  fn (s_v13064 : string_d2) ⇒
    let ch_v13065 ⇐ open stderr in
    let ch_v13066 ⇐ (send ch_v13065 true) in
    let ch_v13067 ⇐ (send ch_v13066 s_v13064) in
    let ch_v13068 ⇐ (send ch_v13067 false) in close ch_v13068

program split_i28 ‹t_s13069› :
  (list_d3‹U, t_s13069› nat) →
    (list_d3‹U, t_s13069› nat) ⊗ (list_d3‹U, t_s13069› nat)
=
  fn (zs_v13072 : (list_d3‹U, t_s13069› nat)) ⇒
    match zs_v13072 as __v13073 in
      (list_d3‹U, t_s13069› nat) ⊗ (list_d3‹U, t_s13069› nat) with
    | nil_c4  ⇒ ⟨nil_c4‹U, t_s13069›, nil_c4‹U, t_s13069›⟩
    | cons_c5 x_v13075 zs_v13076 ⇒
      match zs_v13076 as __v13077 in
        (list_d3‹U, t_s13069› nat) ⊗ (list_d3‹U, t_s13069› nat) with
      | nil_c4  ⇒
        ⟨(cons_c5‹U, t_s13069› x_v13075 nil_c4‹U, t_s13069›), nil_c4‹U,
        t_s13069›⟩
      | cons_c5 y_v13079 zs_v13080 ⇒
        let __v13081 = (split_i28‹t_s13069› zs_v13080) in
        match __v13081 as __v13082 in
          (list_d3‹U, t_s13069› nat) ⊗ (list_d3‹U, t_s13069› nat) with
        | ⟨xs_v13084, ys_v13085⟩ ⇒
          ⟨(cons_c5‹U, t_s13069› x_v13075 xs_v13084), (cons_c5‹U,
                                                            t_s13069›
                                                              y_v13079
                                                              ys_v13085)⟩
        end
      end
    end

program merge_i29 ‹t_s13086› :
  (list_d3‹U, t_s13086› nat) →
    (list_d3‹U, t_s13086› nat) ⊸ (list_d3‹U, t_s13086› nat)
=
  fn (xs_v13089 : (list_d3‹U, t_s13086› nat)) ⇒
    ln (ys_v13090 : (list_d3‹U, t_s13086› nat)) ⇒
      match xs_v13089 as __v13091 in (list_d3‹U, t_s13086› nat) with
      | nil_c4  ⇒ ys_v13090
      | cons_c5 x_v13092 xs0_v13093 ⇒
        match ys_v13090 as __v13094 in (list_d3‹U, t_s13086› nat) with
        | nil_c4  ⇒ (cons_c5‹U, t_s13086› x_v13092 xs0_v13093)
        | cons_c5 y_v13095 ys0_v13096 ⇒
          match (lten_i4 x_v13092 y_v13095) as __v13097 in
            (list_d3‹U, t_s13086› nat) with
          | true ⇒
            (cons_c5‹U, t_s13086›
              x_v13092
              (merge_i29‹t_s13086›
                xs0_v13093 (cons_c5‹U, t_s13086› y_v13095 ys0_v13096)))
          | false ⇒
            (cons_c5‹U, t_s13086›
              y_v13095
              (merge_i29‹t_s13086›
                (cons_c5‹U, t_s13086› x_v13092 xs0_v13093) ys0_v13096))
          end
        end
      end

program msort_i30 ‹t_s13098› :
  (list_d3‹U, t_s13098› nat) → (list_d3‹U, t_s13098› nat)
=
  fn (zs_v13100 : (list_d3‹U, t_s13098› nat)) ⇒
    match zs_v13100 as __v13101 in (list_d3‹U, t_s13098› nat) with
    | nil_c4  ⇒ nil_c4‹U, t_s13098›
    | cons_c5 x_v13102 zs_v13103 ⇒
      match zs_v13103 as __v13104 in (list_d3‹U, t_s13098› nat) with
      | nil_c4  ⇒
        (cons_c5‹U, t_s13098› x_v13102 nil_c4‹U, t_s13098›)
      | cons_c5 y_v13105 zs_v13106 ⇒
        let __v13107 =
          (split_i28‹t_s13098›
            (cons_c5‹U, t_s13098›
              x_v13102 (cons_c5‹U, t_s13098› y_v13105 zs_v13106)))
        in
        match __v13107 as __v13108 in (list_d3‹U, t_s13098› nat) with
        | ⟨xs_v13109, ys_v13110⟩ ⇒
          (merge_i29‹t_s13098›
            (msort_i30‹t_s13098› xs_v13109)
            (msort_i30‹t_s13098› ys_v13110))
        end
      end
    end

logical cmsort_ch_i31 ‹t_s13111› : L =
  ch⟨⇑(__v13112 : (list_d3‹U, t_s13111› nat)) ⇒ end⟩

program cmsort_worker_i32 ‹t_s13113› :
  nat →
    (list_d3‹U, t_s13113› nat) →
      cmsort_ch_i31‹t_s13113› ⊸ IO unit
=
  fn (n_v13117 : nat) (zs_v13118 : (list_d3‹U, t_s13113› nat)) ⇒
    ln (c_v13119 : cmsort_ch_i31‹t_s13113›) ⇒
      match n_v13117 as __v13120 in IO unit with
      | O ⇒
        let c_v13121 ⇐ (send c_v13119 (msort_i30‹t_s13113› zs_v13118))
        in close c_v13121
      | S n_v13122 ⇒
        match zs_v13118 as __v13123 in IO unit with
        | nil_c4  ⇒
          let c_v13124 ⇐ (send c_v13119 nil_c4‹U, t_s13113›) in
          close c_v13124
        | cons_c5 z0_v13125 zs0_v13126 ⇒
          match zs0_v13126 as __v13127 in IO unit with
          | nil_c4  ⇒
            let c_v13128 ⇐ (send c_v13119 nil_c4‹U, t_s13113›) in
            close c_v13128
          | cons_c5 z1_v13129 zs1_v13130 ⇒
            let __v13131 =
              (split_i28‹t_s13113›
                (cons_c5‹U, t_s13113›
                  z0_v13125 (cons_c5‹U, t_s13113› z1_v13129 zs1_v13130)))
            in
            match __v13131 as __v13132 in IO unit with
            | ⟨xs0_v13133, ys0_v13134⟩ ⇒
              let r1_v13135 ⇐
                fork (r1_v13136 : cmsort_ch_i31‹t_s13113›) in
                  (cmsort_worker_i32‹t_s13113›
                    n_v13122 xs0_v13133 r1_v13136)
              in
              let r2_v13137 ⇐
                fork (r2_v13138 : cmsort_ch_i31‹t_s13113›) in
                  (cmsort_worker_i32‹t_s13113›
                    n_v13122 ys0_v13134 r2_v13138)
              in
              let __v13139 ⇐ recv r1_v13135 in
              match __v13139 as __v13140 in IO unit with
              | ⟨xs1_v13141, r1_v13142⟩ ⇒
                let __v13143 ⇐ recv r2_v13137 in
                match __v13143 as __v13144 in IO unit with
                | ⟨ys1_v13145, r2_v13146⟩ ⇒
                  let zs_v13147 =
                    (merge_i29‹t_s13113› xs1_v13141 ys1_v13145)
                  in
                  let c_v13148 ⇐ (send c_v13119 zs_v13147) in
                  let __v13149 ⇐ close r1_v13142 in
                  let __v13150 ⇐ close r2_v13146 in close c_v13148
                end
              end
            end
          end
        end
      end

program cmsort_i33 ‹t_s13151› :
  (list_d3‹U, t_s13151› nat) → IO (list_d3‹U, t_s13151› nat)
=
  fn (zs0_v13153 : (list_d3‹U, t_s13151› nat)) ⇒
    let c_v13154 ⇐
      fork (c_v13155 : cmsort_ch_i31‹t_s13151›) in
        (cmsort_worker_i32‹t_s13151› 4 zs0_v13153 c_v13155)
    in
    let __v13156 ⇐ recv c_v13154 in
    match __v13156 as __v13157 in IO (list_d3‹U, t_s13151› nat) with
    | ⟨zs1_v13158, c_v13159⟩ ⇒
      let __v13160 ⇐ close c_v13159 in return zs1_v13158
    end

program mkList_i34 ‹t_s13161› : nat → (list_d3‹U, t_s13161› nat) =
  fn (n_v13163 : nat) ⇒
    match n_v13163 as __v13164 in (list_d3‹U, t_s13161› nat) with
    | O ⇒ nil_c4‹U, t_s13161›
    | S n0_v13165 ⇒
      (cons_c5‹U, t_s13161›
        n_v13163 (mkList_i34‹t_s13161› n0_v13165))
    end

program free_i35 :
  ∀ {A_v13166 : U} → (list_d3‹U, L› A_v13166) → unit
=
  fn {A_v13168 : U} (ls_v13169 : (list_d3‹U, L› A_v13168)) ⇒
    match ls_v13169 as __v13170 in unit with
    | nil_c4  ⇒ ()
    | cons_c5 __v13171 ls_v13172 ⇒ (free_i35 A_v13168 ls_v13172)
    end

program main_i36 : IO unit =
  let test_v13173 = (mkList_i34‹L› 400000) in
  let sorted_v13174 ⇐ (cmsort_i33‹L› test_v13173) in
  let __v13175 = (free_i35 nat sorted_v13174) in return ()

trans1e success--------------------------

def andb_i1 =
  fn b1_v13645 b2_v13646 ⇒
    match b1_v13645 with
    | true ⇒ b2_v13646 | false ⇒ false
    end

def orb_i2 =
  fn b1_v13647 b2_v13648 ⇒
    match b1_v13647 with
    | true ⇒ true | false ⇒ b2_v13648
    end

def notb_i3 =
  fn b_v13649 ⇒ match b_v13649 with
                  | true ⇒ false | false ⇒ true
                  end

def lten_i4 =
  fn x_v13650 y_v13651 ⇒
    match x_v13650 with
    | O ⇒ true
    | S x_v13652 ⇒
      match y_v13651 with
      | O ⇒ false | S y_v13653 ⇒ ((lten_i4 x_v13652) y_v13653)
      end
    end

def gten_i5 =
  fn x_v13654 y_v13655 ⇒
    match x_v13654 with
    | O ⇒ match y_v13655 with
            | O ⇒ true | S __v13656 ⇒ false
            end
    | S x_v13657 ⇒
      match y_v13655 with
      | O ⇒ true | S y_v13658 ⇒ ((gten_i5 x_v13657) y_v13658)
      end
    end

def ltn_i6 =
  fn x_v13659 y_v13660 ⇒
    match x_v13659 with
    | O ⇒ match y_v13660 with
            | O ⇒ false | S y_v13661 ⇒ true
            end
    | S x_v13662 ⇒
      match y_v13660 with
      | O ⇒ false | S y_v13663 ⇒ ((ltn_i6 x_v13662) y_v13663)
      end
    end

def gtn_i7 =
  fn x_v13664 y_v13665 ⇒
    match x_v13664 with
    | O ⇒ false
    | S x_v13666 ⇒
      match y_v13665 with
      | O ⇒ true | S y_v13667 ⇒ ((gtn_i7 x_v13666) y_v13667)
      end
    end

def eqn_i8 =
  fn x_v13668 y_v13669 ⇒
    match x_v13668 with
    | O ⇒ match y_v13669 with
            | O ⇒ true | S __v13670 ⇒ false
            end
    | S x_v13671 ⇒
      match y_v13669 with
      | O ⇒ false | S y_v13672 ⇒ ((eqn_i8 x_v13671) y_v13672)
      end
    end

def pred_i9 =
  fn x_v13673 ⇒ match x_v13673 with
                  | O ⇒ 0 | S x_v13674 ⇒ x_v13674
                  end

def addn_i10 =
  fn x_v13675 y_v13676 ⇒
    match x_v13675 with
    | O ⇒ y_v13676 | S x_v13677 ⇒ ((addn_i10 x_v13677) y_v13676).+1
    end

def subn_i11 =
  fn x_v13678 y_v13679 ⇒
    match y_v13679 with
    | O ⇒ x_v13678
    | S y_v13680 ⇒ ((subn_i11 (pred_i9 x_v13678)) y_v13680)
    end

def muln_i12 =
  fn x_v13681 y_v13682 ⇒
    match x_v13681 with
    | O ⇒ 0
    | S x_v13683 ⇒ ((addn_i10 y_v13682) ((muln_i12 x_v13683) y_v13682))
    end

def divn_i13 =
  fn x_v13684 y_v13685 ⇒
    match ((ltn_i6 x_v13684) y_v13685) with
    | true ⇒ 0
    | false ⇒ ((divn_i13 ((subn_i11 x_v13684) y_v13685)) y_v13685).+1
    end

def modn_i14 =
  fn x_v13686 y_v13687 ⇒
    ((subn_i11 x_v13686)
      ((muln_i12 ((divn_i13 x_v13686) y_v13687)) y_v13687))

data char_d1 =
| Char_c1 of size(1)

data string_d2 =
| EmptyString_c2 of size(0) | String_c3 of size(2)

def cats_i15 =
  fn s1_v13688 s2_v13689 ⇒
    match s1_v13688 with
    | EmptyString_c2  ⇒ s2_v13689
    | String_c3 c_v13690 s1_v13691 ⇒
      (String_c3 c_v13690 ((cats_i15 s1_v13691) s2_v13689))
    end

def strlen_i16 =
  fn s_v13692 ⇒
    match s_v13692 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v13693 s_v13694 ⇒ (strlen_i16 s_v13694).+1
    end

data listUU_d7 =
| nilUU_c12 of size(0) | consUU_c13 of size(2)

data listUL_d6 =
| nilUL_c10 of size(0) | consUL_c11 of size(2)

data listLU_d5 =
| nilLU_c8 of size(0)

data listLL_d4 =
| nilLL_c6 of size(0) | consLL_c7 of size(2)

def lenUU_i40 =
  fn A_v13695 xs_v13696 ⇒
    match xs_v13696 with
    | nilUU_c12  ⇒ (0, nilUU_c12)
    | consUU_c13 x_v13697 xs_v13698 ⇒
      match ((lenUU_i40 NULL) xs_v13698) with
      | (n_v13699, xs_v13700) ⇒
        (n_v13699.+1, (consUU_c13 x_v13697 xs_v13700))
      end
    end

def lenUL_i39 =
  fn A_v13701 xs_v13702 ⇒
    match xs_v13702 with
    | nilUL_c10  ⇒ (0, nilUL_c10)
    | consUL_c11 x_v13703 xs_v13704 ⇒
      match ((lenUL_i39 NULL) xs_v13704) with
      | (n_v13705, xs_v13706) ⇒
        (n_v13705.+1, (consUL_c11 x_v13703 xs_v13706))
      end
    end

def lenLL_i37 =
  fn A_v13707 xs_v13708 ⇒
    match xs_v13708 with
    | nilLL_c6  ⇒ (0, nilLL_c6)
    | consLL_c7 x_v13709 xs_v13710 ⇒
      match ((lenLL_i37 NULL) xs_v13710) with
      | (n_v13711, xs_v13712) ⇒
        (n_v13711.+1, (consLL_c7 x_v13709 xs_v13712))
      end
    end

def appendUU_i44 =
  fn A_v13713 xs_v13714 ⇒
    ln ys_v13715 ⇒
      match xs_v13714 with
      | nilUU_c12  ⇒ ys_v13715
      | consUU_c13 x_v13716 xs_v13717 ⇒
        (consUU_c13 x_v13716 (((appendUU_i44 NULL) xs_v13717) ys_v13715))
      end

def appendUL_i43 =
  fn A_v13718 xs_v13719 ⇒
    ln ys_v13720 ⇒
      match xs_v13719 with
      | nilUL_c10  ⇒ ys_v13720
      | consUL_c11 x_v13721 xs_v13722 ⇒
        (consUL_c11 x_v13721 (((appendUL_i43 NULL) xs_v13722) ys_v13720))
      end

def appendLL_i41 =
  fn A_v13723 xs_v13724 ⇒
    ln ys_v13725 ⇒
      match xs_v13724 with
      | nilLL_c6  ⇒ ys_v13725
      | consLL_c7 x_v13726 xs_v13727 ⇒
        (consLL_c7 x_v13726 (((appendLL_i41 NULL) xs_v13727) ys_v13725))
      end

def readline_i25 =
  fn __v13728 ⇒
    let ch_v13729 ⇐ open stdin in
    let ch_v13730 ⇐ (send ch_v13729 true) in
    let __v13731 ⇐ recv ch_v13730 in
    match __v13731 with
    | (s_v13732, ch_v13733) ⇒
      let ch_v13734 ⇐ (send ch_v13733 false) in
      let __v13735 ⇐ close⇑ ch_v13734 in return s_v13732
    end

def print_i26 =
  fn s_v13736 ⇒
    let ch_v13737 ⇐ open stdout in
    let ch_v13738 ⇐ (send ch_v13737 true) in
    let ch_v13739 ⇐ (send ch_v13738 s_v13736) in
    let ch_v13740 ⇐ (send ch_v13739 false) in close⇑ ch_v13740

def prerr_i27 =
  fn s_v13741 ⇒
    let ch_v13742 ⇐ open stderr in
    let ch_v13743 ⇐ (send ch_v13742 true) in
    let ch_v13744 ⇐ (send ch_v13743 s_v13741) in
    let ch_v13745 ⇐ (send ch_v13744 false) in close⇑ ch_v13745

def splitU_i46 =
  fn zs_v13746 ⇒
    match zs_v13746 with
    | nilUU_c12  ⇒ (nilUU_c12, nilUU_c12)
    | consUU_c13 x_v13747 zs_v13748 ⇒
      match zs_v13748 with
      | nilUU_c12  ⇒ ((consUU_c13 x_v13747 nilUU_c12), nilUU_c12)
      | consUU_c13 y_v13749 zs_v13750 ⇒
        let __v13751 = (splitU_i46 zs_v13750) in
        match __v13751 with
        | (xs_v13752, ys_v13753) ⇒
          ((consUU_c13 x_v13747 xs_v13752), (consUU_c13 y_v13749 ys_v13753))
        end
      end
    end

def splitL_i45 =
  fn zs_v13754 ⇒
    match zs_v13754 with
    | nilUL_c10  ⇒ (nilUL_c10, nilUL_c10)
    | consUL_c11 x_v13755 zs_v13756 ⇒
      match zs_v13756 with
      | nilUL_c10  ⇒ ((consUL_c11 x_v13755 nilUL_c10), nilUL_c10)
      | consUL_c11 y_v13757 zs_v13758 ⇒
        let __v13759 = (splitL_i45 zs_v13758) in
        match __v13759 with
        | (xs_v13760, ys_v13761) ⇒
          ((consUL_c11 x_v13755 xs_v13760), (consUL_c11 y_v13757 ys_v13761))
        end
      end
    end

def mergeU_i48 =
  fn xs_v13762 ⇒
    ln ys_v13763 ⇒
      match xs_v13762 with
      | nilUU_c12  ⇒ ys_v13763
      | consUU_c13 x_v13764 xs0_v13765 ⇒
        match ys_v13763 with
        | nilUU_c12  ⇒ (consUU_c13 x_v13764 xs0_v13765)
        | consUU_c13 y_v13766 ys0_v13767 ⇒
          match ((lten_i4 x_v13764) y_v13766) with
          | true ⇒
            (consUU_c13
              x_v13764
              ((mergeU_i48 xs0_v13765) (consUU_c13 y_v13766 ys0_v13767)))
          | false ⇒
            (consUU_c13
              y_v13766
              ((mergeU_i48 (consUU_c13 x_v13764 xs0_v13765)) ys0_v13767))
          end
        end
      end

def mergeL_i47 =
  fn xs_v13768 ⇒
    ln ys_v13769 ⇒
      match xs_v13768 with
      | nilUL_c10  ⇒ ys_v13769
      | consUL_c11 x_v13770 xs0_v13771 ⇒
        match ys_v13769 with
        | nilUL_c10  ⇒ (consUL_c11 x_v13770 xs0_v13771)
        | consUL_c11 y_v13772 ys0_v13773 ⇒
          match ((lten_i4 x_v13770) y_v13772) with
          | true ⇒
            (consUL_c11
              x_v13770
              ((mergeL_i47 xs0_v13771) (consUL_c11 y_v13772 ys0_v13773)))
          | false ⇒
            (consUL_c11
              y_v13772
              ((mergeL_i47 (consUL_c11 x_v13770 xs0_v13771)) ys0_v13773))
          end
        end
      end

def msortU_i50 =
  fn zs_v13774 ⇒
    match zs_v13774 with
    | nilUU_c12  ⇒ nilUU_c12
    | consUU_c13 x_v13775 zs_v13776 ⇒
      match zs_v13776 with
      | nilUU_c12  ⇒ (consUU_c13 x_v13775 nilUU_c12)
      | consUU_c13 y_v13777 zs_v13778 ⇒
        let __v13779 =
          (splitU_i46 (consUU_c13 x_v13775 (consUU_c13 y_v13777 zs_v13778)))
        in
        match __v13779 with
        | (xs_v13780, ys_v13781) ⇒
          ((mergeU_i48 (msortU_i50 xs_v13780)) (msortU_i50 ys_v13781))
        end
      end
    end

def msortL_i49 =
  fn zs_v13782 ⇒
    match zs_v13782 with
    | nilUL_c10  ⇒ nilUL_c10
    | consUL_c11 x_v13783 zs_v13784 ⇒
      match zs_v13784 with
      | nilUL_c10  ⇒ (consUL_c11 x_v13783 nilUL_c10)
      | consUL_c11 y_v13785 zs_v13786 ⇒
        let __v13787 =
          (splitL_i45 (consUL_c11 x_v13783 (consUL_c11 y_v13785 zs_v13786)))
        in
        match __v13787 with
        | (xs_v13788, ys_v13789) ⇒
          ((mergeL_i47 (msortL_i49 xs_v13788)) (msortL_i49 ys_v13789))
        end
      end
    end

def cmsort_workerU_i54 =
  fn n_v13790 zs_v13791 ⇒
    ln c_v13792 ⇒
      match n_v13790 with
      | O ⇒
        let c_v13793 ⇐ (send c_v13792 (msortU_i50 zs_v13791)) in
        close⇑ c_v13793
      | S n_v13794 ⇒
        match zs_v13791 with
        | nilUU_c12  ⇒
          let c_v13795 ⇐ (send c_v13792 nilUU_c12) in close⇑ c_v13795
        | consUU_c13 z0_v13796 zs0_v13797 ⇒
          match zs0_v13797 with
          | nilUU_c12  ⇒
            let c_v13798 ⇐ (send c_v13792 nilUU_c12) in close⇑ c_v13798
          | consUU_c13 z1_v13799 zs1_v13800 ⇒
            let __v13801 =
              (splitU_i46
                (consUU_c13 z0_v13796 (consUU_c13 z1_v13799 zs1_v13800)))
            in
            match __v13801 with
            | (xs0_v13802, ys0_v13803) ⇒
              let r1_v13804 ⇐
                fork r1_v13805 in
                  (((cmsort_workerU_i54 n_v13794) xs0_v13802) r1_v13805)
              in
              let r2_v13806 ⇐
                fork r2_v13807 in
                  (((cmsort_workerU_i54 n_v13794) ys0_v13803) r2_v13807)
              in
              let __v13808 ⇐ recv r1_v13804 in
              match __v13808 with
              | (xs1_v13809, r1_v13810) ⇒
                let __v13811 ⇐ recv r2_v13806 in
                match __v13811 with
                | (ys1_v13812, r2_v13813) ⇒
                  let zs_v13814 = ((mergeU_i48 xs1_v13809) ys1_v13812) in
                  let c_v13815 ⇐ (send c_v13792 zs_v13814) in
                  let __v13816 ⇐ close⇓ r1_v13810 in
                  let __v13817 ⇐ close⇓ r2_v13813 in close⇑ c_v13815
                end
              end
            end
          end
        end
      end

def cmsort_workerL_i53 =
  fn n_v13818 zs_v13819 ⇒
    ln c_v13820 ⇒
      match n_v13818 with
      | O ⇒
        let c_v13821 ⇐ (send c_v13820 (msortL_i49 zs_v13819)) in
        close⇑ c_v13821
      | S n_v13822 ⇒
        match zs_v13819 with
        | nilUL_c10  ⇒
          let c_v13823 ⇐ (send c_v13820 nilUL_c10) in close⇑ c_v13823
        | consUL_c11 z0_v13824 zs0_v13825 ⇒
          match zs0_v13825 with
          | nilUL_c10  ⇒
            let c_v13826 ⇐ (send c_v13820 nilUL_c10) in close⇑ c_v13826
          | consUL_c11 z1_v13827 zs1_v13828 ⇒
            let __v13829 =
              (splitL_i45
                (consUL_c11 z0_v13824 (consUL_c11 z1_v13827 zs1_v13828)))
            in
            match __v13829 with
            | (xs0_v13830, ys0_v13831) ⇒
              let r1_v13832 ⇐
                fork r1_v13833 in
                  (((cmsort_workerL_i53 n_v13822) xs0_v13830) r1_v13833)
              in
              let r2_v13834 ⇐
                fork r2_v13835 in
                  (((cmsort_workerL_i53 n_v13822) ys0_v13831) r2_v13835)
              in
              let __v13836 ⇐ recv r1_v13832 in
              match __v13836 with
              | (xs1_v13837, r1_v13838) ⇒
                let __v13839 ⇐ recv r2_v13834 in
                match __v13839 with
                | (ys1_v13840, r2_v13841) ⇒
                  let zs_v13842 = ((mergeL_i47 xs1_v13837) ys1_v13840) in
                  let c_v13843 ⇐ (send c_v13820 zs_v13842) in
                  let __v13844 ⇐ close⇓ r1_v13838 in
                  let __v13845 ⇐ close⇓ r2_v13841 in close⇑ c_v13843
                end
              end
            end
          end
        end
      end

def cmsortU_i56 =
  fn zs0_v13846 ⇒
    let c_v13847 ⇐
      fork c_v13848 in (((cmsort_workerU_i54 4) zs0_v13846) c_v13848)
    in
    let __v13849 ⇐ recv c_v13847 in
    match __v13849 with
    | (zs1_v13850, c_v13851) ⇒
      let __v13852 ⇐ close⇓ c_v13851 in return zs1_v13850
    end

def cmsortL_i55 =
  fn zs0_v13853 ⇒
    let c_v13854 ⇐
      fork c_v13855 in (((cmsort_workerL_i53 4) zs0_v13853) c_v13855)
    in
    let __v13856 ⇐ recv c_v13854 in
    match __v13856 with
    | (zs1_v13857, c_v13858) ⇒
      let __v13859 ⇐ close⇓ c_v13858 in return zs1_v13857
    end

def mkListU_i58 =
  fn n_v13860 ⇒
    match n_v13860 with
    | O ⇒ nilUU_c12
    | S n0_v13861 ⇒ (consUU_c13 n_v13860 (mkListU_i58 n0_v13861))
    end

def mkListL_i57 =
  fn n_v13862 ⇒
    match n_v13862 with
    | O ⇒ nilUL_c10
    | S n0_v13863 ⇒ (consUL_c11 n_v13862 (mkListL_i57 n0_v13863))
    end

def free_i35 =
  fn A_v13864 ls_v13865 ⇒
    match ls_v13865 with
    | nilUL_c10  ⇒ ()
    | consUL_c11 __v13866 ls_v13867 ⇒ ((free_i35 NULL) ls_v13867)
    end

main =
  let test_v13868 = (mkListL_i57 400000) in
  let sorted_v13869 ⇐ (cmsortL_i55 test_v13868) in
  let __v13870 = ((free_i35 NULL) sorted_v13869) in return ()

trans12 success--------------------------

fun andb_i1(b1_v14208, b2_v14209) = if b1_v14208 then
                                      b2_v14209
                                    else
                                      0

val andbclo_i59 = fn b1_v14210 b2_v14211 ⇒ andb_i1(b1_v14210, b2_v14211)

fun orb_i2(b1_v14212, b2_v14213) = if b1_v14212 then
                                     1
                                   else
                                     b2_v14213

val orbclo_i60 = fn b1_v14214 b2_v14215 ⇒ orb_i2(b1_v14214, b2_v14215)

fun notb_i3(b_v14216) = if b_v14216 then
                          0
                        else
                          1

val notbclo_i61 = fn b_v14217 ⇒ notb_i3(b_v14217)

fun lten_i4(x_v14218, y_v14219) =
  let __v14220 = x_v14218 in
  if __v14220 then
    let x_v14221 = __v14220.-1 in
    let __v14222 = y_v14219 in
    if __v14222 then
      let y_v14223 = __v14222.-1 in lten_i4(x_v14221, y_v14223)
    else
      0
  else
    1

val ltenclo_i62 = fn x_v14224 y_v14225 ⇒ lten_i4(x_v14224, y_v14225)

fun gten_i5(x_v14226, y_v14227) =
  let __v14228 = x_v14226 in
  if __v14228 then
    let x_v14229 = __v14228.-1 in
    let __v14230 = y_v14227 in
    if __v14230 then
      let y_v14231 = __v14230.-1 in gten_i5(x_v14229, y_v14231)
    else
      1
  else
    let __v14232 = y_v14227 in
    if __v14232 then
      let __v14233 = __v14232.-1 in 0
    else
      1

val gtenclo_i63 = fn x_v14234 y_v14235 ⇒ gten_i5(x_v14234, y_v14235)

fun ltn_i6(x_v14236, y_v14237) =
  let __v14238 = x_v14236 in
  if __v14238 then
    let x_v14239 = __v14238.-1 in
    let __v14240 = y_v14237 in
    if __v14240 then
      let y_v14241 = __v14240.-1 in ltn_i6(x_v14239, y_v14241)
    else
      0
  else
    let __v14242 = y_v14237 in
    if __v14242 then
      let y_v14243 = __v14242.-1 in 1
    else
      0

val ltnclo_i64 = fn x_v14244 y_v14245 ⇒ ltn_i6(x_v14244, y_v14245)

fun gtn_i7(x_v14246, y_v14247) =
  let __v14248 = x_v14246 in
  if __v14248 then
    let x_v14249 = __v14248.-1 in
    let __v14250 = y_v14247 in
    if __v14250 then
      let y_v14251 = __v14250.-1 in gtn_i7(x_v14249, y_v14251)
    else
      1
  else
    0

val gtnclo_i65 = fn x_v14252 y_v14253 ⇒ gtn_i7(x_v14252, y_v14253)

fun eqn_i8(x_v14254, y_v14255) =
  let __v14256 = x_v14254 in
  if __v14256 then
    let x_v14257 = __v14256.-1 in
    let __v14258 = y_v14255 in
    if __v14258 then
      let y_v14259 = __v14258.-1 in eqn_i8(x_v14257, y_v14259)
    else
      0
  else
    let __v14260 = y_v14255 in
    if __v14260 then
      let __v14261 = __v14260.-1 in 0
    else
      1

val eqnclo_i66 = fn x_v14262 y_v14263 ⇒ eqn_i8(x_v14262, y_v14263)

fun pred_i9(x_v14264) =
  let __v14265 = x_v14264 in
  if __v14265 then
    let x_v14266 = __v14265.-1 in x_v14266
  else
    0

val predclo_i67 = fn x_v14267 ⇒ pred_i9(x_v14267)

fun addn_i10(x_v14268, y_v14269) =
  let __v14270 = x_v14268 in
  if __v14270 then
    let x_v14271 = __v14270.-1 in addn_i10(x_v14271, y_v14269).+1
  else
    y_v14269

val addnclo_i68 = fn x_v14272 y_v14273 ⇒ addn_i10(x_v14272, y_v14273)

fun subn_i11(x_v14274, y_v14275) =
  let __v14276 = y_v14275 in
  if __v14276 then
    let y_v14277 = __v14276.-1 in subn_i11(pred_i9(x_v14274), y_v14277)
  else
    x_v14274

val subnclo_i69 = fn x_v14278 y_v14279 ⇒ subn_i11(x_v14278, y_v14279)

fun muln_i12(x_v14280, y_v14281) =
  let __v14282 = x_v14280 in
  if __v14282 then
    let x_v14283 = __v14282.-1 in
    addn_i10(y_v14281, muln_i12(x_v14283, y_v14281))
  else
    0

val mulnclo_i70 = fn x_v14284 y_v14285 ⇒ muln_i12(x_v14284, y_v14285)

fun divn_i13(x_v14286, y_v14287) =
  if ltn_i6(x_v14286, y_v14287) then
    0
  else
    divn_i13(subn_i11(x_v14286, y_v14287), y_v14287).+1

val divnclo_i71 = fn x_v14288 y_v14289 ⇒ divn_i13(x_v14288, y_v14289)

fun modn_i14(x_v14290, y_v14291) =
  subn_i11(x_v14290, muln_i12(divn_i13(x_v14290, y_v14291), y_v14291))

val modnclo_i72 = fn x_v14292 y_v14293 ⇒ modn_i14(x_v14292, y_v14293)

fun cats_i15(s1_v14294, s2_v14295) =
  match s1_v14294 with
  | EmptyString_c2  ⇒ s2_v14295
  | String_c3 c_v14296 s1_v14297 ⇒
    (String_c3 c_v14296 cats_i15(s1_v14297, s2_v14295))
  end

val catsclo_i73 = fn s1_v14298 s2_v14299 ⇒ cats_i15(s1_v14298, s2_v14299)

fun strlen_i16(s_v14300) =
  match s_v14300 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v14301 s_v14302 ⇒ strlen_i16(s_v14302).+1
  end

val strlenclo_i74 = fn s_v14303 ⇒ strlen_i16(s_v14303)

fun lenUU_i40(A_v14304, xs_v14305) =
  match xs_v14305 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v14306 xs_v14307 ⇒
    match lenUU_i40(NULL, xs_v14307) with
    | (n_v14308, xs_v14309) ⇒
      (n_v14308.+1, (consUU_c13 x_v14306 xs_v14309))
    end
  end

val lenUUclo_i75 = fn A_v14310 xs_v14311 ⇒ lenUU_i40(A_v14310, xs_v14311)

fun lenUL_i39(A_v14312, xs_v14313) =
  match xs_v14313 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v14314 xs_v14315 ⇒
    match lenUL_i39(NULL, xs_v14315) with
    | (n_v14316, xs_v14317) ⇒
      (n_v14316.+1, (consUL_c11 x_v14314 xs_v14317))
    end
  end

val lenULclo_i76 = fn A_v14318 xs_v14319 ⇒ lenUL_i39(A_v14318, xs_v14319)

fun lenLL_i37(A_v14320, xs_v14321) =
  match xs_v14321 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v14322 xs_v14323 ⇒
    match lenLL_i37(NULL, xs_v14323) with
    | (n_v14324, xs_v14325) ⇒ (n_v14324.+1, (consLL_c7 x_v14322 xs_v14325))
    end
  end

val lenLLclo_i77 = fn A_v14326 xs_v14327 ⇒ lenLL_i37(A_v14326, xs_v14327)

fun appendUU_i44(A_v14328, xs_v14329, ys_v14330) =
  match xs_v14329 with
  | nilUU_c12  ⇒ ys_v14330
  | consUU_c13 x_v14331 xs_v14332 ⇒
    (consUU_c13 x_v14331 appendUU_i44(NULL, xs_v14332, ys_v14330))
  end

val appendUUclo_i78 =
  fn A_v14333 xs_v14334 ⇒
    ln ys_v14335 ⇒ appendUU_i44(A_v14333, xs_v14334, ys_v14335)

fun appendUL_i43(A_v14336, xs_v14337, ys_v14338) =
  match xs_v14337 with
  | nilUL_c10  ⇒ ys_v14338
  | consUL_c11 x_v14339 xs_v14340 ⇒
    (consUL_c11 x_v14339 appendUL_i43(NULL, xs_v14340, ys_v14338))
  end

val appendULclo_i79 =
  fn A_v14341 xs_v14342 ⇒
    ln ys_v14343 ⇒ appendUL_i43(A_v14341, xs_v14342, ys_v14343)

fun appendLL_i41(A_v14344, xs_v14345, ys_v14346) =
  match xs_v14345 with
  | nilLL_c6  ⇒ ys_v14346
  | consLL_c7 x_v14347 xs_v14348 ⇒
    (consLL_c7 x_v14347 appendLL_i41(NULL, xs_v14348, ys_v14346))
  end

val appendLLclo_i80 =
  fn A_v14349 xs_v14350 ⇒
    ln ys_v14351 ⇒ appendLL_i41(A_v14349, xs_v14350, ys_v14351)

fun readline_i25(__v14352) =
  ln __v14353 ⇒
    let ch_v14354 = (ln __v14355 ⇒ open stdin) NULL in
    let ch_v14356 =
      ((fn x_v14357 ⇒ ln __v14358 ⇒ send(ch_v14354, x_v14357)) 1) NULL
    in
    let __v14359 = (ln __v14360 ⇒ recv(ch_v14356)) NULL in
    (match __v14359 with
     | (s_v14361, ch_v14362) ⇒
       ln __v14363 ⇒
         let ch_v14364 =
           ((fn x_v14365 ⇒ ln __v14366 ⇒ send(ch_v14362, x_v14365)) 0)
             NULL
         in
         let __v14367 =
           (ln __v14368 ⇒ let __v14369 = ch_v14364 in NULL) NULL
         in (ln __v14370 ⇒ s_v14361) NULL
     end) NULL

val readlineclo_i81 = fn __v14371 ⇒ readline_i25(__v14371)

fun print_i26(s_v14372) =
  ln __v14373 ⇒
    let ch_v14374 = (ln __v14375 ⇒ open stdout) NULL in
    let ch_v14376 =
      ((fn x_v14377 ⇒ ln __v14378 ⇒ send(ch_v14374, x_v14377)) 1) NULL
    in
    let ch_v14379 =
      ((fn x_v14380 ⇒ ln __v14381 ⇒ send(ch_v14376, x_v14380)) s_v14372)
        NULL
    in
    let ch_v14382 =
      ((fn x_v14383 ⇒ ln __v14384 ⇒ send(ch_v14379, x_v14383)) 0) NULL
    in (ln __v14385 ⇒ let __v14386 = ch_v14382 in NULL) NULL

val printclo_i82 = fn s_v14387 ⇒ print_i26(s_v14387)

fun prerr_i27(s_v14388) =
  ln __v14389 ⇒
    let ch_v14390 = (ln __v14391 ⇒ open stderr) NULL in
    let ch_v14392 =
      ((fn x_v14393 ⇒ ln __v14394 ⇒ send(ch_v14390, x_v14393)) 1) NULL
    in
    let ch_v14395 =
      ((fn x_v14396 ⇒ ln __v14397 ⇒ send(ch_v14392, x_v14396)) s_v14388)
        NULL
    in
    let ch_v14398 =
      ((fn x_v14399 ⇒ ln __v14400 ⇒ send(ch_v14395, x_v14399)) 0) NULL
    in (ln __v14401 ⇒ let __v14402 = ch_v14398 in NULL) NULL

val prerrclo_i83 = fn s_v14403 ⇒ prerr_i27(s_v14403)

fun splitU_i46(zs_v14404) =
  match zs_v14404 with
  | nilUU_c12  ⇒ (nilUU_c12, nilUU_c12)
  | consUU_c13 x_v14405 zs_v14406 ⇒
    match zs_v14406 with
    | nilUU_c12  ⇒ ((consUU_c13 x_v14405 nilUU_c12), nilUU_c12)
    | consUU_c13 y_v14407 zs_v14408 ⇒
      let __v14409 = splitU_i46(zs_v14408) in
      match __v14409 with
      | (xs_v14410, ys_v14411) ⇒
        ((consUU_c13 x_v14405 xs_v14410), (consUU_c13 y_v14407 ys_v14411))
      end
    end
  end

val splitUclo_i84 = fn zs_v14412 ⇒ splitU_i46(zs_v14412)

fun splitL_i45(zs_v14413) =
  match zs_v14413 with
  | nilUL_c10  ⇒ (nilUL_c10, nilUL_c10)
  | consUL_c11 x_v14414 zs_v14415 ⇒
    match zs_v14415 with
    | nilUL_c10  ⇒ ((consUL_c11 x_v14414 nilUL_c10), nilUL_c10)
    | consUL_c11 y_v14416 zs_v14417 ⇒
      let __v14418 = splitL_i45(zs_v14417) in
      match __v14418 with
      | (xs_v14419, ys_v14420) ⇒
        ((consUL_c11 x_v14414 xs_v14419), (consUL_c11 y_v14416 ys_v14420))
      end
    end
  end

val splitLclo_i85 = fn zs_v14421 ⇒ splitL_i45(zs_v14421)

fun mergeU_i48(xs_v14422, ys_v14423) =
  match xs_v14422 with
  | nilUU_c12  ⇒ ys_v14423
  | consUU_c13 x_v14424 xs0_v14425 ⇒
    match ys_v14423 with
    | nilUU_c12  ⇒ (consUU_c13 x_v14424 xs0_v14425)
    | consUU_c13 y_v14426 ys0_v14427 ⇒
      if lten_i4(x_v14424, y_v14426) then
        (consUU_c13
          x_v14424 mergeU_i48(xs0_v14425, (consUU_c13 y_v14426 ys0_v14427)))
      else
        (consUU_c13
          y_v14426 mergeU_i48((consUU_c13 x_v14424 xs0_v14425), ys0_v14427))
    end
  end

val mergeUclo_i86 =
  fn xs_v14428 ⇒ ln ys_v14429 ⇒ mergeU_i48(xs_v14428, ys_v14429)

fun mergeL_i47(xs_v14430, ys_v14431) =
  match xs_v14430 with
  | nilUL_c10  ⇒ ys_v14431
  | consUL_c11 x_v14432 xs0_v14433 ⇒
    match ys_v14431 with
    | nilUL_c10  ⇒ (consUL_c11 x_v14432 xs0_v14433)
    | consUL_c11 y_v14434 ys0_v14435 ⇒
      if lten_i4(x_v14432, y_v14434) then
        (consUL_c11
          x_v14432 mergeL_i47(xs0_v14433, (consUL_c11 y_v14434 ys0_v14435)))
      else
        (consUL_c11
          y_v14434 mergeL_i47((consUL_c11 x_v14432 xs0_v14433), ys0_v14435))
    end
  end

val mergeLclo_i87 =
  fn xs_v14436 ⇒ ln ys_v14437 ⇒ mergeL_i47(xs_v14436, ys_v14437)

fun msortU_i50(zs_v14438) =
  match zs_v14438 with
  | nilUU_c12  ⇒ nilUU_c12
  | consUU_c13 x_v14439 zs_v14440 ⇒
    match zs_v14440 with
    | nilUU_c12  ⇒ (consUU_c13 x_v14439 nilUU_c12)
    | consUU_c13 y_v14441 zs_v14442 ⇒
      let __v14443 =
        splitU_i46((consUU_c13 x_v14439 (consUU_c13 y_v14441 zs_v14442)))
      in
      match __v14443 with
      | (xs_v14444, ys_v14445) ⇒
        mergeU_i48(msortU_i50(xs_v14444), msortU_i50(ys_v14445))
      end
    end
  end

val msortUclo_i88 = fn zs_v14446 ⇒ msortU_i50(zs_v14446)

fun msortL_i49(zs_v14447) =
  match zs_v14447 with
  | nilUL_c10  ⇒ nilUL_c10
  | consUL_c11 x_v14448 zs_v14449 ⇒
    match zs_v14449 with
    | nilUL_c10  ⇒ (consUL_c11 x_v14448 nilUL_c10)
    | consUL_c11 y_v14450 zs_v14451 ⇒
      let __v14452 =
        splitL_i45((consUL_c11 x_v14448 (consUL_c11 y_v14450 zs_v14451)))
      in
      match __v14452 with
      | (xs_v14453, ys_v14454) ⇒
        mergeL_i47(msortL_i49(xs_v14453), msortL_i49(ys_v14454))
      end
    end
  end

val msortLclo_i89 = fn zs_v14455 ⇒ msortL_i49(zs_v14455)

fun cmsort_workerU_i54(n_v14456, zs_v14457, c_v14458) =
  let __v14459 = n_v14456 in
  if __v14459 then
    let n_v14460 = __v14459.-1 in
    match zs_v14457 with
    | nilUU_c12  ⇒
      ln __v14461 ⇒
        let c_v14462 =
          ((fn x_v14463 ⇒ ln __v14464 ⇒ send(c_v14458, x_v14463))
             nilUU_c12)
            NULL
        in (ln __v14465 ⇒ let __v14466 = c_v14462 in NULL) NULL
    | consUU_c13 z0_v14467 zs0_v14468 ⇒
      match zs0_v14468 with
      | nilUU_c12  ⇒
        ln __v14469 ⇒
          let c_v14470 =
            ((fn x_v14471 ⇒ ln __v14472 ⇒ send(c_v14458, x_v14471))
               nilUU_c12)
              NULL
          in (ln __v14473 ⇒ let __v14474 = c_v14470 in NULL) NULL
      | consUU_c13 z1_v14475 zs1_v14476 ⇒
        let __v14477 =
          splitU_i46((consUU_c13 z0_v14467 (consUU_c13 z1_v14475 zs1_v14476)))
        in
        match __v14477 with
        | (xs0_v14478, ys0_v14479) ⇒
          ln __v14480 ⇒
            let r1_v14481 =
              (ln __v14482 ⇒
                 fork r1_v14483 in
                   (cmsort_workerU_i54(n_v14460, xs0_v14478, r1_v14483)) NULL)
                NULL
            in
            let r2_v14484 =
              (ln __v14485 ⇒
                 fork r2_v14486 in
                   (cmsort_workerU_i54(n_v14460, ys0_v14479, r2_v14486)) NULL)
                NULL
            in
            let __v14487 = (ln __v14488 ⇒ recv(r1_v14481)) NULL in
            (match __v14487 with
             | (xs1_v14489, r1_v14490) ⇒
               ln __v14491 ⇒
                 let __v14492 = (ln __v14493 ⇒ recv(r2_v14484)) NULL in
                 (match __v14492 with
                  | (ys1_v14494, r2_v14495) ⇒
                    let zs_v14496 = mergeU_i48(xs1_v14489, ys1_v14494) in
                    ln __v14497 ⇒
                      let c_v14498 =
                        ((fn x_v14499 ⇒
                            ln __v14500 ⇒ send(c_v14458, x_v14499))
                           zs_v14496)
                          NULL
                      in
                      let __v14501 = (ln __v14502 ⇒ close(r1_v14490)) NULL
                      in
                      let __v14503 = (ln __v14504 ⇒ close(r2_v14495)) NULL
                      in
                      (ln __v14505 ⇒ let __v14506 = c_v14498 in NULL) NULL
                  end) NULL
             end) NULL
        end
      end
    end
  else
    ln __v14507 ⇒
      let c_v14508 =
        ((fn x_v14509 ⇒ ln __v14510 ⇒ send(c_v14458, x_v14509))
           msortU_i50(zs_v14457))
          NULL
      in (ln __v14511 ⇒ let __v14512 = c_v14508 in NULL) NULL

val cmsort_workerUclo_i90 =
  fn n_v14513 zs_v14514 ⇒
    ln c_v14515 ⇒ cmsort_workerU_i54(n_v14513, zs_v14514, c_v14515)

fun cmsort_workerL_i53(n_v14516, zs_v14517, c_v14518) =
  let __v14519 = n_v14516 in
  if __v14519 then
    let n_v14520 = __v14519.-1 in
    match zs_v14517 with
    | nilUL_c10  ⇒
      ln __v14521 ⇒
        let c_v14522 =
          ((ln x_v14523 __v14524 ⇒ send(c_v14518, x_v14523)) nilUL_c10)
            NULL
        in (ln __v14525 ⇒ let __v14526 = c_v14522 in NULL) NULL
    | consUL_c11 z0_v14527 zs0_v14528 ⇒
      match zs0_v14528 with
      | nilUL_c10  ⇒
        ln __v14529 ⇒
          let c_v14530 =
            ((ln x_v14531 __v14532 ⇒ send(c_v14518, x_v14531)) nilUL_c10)
              NULL
          in (ln __v14533 ⇒ let __v14534 = c_v14530 in NULL) NULL
      | consUL_c11 z1_v14535 zs1_v14536 ⇒
        let __v14537 =
          splitL_i45((consUL_c11 z0_v14527 (consUL_c11 z1_v14535 zs1_v14536)))
        in
        match __v14537 with
        | (xs0_v14538, ys0_v14539) ⇒
          ln __v14540 ⇒
            let r1_v14541 =
              (ln __v14542 ⇒
                 fork r1_v14543 in
                   (cmsort_workerL_i53(n_v14520, xs0_v14538, r1_v14543)) NULL)
                NULL
            in
            let r2_v14544 =
              (ln __v14545 ⇒
                 fork r2_v14546 in
                   (cmsort_workerL_i53(n_v14520, ys0_v14539, r2_v14546)) NULL)
                NULL
            in
            let __v14547 = (ln __v14548 ⇒ recv(r1_v14541)) NULL in
            (match __v14547 with
             | (xs1_v14549, r1_v14550) ⇒
               ln __v14551 ⇒
                 let __v14552 = (ln __v14553 ⇒ recv(r2_v14544)) NULL in
                 (match __v14552 with
                  | (ys1_v14554, r2_v14555) ⇒
                    let zs_v14556 = mergeL_i47(xs1_v14549, ys1_v14554) in
                    ln __v14557 ⇒
                      let c_v14558 =
                        ((ln x_v14559 __v14560 ⇒ send(c_v14518, x_v14559))
                           zs_v14556)
                          NULL
                      in
                      let __v14561 = (ln __v14562 ⇒ close(r1_v14550)) NULL
                      in
                      let __v14563 = (ln __v14564 ⇒ close(r2_v14555)) NULL
                      in
                      (ln __v14565 ⇒ let __v14566 = c_v14558 in NULL) NULL
                  end) NULL
             end) NULL
        end
      end
    end
  else
    ln __v14567 ⇒
      let c_v14568 =
        ((ln x_v14569 __v14570 ⇒ send(c_v14518, x_v14569))
           msortL_i49(zs_v14517))
          NULL
      in (ln __v14571 ⇒ let __v14572 = c_v14568 in NULL) NULL

val cmsort_workerLclo_i91 =
  fn n_v14573 zs_v14574 ⇒
    ln c_v14575 ⇒ cmsort_workerL_i53(n_v14573, zs_v14574, c_v14575)

fun cmsortU_i56(zs0_v14576) =
  ln __v14577 ⇒
    let c_v14578 =
      (ln __v14579 ⇒
         fork c_v14580 in (cmsort_workerU_i54(4, zs0_v14576, c_v14580)) NULL)
        NULL
    in
    let __v14581 = (ln __v14582 ⇒ recv(c_v14578)) NULL in
    (match __v14581 with
     | (zs1_v14583, c_v14584) ⇒
       ln __v14585 ⇒
         let __v14586 = (ln __v14587 ⇒ close(c_v14584)) NULL in
         (ln __v14588 ⇒ zs1_v14583) NULL
     end) NULL

val cmsortUclo_i92 = fn zs0_v14589 ⇒ cmsortU_i56(zs0_v14589)

fun cmsortL_i55(zs0_v14590) =
  ln __v14591 ⇒
    let c_v14592 =
      (ln __v14593 ⇒
         fork c_v14594 in (cmsort_workerL_i53(4, zs0_v14590, c_v14594)) NULL)
        NULL
    in
    let __v14595 = (ln __v14596 ⇒ recv(c_v14592)) NULL in
    (match __v14595 with
     | (zs1_v14597, c_v14598) ⇒
       ln __v14599 ⇒
         let __v14600 = (ln __v14601 ⇒ close(c_v14598)) NULL in
         (ln __v14602 ⇒ zs1_v14597) NULL
     end) NULL

val cmsortLclo_i93 = fn zs0_v14603 ⇒ cmsortL_i55(zs0_v14603)

fun mkListU_i58(n_v14604) =
  let __v14605 = n_v14604 in
  if __v14605 then
    let n0_v14606 = __v14605.-1 in
    (consUU_c13 n_v14604 mkListU_i58(n0_v14606))
  else
    nilUU_c12

val mkListUclo_i94 = fn n_v14607 ⇒ mkListU_i58(n_v14607)

fun mkListL_i57(n_v14608) =
  let __v14609 = n_v14608 in
  if __v14609 then
    let n0_v14610 = __v14609.-1 in
    (consUL_c11 n_v14608 mkListL_i57(n0_v14610))
  else
    nilUL_c10

val mkListLclo_i95 = fn n_v14611 ⇒ mkListL_i57(n_v14611)

fun free_i35(A_v14612, ls_v14613) =
  match ls_v14613 with
  | nilUL_c10  ⇒ NULL
  | consUL_c11 __v14614 ls_v14615 ⇒ free_i35(NULL, ls_v14615)
  end

val freeclo_i96 = fn A_v14616 ls_v14617 ⇒ free_i35(A_v14616, ls_v14617)

main =
  (let test_v14618 = mkListL_i57(400000) in
   ln __v14619 ⇒
     let sorted_v14620 = (cmsortL_i55(test_v14618)) NULL in
     (let __v14621 = free_i35(NULL, sorted_v14620) in ln __v14622 ⇒ NULL)
       NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v15474, b2_v15475) = if b1_v15474 then
                                      b2_v15475
                                    else
                                      0

val andbclo_i59 = fn b1_v15476 b2_v15477 ⇒ andb_i1(b1_v15476, b2_v15477)

fun orb_i2(b1_v15478, b2_v15479) = if b1_v15478 then
                                     1
                                   else
                                     b2_v15479

val orbclo_i60 = fn b1_v15480 b2_v15481 ⇒ orb_i2(b1_v15480, b2_v15481)

fun notb_i3(b_v15482) = if b_v15482 then
                          0
                        else
                          1

val notbclo_i61 = fn b_v15483 ⇒ notb_i3(b_v15483)

fun lten_i4(x_v15484, y_v15485) =
  if x_v15484 then
    if y_v15485 then
      lten_i4(x_v15484.-1, y_v15485.-1)
    else
      0
  else
    1

val ltenclo_i62 = fn x_v15486 y_v15487 ⇒ lten_i4(x_v15486, y_v15487)

fun gten_i5(x_v15488, y_v15489) =
  if x_v15488 then
    if y_v15489 then
      gten_i5(x_v15488.-1, y_v15489.-1)
    else
      1
  else
    if y_v15489 then
      0
    else
      1

val gtenclo_i63 = fn x_v15490 y_v15491 ⇒ gten_i5(x_v15490, y_v15491)

fun ltn_i6(x_v15492, y_v15493) =
  if x_v15492 then
    if y_v15493 then
      ltn_i6(x_v15492.-1, y_v15493.-1)
    else
      0
  else
    if y_v15493 then
      1
    else
      0

val ltnclo_i64 = fn x_v15494 y_v15495 ⇒ ltn_i6(x_v15494, y_v15495)

fun gtn_i7(x_v15496, y_v15497) =
  if x_v15496 then
    if y_v15497 then
      gtn_i7(x_v15496.-1, y_v15497.-1)
    else
      1
  else
    0

val gtnclo_i65 = fn x_v15498 y_v15499 ⇒ gtn_i7(x_v15498, y_v15499)

fun eqn_i8(x_v15500, y_v15501) =
  if x_v15500 then
    if y_v15501 then
      eqn_i8(x_v15500.-1, y_v15501.-1)
    else
      0
  else
    if y_v15501 then
      0
    else
      1

val eqnclo_i66 = fn x_v15502 y_v15503 ⇒ eqn_i8(x_v15502, y_v15503)

fun pred_i9(x_v15504) = if x_v15504 then
                          x_v15504.-1
                        else
                          0

val predclo_i67 = fn x_v15505 ⇒ pred_i9(x_v15505)

fun addn_i10(x_v15506, y_v15507) =
  if x_v15506 then
    addn_i10(x_v15506.-1, y_v15507).+1
  else
    y_v15507

val addnclo_i68 = fn x_v15508 y_v15509 ⇒ addn_i10(x_v15508, y_v15509)

fun subn_i11(x_v15510, y_v15511) =
  if y_v15511 then
    subn_i11(pred_i9(x_v15510), y_v15511.-1)
  else
    x_v15510

val subnclo_i69 = fn x_v15512 y_v15513 ⇒ subn_i11(x_v15512, y_v15513)

fun muln_i12(x_v15514, y_v15515) =
  if x_v15514 then
    addn_i10(y_v15515, muln_i12(x_v15514.-1, y_v15515))
  else
    0

val mulnclo_i70 = fn x_v15516 y_v15517 ⇒ muln_i12(x_v15516, y_v15517)

fun divn_i13(x_v15518, y_v15519) =
  if ltn_i6(x_v15518, y_v15519) then
    0
  else
    divn_i13(subn_i11(x_v15518, y_v15519), y_v15519).+1

val divnclo_i71 = fn x_v15520 y_v15521 ⇒ divn_i13(x_v15520, y_v15521)

fun modn_i14(x_v15522, y_v15523) =
  subn_i11(x_v15522, muln_i12(divn_i13(x_v15522, y_v15523), y_v15523))

val modnclo_i72 = fn x_v15524 y_v15525 ⇒ modn_i14(x_v15524, y_v15525)

fun cats_i15(s1_v15526, s2_v15527) =
  match s1_v15526 with
  | EmptyString_c2  ⇒ s2_v15527
  | String_c3 c_v15528 s1_v15529 ⇒
    (String_c3 c_v15528 cats_i15(s1_v15529, s2_v15527))
  end

val catsclo_i73 = fn s1_v15530 s2_v15531 ⇒ cats_i15(s1_v15530, s2_v15531)

fun strlen_i16(s_v15532) =
  match s_v15532 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v15533 s_v15534 ⇒ strlen_i16(s_v15534).+1
  end

val strlenclo_i74 = fn s_v15535 ⇒ strlen_i16(s_v15535)

fun lenUU_i40(A_v15536, xs_v15537) =
  match xs_v15537 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v15538 xs_v15539 ⇒
    match lenUU_i40(NULL, xs_v15539) with
    | (n_v15540, xs_v15541) ⇒
      (n_v15540.+1, (consUU_c13 x_v15538 xs_v15541))
    end
  end

val lenUUclo_i75 = fn A_v15542 xs_v15543 ⇒ lenUU_i40(A_v15542, xs_v15543)

fun lenUL_i39(A_v15544, xs_v15545) =
  match xs_v15545 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v15546 xs_v15547 ⇒
    match lenUL_i39(NULL, xs_v15547) with
    | (n_v15548, xs_v15549) ⇒
      (n_v15548.+1, (consUL_c11 x_v15546 xs_v15549))
    end
  end

val lenULclo_i76 = fn A_v15550 xs_v15551 ⇒ lenUL_i39(A_v15550, xs_v15551)

fun lenLL_i37(A_v15552, xs_v15553) =
  match xs_v15553 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v15554 xs_v15555 ⇒
    match lenLL_i37(NULL, xs_v15555) with
    | (n_v15556, xs_v15557) ⇒ (n_v15556.+1, (consLL_c7 x_v15554 xs_v15557))
    end
  end

val lenLLclo_i77 = fn A_v15558 xs_v15559 ⇒ lenLL_i37(A_v15558, xs_v15559)

fun appendUU_i44(A_v15560, xs_v15561, ys_v15562) =
  match xs_v15561 with
  | nilUU_c12  ⇒ ys_v15562
  | consUU_c13 x_v15563 xs_v15564 ⇒
    (consUU_c13 x_v15563 appendUU_i44(NULL, xs_v15564, ys_v15562))
  end

val appendUUclo_i78 =
  fn A_v15565 xs_v15566 ⇒
    ln ys_v15567 ⇒ appendUU_i44(A_v15565, xs_v15566, ys_v15567)

fun appendUL_i43(A_v15568, xs_v15569, ys_v15570) =
  match xs_v15569 with
  | nilUL_c10  ⇒ ys_v15570
  | consUL_c11 x_v15571 xs_v15572 ⇒
    (consUL_c11 x_v15571 appendUL_i43(NULL, xs_v15572, ys_v15570))
  end

val appendULclo_i79 =
  fn A_v15573 xs_v15574 ⇒
    ln ys_v15575 ⇒ appendUL_i43(A_v15573, xs_v15574, ys_v15575)

fun appendLL_i41(A_v15576, xs_v15577, ys_v15578) =
  match xs_v15577 with
  | nilLL_c6  ⇒ ys_v15578
  | consLL_c7 x_v15579 xs_v15580 ⇒
    (consLL_c7 x_v15579 appendLL_i41(NULL, xs_v15580, ys_v15578))
  end

val appendLLclo_i80 =
  fn A_v15581 xs_v15582 ⇒
    ln ys_v15583 ⇒ appendLL_i41(A_v15581, xs_v15582, ys_v15583)

fun readline_i25(__v15584) =
  ln __v15585 ⇒
    let ch_v15586 = open stdin in
    let ch_v15587 = send(ch_v15586, 1) in
    let __v15588 = recv(ch_v15587) in
    match __v15588 with
    | (s_v15589, ch_v15590) ⇒
      let ch_v15591 = send(ch_v15590, 0) in s_v15589
    end

val readlineclo_i81 = fn __v15592 ⇒ readline_i25(__v15592)

fun print_i26(s_v15593) =
  ln __v15594 ⇒
    let ch_v15595 = open stdout in
    let ch_v15596 = send(ch_v15595, 1) in
    let ch_v15597 = send(ch_v15596, s_v15593) in
    let ch_v15598 = send(ch_v15597, 0) in NULL

val printclo_i82 = fn s_v15599 ⇒ print_i26(s_v15599)

fun prerr_i27(s_v15600) =
  ln __v15601 ⇒
    let ch_v15602 = open stderr in
    let ch_v15603 = send(ch_v15602, 1) in
    let ch_v15604 = send(ch_v15603, s_v15600) in
    let ch_v15605 = send(ch_v15604, 0) in NULL

val prerrclo_i83 = fn s_v15606 ⇒ prerr_i27(s_v15606)

fun splitU_i46(zs_v15607) =
  match zs_v15607 with
  | nilUU_c12  ⇒ (nilUU_c12, nilUU_c12)
  | consUU_c13 x_v15608 zs_v15609 ⇒
    match zs_v15609 with
    | nilUU_c12  ⇒ ((consUU_c13 x_v15608 nilUU_c12), nilUU_c12)
    | consUU_c13 y_v15610 zs_v15611 ⇒
      let __v15612 = splitU_i46(zs_v15611) in
      match __v15612 with
      | (xs_v15613, ys_v15614) ⇒
        ((consUU_c13 x_v15608 xs_v15613), (consUU_c13 y_v15610 ys_v15614))
      end
    end
  end

val splitUclo_i84 = fn zs_v15615 ⇒ splitU_i46(zs_v15615)

fun splitL_i45(zs_v15616) =
  match zs_v15616 with
  | nilUL_c10  ⇒ (nilUL_c10, nilUL_c10)
  | consUL_c11 x_v15617 zs_v15618 ⇒
    match zs_v15618 with
    | nilUL_c10  ⇒ ((consUL_c11 x_v15617 nilUL_c10), nilUL_c10)
    | consUL_c11 y_v15619 zs_v15620 ⇒
      let __v15621 = splitL_i45(zs_v15620) in
      match __v15621 with
      | (xs_v15622, ys_v15623) ⇒
        ((consUL_c11 x_v15617 xs_v15622), (consUL_c11 y_v15619 ys_v15623))
      end
    end
  end

val splitLclo_i85 = fn zs_v15624 ⇒ splitL_i45(zs_v15624)

fun mergeU_i48(xs_v15625, ys_v15626) =
  match xs_v15625 with
  | nilUU_c12  ⇒ ys_v15626
  | consUU_c13 x_v15627 xs0_v15628 ⇒
    match ys_v15626 with
    | nilUU_c12  ⇒ (consUU_c13 x_v15627 xs0_v15628)
    | consUU_c13 y_v15629 ys0_v15630 ⇒
      if lten_i4(x_v15627, y_v15629) then
        (consUU_c13
          x_v15627 mergeU_i48(xs0_v15628, (consUU_c13 y_v15629 ys0_v15630)))
      else
        (consUU_c13
          y_v15629 mergeU_i48((consUU_c13 x_v15627 xs0_v15628), ys0_v15630))
    end
  end

val mergeUclo_i86 =
  fn xs_v15631 ⇒ ln ys_v15632 ⇒ mergeU_i48(xs_v15631, ys_v15632)

fun mergeL_i47(xs_v15633, ys_v15634) =
  match xs_v15633 with
  | nilUL_c10  ⇒ ys_v15634
  | consUL_c11 x_v15635 xs0_v15636 ⇒
    match ys_v15634 with
    | nilUL_c10  ⇒ (consUL_c11 x_v15635 xs0_v15636)
    | consUL_c11 y_v15637 ys0_v15638 ⇒
      if lten_i4(x_v15635, y_v15637) then
        (consUL_c11
          x_v15635 mergeL_i47(xs0_v15636, (consUL_c11 y_v15637 ys0_v15638)))
      else
        (consUL_c11
          y_v15637 mergeL_i47((consUL_c11 x_v15635 xs0_v15636), ys0_v15638))
    end
  end

val mergeLclo_i87 =
  fn xs_v15639 ⇒ ln ys_v15640 ⇒ mergeL_i47(xs_v15639, ys_v15640)

fun msortU_i50(zs_v15641) =
  match zs_v15641 with
  | nilUU_c12  ⇒ nilUU_c12
  | consUU_c13 x_v15642 zs_v15643 ⇒
    match zs_v15643 with
    | nilUU_c12  ⇒ (consUU_c13 x_v15642 nilUU_c12)
    | consUU_c13 y_v15644 zs_v15645 ⇒
      let __v15646 =
        splitU_i46((consUU_c13 x_v15642 (consUU_c13 y_v15644 zs_v15645)))
      in
      match __v15646 with
      | (xs_v15647, ys_v15648) ⇒
        mergeU_i48(msortU_i50(xs_v15647), msortU_i50(ys_v15648))
      end
    end
  end

val msortUclo_i88 = fn zs_v15649 ⇒ msortU_i50(zs_v15649)

fun msortL_i49(zs_v15650) =
  match zs_v15650 with
  | nilUL_c10  ⇒ nilUL_c10
  | consUL_c11 x_v15651 zs_v15652 ⇒
    match zs_v15652 with
    | nilUL_c10  ⇒ (consUL_c11 x_v15651 nilUL_c10)
    | consUL_c11 y_v15653 zs_v15654 ⇒
      let __v15655 =
        splitL_i45((consUL_c11 x_v15651 (consUL_c11 y_v15653 zs_v15654)))
      in
      match __v15655 with
      | (xs_v15656, ys_v15657) ⇒
        mergeL_i47(msortL_i49(xs_v15656), msortL_i49(ys_v15657))
      end
    end
  end

val msortLclo_i89 = fn zs_v15658 ⇒ msortL_i49(zs_v15658)

fun cmsort_workerU_i54(n_v15659, zs_v15660, c_v15661) =
  if n_v15659 then
    match zs_v15660 with
    | nilUU_c12  ⇒
      ln __v15662 ⇒ let c_v15663 = send(c_v15661, nilUU_c12) in NULL
    | consUU_c13 z0_v15664 zs0_v15665 ⇒
      match zs0_v15665 with
      | nilUU_c12  ⇒
        ln __v15666 ⇒ let c_v15667 = send(c_v15661, nilUU_c12) in NULL
      | consUU_c13 z1_v15668 zs1_v15669 ⇒
        let __v15670 =
          splitU_i46((consUU_c13 z0_v15664 (consUU_c13 z1_v15668 zs1_v15669)))
        in
        match __v15670 with
        | (xs0_v15671, ys0_v15672) ⇒
          ln __v15673 ⇒
            let r1_v15674 =
              fork r1_v15675 in
                (cmsort_workerU_i54(n_v15659.-1, xs0_v15671, r1_v15675)) NULL
            in
            let r2_v15676 =
              fork r2_v15677 in
                (cmsort_workerU_i54(n_v15659.-1, ys0_v15672, r2_v15677)) NULL
            in
            let __v15678 = recv(r1_v15674) in
            match __v15678 with
            | (xs1_v15679, r1_v15680) ⇒
              let __v15681 = recv(r2_v15676) in
              match __v15681 with
              | (ys1_v15682, r2_v15683) ⇒
                let zs_v15684 = mergeU_i48(xs1_v15679, ys1_v15682) in
                let c_v15685 = send(c_v15661, zs_v15684) in
                let __v15686 = close(r1_v15680) in
                let __v15687 = close(r2_v15683) in NULL
              end
            end
        end
      end
    end
  else
    ln __v15688 ⇒
      let c_v15689 =
        ((fn x_v15690 ⇒ ln __v15691 ⇒ send(c_v15661, x_v15690))
           msortU_i50(zs_v15660))
          NULL
      in NULL

val cmsort_workerUclo_i90 =
  fn n_v15692 zs_v15693 ⇒
    ln c_v15694 ⇒ cmsort_workerU_i54(n_v15692, zs_v15693, c_v15694)

fun cmsort_workerL_i53(n_v15695, zs_v15696, c_v15697) =
  if n_v15695 then
    match zs_v15696 with
    | nilUL_c10  ⇒
      ln __v15698 ⇒ let c_v15699 = send(c_v15697, nilUL_c10) in NULL
    | consUL_c11 z0_v15700 zs0_v15701 ⇒
      match zs0_v15701 with
      | nilUL_c10  ⇒
        ln __v15702 ⇒ let c_v15703 = send(c_v15697, nilUL_c10) in NULL
      | consUL_c11 z1_v15704 zs1_v15705 ⇒
        let __v15706 =
          splitL_i45((consUL_c11 z0_v15700 (consUL_c11 z1_v15704 zs1_v15705)))
        in
        match __v15706 with
        | (xs0_v15707, ys0_v15708) ⇒
          ln __v15709 ⇒
            let r1_v15710 =
              fork r1_v15711 in
                (cmsort_workerL_i53(n_v15695.-1, xs0_v15707, r1_v15711)) NULL
            in
            let r2_v15712 =
              fork r2_v15713 in
                (cmsort_workerL_i53(n_v15695.-1, ys0_v15708, r2_v15713)) NULL
            in
            let __v15714 = recv(r1_v15710) in
            match __v15714 with
            | (xs1_v15715, r1_v15716) ⇒
              let __v15717 = recv(r2_v15712) in
              match __v15717 with
              | (ys1_v15718, r2_v15719) ⇒
                let zs_v15720 = mergeL_i47(xs1_v15715, ys1_v15718) in
                let c_v15721 = send(c_v15697, zs_v15720) in
                let __v15722 = close(r1_v15716) in
                let __v15723 = close(r2_v15719) in NULL
              end
            end
        end
      end
    end
  else
    ln __v15724 ⇒
      let c_v15725 =
        ((ln x_v15726 __v15727 ⇒ send(c_v15697, x_v15726))
           msortL_i49(zs_v15696))
          NULL
      in NULL

val cmsort_workerLclo_i91 =
  fn n_v15728 zs_v15729 ⇒
    ln c_v15730 ⇒ cmsort_workerL_i53(n_v15728, zs_v15729, c_v15730)

fun cmsortU_i56(zs0_v15731) =
  ln __v15732 ⇒
    let c_v15733 =
      fork c_v15734 in (cmsort_workerU_i54(4, zs0_v15731, c_v15734)) NULL
    in
    let __v15735 = recv(c_v15733) in
    match __v15735 with
    | (zs1_v15736, c_v15737) ⇒ let __v15738 = close(c_v15737) in zs1_v15736
    end

val cmsortUclo_i92 = fn zs0_v15739 ⇒ cmsortU_i56(zs0_v15739)

fun cmsortL_i55(zs0_v15740) =
  ln __v15741 ⇒
    let c_v15742 =
      fork c_v15743 in (cmsort_workerL_i53(4, zs0_v15740, c_v15743)) NULL
    in
    let __v15744 = recv(c_v15742) in
    match __v15744 with
    | (zs1_v15745, c_v15746) ⇒ let __v15747 = close(c_v15746) in zs1_v15745
    end

val cmsortLclo_i93 = fn zs0_v15748 ⇒ cmsortL_i55(zs0_v15748)

fun mkListU_i58(n_v15749) =
  if n_v15749 then
    (consUU_c13 n_v15749 mkListU_i58(n_v15749.-1))
  else
    nilUU_c12

val mkListUclo_i94 = fn n_v15750 ⇒ mkListU_i58(n_v15750)

fun mkListL_i57(n_v15751) =
  if n_v15751 then
    (consUL_c11 n_v15751 mkListL_i57(n_v15751.-1))
  else
    nilUL_c10

val mkListLclo_i95 = fn n_v15752 ⇒ mkListL_i57(n_v15752)

fun free_i35(A_v15753, ls_v15754) =
  match ls_v15754 with
  | nilUL_c10  ⇒ NULL
  | consUL_c11 __v15755 ls_v15756 ⇒ free_i35(NULL, ls_v15756)
  end

val freeclo_i96 = fn A_v15757 ls_v15758 ⇒ free_i35(A_v15757, ls_v15758)

main =
  let test_v15759 = mkListL_i57(400000) in
  let sorted_v15760 = (cmsortL_i55(test_v15759)) NULL in
  let __v15761 = free_i35(NULL, sorted_v15760) in NULL

trans3e success--------------------------

trans34 success--------------------------

