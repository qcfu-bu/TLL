program digits‹› : ((list‹_, U›) (_)) = ((cons)
(((String) (((Char) (O.+48))) (EmptyString)))
(((cons) (((String) (((Char) (O.+49))) (EmptyString)))
 (((cons) (((String) (((Char) (O.+50))) (EmptyString)))
  (((cons) (((String) (((Char) (O.+51))) (EmptyString)))
   (((cons) (((String) (((Char) (O.+52))) (EmptyString)))
    (((cons) (((String) (((Char) (O.+53))) (EmptyString)))
     (((cons) (((String) (((Char) (O.+54))) (EmptyString)))
      (((cons) (((String) (((Char) (O.+55))) (EmptyString)))
       (((cons) (((String) (((Char) (O.+56))) (EmptyString)))
        (((cons) (((String) (((Char) (O.+57))) (EmptyString))) (nil))))))))))))))))))))

program get_at‹› {A : U} (n : nat) (xs : ((list‹_, U›)
(A))) (a : A) : A = match n as _ in _ with O ⇒ match xs as _ in _ with nil  ⇒ a | cons x
_ ⇒ x | S n ⇒ match xs as _ in _ with nil  ⇒ a | cons _
xs ⇒ ((get_at) (_) (n) (xs)
(a))

program string_of_digit‹› (n : nat) : string = ((get_at) (_) (n) 
(digits)
(EmptyString))

program string_of_nat‹› (n : nat) : string = let s = ((string_of_digit)
(((modn) (n) (O.+10)))) in let n = ((divn) (n) (O.+10)) in match ((ltn)
(O.+0) (n)) as _ in _ with true ⇒ ((cats) (((string_of_nat) (n)))
(s)) | false ⇒ s

logical gcd‹› (a : nat) (b : nat) : nat = match b as _ in _ with O ⇒ a | S _ ⇒ (
(gcd) (b)
(((modn) (a) (b))))

program powm‹› (a : nat) (b : nat) (m : nat) : nat = match b as _ in _ with O ⇒ O.+1 | S b ⇒ (
(modn) (((muln) (a) (((powm) (a) (b) (m)))))
(m))

logical coprime‹› (a : nat) (b : nat) : U = ((gcd) (a)
(b)) ≡ O.+1

logical RSA‹› : proto = !{x : nat} → !{y : nat} → !(n : nat) → !{_ : n ≡ (
(muln) (x) (y))} → !{tot : nat} → !{_ : tot ≡ ((muln)
(((subn) (x) (O.+1)))
(((subn) (y) (O.+1))))} → !(e : nat) → !{_ : ((coprime) (e)
(tot))} → !{_ : ((ltn) (O.+1) (e)) ≡ true} → !{_ : ((ltn) (e)
(tot)) ≡ true} → !{d : nat} → !{_ : ((modn) (((muln) (e) (d)))
(tot)) ≡ O.+1} → ?{P0 : nat} → ?(C : nat) → ?{_ : C ≡ ((powm) 
(P0) (e) (n))} → !{P1 : nat} → !{_ : P1 ≡ ((powm) (C) (d)
(n))} → end

logical RSA_ch‹› : L = ch‹RSA›

logical RSA_hc‹› : L = hc‹RSA›

program client‹› (ch : RSA_hc) : IO unit = let P0 = O.+123 in let ⟨{x}, ch⟩ ⇐ recv ch in let ⟨{y}, ch⟩ ⇐ recv ch in let ⟨n, ch⟩ ⇐ recv ch in let ⟨{pf1}, ch⟩ ⇐ recv ch in let ⟨{tot}, ch⟩ ⇐ recv ch in let ⟨{pf2}, ch⟩ ⇐ recv ch in let ⟨e, ch⟩ ⇐ recv ch in let ⟨{pf3}, ch⟩ ⇐ recv ch in let ⟨{pf4}, ch⟩ ⇐ recv ch in let ⟨{pf5}, ch⟩ ⇐ recv ch in let ⟨{d}, ch⟩ ⇐ recv ch in let ⟨{pf6}, ch⟩ ⇐ recv ch in let ch ⇐ (
(send ch) (P0)) in let ch ⇐ ((send ch)
(((powm) (P0) (e) (n)))) in let ch ⇐ ((send ch)
(refl)) in let ⟨{P1}, ch⟩ ⇐ recv ch in let ⟨{pf7}, ch⟩ ⇐ recv ch in close ch

program server‹› (ch : RSA_ch) : IO unit = let x = O.+7 in let y = O.+19 in let n = (
(muln) (x) (y)) in let tot = ((muln) (((subn) (x) (O.+1)))
(((subn) (y) (O.+1)))) in let e = O.+5 in let d = O.+65 in let ch ⇐ (
(send ch) (x)) in let ch ⇐ ((send ch) (y)) in let ch ⇐ ((send ch)
(n)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(tot)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(e)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(refl)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(d)) in let ch ⇐ ((send ch)
(refl)) in let ⟨{P0}, ch⟩ ⇐ recv ch in let ⟨C, ch⟩ ⇐ recv ch in let ⟨{pf}, ch⟩ ⇐ recv ch in let P1 = (
(powm) (C) (d) (n)) in let ch ⇐ ((send ch) (P1)) in let ch ⇐ ((send ch)
(refl)) in let _ ⇐ close ch in ((print)
(((cats) (((string_of_nat) (P1)))
 (((String) (((Char) (O.+10))) (EmptyString))))))

program main‹› : IO unit = let c ⇐ fork (c : RSA_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : RSA_hc) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ close c0 in (
(client) (c)) in let c0 ⇐ ((send c0)
(c)) in let _ ⇐ close c0 in sleep O.+1

parsing success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v274 : bool) (b2_v275 : bool) ⇒
    match b1_v274 as __v276 in ??1 with
    | true ⇒ b2_v275 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v279 : bool) (b2_v280 : bool) ⇒
    match b1_v279 as __v281 in ??2 with
    | true ⇒ true | false ⇒ b2_v280
    end

program notb_i3 : bool → bool =
  fn (b_v283 : bool) ⇒
    match b_v283 as __v284 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v287 : nat) (y_v288 : nat) ⇒
    match x_v287 as __v289 in ??4 with
    | O ⇒ true
    | S x_v290 ⇒
      match y_v288 as __v291 in ??5 with
      | O ⇒ false | S y_v292 ⇒ (lten_i4 x_v290 y_v292)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v295 : nat) (y_v296 : nat) ⇒
    match x_v295 as __v297 in ??6 with
    | O ⇒
      match y_v296 as __v298 in ??8 with
      | O ⇒ true | S __v299 ⇒ false
      end
    | S x_v300 ⇒
      match y_v296 as __v301 in ??7 with
      | O ⇒ true | S y_v302 ⇒ (gten_i5 x_v300 y_v302)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v305 : nat) (y_v306 : nat) ⇒
    match x_v305 as __v307 in ??9 with
    | O ⇒
      match y_v306 as __v308 in ??11 with
      | O ⇒ false | S y_v309 ⇒ true
      end
    | S x_v310 ⇒
      match y_v306 as __v311 in ??10 with
      | O ⇒ false | S y_v312 ⇒ (ltn_i6 x_v310 y_v312)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v315 : nat) (y_v316 : nat) ⇒
    match x_v315 as __v317 in ??12 with
    | O ⇒ false
    | S x_v318 ⇒
      match y_v316 as __v319 in ??13 with
      | O ⇒ true | S y_v320 ⇒ (gtn_i7 x_v318 y_v320)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v323 : nat) (y_v324 : nat) ⇒
    match x_v323 as __v325 in ??14 with
    | O ⇒
      match y_v324 as __v326 in ??16 with
      | O ⇒ true | S __v327 ⇒ false
      end
    | S x_v328 ⇒
      match y_v324 as __v329 in ??15 with
      | O ⇒ false | S y_v330 ⇒ (eqn_i8 x_v328 y_v330)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v332 : nat) ⇒
    match x_v332 as __v333 in ??17 with
    | O ⇒ 0 | S x_v334 ⇒ x_v334
    end

program addn_i10 : nat → nat → nat =
  fn (x_v337 : nat) (y_v338 : nat) ⇒
    match x_v337 as __v339 in ??18 with
    | O ⇒ y_v338 | S x_v340 ⇒ (addn_i10 x_v340 y_v338).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v343 : nat) (y_v344 : nat) ⇒
    match y_v344 as __v345 in ??19 with
    | O ⇒ x_v343 | S y_v346 ⇒ (subn_i11 (pred_i9 x_v343) y_v346)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v349 : nat) (y_v350 : nat) ⇒
    match x_v349 as __v351 in ??20 with
    | O ⇒ 0 | S x_v352 ⇒ (addn_i10 y_v350 (muln_i12 x_v352 y_v350))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v355 : nat) (y_v356 : nat) ⇒
    match (ltn_i6 x_v355 y_v356) as __v357 in ??21 with
    | true ⇒ 0 | false ⇒ (divn_i13 (subn_i11 x_v355 y_v356) y_v356).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v360 : nat) (y_v361 : nat) ⇒
    (subn_i11 x_v360 (muln_i12 (divn_i13 x_v360 y_v361) y_v361))

inductive char_d1 : U =
| Char_c1 of (n_v362 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v363 : char_d1) (s_v364 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v367 : string_d2) (s2_v368 : string_d2) ⇒
    match s1_v367 as __v369 in ??22 with
    | EmptyString_c2  ⇒ s2_v368
    | String_c3 c_v370 s1_v371 ⇒
      (String_c3‹› c_v370 (cats_i15 s1_v371 s2_v368))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v373 : string_d2) ⇒
    match s_v373 as __v374 in ??23 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v375 s_v376 ⇒ (strlen_i16 s_v376).+1
    end

inductive list_d3 ‹s_s377, t_s378›
  (A_v379 : Type‹s_s377›) : Type‹t_s378›
=
| nil_c4 of
    ‹s_s380, t_s381› (A_v382 : Type‹s_s380›)
    : (list_d3‹s_s380, t_s381› A_v382)
| cons_c5 of
    ‹s_s383, t_s384› (A_v385 : Type‹s_s383›) (hd_v386 : A_v385)
    (tl_v387 : (list_d3‹s_s383, t_s384› A_v385))
    : (list_d3‹s_s383, t_s384› A_v385)

program len_i17 ‹s_s388, t_s389› :
  ∀ {A_v390 : Type‹s_s388›} →
    (list_d3‹??24, t_s389› A_v390) →
      nat ⊗ (list_d3‹??25, t_s389› A_v390)
=
  fn {A_v393 : Type‹s_s388›}
     (xs_v394 : (list_d3‹??24, t_s389› A_v393)) ⇒
    match xs_v394 as __v395 in ??26 with
    | nil_c4  ⇒ ⟨0, nil_c4‹??36, ??35›⟩
    | cons_c5 x_v396 xs_v397 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v397) as __v398 in ??30 with
      | ⟨n_v399, xs_v400⟩ ⇒
        ⟨n_v399.+1, (cons_c5‹??33, ??32› x_v396 xs_v400)⟩
      end
    end

program append_i18 ‹s_s401, t_s402› :
  ∀ {A_v403 : Type‹s_s401›} →
    (list_d3‹??37, t_s402› A_v403) →
      (list_d3‹??38, t_s402› A_v403) ⊸ (list_d3‹??40, ??39› A_v403)
=
  fn {A_v406 : Type‹s_s401›}
     (xs_v407 : (list_d3‹??37, t_s402› A_v406)) ⇒
    ln (ys_v408 : ??41) ⇒
      match xs_v407 as __v409 in ??42 with
      | nil_c4  ⇒ ys_v408
      | cons_c5 x_v410 xs_v411 ⇒
        (cons_c5‹??48, ??47›
          x_v410 (append_i18‹??45, ??44› ??43 xs_v411 ys_v408))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v413 : unit) ⇒
    ⇑(b_v414 : bool) ⇒
      match b_v414 as __v415 in ??49 with
      | true ⇒ ⇓(__v416 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v418 : unit) ⇒
    ⇑(b_v419 : bool) ⇒
      match b_v419 as __v420 in ??50 with
      | true ⇒ ⇑(__v421 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v423 : unit) ⇒
    ⇑(b_v424 : bool) ⇒
      match b_v424 as __v425 in ??51 with
      | true ⇒ ⇑(__v426 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v428 : unit) ⇒
    let ch_v429 ⇐ open stdin in
    let ch_v430 ⇐ (send ch_v429 true) in
    let __v431 ⇐ recv ch_v430 in
    match __v431 as __v432 in ??52 with
    | ⟨s_v433, ch_v434⟩ ⇒
      let ch_v435 ⇐ (send ch_v434 false) in
      let __v436 ⇐ close ch_v435 in return s_v433
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v438 : string_d2) ⇒
    let ch_v439 ⇐ open stdout in
    let ch_v440 ⇐ (send ch_v439 true) in
    let ch_v441 ⇐ (send ch_v440 s_v438) in
    let ch_v442 ⇐ (send ch_v441 false) in close ch_v442

program prerr_i27 : string_d2 → IO unit =
  fn (s_v444 : string_d2) ⇒
    let ch_v445 ⇐ open stderr in
    let ch_v446 ⇐ (send ch_v445 true) in
    let ch_v447 ⇐ (send ch_v446 s_v444) in
    let ch_v448 ⇐ (send ch_v447 false) in close ch_v448

program digits_i28 : (list_d3‹??53, U› ??54) =
  (cons_c5‹??87, ??86›
    "0"
    (cons_c5‹??84, ??83›
      "1"
      (cons_c5‹??81, ??80›
        "2"
        (cons_c5‹??78, ??77›
          "3"
          (cons_c5‹??75, ??74›
            "4"
            (cons_c5‹??72, ??71›
              "5"
              (cons_c5‹??69, ??68›
                "6"
                (cons_c5‹??66, ??65›
                  "7"
                  (cons_c5‹??63, ??62›
                    "8" (cons_c5‹??60, ??59› "9" nil_c4‹??57, ??56›))))))))))

program get_at_i29 :
  ∀ {A_v449 : U} →
    nat → (list_d3‹??88, U› A_v449) → A_v449 → A_v449
=
  fn {A_v453 : U} (n_v454 : nat) (xs_v455 : (list_d3‹??88, U› A_v453))
     (a_v456 : A_v453) ⇒
    match n_v454 as __v457 in ??89 with
    | O ⇒
      match xs_v455 as __v458 in ??92 with
      | nil_c4  ⇒ a_v456 | cons_c5 x_v459 __v460 ⇒ x_v459
      end
    | S n_v461 ⇒
      match xs_v455 as __v462 in ??90 with
      | nil_c4  ⇒ a_v456
      | cons_c5 __v463 xs_v464 ⇒ (get_at_i29 ??91 n_v461 xs_v464 a_v456)
      end
    end

program string_of_digit_i30 : nat → string_d2 =
  fn (n_v466 : nat) ⇒
    (get_at_i29 ??93 n_v466 digits_i28 EmptyString_c2‹›)

program string_of_nat_i31 : nat → string_d2 =
  fn (n_v468 : nat) ⇒
    let s_v469 = (string_of_digit_i30 (modn_i14 n_v468 10)) in
    let n_v470 = (divn_i13 n_v468 10) in
    match (ltn_i6 0 n_v470) as __v471 in ??94 with
    | true ⇒ (cats_i15 (string_of_nat_i31 n_v470) s_v469)
    | false ⇒ s_v469
    end

logical gcd_i32 : nat → nat → nat =
  fn (a_v474 : nat) (b_v475 : nat) ⇒
    match b_v475 as __v476 in ??95 with
    | O ⇒ a_v474 | S __v477 ⇒ (gcd_i32 b_v475 (modn_i14 a_v474 b_v475))
    end

program powm_i33 : nat → nat → nat → nat =
  fn (a_v481 : nat) (b_v482 : nat) (m_v483 : nat) ⇒
    match b_v482 as __v484 in ??96 with
    | O ⇒ 1
    | S b_v485 ⇒
      (modn_i14 (muln_i12 a_v481 (powm_i33 a_v481 b_v485 m_v483)) m_v483)
    end

logical coprime_i34 : nat → nat → U =
  fn (a_v488 : nat) (b_v489 : nat) ⇒ (gcd_i32 a_v488 b_v489) ≡ 1

logical RSA_i35 : proto =
  ⇑{x_v490 : nat} ⇒
    ⇑{y_v491 : nat} ⇒
      ⇑(n_v492 : nat) ⇒
        ⇑{__v493 : n_v492 ≡ (muln_i12 x_v490 y_v491)} ⇒
          ⇑{tot_v494 : nat} ⇒
            ⇑{__v495 :
              tot_v494 ≡ (muln_i12 (subn_i11 x_v490 1) (subn_i11 y_v491 1))} ⇒
              ⇑(e_v496 : nat) ⇒
                ⇑{__v497 : (coprime_i34 e_v496 tot_v494)} ⇒
                  ⇑{__v498 : (ltn_i6 1 e_v496) ≡ true} ⇒
                    ⇑{__v499 : (ltn_i6 e_v496 tot_v494) ≡ true} ⇒
                      ⇑{d_v500 : nat} ⇒
                        ⇑{__v501 :
                          (modn_i14 (muln_i12 e_v496 d_v500) tot_v494) ≡ 1} ⇒
                          ⇓{P0_v502 : nat} ⇒
                            ⇓(C_v503 : nat) ⇒
                              ⇓{__v504 :
                                C_v503 ≡ (powm_i33 P0_v502 e_v496 n_v492)} ⇒
                                ⇑{P1_v505 : nat} ⇒
                                  ⇑{__v506 :
                                    P1_v505 ≡
                                      (powm_i33 C_v503 d_v500 n_v492)} ⇒
                                    end

logical RSA_ch_i36 : L = ch⟨RSA_i35⟩

logical RSA_hc_i37 : L = hc⟨RSA_i35⟩

program client_i38 : RSA_hc_i37 → IO unit =
  fn (ch_v508 : RSA_hc_i37) ⇒
    let P0_v509 = 123 in
    let __v510 ⇐ recv ch_v508 in
    match __v510 as __v511 in ??119 with
    | ⟨{x_v512}, ch_v513⟩ ⇒
      let __v514 ⇐ recv ch_v513 in
      match __v514 as __v515 in ??118 with
      | ⟨{y_v516}, ch_v517⟩ ⇒
        let __v518 ⇐ recv ch_v517 in
        match __v518 as __v519 in ??117 with
        | ⟨n_v520, ch_v521⟩ ⇒
          let __v522 ⇐ recv ch_v521 in
          match __v522 as __v523 in ??116 with
          | ⟨{pf1_v524}, ch_v525⟩ ⇒
            let __v526 ⇐ recv ch_v525 in
            match __v526 as __v527 in ??115 with
            | ⟨{tot_v528}, ch_v529⟩ ⇒
              let __v530 ⇐ recv ch_v529 in
              match __v530 as __v531 in ??114 with
              | ⟨{pf2_v532}, ch_v533⟩ ⇒
                let __v534 ⇐ recv ch_v533 in
                match __v534 as __v535 in ??113 with
                | ⟨e_v536, ch_v537⟩ ⇒
                  let __v538 ⇐ recv ch_v537 in
                  match __v538 as __v539 in ??112 with
                  | ⟨{pf3_v540}, ch_v541⟩ ⇒
                    let __v542 ⇐ recv ch_v541 in
                    match __v542 as __v543 in ??111 with
                    | ⟨{pf4_v544}, ch_v545⟩ ⇒
                      let __v546 ⇐ recv ch_v545 in
                      match __v546 as __v547 in ??110 with
                      | ⟨{pf5_v548}, ch_v549⟩ ⇒
                        let __v550 ⇐ recv ch_v549 in
                        match __v550 as __v551 in ??109 with
                        | ⟨{d_v552}, ch_v553⟩ ⇒
                          let __v554 ⇐ recv ch_v553 in
                          match __v554 as __v555 in ??108 with
                          | ⟨{pf6_v556}, ch_v557⟩ ⇒
                            let ch_v558 ⇐ (send ch_v557 P0_v509) in
                            let ch_v559 ⇐
                              (send ch_v558 (powm_i33 P0_v509 e_v536 n_v520))
                            in
                            let ch_v560 ⇐ (send ch_v559 refl ??105) in
                            let __v561 ⇐ recv ch_v560 in
                            match __v561 as __v562 in ??107 with
                            | ⟨{P1_v563}, ch_v564⟩ ⇒
                              let __v565 ⇐ recv ch_v564 in
                              match __v565 as __v566 in ??106 with
                              | ⟨{pf7_v567}, ch_v568⟩ ⇒ close ch_v568
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program server_i39 : RSA_ch_i36 → IO unit =
  fn (ch_v570 : RSA_ch_i36) ⇒
    let x_v571 = 7 in
    let y_v572 = 19 in
    let n_v573 = (muln_i12 x_v571 y_v572) in
    let tot_v574 = (muln_i12 (subn_i11 x_v571 1) (subn_i11 y_v572 1)) in
    let e_v575 = 5 in
    let d_v576 = 65 in
    let ch_v577 ⇐ (send ch_v570 x_v571) in
    let ch_v578 ⇐ (send ch_v577 y_v572) in
    let ch_v579 ⇐ (send ch_v578 n_v573) in
    let ch_v580 ⇐ (send ch_v579 refl ??120) in
    let ch_v581 ⇐ (send ch_v580 tot_v574) in
    let ch_v582 ⇐ (send ch_v581 refl ??121) in
    let ch_v583 ⇐ (send ch_v582 e_v575) in
    let ch_v584 ⇐ (send ch_v583 refl ??122) in
    let ch_v585 ⇐ (send ch_v584 refl ??123) in
    let ch_v586 ⇐ (send ch_v585 refl ??124) in
    let ch_v587 ⇐ (send ch_v586 d_v576) in
    let ch_v588 ⇐ (send ch_v587 refl ??125) in
    let __v589 ⇐ recv ch_v588 in
    match __v589 as __v590 in ??129 with
    | ⟨{P0_v591}, ch_v592⟩ ⇒
      let __v593 ⇐ recv ch_v592 in
      match __v593 as __v594 in ??128 with
      | ⟨C_v595, ch_v596⟩ ⇒
        let __v597 ⇐ recv ch_v596 in
        match __v597 as __v598 in ??127 with
        | ⟨{pf_v599}, ch_v600⟩ ⇒
          let P1_v601 = (powm_i33 C_v595 d_v576 n_v573) in
          let ch_v602 ⇐ (send ch_v600 P1_v601) in
          let ch_v603 ⇐ (send ch_v602 refl ??126) in
          let __v604 ⇐ close ch_v603 in
          (print_i26 (cats_i15 (string_of_nat_i31 P1_v601) "\n"))
        end
      end
    end

program main_i40 : IO unit =
  let c_v605 ⇐ fork (c_v606 : RSA_ch_i36) in (server_i39 c_v606) in
  let c0_v607 ⇐
    fork (c0_v608 : ch⟨⇓(__v609 : RSA_hc_i37) ⇒ end⟩) in
      let __v610 ⇐ recv c0_v608 in
      match __v610 as __v611 in ??130 with
      | ⟨c_v612, c0_v613⟩ ⇒
        let __v614 ⇐ close c0_v613 in (client_i38 c_v612)
      end
  in
  let c0_v615 ⇐ (send c0_v607 c_v605) in
  let __v616 ⇐ close c0_v615 in sleep 1

trans01 success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v27884 : bool) (b2_v27885 : bool) ⇒
    match b1_v27884 as __v27886 in bool with
    | true ⇒ b2_v27885 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v27889 : bool) (b2_v27890 : bool) ⇒
    match b1_v27889 as __v27891 in bool with
    | true ⇒ true | false ⇒ b2_v27890
    end

program notb_i3 : bool → bool =
  fn (b_v27893 : bool) ⇒
    match b_v27893 as __v27894 in bool with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v27897 : nat) (y_v27898 : nat) ⇒
    match x_v27897 as __v27899 in bool with
    | O ⇒ true
    | S x_v27900 ⇒
      match y_v27898 as __v27901 in bool with
      | O ⇒ false | S y_v27902 ⇒ (lten_i4 x_v27900 y_v27902)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v27905 : nat) (y_v27906 : nat) ⇒
    match x_v27905 as __v27907 in bool with
    | O ⇒
      match y_v27906 as __v27908 in bool with
      | O ⇒ true | S __v27909 ⇒ false
      end
    | S x_v27910 ⇒
      match y_v27906 as __v27911 in bool with
      | O ⇒ true | S y_v27912 ⇒ (gten_i5 x_v27910 y_v27912)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v27915 : nat) (y_v27916 : nat) ⇒
    match x_v27915 as __v27917 in bool with
    | O ⇒
      match y_v27916 as __v27918 in bool with
      | O ⇒ false | S y_v27919 ⇒ true
      end
    | S x_v27920 ⇒
      match y_v27916 as __v27921 in bool with
      | O ⇒ false | S y_v27922 ⇒ (ltn_i6 x_v27920 y_v27922)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v27925 : nat) (y_v27926 : nat) ⇒
    match x_v27925 as __v27927 in bool with
    | O ⇒ false
    | S x_v27928 ⇒
      match y_v27926 as __v27929 in bool with
      | O ⇒ true | S y_v27930 ⇒ (gtn_i7 x_v27928 y_v27930)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v27933 : nat) (y_v27934 : nat) ⇒
    match x_v27933 as __v27935 in bool with
    | O ⇒
      match y_v27934 as __v27936 in bool with
      | O ⇒ true | S __v27937 ⇒ false
      end
    | S x_v27938 ⇒
      match y_v27934 as __v27939 in bool with
      | O ⇒ false | S y_v27940 ⇒ (eqn_i8 x_v27938 y_v27940)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v27942 : nat) ⇒
    match x_v27942 as __v27943 in nat with
    | O ⇒ 0 | S x_v27944 ⇒ x_v27944
    end

program addn_i10 : nat → nat → nat =
  fn (x_v27947 : nat) (y_v27948 : nat) ⇒
    match x_v27947 as __v27949 in nat with
    | O ⇒ y_v27948 | S x_v27950 ⇒ (addn_i10 x_v27950 y_v27948).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v27953 : nat) (y_v27954 : nat) ⇒
    match y_v27954 as __v27955 in nat with
    | O ⇒ x_v27953 | S y_v27956 ⇒ (subn_i11 (pred_i9 x_v27953) y_v27956)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v27959 : nat) (y_v27960 : nat) ⇒
    match x_v27959 as __v27961 in nat with
    | O ⇒ 0
    | S x_v27962 ⇒ (addn_i10 y_v27960 (muln_i12 x_v27962 y_v27960))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v27965 : nat) (y_v27966 : nat) ⇒
    match (ltn_i6 x_v27965 y_v27966) as __v27967 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i13 (subn_i11 x_v27965 y_v27966) y_v27966).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v27970 : nat) (y_v27971 : nat) ⇒
    (subn_i11 x_v27970 (muln_i12 (divn_i13 x_v27970 y_v27971) y_v27971))

inductive char_d1 : U =
| Char_c1 of (n_v27972 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v27973 : char_d1) (s_v27974 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v27977 : string_d2) (s2_v27978 : string_d2) ⇒
    match s1_v27977 as __v27979 in string_d2 with
    | EmptyString_c2  ⇒ s2_v27978
    | String_c3 c_v27980 s1_v27981 ⇒
      (String_c3‹› c_v27980 (cats_i15 s1_v27981 s2_v27978))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v27983 : string_d2) ⇒
    match s_v27983 as __v27984 in nat with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v27985 s_v27986 ⇒ (strlen_i16 s_v27986).+1
    end

inductive list_d3 ‹s_s27987, t_s27988›
  (A_v27989 : Type‹s_s27987›) : Type‹t_s27988›
=
| nil_c4 of
    ‹s_s27990, t_s27991› (A_v27992 : Type‹s_s27990›)
    : (list_d3‹s_s27990, t_s27991› A_v27992)
| cons_c5 of
    ‹s_s27993, t_s27994› (A_v27995 : Type‹s_s27993›)
    (hd_v27996 : A_v27995)
    (tl_v27997 : (list_d3‹s_s27993, t_s27994› A_v27995))
    : (list_d3‹s_s27993, t_s27994› A_v27995)

program len_i17 ‹s_s27998, t_s27999› :
  ∀ {A_v28000 : Type‹s_s27998›} →
    (list_d3‹s_s27998, t_s27999› A_v28000) →
      nat ⊗ (list_d3‹s_s27998, t_s27999› A_v28000)
=
  fn {A_v28003 : Type‹s_s27998›}
     (xs_v28004 : (list_d3‹s_s27998, t_s27999› A_v28003)) ⇒
    match xs_v28004 as __v28005 in
      nat ⊗ (list_d3‹s_s27998, t_s27999› A_v28003) with
    | nil_c4  ⇒ ⟨0, nil_c4‹s_s27998, t_s27999›⟩
    | cons_c5 x_v28007 xs_v28008 ⇒
      match (len_i17‹s_s27998, t_s27999› A_v28003 xs_v28008) as __v28009 in
        nat ⊗ (list_d3‹s_s27998, t_s27999› A_v28003) with
      | ⟨n_v28011, xs_v28012⟩ ⇒
        ⟨n_v28011.+1, (cons_c5‹s_s27998, t_s27999› x_v28007 xs_v28012)⟩
      end
    end

program append_i18 ‹s_s28013, t_s28014› :
  ∀ {A_v28015 : Type‹s_s28013›} →
    (list_d3‹s_s28013, t_s28014› A_v28015) →
      (list_d3‹s_s28013, t_s28014› A_v28015) ⊸
        (list_d3‹s_s28013, t_s28014› A_v28015)
=
  fn {A_v28018 : Type‹s_s28013›}
     (xs_v28019 : (list_d3‹s_s28013, t_s28014› A_v28018)) ⇒
    ln (ys_v28020 : (list_d3‹s_s28013, t_s28014› A_v28018)) ⇒
      match xs_v28019 as __v28021 in
        (list_d3‹s_s28013, t_s28014› A_v28018) with
      | nil_c4  ⇒ ys_v28020
      | cons_c5 x_v28022 xs_v28023 ⇒
        (cons_c5‹s_s28013, t_s28014›
          x_v28022
          (append_i18‹s_s28013, t_s28014› A_v28018 xs_v28023 ys_v28020))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v28025 : unit) ⇒
    ⇑(b_v28026 : bool) ⇒
      match b_v28026 as __v28027 in proto with
      | true ⇒ ⇓(__v28028 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v28030 : unit) ⇒
    ⇑(b_v28031 : bool) ⇒
      match b_v28031 as __v28032 in proto with
      | true ⇒ ⇑(__v28033 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v28035 : unit) ⇒
    ⇑(b_v28036 : bool) ⇒
      match b_v28036 as __v28037 in proto with
      | true ⇒ ⇑(__v28038 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v28040 : unit) ⇒
    let ch_v28041 ⇐ open stdin in
    let ch_v28042 ⇐ (send ch_v28041 true) in
    let __v28043 ⇐ recv ch_v28042 in
    match __v28043 as __v28044 in IO string_d2 with
    | ⟨s_v28045, ch_v28046⟩ ⇒
      let ch_v28047 ⇐ (send ch_v28046 false) in
      let __v28048 ⇐ close ch_v28047 in return s_v28045
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v28050 : string_d2) ⇒
    let ch_v28051 ⇐ open stdout in
    let ch_v28052 ⇐ (send ch_v28051 true) in
    let ch_v28053 ⇐ (send ch_v28052 s_v28050) in
    let ch_v28054 ⇐ (send ch_v28053 false) in close ch_v28054

program prerr_i27 : string_d2 → IO unit =
  fn (s_v28056 : string_d2) ⇒
    let ch_v28057 ⇐ open stderr in
    let ch_v28058 ⇐ (send ch_v28057 true) in
    let ch_v28059 ⇐ (send ch_v28058 s_v28056) in
    let ch_v28060 ⇐ (send ch_v28059 false) in close ch_v28060

program digits_i28 : (list_d3‹U, U› string_d2) =
  (cons_c5‹U, U›
    "0"
    (cons_c5‹U, U›
      "1"
      (cons_c5‹U, U›
        "2"
        (cons_c5‹U, U›
          "3"
          (cons_c5‹U, U›
            "4"
            (cons_c5‹U, U›
              "5"
              (cons_c5‹U, U›
                "6"
                (cons_c5‹U, U›
                  "7"
                  (cons_c5‹U, U›
                    "8" (cons_c5‹U, U› "9" nil_c4‹U, U›))))))))))

program get_at_i29 :
  ∀ {A_v28061 : U} →
    nat → (list_d3‹U, U› A_v28061) → A_v28061 → A_v28061
=
  fn {A_v28065 : U} (n_v28066 : nat)
     (xs_v28067 : (list_d3‹U, U› A_v28065)) (a_v28068 : A_v28065) ⇒
    match n_v28066 as __v28069 in A_v28065 with
    | O ⇒
      match xs_v28067 as __v28070 in A_v28065 with
      | nil_c4  ⇒ a_v28068 | cons_c5 x_v28071 __v28072 ⇒ x_v28071
      end
    | S n_v28073 ⇒
      match xs_v28067 as __v28074 in A_v28065 with
      | nil_c4  ⇒ a_v28068
      | cons_c5 __v28075 xs_v28076 ⇒
        (get_at_i29 A_v28065 n_v28073 xs_v28076 a_v28068)
      end
    end

program string_of_digit_i30 : nat → string_d2 =
  fn (n_v28078 : nat) ⇒
    (get_at_i29 string_d2 n_v28078 digits_i28 EmptyString_c2‹›)

program string_of_nat_i31 : nat → string_d2 =
  fn (n_v28080 : nat) ⇒
    let s_v28081 = (string_of_digit_i30 (modn_i14 n_v28080 10)) in
    let n_v28082 = (divn_i13 n_v28080 10) in
    match (ltn_i6 0 n_v28082) as __v28083 in string_d2 with
    | true ⇒ (cats_i15 (string_of_nat_i31 n_v28082) s_v28081)
    | false ⇒ s_v28081
    end

logical gcd_i32 : nat → nat → nat =
  fn (a_v28086 : nat) (b_v28087 : nat) ⇒
    match b_v28087 as __v28088 in nat with
    | O ⇒ a_v28086
    | S __v28089 ⇒ (gcd_i32 b_v28087 (modn_i14 a_v28086 b_v28087))
    end

program powm_i33 : nat → nat → nat → nat =
  fn (a_v28093 : nat) (b_v28094 : nat) (m_v28095 : nat) ⇒
    match b_v28094 as __v28096 in nat with
    | O ⇒ 1
    | S b_v28097 ⇒
      (modn_i14
        (muln_i12 a_v28093 (powm_i33 a_v28093 b_v28097 m_v28095)) m_v28095)
    end

logical coprime_i34 : nat → nat → U =
  fn (a_v28100 : nat) (b_v28101 : nat) ⇒ (gcd_i32 a_v28100 b_v28101) ≡ 1

logical RSA_i35 : proto =
  ⇑{x_v28102 : nat} ⇒
    ⇑{y_v28103 : nat} ⇒
      ⇑(n_v28104 : nat) ⇒
        ⇑{__v28105 : n_v28104 ≡ (muln_i12 x_v28102 y_v28103)} ⇒
          ⇑{tot_v28106 : nat} ⇒
            ⇑{__v28107 :
              tot_v28106 ≡
                (muln_i12 (subn_i11 x_v28102 1) (subn_i11 y_v28103 1))} ⇒
              ⇑(e_v28108 : nat) ⇒
                ⇑{__v28109 : (coprime_i34 e_v28108 tot_v28106)} ⇒
                  ⇑{__v28110 : (ltn_i6 1 e_v28108) ≡ true} ⇒
                    ⇑{__v28111 : (ltn_i6 e_v28108 tot_v28106) ≡ true} ⇒
                      ⇑{d_v28112 : nat} ⇒
                        ⇑{__v28113 :
                          (modn_i14 (muln_i12 e_v28108 d_v28112) tot_v28106) ≡
                            1} ⇒
                          ⇓{P0_v28114 : nat} ⇒
                            ⇓(C_v28115 : nat) ⇒
                              ⇓{__v28116 :
                                C_v28115 ≡
                                  (powm_i33 P0_v28114 e_v28108 n_v28104)} ⇒
                                ⇑{P1_v28117 : nat} ⇒
                                  ⇑{__v28118 :
                                    P1_v28117 ≡
                                      (powm_i33 C_v28115 d_v28112 n_v28104)} ⇒
                                    end

logical RSA_ch_i36 : L = ch⟨RSA_i35⟩

logical RSA_hc_i37 : L = hc⟨RSA_i35⟩

program client_i38 : RSA_hc_i37 → IO unit =
  fn (ch_v28120 : RSA_hc_i37) ⇒
    let P0_v28121 = 123 in
    let __v28122 ⇐ recv ch_v28120 in
    match __v28122 as __v28123 in IO unit with
    | ⟨{x_v28124}, ch_v28125⟩ ⇒
      let __v28126 ⇐ recv ch_v28125 in
      match __v28126 as __v28127 in IO unit with
      | ⟨{y_v28128}, ch_v28129⟩ ⇒
        let __v28130 ⇐ recv ch_v28129 in
        match __v28130 as __v28131 in IO unit with
        | ⟨n_v28132, ch_v28133⟩ ⇒
          let __v28134 ⇐ recv ch_v28133 in
          match __v28134 as __v28135 in IO unit with
          | ⟨{pf1_v28136}, ch_v28137⟩ ⇒
            let __v28138 ⇐ recv ch_v28137 in
            match __v28138 as __v28139 in IO unit with
            | ⟨{tot_v28140}, ch_v28141⟩ ⇒
              let __v28142 ⇐ recv ch_v28141 in
              match __v28142 as __v28143 in IO unit with
              | ⟨{pf2_v28144}, ch_v28145⟩ ⇒
                let __v28146 ⇐ recv ch_v28145 in
                match __v28146 as __v28147 in IO unit with
                | ⟨e_v28148, ch_v28149⟩ ⇒
                  let __v28150 ⇐ recv ch_v28149 in
                  match __v28150 as __v28151 in IO unit with
                  | ⟨{pf3_v28152}, ch_v28153⟩ ⇒
                    let __v28154 ⇐ recv ch_v28153 in
                    match __v28154 as __v28155 in IO unit with
                    | ⟨{pf4_v28156}, ch_v28157⟩ ⇒
                      let __v28158 ⇐ recv ch_v28157 in
                      match __v28158 as __v28159 in IO unit with
                      | ⟨{pf5_v28160}, ch_v28161⟩ ⇒
                        let __v28162 ⇐ recv ch_v28161 in
                        match __v28162 as __v28163 in IO unit with
                        | ⟨{d_v28164}, ch_v28165⟩ ⇒
                          let __v28166 ⇐ recv ch_v28165 in
                          match __v28166 as __v28167 in IO unit with
                          | ⟨{pf6_v28168}, ch_v28169⟩ ⇒
                            let ch_v28170 ⇐ (send ch_v28169 P0_v28121) in
                            let ch_v28171 ⇐
                              (send ch_v28170
                                (powm_i33 P0_v28121 e_v28148 n_v28132))
                            in
                            let ch_v28172 ⇐
                              (send ch_v28171
                                refl (powm_i33 123 e_v28148 n_v28132))
                            in
                            let __v28173 ⇐ recv ch_v28172 in
                            match __v28173 as __v28174 in IO unit with
                            | ⟨{P1_v28175}, ch_v28176⟩ ⇒
                              let __v28177 ⇐ recv ch_v28176 in
                              match __v28177 as __v28178 in IO unit with
                              | ⟨{pf7_v28179}, ch_v28180⟩ ⇒
                                close ch_v28180
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program server_i39 : RSA_ch_i36 → IO unit =
  fn (ch_v28182 : RSA_ch_i36) ⇒
    let x_v28183 = 7 in
    let y_v28184 = 19 in
    let n_v28185 = (muln_i12 x_v28183 y_v28184) in
    let tot_v28186 = (muln_i12 (subn_i11 x_v28183 1) (subn_i11 y_v28184 1))
    in
    let e_v28187 = 5 in
    let d_v28188 = 65 in
    let ch_v28189 ⇐ (send ch_v28182 x_v28183) in
    let ch_v28190 ⇐ (send ch_v28189 y_v28184) in
    let ch_v28191 ⇐ (send ch_v28190 n_v28185) in
    let ch_v28192 ⇐ (send ch_v28191 refl (muln_i12 7 19)) in
    let ch_v28193 ⇐ (send ch_v28192 tot_v28186) in
    let ch_v28194 ⇐
      (send ch_v28193 refl (muln_i12 (subn_i11 7 1) (subn_i11 19 1)))
    in
    let ch_v28195 ⇐ (send ch_v28194 e_v28187) in
    let ch_v28196 ⇐ (send ch_v28195 refl (gcd_i32 5 108)) in
    let ch_v28197 ⇐ (send ch_v28196 refl (ltn_i6 1 5)) in
    let ch_v28198 ⇐
      (send ch_v28197
        refl (ltn_i6 5 (muln_i12 (subn_i11 7 1) (subn_i11 19 1))))
    in
    let ch_v28199 ⇐ (send ch_v28198 d_v28188) in
    let ch_v28200 ⇐
      (send ch_v28199
        refl (modn_i14
               (muln_i12 5 65) (muln_i12 (subn_i11 7 1) (subn_i11 19 1))))
    in
    let __v28201 ⇐ recv ch_v28200 in
    match __v28201 as __v28202 in IO unit with
    | ⟨{P0_v28203}, ch_v28204⟩ ⇒
      let __v28205 ⇐ recv ch_v28204 in
      match __v28205 as __v28206 in IO unit with
      | ⟨C_v28207, ch_v28208⟩ ⇒
        let __v28209 ⇐ recv ch_v28208 in
        match __v28209 as __v28210 in IO unit with
        | ⟨{pf_v28211}, ch_v28212⟩ ⇒
          let P1_v28213 = (powm_i33 C_v28207 d_v28188 n_v28185) in
          let ch_v28214 ⇐ (send ch_v28212 P1_v28213) in
          let ch_v28215 ⇐
            (send ch_v28214 refl (powm_i33 C_v28207 65 (muln_i12 7 19)))
          in
          let __v28216 ⇐ close ch_v28215 in
          (print_i26 (cats_i15 (string_of_nat_i31 P1_v28213) "\n"))
        end
      end
    end

program main_i40 : IO unit =
  let c_v28217 ⇐ fork (c_v28218 : RSA_ch_i36) in (server_i39 c_v28218) in
  let c0_v28219 ⇐
    fork (c0_v28220 : ch⟨⇓(__v28221 : RSA_hc_i37) ⇒ end⟩) in
      let __v28222 ⇐ recv c0_v28220 in
      match __v28222 as __v28223 in IO unit with
      | ⟨c_v28224, c0_v28225⟩ ⇒
        let __v28226 ⇐ close c0_v28225 in (client_i38 c_v28224)
      end
  in
  let c0_v28227 ⇐ (send c0_v28219 c_v28217) in
  let __v28228 ⇐ close c0_v28227 in sleep 1

trans1e success--------------------------

def andb_i1 =
  fn b1_v29494 b2_v29495 ⇒
    match b1_v29494 with
    | true ⇒ b2_v29495 | false ⇒ false
    end

def orb_i2 =
  fn b1_v29496 b2_v29497 ⇒
    match b1_v29496 with
    | true ⇒ true | false ⇒ b2_v29497
    end

def notb_i3 =
  fn b_v29498 ⇒ match b_v29498 with
                  | true ⇒ false | false ⇒ true
                  end

def lten_i4 =
  fn x_v29499 y_v29500 ⇒
    match x_v29499 with
    | O ⇒ true
    | S x_v29501 ⇒
      match y_v29500 with
      | O ⇒ false | S y_v29502 ⇒ ((lten_i4 x_v29501) y_v29502)
      end
    end

def gten_i5 =
  fn x_v29503 y_v29504 ⇒
    match x_v29503 with
    | O ⇒ match y_v29504 with
            | O ⇒ true | S __v29505 ⇒ false
            end
    | S x_v29506 ⇒
      match y_v29504 with
      | O ⇒ true | S y_v29507 ⇒ ((gten_i5 x_v29506) y_v29507)
      end
    end

def ltn_i6 =
  fn x_v29508 y_v29509 ⇒
    match x_v29508 with
    | O ⇒ match y_v29509 with
            | O ⇒ false | S y_v29510 ⇒ true
            end
    | S x_v29511 ⇒
      match y_v29509 with
      | O ⇒ false | S y_v29512 ⇒ ((ltn_i6 x_v29511) y_v29512)
      end
    end

def gtn_i7 =
  fn x_v29513 y_v29514 ⇒
    match x_v29513 with
    | O ⇒ false
    | S x_v29515 ⇒
      match y_v29514 with
      | O ⇒ true | S y_v29516 ⇒ ((gtn_i7 x_v29515) y_v29516)
      end
    end

def eqn_i8 =
  fn x_v29517 y_v29518 ⇒
    match x_v29517 with
    | O ⇒ match y_v29518 with
            | O ⇒ true | S __v29519 ⇒ false
            end
    | S x_v29520 ⇒
      match y_v29518 with
      | O ⇒ false | S y_v29521 ⇒ ((eqn_i8 x_v29520) y_v29521)
      end
    end

def pred_i9 =
  fn x_v29522 ⇒ match x_v29522 with
                  | O ⇒ 0 | S x_v29523 ⇒ x_v29523
                  end

def addn_i10 =
  fn x_v29524 y_v29525 ⇒
    match x_v29524 with
    | O ⇒ y_v29525 | S x_v29526 ⇒ ((addn_i10 x_v29526) y_v29525).+1
    end

def subn_i11 =
  fn x_v29527 y_v29528 ⇒
    match y_v29528 with
    | O ⇒ x_v29527
    | S y_v29529 ⇒ ((subn_i11 (pred_i9 x_v29527)) y_v29529)
    end

def muln_i12 =
  fn x_v29530 y_v29531 ⇒
    match x_v29530 with
    | O ⇒ 0
    | S x_v29532 ⇒ ((addn_i10 y_v29531) ((muln_i12 x_v29532) y_v29531))
    end

def divn_i13 =
  fn x_v29533 y_v29534 ⇒
    match ((ltn_i6 x_v29533) y_v29534) with
    | true ⇒ 0
    | false ⇒ ((divn_i13 ((subn_i11 x_v29533) y_v29534)) y_v29534).+1
    end

def modn_i14 =
  fn x_v29535 y_v29536 ⇒
    ((subn_i11 x_v29535)
      ((muln_i12 ((divn_i13 x_v29535) y_v29536)) y_v29536))

data char_d1 =
| Char_c1 of size(1)

data string_d2 =
| EmptyString_c2 of size(0) | String_c3 of size(2)

def cats_i15 =
  fn s1_v29537 s2_v29538 ⇒
    match s1_v29537 with
    | EmptyString_c2  ⇒ s2_v29538
    | String_c3 c_v29539 s1_v29540 ⇒
      (String_c3 c_v29539 ((cats_i15 s1_v29540) s2_v29538))
    end

def strlen_i16 =
  fn s_v29541 ⇒
    match s_v29541 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v29542 s_v29543 ⇒ (strlen_i16 s_v29543).+1
    end

data listUU_d7 =
| nilUU_c12 of size(0) | consUU_c13 of size(2)

data listUL_d6 =
| nilUL_c10 of size(0) | consUL_c11 of size(2)

data listLU_d5 =
| nilLU_c8 of size(0)

data listLL_d4 =
| nilLL_c6 of size(0) | consLL_c7 of size(2)

def lenUU_i44 =
  fn A_v29544 xs_v29545 ⇒
    match xs_v29545 with
    | nilUU_c12  ⇒ (0, nilUU_c12)
    | consUU_c13 x_v29546 xs_v29547 ⇒
      match ((lenUU_i44 NULL) xs_v29547) with
      | (n_v29548, xs_v29549) ⇒
        (n_v29548.+1, (consUU_c13 x_v29546 xs_v29549))
      end
    end

def lenUL_i43 =
  fn A_v29550 xs_v29551 ⇒
    match xs_v29551 with
    | nilUL_c10  ⇒ (0, nilUL_c10)
    | consUL_c11 x_v29552 xs_v29553 ⇒
      match ((lenUL_i43 NULL) xs_v29553) with
      | (n_v29554, xs_v29555) ⇒
        (n_v29554.+1, (consUL_c11 x_v29552 xs_v29555))
      end
    end

def lenLL_i41 =
  fn A_v29556 xs_v29557 ⇒
    match xs_v29557 with
    | nilLL_c6  ⇒ (0, nilLL_c6)
    | consLL_c7 x_v29558 xs_v29559 ⇒
      match ((lenLL_i41 NULL) xs_v29559) with
      | (n_v29560, xs_v29561) ⇒
        (n_v29560.+1, (consLL_c7 x_v29558 xs_v29561))
      end
    end

def appendUU_i48 =
  fn A_v29562 xs_v29563 ⇒
    ln ys_v29564 ⇒
      match xs_v29563 with
      | nilUU_c12  ⇒ ys_v29564
      | consUU_c13 x_v29565 xs_v29566 ⇒
        (consUU_c13 x_v29565 (((appendUU_i48 NULL) xs_v29566) ys_v29564))
      end

def appendUL_i47 =
  fn A_v29567 xs_v29568 ⇒
    ln ys_v29569 ⇒
      match xs_v29568 with
      | nilUL_c10  ⇒ ys_v29569
      | consUL_c11 x_v29570 xs_v29571 ⇒
        (consUL_c11 x_v29570 (((appendUL_i47 NULL) xs_v29571) ys_v29569))
      end

def appendLL_i45 =
  fn A_v29572 xs_v29573 ⇒
    ln ys_v29574 ⇒
      match xs_v29573 with
      | nilLL_c6  ⇒ ys_v29574
      | consLL_c7 x_v29575 xs_v29576 ⇒
        (consLL_c7 x_v29575 (((appendLL_i45 NULL) xs_v29576) ys_v29574))
      end

def readline_i25 =
  fn __v29577 ⇒
    let ch_v29578 ⇐ open stdin in
    let ch_v29579 ⇐ (send ch_v29578 true) in
    let __v29580 ⇐ recv ch_v29579 in
    match __v29580 with
    | (s_v29581, ch_v29582) ⇒
      let ch_v29583 ⇐ (send ch_v29582 false) in
      let __v29584 ⇐ close⇑ ch_v29583 in return s_v29581
    end

def print_i26 =
  fn s_v29585 ⇒
    let ch_v29586 ⇐ open stdout in
    let ch_v29587 ⇐ (send ch_v29586 true) in
    let ch_v29588 ⇐ (send ch_v29587 s_v29585) in
    let ch_v29589 ⇐ (send ch_v29588 false) in close⇑ ch_v29589

def prerr_i27 =
  fn s_v29590 ⇒
    let ch_v29591 ⇐ open stderr in
    let ch_v29592 ⇐ (send ch_v29591 true) in
    let ch_v29593 ⇐ (send ch_v29592 s_v29590) in
    let ch_v29594 ⇐ (send ch_v29593 false) in close⇑ ch_v29594

def digits_i28 =
  (consUU_c13
    "0"
    (consUU_c13
      "1"
      (consUU_c13
        "2"
        (consUU_c13
          "3"
          (consUU_c13
            "4"
            (consUU_c13
              "5"
              (consUU_c13
                "6"
                (consUU_c13 "7" (consUU_c13 "8" (consUU_c13 "9" nilUU_c12))))))))))

def get_at_i29 =
  fn A_v29595 n_v29596 xs_v29597 a_v29598 ⇒
    match n_v29596 with
    | O ⇒
      match xs_v29597 with
      | nilUU_c12  ⇒ a_v29598 | consUU_c13 x_v29599 __v29600 ⇒ x_v29599
      end
    | S n_v29601 ⇒
      match xs_v29597 with
      | nilUU_c12  ⇒ a_v29598
      | consUU_c13 __v29602 xs_v29603 ⇒
        ((((get_at_i29 NULL) n_v29601) xs_v29603) a_v29598)
      end
    end

def string_of_digit_i30 =
  fn n_v29604 ⇒ ((((get_at_i29 NULL) n_v29604) digits_i28) EmptyString_c2)

def string_of_nat_i31 =
  fn n_v29605 ⇒
    let s_v29606 = (string_of_digit_i30 ((modn_i14 n_v29605) 10)) in
    let n_v29607 = ((divn_i13 n_v29605) 10) in
    match ((ltn_i6 0) n_v29607) with
    | true ⇒ ((cats_i15 (string_of_nat_i31 n_v29607)) s_v29606)
    | false ⇒ s_v29606
    end

def powm_i33 =
  fn a_v29608 b_v29609 m_v29610 ⇒
    match b_v29609 with
    | O ⇒ 1
    | S b_v29611 ⇒
      ((modn_i14
         ((muln_i12 a_v29608) (((powm_i33 a_v29608) b_v29611) m_v29610)))
        m_v29610)
    end

def client_i38 =
  fn ch_v29612 ⇒
    let P0_v29613 = 123 in
    let __v29614 ⇐ {recv} ch_v29612 in
    match __v29614 with
    | (x_v29615, ch_v29616) ⇒
      let __v29617 ⇐ {recv} ch_v29616 in
      match __v29617 with
      | (y_v29618, ch_v29619) ⇒
        let __v29620 ⇐ recv ch_v29619 in
        match __v29620 with
        | (n_v29621, ch_v29622) ⇒
          let __v29623 ⇐ {recv} ch_v29622 in
          match __v29623 with
          | (pf1_v29624, ch_v29625) ⇒
            let __v29626 ⇐ {recv} ch_v29625 in
            match __v29626 with
            | (tot_v29627, ch_v29628) ⇒
              let __v29629 ⇐ {recv} ch_v29628 in
              match __v29629 with
              | (pf2_v29630, ch_v29631) ⇒
                let __v29632 ⇐ recv ch_v29631 in
                match __v29632 with
                | (e_v29633, ch_v29634) ⇒
                  let __v29635 ⇐ {recv} ch_v29634 in
                  match __v29635 with
                  | (pf3_v29636, ch_v29637) ⇒
                    let __v29638 ⇐ {recv} ch_v29637 in
                    match __v29638 with
                    | (pf4_v29639, ch_v29640) ⇒
                      let __v29641 ⇐ {recv} ch_v29640 in
                      match __v29641 with
                      | (pf5_v29642, ch_v29643) ⇒
                        let __v29644 ⇐ {recv} ch_v29643 in
                        match __v29644 with
                        | (d_v29645, ch_v29646) ⇒
                          let __v29647 ⇐ {recv} ch_v29646 in
                          match __v29647 with
                          | (pf6_v29648, ch_v29649) ⇒
                            let ch_v29650 ⇐ ({send} ch_v29649 NULL) in
                            let ch_v29651 ⇐
                              (send ch_v29650
                                (((powm_i33 P0_v29613) e_v29633) n_v29621))
                            in
                            let ch_v29652 ⇐ ({send} ch_v29651 NULL) in
                            let __v29653 ⇐ {recv} ch_v29652 in
                            match __v29653 with
                            | (P1_v29654, ch_v29655) ⇒
                              let __v29656 ⇐ {recv} ch_v29655 in
                              match __v29656 with
                              | (pf7_v29657, ch_v29658) ⇒
                                close⇓ ch_v29658
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def server_i39 =
  fn ch_v29659 ⇒
    let x_v29660 = 7 in
    let y_v29661 = 19 in
    let n_v29662 = ((muln_i12 x_v29660) y_v29661) in
    let tot_v29663 =
      ((muln_i12 ((subn_i11 x_v29660) 1)) ((subn_i11 y_v29661) 1))
    in
    let e_v29664 = 5 in
    let d_v29665 = 65 in
    let ch_v29666 ⇐ ({send} ch_v29659 NULL) in
    let ch_v29667 ⇐ ({send} ch_v29666 NULL) in
    let ch_v29668 ⇐ (send ch_v29667 n_v29662) in
    let ch_v29669 ⇐ ({send} ch_v29668 NULL) in
    let ch_v29670 ⇐ ({send} ch_v29669 NULL) in
    let ch_v29671 ⇐ ({send} ch_v29670 NULL) in
    let ch_v29672 ⇐ (send ch_v29671 e_v29664) in
    let ch_v29673 ⇐ ({send} ch_v29672 NULL) in
    let ch_v29674 ⇐ ({send} ch_v29673 NULL) in
    let ch_v29675 ⇐ ({send} ch_v29674 NULL) in
    let ch_v29676 ⇐ ({send} ch_v29675 NULL) in
    let ch_v29677 ⇐ ({send} ch_v29676 NULL) in
    let __v29678 ⇐ {recv} ch_v29677 in
    match __v29678 with
    | (P0_v29679, ch_v29680) ⇒
      let __v29681 ⇐ recv ch_v29680 in
      match __v29681 with
      | (C_v29682, ch_v29683) ⇒
        let __v29684 ⇐ {recv} ch_v29683 in
        match __v29684 with
        | (pf_v29685, ch_v29686) ⇒
          let P1_v29687 = (((powm_i33 C_v29682) d_v29665) n_v29662) in
          let ch_v29688 ⇐ ({send} ch_v29686 NULL) in
          let ch_v29689 ⇐ ({send} ch_v29688 NULL) in
          let __v29690 ⇐ close⇑ ch_v29689 in
          (print_i26 ((cats_i15 (string_of_nat_i31 P1_v29687)) "\n"))
        end
      end
    end

main =
  let c_v29691 ⇐ fork c_v29692 in (server_i39 c_v29692) in
  let c0_v29693 ⇐
    fork c0_v29694 in
      let __v29695 ⇐ recv c0_v29694 in
      match __v29695 with
      | (c_v29696, c0_v29697) ⇒
        let __v29698 ⇐ close⇑ c0_v29697 in (client_i38 c_v29696)
      end
  in
  let c0_v29699 ⇐ (send c0_v29693 c_v29691) in
  let __v29700 ⇐ close⇓ c0_v29699 in sleep 1

trans12 success--------------------------

fun andb_i1(b1_v30037, b2_v30038) = if b1_v30037 then
                                      b2_v30038
                                    else
                                      0

val andbclo_i49 = fn b1_v30039 b2_v30040 ⇒ andb_i1(b1_v30039, b2_v30040)

fun orb_i2(b1_v30041, b2_v30042) = if b1_v30041 then
                                     1
                                   else
                                     b2_v30042

val orbclo_i50 = fn b1_v30043 b2_v30044 ⇒ orb_i2(b1_v30043, b2_v30044)

fun notb_i3(b_v30045) = if b_v30045 then
                          0
                        else
                          1

val notbclo_i51 = fn b_v30046 ⇒ notb_i3(b_v30046)

fun lten_i4(x_v30047, y_v30048) =
  let __v30049 = x_v30047 in
  if __v30049 then
    let x_v30050 = __v30049.-1 in
    let __v30051 = y_v30048 in
    if __v30051 then
      let y_v30052 = __v30051.-1 in lten_i4(x_v30050, y_v30052)
    else
      0
  else
    1

val ltenclo_i52 = fn x_v30053 y_v30054 ⇒ lten_i4(x_v30053, y_v30054)

fun gten_i5(x_v30055, y_v30056) =
  let __v30057 = x_v30055 in
  if __v30057 then
    let x_v30058 = __v30057.-1 in
    let __v30059 = y_v30056 in
    if __v30059 then
      let y_v30060 = __v30059.-1 in gten_i5(x_v30058, y_v30060)
    else
      1
  else
    let __v30061 = y_v30056 in
    if __v30061 then
      let __v30062 = __v30061.-1 in 0
    else
      1

val gtenclo_i53 = fn x_v30063 y_v30064 ⇒ gten_i5(x_v30063, y_v30064)

fun ltn_i6(x_v30065, y_v30066) =
  let __v30067 = x_v30065 in
  if __v30067 then
    let x_v30068 = __v30067.-1 in
    let __v30069 = y_v30066 in
    if __v30069 then
      let y_v30070 = __v30069.-1 in ltn_i6(x_v30068, y_v30070)
    else
      0
  else
    let __v30071 = y_v30066 in
    if __v30071 then
      let y_v30072 = __v30071.-1 in 1
    else
      0

val ltnclo_i54 = fn x_v30073 y_v30074 ⇒ ltn_i6(x_v30073, y_v30074)

fun gtn_i7(x_v30075, y_v30076) =
  let __v30077 = x_v30075 in
  if __v30077 then
    let x_v30078 = __v30077.-1 in
    let __v30079 = y_v30076 in
    if __v30079 then
      let y_v30080 = __v30079.-1 in gtn_i7(x_v30078, y_v30080)
    else
      1
  else
    0

val gtnclo_i55 = fn x_v30081 y_v30082 ⇒ gtn_i7(x_v30081, y_v30082)

fun eqn_i8(x_v30083, y_v30084) =
  let __v30085 = x_v30083 in
  if __v30085 then
    let x_v30086 = __v30085.-1 in
    let __v30087 = y_v30084 in
    if __v30087 then
      let y_v30088 = __v30087.-1 in eqn_i8(x_v30086, y_v30088)
    else
      0
  else
    let __v30089 = y_v30084 in
    if __v30089 then
      let __v30090 = __v30089.-1 in 0
    else
      1

val eqnclo_i56 = fn x_v30091 y_v30092 ⇒ eqn_i8(x_v30091, y_v30092)

fun pred_i9(x_v30093) =
  let __v30094 = x_v30093 in
  if __v30094 then
    let x_v30095 = __v30094.-1 in x_v30095
  else
    0

val predclo_i57 = fn x_v30096 ⇒ pred_i9(x_v30096)

fun addn_i10(x_v30097, y_v30098) =
  let __v30099 = x_v30097 in
  if __v30099 then
    let x_v30100 = __v30099.-1 in addn_i10(x_v30100, y_v30098).+1
  else
    y_v30098

val addnclo_i58 = fn x_v30101 y_v30102 ⇒ addn_i10(x_v30101, y_v30102)

fun subn_i11(x_v30103, y_v30104) =
  let __v30105 = y_v30104 in
  if __v30105 then
    let y_v30106 = __v30105.-1 in subn_i11(pred_i9(x_v30103), y_v30106)
  else
    x_v30103

val subnclo_i59 = fn x_v30107 y_v30108 ⇒ subn_i11(x_v30107, y_v30108)

fun muln_i12(x_v30109, y_v30110) =
  let __v30111 = x_v30109 in
  if __v30111 then
    let x_v30112 = __v30111.-1 in
    addn_i10(y_v30110, muln_i12(x_v30112, y_v30110))
  else
    0

val mulnclo_i60 = fn x_v30113 y_v30114 ⇒ muln_i12(x_v30113, y_v30114)

fun divn_i13(x_v30115, y_v30116) =
  if ltn_i6(x_v30115, y_v30116) then
    0
  else
    divn_i13(subn_i11(x_v30115, y_v30116), y_v30116).+1

val divnclo_i61 = fn x_v30117 y_v30118 ⇒ divn_i13(x_v30117, y_v30118)

fun modn_i14(x_v30119, y_v30120) =
  subn_i11(x_v30119, muln_i12(divn_i13(x_v30119, y_v30120), y_v30120))

val modnclo_i62 = fn x_v30121 y_v30122 ⇒ modn_i14(x_v30121, y_v30122)

fun cats_i15(s1_v30123, s2_v30124) =
  match s1_v30123 with
  | EmptyString_c2  ⇒ s2_v30124
  | String_c3 c_v30125 s1_v30126 ⇒
    (String_c3 c_v30125 cats_i15(s1_v30126, s2_v30124))
  end

val catsclo_i63 = fn s1_v30127 s2_v30128 ⇒ cats_i15(s1_v30127, s2_v30128)

fun strlen_i16(s_v30129) =
  match s_v30129 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v30130 s_v30131 ⇒ strlen_i16(s_v30131).+1
  end

val strlenclo_i64 = fn s_v30132 ⇒ strlen_i16(s_v30132)

fun lenUU_i44(A_v30133, xs_v30134) =
  match xs_v30134 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v30135 xs_v30136 ⇒
    match lenUU_i44(NULL, xs_v30136) with
    | (n_v30137, xs_v30138) ⇒
      (n_v30137.+1, (consUU_c13 x_v30135 xs_v30138))
    end
  end

val lenUUclo_i65 = fn A_v30139 xs_v30140 ⇒ lenUU_i44(A_v30139, xs_v30140)

fun lenUL_i43(A_v30141, xs_v30142) =
  match xs_v30142 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v30143 xs_v30144 ⇒
    match lenUL_i43(NULL, xs_v30144) with
    | (n_v30145, xs_v30146) ⇒
      (n_v30145.+1, (consUL_c11 x_v30143 xs_v30146))
    end
  end

val lenULclo_i66 = fn A_v30147 xs_v30148 ⇒ lenUL_i43(A_v30147, xs_v30148)

fun lenLL_i41(A_v30149, xs_v30150) =
  match xs_v30150 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v30151 xs_v30152 ⇒
    match lenLL_i41(NULL, xs_v30152) with
    | (n_v30153, xs_v30154) ⇒ (n_v30153.+1, (consLL_c7 x_v30151 xs_v30154))
    end
  end

val lenLLclo_i67 = fn A_v30155 xs_v30156 ⇒ lenLL_i41(A_v30155, xs_v30156)

fun appendUU_i48(A_v30157, xs_v30158, ys_v30159) =
  match xs_v30158 with
  | nilUU_c12  ⇒ ys_v30159
  | consUU_c13 x_v30160 xs_v30161 ⇒
    (consUU_c13 x_v30160 appendUU_i48(NULL, xs_v30161, ys_v30159))
  end

val appendUUclo_i68 =
  fn A_v30162 xs_v30163 ⇒
    ln ys_v30164 ⇒ appendUU_i48(A_v30162, xs_v30163, ys_v30164)

fun appendUL_i47(A_v30165, xs_v30166, ys_v30167) =
  match xs_v30166 with
  | nilUL_c10  ⇒ ys_v30167
  | consUL_c11 x_v30168 xs_v30169 ⇒
    (consUL_c11 x_v30168 appendUL_i47(NULL, xs_v30169, ys_v30167))
  end

val appendULclo_i69 =
  fn A_v30170 xs_v30171 ⇒
    ln ys_v30172 ⇒ appendUL_i47(A_v30170, xs_v30171, ys_v30172)

fun appendLL_i45(A_v30173, xs_v30174, ys_v30175) =
  match xs_v30174 with
  | nilLL_c6  ⇒ ys_v30175
  | consLL_c7 x_v30176 xs_v30177 ⇒
    (consLL_c7 x_v30176 appendLL_i45(NULL, xs_v30177, ys_v30175))
  end

val appendLLclo_i70 =
  fn A_v30178 xs_v30179 ⇒
    ln ys_v30180 ⇒ appendLL_i45(A_v30178, xs_v30179, ys_v30180)

fun readline_i25(__v30181) =
  ln __v30182 ⇒
    let ch_v30183 = (ln __v30184 ⇒ open stdin) NULL in
    let ch_v30185 =
      ((fn x_v30186 ⇒ ln __v30187 ⇒ send(ch_v30183, x_v30186)) 1) NULL
    in
    let __v30188 = (ln __v30189 ⇒ recv(ch_v30185)) NULL in
    (match __v30188 with
     | (s_v30190, ch_v30191) ⇒
       ln __v30192 ⇒
         let ch_v30193 =
           ((fn x_v30194 ⇒ ln __v30195 ⇒ send(ch_v30191, x_v30194)) 0)
             NULL
         in
         let __v30196 =
           (ln __v30197 ⇒ let __v30198 = ch_v30193 in NULL) NULL
         in (ln __v30199 ⇒ s_v30190) NULL
     end) NULL

val readlineclo_i71 = fn __v30200 ⇒ readline_i25(__v30200)

fun print_i26(s_v30201) =
  ln __v30202 ⇒
    let ch_v30203 = (ln __v30204 ⇒ open stdout) NULL in
    let ch_v30205 =
      ((fn x_v30206 ⇒ ln __v30207 ⇒ send(ch_v30203, x_v30206)) 1) NULL
    in
    let ch_v30208 =
      ((fn x_v30209 ⇒ ln __v30210 ⇒ send(ch_v30205, x_v30209)) s_v30201)
        NULL
    in
    let ch_v30211 =
      ((fn x_v30212 ⇒ ln __v30213 ⇒ send(ch_v30208, x_v30212)) 0) NULL
    in (ln __v30214 ⇒ let __v30215 = ch_v30211 in NULL) NULL

val printclo_i72 = fn s_v30216 ⇒ print_i26(s_v30216)

fun prerr_i27(s_v30217) =
  ln __v30218 ⇒
    let ch_v30219 = (ln __v30220 ⇒ open stderr) NULL in
    let ch_v30221 =
      ((fn x_v30222 ⇒ ln __v30223 ⇒ send(ch_v30219, x_v30222)) 1) NULL
    in
    let ch_v30224 =
      ((fn x_v30225 ⇒ ln __v30226 ⇒ send(ch_v30221, x_v30225)) s_v30217)
        NULL
    in
    let ch_v30227 =
      ((fn x_v30228 ⇒ ln __v30229 ⇒ send(ch_v30224, x_v30228)) 0) NULL
    in (ln __v30230 ⇒ let __v30231 = ch_v30227 in NULL) NULL

val prerrclo_i73 = fn s_v30232 ⇒ prerr_i27(s_v30232)

val digits_i28 =
  (consUU_c13
    "0"
    (consUU_c13
      "1"
      (consUU_c13
        "2"
        (consUU_c13
          "3"
          (consUU_c13
            "4"
            (consUU_c13
              "5"
              (consUU_c13
                "6"
                (consUU_c13 "7" (consUU_c13 "8" (consUU_c13 "9" nilUU_c12))))))))))

fun get_at_i29(A_v30233, n_v30234, xs_v30235, a_v30236) =
  let __v30237 = n_v30234 in
  if __v30237 then
    let n_v30238 = __v30237.-1 in
    match xs_v30235 with
    | nilUU_c12  ⇒ a_v30236
    | consUU_c13 __v30239 xs_v30240 ⇒
      get_at_i29(NULL, n_v30238, xs_v30240, a_v30236)
    end
  else
    match xs_v30235 with
    | nilUU_c12  ⇒ a_v30236 | consUU_c13 x_v30241 __v30242 ⇒ x_v30241
    end

val get_atclo_i74 =
  fn A_v30243 n_v30244 xs_v30245 a_v30246 ⇒
    get_at_i29(A_v30243, n_v30244, xs_v30245, a_v30246)

fun string_of_digit_i30(n_v30247) =
  get_at_i29(NULL, n_v30247, digits_i28, EmptyString_c2)

val string_of_digitclo_i75 = fn n_v30248 ⇒ string_of_digit_i30(n_v30248)

fun string_of_nat_i31(n_v30249) =
  let s_v30250 = string_of_digit_i30(modn_i14(n_v30249, 10)) in
  let n_v30251 = divn_i13(n_v30249, 10) in
  if ltn_i6(0, n_v30251) then
    cats_i15(string_of_nat_i31(n_v30251), s_v30250)
  else
    s_v30250

val string_of_natclo_i76 = fn n_v30252 ⇒ string_of_nat_i31(n_v30252)

fun powm_i33(a_v30253, b_v30254, m_v30255) =
  let __v30256 = b_v30254 in
  if __v30256 then
    let b_v30257 = __v30256.-1 in
    modn_i14(muln_i12(a_v30253, powm_i33(a_v30253, b_v30257, m_v30255)),
             m_v30255)
  else
    1

val powmclo_i77 =
  fn a_v30258 b_v30259 m_v30260 ⇒ powm_i33(a_v30258, b_v30259, m_v30260)

fun client_i38(ch_v30261) =
  let P0_v30262 = 123 in
  ln __v30263 ⇒
    let __v30264 = (ln __v30265 ⇒ (NULL, ch_v30261)) NULL in
    (match __v30264 with
     | (x_v30266, ch_v30267) ⇒
       ln __v30268 ⇒
         let __v30269 = (ln __v30270 ⇒ (NULL, ch_v30267)) NULL in
         (match __v30269 with
          | (y_v30271, ch_v30272) ⇒
            ln __v30273 ⇒
              let __v30274 = (ln __v30275 ⇒ recv(ch_v30272)) NULL in
              (match __v30274 with
               | (n_v30276, ch_v30277) ⇒
                 ln __v30278 ⇒
                   let __v30279 = (ln __v30280 ⇒ (NULL, ch_v30277)) NULL in
                   (match __v30279 with
                    | (pf1_v30281, ch_v30282) ⇒
                      ln __v30283 ⇒
                        let __v30284 =
                          (ln __v30285 ⇒ (NULL, ch_v30282)) NULL
                        in
                        (match __v30284 with
                         | (tot_v30286, ch_v30287) ⇒
                           ln __v30288 ⇒
                             let __v30289 =
                               (ln __v30290 ⇒ (NULL, ch_v30287)) NULL
                             in
                             (match __v30289 with
                              | (pf2_v30291, ch_v30292) ⇒
                                ln __v30293 ⇒
                                  let __v30294 =
                                    (ln __v30295 ⇒ recv(ch_v30292)) NULL
                                  in
                                  (match __v30294 with
                                   | (e_v30296, ch_v30297) ⇒
                                     ln __v30298 ⇒
                                       let __v30299 =
                                         (ln __v30300 ⇒ (NULL, ch_v30297))
                                           NULL
                                       in
                                       (match __v30299 with
                                        | (pf3_v30301, ch_v30302) ⇒
                                          ln __v30303 ⇒
                                            let __v30304 =
                                              (ln __v30305 ⇒
                                                 (NULL, ch_v30302))
                                                NULL
                                            in
                                            (match __v30304 with
                                             | (pf4_v30306, ch_v30307) ⇒
                                               ln __v30308 ⇒
                                                 let __v30309 =
                                                   (ln __v30310 ⇒
                                                      (NULL, ch_v30307))
                                                     NULL
                                                 in
                                                 (match __v30309 with
                                                  | (pf5_v30311, ch_v30312) ⇒
                                                    ln __v30313 ⇒
                                                      let __v30314 =
                                                        (ln __v30315 ⇒
                                                           (NULL, ch_v30312))
                                                          NULL
                                                      in
                                                      (match __v30314 with
                                                       | (d_v30316, ch_v30317) ⇒
                                                         ln __v30318 ⇒
                                                           let __v30319 =
                                                             (ln __v30320 ⇒
                                                                (NULL, ch_v30317))
                                                               NULL
                                                           in
                                                           (match __v30319 with
                                                            | (pf6_v30321, ch_v30322) ⇒
                                                              ln __v30323 ⇒
                                                                let ch_v30324 =
                                                                  ((fn 
                                                                    x_v30325 ⇒
                                                                    ln 
                                                                    __v30326 ⇒
                                                                    ch_v30322)
                                                                    NULL)
                                                                    NULL
                                                                in
                                                                let ch_v30327 =
                                                                  ((fn 
                                                                    x_v30328 ⇒
                                                                    ln 
                                                                    __v30329 ⇒
                                                                    send(ch_v30324, x_v30328))
                                                                    powm_i33(
                                                                    P0_v30262,
                                                                    e_v30296,
                                                                    n_v30276))
                                                                    NULL
                                                                in
                                                                let ch_v30330 =
                                                                  ((fn 
                                                                    x_v30331 ⇒
                                                                    ln 
                                                                    __v30332 ⇒
                                                                    ch_v30327)
                                                                    NULL)
                                                                    NULL
                                                                in
                                                                let __v30333 =
                                                                  (ln 
                                                                   __v30334 ⇒
                                                                    (NULL, ch_v30330))
                                                                    NULL
                                                                in
                                                                (match __v30333 with
                                                                 | (P1_v30335, ch_v30336) ⇒
                                                                   ln 
                                                                   __v30337 ⇒
                                                                    let __v30338 =
                                                                    (
                                                                    ln 
                                                                    __v30339 ⇒
                                                                    (NULL, ch_v30336))
                                                                    NULL in
                                                                    (
                                                                    match __v30338 with
                                                                    | 
                                                                    (pf7_v30340, ch_v30341) ⇒
                                                                    ln 
                                                                    __v30342 ⇒
                                                                    close(ch_v30341)
                                                                    end) 
                                                                    NULL
                                                                 end) 
                                                                NULL
                                                            end) NULL
                                                       end) NULL
                                                  end) NULL
                                             end) NULL
                                        end) NULL
                                   end) NULL
                              end) NULL
                         end) NULL
                    end) NULL
               end) NULL
          end) NULL
     end) NULL

val clientclo_i78 = fn ch_v30343 ⇒ client_i38(ch_v30343)

fun server_i39(ch_v30344) =
  let x_v30345 = 7 in
  let y_v30346 = 19 in
  let n_v30347 = muln_i12(x_v30345, y_v30346) in
  let tot_v30348 = muln_i12(subn_i11(x_v30345, 1), subn_i11(y_v30346, 1)) in
  let e_v30349 = 5 in
  let d_v30350 = 65 in
  ln __v30351 ⇒
    let ch_v30352 = ((fn x_v30353 ⇒ ln __v30354 ⇒ ch_v30344) NULL) NULL
    in
    let ch_v30355 = ((fn x_v30356 ⇒ ln __v30357 ⇒ ch_v30352) NULL) NULL
    in
    let ch_v30358 =
      ((fn x_v30359 ⇒ ln __v30360 ⇒ send(ch_v30355, x_v30359)) n_v30347)
        NULL
    in
    let ch_v30361 = ((fn x_v30362 ⇒ ln __v30363 ⇒ ch_v30358) NULL) NULL
    in
    let ch_v30364 = ((fn x_v30365 ⇒ ln __v30366 ⇒ ch_v30361) NULL) NULL
    in
    let ch_v30367 = ((fn x_v30368 ⇒ ln __v30369 ⇒ ch_v30364) NULL) NULL
    in
    let ch_v30370 =
      ((fn x_v30371 ⇒ ln __v30372 ⇒ send(ch_v30367, x_v30371)) e_v30349)
        NULL
    in
    let ch_v30373 = ((fn x_v30374 ⇒ ln __v30375 ⇒ ch_v30370) NULL) NULL
    in
    let ch_v30376 = ((fn x_v30377 ⇒ ln __v30378 ⇒ ch_v30373) NULL) NULL
    in
    let ch_v30379 = ((fn x_v30380 ⇒ ln __v30381 ⇒ ch_v30376) NULL) NULL
    in
    let ch_v30382 = ((fn x_v30383 ⇒ ln __v30384 ⇒ ch_v30379) NULL) NULL
    in
    let ch_v30385 = ((fn x_v30386 ⇒ ln __v30387 ⇒ ch_v30382) NULL) NULL
    in
    let __v30388 = (ln __v30389 ⇒ (NULL, ch_v30385)) NULL in
    (match __v30388 with
     | (P0_v30390, ch_v30391) ⇒
       ln __v30392 ⇒
         let __v30393 = (ln __v30394 ⇒ recv(ch_v30391)) NULL in
         (match __v30393 with
          | (C_v30395, ch_v30396) ⇒
            ln __v30397 ⇒
              let __v30398 = (ln __v30399 ⇒ (NULL, ch_v30396)) NULL in
              (match __v30398 with
               | (pf_v30400, ch_v30401) ⇒
                 let P1_v30402 = powm_i33(C_v30395, d_v30350, n_v30347) in
                 ln __v30403 ⇒
                   let ch_v30404 =
                     ((fn x_v30405 ⇒ ln __v30406 ⇒ ch_v30401) NULL) NULL
                   in
                   let ch_v30407 =
                     ((fn x_v30408 ⇒ ln __v30409 ⇒ ch_v30404) NULL) NULL
                   in
                   let __v30410 =
                     (ln __v30411 ⇒ let __v30412 = ch_v30407 in NULL) NULL
                   in
                   (print_i26(cats_i15(string_of_nat_i31(P1_v30402), "\n")))
                     NULL
               end) NULL
          end) NULL
     end) NULL

val serverclo_i79 = fn ch_v30413 ⇒ server_i39(ch_v30413)

main =
  (ln __v30414 ⇒
     let c_v30415 =
       (ln __v30416 ⇒ fork c_v30417 in (server_i39(c_v30417)) NULL) NULL
     in
     let c0_v30418 =
       (ln __v30419 ⇒
          fork c0_v30420 in
            (ln __v30421 ⇒
               let __v30422 = (ln __v30423 ⇒ recv(c0_v30420)) NULL in
               (match __v30422 with
                | (c_v30424, c0_v30425) ⇒
                  ln __v30426 ⇒
                    let __v30427 =
                      (ln __v30428 ⇒ let __v30429 = c0_v30425 in NULL) NULL
                    in (client_i38(c_v30424)) NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v30430 =
       ((ln x_v30431 __v30432 ⇒ send(c0_v30418, x_v30431)) c_v30415) NULL
     in
     let __v30433 = (ln __v30434 ⇒ close(c0_v30430)) NULL in
     (ln __v30435 ⇒ sleep(1)) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v32046, b2_v32047) = if b1_v32046 then
                                      b2_v32047
                                    else
                                      0

val andbclo_i49 = fn b1_v32048 b2_v32049 ⇒ andb_i1(b1_v32048, b2_v32049)

fun orb_i2(b1_v32050, b2_v32051) = if b1_v32050 then
                                     1
                                   else
                                     b2_v32051

val orbclo_i50 = fn b1_v32052 b2_v32053 ⇒ orb_i2(b1_v32052, b2_v32053)

fun notb_i3(b_v32054) = if b_v32054 then
                          0
                        else
                          1

val notbclo_i51 = fn b_v32055 ⇒ notb_i3(b_v32055)

fun lten_i4(x_v32056, y_v32057) =
  if x_v32056 then
    if y_v32057 then
      lten_i4(x_v32056.-1, y_v32057.-1)
    else
      0
  else
    1

val ltenclo_i52 = fn x_v32058 y_v32059 ⇒ lten_i4(x_v32058, y_v32059)

fun gten_i5(x_v32060, y_v32061) =
  if x_v32060 then
    if y_v32061 then
      gten_i5(x_v32060.-1, y_v32061.-1)
    else
      1
  else
    if y_v32061 then
      0
    else
      1

val gtenclo_i53 = fn x_v32062 y_v32063 ⇒ gten_i5(x_v32062, y_v32063)

fun ltn_i6(x_v32064, y_v32065) =
  if x_v32064 then
    if y_v32065 then
      ltn_i6(x_v32064.-1, y_v32065.-1)
    else
      0
  else
    if y_v32065 then
      1
    else
      0

val ltnclo_i54 = fn x_v32066 y_v32067 ⇒ ltn_i6(x_v32066, y_v32067)

fun gtn_i7(x_v32068, y_v32069) =
  if x_v32068 then
    if y_v32069 then
      gtn_i7(x_v32068.-1, y_v32069.-1)
    else
      1
  else
    0

val gtnclo_i55 = fn x_v32070 y_v32071 ⇒ gtn_i7(x_v32070, y_v32071)

fun eqn_i8(x_v32072, y_v32073) =
  if x_v32072 then
    if y_v32073 then
      eqn_i8(x_v32072.-1, y_v32073.-1)
    else
      0
  else
    if y_v32073 then
      0
    else
      1

val eqnclo_i56 = fn x_v32074 y_v32075 ⇒ eqn_i8(x_v32074, y_v32075)

fun pred_i9(x_v32076) = if x_v32076 then
                          x_v32076.-1
                        else
                          0

val predclo_i57 = fn x_v32077 ⇒ pred_i9(x_v32077)

fun addn_i10(x_v32078, y_v32079) =
  if x_v32078 then
    addn_i10(x_v32078.-1, y_v32079).+1
  else
    y_v32079

val addnclo_i58 = fn x_v32080 y_v32081 ⇒ addn_i10(x_v32080, y_v32081)

fun subn_i11(x_v32082, y_v32083) =
  if y_v32083 then
    subn_i11(pred_i9(x_v32082), y_v32083.-1)
  else
    x_v32082

val subnclo_i59 = fn x_v32084 y_v32085 ⇒ subn_i11(x_v32084, y_v32085)

fun muln_i12(x_v32086, y_v32087) =
  if x_v32086 then
    addn_i10(y_v32087, muln_i12(x_v32086.-1, y_v32087))
  else
    0

val mulnclo_i60 = fn x_v32088 y_v32089 ⇒ muln_i12(x_v32088, y_v32089)

fun divn_i13(x_v32090, y_v32091) =
  if ltn_i6(x_v32090, y_v32091) then
    0
  else
    divn_i13(subn_i11(x_v32090, y_v32091), y_v32091).+1

val divnclo_i61 = fn x_v32092 y_v32093 ⇒ divn_i13(x_v32092, y_v32093)

fun modn_i14(x_v32094, y_v32095) =
  subn_i11(x_v32094, muln_i12(divn_i13(x_v32094, y_v32095), y_v32095))

val modnclo_i62 = fn x_v32096 y_v32097 ⇒ modn_i14(x_v32096, y_v32097)

fun cats_i15(s1_v32098, s2_v32099) =
  match s1_v32098 with
  | EmptyString_c2  ⇒ s2_v32099
  | String_c3 c_v32100 s1_v32101 ⇒
    (String_c3 c_v32100 cats_i15(s1_v32101, s2_v32099))
  end

val catsclo_i63 = fn s1_v32102 s2_v32103 ⇒ cats_i15(s1_v32102, s2_v32103)

fun strlen_i16(s_v32104) =
  match s_v32104 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v32105 s_v32106 ⇒ strlen_i16(s_v32106).+1
  end

val strlenclo_i64 = fn s_v32107 ⇒ strlen_i16(s_v32107)

fun lenUU_i44(A_v32108, xs_v32109) =
  match xs_v32109 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v32110 xs_v32111 ⇒
    match lenUU_i44(NULL, xs_v32111) with
    | (n_v32112, xs_v32113) ⇒
      (n_v32112.+1, (consUU_c13 x_v32110 xs_v32113))
    end
  end

val lenUUclo_i65 = fn A_v32114 xs_v32115 ⇒ lenUU_i44(A_v32114, xs_v32115)

fun lenUL_i43(A_v32116, xs_v32117) =
  match xs_v32117 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v32118 xs_v32119 ⇒
    match lenUL_i43(NULL, xs_v32119) with
    | (n_v32120, xs_v32121) ⇒
      (n_v32120.+1, (consUL_c11 x_v32118 xs_v32121))
    end
  end

val lenULclo_i66 = fn A_v32122 xs_v32123 ⇒ lenUL_i43(A_v32122, xs_v32123)

fun lenLL_i41(A_v32124, xs_v32125) =
  match xs_v32125 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v32126 xs_v32127 ⇒
    match lenLL_i41(NULL, xs_v32127) with
    | (n_v32128, xs_v32129) ⇒ (n_v32128.+1, (consLL_c7 x_v32126 xs_v32129))
    end
  end

val lenLLclo_i67 = fn A_v32130 xs_v32131 ⇒ lenLL_i41(A_v32130, xs_v32131)

fun appendUU_i48(A_v32132, xs_v32133, ys_v32134) =
  match xs_v32133 with
  | nilUU_c12  ⇒ ys_v32134
  | consUU_c13 x_v32135 xs_v32136 ⇒
    (consUU_c13 x_v32135 appendUU_i48(NULL, xs_v32136, ys_v32134))
  end

val appendUUclo_i68 =
  fn A_v32137 xs_v32138 ⇒
    ln ys_v32139 ⇒ appendUU_i48(A_v32137, xs_v32138, ys_v32139)

fun appendUL_i47(A_v32140, xs_v32141, ys_v32142) =
  match xs_v32141 with
  | nilUL_c10  ⇒ ys_v32142
  | consUL_c11 x_v32143 xs_v32144 ⇒
    (consUL_c11 x_v32143 appendUL_i47(NULL, xs_v32144, ys_v32142))
  end

val appendULclo_i69 =
  fn A_v32145 xs_v32146 ⇒
    ln ys_v32147 ⇒ appendUL_i47(A_v32145, xs_v32146, ys_v32147)

fun appendLL_i45(A_v32148, xs_v32149, ys_v32150) =
  match xs_v32149 with
  | nilLL_c6  ⇒ ys_v32150
  | consLL_c7 x_v32151 xs_v32152 ⇒
    (consLL_c7 x_v32151 appendLL_i45(NULL, xs_v32152, ys_v32150))
  end

val appendLLclo_i70 =
  fn A_v32153 xs_v32154 ⇒
    ln ys_v32155 ⇒ appendLL_i45(A_v32153, xs_v32154, ys_v32155)

fun readline_i25(__v32156) =
  ln __v32157 ⇒
    let ch_v32158 = open stdin in
    let ch_v32159 = send(ch_v32158, 1) in
    let __v32160 = recv(ch_v32159) in
    match __v32160 with
    | (s_v32161, ch_v32162) ⇒
      let ch_v32163 = send(ch_v32162, 0) in s_v32161
    end

val readlineclo_i71 = fn __v32164 ⇒ readline_i25(__v32164)

fun print_i26(s_v32165) =
  ln __v32166 ⇒
    let ch_v32167 = open stdout in
    let ch_v32168 = send(ch_v32167, 1) in
    let ch_v32169 = send(ch_v32168, s_v32165) in
    let ch_v32170 = send(ch_v32169, 0) in NULL

val printclo_i72 = fn s_v32171 ⇒ print_i26(s_v32171)

fun prerr_i27(s_v32172) =
  ln __v32173 ⇒
    let ch_v32174 = open stderr in
    let ch_v32175 = send(ch_v32174, 1) in
    let ch_v32176 = send(ch_v32175, s_v32172) in
    let ch_v32177 = send(ch_v32176, 0) in NULL

val prerrclo_i73 = fn s_v32178 ⇒ prerr_i27(s_v32178)

val digits_i28 =
  (consUU_c13
    "0"
    (consUU_c13
      "1"
      (consUU_c13
        "2"
        (consUU_c13
          "3"
          (consUU_c13
            "4"
            (consUU_c13
              "5"
              (consUU_c13
                "6"
                (consUU_c13 "7" (consUU_c13 "8" (consUU_c13 "9" nilUU_c12))))))))))

fun get_at_i29(A_v32179, n_v32180, xs_v32181, a_v32182) =
  if n_v32180 then
    match xs_v32181 with
    | nilUU_c12  ⇒ a_v32182
    | consUU_c13 __v32183 xs_v32184 ⇒
      get_at_i29(NULL, n_v32180.-1, xs_v32184, a_v32182)
    end
  else
    match xs_v32181 with
    | nilUU_c12  ⇒ a_v32182 | consUU_c13 x_v32185 __v32186 ⇒ x_v32185
    end

val get_atclo_i74 =
  fn A_v32187 n_v32188 xs_v32189 a_v32190 ⇒
    get_at_i29(A_v32187, n_v32188, xs_v32189, a_v32190)

fun string_of_digit_i30(n_v32191) =
  get_at_i29(NULL, n_v32191, digits_i28, EmptyString_c2)

val string_of_digitclo_i75 = fn n_v32192 ⇒ string_of_digit_i30(n_v32192)

fun string_of_nat_i31(n_v32193) =
  let s_v32194 = string_of_digit_i30(modn_i14(n_v32193, 10)) in
  let n_v32195 = divn_i13(n_v32193, 10) in
  if ltn_i6(0, n_v32195) then
    cats_i15(string_of_nat_i31(n_v32195), s_v32194)
  else
    s_v32194

val string_of_natclo_i76 = fn n_v32196 ⇒ string_of_nat_i31(n_v32196)

fun powm_i33(a_v32197, b_v32198, m_v32199) =
  if b_v32198 then
    modn_i14(muln_i12(a_v32197, powm_i33(a_v32197, b_v32198.-1, m_v32199)),
             m_v32199)
  else
    1

val powmclo_i77 =
  fn a_v32200 b_v32201 m_v32202 ⇒ powm_i33(a_v32200, b_v32201, m_v32202)

fun client_i38(ch_v32203) =
  ln __v32204 ⇒
    match (NULL, ch_v32203) with
    | (x_v32205, ch_v32206) ⇒
      match (NULL, ch_v32206) with
      | (y_v32207, ch_v32208) ⇒
        let __v32209 = recv(ch_v32208) in
        match __v32209 with
        | (n_v32210, ch_v32211) ⇒
          match (NULL, ch_v32211) with
          | (pf1_v32212, ch_v32213) ⇒
            match (NULL, ch_v32213) with
            | (tot_v32214, ch_v32215) ⇒
              match (NULL, ch_v32215) with
              | (pf2_v32216, ch_v32217) ⇒
                let __v32218 = recv(ch_v32217) in
                match __v32218 with
                | (e_v32219, ch_v32220) ⇒
                  match (NULL, ch_v32220) with
                  | (pf3_v32221, ch_v32222) ⇒
                    match (NULL, ch_v32222) with
                    | (pf4_v32223, ch_v32224) ⇒
                      match (NULL, ch_v32224) with
                      | (pf5_v32225, ch_v32226) ⇒
                        match (NULL, ch_v32226) with
                        | (d_v32227, ch_v32228) ⇒
                          match (NULL, ch_v32228) with
                          | (pf6_v32229, ch_v32230) ⇒
                            let ch_v32231 =
                              let x_v32232 =
                                powm_i33(123, e_v32219, n_v32210)
                              in send(ch_v32230, x_v32232)
                            in
                            match (NULL, ch_v32231) with
                            | (P1_v32233, ch_v32234) ⇒
                              match (NULL, ch_v32234) with
                              | (pf7_v32235, ch_v32236) ⇒ close(ch_v32236)
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

val clientclo_i78 = fn ch_v32237 ⇒ client_i38(ch_v32237)

fun server_i39(ch_v32238) =
  let n_v32239 = muln_i12(7, 19) in
  let tot_v32240 = muln_i12(subn_i11(7, 1), subn_i11(19, 1)) in
  ln __v32241 ⇒
    let ch_v32242 = send(ch_v32238, n_v32239) in
    let ch_v32243 = send(ch_v32242, 5) in
    match (NULL, ch_v32243) with
    | (P0_v32244, ch_v32245) ⇒
      let __v32246 = recv(ch_v32245) in
      match __v32246 with
      | (C_v32247, ch_v32248) ⇒
        match (NULL, ch_v32248) with
        | (pf_v32249, ch_v32250) ⇒
          let P1_v32251 = powm_i33(C_v32247, 65, n_v32239) in
          (print_i26(cats_i15(string_of_nat_i31(P1_v32251), "\n"))) NULL
        end
      end
    end

val serverclo_i79 = fn ch_v32252 ⇒ server_i39(ch_v32252)

main =
  let c_v32253 = fork c_v32254 in (server_i39(c_v32254)) NULL in
  let c0_v32255 =
    fork c0_v32256 in
      let __v32257 = recv(c0_v32256) in
      match __v32257 with
      | (c_v32258, c0_v32259) ⇒ (client_i38(c_v32258)) NULL
      end
  in
  let c0_v32260 = send(c0_v32255, c_v32253) in
  let __v32261 = close(c0_v32260) in sleep(1)

trans3e success--------------------------

trans34 success--------------------------

