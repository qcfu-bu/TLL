logical game_loop‹› (ans : nat) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ end | S repeat ⇒ ?(guess : nat) → !(ord : order) → !{_ : ord ≡ (
(comparen) (ans)
(guess))} → match ord as _ in _ with EQ  ⇒ end | LT  ⇒ ((game_loop)
(ans) (repeat)) | GT  ⇒ ((game_loop) (ans)
(repeat))

logical loop_ch‹› (ans : nat) (repeat : nat) : L = ch‹((game_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : nat) (repeat : nat) : L = hc‹((game_loop)
(ans)
(repeat))›

logical game‹› : proto = !(lower : nat) → !(upper : nat) → !{ans : nat} → !{_ : (
(lten) (lower) (ans)) ≡ true} → !{_ : ((lten) (ans)
(upper)) ≡ true} → !(repeat : nat) → ((game_loop) (ans)
(repeat))

logical game_ch‹› : L = ch‹game›

logical game_hc‹› : L = hc‹game›

program read_nat‹› (_ : unit) : IO nat = let s ⇐ ((readline)
(())) in match ((nat_of_string)
(s)) as _ in _ with Some n ⇒ return n | None  ⇒ let _ ⇐ ((print)
(((String) (((Char) (O.+112)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+105)))
        (((String) (((Char) (O.+110)))
         (((String) (((Char) (O.+112)))
          (((String) (((Char) (O.+117)))
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+110)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+116)))
                  (((String) (((Char) (O.+117)))
                   (((String) (((Char) (O.+114)))
                    (((String) (((Char) (O.+97)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+117)))
                         (((String) (((Char) (O.+109)))
                          (((String) (((Char) (O.+98)))
                           (((String) (((Char) (O.+101)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
(read_nat)
(()))

program player_loop‹› {ans : nat} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_hc)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let _ ⇐ (
                         (print)
                         (((String) (((Char) (O.+89)))
                          (((String) (((Char) (O.+111)))
                           (((String) (((Char) (O.+117)))
                            (((String) (((Char) (O.+32)))
                             (((String) (((Char) (O.+76)))
                              (((String) (((Char) (O.+111)))
                               (((String) (((Char) (O.+115)))
                                (((String) (((Char) (O.+101)))
                                 (((String) (((Char) (O.+33)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))))))))))))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                         (read_nat) (())) in let c ⇐ ((send c)
                         (guess)) in let ⟨ord, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                         (match ord as ord0 in (∀ (_ : hc‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                          (game_loop) (ans) (repeat)) | GT  ⇒ ((game_loop)
                          (ans)
                          (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((String) (((Char) (O.+89)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+117)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+87)))
                               (((String) (((Char) (O.+105)))
                                (((String) (((Char) (O.+110)))
                                 (((String) (((Char) (O.+33)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))))))))))))))) in close c) | LT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+108)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+115)))
                                             (((String) (((Char) (O.+115)))
                                              (((String) (((Char) (O.+101)))
                                               (((String) (((Char) (O.+114)))
                                                (((String) (((Char) (O.+44)))
                                                 (((String)
                                                  (((Char) (O.+32)))
                                                  (((String)
                                                   (((Char) (O.+121)))
                                                   (((String)
                                                    (((Char) (O.+111)))
                                                    (((String)
                                                     (((Char) (O.+117)))
                                                     (((String)
                                                      (((Char) (O.+32)))
                                                      (((String)
                                                       (((Char) (O.+104)))
                                                       (((String)
                                                        (((Char) (O.+97)))
                                                        (((String)
                                                         (((Char) (O.+118)))
                                                         (((String)
                                                          (((Char) (O.+101)))
                                                          (((String)
                                                           (((Char) (O.+32)))
                                                           (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat)
                          (c))) | GT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+103)))
                                           (((String) (((Char) (O.+114)))
                                            (((String) (((Char) (O.+101)))
                                             (((String) (((Char) (O.+97)))
                                              (((String) (((Char) (O.+116)))
                                               (((String) (((Char) (O.+101)))
                                                (((String)
                                                 (((Char) (O.+114)))
                                                 (((String)
                                                  (((Char) (O.+44)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (((String)
                                                    (((Char) (O.+121)))
                                                    (((String)
                                                     (((Char) (O.+111)))
                                                     (((String)
                                                      (((Char) (O.+117)))
                                                      (((String)
                                                       (((Char) (O.+32)))
                                                       (((String)
                                                        (((Char) (O.+104)))
                                                        (((String)
                                                         (((Char) (O.+97)))
                                                         (((String)
                                                          (((Char) (O.+118)))
                                                          (((String)
                                                           (((Char)
                                                            (O.+101)))
                                                           (((String)
                                                            (((Char)
                                                             (O.+32)))
                                                            (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program player‹› (c : game_hc) : IO unit = let ⟨lower, c⟩ ⇐ recv c in let ⟨upper, c⟩ ⇐ recv c in let ⟨{ans}, c⟩ ⇐ recv c in let ⟨{pf1}, c⟩ ⇐ recv c in let ⟨{pf2}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((cats)
   (((cats)
    (((String) (((Char) (O.+80)))
     (((String) (((Char) (O.+108)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+115)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32)))
           (((String) (((Char) (O.+109)))
            (((String) (((Char) (O.+97)))
             (((String) (((Char) (O.+107)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+32)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+103)))
                   (((String) (((Char) (O.+117)))
                    (((String) (((Char) (O.+101)))
                     (((String) (((Char) (O.+115)))
                      (((String) (((Char) (O.+115)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+98)))
                         (((String) (((Char) (O.+101)))
                          (((String) (((Char) (O.+116)))
                           (((String) (((Char) (O.+119)))
                            (((String) (((Char) (O.+101)))
                             (((String) (((Char) (O.+101)))
                              (((String) (((Char) (O.+110)))
                               (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    (((string_of_nat) (lower)))))
   (((String) (((Char) (O.+32)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+110)))
      (((String) (((Char) (O.+100)))
       (((String) (((Char) (O.+32))) (EmptyString)))))))))))))
  (((string_of_nat) (upper)))))
 (((String) (((Char) (O.+46)))
  (((String) (((Char) (O.+10))) (EmptyString)))))))) in let _ ⇐ ((print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

program server_loop‹› (ans : nat) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_ch)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨n, c⟩ ⇐ recv c in let ord = (
                         (comparen) (ans) (n)) in let c ⇐ ((send c)
                         (ord)) in let c ⇐ ((send c)
                         (refl)) in ((match ord as ord0 in (∀ (_ : ch‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                                      (game_loop) (ans)
                                      (repeat)) | GT  ⇒ ((game_loop) 
                                      (ans)
                                      (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ close c) | LT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat)
                                      (c))) | GT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program server‹› (c : game_ch) : IO unit = let lower = O.+1 in let upper = O.+128 in let ans = O.+71 in let repeat = O.+7 in let c ⇐ (
(send c) (lower)) in let c ⇐ ((send c) (upper)) in let c ⇐ ((send c)
(ans)) in let c ⇐ ((send c) (refl)) in let c ⇐ ((send c)
(refl)) in let c ⇐ ((send c) (repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit = let c ⇐ fork (c : game_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : game_hc) → !(_ : unit) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v360 : bool) (b2_v361 : bool) ⇒
    match b1_v360 as __v362 in ??1 with
    | true ⇒ b2_v361 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v365 : bool) (b2_v366 : bool) ⇒
    match b1_v365 as __v367 in ??2 with
    | true ⇒ true | false ⇒ b2_v366
    end

program notb_i3 : bool → bool =
  fn (b_v369 : bool) ⇒
    match b_v369 as __v370 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v373 : bool) (b2_v374 : bool) ⇒
    match b1_v373 as __v375 in ??4 with
    | true ⇒
      match b2_v374 as __v376 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v374 as __v377 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v380 : nat) (y_v381 : nat) ⇒
    match x_v380 as __v382 in ??7 with
    | O ⇒ true
    | S x_v383 ⇒
      match y_v381 as __v384 in ??8 with
      | O ⇒ false | S y_v385 ⇒ (lten_i5 x_v383 y_v385)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v388 : nat) (y_v389 : nat) ⇒
    match x_v388 as __v390 in ??9 with
    | O ⇒
      match y_v389 as __v391 in ??11 with
      | O ⇒ true | S __v392 ⇒ false
      end
    | S x_v393 ⇒
      match y_v389 as __v394 in ??10 with
      | O ⇒ true | S y_v395 ⇒ (gten_i6 x_v393 y_v395)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v398 : nat) (y_v399 : nat) ⇒
    match x_v398 as __v400 in ??12 with
    | O ⇒
      match y_v399 as __v401 in ??14 with
      | O ⇒ false | S y_v402 ⇒ true
      end
    | S x_v403 ⇒
      match y_v399 as __v404 in ??13 with
      | O ⇒ false | S y_v405 ⇒ (ltn_i7 x_v403 y_v405)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v408 : nat) (y_v409 : nat) ⇒
    match x_v408 as __v410 in ??15 with
    | O ⇒ false
    | S x_v411 ⇒
      match y_v409 as __v412 in ??16 with
      | O ⇒ true | S y_v413 ⇒ (gtn_i8 x_v411 y_v413)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v416 : nat) (y_v417 : nat) ⇒
    match x_v416 as __v418 in ??17 with
    | O ⇒
      match y_v417 as __v419 in ??19 with
      | O ⇒ true | S __v420 ⇒ false
      end
    | S x_v421 ⇒
      match y_v417 as __v422 in ??18 with
      | O ⇒ false | S y_v423 ⇒ (eqn_i9 x_v421 y_v423)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v426 : nat) (n2_v427 : nat) ⇒
    match n1_v426 as __v428 in ??20 with
    | O ⇒
      match n2_v427 as __v429 in ??22 with
      | O ⇒ EQ_c3‹› | S __v430 ⇒ LT_c1‹›
      end
    | S n1_v431 ⇒
      match n2_v427 as __v432 in ??21 with
      | O ⇒ GT_c2‹› | S n2_v433 ⇒ (comparen_i10 n1_v431 n2_v433)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v435 : nat) ⇒
    match x_v435 as __v436 in ??23 with
    | O ⇒ 0 | S x_v437 ⇒ x_v437
    end

program addn_i12 : nat → nat → nat =
  fn (x_v440 : nat) (y_v441 : nat) ⇒
    match x_v440 as __v442 in ??24 with
    | O ⇒ y_v441 | S x_v443 ⇒ (addn_i12 x_v443 y_v441).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v446 : nat) (y_v447 : nat) ⇒
    match y_v447 as __v448 in ??25 with
    | O ⇒ x_v446 | S y_v449 ⇒ (subn_i13 (pred_i11 x_v446) y_v449)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v452 : nat) (y_v453 : nat) ⇒
    match x_v452 as __v454 in ??26 with
    | O ⇒ 0 | S x_v455 ⇒ (addn_i12 y_v453 (muln_i14 x_v455 y_v453))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v458 : nat) (y_v459 : nat) ⇒
    match (ltn_i7 x_v458 y_v459) as __v460 in ??27 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v458 y_v459) y_v459).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v463 : nat) (y_v464 : nat) ⇒
    (subn_i13 x_v463 (muln_i14 (divn_i15 x_v463 y_v464) y_v464))

inductive char_d2 : U =
| Char_c4 of (n_v465 : nat) : char_d2

program eqc_i17 : char_d2 → char_d2 → bool =
  fn (c1_v468 : char_d2) (c2_v469 : char_d2) ⇒
    match c1_v468 as __v470 in ??28 with
    | Char_c4 n1_v471 ⇒
      match c2_v469 as __v472 in ??29 with
      | Char_c4 n2_v473 ⇒ (eqn_i9 n1_v471 n2_v473)
      end
    end

program comparec_i18 : char_d2 → char_d2 → order_d1 =
  fn (c1_v476 : char_d2) (c2_v477 : char_d2) ⇒
    match c1_v476 as __v478 in ??30 with
    | Char_c4 n1_v479 ⇒
      match c2_v477 as __v480 in ??31 with
      | Char_c4 n2_v481 ⇒ (comparen_i10 n1_v479 n2_v481)
      end
    end

inductive string_d3 : U =
| EmptyString_c5 of : string_d3
| String_c6 of (c_v482 : char_d2) (s_v483 : string_d3) : string_d3

program cats_i19 : string_d3 → string_d3 → string_d3 =
  fn (s1_v486 : string_d3) (s2_v487 : string_d3) ⇒
    match s1_v486 as __v488 in ??32 with
    | EmptyString_c5  ⇒ s2_v487
    | String_c6 c_v489 s1_v490 ⇒
      (String_c6‹› c_v489 (cats_i19 s1_v490 s2_v487))
    end

program strlen_i20 : string_d3 → nat =
  fn (s_v492 : string_d3) ⇒
    match s_v492 as __v493 in ??33 with
    | EmptyString_c5  ⇒ 0
    | String_c6 __v494 s_v495 ⇒ (strlen_i20 s_v495).+1
    end

program eqs_i21 : string_d3 → string_d3 → bool =
  fn (s1_v498 : string_d3) (s2_v499 : string_d3) ⇒
    match s1_v498 as __v500 in ??34 with
    | EmptyString_c5  ⇒
      match s2_v499 as __v501 in ??36 with
      | EmptyString_c5  ⇒ true | String_c6 __v502 __v503 ⇒ false
      end
    | String_c6 c1_v504 s1_v505 ⇒
      match s2_v499 as __v506 in ??35 with
      | EmptyString_c5  ⇒ false
      | String_c6 c2_v507 s2_v508 ⇒
        (andb_i1 (eqc_i17 c1_v504 c2_v507) (eqs_i21 s1_v505 s2_v508))
      end
    end

program compares_i22 : string_d3 → string_d3 → order_d1 =
  fn (s1_v511 : string_d3) (s2_v512 : string_d3) ⇒
    match s1_v511 as __v513 in ??37 with
    | EmptyString_c5  ⇒
      match s2_v512 as __v514 in ??40 with
      | EmptyString_c5  ⇒ EQ_c3‹›
      | String_c6 __v515 __v516 ⇒ LT_c1‹›
      end
    | String_c6 c1_v517 s1_v518 ⇒
      match s2_v512 as __v519 in ??38 with
      | EmptyString_c5  ⇒ GT_c2‹›
      | String_c6 c2_v520 s2_v521 ⇒
        match (comparec_i18 c1_v517 c2_v520) as __v522 in ??39 with
        | EQ_c3  ⇒ (compares_i22 s1_v518 s2_v521) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d4 ‹s_s523, t_s524›
  (A_v525 : Type‹s_s523›) : Type‹t_s524›
=
| None_c7 of
    ‹s_s526, t_s527› (A_v528 : Type‹s_s526›)
    : (option_d4‹s_s526, t_s527› A_v528)
| Some_c8 of
    ‹s_s529, t_s530› (A_v531 : Type‹s_s529›) (x_v532 : A_v531)
    : (option_d4‹s_s529, t_s530› A_v531)

program and_then_i23 ‹s_s533, r_s534, t_s535› :
  ∀ {A_v536 : Type‹s_s533›} →
    ∀ {B_v537 : Type‹r_s534›} →
      (option_d4‹??41, t_s535› A_v536) →
        A_v536 → (option_d4‹??42, t_s535› B_v537) ⊸
          (option_d4‹??43, t_s535› B_v537)
=
  fn {A_v541 : Type‹s_s533›} {B_v542 : Type‹r_s534›}
     (opt_v543 : (option_d4‹??41, t_s535› A_v541)) ⇒
    ln (f_v544 : ??44) ⇒
      match opt_v543 as __v545 in ??45 with
      | None_c7  ⇒ None_c7‹??48, ??47›
      | Some_c8 x_v546 ⇒ (f_v544 x_v546)
      end

inductive list_d5 ‹s_s547, t_s548›
  (A_v549 : Type‹s_s547›) : Type‹t_s548›
=
| nil_c9 of
    ‹s_s550, t_s551› (A_v552 : Type‹s_s550›)
    : (list_d5‹s_s550, t_s551› A_v552)
| cons_c10 of
    ‹s_s553, t_s554› (A_v555 : Type‹s_s553›) (hd_v556 : A_v555)
    (tl_v557 : (list_d5‹s_s553, t_s554› A_v555))
    : (list_d5‹s_s553, t_s554› A_v555)

program len_i24 ‹s_s558, t_s559› :
  ∀ {A_v560 : Type‹s_s558›} →
    (list_d5‹??49, t_s559› A_v560) →
      nat ⊗ (list_d5‹??50, t_s559› A_v560)
=
  fn {A_v563 : Type‹s_s558›}
     (xs_v564 : (list_d5‹??49, t_s559› A_v563)) ⇒
    match xs_v564 as __v565 in ??51 with
    | nil_c9  ⇒ ⟨0, nil_c9‹??61, ??60›⟩
    | cons_c10 x_v566 xs_v567 ⇒
      match (len_i24‹??54, ??53› ??52 xs_v567) as __v568 in ??55 with
      | ⟨n_v569, xs_v570⟩ ⇒
        ⟨n_v569.+1, (cons_c10‹??58, ??57› x_v566 xs_v570)⟩
      end
    end

program append_i25 ‹s_s571, t_s572› :
  ∀ {A_v573 : Type‹s_s571›} →
    (list_d5‹??62, t_s572› A_v573) →
      (list_d5‹??63, t_s572› A_v573) ⊸ (list_d5‹??65, ??64› A_v573)
=
  fn {A_v576 : Type‹s_s571›}
     (xs_v577 : (list_d5‹??62, t_s572› A_v576)) ⇒
    ln (ys_v578 : ??66) ⇒
      match xs_v577 as __v579 in ??67 with
      | nil_c9  ⇒ ys_v578
      | cons_c10 x_v580 xs_v581 ⇒
        (cons_c10‹??73, ??72›
          x_v580 (append_i25‹??70, ??69› ??68 xs_v581 ys_v578))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v583 : unit) ⇒
    ⇑(b_v584 : bool) ⇒
      match b_v584 as __v585 in ??74 with
      | true ⇒ ⇓(__v586 : string_d3) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v588 : unit) ⇒
    ⇑(b_v589 : bool) ⇒
      match b_v589 as __v590 in ??75 with
      | true ⇒ ⇑(__v591 : string_d3) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v593 : unit) ⇒
    ⇑(b_v594 : bool) ⇒
      match b_v594 as __v595 in ??76 with
      | true ⇒ ⇑(__v596 : string_d3) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d3 =
  fn (__v598 : unit) ⇒
    let ch_v599 ⇐ open stdin in
    let ch_v600 ⇐ (send ch_v599 true) in
    let __v601 ⇐ recv ch_v600 in
    match __v601 as __v602 in ??77 with
    | ⟨s_v603, ch_v604⟩ ⇒
      let ch_v605 ⇐ (send ch_v604 false) in
      let __v606 ⇐ close ch_v605 in return s_v603
    end

program print_i33 : string_d3 → IO unit =
  fn (s_v608 : string_d3) ⇒
    let ch_v609 ⇐ open stdout in
    let ch_v610 ⇐ (send ch_v609 true) in
    let ch_v611 ⇐ (send ch_v610 s_v608) in
    let ch_v612 ⇐ (send ch_v611 false) in close ch_v612

program prerr_i34 : string_d3 → IO unit =
  fn (s_v614 : string_d3) ⇒
    let ch_v615 ⇐ open stderr in
    let ch_v616 ⇐ (send ch_v615 true) in
    let ch_v617 ⇐ (send ch_v616 s_v614) in
    let ch_v618 ⇐ (send ch_v617 false) in close ch_v618

program digits_i35 : (list_d5‹??78, U› ??79) =
  (cons_c10‹??112, ??111›
    "0"
    (cons_c10‹??109, ??108›
      "1"
      (cons_c10‹??106, ??105›
        "2"
        (cons_c10‹??103, ??102›
          "3"
          (cons_c10‹??100, ??99›
            "4"
            (cons_c10‹??97, ??96›
              "5"
              (cons_c10‹??94, ??93›
                "6"
                (cons_c10‹??91, ??90›
                  "7"
                  (cons_c10‹??88, ??87›
                    "8" (cons_c10‹??85, ??84› "9" nil_c9‹??82, ??81›))))))))))

program get_at_i36 :
  ∀ {A_v619 : U} →
    nat → (list_d5‹??113, U› A_v619) → A_v619 → A_v619
=
  fn {A_v623 : U} (n_v624 : nat) (xs_v625 : (list_d5‹??113, U› A_v623))
     (a_v626 : A_v623) ⇒
    match n_v624 as __v627 in ??114 with
    | O ⇒
      match xs_v625 as __v628 in ??117 with
      | nil_c9  ⇒ a_v626 | cons_c10 x_v629 __v630 ⇒ x_v629
      end
    | S n_v631 ⇒
      match xs_v625 as __v632 in ??115 with
      | nil_c9  ⇒ a_v626
      | cons_c10 __v633 xs_v634 ⇒ (get_at_i36 ??116 n_v631 xs_v634 a_v626)
      end
    end

program string_of_digit_i37 : nat → string_d3 =
  fn (n_v636 : nat) ⇒
    (get_at_i36 ??118 n_v636 digits_i35 EmptyString_c5‹›)

program string_of_nat_i38 : nat → string_d3 =
  fn (n_v638 : nat) ⇒
    let s_v639 = (string_of_digit_i37 (modn_i16 n_v638 10)) in
    let n_v640 = (divn_i15 n_v638 10) in
    match (ltn_i7 0 n_v640) as __v641 in ??119 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v640) s_v639)
    | false ⇒ s_v639
    end

program digit_of_char_i39 : char_d2 → (option_d4‹??120, L› nat) =
  fn (c_v643 : char_d2) ⇒
    match (eqc_i17 c_v643 '0') as __v644 in ??121 with
    | true ⇒ (Some_c8‹??163, ??162› 0)
    | false ⇒
      match (eqc_i17 c_v643 '1') as __v645 in ??122 with
      | true ⇒ (Some_c8‹??160, ??159› 1)
      | false ⇒
        match (eqc_i17 c_v643 '2') as __v646 in ??123 with
        | true ⇒ (Some_c8‹??157, ??156› 2)
        | false ⇒
          match (eqc_i17 c_v643 '3') as __v647 in ??124 with
          | true ⇒ (Some_c8‹??154, ??153› 3)
          | false ⇒
            match (eqc_i17 c_v643 '4') as __v648 in ??125 with
            | true ⇒ (Some_c8‹??151, ??150› 4)
            | false ⇒
              match (eqc_i17 c_v643 '5') as __v649 in ??126 with
              | true ⇒ (Some_c8‹??148, ??147› 5)
              | false ⇒
                match (eqc_i17 c_v643 '6') as __v650 in ??127 with
                | true ⇒ (Some_c8‹??145, ??144› 6)
                | false ⇒
                  match (eqc_i17 c_v643 '7') as __v651 in ??128 with
                  | true ⇒ (Some_c8‹??142, ??141› 7)
                  | false ⇒
                    match (eqc_i17 c_v643 '8') as __v652 in ??129 with
                    | true ⇒ (Some_c8‹??139, ??138› 8)
                    | false ⇒
                      match (eqc_i17 c_v643 '9') as __v653 in ??130 with
                      | true ⇒ (Some_c8‹??136, ??135› 9)
                      | false ⇒ None_c7‹??133, ??132›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d3 → nat → (option_d4‹??164, L› nat)
=
  fn (s_v656 : string_d3) (acc_v657 : nat) ⇒
    match s_v656 as __v658 in ??165 with
    | EmptyString_c5  ⇒ (Some_c8‹??172, ??171› acc_v657)
    | String_c6 c_v659 s_v660 ⇒
      match (digit_of_char_i39 c_v659) as __v661 in ??166 with
      | None_c7  ⇒ None_c7‹??169, ??168›
      | Some_c8 n_v662 ⇒
        (nat_of_string_loop_i40
          s_v660 (addn_i12 (muln_i14 acc_v657 10) n_v662))
      end
    end

program nat_of_string_i41 : string_d3 → (option_d4‹??173, L› nat) =
  fn (s_v664 : string_d3) ⇒ (nat_of_string_loop_i40 s_v664 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v667 : nat) (repeat_v668 : nat) ⇒
    match repeat_v668 as __v669 in ??174 with
    | O ⇒ end
    | S repeat_v670 ⇒
      ⇓(guess_v671 : nat) ⇒
        ⇑(ord_v672 : order_d1) ⇒
          ⇑{__v673 : ord_v672 ≡ (comparen_i10 ans_v667 guess_v671)} ⇒
            match ord_v672 as __v674 in ??176 with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v667 repeat_v670)
            | GT_c2  ⇒ (game_loop_i42 ans_v667 repeat_v670)
            end
    end

logical loop_ch_i43 : nat → nat → L =
  fn (ans_v677 : nat) (repeat_v678 : nat) ⇒
    ch⟨(game_loop_i42 ans_v677 repeat_v678)⟩

logical loop_hc_i44 : nat → nat → L =
  fn (ans_v681 : nat) (repeat_v682 : nat) ⇒
    hc⟨(game_loop_i42 ans_v681 repeat_v682)⟩

logical game_i45 : proto =
  ⇑(lower_v683 : nat) ⇒
    ⇑(upper_v684 : nat) ⇒
      ⇑{ans_v685 : nat} ⇒
        ⇑{__v686 : (lten_i5 lower_v683 ans_v685) ≡ true} ⇒
          ⇑{__v687 : (lten_i5 ans_v685 upper_v684) ≡ true} ⇒
            ⇑(repeat_v688 : nat) ⇒ (game_loop_i42 ans_v685 repeat_v688)

logical game_ch_i46 : L = ch⟨game_i45⟩

logical game_hc_i47 : L = hc⟨game_i45⟩

program read_nat_i48 : unit → IO nat =
  fn (__v690 : unit) ⇒
    let s_v691 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v691) as __v692 in ??179 with
    | Some_c8 n_v693 ⇒ return n_v693
    | None_c7  ⇒
      let __v694 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v695 : nat} →
    ∀ (repeat_v696 : nat) →
      (loop_hc_i44 ans_v695 repeat_v696) → IO unit
=
  fn {ans_v698 : nat} (repeat_v699 : nat)
     (c_v700 : (loop_hc_i44 ans_v698 repeat_v699)) ⇒
    (match repeat_v699 as repeat0_v701 in
       (loop_hc_i44 ans_v698 repeat0_v701) → IO unit with
     | O ⇒
       fn (c_v703 : ??187) ⇒
         let __v704 ⇐ (print_i33 "You Lose!\n") in close c_v703
     | S repeat_v705 ⇒
       fn (c_v706 : ??180) ⇒
         let guess_v707 ⇐ (read_nat_i48 ()) in
         let c_v708 ⇐ (send c_v706 guess_v707) in
         let __v709 ⇐ recv c_v708 in
         match __v709 as __v710 in ??186 with
         | ⟨ord_v711, c_v712⟩ ⇒
           let __v713 ⇐ recv c_v712 in
           match __v713 as __v714 in ??185 with
           | ⟨{pf_v715}, c_v716⟩ ⇒
             (match ord_v711 as ord0_v717 in
                hc⟨match ord0_v717 as __v719 in ??181 with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v698 repeat_v705)
                     | GT_c2  ⇒ (game_loop_i42 ans_v698 repeat_v705)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v720 : ??184) ⇒
                  let __v721 ⇐ (print_i33 "You Win!\n") in close c_v720
              | LT_c1  ⇒
                fn (c_v722 : ??183) ⇒
                  let __v723 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v705))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v698 repeat_v705 c_v722)
              | GT_c2  ⇒
                fn (c_v724 : ??182) ⇒
                  let __v725 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v705))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v698 repeat_v705 c_v724)
              end c_v716)
           end
         end
     end c_v700)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v727 : game_hc_i47) ⇒
    let __v728 ⇐ recv c_v727 in
    match __v728 as __v729 in ??193 with
    | ⟨lower_v730, c_v731⟩ ⇒
      let __v732 ⇐ recv c_v731 in
      match __v732 as __v733 in ??192 with
      | ⟨upper_v734, c_v735⟩ ⇒
        let __v736 ⇐ recv c_v735 in
        match __v736 as __v737 in ??191 with
        | ⟨{ans_v738}, c_v739⟩ ⇒
          let __v740 ⇐ recv c_v739 in
          match __v740 as __v741 in ??190 with
          | ⟨{pf1_v742}, c_v743⟩ ⇒
            let __v744 ⇐ recv c_v743 in
            match __v744 as __v745 in ??189 with
            | ⟨{pf2_v746}, c_v747⟩ ⇒
              let __v748 ⇐ recv c_v747 in
              match __v748 as __v749 in ??188 with
              | ⟨repeat_v750, c_v751⟩ ⇒
                let __v752 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v730))
                          " and ")
                        (string_of_nat_i38 upper_v734))
                      ".\n"))
                in
                let __v753 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19 "You have " (string_of_nat_i38 repeat_v750))
                      " tries.\n"))
                in (player_loop_i49 ans_v738 repeat_v750 c_v751)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v754 : nat) →
    ∀ (repeat_v755 : nat) →
      (loop_ch_i43 ans_v754 repeat_v755) → IO unit
=
  fn (ans_v757 : nat) (repeat_v758 : nat)
     (c_v759 : (loop_ch_i43 ans_v757 repeat_v758)) ⇒
    (match repeat_v758 as repeat0_v760 in
       (loop_ch_i43 ans_v757 repeat0_v760) → IO unit with
     | O ⇒ fn (c_v762 : ??201) ⇒ close c_v762
     | S repeat_v763 ⇒
       fn (c_v764 : ??194) ⇒
         let __v765 ⇐ recv c_v764 in
         match __v765 as __v766 in ??200 with
         | ⟨n_v767, c_v768⟩ ⇒
           let ord_v769 = (comparen_i10 ans_v757 n_v767) in
           let c_v770 ⇐ (send c_v768 ord_v769) in
           let c_v771 ⇐ (send c_v770 refl ??195) in
           (match ord_v769 as ord0_v772 in
              ch⟨match ord0_v772 as __v774 in ??196 with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v757 repeat_v763)
                   | GT_c2  ⇒ (game_loop_i42 ans_v757 repeat_v763)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v775 : ??199) ⇒ close c_v775
            | LT_c1  ⇒
              fn (c_v776 : ??198) ⇒
                (server_loop_i51 ans_v757 repeat_v763 c_v776)
            | GT_c2  ⇒
              fn (c_v777 : ??197) ⇒
                (server_loop_i51 ans_v757 repeat_v763 c_v777)
            end c_v771)
         end
     end c_v759)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v779 : game_ch_i46) ⇒
    let lower_v780 = 1 in
    let upper_v781 = 128 in
    let ans_v782 = 71 in
    let repeat_v783 = 7 in
    let c_v784 ⇐ (send c_v779 lower_v780) in
    let c_v785 ⇐ (send c_v784 upper_v781) in
    let c_v786 ⇐ (send c_v785 ans_v782) in
    let c_v787 ⇐ (send c_v786 refl ??202) in
    let c_v788 ⇐ (send c_v787 refl ??203) in
    let c_v789 ⇐ (send c_v788 repeat_v783) in
    (server_loop_i51 ans_v782 repeat_v783 c_v789)

program main_i53 : IO unit =
  let c_v790 ⇐ fork (c_v791 : game_ch_i46) in (server_i52 c_v791) in
  let c0_v792 ⇐
    fork (c0_v793 :
      ch⟨⇓(__v794 : game_hc_i47) ⇒ ⇑(__v795 : unit) ⇒ end⟩)
    in
      let __v796 ⇐ recv c0_v793 in
      match __v796 as __v797 in ??204 with
      | ⟨c_v798, c0_v799⟩ ⇒
        let __v800 ⇐ (player_i50 c_v798) in
        let c0_v801 ⇐ (send c0_v799 ()) in close c0_v801
      end
  in
  let c0_v802 ⇐ (send c0_v792 c_v790) in
  let __v803 ⇐ recv c0_v802 in
  match __v803 as __v804 in ??205 with
  | ⟨__v805, c0_v806⟩ ⇒ close c0_v806
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v32751 : bool) (b2_v32752 : bool) ⇒
    match b1_v32751 as __v32753 in bool with
    | true ⇒ b2_v32752 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v32756 : bool) (b2_v32757 : bool) ⇒
    match b1_v32756 as __v32758 in bool with
    | true ⇒ true | false ⇒ b2_v32757
    end

program notb_i3 : bool → bool =
  fn (b_v32760 : bool) ⇒
    match b_v32760 as __v32761 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v32764 : bool) (b2_v32765 : bool) ⇒
    match b1_v32764 as __v32766 in order_d1 with
    | true ⇒
      match b2_v32765 as __v32767 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v32765 as __v32768 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v32771 : nat) (y_v32772 : nat) ⇒
    match x_v32771 as __v32773 in bool with
    | O ⇒ true
    | S x_v32774 ⇒
      match y_v32772 as __v32775 in bool with
      | O ⇒ false | S y_v32776 ⇒ (lten_i5 x_v32774 y_v32776)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v32779 : nat) (y_v32780 : nat) ⇒
    match x_v32779 as __v32781 in bool with
    | O ⇒
      match y_v32780 as __v32782 in bool with
      | O ⇒ true | S __v32783 ⇒ false
      end
    | S x_v32784 ⇒
      match y_v32780 as __v32785 in bool with
      | O ⇒ true | S y_v32786 ⇒ (gten_i6 x_v32784 y_v32786)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v32789 : nat) (y_v32790 : nat) ⇒
    match x_v32789 as __v32791 in bool with
    | O ⇒
      match y_v32790 as __v32792 in bool with
      | O ⇒ false | S y_v32793 ⇒ true
      end
    | S x_v32794 ⇒
      match y_v32790 as __v32795 in bool with
      | O ⇒ false | S y_v32796 ⇒ (ltn_i7 x_v32794 y_v32796)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v32799 : nat) (y_v32800 : nat) ⇒
    match x_v32799 as __v32801 in bool with
    | O ⇒ false
    | S x_v32802 ⇒
      match y_v32800 as __v32803 in bool with
      | O ⇒ true | S y_v32804 ⇒ (gtn_i8 x_v32802 y_v32804)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v32807 : nat) (y_v32808 : nat) ⇒
    match x_v32807 as __v32809 in bool with
    | O ⇒
      match y_v32808 as __v32810 in bool with
      | O ⇒ true | S __v32811 ⇒ false
      end
    | S x_v32812 ⇒
      match y_v32808 as __v32813 in bool with
      | O ⇒ false | S y_v32814 ⇒ (eqn_i9 x_v32812 y_v32814)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v32817 : nat) (n2_v32818 : nat) ⇒
    match n1_v32817 as __v32819 in order_d1 with
    | O ⇒
      match n2_v32818 as __v32820 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v32821 ⇒ LT_c1‹›
      end
    | S n1_v32822 ⇒
      match n2_v32818 as __v32823 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v32824 ⇒ (comparen_i10 n1_v32822 n2_v32824)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v32826 : nat) ⇒
    match x_v32826 as __v32827 in nat with
    | O ⇒ 0 | S x_v32828 ⇒ x_v32828
    end

program addn_i12 : nat → nat → nat =
  fn (x_v32831 : nat) (y_v32832 : nat) ⇒
    match x_v32831 as __v32833 in nat with
    | O ⇒ y_v32832 | S x_v32834 ⇒ (addn_i12 x_v32834 y_v32832).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v32837 : nat) (y_v32838 : nat) ⇒
    match y_v32838 as __v32839 in nat with
    | O ⇒ x_v32837 | S y_v32840 ⇒ (subn_i13 (pred_i11 x_v32837) y_v32840)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v32843 : nat) (y_v32844 : nat) ⇒
    match x_v32843 as __v32845 in nat with
    | O ⇒ 0
    | S x_v32846 ⇒ (addn_i12 y_v32844 (muln_i14 x_v32846 y_v32844))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v32849 : nat) (y_v32850 : nat) ⇒
    match (ltn_i7 x_v32849 y_v32850) as __v32851 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v32849 y_v32850) y_v32850).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v32854 : nat) (y_v32855 : nat) ⇒
    (subn_i13 x_v32854 (muln_i14 (divn_i15 x_v32854 y_v32855) y_v32855))

inductive char_d2 : U =
| Char_c4 of (n_v32856 : nat) : char_d2

program eqc_i17 : char_d2 → char_d2 → bool =
  fn (c1_v32859 : char_d2) (c2_v32860 : char_d2) ⇒
    match c1_v32859 as __v32861 in bool with
    | Char_c4 n1_v32862 ⇒
      match c2_v32860 as __v32863 in bool with
      | Char_c4 n2_v32864 ⇒ (eqn_i9 n1_v32862 n2_v32864)
      end
    end

program comparec_i18 : char_d2 → char_d2 → order_d1 =
  fn (c1_v32867 : char_d2) (c2_v32868 : char_d2) ⇒
    match c1_v32867 as __v32869 in order_d1 with
    | Char_c4 n1_v32870 ⇒
      match c2_v32868 as __v32871 in order_d1 with
      | Char_c4 n2_v32872 ⇒ (comparen_i10 n1_v32870 n2_v32872)
      end
    end

inductive string_d3 : U =
| EmptyString_c5 of : string_d3
| String_c6 of (c_v32873 : char_d2) (s_v32874 : string_d3) : string_d3

program cats_i19 : string_d3 → string_d3 → string_d3 =
  fn (s1_v32877 : string_d3) (s2_v32878 : string_d3) ⇒
    match s1_v32877 as __v32879 in string_d3 with
    | EmptyString_c5  ⇒ s2_v32878
    | String_c6 c_v32880 s1_v32881 ⇒
      (String_c6‹› c_v32880 (cats_i19 s1_v32881 s2_v32878))
    end

program strlen_i20 : string_d3 → nat =
  fn (s_v32883 : string_d3) ⇒
    match s_v32883 as __v32884 in nat with
    | EmptyString_c5  ⇒ 0
    | String_c6 __v32885 s_v32886 ⇒ (strlen_i20 s_v32886).+1
    end

program eqs_i21 : string_d3 → string_d3 → bool =
  fn (s1_v32889 : string_d3) (s2_v32890 : string_d3) ⇒
    match s1_v32889 as __v32891 in bool with
    | EmptyString_c5  ⇒
      match s2_v32890 as __v32892 in bool with
      | EmptyString_c5  ⇒ true | String_c6 __v32893 __v32894 ⇒ false
      end
    | String_c6 c1_v32895 s1_v32896 ⇒
      match s2_v32890 as __v32897 in bool with
      | EmptyString_c5  ⇒ false
      | String_c6 c2_v32898 s2_v32899 ⇒
        (andb_i1 (eqc_i17 c1_v32895 c2_v32898) (eqs_i21 s1_v32896 s2_v32899))
      end
    end

program compares_i22 : string_d3 → string_d3 → order_d1 =
  fn (s1_v32902 : string_d3) (s2_v32903 : string_d3) ⇒
    match s1_v32902 as __v32904 in order_d1 with
    | EmptyString_c5  ⇒
      match s2_v32903 as __v32905 in order_d1 with
      | EmptyString_c5  ⇒ EQ_c3‹›
      | String_c6 __v32906 __v32907 ⇒ LT_c1‹›
      end
    | String_c6 c1_v32908 s1_v32909 ⇒
      match s2_v32903 as __v32910 in order_d1 with
      | EmptyString_c5  ⇒ GT_c2‹›
      | String_c6 c2_v32911 s2_v32912 ⇒
        match (comparec_i18 c1_v32908 c2_v32911) as __v32913 in order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v32909 s2_v32912)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d4 ‹s_s32914, t_s32915›
  (A_v32916 : Type‹s_s32914›) : Type‹t_s32915›
=
| None_c7 of
    ‹s_s32917, t_s32918› (A_v32919 : Type‹s_s32917›)
    : (option_d4‹s_s32917, t_s32918› A_v32919)
| Some_c8 of
    ‹s_s32920, t_s32921› (A_v32922 : Type‹s_s32920›)
    (x_v32923 : A_v32922) : (option_d4‹s_s32920, t_s32921› A_v32922)

program and_then_i23 ‹s_s32924, r_s32925, t_s32926› :
  ∀ {A_v32927 : Type‹s_s32924›} →
    ∀ {B_v32928 : Type‹r_s32925›} →
      (option_d4‹s_s32924, t_s32926› A_v32927) →
        A_v32927 → (option_d4‹r_s32925, t_s32926› B_v32928) ⊸
          (option_d4‹r_s32925, t_s32926› B_v32928)
=
  fn {A_v32932 : Type‹s_s32924›} {B_v32933 : Type‹r_s32925›}
     (opt_v32934 : (option_d4‹s_s32924, t_s32926› A_v32932)) ⇒
    ln (f_v32935 : A_v32932 → (option_d4‹r_s32925, t_s32926› B_v32933)) ⇒
      match opt_v32934 as __v32937 in
        (option_d4‹r_s32925, t_s32926› B_v32933) with
      | None_c7  ⇒ None_c7‹r_s32925, t_s32926›
      | Some_c8 x_v32938 ⇒ (f_v32935 x_v32938)
      end

inductive list_d5 ‹s_s32939, t_s32940›
  (A_v32941 : Type‹s_s32939›) : Type‹t_s32940›
=
| nil_c9 of
    ‹s_s32942, t_s32943› (A_v32944 : Type‹s_s32942›)
    : (list_d5‹s_s32942, t_s32943› A_v32944)
| cons_c10 of
    ‹s_s32945, t_s32946› (A_v32947 : Type‹s_s32945›)
    (hd_v32948 : A_v32947)
    (tl_v32949 : (list_d5‹s_s32945, t_s32946› A_v32947))
    : (list_d5‹s_s32945, t_s32946› A_v32947)

program len_i24 ‹s_s32950, t_s32951› :
  ∀ {A_v32952 : Type‹s_s32950›} →
    (list_d5‹s_s32950, t_s32951› A_v32952) →
      nat ⊗ (list_d5‹s_s32950, t_s32951› A_v32952)
=
  fn {A_v32955 : Type‹s_s32950›}
     (xs_v32956 : (list_d5‹s_s32950, t_s32951› A_v32955)) ⇒
    match xs_v32956 as __v32957 in
      nat ⊗ (list_d5‹s_s32950, t_s32951› A_v32955) with
    | nil_c9  ⇒ ⟨0, nil_c9‹s_s32950, t_s32951›⟩
    | cons_c10 x_v32959 xs_v32960 ⇒
      match (len_i24‹s_s32950, t_s32951› A_v32955 xs_v32960) as __v32961 in
        nat ⊗ (list_d5‹s_s32950, t_s32951› A_v32955) with
      | ⟨n_v32963, xs_v32964⟩ ⇒
        ⟨n_v32963.+1, (cons_c10‹s_s32950, t_s32951› x_v32959 xs_v32964)⟩
      end
    end

program append_i25 ‹s_s32965, t_s32966› :
  ∀ {A_v32967 : Type‹s_s32965›} →
    (list_d5‹s_s32965, t_s32966› A_v32967) →
      (list_d5‹s_s32965, t_s32966› A_v32967) ⊸
        (list_d5‹s_s32965, t_s32966› A_v32967)
=
  fn {A_v32970 : Type‹s_s32965›}
     (xs_v32971 : (list_d5‹s_s32965, t_s32966› A_v32970)) ⇒
    ln (ys_v32972 : (list_d5‹s_s32965, t_s32966› A_v32970)) ⇒
      match xs_v32971 as __v32973 in
        (list_d5‹s_s32965, t_s32966› A_v32970) with
      | nil_c9  ⇒ ys_v32972
      | cons_c10 x_v32974 xs_v32975 ⇒
        (cons_c10‹s_s32965, t_s32966›
          x_v32974
          (append_i25‹s_s32965, t_s32966› A_v32970 xs_v32975 ys_v32972))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v32977 : unit) ⇒
    ⇑(b_v32978 : bool) ⇒
      match b_v32978 as __v32979 in proto with
      | true ⇒ ⇓(__v32980 : string_d3) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v32982 : unit) ⇒
    ⇑(b_v32983 : bool) ⇒
      match b_v32983 as __v32984 in proto with
      | true ⇒ ⇑(__v32985 : string_d3) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v32987 : unit) ⇒
    ⇑(b_v32988 : bool) ⇒
      match b_v32988 as __v32989 in proto with
      | true ⇒ ⇑(__v32990 : string_d3) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d3 =
  fn (__v32992 : unit) ⇒
    let ch_v32993 ⇐ open stdin in
    let ch_v32994 ⇐ (send ch_v32993 true) in
    let __v32995 ⇐ recv ch_v32994 in
    match __v32995 as __v32996 in IO string_d3 with
    | ⟨s_v32997, ch_v32998⟩ ⇒
      let ch_v32999 ⇐ (send ch_v32998 false) in
      let __v33000 ⇐ close ch_v32999 in return s_v32997
    end

program print_i33 : string_d3 → IO unit =
  fn (s_v33002 : string_d3) ⇒
    let ch_v33003 ⇐ open stdout in
    let ch_v33004 ⇐ (send ch_v33003 true) in
    let ch_v33005 ⇐ (send ch_v33004 s_v33002) in
    let ch_v33006 ⇐ (send ch_v33005 false) in close ch_v33006

program prerr_i34 : string_d3 → IO unit =
  fn (s_v33008 : string_d3) ⇒
    let ch_v33009 ⇐ open stderr in
    let ch_v33010 ⇐ (send ch_v33009 true) in
    let ch_v33011 ⇐ (send ch_v33010 s_v33008) in
    let ch_v33012 ⇐ (send ch_v33011 false) in close ch_v33012

program digits_i35 : (list_d5‹U, U› string_d3) =
  (cons_c10‹U, U›
    "0"
    (cons_c10‹U, U›
      "1"
      (cons_c10‹U, U›
        "2"
        (cons_c10‹U, U›
          "3"
          (cons_c10‹U, U›
            "4"
            (cons_c10‹U, U›
              "5"
              (cons_c10‹U, U›
                "6"
                (cons_c10‹U, U›
                  "7"
                  (cons_c10‹U, U›
                    "8" (cons_c10‹U, U› "9" nil_c9‹U, U›))))))))))

program get_at_i36 :
  ∀ {A_v33013 : U} →
    nat → (list_d5‹U, U› A_v33013) → A_v33013 → A_v33013
=
  fn {A_v33017 : U} (n_v33018 : nat)
     (xs_v33019 : (list_d5‹U, U› A_v33017)) (a_v33020 : A_v33017) ⇒
    match n_v33018 as __v33021 in A_v33017 with
    | O ⇒
      match xs_v33019 as __v33022 in A_v33017 with
      | nil_c9  ⇒ a_v33020 | cons_c10 x_v33023 __v33024 ⇒ x_v33023
      end
    | S n_v33025 ⇒
      match xs_v33019 as __v33026 in A_v33017 with
      | nil_c9  ⇒ a_v33020
      | cons_c10 __v33027 xs_v33028 ⇒
        (get_at_i36 A_v33017 n_v33025 xs_v33028 a_v33020)
      end
    end

program string_of_digit_i37 : nat → string_d3 =
  fn (n_v33030 : nat) ⇒
    (get_at_i36 string_d3 n_v33030 digits_i35 EmptyString_c5‹›)

program string_of_nat_i38 : nat → string_d3 =
  fn (n_v33032 : nat) ⇒
    let s_v33033 = (string_of_digit_i37 (modn_i16 n_v33032 10)) in
    let n_v33034 = (divn_i15 n_v33032 10) in
    match (ltn_i7 0 n_v33034) as __v33035 in string_d3 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v33034) s_v33033)
    | false ⇒ s_v33033
    end

program digit_of_char_i39 : char_d2 → (option_d4‹U, L› nat) =
  fn (c_v33037 : char_d2) ⇒
    match (eqc_i17 c_v33037 '0') as __v33038 in
      (option_d4‹U, L› nat) with
    | true ⇒ (Some_c8‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v33037 '1') as __v33039 in
        (option_d4‹U, L› nat) with
      | true ⇒ (Some_c8‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v33037 '2') as __v33040 in
          (option_d4‹U, L› nat) with
        | true ⇒ (Some_c8‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v33037 '3') as __v33041 in
            (option_d4‹U, L› nat) with
          | true ⇒ (Some_c8‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v33037 '4') as __v33042 in
              (option_d4‹U, L› nat) with
            | true ⇒ (Some_c8‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v33037 '5') as __v33043 in
                (option_d4‹U, L› nat) with
              | true ⇒ (Some_c8‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v33037 '6') as __v33044 in
                  (option_d4‹U, L› nat) with
                | true ⇒ (Some_c8‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v33037 '7') as __v33045 in
                    (option_d4‹U, L› nat) with
                  | true ⇒ (Some_c8‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v33037 '8') as __v33046 in
                      (option_d4‹U, L› nat) with
                    | true ⇒ (Some_c8‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v33037 '9') as __v33047 in
                        (option_d4‹U, L› nat) with
                      | true ⇒ (Some_c8‹U, L› 9)
                      | false ⇒ None_c7‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d3 → nat → (option_d4‹U, L› nat)
=
  fn (s_v33050 : string_d3) (acc_v33051 : nat) ⇒
    match s_v33050 as __v33052 in (option_d4‹U, L› nat) with
    | EmptyString_c5  ⇒ (Some_c8‹U, L› acc_v33051)
    | String_c6 c_v33053 s_v33054 ⇒
      match (digit_of_char_i39 c_v33053) as __v33055 in
        (option_d4‹U, L› nat) with
      | None_c7  ⇒ None_c7‹U, L›
      | Some_c8 n_v33056 ⇒
        (nat_of_string_loop_i40
          s_v33054 (addn_i12 (muln_i14 acc_v33051 10) n_v33056))
      end
    end

program nat_of_string_i41 : string_d3 → (option_d4‹U, L› nat) =
  fn (s_v33058 : string_d3) ⇒ (nat_of_string_loop_i40 s_v33058 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v33061 : nat) (repeat_v33062 : nat) ⇒
    match repeat_v33062 as __v33063 in proto with
    | O ⇒ end
    | S repeat_v33064 ⇒
      ⇓(guess_v33065 : nat) ⇒
        ⇑(ord_v33066 : order_d1) ⇒
          ⇑{__v33067 :
            ord_v33066 ≡ (comparen_i10 ans_v33061 guess_v33065)} ⇒
            match ord_v33066 as __v33068 in proto with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v33061 repeat_v33064)
            | GT_c2  ⇒ (game_loop_i42 ans_v33061 repeat_v33064)
            end
    end

logical loop_ch_i43 : nat → nat → L =
  fn (ans_v33071 : nat) (repeat_v33072 : nat) ⇒
    ch⟨(game_loop_i42 ans_v33071 repeat_v33072)⟩

logical loop_hc_i44 : nat → nat → L =
  fn (ans_v33075 : nat) (repeat_v33076 : nat) ⇒
    hc⟨(game_loop_i42 ans_v33075 repeat_v33076)⟩

logical game_i45 : proto =
  ⇑(lower_v33077 : nat) ⇒
    ⇑(upper_v33078 : nat) ⇒
      ⇑{ans_v33079 : nat} ⇒
        ⇑{__v33080 : (lten_i5 lower_v33077 ans_v33079) ≡ true} ⇒
          ⇑{__v33081 : (lten_i5 ans_v33079 upper_v33078) ≡ true} ⇒
            ⇑(repeat_v33082 : nat) ⇒
              (game_loop_i42 ans_v33079 repeat_v33082)

logical game_ch_i46 : L = ch⟨game_i45⟩

logical game_hc_i47 : L = hc⟨game_i45⟩

program read_nat_i48 : unit → IO nat =
  fn (__v33084 : unit) ⇒
    let s_v33085 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v33085) as __v33086 in IO (nat : U) with
    | Some_c8 n_v33087 ⇒ return n_v33087
    | None_c7  ⇒
      let __v33088 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v33089 : nat} →
    ∀ (repeat_v33090 : nat) →
      (loop_hc_i44 ans_v33089 repeat_v33090) → IO unit
=
  fn {ans_v33092 : nat} (repeat_v33093 : nat)
     (c_v33094 : (loop_hc_i44 ans_v33092 repeat_v33093)) ⇒
    (match repeat_v33093 as repeat0_v33095 in
       (loop_hc_i44 ans_v33092 repeat0_v33095) → IO unit with
     | O ⇒
       fn (c_v33097 : (loop_hc_i44 ans_v33092 0)) ⇒
         let __v33098 ⇐ (print_i33 "You Lose!\n") in close c_v33097
     | S repeat_v33099 ⇒
       fn (c_v33100 : (loop_hc_i44 ans_v33092 repeat_v33099.+1)) ⇒
         let guess_v33101 ⇐ (read_nat_i48 ()) in
         let c_v33102 ⇐ (send c_v33100 guess_v33101) in
         let __v33103 ⇐ recv c_v33102 in
         match __v33103 as __v33104 in IO unit with
         | ⟨ord_v33105, c_v33106⟩ ⇒
           let __v33107 ⇐ recv c_v33106 in
           match __v33107 as __v33108 in IO unit with
           | ⟨{pf_v33109}, c_v33110⟩ ⇒
             (match ord_v33105 as ord0_v33111 in
                hc⟨match ord0_v33111 as __v33113 in proto with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v33092 repeat_v33099)
                     | GT_c2  ⇒ (game_loop_i42 ans_v33092 repeat_v33099)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v33114 : hc⟨end⟩) ⇒
                  let __v33115 ⇐ (print_i33 "You Win!\n") in close c_v33114
              | LT_c1  ⇒
                fn (c_v33116 : hc⟨(game_loop_i42 ans_v33092 repeat_v33099)⟩) ⇒
                  let __v33117 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v33099))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v33092 repeat_v33099 c_v33116)
              | GT_c2  ⇒
                fn (c_v33118 : hc⟨(game_loop_i42 ans_v33092 repeat_v33099)⟩) ⇒
                  let __v33119 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v33099))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v33092 repeat_v33099 c_v33118)
              end c_v33110)
           end
         end
     end c_v33094)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v33121 : game_hc_i47) ⇒
    let __v33122 ⇐ recv c_v33121 in
    match __v33122 as __v33123 in IO unit with
    | ⟨lower_v33124, c_v33125⟩ ⇒
      let __v33126 ⇐ recv c_v33125 in
      match __v33126 as __v33127 in IO unit with
      | ⟨upper_v33128, c_v33129⟩ ⇒
        let __v33130 ⇐ recv c_v33129 in
        match __v33130 as __v33131 in IO unit with
        | ⟨{ans_v33132}, c_v33133⟩ ⇒
          let __v33134 ⇐ recv c_v33133 in
          match __v33134 as __v33135 in IO unit with
          | ⟨{pf1_v33136}, c_v33137⟩ ⇒
            let __v33138 ⇐ recv c_v33137 in
            match __v33138 as __v33139 in IO unit with
            | ⟨{pf2_v33140}, c_v33141⟩ ⇒
              let __v33142 ⇐ recv c_v33141 in
              match __v33142 as __v33143 in IO unit with
              | ⟨repeat_v33144, c_v33145⟩ ⇒
                let __v33146 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v33124))
                          " and ")
                        (string_of_nat_i38 upper_v33128))
                      ".\n"))
                in
                let __v33147 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        "You have " (string_of_nat_i38 repeat_v33144))
                      " tries.\n"))
                in (player_loop_i49 ans_v33132 repeat_v33144 c_v33145)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v33148 : nat) →
    ∀ (repeat_v33149 : nat) →
      (loop_ch_i43 ans_v33148 repeat_v33149) → IO unit
=
  fn (ans_v33151 : nat) (repeat_v33152 : nat)
     (c_v33153 : (loop_ch_i43 ans_v33151 repeat_v33152)) ⇒
    (match repeat_v33152 as repeat0_v33154 in
       (loop_ch_i43 ans_v33151 repeat0_v33154) → IO unit with
     | O ⇒ fn (c_v33156 : (loop_ch_i43 ans_v33151 0)) ⇒ close c_v33156
     | S repeat_v33157 ⇒
       fn (c_v33158 : (loop_ch_i43 ans_v33151 repeat_v33157.+1)) ⇒
         let __v33159 ⇐ recv c_v33158 in
         match __v33159 as __v33160 in IO unit with
         | ⟨n_v33161, c_v33162⟩ ⇒
           let ord_v33163 = (comparen_i10 ans_v33151 n_v33161) in
           let c_v33164 ⇐ (send c_v33162 ord_v33163) in
           let c_v33165 ⇐
             (send c_v33164 refl (comparen_i10 ans_v33151 n_v33161))
           in
           (match ord_v33163 as ord0_v33166 in
              ch⟨match ord0_v33166 as __v33168 in proto with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v33151 repeat_v33157)
                   | GT_c2  ⇒ (game_loop_i42 ans_v33151 repeat_v33157)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v33169 : ch⟨end⟩) ⇒ close c_v33169
            | LT_c1  ⇒
              fn (c_v33170 : ch⟨(game_loop_i42 ans_v33151 repeat_v33157)⟩) ⇒
                (server_loop_i51 ans_v33151 repeat_v33157 c_v33170)
            | GT_c2  ⇒
              fn (c_v33171 : ch⟨(game_loop_i42 ans_v33151 repeat_v33157)⟩) ⇒
                (server_loop_i51 ans_v33151 repeat_v33157 c_v33171)
            end c_v33165)
         end
     end c_v33153)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v33173 : game_ch_i46) ⇒
    let lower_v33174 = 1 in
    let upper_v33175 = 128 in
    let ans_v33176 = 71 in
    let repeat_v33177 = 7 in
    let c_v33178 ⇐ (send c_v33173 lower_v33174) in
    let c_v33179 ⇐ (send c_v33178 upper_v33175) in
    let c_v33180 ⇐ (send c_v33179 ans_v33176) in
    let c_v33181 ⇐ (send c_v33180 refl true) in
    let c_v33182 ⇐ (send c_v33181 refl true) in
    let c_v33183 ⇐ (send c_v33182 repeat_v33177) in
    (server_loop_i51 ans_v33176 repeat_v33177 c_v33183)

program main_i53 : IO unit =
  let c_v33184 ⇐ fork (c_v33185 : game_ch_i46) in (server_i52 c_v33185) in
  let c0_v33186 ⇐
    fork (c0_v33187 :
      ch⟨⇓(__v33188 : game_hc_i47) ⇒ ⇑(__v33189 : unit) ⇒ end⟩)
    in
      let __v33190 ⇐ recv c0_v33187 in
      match __v33190 as __v33191 in IO unit with
      | ⟨c_v33192, c0_v33193⟩ ⇒
        let __v33194 ⇐ (player_i50 c_v33192) in
        let c0_v33195 ⇐ (send c0_v33193 ()) in close c0_v33195
      end
  in
  let c0_v33196 ⇐ (send c0_v33186 c_v33184) in
  let __v33197 ⇐ recv c0_v33196 in
  match __v33197 as __v33198 in IO unit with
  | ⟨__v33199, c0_v33200⟩ ⇒ close c0_v33200
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v33963 b2_v33964 ⇒
    match b1_v33963 with
    | true ⇒ b2_v33964 | false ⇒ false
    end

def orb_i2 =
  fn b1_v33965 b2_v33966 ⇒
    match b1_v33965 with
    | true ⇒ true | false ⇒ b2_v33966
    end

def notb_i3 =
  fn b_v33967 ⇒ match b_v33967 with
                  | true ⇒ false | false ⇒ true
                  end

def compareb_i4 =
  fn b1_v33968 b2_v33969 ⇒
    match b1_v33968 with
    | true ⇒ match b2_v33969 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v33969 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v33970 y_v33971 ⇒
    match x_v33970 with
    | O ⇒ true
    | S x_v33972 ⇒
      match y_v33971 with
      | O ⇒ false | S y_v33973 ⇒ ((lten_i5 x_v33972) y_v33973)
      end
    end

def gten_i6 =
  fn x_v33974 y_v33975 ⇒
    match x_v33974 with
    | O ⇒ match y_v33975 with
            | O ⇒ true | S __v33976 ⇒ false
            end
    | S x_v33977 ⇒
      match y_v33975 with
      | O ⇒ true | S y_v33978 ⇒ ((gten_i6 x_v33977) y_v33978)
      end
    end

def ltn_i7 =
  fn x_v33979 y_v33980 ⇒
    match x_v33979 with
    | O ⇒ match y_v33980 with
            | O ⇒ false | S y_v33981 ⇒ true
            end
    | S x_v33982 ⇒
      match y_v33980 with
      | O ⇒ false | S y_v33983 ⇒ ((ltn_i7 x_v33982) y_v33983)
      end
    end

def gtn_i8 =
  fn x_v33984 y_v33985 ⇒
    match x_v33984 with
    | O ⇒ false
    | S x_v33986 ⇒
      match y_v33985 with
      | O ⇒ true | S y_v33987 ⇒ ((gtn_i8 x_v33986) y_v33987)
      end
    end

def eqn_i9 =
  fn x_v33988 y_v33989 ⇒
    match x_v33988 with
    | O ⇒ match y_v33989 with
            | O ⇒ true | S __v33990 ⇒ false
            end
    | S x_v33991 ⇒
      match y_v33989 with
      | O ⇒ false | S y_v33992 ⇒ ((eqn_i9 x_v33991) y_v33992)
      end
    end

def comparen_i10 =
  fn n1_v33993 n2_v33994 ⇒
    match n1_v33993 with
    | O ⇒ match n2_v33994 with
            | O ⇒ EQ_c3 | S __v33995 ⇒ LT_c1
            end
    | S n1_v33996 ⇒
      match n2_v33994 with
      | O ⇒ GT_c2 | S n2_v33997 ⇒ ((comparen_i10 n1_v33996) n2_v33997)
      end
    end

def pred_i11 =
  fn x_v33998 ⇒ match x_v33998 with
                  | O ⇒ 0 | S x_v33999 ⇒ x_v33999
                  end

def addn_i12 =
  fn x_v34000 y_v34001 ⇒
    match x_v34000 with
    | O ⇒ y_v34001 | S x_v34002 ⇒ ((addn_i12 x_v34002) y_v34001).+1
    end

def subn_i13 =
  fn x_v34003 y_v34004 ⇒
    match y_v34004 with
    | O ⇒ x_v34003
    | S y_v34005 ⇒ ((subn_i13 (pred_i11 x_v34003)) y_v34005)
    end

def muln_i14 =
  fn x_v34006 y_v34007 ⇒
    match x_v34006 with
    | O ⇒ 0
    | S x_v34008 ⇒ ((addn_i12 y_v34007) ((muln_i14 x_v34008) y_v34007))
    end

def divn_i15 =
  fn x_v34009 y_v34010 ⇒
    match ((ltn_i7 x_v34009) y_v34010) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v34009) y_v34010)) y_v34010).+1
    end

def modn_i16 =
  fn x_v34011 y_v34012 ⇒
    ((subn_i13 x_v34011)
      ((muln_i14 ((divn_i15 x_v34011) y_v34012)) y_v34012))

data char_d2 =
| Char_c4 of size(1)

def eqc_i17 =
  fn c1_v34013 c2_v34014 ⇒
    match c1_v34013 with
    | Char_c4 n1_v34015 ⇒
      match c2_v34014 with
      | Char_c4 n2_v34016 ⇒ ((eqn_i9 n1_v34015) n2_v34016)
      end
    end

def comparec_i18 =
  fn c1_v34017 c2_v34018 ⇒
    match c1_v34017 with
    | Char_c4 n1_v34019 ⇒
      match c2_v34018 with
      | Char_c4 n2_v34020 ⇒ ((comparen_i10 n1_v34019) n2_v34020)
      end
    end

data string_d3 =
| EmptyString_c5 of size(0) | String_c6 of size(2)

def cats_i19 =
  fn s1_v34021 s2_v34022 ⇒
    match s1_v34021 with
    | EmptyString_c5  ⇒ s2_v34022
    | String_c6 c_v34023 s1_v34024 ⇒
      (String_c6 c_v34023 ((cats_i19 s1_v34024) s2_v34022))
    end

def strlen_i20 =
  fn s_v34025 ⇒
    match s_v34025 with
    | EmptyString_c5  ⇒ 0
    | String_c6 __v34026 s_v34027 ⇒ (strlen_i20 s_v34027).+1
    end

def eqs_i21 =
  fn s1_v34028 s2_v34029 ⇒
    match s1_v34028 with
    | EmptyString_c5  ⇒
      match s2_v34029 with
      | EmptyString_c5  ⇒ true | String_c6 __v34030 __v34031 ⇒ false
      end
    | String_c6 c1_v34032 s1_v34033 ⇒
      match s2_v34029 with
      | EmptyString_c5  ⇒ false
      | String_c6 c2_v34034 s2_v34035 ⇒
        ((andb_i1 ((eqc_i17 c1_v34032) c2_v34034))
          ((eqs_i21 s1_v34033) s2_v34035))
      end
    end

def compares_i22 =
  fn s1_v34036 s2_v34037 ⇒
    match s1_v34036 with
    | EmptyString_c5  ⇒
      match s2_v34037 with
      | EmptyString_c5  ⇒ EQ_c3 | String_c6 __v34038 __v34039 ⇒ LT_c1
      end
    | String_c6 c1_v34040 s1_v34041 ⇒
      match s2_v34037 with
      | EmptyString_c5  ⇒ GT_c2
      | String_c6 c2_v34042 s2_v34043 ⇒
        match ((comparec_i18 c1_v34040) c2_v34042) with
        | EQ_c3  ⇒ ((compares_i22 s1_v34041) s2_v34043) | LT_c1  ⇒ LT_c1
        | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d9 =
| NoneUU_c17 of size(0) | SomeUU_c18 of size(1)

data optionUL_d8 =
| NoneUL_c15 of size(0) | SomeUL_c16 of size(1)

data optionLU_d7 =
| NoneLU_c13 of size(0)

data optionLL_d6 =
| NoneLL_c11 of size(0) | SomeLL_c12 of size(1)

def and_thenUUU_i61 =
  fn A_v34044 B_v34045 opt_v34046 ⇒
    ln f_v34047 ⇒
      match opt_v34046 with
      | NoneUU_c17  ⇒ NoneUU_c17
      | SomeUU_c18 x_v34048 ⇒ (f_v34047 x_v34048)
      end

def and_thenUUL_i60 =
  fn A_v34049 B_v34050 opt_v34051 ⇒
    ln f_v34052 ⇒
      match opt_v34051 with
      | NoneUL_c15  ⇒ NoneUL_c15
      | SomeUL_c16 x_v34053 ⇒ (f_v34052 x_v34053)
      end

def and_thenULU_i59 =
  fn A_v34054 B_v34055 opt_v34056 ⇒
    ln f_v34057 ⇒
      match opt_v34056 with
      | NoneUU_c17  ⇒ NoneLU_c13
      | SomeUU_c18 x_v34058 ⇒ (f_v34057 x_v34058)
      end

def and_thenULL_i58 =
  fn A_v34059 B_v34060 opt_v34061 ⇒
    ln f_v34062 ⇒
      match opt_v34061 with
      | NoneUL_c15  ⇒ NoneLL_c11
      | SomeUL_c16 x_v34063 ⇒ (f_v34062 x_v34063)
      end

def and_thenLUL_i56 =
  fn A_v34064 B_v34065 opt_v34066 ⇒
    ln f_v34067 ⇒
      match opt_v34066 with
      | NoneLL_c11  ⇒ NoneUL_c15
      | SomeLL_c12 x_v34068 ⇒ (f_v34067 x_v34068)
      end

def and_thenLLL_i54 =
  fn A_v34069 B_v34070 opt_v34071 ⇒
    ln f_v34072 ⇒
      match opt_v34071 with
      | NoneLL_c11  ⇒ NoneLL_c11
      | SomeLL_c12 x_v34073 ⇒ (f_v34072 x_v34073)
      end

data listUU_d13 =
| nilUU_c25 of size(0) | consUU_c26 of size(2)

data listUL_d12 =
| nilUL_c23 of size(0) | consUL_c24 of size(2)

data listLU_d11 =
| nilLU_c21 of size(0)

data listLL_d10 =
| nilLL_c19 of size(0) | consLL_c20 of size(2)

def lenUU_i65 =
  fn A_v34074 xs_v34075 ⇒
    match xs_v34075 with
    | nilUU_c25  ⇒ (0, nilUU_c25)
    | consUU_c26 x_v34076 xs_v34077 ⇒
      match ((lenUU_i65 NULL) xs_v34077) with
      | (n_v34078, xs_v34079) ⇒
        (n_v34078.+1, (consUU_c26 x_v34076 xs_v34079))
      end
    end

def lenUL_i64 =
  fn A_v34080 xs_v34081 ⇒
    match xs_v34081 with
    | nilUL_c23  ⇒ (0, nilUL_c23)
    | consUL_c24 x_v34082 xs_v34083 ⇒
      match ((lenUL_i64 NULL) xs_v34083) with
      | (n_v34084, xs_v34085) ⇒
        (n_v34084.+1, (consUL_c24 x_v34082 xs_v34085))
      end
    end

def lenLL_i62 =
  fn A_v34086 xs_v34087 ⇒
    match xs_v34087 with
    | nilLL_c19  ⇒ (0, nilLL_c19)
    | consLL_c20 x_v34088 xs_v34089 ⇒
      match ((lenLL_i62 NULL) xs_v34089) with
      | (n_v34090, xs_v34091) ⇒
        (n_v34090.+1, (consLL_c20 x_v34088 xs_v34091))
      end
    end

def appendUU_i69 =
  fn A_v34092 xs_v34093 ⇒
    ln ys_v34094 ⇒
      match xs_v34093 with
      | nilUU_c25  ⇒ ys_v34094
      | consUU_c26 x_v34095 xs_v34096 ⇒
        (consUU_c26 x_v34095 (((appendUU_i69 NULL) xs_v34096) ys_v34094))
      end

def appendUL_i68 =
  fn A_v34097 xs_v34098 ⇒
    ln ys_v34099 ⇒
      match xs_v34098 with
      | nilUL_c23  ⇒ ys_v34099
      | consUL_c24 x_v34100 xs_v34101 ⇒
        (consUL_c24 x_v34100 (((appendUL_i68 NULL) xs_v34101) ys_v34099))
      end

def appendLL_i66 =
  fn A_v34102 xs_v34103 ⇒
    ln ys_v34104 ⇒
      match xs_v34103 with
      | nilLL_c19  ⇒ ys_v34104
      | consLL_c20 x_v34105 xs_v34106 ⇒
        (consLL_c20 x_v34105 (((appendLL_i66 NULL) xs_v34106) ys_v34104))
      end

def readline_i32 =
  fn __v34107 ⇒
    let ch_v34108 ⇐ open stdin in
    let ch_v34109 ⇐ (send ch_v34108 true) in
    let __v34110 ⇐ recv ch_v34109 in
    match __v34110 with
    | (s_v34111, ch_v34112) ⇒
      let ch_v34113 ⇐ (send ch_v34112 false) in
      let __v34114 ⇐ close⇑ ch_v34113 in return s_v34111
    end

def print_i33 =
  fn s_v34115 ⇒
    let ch_v34116 ⇐ open stdout in
    let ch_v34117 ⇐ (send ch_v34116 true) in
    let ch_v34118 ⇐ (send ch_v34117 s_v34115) in
    let ch_v34119 ⇐ (send ch_v34118 false) in close⇑ ch_v34119

def prerr_i34 =
  fn s_v34120 ⇒
    let ch_v34121 ⇐ open stderr in
    let ch_v34122 ⇐ (send ch_v34121 true) in
    let ch_v34123 ⇐ (send ch_v34122 s_v34120) in
    let ch_v34124 ⇐ (send ch_v34123 false) in close⇑ ch_v34124

def digits_i35 =
  (consUU_c26
    "0"
    (consUU_c26
      "1"
      (consUU_c26
        "2"
        (consUU_c26
          "3"
          (consUU_c26
            "4"
            (consUU_c26
              "5"
              (consUU_c26
                "6"
                (consUU_c26 "7" (consUU_c26 "8" (consUU_c26 "9" nilUU_c25))))))))))

def get_at_i36 =
  fn A_v34125 n_v34126 xs_v34127 a_v34128 ⇒
    match n_v34126 with
    | O ⇒
      match xs_v34127 with
      | nilUU_c25  ⇒ a_v34128 | consUU_c26 x_v34129 __v34130 ⇒ x_v34129
      end
    | S n_v34131 ⇒
      match xs_v34127 with
      | nilUU_c25  ⇒ a_v34128
      | consUU_c26 __v34132 xs_v34133 ⇒
        ((((get_at_i36 NULL) n_v34131) xs_v34133) a_v34128)
      end
    end

def string_of_digit_i37 =
  fn n_v34134 ⇒ ((((get_at_i36 NULL) n_v34134) digits_i35) EmptyString_c5)

def string_of_nat_i38 =
  fn n_v34135 ⇒
    let s_v34136 = (string_of_digit_i37 ((modn_i16 n_v34135) 10)) in
    let n_v34137 = ((divn_i15 n_v34135) 10) in
    match ((ltn_i7 0) n_v34137) with
    | true ⇒ ((cats_i19 (string_of_nat_i38 n_v34137)) s_v34136)
    | false ⇒ s_v34136
    end

def digit_of_char_i39 =
  fn c_v34138 ⇒
    match ((eqc_i17 c_v34138) '0') with
    | true ⇒ (SomeUL_c16 0)
    | false ⇒
      match ((eqc_i17 c_v34138) '1') with
      | true ⇒ (SomeUL_c16 1)
      | false ⇒
        match ((eqc_i17 c_v34138) '2') with
        | true ⇒ (SomeUL_c16 2)
        | false ⇒
          match ((eqc_i17 c_v34138) '3') with
          | true ⇒ (SomeUL_c16 3)
          | false ⇒
            match ((eqc_i17 c_v34138) '4') with
            | true ⇒ (SomeUL_c16 4)
            | false ⇒
              match ((eqc_i17 c_v34138) '5') with
              | true ⇒ (SomeUL_c16 5)
              | false ⇒
                match ((eqc_i17 c_v34138) '6') with
                | true ⇒ (SomeUL_c16 6)
                | false ⇒
                  match ((eqc_i17 c_v34138) '7') with
                  | true ⇒ (SomeUL_c16 7)
                  | false ⇒
                    match ((eqc_i17 c_v34138) '8') with
                    | true ⇒ (SomeUL_c16 8)
                    | false ⇒
                      match ((eqc_i17 c_v34138) '9') with
                      | true ⇒ (SomeUL_c16 9) | false ⇒ NoneUL_c15
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i40 =
  fn s_v34139 acc_v34140 ⇒
    match s_v34139 with
    | EmptyString_c5  ⇒ (SomeUL_c16 acc_v34140)
    | String_c6 c_v34141 s_v34142 ⇒
      match (digit_of_char_i39 c_v34141) with
      | NoneUL_c15  ⇒ NoneUL_c15
      | SomeUL_c16 n_v34143 ⇒
        ((nat_of_string_loop_i40 s_v34142)
          ((addn_i12 ((muln_i14 acc_v34140) 10)) n_v34143))
      end
    end

def nat_of_string_i41 = fn s_v34144 ⇒ ((nat_of_string_loop_i40 s_v34144) 0)

def read_nat_i48 =
  fn __v34145 ⇒
    let s_v34146 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v34146) with
    | SomeUL_c16 n_v34147 ⇒ return n_v34147
    | NoneUL_c15  ⇒
      let __v34148 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

def player_loop_i49 =
  fn ans_v34149 repeat_v34150 c_v34151 ⇒
    (match repeat_v34150 with
     | O ⇒
       fn c_v34152 ⇒
         let __v34153 ⇐ (print_i33 "You Lose!\n") in close⇓ c_v34152
     | S repeat_v34154 ⇒
       fn c_v34155 ⇒
         let guess_v34156 ⇐ (read_nat_i48 ()) in
         let c_v34157 ⇐ (send c_v34155 guess_v34156) in
         let __v34158 ⇐ recv c_v34157 in
         match __v34158 with
         | (ord_v34159, c_v34160) ⇒
           let __v34161 ⇐ {recv} c_v34160 in
           match __v34161 with
           | (pf_v34162, c_v34163) ⇒
             (match ord_v34159 with
              | EQ_c3  ⇒
                fn c_v34164 ⇒
                  let __v34165 ⇐ (print_i33 "You Win!\n") in
                  close⇓ c_v34164
              | LT_c1  ⇒
                fn c_v34166 ⇒
                  let __v34167 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is lesser, you have ")
                           (string_of_nat_i38 repeat_v34154)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v34154) c_v34166)
              | GT_c2  ⇒
                fn c_v34168 ⇒
                  let __v34169 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is greater, you have ")
                           (string_of_nat_i38 repeat_v34154)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v34154) c_v34168)
              end c_v34163)
           end
         end
     end c_v34151)

def player_i50 =
  fn c_v34170 ⇒
    let __v34171 ⇐ recv c_v34170 in
    match __v34171 with
    | (lower_v34172, c_v34173) ⇒
      let __v34174 ⇐ recv c_v34173 in
      match __v34174 with
      | (upper_v34175, c_v34176) ⇒
        let __v34177 ⇐ {recv} c_v34176 in
        match __v34177 with
        | (ans_v34178, c_v34179) ⇒
          let __v34180 ⇐ {recv} c_v34179 in
          match __v34180 with
          | (pf1_v34181, c_v34182) ⇒
            let __v34183 ⇐ {recv} c_v34182 in
            match __v34183 with
            | (pf2_v34184, c_v34185) ⇒
              let __v34186 ⇐ recv c_v34185 in
              match __v34186 with
              | (repeat_v34187, c_v34188) ⇒
                let __v34189 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19
                          ((cats_i19
                             ((cats_i19 "Please make a guess between ")
                               (string_of_nat_i38 lower_v34172)))
                            " and "))
                         (string_of_nat_i38 upper_v34175)))
                      ".\n"))
                in
                let __v34190 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19 "You have ")
                         (string_of_nat_i38 repeat_v34187)))
                      " tries.\n"))
                in (((player_loop_i49 NULL) repeat_v34187) c_v34188)
              end
            end
          end
        end
      end
    end

def server_loop_i51 =
  fn ans_v34191 repeat_v34192 c_v34193 ⇒
    (match repeat_v34192 with
     | O ⇒ fn c_v34194 ⇒ close⇑ c_v34194
     | S repeat_v34195 ⇒
       fn c_v34196 ⇒
         let __v34197 ⇐ recv c_v34196 in
         match __v34197 with
         | (n_v34198, c_v34199) ⇒
           let ord_v34200 = ((comparen_i10 ans_v34191) n_v34198) in
           let c_v34201 ⇐ (send c_v34199 ord_v34200) in
           let c_v34202 ⇐ ({send} c_v34201 NULL) in
           (match ord_v34200 with
            | EQ_c3  ⇒ fn c_v34203 ⇒ close⇑ c_v34203
            | LT_c1  ⇒
              fn c_v34204 ⇒
                (((server_loop_i51 ans_v34191) repeat_v34195) c_v34204)
            | GT_c2  ⇒
              fn c_v34205 ⇒
                (((server_loop_i51 ans_v34191) repeat_v34195) c_v34205)
            end c_v34202)
         end
     end c_v34193)

def server_i52 =
  fn c_v34206 ⇒
    let lower_v34207 = 1 in
    let upper_v34208 = 128 in
    let ans_v34209 = 71 in
    let repeat_v34210 = 7 in
    let c_v34211 ⇐ (send c_v34206 lower_v34207) in
    let c_v34212 ⇐ (send c_v34211 upper_v34208) in
    let c_v34213 ⇐ ({send} c_v34212 NULL) in
    let c_v34214 ⇐ ({send} c_v34213 NULL) in
    let c_v34215 ⇐ ({send} c_v34214 NULL) in
    let c_v34216 ⇐ (send c_v34215 repeat_v34210) in
    (((server_loop_i51 ans_v34209) repeat_v34210) c_v34216)

main =
  let c_v34217 ⇐ fork c_v34218 in (server_i52 c_v34218) in
  let c0_v34219 ⇐
    fork c0_v34220 in
      let __v34221 ⇐ recv c0_v34220 in
      match __v34221 with
      | (c_v34222, c0_v34223) ⇒
        let __v34224 ⇐ (player_i50 c_v34222) in
        let c0_v34225 ⇐ (send c0_v34223 ()) in close⇑ c0_v34225
      end
  in
  let c0_v34226 ⇐ (send c0_v34219 c_v34217) in
  let __v34227 ⇐ recv c0_v34226 in
  match __v34227 with
  | (__v34228, c0_v34229) ⇒ close⇓ c0_v34229
  end

trans12 success--------------------------

fun andb_i1(b1_v34611, b2_v34612) = if b1_v34611 then
                                      b2_v34612
                                    else
                                      0

val andbclo_i70 = fn b1_v34613 b2_v34614 ⇒ andb_i1(b1_v34613, b2_v34614)

fun orb_i2(b1_v34615, b2_v34616) = if b1_v34615 then
                                     1
                                   else
                                     b2_v34616

val orbclo_i71 = fn b1_v34617 b2_v34618 ⇒ orb_i2(b1_v34617, b2_v34618)

fun notb_i3(b_v34619) = if b_v34619 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v34620 ⇒ notb_i3(b_v34620)

fun compareb_i4(b1_v34621, b2_v34622) =
  if b1_v34621 then
    if b2_v34622 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v34622 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v34623 b2_v34624 ⇒ compareb_i4(b1_v34623, b2_v34624)

fun lten_i5(x_v34625, y_v34626) =
  let __v34627 = x_v34625 in
  if __v34627 then
    let x_v34628 = __v34627.-1 in
    let __v34629 = y_v34626 in
    if __v34629 then
      let y_v34630 = __v34629.-1 in lten_i5(x_v34628, y_v34630)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v34631 y_v34632 ⇒ lten_i5(x_v34631, y_v34632)

fun gten_i6(x_v34633, y_v34634) =
  let __v34635 = x_v34633 in
  if __v34635 then
    let x_v34636 = __v34635.-1 in
    let __v34637 = y_v34634 in
    if __v34637 then
      let y_v34638 = __v34637.-1 in gten_i6(x_v34636, y_v34638)
    else
      1
  else
    let __v34639 = y_v34634 in
    if __v34639 then
      let __v34640 = __v34639.-1 in 0
    else
      1

val gtenclo_i75 = fn x_v34641 y_v34642 ⇒ gten_i6(x_v34641, y_v34642)

fun ltn_i7(x_v34643, y_v34644) =
  let __v34645 = x_v34643 in
  if __v34645 then
    let x_v34646 = __v34645.-1 in
    let __v34647 = y_v34644 in
    if __v34647 then
      let y_v34648 = __v34647.-1 in ltn_i7(x_v34646, y_v34648)
    else
      0
  else
    let __v34649 = y_v34644 in
    if __v34649 then
      let y_v34650 = __v34649.-1 in 1
    else
      0

val ltnclo_i76 = fn x_v34651 y_v34652 ⇒ ltn_i7(x_v34651, y_v34652)

fun gtn_i8(x_v34653, y_v34654) =
  let __v34655 = x_v34653 in
  if __v34655 then
    let x_v34656 = __v34655.-1 in
    let __v34657 = y_v34654 in
    if __v34657 then
      let y_v34658 = __v34657.-1 in gtn_i8(x_v34656, y_v34658)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v34659 y_v34660 ⇒ gtn_i8(x_v34659, y_v34660)

fun eqn_i9(x_v34661, y_v34662) =
  let __v34663 = x_v34661 in
  if __v34663 then
    let x_v34664 = __v34663.-1 in
    let __v34665 = y_v34662 in
    if __v34665 then
      let y_v34666 = __v34665.-1 in eqn_i9(x_v34664, y_v34666)
    else
      0
  else
    let __v34667 = y_v34662 in
    if __v34667 then
      let __v34668 = __v34667.-1 in 0
    else
      1

val eqnclo_i78 = fn x_v34669 y_v34670 ⇒ eqn_i9(x_v34669, y_v34670)

fun comparen_i10(n1_v34671, n2_v34672) =
  let __v34673 = n1_v34671 in
  if __v34673 then
    let n1_v34674 = __v34673.-1 in
    let __v34675 = n2_v34672 in
    if __v34675 then
      let n2_v34676 = __v34675.-1 in comparen_i10(n1_v34674, n2_v34676)
    else
      GT_c2
  else
    let __v34677 = n2_v34672 in
    if __v34677 then
      let __v34678 = __v34677.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v34679 n2_v34680 ⇒ comparen_i10(n1_v34679, n2_v34680)

fun pred_i11(x_v34681) =
  let __v34682 = x_v34681 in
  if __v34682 then
    let x_v34683 = __v34682.-1 in x_v34683
  else
    0

val predclo_i80 = fn x_v34684 ⇒ pred_i11(x_v34684)

fun addn_i12(x_v34685, y_v34686) =
  let __v34687 = x_v34685 in
  if __v34687 then
    let x_v34688 = __v34687.-1 in addn_i12(x_v34688, y_v34686).+1
  else
    y_v34686

val addnclo_i81 = fn x_v34689 y_v34690 ⇒ addn_i12(x_v34689, y_v34690)

fun subn_i13(x_v34691, y_v34692) =
  let __v34693 = y_v34692 in
  if __v34693 then
    let y_v34694 = __v34693.-1 in subn_i13(pred_i11(x_v34691), y_v34694)
  else
    x_v34691

val subnclo_i82 = fn x_v34695 y_v34696 ⇒ subn_i13(x_v34695, y_v34696)

fun muln_i14(x_v34697, y_v34698) =
  let __v34699 = x_v34697 in
  if __v34699 then
    let x_v34700 = __v34699.-1 in
    addn_i12(y_v34698, muln_i14(x_v34700, y_v34698))
  else
    0

val mulnclo_i83 = fn x_v34701 y_v34702 ⇒ muln_i14(x_v34701, y_v34702)

fun divn_i15(x_v34703, y_v34704) =
  if ltn_i7(x_v34703, y_v34704) then
    0
  else
    divn_i15(subn_i13(x_v34703, y_v34704), y_v34704).+1

val divnclo_i84 = fn x_v34705 y_v34706 ⇒ divn_i15(x_v34705, y_v34706)

fun modn_i16(x_v34707, y_v34708) =
  subn_i13(x_v34707, muln_i14(divn_i15(x_v34707, y_v34708), y_v34708))

val modnclo_i85 = fn x_v34709 y_v34710 ⇒ modn_i16(x_v34709, y_v34710)

fun eqc_i17(c1_v34711, c2_v34712) =
  match c1_v34711 with
  | Char_c4 n1_v34713 ⇒
    match c2_v34712 with
    | Char_c4 n2_v34714 ⇒ eqn_i9(n1_v34713, n2_v34714)
    end
  end

val eqcclo_i86 = fn c1_v34715 c2_v34716 ⇒ eqc_i17(c1_v34715, c2_v34716)

fun comparec_i18(c1_v34717, c2_v34718) =
  match c1_v34717 with
  | Char_c4 n1_v34719 ⇒
    match c2_v34718 with
    | Char_c4 n2_v34720 ⇒ comparen_i10(n1_v34719, n2_v34720)
    end
  end

val comparecclo_i87 =
  fn c1_v34721 c2_v34722 ⇒ comparec_i18(c1_v34721, c2_v34722)

fun cats_i19(s1_v34723, s2_v34724) =
  match s1_v34723 with
  | EmptyString_c5  ⇒ s2_v34724
  | String_c6 c_v34725 s1_v34726 ⇒
    (String_c6 c_v34725 cats_i19(s1_v34726, s2_v34724))
  end

val catsclo_i88 = fn s1_v34727 s2_v34728 ⇒ cats_i19(s1_v34727, s2_v34728)

fun strlen_i20(s_v34729) =
  match s_v34729 with
  | EmptyString_c5  ⇒ 0
  | String_c6 __v34730 s_v34731 ⇒ strlen_i20(s_v34731).+1
  end

val strlenclo_i89 = fn s_v34732 ⇒ strlen_i20(s_v34732)

fun eqs_i21(s1_v34733, s2_v34734) =
  match s1_v34733 with
  | EmptyString_c5  ⇒
    match s2_v34734 with
    | EmptyString_c5  ⇒ 1 | String_c6 __v34735 __v34736 ⇒ 0
    end
  | String_c6 c1_v34737 s1_v34738 ⇒
    match s2_v34734 with
    | EmptyString_c5  ⇒ 0
    | String_c6 c2_v34739 s2_v34740 ⇒
      andb_i1(eqc_i17(c1_v34737, c2_v34739), eqs_i21(s1_v34738, s2_v34740))
    end
  end

val eqsclo_i90 = fn s1_v34741 s2_v34742 ⇒ eqs_i21(s1_v34741, s2_v34742)

fun compares_i22(s1_v34743, s2_v34744) =
  match s1_v34743 with
  | EmptyString_c5  ⇒
    match s2_v34744 with
    | EmptyString_c5  ⇒ EQ_c3 | String_c6 __v34745 __v34746 ⇒ LT_c1
    end
  | String_c6 c1_v34747 s1_v34748 ⇒
    match s2_v34744 with
    | EmptyString_c5  ⇒ GT_c2
    | String_c6 c2_v34749 s2_v34750 ⇒
      match comparec_i18(c1_v34747, c2_v34749) with
      | EQ_c3  ⇒ compares_i22(s1_v34748, s2_v34750) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v34751 s2_v34752 ⇒ compares_i22(s1_v34751, s2_v34752)

fun and_thenUUU_i61(A_v34753, B_v34754, opt_v34755, f_v34756) =
  match opt_v34755 with
  | NoneUU_c17  ⇒ NoneUU_c17 | SomeUU_c18 x_v34757 ⇒ (f_v34756) x_v34757
  end

val and_thenUUUclo_i92 =
  fn A_v34758 B_v34759 opt_v34760 ⇒
    ln f_v34761 ⇒ and_thenUUU_i61(A_v34758, B_v34759, opt_v34760, f_v34761)

fun and_thenUUL_i60(A_v34762, B_v34763, opt_v34764, f_v34765) =
  match opt_v34764 with
  | NoneUL_c15  ⇒ NoneUL_c15 | SomeUL_c16 x_v34766 ⇒ (f_v34765) x_v34766
  end

val and_thenUULclo_i93 =
  fn A_v34767 B_v34768 opt_v34769 ⇒
    ln f_v34770 ⇒ and_thenUUL_i60(A_v34767, B_v34768, opt_v34769, f_v34770)

fun and_thenULU_i59(A_v34771, B_v34772, opt_v34773, f_v34774) =
  match opt_v34773 with
  | NoneUU_c17  ⇒ NoneLU_c13 | SomeUU_c18 x_v34775 ⇒ (f_v34774) x_v34775
  end

val and_thenULUclo_i94 =
  fn A_v34776 B_v34777 opt_v34778 ⇒
    ln f_v34779 ⇒ and_thenULU_i59(A_v34776, B_v34777, opt_v34778, f_v34779)

fun and_thenULL_i58(A_v34780, B_v34781, opt_v34782, f_v34783) =
  match opt_v34782 with
  | NoneUL_c15  ⇒ NoneLL_c11 | SomeUL_c16 x_v34784 ⇒ (f_v34783) x_v34784
  end

val and_thenULLclo_i95 =
  fn A_v34785 B_v34786 opt_v34787 ⇒
    ln f_v34788 ⇒ and_thenULL_i58(A_v34785, B_v34786, opt_v34787, f_v34788)

fun and_thenLUL_i56(A_v34789, B_v34790, opt_v34791, f_v34792) =
  match opt_v34791 with
  | NoneLL_c11  ⇒ NoneUL_c15 | SomeLL_c12 x_v34793 ⇒ (f_v34792) x_v34793
  end

val and_thenLULclo_i96 =
  fn A_v34794 B_v34795 opt_v34796 ⇒
    ln f_v34797 ⇒ and_thenLUL_i56(A_v34794, B_v34795, opt_v34796, f_v34797)

fun and_thenLLL_i54(A_v34798, B_v34799, opt_v34800, f_v34801) =
  match opt_v34800 with
  | NoneLL_c11  ⇒ NoneLL_c11 | SomeLL_c12 x_v34802 ⇒ (f_v34801) x_v34802
  end

val and_thenLLLclo_i97 =
  fn A_v34803 B_v34804 opt_v34805 ⇒
    ln f_v34806 ⇒ and_thenLLL_i54(A_v34803, B_v34804, opt_v34805, f_v34806)

fun lenUU_i65(A_v34807, xs_v34808) =
  match xs_v34808 with
  | nilUU_c25  ⇒ (0, nilUU_c25)
  | consUU_c26 x_v34809 xs_v34810 ⇒
    match lenUU_i65(NULL, xs_v34810) with
    | (n_v34811, xs_v34812) ⇒
      (n_v34811.+1, (consUU_c26 x_v34809 xs_v34812))
    end
  end

val lenUUclo_i98 = fn A_v34813 xs_v34814 ⇒ lenUU_i65(A_v34813, xs_v34814)

fun lenUL_i64(A_v34815, xs_v34816) =
  match xs_v34816 with
  | nilUL_c23  ⇒ (0, nilUL_c23)
  | consUL_c24 x_v34817 xs_v34818 ⇒
    match lenUL_i64(NULL, xs_v34818) with
    | (n_v34819, xs_v34820) ⇒
      (n_v34819.+1, (consUL_c24 x_v34817 xs_v34820))
    end
  end

val lenULclo_i99 = fn A_v34821 xs_v34822 ⇒ lenUL_i64(A_v34821, xs_v34822)

fun lenLL_i62(A_v34823, xs_v34824) =
  match xs_v34824 with
  | nilLL_c19  ⇒ (0, nilLL_c19)
  | consLL_c20 x_v34825 xs_v34826 ⇒
    match lenLL_i62(NULL, xs_v34826) with
    | (n_v34827, xs_v34828) ⇒
      (n_v34827.+1, (consLL_c20 x_v34825 xs_v34828))
    end
  end

val lenLLclo_i100 = fn A_v34829 xs_v34830 ⇒ lenLL_i62(A_v34829, xs_v34830)

fun appendUU_i69(A_v34831, xs_v34832, ys_v34833) =
  match xs_v34832 with
  | nilUU_c25  ⇒ ys_v34833
  | consUU_c26 x_v34834 xs_v34835 ⇒
    (consUU_c26 x_v34834 appendUU_i69(NULL, xs_v34835, ys_v34833))
  end

val appendUUclo_i101 =
  fn A_v34836 xs_v34837 ⇒
    ln ys_v34838 ⇒ appendUU_i69(A_v34836, xs_v34837, ys_v34838)

fun appendUL_i68(A_v34839, xs_v34840, ys_v34841) =
  match xs_v34840 with
  | nilUL_c23  ⇒ ys_v34841
  | consUL_c24 x_v34842 xs_v34843 ⇒
    (consUL_c24 x_v34842 appendUL_i68(NULL, xs_v34843, ys_v34841))
  end

val appendULclo_i102 =
  fn A_v34844 xs_v34845 ⇒
    ln ys_v34846 ⇒ appendUL_i68(A_v34844, xs_v34845, ys_v34846)

fun appendLL_i66(A_v34847, xs_v34848, ys_v34849) =
  match xs_v34848 with
  | nilLL_c19  ⇒ ys_v34849
  | consLL_c20 x_v34850 xs_v34851 ⇒
    (consLL_c20 x_v34850 appendLL_i66(NULL, xs_v34851, ys_v34849))
  end

val appendLLclo_i103 =
  fn A_v34852 xs_v34853 ⇒
    ln ys_v34854 ⇒ appendLL_i66(A_v34852, xs_v34853, ys_v34854)

fun readline_i32(__v34855) =
  ln __v34856 ⇒
    let ch_v34857 = (ln __v34858 ⇒ open stdin) NULL in
    let ch_v34859 =
      ((fn x_v34860 ⇒ ln __v34861 ⇒ send(ch_v34857, x_v34860)) 1) NULL
    in
    let __v34862 = (ln __v34863 ⇒ recv(ch_v34859)) NULL in
    (match __v34862 with
     | (s_v34864, ch_v34865) ⇒
       ln __v34866 ⇒
         let ch_v34867 =
           ((fn x_v34868 ⇒ ln __v34869 ⇒ send(ch_v34865, x_v34868)) 0)
             NULL
         in
         let __v34870 =
           (ln __v34871 ⇒ let __v34872 = ch_v34867 in NULL) NULL
         in (ln __v34873 ⇒ s_v34864) NULL
     end) NULL

val readlineclo_i104 = fn __v34874 ⇒ readline_i32(__v34874)

fun print_i33(s_v34875) =
  ln __v34876 ⇒
    let ch_v34877 = (ln __v34878 ⇒ open stdout) NULL in
    let ch_v34879 =
      ((fn x_v34880 ⇒ ln __v34881 ⇒ send(ch_v34877, x_v34880)) 1) NULL
    in
    let ch_v34882 =
      ((fn x_v34883 ⇒ ln __v34884 ⇒ send(ch_v34879, x_v34883)) s_v34875)
        NULL
    in
    let ch_v34885 =
      ((fn x_v34886 ⇒ ln __v34887 ⇒ send(ch_v34882, x_v34886)) 0) NULL
    in (ln __v34888 ⇒ let __v34889 = ch_v34885 in NULL) NULL

val printclo_i105 = fn s_v34890 ⇒ print_i33(s_v34890)

fun prerr_i34(s_v34891) =
  ln __v34892 ⇒
    let ch_v34893 = (ln __v34894 ⇒ open stderr) NULL in
    let ch_v34895 =
      ((fn x_v34896 ⇒ ln __v34897 ⇒ send(ch_v34893, x_v34896)) 1) NULL
    in
    let ch_v34898 =
      ((fn x_v34899 ⇒ ln __v34900 ⇒ send(ch_v34895, x_v34899)) s_v34891)
        NULL
    in
    let ch_v34901 =
      ((fn x_v34902 ⇒ ln __v34903 ⇒ send(ch_v34898, x_v34902)) 0) NULL
    in (ln __v34904 ⇒ let __v34905 = ch_v34901 in NULL) NULL

val prerrclo_i106 = fn s_v34906 ⇒ prerr_i34(s_v34906)

val digits_i35 =
  (consUU_c26
    "0"
    (consUU_c26
      "1"
      (consUU_c26
        "2"
        (consUU_c26
          "3"
          (consUU_c26
            "4"
            (consUU_c26
              "5"
              (consUU_c26
                "6"
                (consUU_c26 "7" (consUU_c26 "8" (consUU_c26 "9" nilUU_c25))))))))))

fun get_at_i36(A_v34907, n_v34908, xs_v34909, a_v34910) =
  let __v34911 = n_v34908 in
  if __v34911 then
    let n_v34912 = __v34911.-1 in
    match xs_v34909 with
    | nilUU_c25  ⇒ a_v34910
    | consUU_c26 __v34913 xs_v34914 ⇒
      get_at_i36(NULL, n_v34912, xs_v34914, a_v34910)
    end
  else
    match xs_v34909 with
    | nilUU_c25  ⇒ a_v34910 | consUU_c26 x_v34915 __v34916 ⇒ x_v34915
    end

val get_atclo_i107 =
  fn A_v34917 n_v34918 xs_v34919 a_v34920 ⇒
    get_at_i36(A_v34917, n_v34918, xs_v34919, a_v34920)

fun string_of_digit_i37(n_v34921) =
  get_at_i36(NULL, n_v34921, digits_i35, EmptyString_c5)

val string_of_digitclo_i108 = fn n_v34922 ⇒ string_of_digit_i37(n_v34922)

fun string_of_nat_i38(n_v34923) =
  let s_v34924 = string_of_digit_i37(modn_i16(n_v34923, 10)) in
  let n_v34925 = divn_i15(n_v34923, 10) in
  if ltn_i7(0, n_v34925) then
    cats_i19(string_of_nat_i38(n_v34925), s_v34924)
  else
    s_v34924

val string_of_natclo_i109 = fn n_v34926 ⇒ string_of_nat_i38(n_v34926)

fun digit_of_char_i39(c_v34927) =
  if eqc_i17(c_v34927, '0') then
    (SomeUL_c16 0)
  else
    if eqc_i17(c_v34927, '1') then
      (SomeUL_c16 1)
    else
      if eqc_i17(c_v34927, '2') then
        (SomeUL_c16 2)
      else
        if eqc_i17(c_v34927, '3') then
          (SomeUL_c16 3)
        else
          if eqc_i17(c_v34927, '4') then
            (SomeUL_c16 4)
          else
            if eqc_i17(c_v34927, '5') then
              (SomeUL_c16 5)
            else
              if eqc_i17(c_v34927, '6') then
                (SomeUL_c16 6)
              else
                if eqc_i17(c_v34927, '7') then
                  (SomeUL_c16 7)
                else
                  if eqc_i17(c_v34927, '8') then
                    (SomeUL_c16 8)
                  else
                    if eqc_i17(c_v34927, '9') then
                      (SomeUL_c16 9)
                    else
                      NoneUL_c15

val digit_of_charclo_i110 = fn c_v34928 ⇒ digit_of_char_i39(c_v34928)

fun nat_of_string_loop_i40(s_v34929, acc_v34930) =
  match s_v34929 with
  | EmptyString_c5  ⇒ (SomeUL_c16 acc_v34930)
  | String_c6 c_v34931 s_v34932 ⇒
    match digit_of_char_i39(c_v34931) with
    | NoneUL_c15  ⇒ NoneUL_c15
    | SomeUL_c16 n_v34933 ⇒
      nat_of_string_loop_i40(s_v34932,
                             addn_i12(muln_i14(acc_v34930, 10), n_v34933))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v34934 acc_v34935 ⇒ nat_of_string_loop_i40(s_v34934, acc_v34935)

fun nat_of_string_i41(s_v34936) = nat_of_string_loop_i40(s_v34936, 0)

val nat_of_stringclo_i112 = fn s_v34937 ⇒ nat_of_string_i41(s_v34937)

fun read_nat_i48(__v34938) =
  ln __v34939 ⇒
    let s_v34940 = (readline_i32(NULL)) NULL in
    (match nat_of_string_i41(s_v34940) with
     | SomeUL_c16 n_v34941 ⇒ ln __v34942 ⇒ n_v34941
     | NoneUL_c15  ⇒
       ln __v34943 ⇒
         let __v34944 = (print_i33("please input a natural number\n")) NULL
         in (read_nat_i48(NULL)) NULL
     end) NULL

val read_natclo_i113 = fn __v34945 ⇒ read_nat_i48(__v34945)

fun player_loop_i49(ans_v34946, repeat_v34947, c_v34948) =
  (let __v34949 = repeat_v34947 in
   if __v34949 then
     let repeat_v34950 = __v34949.-1 in
     fn c_v34951 ⇒
       ln __v34952 ⇒
         let guess_v34953 = (read_nat_i48(NULL)) NULL in
         let c_v34954 =
           ((fn x_v34955 ⇒ ln __v34956 ⇒ send(c_v34951, x_v34955))
              guess_v34953)
             NULL
         in
         let __v34957 = (ln __v34958 ⇒ recv(c_v34954)) NULL in
         (match __v34957 with
          | (ord_v34959, c_v34960) ⇒
            ln __v34961 ⇒
              let __v34962 = (ln __v34963 ⇒ (NULL, c_v34960)) NULL in
              (match __v34962 with
               | (pf_v34964, c_v34965) ⇒
                 (match ord_v34959 with
                  | EQ_c3  ⇒
                    fn c_v34966 ⇒
                      ln __v34967 ⇒
                        let __v34968 = (print_i33("You Win!\n")) NULL in
                        (ln __v34969 ⇒ close(c_v34966)) NULL
                  | LT_c1  ⇒
                    fn c_v34970 ⇒
                      ln __v34971 ⇒
                        let __v34972 =
                          (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v34950)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v34950, c_v34970)) NULL
                  | GT_c2  ⇒
                    fn c_v34973 ⇒
                      ln __v34974 ⇒
                        let __v34975 =
                          (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v34950)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v34950, c_v34973)) NULL
                  end) c_v34965
               end) NULL
          end) NULL
   else
     fn c_v34976 ⇒
       ln __v34977 ⇒
         let __v34978 = (print_i33("You Lose!\n")) NULL in
         (ln __v34979 ⇒ close(c_v34976)) NULL)
    c_v34948

val player_loopclo_i114 =
  fn ans_v34980 repeat_v34981 c_v34982 ⇒
    player_loop_i49(ans_v34980, repeat_v34981, c_v34982)

fun player_i50(c_v34983) =
  ln __v34984 ⇒
    let __v34985 = (ln __v34986 ⇒ recv(c_v34983)) NULL in
    (match __v34985 with
     | (lower_v34987, c_v34988) ⇒
       ln __v34989 ⇒
         let __v34990 = (ln __v34991 ⇒ recv(c_v34988)) NULL in
         (match __v34990 with
          | (upper_v34992, c_v34993) ⇒
            ln __v34994 ⇒
              let __v34995 = (ln __v34996 ⇒ (NULL, c_v34993)) NULL in
              (match __v34995 with
               | (ans_v34997, c_v34998) ⇒
                 ln __v34999 ⇒
                   let __v35000 = (ln __v35001 ⇒ (NULL, c_v34998)) NULL in
                   (match __v35000 with
                    | (pf1_v35002, c_v35003) ⇒
                      ln __v35004 ⇒
                        let __v35005 =
                          (ln __v35006 ⇒ (NULL, c_v35003)) NULL
                        in
                        (match __v35005 with
                         | (pf2_v35007, c_v35008) ⇒
                           ln __v35009 ⇒
                             let __v35010 =
                               (ln __v35011 ⇒ recv(c_v35008)) NULL
                             in
                             (match __v35010 with
                              | (repeat_v35012, c_v35013) ⇒
                                ln __v35014 ⇒
                                  let __v35015 =
                                    (print_i33(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v34987)),
                                                                 " and "),
                                                                 string_of_nat_i38(
                                                                 upper_v34992)),
                                                        ".\n")))
                                      NULL
                                  in
                                  let __v35016 =
                                    (print_i33(cats_i19(cats_i19("You have ",
                                                                 string_of_nat_i38(
                                                                 repeat_v35012)),
                                                        " tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i49(NULL, repeat_v35012,
                                                   c_v35013))
                                    NULL
                              end) NULL
                         end) NULL
                    end) NULL
               end) NULL
          end) NULL
     end) NULL

val playerclo_i115 = fn c_v35017 ⇒ player_i50(c_v35017)

fun server_loop_i51(ans_v35018, repeat_v35019, c_v35020) =
  (let __v35021 = repeat_v35019 in
   if __v35021 then
     let repeat_v35022 = __v35021.-1 in
     fn c_v35023 ⇒
       ln __v35024 ⇒
         let __v35025 = (ln __v35026 ⇒ recv(c_v35023)) NULL in
         (match __v35025 with
          | (n_v35027, c_v35028) ⇒
            let ord_v35029 = comparen_i10(ans_v35018, n_v35027) in
            ln __v35030 ⇒
              let c_v35031 =
                ((fn x_v35032 ⇒ ln __v35033 ⇒ send(c_v35028, x_v35032))
                   ord_v35029)
                  NULL
              in
              let c_v35034 =
                ((fn x_v35035 ⇒ ln __v35036 ⇒ c_v35031) NULL) NULL
              in
              ((match ord_v35029 with
                | EQ_c3  ⇒
                  fn c_v35037 ⇒
                    ln __v35038 ⇒ let __v35039 = c_v35037 in NULL
                | LT_c1  ⇒
                  fn c_v35040 ⇒
                    server_loop_i51(ans_v35018, repeat_v35022, c_v35040)
                | GT_c2  ⇒
                  fn c_v35041 ⇒
                    server_loop_i51(ans_v35018, repeat_v35022, c_v35041)
                end) c_v35034) NULL
          end) NULL
   else
     fn c_v35042 ⇒ ln __v35043 ⇒ let __v35044 = c_v35042 in NULL)
    c_v35020

val server_loopclo_i116 =
  fn ans_v35045 repeat_v35046 c_v35047 ⇒
    server_loop_i51(ans_v35045, repeat_v35046, c_v35047)

fun server_i52(c_v35048) =
  let lower_v35049 = 1 in
  let upper_v35050 = 128 in
  let ans_v35051 = 71 in
  let repeat_v35052 = 7 in
  ln __v35053 ⇒
    let c_v35054 =
      ((fn x_v35055 ⇒ ln __v35056 ⇒ send(c_v35048, x_v35055))
         lower_v35049)
        NULL
    in
    let c_v35057 =
      ((fn x_v35058 ⇒ ln __v35059 ⇒ send(c_v35054, x_v35058))
         upper_v35050)
        NULL
    in
    let c_v35060 = ((fn x_v35061 ⇒ ln __v35062 ⇒ c_v35057) NULL) NULL in
    let c_v35063 = ((fn x_v35064 ⇒ ln __v35065 ⇒ c_v35060) NULL) NULL in
    let c_v35066 = ((fn x_v35067 ⇒ ln __v35068 ⇒ c_v35063) NULL) NULL in
    let c_v35069 =
      ((fn x_v35070 ⇒ ln __v35071 ⇒ send(c_v35066, x_v35070))
         repeat_v35052)
        NULL
    in (server_loop_i51(ans_v35051, repeat_v35052, c_v35069)) NULL

val serverclo_i117 = fn c_v35072 ⇒ server_i52(c_v35072)

main =
  (ln __v35073 ⇒
     let c_v35074 =
       (ln __v35075 ⇒ fork c_v35076 in (server_i52(c_v35076)) NULL) NULL
     in
     let c0_v35077 =
       (ln __v35078 ⇒
          fork c0_v35079 in
            (ln __v35080 ⇒
               let __v35081 = (ln __v35082 ⇒ recv(c0_v35079)) NULL in
               (match __v35081 with
                | (c_v35083, c0_v35084) ⇒
                  ln __v35085 ⇒
                    let __v35086 = (player_i50(c_v35083)) NULL in
                    let c0_v35087 =
                      ((fn x_v35088 ⇒
                          ln __v35089 ⇒ send(c0_v35084, x_v35088))
                         NULL)
                        NULL
                    in
                    (ln __v35090 ⇒ let __v35091 = c0_v35087 in NULL) NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v35092 =
       ((ln x_v35093 __v35094 ⇒ send(c0_v35077, x_v35093)) c_v35074) NULL
     in
     let __v35095 = (ln __v35096 ⇒ recv(c0_v35092)) NULL in
     (match __v35095 with
      | (__v35097, c0_v35098) ⇒ ln __v35099 ⇒ close(c0_v35098)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v36153, b2_v36154) = if b1_v36153 then
                                      b2_v36154
                                    else
                                      0

val andbclo_i70 = fn b1_v36155 b2_v36156 ⇒ andb_i1(b1_v36155, b2_v36156)

fun orb_i2(b1_v36157, b2_v36158) = if b1_v36157 then
                                     1
                                   else
                                     b2_v36158

val orbclo_i71 = fn b1_v36159 b2_v36160 ⇒ orb_i2(b1_v36159, b2_v36160)

fun notb_i3(b_v36161) = if b_v36161 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v36162 ⇒ notb_i3(b_v36162)

fun compareb_i4(b1_v36163, b2_v36164) =
  if b1_v36163 then
    if b2_v36164 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v36164 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v36165 b2_v36166 ⇒ compareb_i4(b1_v36165, b2_v36166)

fun lten_i5(x_v36167, y_v36168) =
  if x_v36167 then
    if y_v36168 then
      lten_i5(x_v36167.-1, y_v36168.-1)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v36169 y_v36170 ⇒ lten_i5(x_v36169, y_v36170)

fun gten_i6(x_v36171, y_v36172) =
  if x_v36171 then
    if y_v36172 then
      gten_i6(x_v36171.-1, y_v36172.-1)
    else
      1
  else
    if y_v36172 then
      0
    else
      1

val gtenclo_i75 = fn x_v36173 y_v36174 ⇒ gten_i6(x_v36173, y_v36174)

fun ltn_i7(x_v36175, y_v36176) =
  if x_v36175 then
    if y_v36176 then
      ltn_i7(x_v36175.-1, y_v36176.-1)
    else
      0
  else
    if y_v36176 then
      1
    else
      0

val ltnclo_i76 = fn x_v36177 y_v36178 ⇒ ltn_i7(x_v36177, y_v36178)

fun gtn_i8(x_v36179, y_v36180) =
  if x_v36179 then
    if y_v36180 then
      gtn_i8(x_v36179.-1, y_v36180.-1)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v36181 y_v36182 ⇒ gtn_i8(x_v36181, y_v36182)

fun eqn_i9(x_v36183, y_v36184) =
  if x_v36183 then
    if y_v36184 then
      eqn_i9(x_v36183.-1, y_v36184.-1)
    else
      0
  else
    if y_v36184 then
      0
    else
      1

val eqnclo_i78 = fn x_v36185 y_v36186 ⇒ eqn_i9(x_v36185, y_v36186)

fun comparen_i10(n1_v36187, n2_v36188) =
  if n1_v36187 then
    if n2_v36188 then
      comparen_i10(n1_v36187.-1, n2_v36188.-1)
    else
      GT_c2
  else
    if n2_v36188 then
      LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v36189 n2_v36190 ⇒ comparen_i10(n1_v36189, n2_v36190)

fun pred_i11(x_v36191) = if x_v36191 then
                           x_v36191.-1
                         else
                           0

val predclo_i80 = fn x_v36192 ⇒ pred_i11(x_v36192)

fun addn_i12(x_v36193, y_v36194) =
  if x_v36193 then
    addn_i12(x_v36193.-1, y_v36194).+1
  else
    y_v36194

val addnclo_i81 = fn x_v36195 y_v36196 ⇒ addn_i12(x_v36195, y_v36196)

fun subn_i13(x_v36197, y_v36198) =
  if y_v36198 then
    subn_i13(pred_i11(x_v36197), y_v36198.-1)
  else
    x_v36197

val subnclo_i82 = fn x_v36199 y_v36200 ⇒ subn_i13(x_v36199, y_v36200)

fun muln_i14(x_v36201, y_v36202) =
  if x_v36201 then
    addn_i12(y_v36202, muln_i14(x_v36201.-1, y_v36202))
  else
    0

val mulnclo_i83 = fn x_v36203 y_v36204 ⇒ muln_i14(x_v36203, y_v36204)

fun divn_i15(x_v36205, y_v36206) =
  if ltn_i7(x_v36205, y_v36206) then
    0
  else
    divn_i15(subn_i13(x_v36205, y_v36206), y_v36206).+1

val divnclo_i84 = fn x_v36207 y_v36208 ⇒ divn_i15(x_v36207, y_v36208)

fun modn_i16(x_v36209, y_v36210) =
  subn_i13(x_v36209, muln_i14(divn_i15(x_v36209, y_v36210), y_v36210))

val modnclo_i85 = fn x_v36211 y_v36212 ⇒ modn_i16(x_v36211, y_v36212)

fun eqc_i17(c1_v36213, c2_v36214) =
  match c1_v36213 with
  | Char_c4 n1_v36215 ⇒
    match c2_v36214 with
    | Char_c4 n2_v36216 ⇒ eqn_i9(n1_v36215, n2_v36216)
    end
  end

val eqcclo_i86 = fn c1_v36217 c2_v36218 ⇒ eqc_i17(c1_v36217, c2_v36218)

fun comparec_i18(c1_v36219, c2_v36220) =
  match c1_v36219 with
  | Char_c4 n1_v36221 ⇒
    match c2_v36220 with
    | Char_c4 n2_v36222 ⇒ comparen_i10(n1_v36221, n2_v36222)
    end
  end

val comparecclo_i87 =
  fn c1_v36223 c2_v36224 ⇒ comparec_i18(c1_v36223, c2_v36224)

fun cats_i19(s1_v36225, s2_v36226) =
  match s1_v36225 with
  | EmptyString_c5  ⇒ s2_v36226
  | String_c6 c_v36227 s1_v36228 ⇒
    (String_c6 c_v36227 cats_i19(s1_v36228, s2_v36226))
  end

val catsclo_i88 = fn s1_v36229 s2_v36230 ⇒ cats_i19(s1_v36229, s2_v36230)

fun strlen_i20(s_v36231) =
  match s_v36231 with
  | EmptyString_c5  ⇒ 0
  | String_c6 __v36232 s_v36233 ⇒ strlen_i20(s_v36233).+1
  end

val strlenclo_i89 = fn s_v36234 ⇒ strlen_i20(s_v36234)

fun eqs_i21(s1_v36235, s2_v36236) =
  match s1_v36235 with
  | EmptyString_c5  ⇒
    match s2_v36236 with
    | EmptyString_c5  ⇒ 1 | String_c6 __v36237 __v36238 ⇒ 0
    end
  | String_c6 c1_v36239 s1_v36240 ⇒
    match s2_v36236 with
    | EmptyString_c5  ⇒ 0
    | String_c6 c2_v36241 s2_v36242 ⇒
      andb_i1(eqc_i17(c1_v36239, c2_v36241), eqs_i21(s1_v36240, s2_v36242))
    end
  end

val eqsclo_i90 = fn s1_v36243 s2_v36244 ⇒ eqs_i21(s1_v36243, s2_v36244)

fun compares_i22(s1_v36245, s2_v36246) =
  match s1_v36245 with
  | EmptyString_c5  ⇒
    match s2_v36246 with
    | EmptyString_c5  ⇒ EQ_c3 | String_c6 __v36247 __v36248 ⇒ LT_c1
    end
  | String_c6 c1_v36249 s1_v36250 ⇒
    match s2_v36246 with
    | EmptyString_c5  ⇒ GT_c2
    | String_c6 c2_v36251 s2_v36252 ⇒
      match comparec_i18(c1_v36249, c2_v36251) with
      | EQ_c3  ⇒ compares_i22(s1_v36250, s2_v36252) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v36253 s2_v36254 ⇒ compares_i22(s1_v36253, s2_v36254)

fun and_thenUUU_i61(A_v36255, B_v36256, opt_v36257, f_v36258) =
  match opt_v36257 with
  | NoneUU_c17  ⇒ NoneUU_c17 | SomeUU_c18 x_v36259 ⇒ (f_v36258) x_v36259
  end

val and_thenUUUclo_i92 =
  fn A_v36260 B_v36261 opt_v36262 ⇒
    ln f_v36263 ⇒ and_thenUUU_i61(A_v36260, B_v36261, opt_v36262, f_v36263)

fun and_thenUUL_i60(A_v36264, B_v36265, opt_v36266, f_v36267) =
  match opt_v36266 with
  | NoneUL_c15  ⇒ NoneUL_c15 | SomeUL_c16 x_v36268 ⇒ (f_v36267) x_v36268
  end

val and_thenUULclo_i93 =
  fn A_v36269 B_v36270 opt_v36271 ⇒
    ln f_v36272 ⇒ and_thenUUL_i60(A_v36269, B_v36270, opt_v36271, f_v36272)

fun and_thenULU_i59(A_v36273, B_v36274, opt_v36275, f_v36276) =
  match opt_v36275 with
  | NoneUU_c17  ⇒ NoneLU_c13 | SomeUU_c18 x_v36277 ⇒ (f_v36276) x_v36277
  end

val and_thenULUclo_i94 =
  fn A_v36278 B_v36279 opt_v36280 ⇒
    ln f_v36281 ⇒ and_thenULU_i59(A_v36278, B_v36279, opt_v36280, f_v36281)

fun and_thenULL_i58(A_v36282, B_v36283, opt_v36284, f_v36285) =
  match opt_v36284 with
  | NoneUL_c15  ⇒ NoneLL_c11 | SomeUL_c16 x_v36286 ⇒ (f_v36285) x_v36286
  end

val and_thenULLclo_i95 =
  fn A_v36287 B_v36288 opt_v36289 ⇒
    ln f_v36290 ⇒ and_thenULL_i58(A_v36287, B_v36288, opt_v36289, f_v36290)

fun and_thenLUL_i56(A_v36291, B_v36292, opt_v36293, f_v36294) =
  match opt_v36293 with
  | NoneLL_c11  ⇒ NoneUL_c15 | SomeLL_c12 x_v36295 ⇒ (f_v36294) x_v36295
  end

val and_thenLULclo_i96 =
  fn A_v36296 B_v36297 opt_v36298 ⇒
    ln f_v36299 ⇒ and_thenLUL_i56(A_v36296, B_v36297, opt_v36298, f_v36299)

fun and_thenLLL_i54(A_v36300, B_v36301, opt_v36302, f_v36303) =
  match opt_v36302 with
  | NoneLL_c11  ⇒ NoneLL_c11 | SomeLL_c12 x_v36304 ⇒ (f_v36303) x_v36304
  end

val and_thenLLLclo_i97 =
  fn A_v36305 B_v36306 opt_v36307 ⇒
    ln f_v36308 ⇒ and_thenLLL_i54(A_v36305, B_v36306, opt_v36307, f_v36308)

fun lenUU_i65(A_v36309, xs_v36310) =
  match xs_v36310 with
  | nilUU_c25  ⇒ (0, nilUU_c25)
  | consUU_c26 x_v36311 xs_v36312 ⇒
    match lenUU_i65(NULL, xs_v36312) with
    | (n_v36313, xs_v36314) ⇒
      (n_v36313.+1, (consUU_c26 x_v36311 xs_v36314))
    end
  end

val lenUUclo_i98 = fn A_v36315 xs_v36316 ⇒ lenUU_i65(A_v36315, xs_v36316)

fun lenUL_i64(A_v36317, xs_v36318) =
  match xs_v36318 with
  | nilUL_c23  ⇒ (0, nilUL_c23)
  | consUL_c24 x_v36319 xs_v36320 ⇒
    match lenUL_i64(NULL, xs_v36320) with
    | (n_v36321, xs_v36322) ⇒
      (n_v36321.+1, (consUL_c24 x_v36319 xs_v36322))
    end
  end

val lenULclo_i99 = fn A_v36323 xs_v36324 ⇒ lenUL_i64(A_v36323, xs_v36324)

fun lenLL_i62(A_v36325, xs_v36326) =
  match xs_v36326 with
  | nilLL_c19  ⇒ (0, nilLL_c19)
  | consLL_c20 x_v36327 xs_v36328 ⇒
    match lenLL_i62(NULL, xs_v36328) with
    | (n_v36329, xs_v36330) ⇒
      (n_v36329.+1, (consLL_c20 x_v36327 xs_v36330))
    end
  end

val lenLLclo_i100 = fn A_v36331 xs_v36332 ⇒ lenLL_i62(A_v36331, xs_v36332)

fun appendUU_i69(A_v36333, xs_v36334, ys_v36335) =
  match xs_v36334 with
  | nilUU_c25  ⇒ ys_v36335
  | consUU_c26 x_v36336 xs_v36337 ⇒
    (consUU_c26 x_v36336 appendUU_i69(NULL, xs_v36337, ys_v36335))
  end

val appendUUclo_i101 =
  fn A_v36338 xs_v36339 ⇒
    ln ys_v36340 ⇒ appendUU_i69(A_v36338, xs_v36339, ys_v36340)

fun appendUL_i68(A_v36341, xs_v36342, ys_v36343) =
  match xs_v36342 with
  | nilUL_c23  ⇒ ys_v36343
  | consUL_c24 x_v36344 xs_v36345 ⇒
    (consUL_c24 x_v36344 appendUL_i68(NULL, xs_v36345, ys_v36343))
  end

val appendULclo_i102 =
  fn A_v36346 xs_v36347 ⇒
    ln ys_v36348 ⇒ appendUL_i68(A_v36346, xs_v36347, ys_v36348)

fun appendLL_i66(A_v36349, xs_v36350, ys_v36351) =
  match xs_v36350 with
  | nilLL_c19  ⇒ ys_v36351
  | consLL_c20 x_v36352 xs_v36353 ⇒
    (consLL_c20 x_v36352 appendLL_i66(NULL, xs_v36353, ys_v36351))
  end

val appendLLclo_i103 =
  fn A_v36354 xs_v36355 ⇒
    ln ys_v36356 ⇒ appendLL_i66(A_v36354, xs_v36355, ys_v36356)

fun readline_i32(__v36357) =
  ln __v36358 ⇒
    let ch_v36359 = open stdin in
    let ch_v36360 = send(ch_v36359, 1) in
    let __v36361 = recv(ch_v36360) in
    match __v36361 with
    | (s_v36362, ch_v36363) ⇒
      let ch_v36364 = send(ch_v36363, 0) in s_v36362
    end

val readlineclo_i104 = fn __v36365 ⇒ readline_i32(__v36365)

fun print_i33(s_v36366) =
  ln __v36367 ⇒
    let ch_v36368 = open stdout in
    let ch_v36369 = send(ch_v36368, 1) in
    let ch_v36370 = send(ch_v36369, s_v36366) in
    let ch_v36371 = send(ch_v36370, 0) in NULL

val printclo_i105 = fn s_v36372 ⇒ print_i33(s_v36372)

fun prerr_i34(s_v36373) =
  ln __v36374 ⇒
    let ch_v36375 = open stderr in
    let ch_v36376 = send(ch_v36375, 1) in
    let ch_v36377 = send(ch_v36376, s_v36373) in
    let ch_v36378 = send(ch_v36377, 0) in NULL

val prerrclo_i106 = fn s_v36379 ⇒ prerr_i34(s_v36379)

val digits_i35 =
  (consUU_c26
    "0"
    (consUU_c26
      "1"
      (consUU_c26
        "2"
        (consUU_c26
          "3"
          (consUU_c26
            "4"
            (consUU_c26
              "5"
              (consUU_c26
                "6"
                (consUU_c26 "7" (consUU_c26 "8" (consUU_c26 "9" nilUU_c25))))))))))

fun get_at_i36(A_v36380, n_v36381, xs_v36382, a_v36383) =
  if n_v36381 then
    match xs_v36382 with
    | nilUU_c25  ⇒ a_v36383
    | consUU_c26 __v36384 xs_v36385 ⇒
      get_at_i36(NULL, n_v36381.-1, xs_v36385, a_v36383)
    end
  else
    match xs_v36382 with
    | nilUU_c25  ⇒ a_v36383 | consUU_c26 x_v36386 __v36387 ⇒ x_v36386
    end

val get_atclo_i107 =
  fn A_v36388 n_v36389 xs_v36390 a_v36391 ⇒
    get_at_i36(A_v36388, n_v36389, xs_v36390, a_v36391)

fun string_of_digit_i37(n_v36392) =
  get_at_i36(NULL, n_v36392, digits_i35, EmptyString_c5)

val string_of_digitclo_i108 = fn n_v36393 ⇒ string_of_digit_i37(n_v36393)

fun string_of_nat_i38(n_v36394) =
  let s_v36395 = string_of_digit_i37(modn_i16(n_v36394, 10)) in
  let n_v36396 = divn_i15(n_v36394, 10) in
  if ltn_i7(0, n_v36396) then
    cats_i19(string_of_nat_i38(n_v36396), s_v36395)
  else
    s_v36395

val string_of_natclo_i109 = fn n_v36397 ⇒ string_of_nat_i38(n_v36397)

fun digit_of_char_i39(c_v36398) =
  if eqc_i17(c_v36398, '0') then
    (SomeUL_c16 0)
  else
    if eqc_i17(c_v36398, '1') then
      (SomeUL_c16 1)
    else
      if eqc_i17(c_v36398, '2') then
        (SomeUL_c16 2)
      else
        if eqc_i17(c_v36398, '3') then
          (SomeUL_c16 3)
        else
          if eqc_i17(c_v36398, '4') then
            (SomeUL_c16 4)
          else
            if eqc_i17(c_v36398, '5') then
              (SomeUL_c16 5)
            else
              if eqc_i17(c_v36398, '6') then
                (SomeUL_c16 6)
              else
                if eqc_i17(c_v36398, '7') then
                  (SomeUL_c16 7)
                else
                  if eqc_i17(c_v36398, '8') then
                    (SomeUL_c16 8)
                  else
                    if eqc_i17(c_v36398, '9') then
                      (SomeUL_c16 9)
                    else
                      NoneUL_c15

val digit_of_charclo_i110 = fn c_v36399 ⇒ digit_of_char_i39(c_v36399)

fun nat_of_string_loop_i40(s_v36400, acc_v36401) =
  match s_v36400 with
  | EmptyString_c5  ⇒ (SomeUL_c16 acc_v36401)
  | String_c6 c_v36402 s_v36403 ⇒
    match digit_of_char_i39(c_v36402) with
    | NoneUL_c15  ⇒ NoneUL_c15
    | SomeUL_c16 n_v36404 ⇒
      nat_of_string_loop_i40(s_v36403,
                             addn_i12(muln_i14(acc_v36401, 10), n_v36404))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v36405 acc_v36406 ⇒ nat_of_string_loop_i40(s_v36405, acc_v36406)

fun nat_of_string_i41(s_v36407) = nat_of_string_loop_i40(s_v36407, 0)

val nat_of_stringclo_i112 = fn s_v36408 ⇒ nat_of_string_i41(s_v36408)

fun read_nat_i48(__v36409) =
  ln __v36410 ⇒
    let s_v36411 = (readline_i32(NULL)) NULL in
    match nat_of_string_i41(s_v36411) with
    | SomeUL_c16 n_v36412 ⇒ n_v36412
    | NoneUL_c15  ⇒
      let __v36413 = (print_i33("please input a natural number\n")) NULL in
      (read_nat_i48(NULL)) NULL
    end

val read_natclo_i113 = fn __v36414 ⇒ read_nat_i48(__v36414)

fun player_loop_i49(ans_v36415, repeat_v36416, c_v36417) =
  (if repeat_v36416 then
     fn c_v36418 ⇒
       ln __v36419 ⇒
         let guess_v36420 = (read_nat_i48(NULL)) NULL in
         let c_v36421 = send(c_v36418, guess_v36420) in
         let __v36422 = recv(c_v36421) in
         match __v36422 with
         | (ord_v36423, c_v36424) ⇒
           match (NULL, c_v36424) with
           | (pf_v36425, c_v36426) ⇒
             match ord_v36423 with
             | EQ_c3  ⇒
               let __v36427 = (print_i33("You Win!\n")) NULL in
               close(c_v36426)
             | LT_c1  ⇒
               let __v36428 =
                 (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                              string_of_nat_i38(repeat_v36416.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v36416.-1, c_v36426)) NULL
             | GT_c2  ⇒
               let __v36429 =
                 (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                              string_of_nat_i38(repeat_v36416.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v36416.-1, c_v36426)) NULL
             end
           end
         end
   else
     fn c_v36430 ⇒
       ln __v36431 ⇒
         let __v36432 = (print_i33("You Lose!\n")) NULL in close(c_v36430))
    c_v36417

val player_loopclo_i114 =
  fn ans_v36433 repeat_v36434 c_v36435 ⇒
    player_loop_i49(ans_v36433, repeat_v36434, c_v36435)

fun player_i50(c_v36436) =
  ln __v36437 ⇒
    let __v36438 = recv(c_v36436) in
    match __v36438 with
    | (lower_v36439, c_v36440) ⇒
      let __v36441 = recv(c_v36440) in
      match __v36441 with
      | (upper_v36442, c_v36443) ⇒
        match (NULL, c_v36443) with
        | (ans_v36444, c_v36445) ⇒
          match (NULL, c_v36445) with
          | (pf1_v36446, c_v36447) ⇒
            match (NULL, c_v36447) with
            | (pf2_v36448, c_v36449) ⇒
              let __v36450 = recv(c_v36449) in
              match __v36450 with
              | (repeat_v36451, c_v36452) ⇒
                let __v36453 =
                  (print_i33(cats_i19(cats_i19(cats_i19(cats_i19("Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v36439)),
                                                        " and "),
                                               string_of_nat_i38(upper_v36442)),
                                      ".\n")))
                    NULL
                in
                let __v36454 =
                  (print_i33(cats_i19(cats_i19("You have ",
                                               string_of_nat_i38(repeat_v36451)),
                                      " tries.\n")))
                    NULL
                in (player_loop_i49(NULL, repeat_v36451, c_v36452)) NULL
              end
            end
          end
        end
      end
    end

val playerclo_i115 = fn c_v36455 ⇒ player_i50(c_v36455)

fun server_loop_i51(ans_v36456, repeat_v36457, c_v36458) =
  (if repeat_v36457 then
     fn c_v36459 ⇒
       ln __v36460 ⇒
         let __v36461 = recv(c_v36459) in
         match __v36461 with
         | (n_v36462, c_v36463) ⇒
           let ord_v36464 = comparen_i10(ans_v36456, n_v36462) in
           let c_v36465 = send(c_v36463, ord_v36464) in
           match ord_v36464 with
           | EQ_c3  ⇒ NULL
           | LT_c1  ⇒
             (server_loop_i51(ans_v36456, repeat_v36457.-1, c_v36465)) NULL
           | GT_c2  ⇒
             (server_loop_i51(ans_v36456, repeat_v36457.-1, c_v36465)) NULL
           end
         end
   else
     fn c_v36466 ⇒ ln __v36467 ⇒ NULL)
    c_v36458

val server_loopclo_i116 =
  fn ans_v36468 repeat_v36469 c_v36470 ⇒
    server_loop_i51(ans_v36468, repeat_v36469, c_v36470)

fun server_i52(c_v36471) =
  ln __v36472 ⇒
    let c_v36473 = send(c_v36471, 1) in
    let c_v36474 = send(c_v36473, 128) in
    let c_v36475 = send(c_v36474, 7) in
    (server_loop_i51(71, 7, c_v36475)) NULL

val serverclo_i117 = fn c_v36476 ⇒ server_i52(c_v36476)

main =
  let c_v36477 = fork c_v36478 in (server_i52(c_v36478)) NULL in
  let c0_v36479 =
    fork c0_v36480 in
      let __v36481 = recv(c0_v36480) in
      match __v36481 with
      | (c_v36482, c0_v36483) ⇒
        let __v36484 = (player_i50(c_v36482)) NULL in
        let c0_v36485 = send(c0_v36483, NULL) in NULL
      end
  in
  let c0_v36486 = send(c0_v36479, c_v36477) in
  let __v36487 = recv(c0_v36486) in
  match __v36487 with
  | (__v36488, c0_v36489) ⇒ close(c0_v36489)
  end

trans3e success--------------------------

trans34 success--------------------------

