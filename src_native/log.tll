logical eq_sym‹s› (A : Type‹s›) (x : A) (y : A) : (∀ (_ : x ≡ y) → y ≡ x) = (fn (e : _) ⇒ rew [y, _ ⇒ y ≡ x] e in refl)

logical eq_trans‹s› (A : Type‹s›) (x : A) (y : A) (z : A) : (∀ (_ : x ≡ y) → (∀ (_ : y ≡ z) → x ≡ z)) = (fn (e1 : _) ⇒ (fn (e2 : _) ⇒ rew [y0, _ ⇒ x ≡ y0] e2 in e1))

logical f_equal‹s,
t› (A : Type‹s›) (B : Type‹t›) (f : (∀ (_ : A) → B)) (x : A) (y : A) : (∀ (_ : x ≡ y) → (
(f) (x)) ≡ ((f) (y))) = (fn (e : _) ⇒ rew [y, p ⇒ ((f) (x)) ≡ (
(f)
(y))] e in refl)

logical bool_absurd‹› (e : true ≡ false) : ⊥ = rew [x, _ ⇒ match x as _ in _ with true ⇒ unit‹s› | false ⇒ ⊥] e in ()

logical nat_inv‹› (n1 : nat) (n2 : nat) (e : n1.+1 ≡ n2.+1) : n1 ≡ n2 = (
(f_equal) (_) (_) (pred) (_) (_)
(e))

logical eqn_reflect‹› (m : nat) (n : nat) : (∀ (_ : ((eqn) (m)
(n)) ≡ true) → m ≡ n) = match m as m0 in (∀ (_ : ((eqn) (m0)
(n)) ≡ true) → m0 ≡ n) with O ⇒ match n as n0 in (∀ (_ : ((eqn)
(O.+0)
(n0)) ≡ true) → O.+0 ≡ n0) with O ⇒ (fn (_ : _) ⇒ refl) | S n ⇒ (fn (e : _) ⇒ absurd (
(bool_absurd)
(((eq_sym) (_) (_) (_) (e))))) | S m ⇒ match n as n0 in (∀ (_ : (
(eqn) (m.+1)
(n0)) ≡ true) → m.+1 ≡ n0) with O ⇒ (fn (e : _) ⇒ absurd ((bool_absurd)
(((eq_sym) (_) (_) (_) (e))))) | S n ⇒ (fn (e : _) ⇒ ((f_equal) (_) 
(_) ((fn (x : _) ⇒ x.+1)) (_) (_)
(((eqn_reflect) (m) (n) (e)))))

logical eqc_reflect‹› (c1 : char) (c2 : char) : (∀ (_ : ((eqc) 
(c1) (c2)) ≡ true) → c1 ≡ c2) = match c1 as c0 in (∀ (_ : ((eqc) 
(c0)
(c2)) ≡ true) → c0 ≡ c2) with Char m ⇒ match c2 as c0 in (∀ (_ : (
(eqc) (((Char) (m))) (c0)) ≡ true) → ((Char)
(m)) ≡ c0) with Char n ⇒ (fn (e : _) ⇒ let e = ((eqn_reflect) (_) 
(_) (e)) in ((f_equal) (_) (_) ((fn (x : _) ⇒ ((Char) (x)))) (_) (_)
(e)))

program contains‹› (c : char) (s : string) : bool = match s as _ in _ with EmptyString  ⇒ false | String c0
s ⇒ match ((eqc) (c)
(c0)) as _ in _ with true ⇒ true | false ⇒ ((contains) (c)
(s))

logical inductive diff‹› (ans : string) (a : string) (b : string) (df : string) : U = diff_EmptyString of ‹› {ans : string} {a : string} {b : string} {df : string} (_ : a ≡ EmptyString) (_ : b ≡ EmptyString) (_ : df ≡ EmptyString) → (
(diff‹›) (ans) (a) (b)
(df)) | diff_StringY of ‹› {ans : string} {a : string} {b : string} {df : string} (c : char) (s1 : string) (s2 : string) (s3 : string) (_ : (
(diff) (ans) (s1) (s2) (s3))) (_ : a ≡ ((String) (c)
(s1))) (_ : b ≡ ((String) (c) (s2))) (_ : df ≡ ((cats)
(((String) (((Char) (O.+89))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df)) | diff_StringI of ‹› {ans : string} {a : string} {b : string} {df : string} (c1 : char) (c2 : char) (s1 : string) (s2 : string) (s3 : string) (_ : (
(eqc) (c1) (c2)) ≡ false) (_ : ((contains) (c2)
(ans)) ≡ true) (_ : ((diff) (ans) (s1) (s2) (s3))) (_ : a ≡ ((String)
(c1) (s1))) (_ : b ≡ ((String) (c2) (s2))) (_ : df ≡ ((cats)
(((String) (((Char) (O.+73))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df)) | diff_StringN of ‹› {ans : string} {a : string} {b : string} {df : string} (c1 : char) (c2 : char) (s1 : string) (s2 : string) (s3 : string) (_ : (
(eqc) (c1) (c2)) ≡ false) (_ : ((contains) (c2)
(ans)) ≡ false) (_ : ((diff) (ans) (s1) (s2) (s3))) (_ : a ≡ ((String)
(c1) (s1))) (_ : b ≡ ((String) (c2) (s2))) (_ : df ≡ ((cats)
(((String) (((Char) (O.+78))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df))

program string_diff‹› (ans : string) (s1 : string) (s2 : string) : (∀ {_ : (
(strlen) (s1)) ≡ ((strlen) (s2))} → (∃ (df : string) ⊗ {((diff) 
(ans) (s1) (s2) (df))})) = match s1 as s0 in (∀ {_ : ((strlen)
(s0)) ≡ ((strlen) (s2))} → (∃ (df : string) ⊗ {((diff) (ans) 
(s0) (s2)
(df))})) with EmptyString  ⇒ match s2 as s0 in (∀ {_ : O.+0 ≡ (
(strlen) (s0))} → (∃ (df : string) ⊗ {((diff) (ans) (EmptyString) 
(s0)
(df))})) with EmptyString  ⇒ (fn {e : _} ⇒ ⟨EmptyString, {((diff_EmptyString)
(refl) (refl) (refl))}⟩) | String c2
s2 ⇒ (fn {e : _} ⇒ rew [x, _ ⇒ match x as _ in _ with O ⇒ unit‹s› | S _ ⇒ (∃ (df : string) ⊗ {(
(diff) (ans) (EmptyString) (((String) (c2) (s2)))
(df))})] e in ⟨⟩) | String c1
s1 ⇒ match s2 as s0 in (∀ {_ : ((strlen) (s1)).+1 ≡ ((strlen)
(s0))} → (∃ (df : string) ⊗ {((diff) (ans) (((String) (c1) (s1))) 
(s0)
(df))})) with EmptyString  ⇒ (fn {e : _} ⇒ rew [x, _ ⇒ match x as _ in _ with O ⇒ (∃ (df : string) ⊗ {(
(diff) (ans) (((String) (c1) (s1))) (EmptyString)
(df))}) | S _ ⇒ unit‹s›] e in ⟨⟩) | String c2
s2 ⇒ (fn {e : _} ⇒ let {e} = ((nat_inv) (_) (_)
(e)) in let ⟨df, {pf}⟩ = ((string_diff) (ans) (s1) (s2)
(e)) in ((match ((eqc) (c1) (c2)) as b0 in (∀ {_ : ((eqc) (c1)
          (c2)) ≡ b0} → (∃ (df : string) ⊗ {((diff) (ans)
          (((String) (c1) (s1))) (((String) (c2) (s2)))
          (df))})) with true ⇒ (fn {e1 : _} ⇒ let {e1} = ((eqc_reflect)
          (_) (_) (e1)) in let {h} = rew [c, _ ⇒ ((String) (c)
          (s2)) ≡ ((String) (c1) (s2))] e1 in refl in ⟨((cats)
          (((String) (((Char) (O.+89))) (EmptyString)))
          (df)), {((diff_StringY) (_) (_) (_) (_) (pf) (refl) (h)
          (refl))}⟩) | false ⇒ (fn {e1 : _} ⇒ ((match ((contains) 
                                                      (c2)
                                                      (ans)) as b0 in (∀ {_ : (
                                                      (contains) (c2)
                                                      (ans)) ≡ b0} → (∃ (df : string) ⊗ {(
                                                      (diff) (ans)
                                                      (((String) (c1) (s1)))
                                                      (((String) (c2) (s2)))
                                                      (df))})) with true ⇒ (fn {e2 : _} ⇒ ⟨(
                                                      (cats)
                                                      (((String)
                                                       (((Char) (O.+73)))
                                                       (EmptyString)))
                                                      (df)), {((diff_StringI)
                                                      (_) (_) (_) (_) 
                                                      (_) (e1) (e2) (pf)
                                                      (refl) (refl)
                                                      (refl))}⟩) | false ⇒ (fn {e2 : _} ⇒ ⟨(
                                                      (cats)
                                                      (((String)
                                                       (((Char) (O.+78)))
                                                       (EmptyString)))
                                                      (df)), {((diff_StringN)
                                                      (_) (_) (_) (_) 
                                                      (_) (e1) (e2) (pf)
                                                      (refl) (refl)
                                                      (refl))}⟩))
          (refl))))
(refl)))

logical diff_len‹› (ans : string) (s1 : string) (s2 : string) (df : string) (h : (
(diff) (ans) (s1) (s2) (df))) : ((strlen) (df)) ≡ ((strlen)
(s1)) = match h as _ in _ with diff_EmptyString pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen)
(df0)) ≡ O.+0] pf3 in refl | diff_StringY c s0 s3 s4 h1 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h1)) in refl | diff_StringI c1 _ s0 s3 s4 _ _ h3 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c1) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h3)) in refl | diff_StringN c1 _ s0 s3 s4 _ _ h3 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c1) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h3)) in refl

inductive word‹› : U = Word of ‹› (s : string) {pf : ((strlen)
(s)) ≡ O.+5} → ((word‹›))

logical inductive wdiff‹› (ans : word) (guess : word) (df : word) : U = diff_Word of ‹› {ans : word} {guess : word} {df : word} (s1 : string) (s2 : string) (s3 : string) (pf1 : (
(strlen) (s1)) ≡ O.+5) (pf2 : ((strlen) (s2)) ≡ O.+5) (pf3 : ((strlen)
(s3)) ≡ O.+5) (_ : ans ≡ ((Word) (s1) (pf1))) (_ : guess ≡ ((Word) 
(s2) (pf2))) (_ : df ≡ ((Word) (s3) (pf3))) (_ : ((diff) (s1) (s1) 
(s2) (s3))) → ((wdiff‹›) (ans) (guess)
(df))

program word_diff‹› (ans : word) (guess : word) : (∃ (df : word) ⊗ {(
(wdiff) (ans) (guess)
(df))}) = ((match ans as ans0 in (∀ {_ : ans ≡ ans0} → (∃ (df : word) ⊗ {(
            (wdiff) (ans) (guess) (df))})) with Word s1
            pf1 ⇒ (fn {e1 : _} ⇒ ((match guess as guess0 in (∀ {_ : guess ≡ guess0} → (∃ (df : word) ⊗ {(
                                       (wdiff) (ans) (guess)
                                       (df))})) with Word s2
                                       pf2 ⇒ (fn {e2 : _} ⇒ let {e} = (
                                       (eq_trans) (_) (_) (_) (_) (pf1)
                                       (((eq_sym) (_) (_) (_) (pf2)))) in let ⟨s3, {h}⟩ = (
                                       (string_diff) (s1) (s1) (s2)
                                       (e)) in let {e} = ((diff_len) 
                                       (_) (_) (_) (_)
                                       (h)) in let {pf} = ((eq_trans) 
                                       (_) (_) (_) (_) (e)
                                       (pf1)) in ⟨((Word) (s3)
                                       (pf)), {((diff_Word) (s1) (s2) 
                                       (s3) (pf1) (pf2) (pf) (e1) (e2) 
                                       (refl) (h))}⟩))
            (refl))))
(refl))

program eqw‹› (w1 : word) (w2 : word) : bool = match w1 as _ in _ with Word s1
_ ⇒ match w2 as _ in _ with Word s2 _ ⇒ ((eqs) (s1)
(s2))

logical wordle_loop‹› (ans : word) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ !(w : word) → !{_ : w ≡ ans} → end | S repeat ⇒ ?(guess : word) → !(b : bool) → !{_ : b ≡ (
(eqw) (ans)
(guess))} → match b as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
(wdiff) (ans) (guess) (df))} → ((wordle_loop) (ans)
(repeat))

logical wordle‹› : proto = !{ans : word} → !(repeat : nat) → (
(wordle_loop) (ans)
(repeat))

logical loop_ch‹› (ans : word) (repeat : nat) : L = ch‹((wordle_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : word) (repeat : nat) : L = hc‹((wordle_loop)
(ans)
(repeat))›

logical wordle_ch‹› : L = ch‹wordle›

logical wordle_hc‹› : L = hc‹wordle›

program read_word‹› (_ : unit‹s›) : IO word = let s ⇐ ((readline)
(())) in ((match ((eqn) (((strlen) (s))) (O.+5)) as b0 in (∀ {_ : (
           (eqn) (((strlen) (s)))
           (O.+5)) ≡ b0} → IO word) with true ⇒ (fn {e : _} ⇒ return (
           (Word) (s)
           (((eqn_reflect) (_) (_) (e))))) | false ⇒ (fn {_ : _} ⇒ let _ ⇐ (
           (print)
           (((String) (((Char) (O.+112)))
            (((String) (((Char) (O.+108)))
             (((String) (((Char) (O.+101)))
              (((String) (((Char) (O.+97)))
               (((String) (((Char) (O.+115)))
                (((String) (((Char) (O.+101)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+105)))
                   (((String) (((Char) (O.+110)))
                    (((String) (((Char) (O.+112)))
                     (((String) (((Char) (O.+117)))
                      (((String) (((Char) (O.+116)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+97)))
                         (((String) (((Char) (O.+32)))
                          (((String) (((Char) (O.+119)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+100)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+119)))
                                (((String) (((Char) (O.+105)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+104)))
                                   (((String) (((Char) (O.+32)))
                                    (((String) (((Char) (O.+108)))
                                     (((String) (((Char) (O.+101)))
                                      (((String) (((Char) (O.+110)))
                                       (((String) (((Char) (O.+103)))
                                        (((String) (((Char) (O.+116)))
                                         (((String) (((Char) (O.+104)))
                                          (((String) (((Char) (O.+32)))
                                           (((String) (((Char) (O.+111)))
                                            (((String) (((Char) (O.+102)))
                                             (((String) (((Char) (O.+32)))
                                              (((String) (((Char) (O.+53)))
                                               (((String) (((Char) (O.+10)))
                                                (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
           (read_word) (()))))
(refl))

program player_loop‹› {ans : word} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit‹s› = ((match repeat as repeat0 in (∀ (_ : (
                                (loop_hc) (ans)
                                (repeat0))) → IO unit‹s›) with O ⇒ (fn (c : _) ⇒ let ⟨ans, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in match ans as _ in _ with Word s
                                _ ⇒ let _ ⇐ ((print)
                                (((cats)
                                 (((cats)
                                  (((String) (((Char) (O.+89)))
                                   (((String) (((Char) (O.+111)))
                                    (((String) (((Char) (O.+117)))
                                     (((String) (((Char) (O.+32)))
                                      (((String) (((Char) (O.+76)))
                                       (((String) (((Char) (O.+111)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+101)))
                                          (((String) (((Char) (O.+33)))
                                           (((String) (((Char) (O.+32)))
                                            (((String) (((Char) (O.+84)))
                                             (((String) (((Char) (O.+104)))
                                              (((String) (((Char) (O.+101)))
                                               (((String) (((Char) (O.+32)))
                                                (((String) (((Char) (O.+97)))
                                                 (((String)
                                                  (((Char) (O.+110)))
                                                  (((String)
                                                   (((Char) (O.+115)))
                                                   (((String)
                                                    (((Char) (O.+119)))
                                                    (((String)
                                                     (((Char) (O.+101)))
                                                     (((String)
                                                      (((Char) (O.+114)))
                                                      (((String)
                                                       (((Char) (O.+32)))
                                                       (((String)
                                                        (((Char) (O.+105)))
                                                        (((String)
                                                         (((Char) (O.+115)))
                                                         (((String)
                                                          (((Char) (O.+32)))
                                                          (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))
                                  (s)))
                                 (((String) (((Char) (O.+46)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                                (read_word) (())) in let c ⇐ ((send c)
                                (guess)) in let ⟨b, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                                (match b as b0 in (∀ (_ : hc‹match b0 as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
                                 (wdiff) (ans) (guess)
                                 (df))} → ((wordle_loop) (ans)
                                 (repeat))›) ⊸ IO unit‹s›) with true ⇒ (ln (c : _) ⇒ let _ ⇐ (
                                 (print)
                                 (((String) (((Char) (O.+89)))
                                  (((String) (((Char) (O.+111)))
                                   (((String) (((Char) (O.+117)))
                                    (((String) (((Char) (O.+32)))
                                     (((String) (((Char) (O.+87)))
                                      (((String) (((Char) (O.+105)))
                                       (((String) (((Char) (O.+110)))
                                        (((String) (((Char) (O.+33)))
                                         (((String) (((Char) (O.+10)))
                                          (EmptyString)))))))))))))))))))) in close c) | false ⇒ (ln (c : _) ⇒ let ⟨diff, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in match diff as _ in _ with Word s
                                 _ ⇒ let _ ⇐ ((print)
                                 (((cats)
                                  (((cats)
                                   (((cats)
                                    (((cats)
                                     (((String) (((Char) (O.+73)))
                                      (((String) (((Char) (O.+110)))
                                       (((String) (((Char) (O.+99)))
                                        (((String) (((Char) (O.+111)))
                                         (((String) (((Char) (O.+114)))
                                          (((String) (((Char) (O.+114)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+99)))
                                             (((String) (((Char) (O.+116)))
                                              (((String) (((Char) (O.+44)))
                                               (((String) (((Char) (O.+32)))
                                                (((String)
                                                 (((Char) (O.+104)))
                                                 (((String)
                                                  (((Char) (O.+105)))
                                                  (((String)
                                                   (((Char) (O.+110)))
                                                   (((String)
                                                    (((Char) (O.+116)))
                                                    (((String)
                                                     (((Char) (O.+58)))
                                                     (((String)
                                                      (((Char) (O.+32)))
                                                      (EmptyString)))))))))))))))))))))))))))))))))))
                                     (s)))
                                    (((String) (((Char) (O.+46)))
                                     (((String) (((Char) (O.+32)))
                                      (((String) (((Char) (O.+89)))
                                       (((String) (((Char) (O.+111)))
                                        (((String) (((Char) (O.+117)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+104)))
                                           (((String) (((Char) (O.+97)))
                                            (((String) (((Char) (O.+118)))
                                             (((String) (((Char) (O.+101)))
                                              (((String) (((Char) (O.+32)))
                                               (EmptyString)))))))))))))))))))))))))
                                   (((string_of_nat) (repeat)))))
                                  (((String) (((Char) (O.+32)))
                                   (((String) (((Char) (O.+109)))
                                    (((String) (((Char) (O.+111)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+101)))
                                       (((String) (((Char) (O.+32)))
                                        (((String) (((Char) (O.+116)))
                                         (((String) (((Char) (O.+114)))
                                          (((String) (((Char) (O.+105)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+115)))
                                             (((String) (((Char) (O.+46)))
                                              (((String) (((Char) (O.+10)))
                                               (EmptyString)))))))))))))))))))))))))))))) in (
                                 (player_loop) (ans) (repeat) (c))))
                                (c))))
(c))

program player‹› (c : wordle_hc) : IO unit‹s› = let ⟨{ans}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((String) (((Char) (O.+87)))
 (((String) (((Char) (O.+111)))
  (((String) (((Char) (O.+114)))
   (((String) (((Char) (O.+100)))
    (((String) (((Char) (O.+108)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+71)))
        (((String) (((Char) (O.+97)))
         (((String) (((Char) (O.+109)))
          (((String) (((Char) (O.+101)))
           (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))) in let _ ⇐ (
(print)
(((String) (((Char) (O.+80)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+103)))
        (((String) (((Char) (O.+117)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+115)))
           (((String) (((Char) (O.+115)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+119)))
                (((String) (((Char) (O.+111)))
                 (((String) (((Char) (O.+114)))
                  (((String) (((Char) (O.+100)))
                   (((String) (((Char) (O.+32)))
                    (((String) (((Char) (O.+111)))
                     (((String) (((Char) (O.+102)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+108)))
                        (((String) (((Char) (O.+101)))
                         (((String) (((Char) (O.+110)))
                          (((String) (((Char) (O.+103)))
                           (((String) (((Char) (O.+116)))
                            (((String) (((Char) (O.+104)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+53)))
                               (((String) (((Char) (O.+46)))
                                (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

logical inductive at‹› (A : U) (x : A) (n : nat) (xs : ((list‹_, U›)
(A))) : U = at_O of ‹› {A : U} {x : A} {n : nat} {xs : ((list‹_, U›)
(A))} (xs0 : ((list) (A))) (_ : n ≡ O.+0) (_ : xs ≡ ((cons) (x)
(xs0))) → ((at‹›) (A) (x) (n)
(xs)) | at_S of ‹› {A : U} {x : A} {n : nat} {xs : ((list‹_, U›)
(A))} (n0 : nat) (x0 : A) (xs0 : ((list) (A))) (h : ((at) (A) (x) (n0)
(xs0))) (_ : n ≡ n0.+1) (_ : xs ≡ ((cons) (x0) (xs0))) → ((at‹›)
(A) (x) (n)
(xs))

program get_at‹› {A : U} (n : nat) (xs : ((list) (A))) : (∀ {_ : (
(ltn) (n) (((llen) (_) (xs)))) ≡ true} → (∃ (x : A) ⊗ {((at) 
(_) (x) (n) (xs))})) = match xs as xs0 in (∀ {_ : ((ltn) (n)
(((llen) (_) (xs0)))) ≡ true} → (∃ (x : A) ⊗ {((at) (_) (x) (n)
(xs0))})) with nil  ⇒ (fn {e : _} ⇒ rew [b, _ ⇒ match b as _ in _ with true ⇒ (∃ (x : A) ⊗ {(
(at) (_) (x) (n) (nil))}) | false ⇒ unit‹s›] e in ⟨⟩) | cons x
xs ⇒ match n as n0 in (∀ {_ : ((ltn) (n0)
(((llen) (_) (xs)).+1)) ≡ true} → (∃ (x0 : A) ⊗ {((at) (_) (x0) 
(n0) (((cons) (x) (xs))))})) with O ⇒ (fn {e : _} ⇒ ⟨x, {((at_O) 
(xs) (refl)
(refl))}⟩) | S n ⇒ (fn {e : _} ⇒ let ⟨x0, {pf}⟩ = ((get_at) 
(_) (n) (xs) (e)) in ⟨x0, {((at_S) (_) (_) (_) (pf) (refl)
(refl))}⟩)

program rand_word‹› (_ : unit‹s›) : IO word = let words = (((cons)
(((Word)
 (((String) (((Char) (O.+114)))
  (((String) (((Char) (O.+111)))
   (((String) (((Char) (O.+117)))
    (((String) (((Char) (O.+116)))
     (((String) (((Char) (O.+101))) (EmptyString)))))))))))
 (refl)))
(((cons)
 (((Word)
  (((String) (((Char) (O.+99)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+115)))
      (((String) (((Char) (O.+104))) (EmptyString)))))))))))
  (refl)))
 (((cons)
  (((Word)
   (((String) (((Char) (O.+99)))
    (((String) (((Char) (O.+108)))
     (((String) (((Char) (O.+111)))
      (((String) (((Char) (O.+119)))
       (((String) (((Char) (O.+110))) (EmptyString)))))))))))
   (refl)))
  (((cons)
   (((Word)
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+104)))
      (((String) (((Char) (O.+97)))
       (((String) (((Char) (O.+107)))
        (((String) (((Char) (O.+121))) (EmptyString)))))))))))
    (refl)))
   (((cons)
    (((Word)
     (((String) (((Char) (O.+118)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+103)))
        (((String) (((Char) (O.+97)))
         (((String) (((Char) (O.+110))) (EmptyString)))))))))))
     (refl)))
    (((cons)
     (((Word)
      (((String) (((Char) (O.+112)))
       (((String) (((Char) (O.+111)))
        (((String) (((Char) (O.+119)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+114))) (EmptyString)))))))))))
      (refl)))
     (((cons)
      (((Word)
       (((String) (((Char) (O.+116)))
        (((String) (((Char) (O.+114)))
         (((String) (((Char) (O.+117)))
          (((String) (((Char) (O.+115)))
           (((String) (((Char) (O.+116))) (EmptyString)))))))))))
       (refl)))
      (((cons)
       (((Word)
        (((String) (((Char) (O.+101)))
         (((String) (((Char) (O.+110)))
          (((String) (((Char) (O.+106)))
           (((String) (((Char) (O.+111)))
            (((String) (((Char) (O.+121))) (EmptyString)))))))))))
        (refl)))
       (((cons)
        (((Word)
         (((String) (((Char) (O.+98)))
          (((String) (((Char) (O.+114)))
           (((String) (((Char) (O.+97)))
            (((String) (((Char) (O.+105)))
             (((String) (((Char) (O.+110))) (EmptyString)))))))))))
         (refl)))
        (((cons)
         (((Word)
          (((String) (((Char) (O.+97)))
           (((String) (((Char) (O.+100)))
            (((String) (((Char) (O.+111)))
             (((String) (((Char) (O.+112)))
              (((String) (((Char) (O.+116))) (EmptyString)))))))))))
          (refl)))
         (((cons)
          (((Word)
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+111)))
             (((String) (((Char) (O.+119)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+114))) (EmptyString)))))))))))
           (refl)))
          (((cons)
           (((Word)
            (((String) (((Char) (O.+115)))
             (((String) (((Char) (O.+104)))
              (((String) (((Char) (O.+97)))
               (((String) (((Char) (O.+100)))
                (((String) (((Char) (O.+101))) (EmptyString)))))))))))
            (refl)))
           (((cons)
            (((Word)
             (((String) (((Char) (O.+100)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+108)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+121))) (EmptyString)))))))))))
             (refl)))
            (((cons)
             (((Word)
              (((String) (((Char) (O.+116)))
               (((String) (((Char) (O.+119)))
                (((String) (((Char) (O.+105)))
                 (((String) (((Char) (O.+115)))
                  (((String) (((Char) (O.+116))) (EmptyString)))))))))))
              (refl)))
             (((cons)
              (((Word)
               (((String) (((Char) (O.+97)))
                (((String) (((Char) (O.+108)))
                 (((String) (((Char) (O.+101)))
                  (((String) (((Char) (O.+114)))
                   (((String) (((Char) (O.+116))) (EmptyString)))))))))))
               (refl)))
              (((cons)
               (((Word)
                (((String) (((Char) (O.+99)))
                 (((String) (((Char) (O.+104)))
                  (((String) (((Char) (O.+111)))
                   (((String) (((Char) (O.+107)))
                    (((String) (((Char) (O.+101))) (EmptyString)))))))))))
                (refl)))
               (((cons)
                (((Word)
                 (((String) (((Char) (O.+115)))
                  (((String) (((Char) (O.+112)))
                   (((String) (((Char) (O.+108)))
                    (((String) (((Char) (O.+105)))
                     (((String) (((Char) (O.+116))) (EmptyString)))))))))))
                 (refl)))
                (((cons)
                 (((Word)
                  (((String) (((Char) (O.+114)))
                   (((String) (((Char) (O.+104)))
                    (((String) (((Char) (O.+121)))
                     (((String) (((Char) (O.+109)))
                      (((String) (((Char) (O.+101))) (EmptyString)))))))))))
                  (refl)))
                 (((cons)
                  (((Word)
                   (((String) (((Char) (O.+109)))
                    (((String) (((Char) (O.+117)))
                     (((String) (((Char) (O.+100)))
                      (((String) (((Char) (O.+100)))
                       (((String) (((Char) (O.+121))) (EmptyString)))))))))))
                   (refl)))
                  (((cons)
                   (((Word)
                    (((String) (((Char) (O.+112)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+97)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+116))) (EmptyString)))))))))))
                    (refl)))
                   (nil)))))))))))))))))))))))))))))))))))))))) : ((list‹_,
                                                                    U›)
(_))) in let r ⇐ rand O.+0 O.+19 in match r as _ in _ with Between n _
pf ⇒ let ⟨w, {_}⟩ = ((get_at) (_) (n) (words)
(pf)) in return w

program server_loop‹› (ans : word) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit‹s› = ((match repeat as repeat0 in (∀ (_ : (
                                (loop_ch) (ans)
                                (repeat0))) → IO unit‹s›) with O ⇒ (fn (c : _) ⇒ let c ⇐ (
                                (send c) (ans)) in let c ⇐ ((send c)
                                (refl)) in close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨guess, c⟩ ⇐ recv c in let b = (
                                (eqw) (ans) (guess)) in let c ⇐ ((send c)
                                (b)) in let c ⇐ ((send c)
                                (refl)) in ((match b as b0 in (∀ (_ : ch‹match b0 as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
                                             (wdiff) (ans) (guess)
                                             (df))} → ((wordle_loop) 
                                             (ans)
                                             (repeat))›) ⊸ IO unit‹s›) with true ⇒ (ln (c : _) ⇒ close c) | false ⇒ (ln (c : _) ⇒ let ⟨df, {pf}⟩ = (
                                             (word_diff) (ans)
                                             (guess)) in let c ⇐ ((send c)
                                             (df)) in let c ⇐ ((send c)
                                             (pf)) in ((server_loop) 
                                             (ans) (repeat) (c))))
                                (c))))
(c))

program server‹› (c : wordle_ch) : IO unit‹s› = let repeat = O.+6 in let ans ⇐ (
(rand_word) (())) in let c ⇐ ((send c) (ans)) in let c ⇐ ((send c)
(repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit‹s› = let c ⇐ fork (c : wordle_ch) in (
(server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : wordle_hc) → !(_ : unit‹s›) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v718 : bool) (b2_v719 : bool) ⇒
    match b1_v718 as __v720 in ??1 with
    | true ⇒ b2_v719 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v723 : bool) (b2_v724 : bool) ⇒
    match b1_v723 as __v725 in ??2 with
    | true ⇒ true | false ⇒ b2_v724
    end

program notb_i3 : bool → bool =
  fn (b_v727 : bool) ⇒
    match b_v727 as __v728 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v731 : bool) (b2_v732 : bool) ⇒
    match b1_v731 as __v733 in ??4 with
    | true ⇒
      match b2_v732 as __v734 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v732 as __v735 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v738 : nat) (y_v739 : nat) ⇒
    match x_v738 as __v740 in ??7 with
    | O ⇒ true
    | S x_v741 ⇒
      match y_v739 as __v742 in ??8 with
      | O ⇒ false | S y_v743 ⇒ (lten_i5 x_v741 y_v743)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v746 : nat) (y_v747 : nat) ⇒ (lten_i5 x_v746.+1 y_v747)

program gten_i7 : nat → nat → bool =
  fn (x_v750 : nat) (y_v751 : nat) ⇒ (lten_i5 y_v751 x_v750)

program gtn_i8 : nat → nat → bool =
  fn (x_v754 : nat) (y_v755 : nat) ⇒ (ltn_i6 y_v755 x_v754)

program eqn_i9 : nat → nat → bool =
  fn (x_v758 : nat) (y_v759 : nat) ⇒
    match x_v758 as __v760 in ??9 with
    | O ⇒
      match y_v759 as __v761 in ??11 with
      | O ⇒ true | S __v762 ⇒ false
      end
    | S x_v763 ⇒
      match y_v759 as __v764 in ??10 with
      | O ⇒ false | S y_v765 ⇒ (eqn_i9 x_v763 y_v765)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v768 : nat) (n2_v769 : nat) ⇒
    match n1_v768 as __v770 in ??12 with
    | O ⇒
      match n2_v769 as __v771 in ??14 with
      | O ⇒ EQ_c3‹› | S __v772 ⇒ LT_c1‹›
      end
    | S n1_v773 ⇒
      match n2_v769 as __v774 in ??13 with
      | O ⇒ GT_c2‹› | S n2_v775 ⇒ (comparen_i10 n1_v773 n2_v775)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v777 : nat) ⇒
    match x_v777 as __v778 in ??15 with
    | O ⇒ 0 | S x_v779 ⇒ x_v779
    end

program addn_i12 : nat → nat → nat =
  fn (x_v782 : nat) (y_v783 : nat) ⇒
    match x_v782 as __v784 in ??16 with
    | O ⇒ y_v783 | S x_v785 ⇒ (addn_i12 x_v785 y_v783).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v788 : nat) (y_v789 : nat) ⇒
    match y_v789 as __v790 in ??17 with
    | O ⇒ x_v788 | S y_v791 ⇒ (subn_i13 (pred_i11 x_v788) y_v791)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v794 : nat) (y_v795 : nat) ⇒
    match x_v794 as __v796 in ??18 with
    | O ⇒ 0 | S x_v797 ⇒ (addn_i12 y_v795 (muln_i14 x_v797 y_v795))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v800 : nat) (y_v801 : nat) ⇒
    match (ltn_i6 x_v800 y_v801) as __v802 in ??19 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v800 y_v801) y_v801).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v805 : nat) (y_v806 : nat) ⇒
    (subn_i13 x_v805 (muln_i14 (divn_i15 x_v805 y_v806) y_v806))

inductive between_d2 (lower_v807 : nat) (upper_v808 : nat) : L =
| Between_c4 of
    (lower_v809 : nat) (upper_v810 : nat) (n_v811 : nat)
    {pf1_v812 : (lten_i5 lower_v809 n_v811) ≡ true}
    {pf2_v813 : (lten_i5 n_v811 upper_v810) ≡ true}
    : (between_d2 lower_v809 upper_v810)

inductive char_d3 : U =
| Char_c5 of (n_v814 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v817 : char_d3) (c2_v818 : char_d3) ⇒
    match c1_v817 as __v819 in ??22 with
    | Char_c5 n1_v820 ⇒
      match c2_v818 as __v821 in ??23 with
      | Char_c5 n2_v822 ⇒ (eqn_i9 n1_v820 n2_v822)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v825 : char_d3) (c2_v826 : char_d3) ⇒
    match c1_v825 as __v827 in ??24 with
    | Char_c5 n1_v828 ⇒
      match c2_v826 as __v829 in ??25 with
      | Char_c5 n2_v830 ⇒ (comparen_i10 n1_v828 n2_v830)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v831 : char_d3) (s_v832 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v835 : string_d4) (s2_v836 : string_d4) ⇒
    match s1_v835 as __v837 in ??26 with
    | EmptyString_c6  ⇒ s2_v836
    | String_c7 c_v838 s1_v839 ⇒
      (String_c7‹› c_v838 (cats_i19 s1_v839 s2_v836))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v841 : string_d4) ⇒
    match s_v841 as __v842 in ??27 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v843 s_v844 ⇒ (strlen_i20 s_v844).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v847 : string_d4) (s2_v848 : string_d4) ⇒
    match s1_v847 as __v849 in ??28 with
    | EmptyString_c6  ⇒
      match s2_v848 as __v850 in ??30 with
      | EmptyString_c6  ⇒ true | String_c7 __v851 __v852 ⇒ false
      end
    | String_c7 c1_v853 s1_v854 ⇒
      match s2_v848 as __v855 in ??29 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v856 s2_v857 ⇒
        (andb_i1 (eqc_i17 c1_v853 c2_v856) (eqs_i21 s1_v854 s2_v857))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v860 : string_d4) (s2_v861 : string_d4) ⇒
    match s1_v860 as __v862 in ??31 with
    | EmptyString_c6  ⇒
      match s2_v861 as __v863 in ??34 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v864 __v865 ⇒ LT_c1‹›
      end
    | String_c7 c1_v866 s1_v867 ⇒
      match s2_v861 as __v868 in ??32 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v869 s2_v870 ⇒
        match (comparec_i18 c1_v866 c2_v869) as __v871 in ??33 with
        | EQ_c3  ⇒ (compares_i22 s1_v867 s2_v870) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s872, t_s873›
  (A_v874 : Type‹s_s872›) : Type‹t_s873›
=
| None_c8 of
    ‹s_s875, t_s876› (A_v877 : Type‹s_s875›)
    : (option_d5‹s_s875, t_s876› A_v877)
| Some_c9 of
    ‹s_s878, t_s879› (A_v880 : Type‹s_s878›) (x_v881 : A_v880)
    : (option_d5‹s_s878, t_s879› A_v880)

program and_then_i23 ‹s_s882, r_s883, t_s884› :
  ∀ {A_v885 : Type‹s_s882›} →
    ∀ {B_v886 : Type‹r_s883›} →
      (option_d5‹??35, t_s884› A_v885) →
        A_v885 → (option_d5‹??36, t_s884› B_v886) ⊸
          (option_d5‹??37, t_s884› B_v886)
=
  fn {A_v890 : Type‹s_s882›} {B_v891 : Type‹r_s883›}
     (opt_v892 : (option_d5‹??35, t_s884› A_v890)) ⇒
    ln (f_v893 : ??38) ⇒
      match opt_v892 as __v894 in ??39 with
      | None_c8  ⇒ None_c8‹??42, ??41›
      | Some_c9 x_v895 ⇒ (f_v893 x_v895)
      end

inductive list_d6 ‹s_s896, t_s897›
  (A_v898 : Type‹s_s896›) : Type‹t_s897›
=
| nil_c10 of
    ‹s_s899, t_s900› (A_v901 : Type‹s_s899›)
    : (list_d6‹s_s899, t_s900› A_v901)
| cons_c11 of
    ‹s_s902, t_s903› (A_v904 : Type‹s_s902›) (hd_v905 : A_v904)
    (tl_v906 : (list_d6‹s_s902, t_s903› A_v904))
    : (list_d6‹s_s902, t_s903› A_v904)

logical llen_i24 ‹s_s907, t_s908› :
  ∀ (A_v909 : Type‹s_s907›) →
    (list_d6‹s_s907, t_s908› A_v909) → nat
=
  fn (A_v911 : Type‹s_s907›)
     (xs_v912 : (list_d6‹s_s907, t_s908› A_v911)) ⇒
    match xs_v912 as __v913 in ??43 with
    | nil_c10  ⇒ 0
    | cons_c11 x_v914 xs_v915 ⇒ (llen_i24‹??46, ??45› ??44 xs_v915).+1
    end

program len_i25 ‹s_s916, t_s917› :
  ∀ {A_v918 : Type‹s_s916›} →
    (list_d6‹??47, t_s917› A_v918) →
      nat ⊗ (list_d6‹??48, t_s917› A_v918)
=
  fn {A_v921 : Type‹s_s916›}
     (xs_v922 : (list_d6‹??47, t_s917› A_v921)) ⇒
    match xs_v922 as __v923 in ??49 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??59, ??58›⟩
    | cons_c11 x_v924 xs_v925 ⇒
      match (len_i25‹??52, ??51› ??50 xs_v925) as __v926 in ??53 with
      | ⟨n_v927, xs_v928⟩ ⇒
        ⟨n_v927.+1, (cons_c11‹??56, ??55› x_v924 xs_v928)⟩
      end
    end

program append_i26 ‹s_s929, t_s930› :
  ∀ {A_v931 : Type‹s_s929›} →
    (list_d6‹??60, t_s930› A_v931) →
      (list_d6‹??61, t_s930› A_v931) ⊸ (list_d6‹??63, ??62› A_v931)
=
  fn {A_v934 : Type‹s_s929›}
     (xs_v935 : (list_d6‹??60, t_s930› A_v934)) ⇒
    ln (ys_v936 : ??64) ⇒
      match xs_v935 as __v937 in ??65 with
      | nil_c10  ⇒ ys_v936
      | cons_c11 x_v938 xs_v939 ⇒
        (cons_c11‹??71, ??70›
          x_v938 (append_i26‹??68, ??67› ??66 xs_v939 ys_v936))
      end

logical stdin_rec_i27 : unit‹U› → proto =
  fn (__v941 : unit‹U›) ⇒
    ⇑(b_v942 : bool) ⇒
      match b_v942 as __v943 in ??72 with
      | true ⇒ ⇓(__v944 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit‹U› → proto =
  fn (__v946 : unit‹U›) ⇒
    ⇑(b_v947 : bool) ⇒
      match b_v947 as __v948 in ??73 with
      | true ⇒ ⇑(__v949 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit‹U› → proto =
  fn (__v951 : unit‹U›) ⇒
    ⇑(b_v952 : bool) ⇒
      match b_v952 as __v953 in ??74 with
      | true ⇒ ⇑(__v954 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit‹U› → IO string_d4 =
  fn (__v956 : unit‹U›) ⇒
    let ch_v957 ⇐ open stdin in
    let ch_v958 ⇐ (send ch_v957 true) in
    let __v959 ⇐ recv ch_v958 in
    match __v959 as __v960 in ??75 with
    | ⟨s_v961, ch_v962⟩ ⇒
      let ch_v963 ⇐ (send ch_v962 false) in
      let __v964 ⇐ close ch_v963 in return s_v961
    end

program print_i34 : string_d4 → IO unit‹U› =
  fn (s_v966 : string_d4) ⇒
    let ch_v967 ⇐ open stdout in
    let ch_v968 ⇐ (send ch_v967 true) in
    let ch_v969 ⇐ (send ch_v968 s_v966) in
    let ch_v970 ⇐ (send ch_v969 false) in close ch_v970

program prerr_i35 : string_d4 → IO unit‹U› =
  fn (s_v972 : string_d4) ⇒
    let ch_v973 ⇐ open stderr in
    let ch_v974 ⇐ (send ch_v973 true) in
    let ch_v975 ⇐ (send ch_v974 s_v972) in
    let ch_v976 ⇐ (send ch_v975 false) in close ch_v976

program digits_i36 : (list_d6‹??76, U› ??77) =
  (cons_c11‹??110, ??109›
    "0"
    (cons_c11‹??107, ??106›
      "1"
      (cons_c11‹??104, ??103›
        "2"
        (cons_c11‹??101, ??100›
          "3"
          (cons_c11‹??98, ??97›
            "4"
            (cons_c11‹??95, ??94›
              "5"
              (cons_c11‹??92, ??91›
                "6"
                (cons_c11‹??89, ??88›
                  "7"
                  (cons_c11‹??86, ??85›
                    "8"
                    (cons_c11‹??83, ??82› "9" nil_c10‹??80, ??79›))))))))))

program get_at_i37 :
  ∀ {A_v977 : U} →
    nat → (list_d6‹??111, U› A_v977) → A_v977 → A_v977
=
  fn {A_v981 : U} (n_v982 : nat) (xs_v983 : (list_d6‹??111, U› A_v981))
     (a_v984 : A_v981) ⇒
    match n_v982 as __v985 in ??112 with
    | O ⇒
      match xs_v983 as __v986 in ??115 with
      | nil_c10  ⇒ a_v984 | cons_c11 x_v987 __v988 ⇒ x_v987
      end
    | S n_v989 ⇒
      match xs_v983 as __v990 in ??113 with
      | nil_c10  ⇒ a_v984
      | cons_c11 __v991 xs_v992 ⇒ (get_at_i37 ??114 n_v989 xs_v992 a_v984)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v994 : nat) ⇒
    (get_at_i37 ??116 n_v994 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v996 : nat) ⇒
    let s_v997 = (string_of_digit_i38 (modn_i16 n_v996 10)) in
    let n_v998 = (divn_i15 n_v996 10) in
    match (ltn_i6 0 n_v998) as __v999 in ??117 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v998) s_v997)
    | false ⇒ s_v997
    end

program digit_of_char_i40 : char_d3 → (option_d5‹??118, L› nat) =
  fn (c_v1001 : char_d3) ⇒
    match (eqc_i17 c_v1001 '0') as __v1002 in ??119 with
    | true ⇒ (Some_c9‹??161, ??160› 0)
    | false ⇒
      match (eqc_i17 c_v1001 '1') as __v1003 in ??120 with
      | true ⇒ (Some_c9‹??158, ??157› 1)
      | false ⇒
        match (eqc_i17 c_v1001 '2') as __v1004 in ??121 with
        | true ⇒ (Some_c9‹??155, ??154› 2)
        | false ⇒
          match (eqc_i17 c_v1001 '3') as __v1005 in ??122 with
          | true ⇒ (Some_c9‹??152, ??151› 3)
          | false ⇒
            match (eqc_i17 c_v1001 '4') as __v1006 in ??123 with
            | true ⇒ (Some_c9‹??149, ??148› 4)
            | false ⇒
              match (eqc_i17 c_v1001 '5') as __v1007 in ??124 with
              | true ⇒ (Some_c9‹??146, ??145› 5)
              | false ⇒
                match (eqc_i17 c_v1001 '6') as __v1008 in ??125 with
                | true ⇒ (Some_c9‹??143, ??142› 6)
                | false ⇒
                  match (eqc_i17 c_v1001 '7') as __v1009 in ??126 with
                  | true ⇒ (Some_c9‹??140, ??139› 7)
                  | false ⇒
                    match (eqc_i17 c_v1001 '8') as __v1010 in ??127 with
                    | true ⇒ (Some_c9‹??137, ??136› 8)
                    | false ⇒
                      match (eqc_i17 c_v1001 '9') as __v1011 in ??128 with
                      | true ⇒ (Some_c9‹??134, ??133› 9)
                      | false ⇒ None_c8‹??131, ??130›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹??162, L› nat)
=
  fn (s_v1014 : string_d4) (acc_v1015 : nat) ⇒
    match s_v1014 as __v1016 in ??163 with
    | EmptyString_c6  ⇒ (Some_c9‹??170, ??169› acc_v1015)
    | String_c7 c_v1017 s_v1018 ⇒
      match (digit_of_char_i40 c_v1017) as __v1019 in ??164 with
      | None_c8  ⇒ None_c8‹??167, ??166›
      | Some_c9 n_v1020 ⇒
        (nat_of_string_loop_i41
          s_v1018 (addn_i12 (muln_i14 acc_v1015 10) n_v1020))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹??171, L› nat) =
  fn (s_v1022 : string_d4) ⇒ (nat_of_string_loop_i41 s_v1022 0)

logical eq_sym_i43 ‹s_s1023› :
  ∀ (A_v1024 : Type‹s_s1023›) →
    ∀ (x_v1025 : A_v1024) →
      ∀ (y_v1026 : A_v1024) →
        ∀ (__v1027 : x_v1025 ≡ y_v1026) → y_v1026 ≡ x_v1025
=
  fn (A_v1028 : Type‹s_s1023›) (x_v1029 : A_v1028) (y_v1030 : A_v1028)
     (e_v1031 : ??174) ⇒
    rew [y_v1032, __v1033 ⇒ y_v1032 ≡ x_v1029] e_v1031 in refl ??175

logical eq_trans_i44 ‹s_s1034› :
  ∀ (A_v1035 : Type‹s_s1034›) →
    ∀ (x_v1036 : A_v1035) →
      ∀ (y_v1037 : A_v1035) →
        ∀ (z_v1038 : A_v1035) →
          ∀ (__v1039 : x_v1036 ≡ y_v1037) →
            ∀ (__v1040 : y_v1037 ≡ z_v1038) → x_v1036 ≡ z_v1038
=
  fn (A_v1041 : Type‹s_s1034›) (x_v1042 : A_v1041) (y_v1043 : A_v1041)
     (z_v1044 : A_v1041) (e1_v1045 : ??180) (e2_v1046 : ??181) ⇒
    rew [y0_v1047, __v1048 ⇒ x_v1042 ≡ y0_v1047] e2_v1046 in e1_v1045

logical f_equal_i45 ‹s_s1049, t_s1050› :
  ∀ (A_v1051 : Type‹s_s1049›) →
    ∀ (B_v1052 : Type‹t_s1050›) →
      ∀ (f_v1053 : A_v1051 → B_v1052) →
        ∀ (x_v1055 : A_v1051) →
          ∀ (y_v1056 : A_v1051) →
            ∀ (__v1057 : x_v1055 ≡ y_v1056) →
              (f_v1053 x_v1055) ≡ (f_v1053 y_v1056)
=
  fn (A_v1058 : Type‹s_s1049›) (B_v1059 : Type‹t_s1050›)
     (f_v1060 : A_v1058 → B_v1059) (x_v1061 : A_v1058) (y_v1062 : A_v1058)
     (e_v1063 : ??185) ⇒
    rew [y_v1065, p_v1066 ⇒ (f_v1060 x_v1061) ≡ (f_v1060 y_v1065)]
      e_v1063 in
    refl ??186

logical bool_absurd_i46 : true ≡ false → ⊥ =
  fn (e_v1068 : true ≡ false) ⇒
    rew [x_v1069, __v1070 ⇒
      match x_v1069 as __v1071 in ??189 with
      | true ⇒ unit‹U› | false ⇒ ⊥
      end] e_v1068 in
    ()

logical nat_inv_i47 :
  ∀ (n1_v1072 : nat) →
    ∀ (n2_v1073 : nat) →
      ∀ (e_v1074 : n1_v1072.+1 ≡ n2_v1073.+1) → n1_v1072 ≡ n2_v1073
=
  fn (n1_v1075 : nat) (n2_v1076 : nat)
     (e_v1077 : n1_v1075.+1 ≡ n2_v1076.+1) ⇒
    (f_equal_i45‹??197, ??196› ??195 ??194 pred_i11 ??193 ??192 e_v1077)

logical eqn_reflect_i48 :
  ∀ (m_v1078 : nat) →
    ∀ (n_v1079 : nat) →
      ∀ (__v1080 : (eqn_i9 m_v1078 n_v1079) ≡ true) →
        m_v1078 ≡ n_v1079
=
  fn (m_v1081 : nat) (n_v1082 : nat) ⇒
    match m_v1081 as m0_v1083 in
      ∀ (__v1084 : (eqn_i9 m0_v1083 n_v1082) ≡ true) →
        m0_v1083 ≡ n_v1082 with
    | O ⇒
      match n_v1082 as n0_v1085 in
        ∀ (__v1086 : (eqn_i9 0 n0_v1085) ≡ true) → 0 ≡ n0_v1085 with
      | O ⇒ fn (__v1087 : ??226) ⇒ refl ??227
      | S n_v1088 ⇒
        fn (e_v1089 : ??220) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹??224› ??223 ??222 ??221 e_v1089))
      end
    | S m_v1090 ⇒
      match n_v1082 as n0_v1091 in
        ∀ (__v1092 : (eqn_i9 m_v1090.+1 n0_v1091) ≡ true) →
          m_v1090.+1 ≡ n0_v1091 with
      | O ⇒
        fn (e_v1093 : ??212) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹??216› ??215 ??214 ??213 e_v1093))
      | S n_v1094 ⇒
        fn (e_v1095 : ??204) ⇒
          (f_equal_i45‹??211, ??210›
            ??209 ??208 fn (x_v1096 : ??207) ⇒ x_v1096.+1 ??206 ??205
            (eqn_reflect_i48 m_v1090 n_v1094 e_v1095))
      end
    end

logical eqc_reflect_i49 :
  ∀ (c1_v1097 : char_d3) →
    ∀ (c2_v1098 : char_d3) →
      ∀ (__v1099 : (eqc_i17 c1_v1097 c2_v1098) ≡ true) →
        c1_v1097 ≡ c2_v1098
=
  fn (c1_v1100 : char_d3) (c2_v1101 : char_d3) ⇒
    match c1_v1100 as c0_v1102 in
      ∀ (__v1103 : (eqc_i17 c0_v1102 c2_v1101) ≡ true) →
        c0_v1102 ≡ c2_v1101 with
    | Char_c5 m_v1104 ⇒
      match c2_v1101 as c0_v1105 in
        ∀ (__v1106 :
          (eqc_i17 (Char_c5‹› m_v1104) c0_v1105) ≡ true) →
          (Char_c5‹› m_v1104) ≡ c0_v1105 with
      | Char_c5 n_v1107 ⇒
        fn (e_v1108 : ??234) ⇒
          let e_v1109 = (eqn_reflect_i48 ??236 ??235 e_v1108) in
          (f_equal_i45‹??243, ??242›
            ??241 ??240 fn (x_v1110 : ??239) ⇒ (Char_c5‹› x_v1110)
            ??238 ??237 e_v1109)
      end
    end

program contains_i50 : char_d3 → string_d4 → bool =
  fn (c_v1113 : char_d3) (s_v1114 : string_d4) ⇒
    match s_v1114 as __v1115 in ??244 with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v1116 s_v1117 ⇒
      match (eqc_i17 c_v1113 c0_v1116) as __v1118 in ??245 with
      | true ⇒ true | false ⇒ (contains_i50 c_v1113 s_v1117)
      end
    end

logical inductive diff_d7
  (ans_v1119 : string_d4) (a_v1120 : string_d4) (b_v1121 : string_d4) (df_v1122 : string_d4) : U
=
| diff_EmptyString_c12 of
    (ans_v1123 : string_d4) (a_v1124 : string_d4) (b_v1125 : string_d4)
    (df_v1126 : string_d4) (__v1127 : a_v1124 ≡ EmptyString_c6‹›)
    (__v1128 : b_v1125 ≡ EmptyString_c6‹›)
    (__v1129 : df_v1126 ≡ EmptyString_c6‹›)
    : (diff_d7 ans_v1123 a_v1124 b_v1125 df_v1126)
| diff_StringY_c13 of
    (ans_v1130 : string_d4) (a_v1131 : string_d4) (b_v1132 : string_d4)
    (df_v1133 : string_d4) (c_v1134 : char_d3) (s1_v1135 : string_d4)
    (s2_v1136 : string_d4) (s3_v1137 : string_d4)
    (__v1138 : (diff_d7 ans_v1130 s1_v1135 s2_v1136 s3_v1137))
    (__v1139 : a_v1131 ≡ (String_c7‹› c_v1134 s1_v1135))
    (__v1140 : b_v1132 ≡ (String_c7‹› c_v1134 s2_v1136))
    (__v1141 : df_v1133 ≡ (cats_i19 "Y" s3_v1137))
    : (diff_d7 ans_v1130 a_v1131 b_v1132 df_v1133)
| diff_StringI_c14 of
    (ans_v1142 : string_d4) (a_v1143 : string_d4) (b_v1144 : string_d4)
    (df_v1145 : string_d4) (c1_v1146 : char_d3) (c2_v1147 : char_d3)
    (s1_v1148 : string_d4) (s2_v1149 : string_d4) (s3_v1150 : string_d4)
    (__v1151 : (eqc_i17 c1_v1146 c2_v1147) ≡ false)
    (__v1152 : (contains_i50 c2_v1147 ans_v1142) ≡ true)
    (__v1153 : (diff_d7 ans_v1142 s1_v1148 s2_v1149 s3_v1150))
    (__v1154 : a_v1143 ≡ (String_c7‹› c1_v1146 s1_v1148))
    (__v1155 : b_v1144 ≡ (String_c7‹› c2_v1147 s2_v1149))
    (__v1156 : df_v1145 ≡ (cats_i19 "I" s3_v1150))
    : (diff_d7 ans_v1142 a_v1143 b_v1144 df_v1145)
| diff_StringN_c15 of
    (ans_v1157 : string_d4) (a_v1158 : string_d4) (b_v1159 : string_d4)
    (df_v1160 : string_d4) (c1_v1161 : char_d3) (c2_v1162 : char_d3)
    (s1_v1163 : string_d4) (s2_v1164 : string_d4) (s3_v1165 : string_d4)
    (__v1166 : (eqc_i17 c1_v1161 c2_v1162) ≡ false)
    (__v1167 : (contains_i50 c2_v1162 ans_v1157) ≡ false)
    (__v1168 : (diff_d7 ans_v1157 s1_v1163 s2_v1164 s3_v1165))
    (__v1169 : a_v1158 ≡ (String_c7‹› c1_v1161 s1_v1163))
    (__v1170 : b_v1159 ≡ (String_c7‹› c2_v1162 s2_v1164))
    (__v1171 : df_v1160 ≡ (cats_i19 "N" s3_v1165))
    : (diff_d7 ans_v1157 a_v1158 b_v1159 df_v1160)

program string_diff_i51 :
  ∀ (ans_v1172 : string_d4) →
    ∀ (s1_v1173 : string_d4) →
      ∀ (s2_v1174 : string_d4) →
        {(strlen_i20 s1_v1173) ≡ (strlen_i20 s2_v1174)} →
          ∃ (df_v1176 : string_d4) ⊗
            {(diff_d7 ans_v1172 s1_v1173 s2_v1174 df_v1176)}
=
  fn (ans_v1177 : string_d4) (s1_v1178 : string_d4) (s2_v1179 : string_d4) ⇒
    match s1_v1178 as s0_v1180 in
      {(strlen_i20 s0_v1180) ≡ (strlen_i20 s2_v1179)} →
        ∃ (df_v1182 : string_d4) ⊗
          {(diff_d7 ans_v1177 s0_v1180 s2_v1179 df_v1182)} with
    | EmptyString_c6  ⇒
      match s2_v1179 as s0_v1183 in
        {0 ≡ (strlen_i20 s0_v1183)} →
          ∃ (df_v1185 : string_d4) ⊗
            {(diff_d7 ans_v1177 EmptyString_c6‹› s0_v1183 df_v1185)} with
      | EmptyString_c6  ⇒
        fn {e_v1186 : ??320} ⇒
          ⟨EmptyString_c6‹›, {(diff_EmptyString_c12‹›
                                      refl ??323 refl ??322 refl ??321)}⟩
      | String_c7 c2_v1187 s2_v1188 ⇒
        fn {e_v1189 : ??318} ⇒
          rew [x_v1190, __v1191 ⇒
            match x_v1190 as __v1192 in ??319 with
            | O ⇒ unit‹L›
            | S __v1193 ⇒
              ∃ (df_v1194 : string_d4) ⊗
                {(diff_d7
                   ans_v1177 EmptyString_c6‹›
                   (String_c7‹› c2_v1187 s2_v1188) df_v1194)}
            end] e_v1189 in
          ⟨⟩
      end
    | String_c7 c1_v1195 s1_v1196 ⇒
      match s2_v1179 as s0_v1197 in
        {(strlen_i20 s1_v1196).+1 ≡ (strlen_i20 s0_v1197)} →
          ∃ (df_v1199 : string_d4) ⊗
            {(diff_d7
               ans_v1177 (String_c7‹› c1_v1195 s1_v1196) s0_v1197
               df_v1199)} with
      | EmptyString_c6  ⇒
        fn {e_v1200 : ??315} ⇒
          rew [x_v1201, __v1202 ⇒
            match x_v1201 as __v1203 in ??316 with
            | O ⇒
              ∃ (df_v1204 : string_d4) ⊗
                {(diff_d7
                   ans_v1177 (String_c7‹› c1_v1195 s1_v1196)
                   EmptyString_c6‹› df_v1204)}
            | S __v1205 ⇒ unit‹L›
            end] e_v1200 in
          ⟨⟩
      | String_c7 c2_v1206 s2_v1207 ⇒
        fn {e_v1208 : ??265} ⇒
          let {e_v1209} = (nat_inv_i47 ??267 ??266 e_v1208) in
          let __v1210 = (string_diff_i51 ans_v1177 s1_v1196 s2_v1207 e_v1209)
          in
          match __v1210 as __v1211 in ??314 with
          | ⟨df_v1212, {pf_v1213}⟩ ⇒
            (match (eqc_i17 c1_v1195 c2_v1206) as b0_v1214 in
               {(eqc_i17 c1_v1195 c2_v1206) ≡ b0_v1214} →
                 ∃ (df_v1216 : string_d4) ⊗
                   {(diff_d7
                      ans_v1177 (String_c7‹› c1_v1195 s1_v1196)
                      (String_c7‹› c2_v1206 s2_v1207) df_v1216)} with
             | true ⇒
               fn {e1_v1217 : ??298} ⇒
                 let {e1_v1218} = (eqc_reflect_i49 ??300 ??299 e1_v1217) in
                 let {h_v1219} =
                   rew [c_v1220, __v1221 ⇒
                     (String_c7‹› c_v1220 s2_v1207) ≡
                       (String_c7‹› c1_v1195 s2_v1207)]
                     e1_v1218 in
                   refl ??301
                 in
                 ⟨(cats_i19 "Y" df_v1212), {(diff_StringY_c13‹›
                                                ??308 ??307 ??306 ??305
                                                pf_v1213 refl ??304 h_v1219
                                                refl ??303)}⟩
             | false ⇒
               fn {e1_v1222 : ??269} ⇒
                 (match (contains_i50 c2_v1206 ans_v1177) as b0_v1223 in
                    {(contains_i50 c2_v1206 ans_v1177) ≡ b0_v1223} →
                      ∃ (df_v1225 : string_d4) ⊗
                        {(diff_d7
                           ans_v1177 (String_c7‹› c1_v1195 s1_v1196)
                           (String_c7‹› c2_v1206 s2_v1207) df_v1225)} with
                  | true ⇒
                    fn {e2_v1226 : ??284} ⇒
                      ⟨(cats_i19 "I" df_v1212), {(diff_StringI_c14‹›
                                                     ??292 ??291 ??290 ??289
                                                     ??288 e1_v1222 e2_v1226
                                                     pf_v1213 refl ??287
                                                     refl ??286 refl ??285)}⟩
                  | false ⇒
                    fn {e2_v1227 : ??271} ⇒
                      ⟨(cats_i19 "N" df_v1212), {(diff_StringN_c15‹›
                                                     ??279 ??278 ??277 ??276
                                                     ??275 e1_v1222 e2_v1227
                                                     pf_v1213 refl ??274
                                                     refl ??273 refl ??272)}⟩
                  end refl ??297)
             end refl ??313)
          end
      end
    end

logical diff_len_i52 :
  ∀ (ans_v1228 : string_d4) →
    ∀ (s1_v1229 : string_d4) →
      ∀ (s2_v1230 : string_d4) →
        ∀ (df_v1231 : string_d4) →
          ∀ (h_v1232 : (diff_d7 ans_v1228 s1_v1229 s2_v1230 df_v1231)) →
            (strlen_i20 df_v1231) ≡ (strlen_i20 s1_v1229)
=
  fn (ans_v1233 : string_d4) (s1_v1234 : string_d4) (s2_v1235 : string_d4)
     (df_v1236 : string_d4)
     (h_v1237 : (diff_d7 ans_v1233 s1_v1234 s2_v1235 df_v1236)) ⇒
    match h_v1237 as __v1238 in ??329 with
    | diff_EmptyString_c12 pf1_v1239 __v1240 pf3_v1241 ⇒
      let pf1_v1242 = (eq_sym_i43‹??381› ??380 ??379 ??378 pf1_v1239) in
      let pf3_v1243 = (eq_sym_i43‹??385› ??384 ??383 ??382 pf3_v1241) in
      rew [s0_v1244, __v1245 ⇒
        (strlen_i20 df_v1236) ≡ (strlen_i20 s0_v1244)] pf1_v1242 in
      rew [df0_v1246, __v1247 ⇒ (strlen_i20 df0_v1246) ≡ 0] pf3_v1243 in
      refl ??386
    | diff_StringY_c13 c_v1248 s0_v1249 s3_v1250 s4_v1251 h1_v1252 pf1_v1253
      __v1254 pf3_v1255 ⇒
      let pf1_v1256 = (eq_sym_i43‹??365› ??364 ??363 ??362 pf1_v1253) in
      let pf3_v1257 = (eq_sym_i43‹??369› ??368 ??367 ??366 pf3_v1255) in
      rew [s0_v1258, __v1259 ⇒
        (strlen_i20 df_v1236) ≡ (strlen_i20 s0_v1258)] pf1_v1256 in
      rew [df0_v1260, __v1261 ⇒
        (strlen_i20 df0_v1260) ≡
          (strlen_i20 (String_c7‹› c_v1248 s0_v1249))]
        pf3_v1257 in
      rew [n_v1262, __v1263 ⇒ (strlen_i20 s4_v1251).+1 ≡ n_v1262.+1]
        (diff_len_i52 ??373 ??372 ??371 ??370 h1_v1252) in
      refl ??374
    | diff_StringI_c14 c1_v1264 __v1265 s0_v1266 s3_v1267 s4_v1268 __v1269
      __v1270 h3_v1271 pf1_v1272 __v1273 pf3_v1274 ⇒
      let pf1_v1275 = (eq_sym_i43‹??349› ??348 ??347 ??346 pf1_v1272) in
      let pf3_v1276 = (eq_sym_i43‹??353› ??352 ??351 ??350 pf3_v1274) in
      rew [s0_v1277, __v1278 ⇒
        (strlen_i20 df_v1236) ≡ (strlen_i20 s0_v1277)] pf1_v1275 in
      rew [df0_v1279, __v1280 ⇒
        (strlen_i20 df0_v1279) ≡
          (strlen_i20 (String_c7‹› c1_v1264 s0_v1266))]
        pf3_v1276 in
      rew [n_v1281, __v1282 ⇒ (strlen_i20 s4_v1268).+1 ≡ n_v1281.+1]
        (diff_len_i52 ??357 ??356 ??355 ??354 h3_v1271) in
      refl ??358
    | diff_StringN_c15 c1_v1283 __v1284 s0_v1285 s3_v1286 s4_v1287 __v1288
      __v1289 h3_v1290 pf1_v1291 __v1292 pf3_v1293 ⇒
      let pf1_v1294 = (eq_sym_i43‹??333› ??332 ??331 ??330 pf1_v1291) in
      let pf3_v1295 = (eq_sym_i43‹??337› ??336 ??335 ??334 pf3_v1293) in
      rew [s0_v1296, __v1297 ⇒
        (strlen_i20 df_v1236) ≡ (strlen_i20 s0_v1296)] pf1_v1294 in
      rew [df0_v1298, __v1299 ⇒
        (strlen_i20 df0_v1298) ≡
          (strlen_i20 (String_c7‹› c1_v1283 s0_v1285))]
        pf3_v1295 in
      rew [n_v1300, __v1301 ⇒ (strlen_i20 s4_v1287).+1 ≡ n_v1300.+1]
        (diff_len_i52 ??341 ??340 ??339 ??338 h3_v1290) in
      refl ??342
    end

inductive word_d8 : U =
| Word_c16 of
    (s_v1302 : string_d4) {pf_v1303 : (strlen_i20 s_v1302) ≡ 5} : word_d8

logical inductive wdiff_d9
  (ans_v1304 : word_d8) (guess_v1305 : word_d8) (df_v1306 : word_d8) : U
=
| diff_Word_c17 of
    (ans_v1307 : word_d8) (guess_v1308 : word_d8) (df_v1309 : word_d8)
    (s1_v1310 : string_d4) (s2_v1311 : string_d4) (s3_v1312 : string_d4)
    (pf1_v1313 : (strlen_i20 s1_v1310) ≡ 5)
    (pf2_v1314 : (strlen_i20 s2_v1311) ≡ 5)
    (pf3_v1315 : (strlen_i20 s3_v1312) ≡ 5)
    (__v1316 : ans_v1307 ≡ (Word_c16‹› s1_v1310 pf1_v1313))
    (__v1317 : guess_v1308 ≡ (Word_c16‹› s2_v1311 pf2_v1314))
    (__v1318 : df_v1309 ≡ (Word_c16‹› s3_v1312 pf3_v1315))
    (__v1319 : (diff_d7 s1_v1310 s1_v1310 s2_v1311 s3_v1312))
    : (wdiff_d9 ans_v1307 guess_v1308 df_v1309)

program word_diff_i53 :
  ∀ (ans_v1320 : word_d8) →
    ∀ (guess_v1321 : word_d8) →
      ∃ (df_v1322 : word_d8) ⊗
        {(wdiff_d9 ans_v1320 guess_v1321 df_v1322)}
=
  fn (ans_v1323 : word_d8) (guess_v1324 : word_d8) ⇒
    (match ans_v1323 as ans0_v1325 in
       {ans_v1323 ≡ ans0_v1325} →
         ∃ (df_v1327 : word_d8) ⊗
           {(wdiff_d9 ans_v1323 guess_v1324 df_v1327)} with
     | Word_c16 s1_v1328 pf1_v1329 ⇒
       fn {e1_v1330 : ??397} ⇒
         (match guess_v1324 as guess0_v1331 in
            {guess_v1324 ≡ guess0_v1331} →
              ∃ (df_v1333 : word_d8) ⊗
                {(wdiff_d9 ans_v1323 guess_v1324 df_v1333)} with
          | Word_c16 s2_v1334 pf2_v1335 ⇒
            fn {e2_v1336 : ??399} ⇒
              let {e_v1337} =
                (eq_trans_i44‹??408›
                  ??407 ??406 ??405 ??404 pf1_v1329
                  (eq_sym_i43‹??403› ??402 ??401 ??400 pf2_v1335))
              in
              let __v1338 =
                (string_diff_i51 s1_v1328 s1_v1328 s2_v1334 e_v1337)
              in
              match __v1338 as __v1339 in ??422 with
              | ⟨s3_v1340, {h_v1341}⟩ ⇒
                let {e_v1342} =
                  (diff_len_i52 ??412 ??411 ??410 ??409 h_v1341)
                in
                let {pf_v1343} =
                  (eq_trans_i44‹??417›
                    ??416 ??415 ??414 ??413 e_v1342 pf1_v1329)
                in
                ⟨(Word_c16‹› s3_v1340 pf_v1343), {(diff_Word_c17‹›
                                                          s1_v1328 s2_v1334
                                                          s3_v1340 pf1_v1329
                                                          pf2_v1335 pf_v1343
                                                          e1_v1330 e2_v1336
                                                          refl ??418 h_v1341)}⟩
              end
          end refl ??423)
     end refl ??424)

program eqw_i54 : word_d8 → word_d8 → bool =
  fn (w1_v1346 : word_d8) (w2_v1347 : word_d8) ⇒
    match w1_v1346 as __v1348 in ??425 with
    | Word_c16 s1_v1349 __v1350 ⇒
      match w2_v1347 as __v1351 in ??426 with
      | Word_c16 s2_v1352 __v1353 ⇒ (eqs_i21 s1_v1349 s2_v1352)
      end
    end

logical wordle_loop_i55 : word_d8 → nat → proto =
  fn (ans_v1356 : word_d8) (repeat_v1357 : nat) ⇒
    match repeat_v1357 as __v1358 in ??427 with
    | O ⇒
      ⇑(w_v1359 : word_d8) ⇒ ⇑{__v1360 : w_v1359 ≡ ans_v1356} ⇒ end
    | S repeat_v1361 ⇒
      ⇓(guess_v1362 : word_d8) ⇒
        ⇑(b_v1363 : bool) ⇒
          ⇑{__v1364 : b_v1363 ≡ (eqw_i54 ans_v1356 guess_v1362)} ⇒
            match b_v1363 as __v1365 in ??429 with
            | true ⇒ end
            | false ⇒
              ⇑(df_v1366 : word_d8) ⇒
                ⇑{__v1367 : (wdiff_d9 ans_v1356 guess_v1362 df_v1366)} ⇒
                  (wordle_loop_i55 ans_v1356 repeat_v1361)
            end
    end

logical wordle_i56 : proto =
  ⇑{ans_v1368 : word_d8} ⇒
    ⇑(repeat_v1369 : nat) ⇒ (wordle_loop_i55 ans_v1368 repeat_v1369)

logical loop_ch_i57 : word_d8 → nat → L =
  fn (ans_v1372 : word_d8) (repeat_v1373 : nat) ⇒
    ch⟨(wordle_loop_i55 ans_v1372 repeat_v1373)⟩

logical loop_hc_i58 : word_d8 → nat → L =
  fn (ans_v1376 : word_d8) (repeat_v1377 : nat) ⇒
    hc⟨(wordle_loop_i55 ans_v1376 repeat_v1377)⟩

logical wordle_ch_i59 : L = ch⟨wordle_i56⟩

logical wordle_hc_i60 : L = hc⟨wordle_i56⟩

program read_word_i61 : unit‹U› → IO word_d8 =
  fn (__v1379 : unit‹U›) ⇒
    let s_v1380 ⇐ (readline_i33 ()) in
    (match (eqn_i9 (strlen_i20 s_v1380) 5) as b0_v1381 in
       {(eqn_i9 (strlen_i20 s_v1380) 5) ≡ b0_v1381} → IO word_d8 with
     | true ⇒
       fn {e_v1383 : ??433} ⇒
         return (Word_c16‹›
                  s_v1380 (eqn_reflect_i48 ??435 ??434 e_v1383))
     | false ⇒
       fn {__v1384 : ??432} ⇒
         let __v1385 ⇐ (print_i34 "please input a word with length of 5\n")
         in (read_word_i61 ())
     end refl ??436)

program player_loop_i62 :
  ∀ {ans_v1386 : word_d8} →
    ∀ (repeat_v1387 : nat) →
      (loop_hc_i58 ans_v1386 repeat_v1387) → IO unit‹U›
=
  fn {ans_v1389 : word_d8} (repeat_v1390 : nat)
     (c_v1391 : (loop_hc_i58 ans_v1389 repeat_v1390)) ⇒
    (match repeat_v1390 as repeat0_v1392 in
       (loop_hc_i58 ans_v1389 repeat0_v1392) → IO unit‹U› with
     | O ⇒
       fn (c_v1394 : ??446) ⇒
         let __v1395 ⇐ recv c_v1394 in
         match __v1395 as __v1396 in ??449 with
         | ⟨ans_v1397, c_v1398⟩ ⇒
           let __v1399 ⇐ recv c_v1398 in
           match __v1399 as __v1400 in ??448 with
           | ⟨{pf_v1401}, c_v1402⟩ ⇒
             match ans_v1397 as __v1403 in ??447 with
             | Word_c16 s_v1404 __v1405 ⇒
               let __v1406 ⇐
                 (print_i34
                   (cats_i19
                     (cats_i19 "You Lose! The answer is " s_v1404) ".\n"))
               in close c_v1402
             end
           end
         end
     | S repeat_v1407 ⇒
       fn (c_v1408 : ??437) ⇒
         let guess_v1409 ⇐ (read_word_i61 ()) in
         let c_v1410 ⇐ (send c_v1408 guess_v1409) in
         let __v1411 ⇐ recv c_v1410 in
         match __v1411 as __v1412 in ??445 with
         | ⟨b_v1413, c_v1414⟩ ⇒
           let __v1415 ⇐ recv c_v1414 in
           match __v1415 as __v1416 in ??444 with
           | ⟨{pf_v1417}, c_v1418⟩ ⇒
             (match b_v1413 as b0_v1419 in
                hc⟨match b0_v1419 as __v1421 in ??438 with
                     | true ⇒ end
                     | false ⇒
                       ⇑(df_v1422 : word_d8) ⇒
                         ⇑{__v1423 :
                           (wdiff_d9 ans_v1389 guess_v1409 df_v1422)} ⇒
                           (wordle_loop_i55 ans_v1389 repeat_v1407)
                     end⟩ ⊸
                  IO unit‹U› with
              | true ⇒
                ln (c_v1424 : ??443) ⇒
                  let __v1425 ⇐ (print_i34 "You Win!\n") in close c_v1424
              | false ⇒
                ln (c_v1426 : ??439) ⇒
                  let __v1427 ⇐ recv c_v1426 in
                  match __v1427 as __v1428 in ??442 with
                  | ⟨diff_v1429, c_v1430⟩ ⇒
                    let __v1431 ⇐ recv c_v1430 in
                    match __v1431 as __v1432 in ??441 with
                    | ⟨{pf_v1433}, c_v1434⟩ ⇒
                      match diff_v1429 as __v1435 in ??440 with
                      | Word_c16 s_v1436 __v1437 ⇒
                        let __v1438 ⇐
                          (print_i34
                            (cats_i19
                              (cats_i19
                                (cats_i19
                                  (cats_i19 "Incorrect, hint: " s_v1436)
                                  ". You have ")
                                (string_of_nat_i39 repeat_v1407))
                              " more tries.\n"))
                        in (player_loop_i62 ans_v1389 repeat_v1407 c_v1434)
                      end
                    end
                  end
              end c_v1418)
           end
         end
     end c_v1391)

program player_i63 : wordle_hc_i60 → IO unit‹U› =
  fn (c_v1440 : wordle_hc_i60) ⇒
    let __v1441 ⇐ recv c_v1440 in
    match __v1441 as __v1442 in ??451 with
    | ⟨{ans_v1443}, c_v1444⟩ ⇒
      let __v1445 ⇐ recv c_v1444 in
      match __v1445 as __v1446 in ??450 with
      | ⟨repeat_v1447, c_v1448⟩ ⇒
        let __v1449 ⇐ (print_i34 "Wordle Game\n") in
        let __v1450 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v1451 ⇐
          (print_i34
            (cats_i19
              (cats_i19 "You have " (string_of_nat_i39 repeat_v1447))
              " tries.\n"))
        in (player_loop_i62 ans_v1443 repeat_v1447 c_v1448)
      end
    end

logical inductive at_d10
  (A_v1452 : U) (x_v1453 : A_v1452) (n_v1454 : nat) (xs_v1455 : (list_d6‹??452,
                                                                U› 
                                                                A_v1452)) : U
=
| at_O_c18 of
    (A_v1456 : U) (x_v1457 : A_v1456) (n_v1458 : nat)
    (xs_v1459 : (list_d6‹??453, U› A_v1456))
    (xs0_v1460 : (list_d6‹??455, ??454› A_v1456))
    (__v1461 : n_v1458 ≡ 0)
    (__v1462 : xs_v1459 ≡ (cons_c11‹??459, ??458› x_v1457 xs0_v1460))
    : (at_d10 A_v1456 x_v1457 n_v1458 xs_v1459)
| at_S_c19 of
    (A_v1463 : U) (x_v1464 : A_v1463) (n_v1465 : nat)
    (xs_v1466 : (list_d6‹??461, U› A_v1463)) (n0_v1467 : nat)
    (x0_v1468 : A_v1463) (xs0_v1469 : (list_d6‹??463, ??462› A_v1463))
    (h_v1470 : (at_d10 A_v1463 x_v1464 n0_v1467 xs0_v1469))
    (__v1471 : n_v1465 ≡ n0_v1467.+1)
    (__v1472 : xs_v1466 ≡ (cons_c11‹??467, ??466› x0_v1468 xs0_v1469))
    : (at_d10 A_v1463 x_v1464 n_v1465 xs_v1466)

program get_at_i64 :
  ∀ {A_v1473 : U} →
    ∀ (n_v1474 : nat) →
      ∀ (xs_v1475 : (list_d6‹??470, ??469› A_v1473)) →
        ∀ {__v1476 :
          (ltn_i6 n_v1474 (llen_i24‹??473, ??472› ??471 xs_v1475)) ≡
            true} →
          ∃ (x_v1477 : A_v1473) ⊗
            {(at_d10 ??475 x_v1477 n_v1474 xs_v1475)}
=
  fn {A_v1478 : U} (n_v1479 : nat)
     (xs_v1480 : (list_d6‹??470, ??469› A_v1478)) ⇒
    match xs_v1480 as xs0_v1481 in
      ∀ {__v1482 :
        (ltn_i6 n_v1479 (llen_i24‹??478, ??477› ??476 xs0_v1481)) ≡
          true} →
        ∃ (x_v1483 : A_v1478) ⊗
          {(at_d10 ??480 x_v1483 n_v1479 xs0_v1481)} with
    | nil_c10  ⇒
      fn {e_v1484 : ??508} ⇒
        rew [b_v1485, __v1486 ⇒
          match b_v1485 as __v1487 in ??509 with
          | true ⇒
            ∃ (x_v1488 : A_v1478) ⊗
              {(at_d10 ??513 x_v1488 n_v1479 nil_c10‹??512, ??511›)}
          | false ⇒ unit‹L›
          end] e_v1484 in
        ⟨⟩
    | cons_c11 x_v1489 xs_v1490 ⇒
      match n_v1479 as n0_v1491 in
        ∀ {__v1492 :
          (ltn_i6 n0_v1491 (llen_i24‹??483, ??482› ??481 xs_v1490).+1) ≡
            true} →
          ∃ (x0_v1493 : A_v1478) ⊗
            {(at_d10
               ??488 x0_v1493 n0_v1491
               (cons_c11‹??487, ??486› x_v1489 xs_v1490))} with
      | O ⇒
        fn {e_v1494 : ??501} ⇒
          ⟨x_v1489, {(at_O_c18‹› xs_v1490 refl ??503 refl ??502)}⟩
      | S n_v1495 ⇒
        fn {e_v1496 : ??489} ⇒
          let __v1497 = (get_at_i64 ??490 n_v1495 xs_v1490 e_v1496) in
          match __v1497 as __v1498 in ??500 with
          | ⟨x0_v1499, {pf_v1500}⟩ ⇒
            ⟨x0_v1499, {(at_S_c19‹›
                            ??495 ??494 ??493 pf_v1500 refl ??492 refl ??491)}⟩
          end
      end
    end

program rand_word_i65 : unit‹U› → IO word_d8 =
  fn (__v1502 : unit‹U›) ⇒
    let words_v1503 =
      ((cons_c11‹??596, ??595›
         (Word_c16‹› "route" refl ??593)
         (cons_c11‹??592, ??591›
           (Word_c16‹› "crash" refl ??589)
           (cons_c11‹??588, ??587›
             (Word_c16‹› "clown" refl ??585)
             (cons_c11‹??584, ??583›
               (Word_c16‹› "shaky" refl ??581)
               (cons_c11‹??580, ??579›
                 (Word_c16‹› "vegan" refl ??577)
                 (cons_c11‹??576, ??575›
                   (Word_c16‹› "power" refl ??573)
                   (cons_c11‹??572, ??571›
                     (Word_c16‹› "trust" refl ??569)
                     (cons_c11‹??568, ??567›
                       (Word_c16‹› "enjoy" refl ??565)
                       (cons_c11‹??564, ??563›
                         (Word_c16‹› "brain" refl ??561)
                         (cons_c11‹??560, ??559›
                           (Word_c16‹› "adopt" refl ??557)
                           (cons_c11‹??556, ??555›
                             (Word_c16‹› "tower" refl ??553)
                             (cons_c11‹??552, ??551›
                               (Word_c16‹› "shade" refl ??549)
                               (cons_c11‹??548, ??547›
                                 (Word_c16‹› "delay" refl ??545)
                                 (cons_c11‹??544, ??543›
                                   (Word_c16‹› "twist" refl ??541)
                                   (cons_c11‹??540, ??539›
                                     (Word_c16‹› "alert" refl ??537)
                                     (cons_c11‹??536, ??535›
                                       (Word_c16‹› "choke" refl ??533)
                                       (cons_c11‹??532, ??531›
                                         (Word_c16‹› "split" refl ??529)
                                         (cons_c11‹??528, ??527›
                                           (Word_c16‹›
                                             "rhyme" refl ??525)
                                           (cons_c11‹??524, ??523›
                                             (Word_c16‹›
                                               "muddy" refl ??521)
                                             (cons_c11‹??520, ??519›
                                               (Word_c16‹›
                                                 "plant" refl ??517)
                                               nil_c10‹??516, ??515›))))))))))))))))))))
        : (list_d6‹??597, U› ??598))
    in
    let r_v1504 ⇐ rand 0 19 in
    match r_v1504 as __v1505 in ??599 with
    | Between_c4 n_v1506 __v1507 pf_v1508 ⇒
      let __v1509 = (get_at_i64 ??600 n_v1506 words_v1503 pf_v1508) in
      match __v1509 as __v1510 in ??601 with
      | ⟨w_v1511, {__v1512}⟩ ⇒ return w_v1511
      end
    end

program server_loop_i66 :
  ∀ (ans_v1513 : word_d8) →
    ∀ (repeat_v1514 : nat) →
      (loop_ch_i57 ans_v1513 repeat_v1514) → IO unit‹U›
=
  fn (ans_v1516 : word_d8) (repeat_v1517 : nat)
     (c_v1518 : (loop_ch_i57 ans_v1516 repeat_v1517)) ⇒
    (match repeat_v1517 as repeat0_v1519 in
       (loop_ch_i57 ans_v1516 repeat0_v1519) → IO unit‹U› with
     | O ⇒
       fn (c_v1521 : ??609) ⇒
         let c_v1522 ⇐ (send c_v1521 ans_v1516) in
         let c_v1523 ⇐ (send c_v1522 refl ??610) in close c_v1523
     | S repeat_v1524 ⇒
       fn (c_v1525 : ??602) ⇒
         let __v1526 ⇐ recv c_v1525 in
         match __v1526 as __v1527 in ??608 with
         | ⟨guess_v1528, c_v1529⟩ ⇒
           let b_v1530 = (eqw_i54 ans_v1516 guess_v1528) in
           let c_v1531 ⇐ (send c_v1529 b_v1530) in
           let c_v1532 ⇐ (send c_v1531 refl ??603) in
           (match b_v1530 as b0_v1533 in
              ch⟨match b0_v1533 as __v1535 in ??604 with
                   | true ⇒ end
                   | false ⇒
                     ⇑(df_v1536 : word_d8) ⇒
                       ⇑{__v1537 :
                         (wdiff_d9 ans_v1516 guess_v1528 df_v1536)} ⇒
                         (wordle_loop_i55 ans_v1516 repeat_v1524)
                   end⟩ ⊸
                IO unit‹U› with
            | true ⇒ ln (c_v1538 : ??607) ⇒ close c_v1538
            | false ⇒
              ln (c_v1539 : ??605) ⇒
                let __v1540 = (word_diff_i53 ans_v1516 guess_v1528) in
                match __v1540 as __v1541 in ??606 with
                | ⟨df_v1542, {pf_v1543}⟩ ⇒
                  let c_v1544 ⇐ (send c_v1539 df_v1542) in
                  let c_v1545 ⇐ (send c_v1544 pf_v1543) in
                  (server_loop_i66 ans_v1516 repeat_v1524 c_v1545)
                end
            end c_v1532)
         end
     end c_v1518)

program server_i67 : wordle_ch_i59 → IO unit‹U› =
  fn (c_v1547 : wordle_ch_i59) ⇒
    let repeat_v1548 = 6 in
    let ans_v1549 ⇐ (rand_word_i65 ()) in
    let c_v1550 ⇐ (send c_v1547 ans_v1549) in
    let c_v1551 ⇐ (send c_v1550 repeat_v1548) in
    (server_loop_i66 ans_v1549 repeat_v1548 c_v1551)

program main_i68 : IO unit‹U› =
  let c_v1552 ⇐ fork (c_v1553 : wordle_ch_i59) in (server_i67 c_v1553) in
  let c0_v1554 ⇐
    fork (c0_v1555 :
      ch⟨⇓(__v1556 : wordle_hc_i60) ⇒
             ⇑(__v1557 : unit‹U›) ⇒ end⟩)
    in
      let __v1558 ⇐ recv c0_v1555 in
      match __v1558 as __v1559 in ??611 with
      | ⟨c_v1560, c0_v1561⟩ ⇒
        let __v1562 ⇐ (player_i63 c_v1560) in
        let c0_v1563 ⇐ (send c0_v1561 ()) in close c0_v1563
      end
  in
  let c0_v1564 ⇐ (send c0_v1554 c_v1552) in
  let __v1565 ⇐ recv c0_v1564 in
  match __v1565 as __v1566 in ??612 with
  | ⟨__v1567, c0_v1568⟩ ⇒ close c0_v1568
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v397252 : bool) (b2_v397253 : bool) ⇒
    match b1_v397252 as __v397254 in bool with
    | true ⇒ b2_v397253 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v397257 : bool) (b2_v397258 : bool) ⇒
    match b1_v397257 as __v397259 in bool with
    | true ⇒ true | false ⇒ b2_v397258
    end

program notb_i3 : bool → bool =
  fn (b_v397261 : bool) ⇒
    match b_v397261 as __v397262 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v397265 : bool) (b2_v397266 : bool) ⇒
    match b1_v397265 as __v397267 in order_d1 with
    | true ⇒
      match b2_v397266 as __v397268 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v397266 as __v397269 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v397272 : nat) (y_v397273 : nat) ⇒
    match x_v397272 as __v397274 in bool with
    | O ⇒ true
    | S x_v397275 ⇒
      match y_v397273 as __v397276 in bool with
      | O ⇒ false | S y_v397277 ⇒ (lten_i5 x_v397275 y_v397277)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v397280 : nat) (y_v397281 : nat) ⇒ (lten_i5 x_v397280.+1 y_v397281)

program gten_i7 : nat → nat → bool =
  fn (x_v397284 : nat) (y_v397285 : nat) ⇒ (lten_i5 y_v397285 x_v397284)

program gtn_i8 : nat → nat → bool =
  fn (x_v397288 : nat) (y_v397289 : nat) ⇒ (ltn_i6 y_v397289 x_v397288)

program eqn_i9 : nat → nat → bool =
  fn (x_v397292 : nat) (y_v397293 : nat) ⇒
    match x_v397292 as __v397294 in bool with
    | O ⇒
      match y_v397293 as __v397295 in bool with
      | O ⇒ true | S __v397296 ⇒ false
      end
    | S x_v397297 ⇒
      match y_v397293 as __v397298 in bool with
      | O ⇒ false | S y_v397299 ⇒ (eqn_i9 x_v397297 y_v397299)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v397302 : nat) (n2_v397303 : nat) ⇒
    match n1_v397302 as __v397304 in order_d1 with
    | O ⇒
      match n2_v397303 as __v397305 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v397306 ⇒ LT_c1‹›
      end
    | S n1_v397307 ⇒
      match n2_v397303 as __v397308 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v397309 ⇒ (comparen_i10 n1_v397307 n2_v397309)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v397311 : nat) ⇒
    match x_v397311 as __v397312 in nat with
    | O ⇒ 0 | S x_v397313 ⇒ x_v397313
    end

program addn_i12 : nat → nat → nat =
  fn (x_v397316 : nat) (y_v397317 : nat) ⇒
    match x_v397316 as __v397318 in nat with
    | O ⇒ y_v397317 | S x_v397319 ⇒ (addn_i12 x_v397319 y_v397317).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v397322 : nat) (y_v397323 : nat) ⇒
    match y_v397323 as __v397324 in nat with
    | O ⇒ x_v397322
    | S y_v397325 ⇒ (subn_i13 (pred_i11 x_v397322) y_v397325)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v397328 : nat) (y_v397329 : nat) ⇒
    match x_v397328 as __v397330 in nat with
    | O ⇒ 0
    | S x_v397331 ⇒ (addn_i12 y_v397329 (muln_i14 x_v397331 y_v397329))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v397334 : nat) (y_v397335 : nat) ⇒
    match (ltn_i6 x_v397334 y_v397335) as __v397336 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v397334 y_v397335) y_v397335).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v397339 : nat) (y_v397340 : nat) ⇒
    (subn_i13 x_v397339 (muln_i14 (divn_i15 x_v397339 y_v397340) y_v397340))

inductive between_d2 (lower_v397341 : nat) (upper_v397342 : nat) : L =
| Between_c4 of
    (lower_v397343 : nat) (upper_v397344 : nat) (n_v397345 : nat)
    {pf1_v397346 : (lten_i5 lower_v397343 n_v397345) ≡ true}
    {pf2_v397347 : (lten_i5 n_v397345 upper_v397344) ≡ true}
    : (between_d2 lower_v397343 upper_v397344)

inductive char_d3 : U =
| Char_c5 of (n_v397348 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v397351 : char_d3) (c2_v397352 : char_d3) ⇒
    match c1_v397351 as __v397353 in bool with
    | Char_c5 n1_v397354 ⇒
      match c2_v397352 as __v397355 in bool with
      | Char_c5 n2_v397356 ⇒ (eqn_i9 n1_v397354 n2_v397356)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v397359 : char_d3) (c2_v397360 : char_d3) ⇒
    match c1_v397359 as __v397361 in order_d1 with
    | Char_c5 n1_v397362 ⇒
      match c2_v397360 as __v397363 in order_d1 with
      | Char_c5 n2_v397364 ⇒ (comparen_i10 n1_v397362 n2_v397364)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v397365 : char_d3) (s_v397366 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v397369 : string_d4) (s2_v397370 : string_d4) ⇒
    match s1_v397369 as __v397371 in string_d4 with
    | EmptyString_c6  ⇒ s2_v397370
    | String_c7 c_v397372 s1_v397373 ⇒
      (String_c7‹› c_v397372 (cats_i19 s1_v397373 s2_v397370))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v397375 : string_d4) ⇒
    match s_v397375 as __v397376 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v397377 s_v397378 ⇒ (strlen_i20 s_v397378).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v397381 : string_d4) (s2_v397382 : string_d4) ⇒
    match s1_v397381 as __v397383 in bool with
    | EmptyString_c6  ⇒
      match s2_v397382 as __v397384 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v397385 __v397386 ⇒ false
      end
    | String_c7 c1_v397387 s1_v397388 ⇒
      match s2_v397382 as __v397389 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v397390 s2_v397391 ⇒
        (andb_i1
          (eqc_i17 c1_v397387 c2_v397390) (eqs_i21 s1_v397388 s2_v397391))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v397394 : string_d4) (s2_v397395 : string_d4) ⇒
    match s1_v397394 as __v397396 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v397395 as __v397397 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v397398 __v397399 ⇒ LT_c1‹›
      end
    | String_c7 c1_v397400 s1_v397401 ⇒
      match s2_v397395 as __v397402 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v397403 s2_v397404 ⇒
        match (comparec_i18 c1_v397400 c2_v397403) as __v397405 in
          order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v397401 s2_v397404)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s397406, t_s397407›
  (A_v397408 : Type‹s_s397406›) : Type‹t_s397407›
=
| None_c8 of
    ‹s_s397409, t_s397410› (A_v397411 : Type‹s_s397409›)
    : (option_d5‹s_s397409, t_s397410› A_v397411)
| Some_c9 of
    ‹s_s397412, t_s397413› (A_v397414 : Type‹s_s397412›)
    (x_v397415 : A_v397414) : (option_d5‹s_s397412, t_s397413› A_v397414)

program and_then_i23 ‹s_s397416, r_s397417, t_s397418› :
  ∀ {A_v397419 : Type‹s_s397416›} →
    ∀ {B_v397420 : Type‹r_s397417›} →
      (option_d5‹s_s397416, t_s397418› A_v397419) →
        A_v397419 → (option_d5‹r_s397417, t_s397418› B_v397420) ⊸
          (option_d5‹r_s397417, t_s397418› B_v397420)
=
  fn {A_v397424 : Type‹s_s397416›} {B_v397425 : Type‹r_s397417›}
     (opt_v397426 : (option_d5‹s_s397416, t_s397418› A_v397424)) ⇒
    ln (f_v397427 : A_v397424 →
                      (option_d5‹r_s397417, t_s397418› B_v397425)) ⇒
      match opt_v397426 as __v397429 in
        (option_d5‹r_s397417, t_s397418› B_v397425) with
      | None_c8  ⇒ None_c8‹r_s397417, t_s397418›
      | Some_c9 x_v397430 ⇒ (f_v397427 x_v397430)
      end

inductive list_d6 ‹s_s397431, t_s397432›
  (A_v397433 : Type‹s_s397431›) : Type‹t_s397432›
=
| nil_c10 of
    ‹s_s397434, t_s397435› (A_v397436 : Type‹s_s397434›)
    : (list_d6‹s_s397434, t_s397435› A_v397436)
| cons_c11 of
    ‹s_s397437, t_s397438› (A_v397439 : Type‹s_s397437›)
    (hd_v397440 : A_v397439)
    (tl_v397441 : (list_d6‹s_s397437, t_s397438› A_v397439))
    : (list_d6‹s_s397437, t_s397438› A_v397439)

logical llen_i24 ‹s_s397442, t_s397443› :
  ∀ (A_v397444 : Type‹s_s397442›) →
    (list_d6‹s_s397442, t_s397443› A_v397444) → nat
=
  fn (A_v397446 : Type‹s_s397442›)
     (xs_v397447 : (list_d6‹s_s397442, t_s397443› A_v397446)) ⇒
    match xs_v397447 as __v397448 in nat with
    | nil_c10  ⇒ 0
    | cons_c11 x_v397449 xs_v397450 ⇒
      (llen_i24‹s_s397442, t_s397443› A_v397446 xs_v397450).+1
    end

program len_i25 ‹s_s397451, t_s397452› :
  ∀ {A_v397453 : Type‹s_s397451›} →
    (list_d6‹s_s397451, t_s397452› A_v397453) →
      nat ⊗ (list_d6‹s_s397451, t_s397452› A_v397453)
=
  fn {A_v397456 : Type‹s_s397451›}
     (xs_v397457 : (list_d6‹s_s397451, t_s397452› A_v397456)) ⇒
    match xs_v397457 as __v397458 in
      nat ⊗ (list_d6‹s_s397451, t_s397452› A_v397456) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s397451, t_s397452›⟩
    | cons_c11 x_v397460 xs_v397461 ⇒
      match (len_i25‹s_s397451, t_s397452› A_v397456 xs_v397461) as __v397462 in
        nat ⊗ (list_d6‹s_s397451, t_s397452› A_v397456) with
      | ⟨n_v397464, xs_v397465⟩ ⇒
        ⟨n_v397464.+1, (cons_c11‹s_s397451, t_s397452›
                           x_v397460 xs_v397465)⟩
      end
    end

program append_i26 ‹s_s397466, t_s397467› :
  ∀ {A_v397468 : Type‹s_s397466›} →
    (list_d6‹s_s397466, t_s397467› A_v397468) →
      (list_d6‹s_s397466, t_s397467› A_v397468) ⊸
        (list_d6‹s_s397466, t_s397467› A_v397468)
=
  fn {A_v397471 : Type‹s_s397466›}
     (xs_v397472 : (list_d6‹s_s397466, t_s397467› A_v397471)) ⇒
    ln (ys_v397473 : (list_d6‹s_s397466, t_s397467› A_v397471)) ⇒
      match xs_v397472 as __v397474 in
        (list_d6‹s_s397466, t_s397467› A_v397471) with
      | nil_c10  ⇒ ys_v397473
      | cons_c11 x_v397475 xs_v397476 ⇒
        (cons_c11‹s_s397466, t_s397467›
          x_v397475
          (append_i26‹s_s397466, t_s397467›
            A_v397471 xs_v397476 ys_v397473))
      end

logical stdin_rec_i27 : unit‹U› → proto =
  fn (__v397478 : unit‹U›) ⇒
    ⇑(b_v397479 : bool) ⇒
      match b_v397479 as __v397480 in proto with
      | true ⇒ ⇓(__v397481 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit‹U› → proto =
  fn (__v397483 : unit‹U›) ⇒
    ⇑(b_v397484 : bool) ⇒
      match b_v397484 as __v397485 in proto with
      | true ⇒ ⇑(__v397486 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit‹U› → proto =
  fn (__v397488 : unit‹U›) ⇒
    ⇑(b_v397489 : bool) ⇒
      match b_v397489 as __v397490 in proto with
      | true ⇒ ⇑(__v397491 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit‹U› → IO string_d4 =
  fn (__v397493 : unit‹U›) ⇒
    let ch_v397494 ⇐ open stdin in
    let ch_v397495 ⇐ (send ch_v397494 true) in
    let __v397496 ⇐ recv ch_v397495 in
    match __v397496 as __v397497 in IO string_d4 with
    | ⟨s_v397498, ch_v397499⟩ ⇒
      let ch_v397500 ⇐ (send ch_v397499 false) in
      let __v397501 ⇐ close ch_v397500 in return s_v397498
    end

program print_i34 : string_d4 → IO unit‹U› =
  fn (s_v397503 : string_d4) ⇒
    let ch_v397504 ⇐ open stdout in
    let ch_v397505 ⇐ (send ch_v397504 true) in
    let ch_v397506 ⇐ (send ch_v397505 s_v397503) in
    let ch_v397507 ⇐ (send ch_v397506 false) in close ch_v397507

program prerr_i35 : string_d4 → IO unit‹U› =
  fn (s_v397509 : string_d4) ⇒
    let ch_v397510 ⇐ open stderr in
    let ch_v397511 ⇐ (send ch_v397510 true) in
    let ch_v397512 ⇐ (send ch_v397511 s_v397509) in
    let ch_v397513 ⇐ (send ch_v397512 false) in close ch_v397513

program digits_i36 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i37 :
  ∀ {A_v397514 : U} →
    nat → (list_d6‹U, U› A_v397514) → A_v397514 → A_v397514
=
  fn {A_v397518 : U} (n_v397519 : nat)
     (xs_v397520 : (list_d6‹U, U› A_v397518)) (a_v397521 : A_v397518) ⇒
    match n_v397519 as __v397522 in A_v397518 with
    | O ⇒
      match xs_v397520 as __v397523 in A_v397518 with
      | nil_c10  ⇒ a_v397521 | cons_c11 x_v397524 __v397525 ⇒ x_v397524
      end
    | S n_v397526 ⇒
      match xs_v397520 as __v397527 in A_v397518 with
      | nil_c10  ⇒ a_v397521
      | cons_c11 __v397528 xs_v397529 ⇒
        (get_at_i37 A_v397518 n_v397526 xs_v397529 a_v397521)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v397531 : nat) ⇒
    (get_at_i37 string_d4 n_v397531 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v397533 : nat) ⇒
    let s_v397534 = (string_of_digit_i38 (modn_i16 n_v397533 10)) in
    let n_v397535 = (divn_i15 n_v397533 10) in
    match (ltn_i6 0 n_v397535) as __v397536 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v397535) s_v397534)
    | false ⇒ s_v397534
    end

program digit_of_char_i40 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v397538 : char_d3) ⇒
    match (eqc_i17 c_v397538 '0') as __v397539 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v397538 '1') as __v397540 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v397538 '2') as __v397541 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v397538 '3') as __v397542 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v397538 '4') as __v397543 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v397538 '5') as __v397544 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v397538 '6') as __v397545 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v397538 '7') as __v397546 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v397538 '8') as __v397547 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v397538 '9') as __v397548 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v397551 : string_d4) (acc_v397552 : nat) ⇒
    match s_v397551 as __v397553 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v397552)
    | String_c7 c_v397554 s_v397555 ⇒
      match (digit_of_char_i40 c_v397554) as __v397556 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v397557 ⇒
        (nat_of_string_loop_i41
          s_v397555 (addn_i12 (muln_i14 acc_v397552 10) n_v397557))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v397559 : string_d4) ⇒ (nat_of_string_loop_i41 s_v397559 0)

logical eq_sym_i43 ‹s_s397560› :
  ∀ (A_v397561 : Type‹s_s397560›) →
    ∀ (x_v397562 : A_v397561) →
      ∀ (y_v397563 : A_v397561) →
        x_v397562 ≡ y_v397563 → y_v397563 ≡ x_v397562
=
  fn (A_v397565 : Type‹s_s397560›) (x_v397566 : A_v397565)
     (y_v397567 : A_v397565) (e_v397568 : x_v397566 ≡ y_v397567) ⇒
    rew [y_v397569, __v397570 ⇒ y_v397569 ≡ x_v397566] e_v397568 in
    refl x_v397566

logical eq_trans_i44 ‹s_s397571› :
  ∀ (A_v397572 : Type‹s_s397571›) →
    ∀ (x_v397573 : A_v397572) →
      ∀ (y_v397574 : A_v397572) →
        ∀ (z_v397575 : A_v397572) →
          x_v397573 ≡ y_v397574 →
            y_v397574 ≡ z_v397575 → x_v397573 ≡ z_v397575
=
  fn (A_v397578 : Type‹s_s397571›) (x_v397579 : A_v397578)
     (y_v397580 : A_v397578) (z_v397581 : A_v397578)
     (e1_v397582 : x_v397579 ≡ y_v397580)
     (e2_v397583 : y_v397580 ≡ z_v397581) ⇒
    rew [y0_v397584, __v397585 ⇒ x_v397579 ≡ y0_v397584] e2_v397583 in
    e1_v397582

logical f_equal_i45 ‹s_s397586, t_s397587› :
  ∀ (A_v397588 : Type‹s_s397586›) →
    ∀ (B_v397589 : Type‹t_s397587›) →
      ∀ (f_v397590 : A_v397588 → B_v397589) →
        ∀ (x_v397592 : A_v397588) →
          ∀ (y_v397593 : A_v397588) →
            x_v397592 ≡ y_v397593 →
              (f_v397590 x_v397592) ≡ (f_v397590 y_v397593)
=
  fn (A_v397595 : Type‹s_s397586›) (B_v397596 : Type‹t_s397587›)
     (f_v397597 : A_v397595 → B_v397596) (x_v397598 : A_v397595)
     (y_v397599 : A_v397595) (e_v397600 : x_v397598 ≡ y_v397599) ⇒
    rew [y_v397602, p_v397603 ⇒
      (f_v397597 x_v397598) ≡ (f_v397597 y_v397602)] e_v397600 in
    refl (f_v397597 x_v397598)

logical bool_absurd_i46 : true ≡ false → ⊥ =
  fn (e_v397605 : true ≡ false) ⇒
    rew [x_v397606, __v397607 ⇒
      match x_v397606 as __v397608 in U with
      | true ⇒ unit‹U› | false ⇒ ⊥
      end] e_v397605 in
    ()

logical nat_inv_i47 :
  ∀ (n1_v397609 : nat) →
    ∀ (n2_v397610 : nat) →
      n1_v397609.+1 ≡ n2_v397610.+1 → n1_v397609 ≡ n2_v397610
=
  fn (n1_v397612 : nat) (n2_v397613 : nat)
     (e_v397614 : n1_v397612.+1 ≡ n2_v397613.+1) ⇒
    (f_equal_i45‹U, U›
      nat nat pred_i11 n1_v397612.+1 n2_v397613.+1 e_v397614)

logical eqn_reflect_i48 :
  ∀ (m_v397615 : nat) →
    ∀ (n_v397616 : nat) →
      (eqn_i9 m_v397615 n_v397616) ≡ true → m_v397615 ≡ n_v397616
=
  fn (m_v397618 : nat) (n_v397619 : nat) ⇒
    match m_v397618 as m0_v397620 in
      (eqn_i9 m0_v397620 n_v397619) ≡ true → m0_v397620 ≡ n_v397619 with
    | O ⇒
      match n_v397619 as n0_v397622 in
        (eqn_i9 0 n0_v397622) ≡ true → 0 ≡ n0_v397622 with
      | O ⇒ fn (__v397624 : (eqn_i9 0 0) ≡ true) ⇒ refl 0
      | S n_v397625 ⇒
        fn (e_v397626 : (eqn_i9 0 n_v397625.+1) ≡ true) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹U›
                     bool (eqn_i9 0 n_v397625.+1) true e_v397626))
      end
    | S m_v397627 ⇒
      match n_v397619 as n0_v397628 in
        (eqn_i9 m_v397627.+1 n0_v397628) ≡ true →
          m_v397627.+1 ≡ n0_v397628 with
      | O ⇒
        fn (e_v397630 : (eqn_i9 m_v397627.+1 0) ≡ true) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹U›
                     bool (eqn_i9 m_v397627.+1 0) true e_v397630))
      | S n_v397631 ⇒
        fn (e_v397632 : (eqn_i9 m_v397627.+1 n_v397631.+1) ≡ true) ⇒
          (f_equal_i45‹U, U›
            nat nat fn (x_v397633 : nat) ⇒ x_v397633.+1 m_v397627 n_v397631
            (eqn_reflect_i48 m_v397627 n_v397631 e_v397632))
      end
    end

logical eqc_reflect_i49 :
  ∀ (c1_v397634 : char_d3) →
    ∀ (c2_v397635 : char_d3) →
      (eqc_i17 c1_v397634 c2_v397635) ≡ true → c1_v397634 ≡ c2_v397635
=
  fn (c1_v397637 : char_d3) (c2_v397638 : char_d3) ⇒
    match c1_v397637 as c0_v397639 in
      (eqc_i17 c0_v397639 c2_v397638) ≡ true → c0_v397639 ≡ c2_v397638 with
    | Char_c5 m_v397641 ⇒
      match c2_v397638 as c0_v397642 in
        (eqc_i17 (Char_c5‹› m_v397641) c0_v397642) ≡ true →
          (Char_c5‹› m_v397641) ≡ c0_v397642 with
      | Char_c5 n_v397644 ⇒
        fn (e_v397645 : (eqc_i17
                          (Char_c5‹› m_v397641) (Char_c5‹› n_v397644)) ≡
                          true) ⇒
          let e_v397646 = (eqn_reflect_i48 m_v397641 n_v397644 e_v397645) in
          (f_equal_i45‹U, U›
            nat char_d3 fn (x_v397647 : nat) ⇒ (Char_c5‹› x_v397647)
            m_v397641 n_v397644 e_v397646)
      end
    end

program contains_i50 : char_d3 → string_d4 → bool =
  fn (c_v397650 : char_d3) (s_v397651 : string_d4) ⇒
    match s_v397651 as __v397652 in bool with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v397653 s_v397654 ⇒
      match (eqc_i17 c_v397650 c0_v397653) as __v397655 in bool with
      | true ⇒ true | false ⇒ (contains_i50 c_v397650 s_v397654)
      end
    end

logical inductive diff_d7
  (ans_v397656 : string_d4) (a_v397657 : string_d4) (b_v397658 : string_d4) (df_v397659 : string_d4) : U
=
| diff_EmptyString_c12 of
    (ans_v397660 : string_d4) (a_v397661 : string_d4) (b_v397662 : string_d4)
    (df_v397663 : string_d4) (__v397664 : a_v397661 ≡ EmptyString_c6‹›)
    (__v397665 : b_v397662 ≡ EmptyString_c6‹›)
    (__v397666 : df_v397663 ≡ EmptyString_c6‹›)
    : (diff_d7 ans_v397660 a_v397661 b_v397662 df_v397663)
| diff_StringY_c13 of
    (ans_v397667 : string_d4) (a_v397668 : string_d4) (b_v397669 : string_d4)
    (df_v397670 : string_d4) (c_v397671 : char_d3) (s1_v397672 : string_d4)
    (s2_v397673 : string_d4) (s3_v397674 : string_d4)
    (__v397675 : (diff_d7 ans_v397667 s1_v397672 s2_v397673 s3_v397674))
    (__v397676 : a_v397668 ≡ (String_c7‹› c_v397671 s1_v397672))
    (__v397677 : b_v397669 ≡ (String_c7‹› c_v397671 s2_v397673))
    (__v397678 : df_v397670 ≡ (cats_i19 "Y" s3_v397674))
    : (diff_d7 ans_v397667 a_v397668 b_v397669 df_v397670)
| diff_StringI_c14 of
    (ans_v397679 : string_d4) (a_v397680 : string_d4) (b_v397681 : string_d4)
    (df_v397682 : string_d4) (c1_v397683 : char_d3) (c2_v397684 : char_d3)
    (s1_v397685 : string_d4) (s2_v397686 : string_d4)
    (s3_v397687 : string_d4)
    (__v397688 : (eqc_i17 c1_v397683 c2_v397684) ≡ false)
    (__v397689 : (contains_i50 c2_v397684 ans_v397679) ≡ true)
    (__v397690 : (diff_d7 ans_v397679 s1_v397685 s2_v397686 s3_v397687))
    (__v397691 : a_v397680 ≡ (String_c7‹› c1_v397683 s1_v397685))
    (__v397692 : b_v397681 ≡ (String_c7‹› c2_v397684 s2_v397686))
    (__v397693 : df_v397682 ≡ (cats_i19 "I" s3_v397687))
    : (diff_d7 ans_v397679 a_v397680 b_v397681 df_v397682)
| diff_StringN_c15 of
    (ans_v397694 : string_d4) (a_v397695 : string_d4) (b_v397696 : string_d4)
    (df_v397697 : string_d4) (c1_v397698 : char_d3) (c2_v397699 : char_d3)
    (s1_v397700 : string_d4) (s2_v397701 : string_d4)
    (s3_v397702 : string_d4)
    (__v397703 : (eqc_i17 c1_v397698 c2_v397699) ≡ false)
    (__v397704 : (contains_i50 c2_v397699 ans_v397694) ≡ false)
    (__v397705 : (diff_d7 ans_v397694 s1_v397700 s2_v397701 s3_v397702))
    (__v397706 : a_v397695 ≡ (String_c7‹› c1_v397698 s1_v397700))
    (__v397707 : b_v397696 ≡ (String_c7‹› c2_v397699 s2_v397701))
    (__v397708 : df_v397697 ≡ (cats_i19 "N" s3_v397702))
    : (diff_d7 ans_v397694 a_v397695 b_v397696 df_v397697)

program string_diff_i51 :
  ∀ (ans_v397709 : string_d4) →
    ∀ (s1_v397710 : string_d4) →
      ∀ (s2_v397711 : string_d4) →
        {(strlen_i20 s1_v397710) ≡ (strlen_i20 s2_v397711)} →
          ∃ (df_v397713 : string_d4) ⊗
            {(diff_d7 ans_v397709 s1_v397710 s2_v397711 df_v397713)}
=
  fn (ans_v397714 : string_d4) (s1_v397715 : string_d4)
     (s2_v397716 : string_d4) ⇒
    match s1_v397715 as s0_v397717 in
      {(strlen_i20 s0_v397717) ≡ (strlen_i20 s2_v397716)} →
        ∃ (df_v397719 : string_d4) ⊗
          {(diff_d7 ans_v397714 s0_v397717 s2_v397716 df_v397719)} with
    | EmptyString_c6  ⇒
      match s2_v397716 as s0_v397720 in
        {0 ≡ (strlen_i20 s0_v397720)} →
          ∃ (df_v397722 : string_d4) ⊗
            {(diff_d7 ans_v397714 EmptyString_c6‹› s0_v397720 df_v397722)} with
      | EmptyString_c6  ⇒
        fn {e_v397723 : 0 ≡ (strlen_i20 EmptyString_c6‹›)} ⇒
          ⟨EmptyString_c6‹›, {(diff_EmptyString_c12‹›
                                      refl EmptyString_c6‹›
                                      refl EmptyString_c6‹›
                                      refl EmptyString_c6‹›)}⟩
      | String_c7 c2_v397724 s2_v397725 ⇒
        fn {e_v397726 : 0 ≡
                          (strlen_i20
                            (String_c7‹› c2_v397724 s2_v397725))} ⇒
          rew [x_v397727, __v397728 ⇒
            match x_v397727 as __v397729 in L with
            | O ⇒ unit‹L›
            | S __v397730 ⇒
              ∃ (df_v397731 : string_d4) ⊗
                {(diff_d7
                   ans_v397714 EmptyString_c6‹›
                   (String_c7‹› c2_v397724 s2_v397725) df_v397731)}
            end] e_v397726 in
          ⟨⟩
      end
    | String_c7 c1_v397732 s1_v397733 ⇒
      match s2_v397716 as s0_v397734 in
        {(strlen_i20 s1_v397733).+1 ≡ (strlen_i20 s0_v397734)} →
          ∃ (df_v397736 : string_d4) ⊗
            {(diff_d7
               ans_v397714 (String_c7‹› c1_v397732 s1_v397733) s0_v397734
               df_v397736)} with
      | EmptyString_c6  ⇒
        fn {e_v397737 : (strlen_i20 s1_v397733).+1 ≡
                          (strlen_i20 EmptyString_c6‹›)} ⇒
          rew [x_v397738, __v397739 ⇒
            match x_v397738 as __v397740 in L with
            | O ⇒
              ∃ (df_v397741 : string_d4) ⊗
                {(diff_d7
                   ans_v397714 (String_c7‹› c1_v397732 s1_v397733)
                   EmptyString_c6‹› df_v397741)}
            | S __v397742 ⇒ unit‹L›
            end] e_v397737 in
          ⟨⟩
      | String_c7 c2_v397743 s2_v397744 ⇒
        fn {e_v397745 : (strlen_i20 s1_v397733).+1 ≡
                          (strlen_i20
                            (String_c7‹› c2_v397743 s2_v397744))} ⇒
          let {e_v397746} =
            (nat_inv_i47
              (strlen_i20 s1_v397733)
              match s2_v397744 as __v397747 in nat with
              | EmptyString_c6  ⇒ 0
              | String_c7 __v397748 s_v397749 ⇒ (strlen_i20 s_v397749).+1
              end e_v397745)
          in
          let __v397750 =
            (string_diff_i51 ans_v397714 s1_v397733 s2_v397744 e_v397746)
          in
          match __v397750 as __v397751 in
            ∃ (df_v397752 : string_d4) ⊗
              {(diff_d7
                 ans_v397714 (String_c7‹› c1_v397732 s1_v397733)
                 (String_c7‹› c2_v397743 s2_v397744) df_v397752)} with
          | ⟨df_v397753, {pf_v397754}⟩ ⇒
            (match (eqc_i17 c1_v397732 c2_v397743) as b0_v397755 in
               {(eqc_i17 c1_v397732 c2_v397743) ≡ b0_v397755} →
                 ∃ (df_v397757 : string_d4) ⊗
                   {(diff_d7
                      ans_v397714 (String_c7‹› c1_v397732 s1_v397733)
                      (String_c7‹› c2_v397743 s2_v397744) df_v397757)} with
             | true ⇒
               fn {e1_v397758 : (eqc_i17 c1_v397732 c2_v397743) ≡ true} ⇒
                 let {e1_v397759} =
                   (eqc_reflect_i49 c1_v397732 c2_v397743 e1_v397758)
                 in
                 let {h_v397760} =
                   rew [c_v397761, __v397762 ⇒
                     (String_c7‹› c_v397761 s2_v397744) ≡
                       (String_c7‹› c1_v397732 s2_v397744)]
                     e1_v397759 in
                   refl (String_c7‹› c1_v397732 s2_v397744)
                 in
                 ⟨(cats_i19 "Y" df_v397753), {(diff_StringY_c13‹›
                                                  c1_v397732 s1_v397733
                                                  s2_v397744 df_v397753
                                                  pf_v397754
                                                  refl (String_c7‹›
                                                         c1_v397732
                                                         s1_v397733)
                                                  h_v397760
                                                  refl (cats_i19
                                                         "Y" df_v397753))}⟩
             | false ⇒
               fn {e1_v397763 : (eqc_i17 c1_v397732 c2_v397743) ≡ false} ⇒
                 (match (contains_i50 c2_v397743 ans_v397714) as b0_v397764 in
                    {(contains_i50 c2_v397743 ans_v397714) ≡ b0_v397764} →
                      ∃ (df_v397766 : string_d4) ⊗
                        {(diff_d7
                           ans_v397714
                           (String_c7‹› c1_v397732 s1_v397733)
                           (String_c7‹› c2_v397743 s2_v397744) df_v397766)} with
                  | true ⇒
                    fn {e2_v397767 : (contains_i50 c2_v397743 ans_v397714) ≡
                                       true} ⇒
                      ⟨(cats_i19 "I" df_v397753), {(diff_StringI_c14‹›
                                                       c1_v397732 c2_v397743
                                                       s1_v397733 s2_v397744
                                                       df_v397753 e1_v397763
                                                       e2_v397767 pf_v397754
                                                       refl (String_c7‹›
                                                              c1_v397732
                                                              s1_v397733)
                                                       refl (String_c7‹›
                                                              c2_v397743
                                                              s2_v397744)
                                                       refl (cats_i19
                                                              "I" df_v397753))}⟩
                  | false ⇒
                    fn {e2_v397768 : (contains_i50 c2_v397743 ans_v397714) ≡
                                       false} ⇒
                      ⟨(cats_i19 "N" df_v397753), {(diff_StringN_c15‹›
                                                       c1_v397732 c2_v397743
                                                       s1_v397733 s2_v397744
                                                       df_v397753 e1_v397763
                                                       e2_v397768 pf_v397754
                                                       refl (String_c7‹›
                                                              c1_v397732
                                                              s1_v397733)
                                                       refl (String_c7‹›
                                                              c2_v397743
                                                              s2_v397744)
                                                       refl (cats_i19
                                                              "N" df_v397753))}⟩
                  end refl (contains_i50 c2_v397743 ans_v397714))
             end refl (eqc_i17 c1_v397732 c2_v397743))
          end
      end
    end

logical diff_len_i52 :
  ∀ (ans_v397769 : string_d4) →
    ∀ (s1_v397770 : string_d4) →
      ∀ (s2_v397771 : string_d4) →
        ∀ (df_v397772 : string_d4) →
          (diff_d7 ans_v397769 s1_v397770 s2_v397771 df_v397772) →
            (strlen_i20 df_v397772) ≡ (strlen_i20 s1_v397770)
=
  fn (ans_v397774 : string_d4) (s1_v397775 : string_d4)
     (s2_v397776 : string_d4) (df_v397777 : string_d4)
     (h_v397778 : (diff_d7 ans_v397774 s1_v397775 s2_v397776 df_v397777)) ⇒
    match h_v397778 as __v397779 in
      (strlen_i20 df_v397777) ≡ (strlen_i20 s1_v397775) with
    | diff_EmptyString_c12 pf1_v397780 __v397781 pf3_v397782 ⇒
      let pf1_v397783 =
        (eq_sym_i43‹U›
          string_d4 s1_v397775 EmptyString_c6‹› pf1_v397780)
      in
      let pf3_v397784 =
        (eq_sym_i43‹U›
          string_d4 df_v397777 EmptyString_c6‹› pf3_v397782)
      in
      rew [s0_v397785, __v397786 ⇒
        (strlen_i20 df_v397777) ≡ (strlen_i20 s0_v397785)] pf1_v397783 in
      rew [df0_v397787, __v397788 ⇒ (strlen_i20 df0_v397787) ≡ 0]
        pf3_v397784 in
      refl (strlen_i20 EmptyString_c6‹›)
    | diff_StringY_c13 c_v397789 s0_v397790 s3_v397791 s4_v397792 h1_v397793
      pf1_v397794 __v397795 pf3_v397796 ⇒
      let pf1_v397797 =
        (eq_sym_i43‹U›
          string_d4 s1_v397775 (String_c7‹› c_v397789 s0_v397790)
          pf1_v397794)
      in
      let pf3_v397798 =
        (eq_sym_i43‹U›
          string_d4 df_v397777 (cats_i19 "Y" s4_v397792) pf3_v397796)
      in
      rew [s0_v397799, __v397800 ⇒
        (strlen_i20 df_v397777) ≡ (strlen_i20 s0_v397799)] pf1_v397797 in
      rew [df0_v397801, __v397802 ⇒
        (strlen_i20 df0_v397801) ≡
          (strlen_i20 (String_c7‹› c_v397789 s0_v397790))]
        pf3_v397798 in
      rew [n_v397803, __v397804 ⇒
        (strlen_i20 s4_v397792).+1 ≡ n_v397803.+1]
        (diff_len_i52
          ans_v397774 s0_v397790 s3_v397791 s4_v397792 h1_v397793) in
      refl (strlen_i20 s4_v397792).+1
    | diff_StringI_c14 c1_v397805 __v397806 s0_v397807 s3_v397808 s4_v397809
      __v397810 __v397811 h3_v397812 pf1_v397813 __v397814 pf3_v397815 ⇒
      let pf1_v397816 =
        (eq_sym_i43‹U›
          string_d4 s1_v397775 (String_c7‹› c1_v397805 s0_v397807)
          pf1_v397813)
      in
      let pf3_v397817 =
        (eq_sym_i43‹U›
          string_d4 df_v397777 (cats_i19 "I" s4_v397809) pf3_v397815)
      in
      rew [s0_v397818, __v397819 ⇒
        (strlen_i20 df_v397777) ≡ (strlen_i20 s0_v397818)] pf1_v397816 in
      rew [df0_v397820, __v397821 ⇒
        (strlen_i20 df0_v397820) ≡
          (strlen_i20 (String_c7‹› c1_v397805 s0_v397807))]
        pf3_v397817 in
      rew [n_v397822, __v397823 ⇒
        (strlen_i20 s4_v397809).+1 ≡ n_v397822.+1]
        (diff_len_i52
          ans_v397774 s0_v397807 s3_v397808 s4_v397809 h3_v397812) in
      refl (strlen_i20 s4_v397809).+1
    | diff_StringN_c15 c1_v397824 __v397825 s0_v397826 s3_v397827 s4_v397828
      __v397829 __v397830 h3_v397831 pf1_v397832 __v397833 pf3_v397834 ⇒
      let pf1_v397835 =
        (eq_sym_i43‹U›
          string_d4 s1_v397775 (String_c7‹› c1_v397824 s0_v397826)
          pf1_v397832)
      in
      let pf3_v397836 =
        (eq_sym_i43‹U›
          string_d4 df_v397777 (cats_i19 "N" s4_v397828) pf3_v397834)
      in
      rew [s0_v397837, __v397838 ⇒
        (strlen_i20 df_v397777) ≡ (strlen_i20 s0_v397837)] pf1_v397835 in
      rew [df0_v397839, __v397840 ⇒
        (strlen_i20 df0_v397839) ≡
          (strlen_i20 (String_c7‹› c1_v397824 s0_v397826))]
        pf3_v397836 in
      rew [n_v397841, __v397842 ⇒
        (strlen_i20 s4_v397828).+1 ≡ n_v397841.+1]
        (diff_len_i52
          ans_v397774 s0_v397826 s3_v397827 s4_v397828 h3_v397831) in
      refl (strlen_i20 s4_v397828).+1
    end

inductive word_d8 : U =
| Word_c16 of
    (s_v397843 : string_d4) {pf_v397844 : (strlen_i20 s_v397843) ≡ 5}
    : word_d8

logical inductive wdiff_d9
  (ans_v397845 : word_d8) (guess_v397846 : word_d8) (df_v397847 : word_d8) : U
=
| diff_Word_c17 of
    (ans_v397848 : word_d8) (guess_v397849 : word_d8) (df_v397850 : word_d8)
    (s1_v397851 : string_d4) (s2_v397852 : string_d4)
    (s3_v397853 : string_d4) (pf1_v397854 : (strlen_i20 s1_v397851) ≡ 5)
    (pf2_v397855 : (strlen_i20 s2_v397852) ≡ 5)
    (pf3_v397856 : (strlen_i20 s3_v397853) ≡ 5)
    (__v397857 : ans_v397848 ≡ (Word_c16‹› s1_v397851 pf1_v397854))
    (__v397858 : guess_v397849 ≡ (Word_c16‹› s2_v397852 pf2_v397855))
    (__v397859 : df_v397850 ≡ (Word_c16‹› s3_v397853 pf3_v397856))
    (__v397860 : (diff_d7 s1_v397851 s1_v397851 s2_v397852 s3_v397853))
    : (wdiff_d9 ans_v397848 guess_v397849 df_v397850)

program word_diff_i53 :
  ∀ (ans_v397861 : word_d8) →
    ∀ (guess_v397862 : word_d8) →
      ∃ (df_v397863 : word_d8) ⊗
        {(wdiff_d9 ans_v397861 guess_v397862 df_v397863)}
=
  fn (ans_v397864 : word_d8) (guess_v397865 : word_d8) ⇒
    (match ans_v397864 as ans0_v397866 in
       {ans_v397864 ≡ ans0_v397866} →
         ∃ (df_v397868 : word_d8) ⊗
           {(wdiff_d9 ans_v397864 guess_v397865 df_v397868)} with
     | Word_c16 s1_v397869 pf1_v397870 ⇒
       fn {e1_v397871 : ans_v397864 ≡
                          (Word_c16‹› s1_v397869 pf1_v397870)} ⇒
         (match guess_v397865 as guess0_v397872 in
            {guess_v397865 ≡ guess0_v397872} →
              ∃ (df_v397874 : word_d8) ⊗
                {(wdiff_d9 ans_v397864 guess_v397865 df_v397874)} with
          | Word_c16 s2_v397875 pf2_v397876 ⇒
            fn {e2_v397877 : guess_v397865 ≡
                               (Word_c16‹› s2_v397875 pf2_v397876)} ⇒
              let {e_v397878} =
                (eq_trans_i44‹U›
                  nat (strlen_i20 s1_v397869) 5 (strlen_i20 s2_v397875)
                  pf1_v397870
                  (eq_sym_i43‹U›
                    nat (strlen_i20 s2_v397875) 5 pf2_v397876))
              in
              let __v397879 =
                (string_diff_i51 s1_v397869 s1_v397869 s2_v397875 e_v397878)
              in
              match __v397879 as __v397880 in
                ∃ (df_v397881 : word_d8) ⊗
                  {(wdiff_d9 ans_v397864 guess_v397865 df_v397881)} with
              | ⟨s3_v397882, {h_v397883}⟩ ⇒
                let {e_v397884} =
                  (diff_len_i52
                    s1_v397869 s1_v397869 s2_v397875 s3_v397882 h_v397883)
                in
                let {pf_v397885} =
                  (eq_trans_i44‹U›
                    nat (strlen_i20 s3_v397882) (strlen_i20 s1_v397869) 5
                    e_v397884 pf1_v397870)
                in
                ⟨(Word_c16‹› s3_v397882 pf_v397885), {(diff_Word_c17‹›
                                                              s1_v397869
                                                              s2_v397875
                                                              s3_v397882
                                                              pf1_v397870
                                                              pf2_v397876
                                                              pf_v397885
                                                              e1_v397871
                                                              e2_v397877
                                                              refl (Word_c16‹›
                                                                    s3_v397882
                                                                    pf_v397885)
                                                              h_v397883)}⟩
              end
          end refl guess_v397865)
     end refl ans_v397864)

program eqw_i54 : word_d8 → word_d8 → bool =
  fn (w1_v397888 : word_d8) (w2_v397889 : word_d8) ⇒
    match w1_v397888 as __v397890 in bool with
    | Word_c16 s1_v397891 __v397892 ⇒
      match w2_v397889 as __v397893 in bool with
      | Word_c16 s2_v397894 __v397895 ⇒ (eqs_i21 s1_v397891 s2_v397894)
      end
    end

logical wordle_loop_i55 : word_d8 → nat → proto =
  fn (ans_v397898 : word_d8) (repeat_v397899 : nat) ⇒
    match repeat_v397899 as __v397900 in proto with
    | O ⇒
      ⇑(w_v397901 : word_d8) ⇒
        ⇑{__v397902 : w_v397901 ≡ ans_v397898} ⇒ end
    | S repeat_v397903 ⇒
      ⇓(guess_v397904 : word_d8) ⇒
        ⇑(b_v397905 : bool) ⇒
          ⇑{__v397906 :
            b_v397905 ≡ (eqw_i54 ans_v397898 guess_v397904)} ⇒
            match b_v397905 as __v397907 in proto with
            | true ⇒ end
            | false ⇒
              ⇑(df_v397908 : word_d8) ⇒
                ⇑{__v397909 :
                  (wdiff_d9 ans_v397898 guess_v397904 df_v397908)} ⇒
                  (wordle_loop_i55 ans_v397898 repeat_v397903)
            end
    end

logical wordle_i56 : proto =
  ⇑{ans_v397910 : word_d8} ⇒
    ⇑(repeat_v397911 : nat) ⇒
      (wordle_loop_i55 ans_v397910 repeat_v397911)

logical loop_ch_i57 : word_d8 → nat → L =
  fn (ans_v397914 : word_d8) (repeat_v397915 : nat) ⇒
    ch⟨(wordle_loop_i55 ans_v397914 repeat_v397915)⟩

logical loop_hc_i58 : word_d8 → nat → L =
  fn (ans_v397918 : word_d8) (repeat_v397919 : nat) ⇒
    hc⟨(wordle_loop_i55 ans_v397918 repeat_v397919)⟩

logical wordle_ch_i59 : L = ch⟨wordle_i56⟩

logical wordle_hc_i60 : L = hc⟨wordle_i56⟩

program read_word_i61 : unit‹U› → IO word_d8 =
  fn (__v397921 : unit‹U›) ⇒
    let s_v397922 ⇐ (readline_i33 ()) in
    (match (eqn_i9 (strlen_i20 s_v397922) 5) as b0_v397923 in
       {(eqn_i9 (strlen_i20 s_v397922) 5) ≡ b0_v397923} → IO word_d8 with
     | true ⇒
       fn {e_v397925 : (eqn_i9 (strlen_i20 s_v397922) 5) ≡ true} ⇒
         return (Word_c16‹›
                  s_v397922
                  (eqn_reflect_i48 (strlen_i20 s_v397922) 5 e_v397925))
     | false ⇒
       fn {__v397926 : (eqn_i9 (strlen_i20 s_v397922) 5) ≡ false} ⇒
         let __v397927 ⇐
           (print_i34 "please input a word with length of 5\n")
         in (read_word_i61 ())
     end refl (eqn_i9 (strlen_i20 s_v397922) 5))

program player_loop_i62 :
  ∀ {ans_v397928 : word_d8} →
    ∀ (repeat_v397929 : nat) →
      (loop_hc_i58 ans_v397928 repeat_v397929) → IO unit‹U›
=
  fn {ans_v397931 : word_d8} (repeat_v397932 : nat)
     (c_v397933 : (loop_hc_i58 ans_v397931 repeat_v397932)) ⇒
    (match repeat_v397932 as repeat0_v397934 in
       (loop_hc_i58 ans_v397931 repeat0_v397934) → IO unit‹U› with
     | O ⇒
       fn (c_v397936 : (loop_hc_i58 ans_v397931 0)) ⇒
         let __v397937 ⇐ recv c_v397936 in
         match __v397937 as __v397938 in IO unit‹U› with
         | ⟨ans_v397939, c_v397940⟩ ⇒
           let __v397941 ⇐ recv c_v397940 in
           match __v397941 as __v397942 in IO unit‹U› with
           | ⟨{pf_v397943}, c_v397944⟩ ⇒
             match ans_v397939 as __v397945 in IO unit‹U› with
             | Word_c16 s_v397946 __v397947 ⇒
               let __v397948 ⇐
                 (print_i34
                   (cats_i19
                     (cats_i19 "You Lose! The answer is " s_v397946) ".\n"))
               in close c_v397944
             end
           end
         end
     | S repeat_v397949 ⇒
       fn (c_v397950 : (loop_hc_i58 ans_v397931 repeat_v397949.+1)) ⇒
         let guess_v397951 ⇐ (read_word_i61 ()) in
         let c_v397952 ⇐ (send c_v397950 guess_v397951) in
         let __v397953 ⇐ recv c_v397952 in
         match __v397953 as __v397954 in IO unit‹U› with
         | ⟨b_v397955, c_v397956⟩ ⇒
           let __v397957 ⇐ recv c_v397956 in
           match __v397957 as __v397958 in IO unit‹U› with
           | ⟨{pf_v397959}, c_v397960⟩ ⇒
             (match b_v397955 as b0_v397961 in
                hc⟨match b0_v397961 as __v397963 in proto with
                     | true ⇒ end
                     | false ⇒
                       ⇑(df_v397964 : word_d8) ⇒
                         ⇑{__v397965 :
                           (wdiff_d9 ans_v397931 guess_v397951 df_v397964)} ⇒
                           (wordle_loop_i55 ans_v397931 repeat_v397949)
                     end⟩ ⊸
                  IO unit‹U› with
              | true ⇒
                ln (c_v397966 : hc⟨end⟩) ⇒
                  let __v397967 ⇐ (print_i34 "You Win!\n") in
                  close c_v397966
              | false ⇒
                ln (c_v397968 : hc⟨⇑(df_v397969 : word_d8) ⇒
                                       ⇑{__v397970 :
                                         (wdiff_d9
                                           ans_v397931 guess_v397951
                                           df_v397969)} ⇒
                                         (wordle_loop_i55
                                           ans_v397931 repeat_v397949)⟩) ⇒
                  let __v397971 ⇐ recv c_v397968 in
                  match __v397971 as __v397972 in IO unit‹U› with
                  | ⟨diff_v397973, c_v397974⟩ ⇒
                    let __v397975 ⇐ recv c_v397974 in
                    match __v397975 as __v397976 in IO unit‹U› with
                    | ⟨{pf_v397977}, c_v397978⟩ ⇒
                      match diff_v397973 as __v397979 in IO unit‹U› with
                      | Word_c16 s_v397980 __v397981 ⇒
                        let __v397982 ⇐
                          (print_i34
                            (cats_i19
                              (cats_i19
                                (cats_i19
                                  (cats_i19 "Incorrect, hint: " s_v397980)
                                  ". You have ")
                                (string_of_nat_i39 repeat_v397949))
                              " more tries.\n"))
                        in
                        (player_loop_i62
                          ans_v397931 repeat_v397949 c_v397978)
                      end
                    end
                  end
              end c_v397960)
           end
         end
     end c_v397933)

program player_i63 : wordle_hc_i60 → IO unit‹U› =
  fn (c_v397984 : wordle_hc_i60) ⇒
    let __v397985 ⇐ recv c_v397984 in
    match __v397985 as __v397986 in IO unit‹U› with
    | ⟨{ans_v397987}, c_v397988⟩ ⇒
      let __v397989 ⇐ recv c_v397988 in
      match __v397989 as __v397990 in IO unit‹U› with
      | ⟨repeat_v397991, c_v397992⟩ ⇒
        let __v397993 ⇐ (print_i34 "Wordle Game\n") in
        let __v397994 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v397995 ⇐
          (print_i34
            (cats_i19
              (cats_i19 "You have " (string_of_nat_i39 repeat_v397991))
              " tries.\n"))
        in (player_loop_i62 ans_v397987 repeat_v397991 c_v397992)
      end
    end

logical inductive at_d10
  (A_v397996 : U) (x_v397997 : A_v397996) (n_v397998 : nat) (xs_v397999 : 
(list_d6‹U, U› A_v397996)) : U =
| at_O_c18 of
    (A_v398000 : U) (x_v398001 : A_v398000) (n_v398002 : nat)
    (xs_v398003 : (list_d6‹U, U› A_v398000))
    (xs0_v398004 : (list_d6‹U, U› A_v398000))
    (__v398005 : n_v398002 ≡ 0)
    (__v398006 : xs_v398003 ≡ (cons_c11‹U, U› x_v398001 xs0_v398004))
    : (at_d10 A_v398000 x_v398001 n_v398002 xs_v398003)
| at_S_c19 of
    (A_v398007 : U) (x_v398008 : A_v398007) (n_v398009 : nat)
    (xs_v398010 : (list_d6‹U, U› A_v398007)) (n0_v398011 : nat)
    (x0_v398012 : A_v398007) (xs0_v398013 : (list_d6‹U, U› A_v398007))
    (h_v398014 : (at_d10 A_v398007 x_v398008 n0_v398011 xs0_v398013))
    (__v398015 : n_v398009 ≡ n0_v398011.+1)
    (__v398016 : xs_v398010 ≡ (cons_c11‹U, U› x0_v398012 xs0_v398013))
    : (at_d10 A_v398007 x_v398008 n_v398009 xs_v398010)

program get_at_i64 :
  ∀ {A_v398017 : U} →
    ∀ (n_v398018 : nat) →
      ∀ (xs_v398019 : (list_d6‹U, U› A_v398017)) →
        {(ltn_i6 n_v398018 (llen_i24‹U, U› A_v398017 xs_v398019)) ≡
           true} →
          ∃ (x_v398021 : A_v398017) ⊗
            {(at_d10 A_v398017 x_v398021 n_v398018 xs_v398019)}
=
  fn {A_v398022 : U} (n_v398023 : nat)
     (xs_v398024 : (list_d6‹U, U› A_v398022)) ⇒
    match xs_v398024 as xs0_v398025 in
      {(ltn_i6 n_v398023 (llen_i24‹U, U› A_v398022 xs0_v398025)) ≡ true} →
        ∃ (x_v398027 : A_v398022) ⊗
          {(at_d10 A_v398022 x_v398027 n_v398023 xs0_v398025)} with
    | nil_c10  ⇒
      fn {e_v398028 : (ltn_i6
                        n_v398023
                        (llen_i24‹U, U› A_v398022 nil_c10‹U, U›)) ≡
                        true} ⇒
        rew [b_v398029, __v398030 ⇒
          match b_v398029 as __v398031 in L with
          | true ⇒
            ∃ (x_v398032 : A_v398022) ⊗
              {(at_d10 A_v398022 x_v398032 n_v398023 nil_c10‹U, U›)}
          | false ⇒ unit‹L›
          end] e_v398028 in
        ⟨⟩
    | cons_c11 x_v398033 xs_v398034 ⇒
      match n_v398023 as n0_v398035 in
        {(ltn_i6 n0_v398035 (llen_i24‹U, U› A_v398022 xs_v398034).+1) ≡
           true} →
          ∃ (x0_v398037 : A_v398022) ⊗
            {(at_d10
               A_v398022 x0_v398037 n0_v398035
               (cons_c11‹U, U› x_v398033 xs_v398034))} with
      | O ⇒
        fn {e_v398038 : (ltn_i6
                          0 (llen_i24‹U, U› A_v398022 xs_v398034).+1) ≡
                          true} ⇒
          ⟨x_v398033, {(at_O_c18‹›
                           xs_v398034 refl 0
                           refl (cons_c11‹U, U› x_v398033 xs_v398034))}⟩
      | S n_v398039 ⇒
        fn {e_v398040 : (ltn_i6
                          n_v398039.+1
                          (llen_i24‹U, U› A_v398022 xs_v398034).+1) ≡
                          true} ⇒
          let __v398041 =
            (get_at_i64 A_v398022 n_v398039 xs_v398034 e_v398040)
          in
          match __v398041 as __v398042 in
            ∃ (x0_v398043 : A_v398022) ⊗
              {(at_d10
                 A_v398022 x0_v398043 n_v398039.+1
                 (cons_c11‹U, U› x_v398033 xs_v398034))} with
          | ⟨x0_v398044, {pf_v398045}⟩ ⇒
            ⟨x0_v398044, {(at_S_c19‹›
                              n_v398039 x_v398033 xs_v398034 pf_v398045
                              refl n_v398039.+1
                              refl (cons_c11‹U, U› x_v398033 xs_v398034))}⟩
          end
      end
    end

program rand_word_i65 : unit‹U› → IO word_d8 =
  fn (__v398047 : unit‹U›) ⇒
    let words_v398048 =
      ((cons_c11‹U, U›
         (Word_c16‹› "route" refl (strlen_i20 "route"))
         (cons_c11‹U, U›
           (Word_c16‹› "crash" refl (strlen_i20 "crash"))
           (cons_c11‹U, U›
             (Word_c16‹› "clown" refl (strlen_i20 "clown"))
             (cons_c11‹U, U›
               (Word_c16‹› "shaky" refl (strlen_i20 "shaky"))
               (cons_c11‹U, U›
                 (Word_c16‹› "vegan" refl (strlen_i20 "vegan"))
                 (cons_c11‹U, U›
                   (Word_c16‹› "power" refl (strlen_i20 "power"))
                   (cons_c11‹U, U›
                     (Word_c16‹› "trust" refl (strlen_i20 "trust"))
                     (cons_c11‹U, U›
                       (Word_c16‹› "enjoy" refl (strlen_i20 "enjoy"))
                       (cons_c11‹U, U›
                         (Word_c16‹› "brain" refl (strlen_i20 "brain"))
                         (cons_c11‹U, U›
                           (Word_c16‹› "adopt" refl (strlen_i20 "adopt"))
                           (cons_c11‹U, U›
                             (Word_c16‹›
                               "tower" refl (strlen_i20 "tower"))
                             (cons_c11‹U, U›
                               (Word_c16‹›
                                 "shade" refl (strlen_i20 "shade"))
                               (cons_c11‹U, U›
                                 (Word_c16‹›
                                   "delay" refl (strlen_i20 "delay"))
                                 (cons_c11‹U, U›
                                   (Word_c16‹›
                                     "twist" refl (strlen_i20 "twist"))
                                   (cons_c11‹U, U›
                                     (Word_c16‹›
                                       "alert" refl (strlen_i20 "alert"))
                                     (cons_c11‹U, U›
                                       (Word_c16‹›
                                         "choke" refl (strlen_i20 "choke"))
                                       (cons_c11‹U, U›
                                         (Word_c16‹›
                                           "split" refl (strlen_i20 "split"))
                                         (cons_c11‹U, U›
                                           (Word_c16‹›
                                             "rhyme"
                                             refl (strlen_i20 "rhyme"))
                                           (cons_c11‹U, U›
                                             (Word_c16‹›
                                               "muddy"
                                               refl (strlen_i20 "muddy"))
                                             (cons_c11‹U, U›
                                               (Word_c16‹›
                                                 "plant"
                                                 refl (strlen_i20 "plant"))
                                               nil_c10‹U, U›))))))))))))))))))))
        : (list_d6‹U, U› word_d8))
    in
    let r_v398049 ⇐ rand 0 19 in
    match r_v398049 as __v398050 in IO word_d8 with
    | Between_c4 n_v398051 __v398052 pf_v398053 ⇒
      let __v398054 = (get_at_i64 word_d8 n_v398051 words_v398048 pf_v398053)
      in
      match __v398054 as __v398055 in IO word_d8 with
      | ⟨w_v398056, {__v398057}⟩ ⇒ return w_v398056
      end
    end

program server_loop_i66 :
  ∀ (ans_v398058 : word_d8) →
    ∀ (repeat_v398059 : nat) →
      (loop_ch_i57 ans_v398058 repeat_v398059) → IO unit‹U›
=
  fn (ans_v398061 : word_d8) (repeat_v398062 : nat)
     (c_v398063 : (loop_ch_i57 ans_v398061 repeat_v398062)) ⇒
    (match repeat_v398062 as repeat0_v398064 in
       (loop_ch_i57 ans_v398061 repeat0_v398064) → IO unit‹U› with
     | O ⇒
       fn (c_v398066 : (loop_ch_i57 ans_v398061 0)) ⇒
         let c_v398067 ⇐ (send c_v398066 ans_v398061) in
         let c_v398068 ⇐ (send c_v398067 refl ans_v398061) in
         close c_v398068
     | S repeat_v398069 ⇒
       fn (c_v398070 : (loop_ch_i57 ans_v398061 repeat_v398069.+1)) ⇒
         let __v398071 ⇐ recv c_v398070 in
         match __v398071 as __v398072 in IO unit‹U› with
         | ⟨guess_v398073, c_v398074⟩ ⇒
           let b_v398075 = (eqw_i54 ans_v398061 guess_v398073) in
           let c_v398076 ⇐ (send c_v398074 b_v398075) in
           let c_v398077 ⇐
             (send c_v398076 refl (eqw_i54 ans_v398061 guess_v398073))
           in
           (match b_v398075 as b0_v398078 in
              ch⟨match b0_v398078 as __v398080 in proto with
                   | true ⇒ end
                   | false ⇒
                     ⇑(df_v398081 : word_d8) ⇒
                       ⇑{__v398082 :
                         (wdiff_d9 ans_v398061 guess_v398073 df_v398081)} ⇒
                         (wordle_loop_i55 ans_v398061 repeat_v398069)
                   end⟩ ⊸
                IO unit‹U› with
            | true ⇒ ln (c_v398083 : ch⟨end⟩) ⇒ close c_v398083
            | false ⇒
              ln (c_v398084 : ch⟨⇑(df_v398085 : word_d8) ⇒
                                     ⇑{__v398086 :
                                       (wdiff_d9
                                         ans_v398061 guess_v398073 df_v398085)} ⇒
                                       (wordle_loop_i55
                                         ans_v398061 repeat_v398069)⟩) ⇒
                let __v398087 = (word_diff_i53 ans_v398061 guess_v398073) in
                match __v398087 as __v398088 in IO unit‹U› with
                | ⟨df_v398089, {pf_v398090}⟩ ⇒
                  let c_v398091 ⇐ (send c_v398084 df_v398089) in
                  let c_v398092 ⇐ (send c_v398091 pf_v398090) in
                  (server_loop_i66 ans_v398061 repeat_v398069 c_v398092)
                end
            end c_v398077)
         end
     end c_v398063)

program server_i67 : wordle_ch_i59 → IO unit‹U› =
  fn (c_v398094 : wordle_ch_i59) ⇒
    let repeat_v398095 = 6 in
    let ans_v398096 ⇐ (rand_word_i65 ()) in
    let c_v398097 ⇐ (send c_v398094 ans_v398096) in
    let c_v398098 ⇐ (send c_v398097 repeat_v398095) in
    (server_loop_i66 ans_v398096 repeat_v398095 c_v398098)

program main_i68 : IO unit‹U› =
  let c_v398099 ⇐
    fork (c_v398100 : wordle_ch_i59) in (server_i67 c_v398100)
  in
  let c0_v398101 ⇐
    fork (c0_v398102 :
      ch⟨⇓(__v398103 : wordle_hc_i60) ⇒
             ⇑(__v398104 : unit‹U›) ⇒ end⟩)
    in
      let __v398105 ⇐ recv c0_v398102 in
      match __v398105 as __v398106 in IO unit‹U› with
      | ⟨c_v398107, c0_v398108⟩ ⇒
        let __v398109 ⇐ (player_i63 c_v398107) in
        let c0_v398110 ⇐ (send c0_v398108 ()) in close c0_v398110
      end
  in
  let c0_v398111 ⇐ (send c0_v398101 c_v398099) in
  let __v398112 ⇐ recv c0_v398111 in
  match __v398112 as __v398113 in IO unit‹U› with
  | ⟨__v398114, c0_v398115⟩ ⇒ close c0_v398115
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v399434 b2_v399435 ⇒
    match b1_v399434 with
    | true ⇒ b2_v399435 | false ⇒ false
    end

def orb_i2 =
  fn b1_v399436 b2_v399437 ⇒
    match b1_v399436 with
    | true ⇒ true | false ⇒ b2_v399437
    end

def notb_i3 =
  fn b_v399438 ⇒ match b_v399438 with
                   | true ⇒ false | false ⇒ true
                   end

def compareb_i4 =
  fn b1_v399439 b2_v399440 ⇒
    match b1_v399439 with
    | true ⇒ match b2_v399440 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v399440 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v399441 y_v399442 ⇒
    match x_v399441 with
    | O ⇒ true
    | S x_v399443 ⇒
      match y_v399442 with
      | O ⇒ false | S y_v399444 ⇒ ((lten_i5 x_v399443) y_v399444)
      end
    end

def ltn_i6 = fn x_v399445 y_v399446 ⇒ ((lten_i5 x_v399445.+1) y_v399446)

def gten_i7 = fn x_v399447 y_v399448 ⇒ ((lten_i5 y_v399448) x_v399447)

def gtn_i8 = fn x_v399449 y_v399450 ⇒ ((ltn_i6 y_v399450) x_v399449)

def eqn_i9 =
  fn x_v399451 y_v399452 ⇒
    match x_v399451 with
    | O ⇒ match y_v399452 with
            | O ⇒ true | S __v399453 ⇒ false
            end
    | S x_v399454 ⇒
      match y_v399452 with
      | O ⇒ false | S y_v399455 ⇒ ((eqn_i9 x_v399454) y_v399455)
      end
    end

def comparen_i10 =
  fn n1_v399456 n2_v399457 ⇒
    match n1_v399456 with
    | O ⇒ match n2_v399457 with
            | O ⇒ EQ_c3 | S __v399458 ⇒ LT_c1
            end
    | S n1_v399459 ⇒
      match n2_v399457 with
      | O ⇒ GT_c2 | S n2_v399460 ⇒ ((comparen_i10 n1_v399459) n2_v399460)
      end
    end

def pred_i11 =
  fn x_v399461 ⇒
    match x_v399461 with
    | O ⇒ 0 | S x_v399462 ⇒ x_v399462
    end

def addn_i12 =
  fn x_v399463 y_v399464 ⇒
    match x_v399463 with
    | O ⇒ y_v399464 | S x_v399465 ⇒ ((addn_i12 x_v399465) y_v399464).+1
    end

def subn_i13 =
  fn x_v399466 y_v399467 ⇒
    match y_v399467 with
    | O ⇒ x_v399466
    | S y_v399468 ⇒ ((subn_i13 (pred_i11 x_v399466)) y_v399468)
    end

def muln_i14 =
  fn x_v399469 y_v399470 ⇒
    match x_v399469 with
    | O ⇒ 0
    | S x_v399471 ⇒ ((addn_i12 y_v399470) ((muln_i14 x_v399471) y_v399470))
    end

def divn_i15 =
  fn x_v399472 y_v399473 ⇒
    match ((ltn_i6 x_v399472) y_v399473) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v399472) y_v399473)) y_v399473).+1
    end

def modn_i16 =
  fn x_v399474 y_v399475 ⇒
    ((subn_i13 x_v399474)
      ((muln_i14 ((divn_i15 x_v399474) y_v399475)) y_v399475))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v399476 c2_v399477 ⇒
    match c1_v399476 with
    | Char_c5 n1_v399478 ⇒
      match c2_v399477 with
      | Char_c5 n2_v399479 ⇒ ((eqn_i9 n1_v399478) n2_v399479)
      end
    end

def comparec_i18 =
  fn c1_v399480 c2_v399481 ⇒
    match c1_v399480 with
    | Char_c5 n1_v399482 ⇒
      match c2_v399481 with
      | Char_c5 n2_v399483 ⇒ ((comparen_i10 n1_v399482) n2_v399483)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v399484 s2_v399485 ⇒
    match s1_v399484 with
    | EmptyString_c6  ⇒ s2_v399485
    | String_c7 c_v399486 s1_v399487 ⇒
      (String_c7 c_v399486 ((cats_i19 s1_v399487) s2_v399485))
    end

def strlen_i20 =
  fn s_v399488 ⇒
    match s_v399488 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v399489 s_v399490 ⇒ (strlen_i20 s_v399490).+1
    end

def eqs_i21 =
  fn s1_v399491 s2_v399492 ⇒
    match s1_v399491 with
    | EmptyString_c6  ⇒
      match s2_v399492 with
      | EmptyString_c6  ⇒ true | String_c7 __v399493 __v399494 ⇒ false
      end
    | String_c7 c1_v399495 s1_v399496 ⇒
      match s2_v399492 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v399497 s2_v399498 ⇒
        ((andb_i1 ((eqc_i17 c1_v399495) c2_v399497))
          ((eqs_i21 s1_v399496) s2_v399498))
      end
    end

def compares_i22 =
  fn s1_v399499 s2_v399500 ⇒
    match s1_v399499 with
    | EmptyString_c6  ⇒
      match s2_v399500 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v399501 __v399502 ⇒ LT_c1
      end
    | String_c7 c1_v399503 s1_v399504 ⇒
      match s2_v399500 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v399505 s2_v399506 ⇒
        match ((comparec_i18 c1_v399503) c2_v399505) with
        | EQ_c3  ⇒ ((compares_i22 s1_v399504) s2_v399506)
        | LT_c1  ⇒ LT_c1 | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d14 =
| NoneUU_c26 of size(0) | SomeUU_c27 of size(1)

data optionUL_d13 =
| NoneUL_c24 of size(0) | SomeUL_c25 of size(1)

data optionLU_d12 =
| NoneLU_c22 of size(0)

data optionLL_d11 =
| NoneLL_c20 of size(0) | SomeLL_c21 of size(1)

def and_thenUUU_i76 =
  fn A_v399507 B_v399508 opt_v399509 ⇒
    ln f_v399510 ⇒
      match opt_v399509 with
      | NoneUU_c26  ⇒ NoneUU_c26
      | SomeUU_c27 x_v399511 ⇒ (f_v399510 x_v399511)
      end

def and_thenUUL_i75 =
  fn A_v399512 B_v399513 opt_v399514 ⇒
    ln f_v399515 ⇒
      match opt_v399514 with
      | NoneUL_c24  ⇒ NoneUL_c24
      | SomeUL_c25 x_v399516 ⇒ (f_v399515 x_v399516)
      end

def and_thenULU_i74 =
  fn A_v399517 B_v399518 opt_v399519 ⇒
    ln f_v399520 ⇒
      match opt_v399519 with
      | NoneUU_c26  ⇒ NoneLU_c22
      | SomeUU_c27 x_v399521 ⇒ (f_v399520 x_v399521)
      end

def and_thenULL_i73 =
  fn A_v399522 B_v399523 opt_v399524 ⇒
    ln f_v399525 ⇒
      match opt_v399524 with
      | NoneUL_c24  ⇒ NoneLL_c20
      | SomeUL_c25 x_v399526 ⇒ (f_v399525 x_v399526)
      end

def and_thenLUL_i71 =
  fn A_v399527 B_v399528 opt_v399529 ⇒
    ln f_v399530 ⇒
      match opt_v399529 with
      | NoneLL_c20  ⇒ NoneUL_c24
      | SomeLL_c21 x_v399531 ⇒ (f_v399530 x_v399531)
      end

def and_thenLLL_i69 =
  fn A_v399532 B_v399533 opt_v399534 ⇒
    ln f_v399535 ⇒
      match opt_v399534 with
      | NoneLL_c20  ⇒ NoneLL_c20
      | SomeLL_c21 x_v399536 ⇒ (f_v399535 x_v399536)
      end

data listUU_d18 =
| nilUU_c34 of size(0) | consUU_c35 of size(2)

data listUL_d17 =
| nilUL_c32 of size(0) | consUL_c33 of size(2)

data listLU_d16 =
| nilLU_c30 of size(0)

data listLL_d15 =
| nilLL_c28 of size(0) | consLL_c29 of size(2)

def lenUU_i84 =
  fn A_v399537 xs_v399538 ⇒
    match xs_v399538 with
    | nilUU_c34  ⇒ (0, nilUU_c34)
    | consUU_c35 x_v399539 xs_v399540 ⇒
      match ((lenUU_i84 NULL) xs_v399540) with
      | (n_v399541, xs_v399542) ⇒
        (n_v399541.+1, (consUU_c35 x_v399539 xs_v399542))
      end
    end

def lenUL_i83 =
  fn A_v399543 xs_v399544 ⇒
    match xs_v399544 with
    | nilUL_c32  ⇒ (0, nilUL_c32)
    | consUL_c33 x_v399545 xs_v399546 ⇒
      match ((lenUL_i83 NULL) xs_v399546) with
      | (n_v399547, xs_v399548) ⇒
        (n_v399547.+1, (consUL_c33 x_v399545 xs_v399548))
      end
    end

def lenLL_i81 =
  fn A_v399549 xs_v399550 ⇒
    match xs_v399550 with
    | nilLL_c28  ⇒ (0, nilLL_c28)
    | consLL_c29 x_v399551 xs_v399552 ⇒
      match ((lenLL_i81 NULL) xs_v399552) with
      | (n_v399553, xs_v399554) ⇒
        (n_v399553.+1, (consLL_c29 x_v399551 xs_v399554))
      end
    end

def appendUU_i88 =
  fn A_v399555 xs_v399556 ⇒
    ln ys_v399557 ⇒
      match xs_v399556 with
      | nilUU_c34  ⇒ ys_v399557
      | consUU_c35 x_v399558 xs_v399559 ⇒
        (consUU_c35 x_v399558 (((appendUU_i88 NULL) xs_v399559) ys_v399557))
      end

def appendUL_i87 =
  fn A_v399560 xs_v399561 ⇒
    ln ys_v399562 ⇒
      match xs_v399561 with
      | nilUL_c32  ⇒ ys_v399562
      | consUL_c33 x_v399563 xs_v399564 ⇒
        (consUL_c33 x_v399563 (((appendUL_i87 NULL) xs_v399564) ys_v399562))
      end

def appendLL_i85 =
  fn A_v399565 xs_v399566 ⇒
    ln ys_v399567 ⇒
      match xs_v399566 with
      | nilLL_c28  ⇒ ys_v399567
      | consLL_c29 x_v399568 xs_v399569 ⇒
        (consLL_c29 x_v399568 (((appendLL_i85 NULL) xs_v399569) ys_v399567))
      end

def readline_i33 =
  fn __v399570 ⇒
    let ch_v399571 ⇐ open stdin in
    let ch_v399572 ⇐ (send ch_v399571 true) in
    let __v399573 ⇐ recv ch_v399572 in
    match __v399573 with
    | (s_v399574, ch_v399575) ⇒
      let ch_v399576 ⇐ (send ch_v399575 false) in
      let __v399577 ⇐ close⇑ ch_v399576 in return s_v399574
    end

def print_i34 =
  fn s_v399578 ⇒
    let ch_v399579 ⇐ open stdout in
    let ch_v399580 ⇐ (send ch_v399579 true) in
    let ch_v399581 ⇐ (send ch_v399580 s_v399578) in
    let ch_v399582 ⇐ (send ch_v399581 false) in close⇑ ch_v399582

def prerr_i35 =
  fn s_v399583 ⇒
    let ch_v399584 ⇐ open stderr in
    let ch_v399585 ⇐ (send ch_v399584 true) in
    let ch_v399586 ⇐ (send ch_v399585 s_v399583) in
    let ch_v399587 ⇐ (send ch_v399586 false) in close⇑ ch_v399587

def digits_i36 =
  (consUU_c35
    "0"
    (consUU_c35
      "1"
      (consUU_c35
        "2"
        (consUU_c35
          "3"
          (consUU_c35
            "4"
            (consUU_c35
              "5"
              (consUU_c35
                "6"
                (consUU_c35 "7" (consUU_c35 "8" (consUU_c35 "9" nilUU_c34))))))))))

def get_at_i37 =
  fn A_v399588 n_v399589 xs_v399590 a_v399591 ⇒
    match n_v399589 with
    | O ⇒
      match xs_v399590 with
      | nilUU_c34  ⇒ a_v399591
      | consUU_c35 x_v399592 __v399593 ⇒ x_v399592
      end
    | S n_v399594 ⇒
      match xs_v399590 with
      | nilUU_c34  ⇒ a_v399591
      | consUU_c35 __v399595 xs_v399596 ⇒
        ((((get_at_i37 NULL) n_v399594) xs_v399596) a_v399591)
      end
    end

def string_of_digit_i38 =
  fn n_v399597 ⇒
    ((((get_at_i37 NULL) n_v399597) digits_i36) EmptyString_c6)

def string_of_nat_i39 =
  fn n_v399598 ⇒
    let s_v399599 = (string_of_digit_i38 ((modn_i16 n_v399598) 10)) in
    let n_v399600 = ((divn_i15 n_v399598) 10) in
    match ((ltn_i6 0) n_v399600) with
    | true ⇒ ((cats_i19 (string_of_nat_i39 n_v399600)) s_v399599)
    | false ⇒ s_v399599
    end

def digit_of_char_i40 =
  fn c_v399601 ⇒
    match ((eqc_i17 c_v399601) '0') with
    | true ⇒ (SomeUL_c25 0)
    | false ⇒
      match ((eqc_i17 c_v399601) '1') with
      | true ⇒ (SomeUL_c25 1)
      | false ⇒
        match ((eqc_i17 c_v399601) '2') with
        | true ⇒ (SomeUL_c25 2)
        | false ⇒
          match ((eqc_i17 c_v399601) '3') with
          | true ⇒ (SomeUL_c25 3)
          | false ⇒
            match ((eqc_i17 c_v399601) '4') with
            | true ⇒ (SomeUL_c25 4)
            | false ⇒
              match ((eqc_i17 c_v399601) '5') with
              | true ⇒ (SomeUL_c25 5)
              | false ⇒
                match ((eqc_i17 c_v399601) '6') with
                | true ⇒ (SomeUL_c25 6)
                | false ⇒
                  match ((eqc_i17 c_v399601) '7') with
                  | true ⇒ (SomeUL_c25 7)
                  | false ⇒
                    match ((eqc_i17 c_v399601) '8') with
                    | true ⇒ (SomeUL_c25 8)
                    | false ⇒
                      match ((eqc_i17 c_v399601) '9') with
                      | true ⇒ (SomeUL_c25 9) | false ⇒ NoneUL_c24
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i41 =
  fn s_v399602 acc_v399603 ⇒
    match s_v399602 with
    | EmptyString_c6  ⇒ (SomeUL_c25 acc_v399603)
    | String_c7 c_v399604 s_v399605 ⇒
      match (digit_of_char_i40 c_v399604) with
      | NoneUL_c24  ⇒ NoneUL_c24
      | SomeUL_c25 n_v399606 ⇒
        ((nat_of_string_loop_i41 s_v399605)
          ((addn_i12 ((muln_i14 acc_v399603) 10)) n_v399606))
      end
    end

def nat_of_string_i42 =
  fn s_v399607 ⇒ ((nat_of_string_loop_i41 s_v399607) 0)

def contains_i50 =
  fn c_v399608 s_v399609 ⇒
    match s_v399609 with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v399610 s_v399611 ⇒
      match ((eqc_i17 c_v399608) c0_v399610) with
      | true ⇒ true | false ⇒ ((contains_i50 c_v399608) s_v399611)
      end
    end

data diff_d7 =
| diff_EmptyString_c12 of size(3) | diff_StringY_c13 of size(8)
| diff_StringI_c14 of size(11) | diff_StringN_c15 of size(11)

def string_diff_i51 =
  fn ans_v399612 s1_v399613 s2_v399614 ⇒
    match s1_v399613 with
    | EmptyString_c6  ⇒
      match s2_v399614 with
      | EmptyString_c6  ⇒ fn e_v399615 ⇒ (EmptyString_c6, NULL)
      | String_c7 c2_v399616 s2_v399617 ⇒ fn e_v399618 ⇒ ()
      end
    | String_c7 c1_v399619 s1_v399620 ⇒
      match s2_v399614 with
      | EmptyString_c6  ⇒ fn e_v399621 ⇒ ()
      | String_c7 c2_v399622 s2_v399623 ⇒
        fn e_v399624 ⇒
          let e_v399625 = NULL in
          let __v399626 =
            ((((string_diff_i51 ans_v399612) s1_v399620) s2_v399623) NULL)
          in
          match __v399626 with
          | (df_v399627, pf_v399628) ⇒
            (match ((eqc_i17 c1_v399619) c2_v399622) with
             | true ⇒
               fn e1_v399629 ⇒
                 let e1_v399630 = NULL in
                 let h_v399631 = NULL in (((cats_i19 "Y") df_v399627), NULL)
             | false ⇒
               fn e1_v399632 ⇒
                 (match ((contains_i50 c2_v399622) ans_v399612) with
                  | true ⇒
                    fn e2_v399633 ⇒ (((cats_i19 "I") df_v399627), NULL)
                  | false ⇒
                    fn e2_v399634 ⇒ (((cats_i19 "N") df_v399627), NULL)
                  end NULL)
             end NULL)
          end
      end
    end

data word_d8 =
| Word_c16 of size(2)

data wdiff_d9 =
| diff_Word_c17 of size(10)

def word_diff_i53 =
  fn ans_v399635 guess_v399636 ⇒
    (match ans_v399635 with
     | Word_c16 s1_v399637 pf1_v399638 ⇒
       fn e1_v399639 ⇒
         (match guess_v399636 with
          | Word_c16 s2_v399640 pf2_v399641 ⇒
            fn e2_v399642 ⇒
              let e_v399643 = NULL in
              let __v399644 =
                ((((string_diff_i51 s1_v399637) s1_v399637) s2_v399640) NULL)
              in
              match __v399644 with
              | (s3_v399645, h_v399646) ⇒
                let e_v399647 = NULL in
                let pf_v399648 = NULL in ((Word_c16 s3_v399645 NULL), NULL)
              end
          end NULL)
     end NULL)

def eqw_i54 =
  fn w1_v399649 w2_v399650 ⇒
    match w1_v399649 with
    | Word_c16 s1_v399651 __v399652 ⇒
      match w2_v399650 with
      | Word_c16 s2_v399653 __v399654 ⇒ ((eqs_i21 s1_v399651) s2_v399653)
      end
    end

def read_word_i61 =
  fn __v399655 ⇒
    let s_v399656 ⇐ (readline_i33 ()) in
    (match ((eqn_i9 (strlen_i20 s_v399656)) 5) with
     | true ⇒ fn e_v399657 ⇒ return (Word_c16 s_v399656 NULL)
     | false ⇒
       fn __v399658 ⇒
         let __v399659 ⇐
           (print_i34 "please input a word with length of 5\n")
         in (read_word_i61 ())
     end NULL)

def player_loop_i62 =
  fn ans_v399660 repeat_v399661 c_v399662 ⇒
    (match repeat_v399661 with
     | O ⇒
       fn c_v399663 ⇒
         let __v399664 ⇐ recv c_v399663 in
         match __v399664 with
         | (ans_v399665, c_v399666) ⇒
           let __v399667 ⇐ {recv} c_v399666 in
           match __v399667 with
           | (pf_v399668, c_v399669) ⇒
             match ans_v399665 with
             | Word_c16 s_v399670 __v399671 ⇒
               let __v399672 ⇐
                 (print_i34
                   ((cats_i19
                      ((cats_i19 "You Lose! The answer is ") s_v399670))
                     ".\n"))
               in close⇓ c_v399669
             end
           end
         end
     | S repeat_v399673 ⇒
       fn c_v399674 ⇒
         let guess_v399675 ⇐ (read_word_i61 ()) in
         let c_v399676 ⇐ (send c_v399674 guess_v399675) in
         let __v399677 ⇐ recv c_v399676 in
         match __v399677 with
         | (b_v399678, c_v399679) ⇒
           let __v399680 ⇐ {recv} c_v399679 in
           match __v399680 with
           | (pf_v399681, c_v399682) ⇒
             (match b_v399678 with
              | true ⇒
                ln c_v399683 ⇒
                  let __v399684 ⇐ (print_i34 "You Win!\n") in
                  close⇓ c_v399683
              | false ⇒
                ln c_v399685 ⇒
                  let __v399686 ⇐ recv c_v399685 in
                  match __v399686 with
                  | (diff_v399687, c_v399688) ⇒
                    let __v399689 ⇐ {recv} c_v399688 in
                    match __v399689 with
                    | (pf_v399690, c_v399691) ⇒
                      match diff_v399687 with
                      | Word_c16 s_v399692 __v399693 ⇒
                        let __v399694 ⇐
                          (print_i34
                            ((cats_i19
                               ((cats_i19
                                  ((cats_i19
                                     ((cats_i19 "Incorrect, hint: ")
                                       s_v399692))
                                    ". You have "))
                                 (string_of_nat_i39 repeat_v399673)))
                              " more tries.\n"))
                        in
                        (((player_loop_i62 NULL) repeat_v399673) c_v399691)
                      end
                    end
                  end
              end c_v399682)
           end
         end
     end c_v399662)

def player_i63 =
  fn c_v399695 ⇒
    let __v399696 ⇐ {recv} c_v399695 in
    match __v399696 with
    | (ans_v399697, c_v399698) ⇒
      let __v399699 ⇐ recv c_v399698 in
      match __v399699 with
      | (repeat_v399700, c_v399701) ⇒
        let __v399702 ⇐ (print_i34 "Wordle Game\n") in
        let __v399703 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v399704 ⇐
          (print_i34
            ((cats_i19
               ((cats_i19 "You have ") (string_of_nat_i39 repeat_v399700)))
              " tries.\n"))
        in (((player_loop_i62 NULL) repeat_v399700) c_v399701)
      end
    end

data at_d10 =
| at_O_c18 of size(3) | at_S_c19 of size(6)

def get_at_i64 =
  fn A_v399705 n_v399706 xs_v399707 ⇒
    match xs_v399707 with
    | nilUU_c34  ⇒ fn e_v399708 ⇒ ()
    | consUU_c35 x_v399709 xs_v399710 ⇒
      match n_v399706 with
      | O ⇒ fn e_v399711 ⇒ (x_v399709, NULL)
      | S n_v399712 ⇒
        fn e_v399713 ⇒
          let __v399714 = ((((get_at_i64 NULL) n_v399712) xs_v399710) NULL)
          in
          match __v399714 with
          | (x0_v399715, pf_v399716) ⇒ (x0_v399715, NULL)
          end
      end
    end

def rand_word_i65 =
  fn __v399717 ⇒
    let words_v399718 =
      (consUU_c35
        (Word_c16 "route" NULL)
        (consUU_c35
          (Word_c16 "crash" NULL)
          (consUU_c35
            (Word_c16 "clown" NULL)
            (consUU_c35
              (Word_c16 "shaky" NULL)
              (consUU_c35
                (Word_c16 "vegan" NULL)
                (consUU_c35
                  (Word_c16 "power" NULL)
                  (consUU_c35
                    (Word_c16 "trust" NULL)
                    (consUU_c35
                      (Word_c16 "enjoy" NULL)
                      (consUU_c35
                        (Word_c16 "brain" NULL)
                        (consUU_c35
                          (Word_c16 "adopt" NULL)
                          (consUU_c35
                            (Word_c16 "tower" NULL)
                            (consUU_c35
                              (Word_c16 "shade" NULL)
                              (consUU_c35
                                (Word_c16 "delay" NULL)
                                (consUU_c35
                                  (Word_c16 "twist" NULL)
                                  (consUU_c35
                                    (Word_c16 "alert" NULL)
                                    (consUU_c35
                                      (Word_c16 "choke" NULL)
                                      (consUU_c35
                                        (Word_c16 "split" NULL)
                                        (consUU_c35
                                          (Word_c16 "rhyme" NULL)
                                          (consUU_c35
                                            (Word_c16 "muddy" NULL)
                                            (consUU_c35
                                              (Word_c16 "plant" NULL)
                                              nilUU_c34))))))))))))))))))))
    in
    let r_v399719 ⇐ rand 0 19 in
    match r_v399719 with
    | Between_c4 n_v399720 __v399721 pf_v399722 ⇒
      let __v399723 = ((((get_at_i64 NULL) n_v399720) words_v399718) NULL) in
      match __v399723 with
      | (w_v399724, __v399725) ⇒ return w_v399724
      end
    end

def server_loop_i66 =
  fn ans_v399726 repeat_v399727 c_v399728 ⇒
    (match repeat_v399727 with
     | O ⇒
       fn c_v399729 ⇒
         let c_v399730 ⇐ (send c_v399729 ans_v399726) in
         let c_v399731 ⇐ ({send} c_v399730 NULL) in close⇑ c_v399731
     | S repeat_v399732 ⇒
       fn c_v399733 ⇒
         let __v399734 ⇐ recv c_v399733 in
         match __v399734 with
         | (guess_v399735, c_v399736) ⇒
           let b_v399737 = ((eqw_i54 ans_v399726) guess_v399735) in
           let c_v399738 ⇐ (send c_v399736 b_v399737) in
           let c_v399739 ⇐ ({send} c_v399738 NULL) in
           (match b_v399737 with
            | true ⇒ ln c_v399740 ⇒ close⇑ c_v399740
            | false ⇒
              ln c_v399741 ⇒
                let __v399742 = ((word_diff_i53 ans_v399726) guess_v399735)
                in
                match __v399742 with
                | (df_v399743, pf_v399744) ⇒
                  let c_v399745 ⇐ (send c_v399741 df_v399743) in
                  let c_v399746 ⇐ ({send} c_v399745 NULL) in
                  (((server_loop_i66 ans_v399726) repeat_v399732) c_v399746)
                end
            end c_v399739)
         end
     end c_v399728)

def server_i67 =
  fn c_v399747 ⇒
    let repeat_v399748 = 6 in
    let ans_v399749 ⇐ (rand_word_i65 ()) in
    let c_v399750 ⇐ ({send} c_v399747 NULL) in
    let c_v399751 ⇐ (send c_v399750 repeat_v399748) in
    (((server_loop_i66 ans_v399749) repeat_v399748) c_v399751)

main =
  let c_v399752 ⇐ fork c_v399753 in (server_i67 c_v399753) in
  let c0_v399754 ⇐
    fork c0_v399755 in
      let __v399756 ⇐ recv c0_v399755 in
      match __v399756 with
      | (c_v399757, c0_v399758) ⇒
        let __v399759 ⇐ (player_i63 c_v399757) in
        let c0_v399760 ⇐ (send c0_v399758 ()) in close⇑ c0_v399760
      end
  in
  let c0_v399761 ⇐ (send c0_v399754 c_v399752) in
  let __v399762 ⇐ recv c0_v399761 in
  match __v399762 with
  | (__v399763, c0_v399764) ⇒ close⇓ c0_v399764
  end

trans12 success--------------------------

fun andb_i1(b1_v400207, b2_v400208) = if b1_v400207 then
                                        b2_v400208
                                      else
                                        0

val andbclo_i97 =
  fn b1_v400209 b2_v400210 ⇒ andb_i1(b1_v400209, b2_v400210)

fun orb_i2(b1_v400211, b2_v400212) = if b1_v400211 then
                                       1
                                     else
                                       b2_v400212

val orbclo_i98 = fn b1_v400213 b2_v400214 ⇒ orb_i2(b1_v400213, b2_v400214)

fun notb_i3(b_v400215) = if b_v400215 then
                           0
                         else
                           1

val notbclo_i99 = fn b_v400216 ⇒ notb_i3(b_v400216)

fun compareb_i4(b1_v400217, b2_v400218) =
  if b1_v400217 then
    if b2_v400218 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v400218 then
      LT_c1
    else
      EQ_c3

val comparebclo_i100 =
  fn b1_v400219 b2_v400220 ⇒ compareb_i4(b1_v400219, b2_v400220)

fun lten_i5(x_v400221, y_v400222) =
  let __v400223 = x_v400221 in
  if __v400223 then
    let x_v400224 = __v400223.-1 in
    let __v400225 = y_v400222 in
    if __v400225 then
      let y_v400226 = __v400225.-1 in lten_i5(x_v400224, y_v400226)
    else
      0
  else
    1

val ltenclo_i101 = fn x_v400227 y_v400228 ⇒ lten_i5(x_v400227, y_v400228)

fun ltn_i6(x_v400229, y_v400230) = lten_i5(x_v400229.+1, y_v400230)

val ltnclo_i102 = fn x_v400231 y_v400232 ⇒ ltn_i6(x_v400231, y_v400232)

fun gten_i7(x_v400233, y_v400234) = lten_i5(y_v400234, x_v400233)

val gtenclo_i103 = fn x_v400235 y_v400236 ⇒ gten_i7(x_v400235, y_v400236)

fun gtn_i8(x_v400237, y_v400238) = ltn_i6(y_v400238, x_v400237)

val gtnclo_i104 = fn x_v400239 y_v400240 ⇒ gtn_i8(x_v400239, y_v400240)

fun eqn_i9(x_v400241, y_v400242) =
  let __v400243 = x_v400241 in
  if __v400243 then
    let x_v400244 = __v400243.-1 in
    let __v400245 = y_v400242 in
    if __v400245 then
      let y_v400246 = __v400245.-1 in eqn_i9(x_v400244, y_v400246)
    else
      0
  else
    let __v400247 = y_v400242 in
    if __v400247 then
      let __v400248 = __v400247.-1 in 0
    else
      1

val eqnclo_i105 = fn x_v400249 y_v400250 ⇒ eqn_i9(x_v400249, y_v400250)

fun comparen_i10(n1_v400251, n2_v400252) =
  let __v400253 = n1_v400251 in
  if __v400253 then
    let n1_v400254 = __v400253.-1 in
    let __v400255 = n2_v400252 in
    if __v400255 then
      let n2_v400256 = __v400255.-1 in comparen_i10(n1_v400254, n2_v400256)
    else
      GT_c2
  else
    let __v400257 = n2_v400252 in
    if __v400257 then
      let __v400258 = __v400257.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i106 =
  fn n1_v400259 n2_v400260 ⇒ comparen_i10(n1_v400259, n2_v400260)

fun pred_i11(x_v400261) =
  let __v400262 = x_v400261 in
  if __v400262 then
    let x_v400263 = __v400262.-1 in x_v400263
  else
    0

val predclo_i107 = fn x_v400264 ⇒ pred_i11(x_v400264)

fun addn_i12(x_v400265, y_v400266) =
  let __v400267 = x_v400265 in
  if __v400267 then
    let x_v400268 = __v400267.-1 in addn_i12(x_v400268, y_v400266).+1
  else
    y_v400266

val addnclo_i108 = fn x_v400269 y_v400270 ⇒ addn_i12(x_v400269, y_v400270)

fun subn_i13(x_v400271, y_v400272) =
  let __v400273 = y_v400272 in
  if __v400273 then
    let y_v400274 = __v400273.-1 in subn_i13(pred_i11(x_v400271), y_v400274)
  else
    x_v400271

val subnclo_i109 = fn x_v400275 y_v400276 ⇒ subn_i13(x_v400275, y_v400276)

fun muln_i14(x_v400277, y_v400278) =
  let __v400279 = x_v400277 in
  if __v400279 then
    let x_v400280 = __v400279.-1 in
    addn_i12(y_v400278, muln_i14(x_v400280, y_v400278))
  else
    0

val mulnclo_i110 = fn x_v400281 y_v400282 ⇒ muln_i14(x_v400281, y_v400282)

fun divn_i15(x_v400283, y_v400284) =
  if ltn_i6(x_v400283, y_v400284) then
    0
  else
    divn_i15(subn_i13(x_v400283, y_v400284), y_v400284).+1

val divnclo_i111 = fn x_v400285 y_v400286 ⇒ divn_i15(x_v400285, y_v400286)

fun modn_i16(x_v400287, y_v400288) =
  subn_i13(x_v400287, muln_i14(divn_i15(x_v400287, y_v400288), y_v400288))

val modnclo_i112 = fn x_v400289 y_v400290 ⇒ modn_i16(x_v400289, y_v400290)

fun eqc_i17(c1_v400291, c2_v400292) =
  match c1_v400291 with
  | Char_c5 n1_v400293 ⇒
    match c2_v400292 with
    | Char_c5 n2_v400294 ⇒ eqn_i9(n1_v400293, n2_v400294)
    end
  end

val eqcclo_i113 =
  fn c1_v400295 c2_v400296 ⇒ eqc_i17(c1_v400295, c2_v400296)

fun comparec_i18(c1_v400297, c2_v400298) =
  match c1_v400297 with
  | Char_c5 n1_v400299 ⇒
    match c2_v400298 with
    | Char_c5 n2_v400300 ⇒ comparen_i10(n1_v400299, n2_v400300)
    end
  end

val comparecclo_i114 =
  fn c1_v400301 c2_v400302 ⇒ comparec_i18(c1_v400301, c2_v400302)

fun cats_i19(s1_v400303, s2_v400304) =
  match s1_v400303 with
  | EmptyString_c6  ⇒ s2_v400304
  | String_c7 c_v400305 s1_v400306 ⇒
    (String_c7 c_v400305 cats_i19(s1_v400306, s2_v400304))
  end

val catsclo_i115 =
  fn s1_v400307 s2_v400308 ⇒ cats_i19(s1_v400307, s2_v400308)

fun strlen_i20(s_v400309) =
  match s_v400309 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v400310 s_v400311 ⇒ strlen_i20(s_v400311).+1
  end

val strlenclo_i116 = fn s_v400312 ⇒ strlen_i20(s_v400312)

fun eqs_i21(s1_v400313, s2_v400314) =
  match s1_v400313 with
  | EmptyString_c6  ⇒
    match s2_v400314 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v400315 __v400316 ⇒ 0
    end
  | String_c7 c1_v400317 s1_v400318 ⇒
    match s2_v400314 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v400319 s2_v400320 ⇒
      andb_i1(eqc_i17(c1_v400317, c2_v400319),
              eqs_i21(s1_v400318, s2_v400320))
    end
  end

val eqsclo_i117 =
  fn s1_v400321 s2_v400322 ⇒ eqs_i21(s1_v400321, s2_v400322)

fun compares_i22(s1_v400323, s2_v400324) =
  match s1_v400323 with
  | EmptyString_c6  ⇒
    match s2_v400324 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v400325 __v400326 ⇒ LT_c1
    end
  | String_c7 c1_v400327 s1_v400328 ⇒
    match s2_v400324 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v400329 s2_v400330 ⇒
      match comparec_i18(c1_v400327, c2_v400329) with
      | EQ_c3  ⇒ compares_i22(s1_v400328, s2_v400330) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i118 =
  fn s1_v400331 s2_v400332 ⇒ compares_i22(s1_v400331, s2_v400332)

fun and_thenUUU_i76(A_v400333, B_v400334, opt_v400335, f_v400336) =
  match opt_v400335 with
  | NoneUU_c26  ⇒ NoneUU_c26
  | SomeUU_c27 x_v400337 ⇒ (f_v400336) x_v400337
  end

val and_thenUUUclo_i119 =
  fn A_v400338 B_v400339 opt_v400340 ⇒
    ln f_v400341 ⇒
      and_thenUUU_i76(A_v400338, B_v400339, opt_v400340, f_v400341)

fun and_thenUUL_i75(A_v400342, B_v400343, opt_v400344, f_v400345) =
  match opt_v400344 with
  | NoneUL_c24  ⇒ NoneUL_c24
  | SomeUL_c25 x_v400346 ⇒ (f_v400345) x_v400346
  end

val and_thenUULclo_i120 =
  fn A_v400347 B_v400348 opt_v400349 ⇒
    ln f_v400350 ⇒
      and_thenUUL_i75(A_v400347, B_v400348, opt_v400349, f_v400350)

fun and_thenULU_i74(A_v400351, B_v400352, opt_v400353, f_v400354) =
  match opt_v400353 with
  | NoneUU_c26  ⇒ NoneLU_c22
  | SomeUU_c27 x_v400355 ⇒ (f_v400354) x_v400355
  end

val and_thenULUclo_i121 =
  fn A_v400356 B_v400357 opt_v400358 ⇒
    ln f_v400359 ⇒
      and_thenULU_i74(A_v400356, B_v400357, opt_v400358, f_v400359)

fun and_thenULL_i73(A_v400360, B_v400361, opt_v400362, f_v400363) =
  match opt_v400362 with
  | NoneUL_c24  ⇒ NoneLL_c20
  | SomeUL_c25 x_v400364 ⇒ (f_v400363) x_v400364
  end

val and_thenULLclo_i122 =
  fn A_v400365 B_v400366 opt_v400367 ⇒
    ln f_v400368 ⇒
      and_thenULL_i73(A_v400365, B_v400366, opt_v400367, f_v400368)

fun and_thenLUL_i71(A_v400369, B_v400370, opt_v400371, f_v400372) =
  match opt_v400371 with
  | NoneLL_c20  ⇒ NoneUL_c24
  | SomeLL_c21 x_v400373 ⇒ (f_v400372) x_v400373
  end

val and_thenLULclo_i123 =
  fn A_v400374 B_v400375 opt_v400376 ⇒
    ln f_v400377 ⇒
      and_thenLUL_i71(A_v400374, B_v400375, opt_v400376, f_v400377)

fun and_thenLLL_i69(A_v400378, B_v400379, opt_v400380, f_v400381) =
  match opt_v400380 with
  | NoneLL_c20  ⇒ NoneLL_c20
  | SomeLL_c21 x_v400382 ⇒ (f_v400381) x_v400382
  end

val and_thenLLLclo_i124 =
  fn A_v400383 B_v400384 opt_v400385 ⇒
    ln f_v400386 ⇒
      and_thenLLL_i69(A_v400383, B_v400384, opt_v400385, f_v400386)

fun lenUU_i84(A_v400387, xs_v400388) =
  match xs_v400388 with
  | nilUU_c34  ⇒ (0, nilUU_c34)
  | consUU_c35 x_v400389 xs_v400390 ⇒
    match lenUU_i84(NULL, xs_v400390) with
    | (n_v400391, xs_v400392) ⇒
      (n_v400391.+1, (consUU_c35 x_v400389 xs_v400392))
    end
  end

val lenUUclo_i125 =
  fn A_v400393 xs_v400394 ⇒ lenUU_i84(A_v400393, xs_v400394)

fun lenUL_i83(A_v400395, xs_v400396) =
  match xs_v400396 with
  | nilUL_c32  ⇒ (0, nilUL_c32)
  | consUL_c33 x_v400397 xs_v400398 ⇒
    match lenUL_i83(NULL, xs_v400398) with
    | (n_v400399, xs_v400400) ⇒
      (n_v400399.+1, (consUL_c33 x_v400397 xs_v400400))
    end
  end

val lenULclo_i126 =
  fn A_v400401 xs_v400402 ⇒ lenUL_i83(A_v400401, xs_v400402)

fun lenLL_i81(A_v400403, xs_v400404) =
  match xs_v400404 with
  | nilLL_c28  ⇒ (0, nilLL_c28)
  | consLL_c29 x_v400405 xs_v400406 ⇒
    match lenLL_i81(NULL, xs_v400406) with
    | (n_v400407, xs_v400408) ⇒
      (n_v400407.+1, (consLL_c29 x_v400405 xs_v400408))
    end
  end

val lenLLclo_i127 =
  fn A_v400409 xs_v400410 ⇒ lenLL_i81(A_v400409, xs_v400410)

fun appendUU_i88(A_v400411, xs_v400412, ys_v400413) =
  match xs_v400412 with
  | nilUU_c34  ⇒ ys_v400413
  | consUU_c35 x_v400414 xs_v400415 ⇒
    (consUU_c35 x_v400414 appendUU_i88(NULL, xs_v400415, ys_v400413))
  end

val appendUUclo_i128 =
  fn A_v400416 xs_v400417 ⇒
    ln ys_v400418 ⇒ appendUU_i88(A_v400416, xs_v400417, ys_v400418)

fun appendUL_i87(A_v400419, xs_v400420, ys_v400421) =
  match xs_v400420 with
  | nilUL_c32  ⇒ ys_v400421
  | consUL_c33 x_v400422 xs_v400423 ⇒
    (consUL_c33 x_v400422 appendUL_i87(NULL, xs_v400423, ys_v400421))
  end

val appendULclo_i129 =
  fn A_v400424 xs_v400425 ⇒
    ln ys_v400426 ⇒ appendUL_i87(A_v400424, xs_v400425, ys_v400426)

fun appendLL_i85(A_v400427, xs_v400428, ys_v400429) =
  match xs_v400428 with
  | nilLL_c28  ⇒ ys_v400429
  | consLL_c29 x_v400430 xs_v400431 ⇒
    (consLL_c29 x_v400430 appendLL_i85(NULL, xs_v400431, ys_v400429))
  end

val appendLLclo_i130 =
  fn A_v400432 xs_v400433 ⇒
    ln ys_v400434 ⇒ appendLL_i85(A_v400432, xs_v400433, ys_v400434)

fun readline_i33(__v400435) =
  ln __v400436 ⇒
    let ch_v400437 = (ln __v400438 ⇒ open stdin) NULL in
    let ch_v400439 =
      ((fn x_v400440 ⇒ ln __v400441 ⇒ send(ch_v400437, x_v400440)) 1)
        NULL
    in
    let __v400442 = (ln __v400443 ⇒ recv(ch_v400439)) NULL in
    (match __v400442 with
     | (s_v400444, ch_v400445) ⇒
       ln __v400446 ⇒
         let ch_v400447 =
           ((fn x_v400448 ⇒ ln __v400449 ⇒ send(ch_v400445, x_v400448)) 0)
             NULL
         in
         let __v400450 =
           (ln __v400451 ⇒ let __v400452 = ch_v400447 in NULL) NULL
         in (ln __v400453 ⇒ s_v400444) NULL
     end) NULL

val readlineclo_i131 = fn __v400454 ⇒ readline_i33(__v400454)

fun print_i34(s_v400455) =
  ln __v400456 ⇒
    let ch_v400457 = (ln __v400458 ⇒ open stdout) NULL in
    let ch_v400459 =
      ((fn x_v400460 ⇒ ln __v400461 ⇒ send(ch_v400457, x_v400460)) 1)
        NULL
    in
    let ch_v400462 =
      ((fn x_v400463 ⇒ ln __v400464 ⇒ send(ch_v400459, x_v400463))
         s_v400455)
        NULL
    in
    let ch_v400465 =
      ((fn x_v400466 ⇒ ln __v400467 ⇒ send(ch_v400462, x_v400466)) 0)
        NULL
    in (ln __v400468 ⇒ let __v400469 = ch_v400465 in NULL) NULL

val printclo_i132 = fn s_v400470 ⇒ print_i34(s_v400470)

fun prerr_i35(s_v400471) =
  ln __v400472 ⇒
    let ch_v400473 = (ln __v400474 ⇒ open stderr) NULL in
    let ch_v400475 =
      ((fn x_v400476 ⇒ ln __v400477 ⇒ send(ch_v400473, x_v400476)) 1)
        NULL
    in
    let ch_v400478 =
      ((fn x_v400479 ⇒ ln __v400480 ⇒ send(ch_v400475, x_v400479))
         s_v400471)
        NULL
    in
    let ch_v400481 =
      ((fn x_v400482 ⇒ ln __v400483 ⇒ send(ch_v400478, x_v400482)) 0)
        NULL
    in (ln __v400484 ⇒ let __v400485 = ch_v400481 in NULL) NULL

val prerrclo_i133 = fn s_v400486 ⇒ prerr_i35(s_v400486)

val digits_i36 =
  (consUU_c35
    "0"
    (consUU_c35
      "1"
      (consUU_c35
        "2"
        (consUU_c35
          "3"
          (consUU_c35
            "4"
            (consUU_c35
              "5"
              (consUU_c35
                "6"
                (consUU_c35 "7" (consUU_c35 "8" (consUU_c35 "9" nilUU_c34))))))))))

fun get_at_i37(A_v400487, n_v400488, xs_v400489, a_v400490) =
  let __v400491 = n_v400488 in
  if __v400491 then
    let n_v400492 = __v400491.-1 in
    match xs_v400489 with
    | nilUU_c34  ⇒ a_v400490
    | consUU_c35 __v400493 xs_v400494 ⇒
      get_at_i37(NULL, n_v400492, xs_v400494, a_v400490)
    end
  else
    match xs_v400489 with
    | nilUU_c34  ⇒ a_v400490 | consUU_c35 x_v400495 __v400496 ⇒ x_v400495
    end

val get_atclo_i134 =
  fn A_v400497 n_v400498 xs_v400499 a_v400500 ⇒
    get_at_i37(A_v400497, n_v400498, xs_v400499, a_v400500)

fun string_of_digit_i38(n_v400501) =
  get_at_i37(NULL, n_v400501, digits_i36, EmptyString_c6)

val string_of_digitclo_i135 = fn n_v400502 ⇒ string_of_digit_i38(n_v400502)

fun string_of_nat_i39(n_v400503) =
  let s_v400504 = string_of_digit_i38(modn_i16(n_v400503, 10)) in
  let n_v400505 = divn_i15(n_v400503, 10) in
  if ltn_i6(0, n_v400505) then
    cats_i19(string_of_nat_i39(n_v400505), s_v400504)
  else
    s_v400504

val string_of_natclo_i136 = fn n_v400506 ⇒ string_of_nat_i39(n_v400506)

fun digit_of_char_i40(c_v400507) =
  if eqc_i17(c_v400507, '0') then
    (SomeUL_c25 0)
  else
    if eqc_i17(c_v400507, '1') then
      (SomeUL_c25 1)
    else
      if eqc_i17(c_v400507, '2') then
        (SomeUL_c25 2)
      else
        if eqc_i17(c_v400507, '3') then
          (SomeUL_c25 3)
        else
          if eqc_i17(c_v400507, '4') then
            (SomeUL_c25 4)
          else
            if eqc_i17(c_v400507, '5') then
              (SomeUL_c25 5)
            else
              if eqc_i17(c_v400507, '6') then
                (SomeUL_c25 6)
              else
                if eqc_i17(c_v400507, '7') then
                  (SomeUL_c25 7)
                else
                  if eqc_i17(c_v400507, '8') then
                    (SomeUL_c25 8)
                  else
                    if eqc_i17(c_v400507, '9') then
                      (SomeUL_c25 9)
                    else
                      NoneUL_c24

val digit_of_charclo_i137 = fn c_v400508 ⇒ digit_of_char_i40(c_v400508)

fun nat_of_string_loop_i41(s_v400509, acc_v400510) =
  match s_v400509 with
  | EmptyString_c6  ⇒ (SomeUL_c25 acc_v400510)
  | String_c7 c_v400511 s_v400512 ⇒
    match digit_of_char_i40(c_v400511) with
    | NoneUL_c24  ⇒ NoneUL_c24
    | SomeUL_c25 n_v400513 ⇒
      nat_of_string_loop_i41(s_v400512,
                             addn_i12(muln_i14(acc_v400510, 10), n_v400513))
    end
  end

val nat_of_string_loopclo_i138 =
  fn s_v400514 acc_v400515 ⇒ nat_of_string_loop_i41(s_v400514, acc_v400515)

fun nat_of_string_i42(s_v400516) = nat_of_string_loop_i41(s_v400516, 0)

val nat_of_stringclo_i139 = fn s_v400517 ⇒ nat_of_string_i42(s_v400517)

fun contains_i50(c_v400518, s_v400519) =
  match s_v400519 with
  | EmptyString_c6  ⇒ 0
  | String_c7 c0_v400520 s_v400521 ⇒
    if eqc_i17(c_v400518, c0_v400520) then
      1
    else
      contains_i50(c_v400518, s_v400521)
  end

val containsclo_i140 =
  fn c_v400522 s_v400523 ⇒ contains_i50(c_v400522, s_v400523)

fun string_diff_i51(ans_v400524, s1_v400525, s2_v400526) =
  match s1_v400525 with
  | EmptyString_c6  ⇒
    match s2_v400526 with
    | EmptyString_c6  ⇒ fn e_v400527 ⇒ (EmptyString_c6, NULL)
    | String_c7 c2_v400528 s2_v400529 ⇒ fn e_v400530 ⇒ NULL
    end
  | String_c7 c1_v400531 s1_v400532 ⇒
    match s2_v400526 with
    | EmptyString_c6  ⇒ fn e_v400533 ⇒ NULL
    | String_c7 c2_v400534 s2_v400535 ⇒
      fn e_v400536 ⇒
        let e_v400537 = NULL in
        let __v400538 =
          ((((string_diffclo_i141) ans_v400524) s1_v400532) s2_v400535) NULL
        in
        match __v400538 with
        | (df_v400539, pf_v400540) ⇒
          (if eqc_i17(c1_v400531, c2_v400534) then
             fn e1_v400541 ⇒
               let e1_v400542 = NULL in
               let h_v400543 = NULL in (cats_i19("Y", df_v400539), NULL)
           else
             fn e1_v400544 ⇒
               (if contains_i50(c2_v400534, ans_v400524) then
                  fn e2_v400545 ⇒ (cats_i19("I", df_v400539), NULL)
                else
                  fn e2_v400546 ⇒ (cats_i19("N", df_v400539), NULL))
                 NULL)
            NULL
        end
    end
  end

val string_diffclo_i141 =
  fn ans_v400547 s1_v400548 s2_v400549 ⇒
    string_diff_i51(ans_v400547, s1_v400548, s2_v400549)

fun word_diff_i53(ans_v400550, guess_v400551) =
  (match ans_v400550 with
   | Word_c16 s1_v400552 pf1_v400553 ⇒
     fn e1_v400554 ⇒
       (match guess_v400551 with
        | Word_c16 s2_v400555 pf2_v400556 ⇒
          fn e2_v400557 ⇒
            let e_v400558 = NULL in
            let __v400559 =
              ((((string_diffclo_i141) s1_v400552) s1_v400552) s2_v400555)
                NULL
            in
            match __v400559 with
            | (s3_v400560, h_v400561) ⇒
              let e_v400562 = NULL in
              let pf_v400563 = NULL in ((Word_c16 s3_v400560 NULL), NULL)
            end
        end) NULL
   end) NULL

val word_diffclo_i142 =
  fn ans_v400564 guess_v400565 ⇒ word_diff_i53(ans_v400564, guess_v400565)

fun eqw_i54(w1_v400566, w2_v400567) =
  match w1_v400566 with
  | Word_c16 s1_v400568 __v400569 ⇒
    match w2_v400567 with
    | Word_c16 s2_v400570 __v400571 ⇒ eqs_i21(s1_v400568, s2_v400570)
    end
  end

val eqwclo_i143 =
  fn w1_v400572 w2_v400573 ⇒ eqw_i54(w1_v400572, w2_v400573)

fun read_word_i61(__v400574) =
  ln __v400575 ⇒
    let s_v400576 = (readline_i33(NULL)) NULL in
    ((if eqn_i9(strlen_i20(s_v400576), 5) then
        fn e_v400577 ⇒ ln __v400578 ⇒ (Word_c16 s_v400576 NULL)
      else
        fn __v400579 ⇒
          ln __v400580 ⇒
            let __v400581 =
              (print_i34("please input a word with length of 5\n")) NULL
            in (read_word_i61(NULL)) NULL)
       NULL)
      NULL

val read_wordclo_i144 = fn __v400582 ⇒ read_word_i61(__v400582)

fun player_loop_i62(ans_v400583, repeat_v400584, c_v400585) =
  (let __v400586 = repeat_v400584 in
   if __v400586 then
     let repeat_v400587 = __v400586.-1 in
     fn c_v400588 ⇒
       ln __v400589 ⇒
         let guess_v400590 = (read_word_i61(NULL)) NULL in
         let c_v400591 =
           ((fn x_v400592 ⇒ ln __v400593 ⇒ send(c_v400588, x_v400592))
              guess_v400590)
             NULL
         in
         let __v400594 = (ln __v400595 ⇒ recv(c_v400591)) NULL in
         (match __v400594 with
          | (b_v400596, c_v400597) ⇒
            ln __v400598 ⇒
              let __v400599 = (ln __v400600 ⇒ (NULL, c_v400597)) NULL in
              (match __v400599 with
               | (pf_v400601, c_v400602) ⇒
                 (if b_v400596 then
                    ln c_v400603 __v400604 ⇒
                      let __v400605 = (print_i34("You Win!\n")) NULL in
                      (ln __v400606 ⇒ close(c_v400603)) NULL
                  else
                    ln c_v400607 __v400608 ⇒
                      let __v400609 = (ln __v400610 ⇒ recv(c_v400607)) NULL
                      in
                      (match __v400609 with
                       | (diff_v400611, c_v400612) ⇒
                         ln __v400613 ⇒
                           let __v400614 =
                             (ln __v400615 ⇒ (NULL, c_v400612)) NULL
                           in
                           (match __v400614 with
                            | (pf_v400616, c_v400617) ⇒
                              match diff_v400611 with
                              | Word_c16 s_v400618 __v400619 ⇒
                                ln __v400620 ⇒
                                  let __v400621 =
                                    (print_i34(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Incorrect, hint: ",
                                                                 s_v400618),
                                                                 ". You have "),
                                                                 string_of_nat_i39(
                                                                 repeat_v400587)),
                                                        " more tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i62(NULL, repeat_v400587,
                                                   c_v400617))
                                    NULL
                              end
                            end) NULL
                       end) NULL)
                   c_v400602
               end) NULL
          end) NULL
   else
     fn c_v400622 ⇒
       ln __v400623 ⇒
         let __v400624 = (ln __v400625 ⇒ recv(c_v400622)) NULL in
         (match __v400624 with
          | (ans_v400626, c_v400627) ⇒
            ln __v400628 ⇒
              let __v400629 = (ln __v400630 ⇒ (NULL, c_v400627)) NULL in
              (match __v400629 with
               | (pf_v400631, c_v400632) ⇒
                 match ans_v400626 with
                 | Word_c16 s_v400633 __v400634 ⇒
                   ln __v400635 ⇒
                     let __v400636 =
                       (print_i34(cats_i19(cats_i19("You Lose! The answer is ",
                                                    s_v400633),
                                           ".\n")))
                         NULL
                     in (ln __v400637 ⇒ close(c_v400632)) NULL
                 end
               end) NULL
          end) NULL)
    c_v400585

val player_loopclo_i145 =
  fn ans_v400638 repeat_v400639 c_v400640 ⇒
    player_loop_i62(ans_v400638, repeat_v400639, c_v400640)

fun player_i63(c_v400641) =
  ln __v400642 ⇒
    let __v400643 = (ln __v400644 ⇒ (NULL, c_v400641)) NULL in
    (match __v400643 with
     | (ans_v400645, c_v400646) ⇒
       ln __v400647 ⇒
         let __v400648 = (ln __v400649 ⇒ recv(c_v400646)) NULL in
         (match __v400648 with
          | (repeat_v400650, c_v400651) ⇒
            ln __v400652 ⇒
              let __v400653 = (print_i34("Wordle Game\n")) NULL in
              let __v400654 =
                (print_i34("Please guess a word of length 5.\n")) NULL
              in
              let __v400655 =
                (print_i34(cats_i19(cats_i19("You have ",
                                             string_of_nat_i39(repeat_v400650)),
                                    " tries.\n")))
                  NULL
              in (player_loop_i62(NULL, repeat_v400650, c_v400651)) NULL
          end) NULL
     end) NULL

val playerclo_i146 = fn c_v400656 ⇒ player_i63(c_v400656)

fun get_at_i64(A_v400657, n_v400658, xs_v400659) =
  match xs_v400659 with
  | nilUU_c34  ⇒ fn e_v400660 ⇒ NULL
  | consUU_c35 x_v400661 xs_v400662 ⇒
    let __v400663 = n_v400658 in
    if __v400663 then
      let n_v400664 = __v400663.-1 in
      fn e_v400665 ⇒
        let __v400666 = ((((get_atclo_i147) NULL) n_v400664) xs_v400662) NULL
        in
        match __v400666 with
        | (x0_v400667, pf_v400668) ⇒ (x0_v400667, NULL)
        end
    else
      fn e_v400669 ⇒ (x_v400661, NULL)
  end

val get_atclo_i147 =
  fn A_v400670 n_v400671 xs_v400672 ⇒
    get_at_i64(A_v400670, n_v400671, xs_v400672)

fun rand_word_i65(__v400673) =
  let words_v400674 =
    (consUU_c35
      (Word_c16 "route" NULL)
      (consUU_c35
        (Word_c16 "crash" NULL)
        (consUU_c35
          (Word_c16 "clown" NULL)
          (consUU_c35
            (Word_c16 "shaky" NULL)
            (consUU_c35
              (Word_c16 "vegan" NULL)
              (consUU_c35
                (Word_c16 "power" NULL)
                (consUU_c35
                  (Word_c16 "trust" NULL)
                  (consUU_c35
                    (Word_c16 "enjoy" NULL)
                    (consUU_c35
                      (Word_c16 "brain" NULL)
                      (consUU_c35
                        (Word_c16 "adopt" NULL)
                        (consUU_c35
                          (Word_c16 "tower" NULL)
                          (consUU_c35
                            (Word_c16 "shade" NULL)
                            (consUU_c35
                              (Word_c16 "delay" NULL)
                              (consUU_c35
                                (Word_c16 "twist" NULL)
                                (consUU_c35
                                  (Word_c16 "alert" NULL)
                                  (consUU_c35
                                    (Word_c16 "choke" NULL)
                                    (consUU_c35
                                      (Word_c16 "split" NULL)
                                      (consUU_c35
                                        (Word_c16 "rhyme" NULL)
                                        (consUU_c35
                                          (Word_c16 "muddy" NULL)
                                          (consUU_c35
                                            (Word_c16 "plant" NULL) nilUU_c34))))))))))))))))))))
  in
  ln __v400675 ⇒
    let r_v400676 = (ln __v400677 ⇒ rand(0, 19)) NULL in
    (match r_v400676 with
     | Between_c4 n_v400678 __v400679 pf_v400680 ⇒
       let __v400681 =
         ((((get_atclo_i147) NULL) n_v400678) words_v400674) NULL
       in
       match __v400681 with
       | (w_v400682, __v400683) ⇒ ln __v400684 ⇒ w_v400682
       end
     end) NULL

val rand_wordclo_i148 = fn __v400685 ⇒ rand_word_i65(__v400685)

fun server_loop_i66(ans_v400686, repeat_v400687, c_v400688) =
  (let __v400689 = repeat_v400687 in
   if __v400689 then
     let repeat_v400690 = __v400689.-1 in
     fn c_v400691 ⇒
       ln __v400692 ⇒
         let __v400693 = (ln __v400694 ⇒ recv(c_v400691)) NULL in
         (match __v400693 with
          | (guess_v400695, c_v400696) ⇒
            let b_v400697 = eqw_i54(ans_v400686, guess_v400695) in
            ln __v400698 ⇒
              let c_v400699 =
                ((fn x_v400700 ⇒
                    ln __v400701 ⇒ send(c_v400696, x_v400700))
                   b_v400697)
                  NULL
              in
              let c_v400702 =
                ((fn x_v400703 ⇒ ln __v400704 ⇒ c_v400699) NULL) NULL
              in
              ((if b_v400697 then
                  ln c_v400705 __v400706 ⇒
                    let __v400707 = c_v400705 in NULL
                else
                  ln c_v400708 ⇒
                    let __v400709 = word_diff_i53(ans_v400686, guess_v400695)
                    in
                    match __v400709 with
                    | (df_v400710, pf_v400711) ⇒
                      ln __v400712 ⇒
                        let c_v400713 =
                          ((fn x_v400714 ⇒
                              ln __v400715 ⇒ send(c_v400708, x_v400714))
                             df_v400710)
                            NULL
                        in
                        let c_v400716 =
                          ((fn x_v400717 ⇒ ln __v400718 ⇒ c_v400713) NULL)
                            NULL
                        in
                        (server_loop_i66(ans_v400686, repeat_v400690,
                                         c_v400716))
                          NULL
                    end)
                 c_v400702)
                NULL
          end) NULL
   else
     fn c_v400719 ⇒
       ln __v400720 ⇒
         let c_v400721 =
           ((fn x_v400722 ⇒ ln __v400723 ⇒ send(c_v400719, x_v400722))
              ans_v400686)
             NULL
         in
         let c_v400724 =
           ((fn x_v400725 ⇒ ln __v400726 ⇒ c_v400721) NULL) NULL
         in (ln __v400727 ⇒ let __v400728 = c_v400724 in NULL) NULL)
    c_v400688

val server_loopclo_i149 =
  fn ans_v400729 repeat_v400730 c_v400731 ⇒
    server_loop_i66(ans_v400729, repeat_v400730, c_v400731)

fun server_i67(c_v400732) =
  let repeat_v400733 = 6 in
  ln __v400734 ⇒
    let ans_v400735 = (rand_word_i65(NULL)) NULL in
    let c_v400736 = ((fn x_v400737 ⇒ ln __v400738 ⇒ c_v400732) NULL) NULL
    in
    let c_v400739 =
      ((fn x_v400740 ⇒ ln __v400741 ⇒ send(c_v400736, x_v400740))
         repeat_v400733)
        NULL
    in (server_loop_i66(ans_v400735, repeat_v400733, c_v400739)) NULL

val serverclo_i150 = fn c_v400742 ⇒ server_i67(c_v400742)

main =
  (ln __v400743 ⇒
     let c_v400744 =
       (ln __v400745 ⇒ fork c_v400746 in (server_i67(c_v400746)) NULL) NULL
     in
     let c0_v400747 =
       (ln __v400748 ⇒
          fork c0_v400749 in
            (ln __v400750 ⇒
               let __v400751 = (ln __v400752 ⇒ recv(c0_v400749)) NULL in
               (match __v400751 with
                | (c_v400753, c0_v400754) ⇒
                  ln __v400755 ⇒
                    let __v400756 = (player_i63(c_v400753)) NULL in
                    let c0_v400757 =
                      ((fn x_v400758 ⇒
                          ln __v400759 ⇒ send(c0_v400754, x_v400758))
                         NULL)
                        NULL
                    in
                    (ln __v400760 ⇒ let __v400761 = c0_v400757 in NULL)
                      NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v400762 =
       ((ln x_v400763 __v400764 ⇒ send(c0_v400747, x_v400763)) c_v400744)
         NULL
     in
     let __v400765 = (ln __v400766 ⇒ recv(c0_v400762)) NULL in
     (match __v400765 with
      | (__v400767, c0_v400768) ⇒ ln __v400769 ⇒ close(c0_v400768)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v402063, b2_v402064) = if b1_v402063 then
                                        b2_v402064
                                      else
                                        0

val andbclo_i97 =
  fn b1_v402065 b2_v402066 ⇒ andb_i1(b1_v402065, b2_v402066)

fun orb_i2(b1_v402067, b2_v402068) = if b1_v402067 then
                                       1
                                     else
                                       b2_v402068

val orbclo_i98 = fn b1_v402069 b2_v402070 ⇒ orb_i2(b1_v402069, b2_v402070)

fun notb_i3(b_v402071) = if b_v402071 then
                           0
                         else
                           1

val notbclo_i99 = fn b_v402072 ⇒ notb_i3(b_v402072)

fun compareb_i4(b1_v402073, b2_v402074) =
  if b1_v402073 then
    if b2_v402074 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v402074 then
      LT_c1
    else
      EQ_c3

val comparebclo_i100 =
  fn b1_v402075 b2_v402076 ⇒ compareb_i4(b1_v402075, b2_v402076)

fun lten_i5(x_v402077, y_v402078) =
  if x_v402077 then
    if y_v402078 then
      lten_i5(x_v402077.-1, y_v402078.-1)
    else
      0
  else
    1

val ltenclo_i101 = fn x_v402079 y_v402080 ⇒ lten_i5(x_v402079, y_v402080)

fun ltn_i6(x_v402081, y_v402082) = lten_i5(x_v402081.+1, y_v402082)

val ltnclo_i102 = fn x_v402083 y_v402084 ⇒ ltn_i6(x_v402083, y_v402084)

fun gten_i7(x_v402085, y_v402086) = lten_i5(y_v402086, x_v402085)

val gtenclo_i103 = fn x_v402087 y_v402088 ⇒ gten_i7(x_v402087, y_v402088)

fun gtn_i8(x_v402089, y_v402090) = ltn_i6(y_v402090, x_v402089)

val gtnclo_i104 = fn x_v402091 y_v402092 ⇒ gtn_i8(x_v402091, y_v402092)

fun eqn_i9(x_v402093, y_v402094) =
  if x_v402093 then
    if y_v402094 then
      eqn_i9(x_v402093.-1, y_v402094.-1)
    else
      0
  else
    if y_v402094 then
      0
    else
      1

val eqnclo_i105 = fn x_v402095 y_v402096 ⇒ eqn_i9(x_v402095, y_v402096)

fun comparen_i10(n1_v402097, n2_v402098) =
  if n1_v402097 then
    if n2_v402098 then
      comparen_i10(n1_v402097.-1, n2_v402098.-1)
    else
      GT_c2
  else
    if n2_v402098 then
      LT_c1
    else
      EQ_c3

val comparenclo_i106 =
  fn n1_v402099 n2_v402100 ⇒ comparen_i10(n1_v402099, n2_v402100)

fun pred_i11(x_v402101) = if x_v402101 then
                            x_v402101.-1
                          else
                            0

val predclo_i107 = fn x_v402102 ⇒ pred_i11(x_v402102)

fun addn_i12(x_v402103, y_v402104) =
  if x_v402103 then
    addn_i12(x_v402103.-1, y_v402104).+1
  else
    y_v402104

val addnclo_i108 = fn x_v402105 y_v402106 ⇒ addn_i12(x_v402105, y_v402106)

fun subn_i13(x_v402107, y_v402108) =
  if y_v402108 then
    subn_i13(pred_i11(x_v402107), y_v402108.-1)
  else
    x_v402107

val subnclo_i109 = fn x_v402109 y_v402110 ⇒ subn_i13(x_v402109, y_v402110)

fun muln_i14(x_v402111, y_v402112) =
  if x_v402111 then
    addn_i12(y_v402112, muln_i14(x_v402111.-1, y_v402112))
  else
    0

val mulnclo_i110 = fn x_v402113 y_v402114 ⇒ muln_i14(x_v402113, y_v402114)

fun divn_i15(x_v402115, y_v402116) =
  if ltn_i6(x_v402115, y_v402116) then
    0
  else
    divn_i15(subn_i13(x_v402115, y_v402116), y_v402116).+1

val divnclo_i111 = fn x_v402117 y_v402118 ⇒ divn_i15(x_v402117, y_v402118)

fun modn_i16(x_v402119, y_v402120) =
  subn_i13(x_v402119, muln_i14(divn_i15(x_v402119, y_v402120), y_v402120))

val modnclo_i112 = fn x_v402121 y_v402122 ⇒ modn_i16(x_v402121, y_v402122)

fun eqc_i17(c1_v402123, c2_v402124) =
  match c1_v402123 with
  | Char_c5 n1_v402125 ⇒
    match c2_v402124 with
    | Char_c5 n2_v402126 ⇒ eqn_i9(n1_v402125, n2_v402126)
    end
  end

val eqcclo_i113 =
  fn c1_v402127 c2_v402128 ⇒ eqc_i17(c1_v402127, c2_v402128)

fun comparec_i18(c1_v402129, c2_v402130) =
  match c1_v402129 with
  | Char_c5 n1_v402131 ⇒
    match c2_v402130 with
    | Char_c5 n2_v402132 ⇒ comparen_i10(n1_v402131, n2_v402132)
    end
  end

val comparecclo_i114 =
  fn c1_v402133 c2_v402134 ⇒ comparec_i18(c1_v402133, c2_v402134)

fun cats_i19(s1_v402135, s2_v402136) =
  match s1_v402135 with
  | EmptyString_c6  ⇒ s2_v402136
  | String_c7 c_v402137 s1_v402138 ⇒
    (String_c7 c_v402137 cats_i19(s1_v402138, s2_v402136))
  end

val catsclo_i115 =
  fn s1_v402139 s2_v402140 ⇒ cats_i19(s1_v402139, s2_v402140)

fun strlen_i20(s_v402141) =
  match s_v402141 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v402142 s_v402143 ⇒ strlen_i20(s_v402143).+1
  end

val strlenclo_i116 = fn s_v402144 ⇒ strlen_i20(s_v402144)

fun eqs_i21(s1_v402145, s2_v402146) =
  match s1_v402145 with
  | EmptyString_c6  ⇒
    match s2_v402146 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v402147 __v402148 ⇒ 0
    end
  | String_c7 c1_v402149 s1_v402150 ⇒
    match s2_v402146 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v402151 s2_v402152 ⇒
      andb_i1(eqc_i17(c1_v402149, c2_v402151),
              eqs_i21(s1_v402150, s2_v402152))
    end
  end

val eqsclo_i117 =
  fn s1_v402153 s2_v402154 ⇒ eqs_i21(s1_v402153, s2_v402154)

fun compares_i22(s1_v402155, s2_v402156) =
  match s1_v402155 with
  | EmptyString_c6  ⇒
    match s2_v402156 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v402157 __v402158 ⇒ LT_c1
    end
  | String_c7 c1_v402159 s1_v402160 ⇒
    match s2_v402156 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v402161 s2_v402162 ⇒
      match comparec_i18(c1_v402159, c2_v402161) with
      | EQ_c3  ⇒ compares_i22(s1_v402160, s2_v402162) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i118 =
  fn s1_v402163 s2_v402164 ⇒ compares_i22(s1_v402163, s2_v402164)

fun and_thenUUU_i76(A_v402165, B_v402166, opt_v402167, f_v402168) =
  match opt_v402167 with
  | NoneUU_c26  ⇒ NoneUU_c26
  | SomeUU_c27 x_v402169 ⇒ (f_v402168) x_v402169
  end

val and_thenUUUclo_i119 =
  fn A_v402170 B_v402171 opt_v402172 ⇒
    ln f_v402173 ⇒
      and_thenUUU_i76(A_v402170, B_v402171, opt_v402172, f_v402173)

fun and_thenUUL_i75(A_v402174, B_v402175, opt_v402176, f_v402177) =
  match opt_v402176 with
  | NoneUL_c24  ⇒ NoneUL_c24
  | SomeUL_c25 x_v402178 ⇒ (f_v402177) x_v402178
  end

val and_thenUULclo_i120 =
  fn A_v402179 B_v402180 opt_v402181 ⇒
    ln f_v402182 ⇒
      and_thenUUL_i75(A_v402179, B_v402180, opt_v402181, f_v402182)

fun and_thenULU_i74(A_v402183, B_v402184, opt_v402185, f_v402186) =
  match opt_v402185 with
  | NoneUU_c26  ⇒ NoneLU_c22
  | SomeUU_c27 x_v402187 ⇒ (f_v402186) x_v402187
  end

val and_thenULUclo_i121 =
  fn A_v402188 B_v402189 opt_v402190 ⇒
    ln f_v402191 ⇒
      and_thenULU_i74(A_v402188, B_v402189, opt_v402190, f_v402191)

fun and_thenULL_i73(A_v402192, B_v402193, opt_v402194, f_v402195) =
  match opt_v402194 with
  | NoneUL_c24  ⇒ NoneLL_c20
  | SomeUL_c25 x_v402196 ⇒ (f_v402195) x_v402196
  end

val and_thenULLclo_i122 =
  fn A_v402197 B_v402198 opt_v402199 ⇒
    ln f_v402200 ⇒
      and_thenULL_i73(A_v402197, B_v402198, opt_v402199, f_v402200)

fun and_thenLUL_i71(A_v402201, B_v402202, opt_v402203, f_v402204) =
  match opt_v402203 with
  | NoneLL_c20  ⇒ NoneUL_c24
  | SomeLL_c21 x_v402205 ⇒ (f_v402204) x_v402205
  end

val and_thenLULclo_i123 =
  fn A_v402206 B_v402207 opt_v402208 ⇒
    ln f_v402209 ⇒
      and_thenLUL_i71(A_v402206, B_v402207, opt_v402208, f_v402209)

fun and_thenLLL_i69(A_v402210, B_v402211, opt_v402212, f_v402213) =
  match opt_v402212 with
  | NoneLL_c20  ⇒ NoneLL_c20
  | SomeLL_c21 x_v402214 ⇒ (f_v402213) x_v402214
  end

val and_thenLLLclo_i124 =
  fn A_v402215 B_v402216 opt_v402217 ⇒
    ln f_v402218 ⇒
      and_thenLLL_i69(A_v402215, B_v402216, opt_v402217, f_v402218)

fun lenUU_i84(A_v402219, xs_v402220) =
  match xs_v402220 with
  | nilUU_c34  ⇒ (0, nilUU_c34)
  | consUU_c35 x_v402221 xs_v402222 ⇒
    match lenUU_i84(NULL, xs_v402222) with
    | (n_v402223, xs_v402224) ⇒
      (n_v402223.+1, (consUU_c35 x_v402221 xs_v402224))
    end
  end

val lenUUclo_i125 =
  fn A_v402225 xs_v402226 ⇒ lenUU_i84(A_v402225, xs_v402226)

fun lenUL_i83(A_v402227, xs_v402228) =
  match xs_v402228 with
  | nilUL_c32  ⇒ (0, nilUL_c32)
  | consUL_c33 x_v402229 xs_v402230 ⇒
    match lenUL_i83(NULL, xs_v402230) with
    | (n_v402231, xs_v402232) ⇒
      (n_v402231.+1, (consUL_c33 x_v402229 xs_v402232))
    end
  end

val lenULclo_i126 =
  fn A_v402233 xs_v402234 ⇒ lenUL_i83(A_v402233, xs_v402234)

fun lenLL_i81(A_v402235, xs_v402236) =
  match xs_v402236 with
  | nilLL_c28  ⇒ (0, nilLL_c28)
  | consLL_c29 x_v402237 xs_v402238 ⇒
    match lenLL_i81(NULL, xs_v402238) with
    | (n_v402239, xs_v402240) ⇒
      (n_v402239.+1, (consLL_c29 x_v402237 xs_v402240))
    end
  end

val lenLLclo_i127 =
  fn A_v402241 xs_v402242 ⇒ lenLL_i81(A_v402241, xs_v402242)

fun appendUU_i88(A_v402243, xs_v402244, ys_v402245) =
  match xs_v402244 with
  | nilUU_c34  ⇒ ys_v402245
  | consUU_c35 x_v402246 xs_v402247 ⇒
    (consUU_c35 x_v402246 appendUU_i88(NULL, xs_v402247, ys_v402245))
  end

val appendUUclo_i128 =
  fn A_v402248 xs_v402249 ⇒
    ln ys_v402250 ⇒ appendUU_i88(A_v402248, xs_v402249, ys_v402250)

fun appendUL_i87(A_v402251, xs_v402252, ys_v402253) =
  match xs_v402252 with
  | nilUL_c32  ⇒ ys_v402253
  | consUL_c33 x_v402254 xs_v402255 ⇒
    (consUL_c33 x_v402254 appendUL_i87(NULL, xs_v402255, ys_v402253))
  end

val appendULclo_i129 =
  fn A_v402256 xs_v402257 ⇒
    ln ys_v402258 ⇒ appendUL_i87(A_v402256, xs_v402257, ys_v402258)

fun appendLL_i85(A_v402259, xs_v402260, ys_v402261) =
  match xs_v402260 with
  | nilLL_c28  ⇒ ys_v402261
  | consLL_c29 x_v402262 xs_v402263 ⇒
    (consLL_c29 x_v402262 appendLL_i85(NULL, xs_v402263, ys_v402261))
  end

val appendLLclo_i130 =
  fn A_v402264 xs_v402265 ⇒
    ln ys_v402266 ⇒ appendLL_i85(A_v402264, xs_v402265, ys_v402266)

fun readline_i33(__v402267) =
  ln __v402268 ⇒
    let ch_v402269 = open stdin in
    let ch_v402270 = send(ch_v402269, 1) in
    let __v402271 = recv(ch_v402270) in
    match __v402271 with
    | (s_v402272, ch_v402273) ⇒
      let ch_v402274 = send(ch_v402273, 0) in s_v402272
    end

val readlineclo_i131 = fn __v402275 ⇒ readline_i33(__v402275)

fun print_i34(s_v402276) =
  ln __v402277 ⇒
    let ch_v402278 = open stdout in
    let ch_v402279 = send(ch_v402278, 1) in
    let ch_v402280 = send(ch_v402279, s_v402276) in
    let ch_v402281 = send(ch_v402280, 0) in NULL

val printclo_i132 = fn s_v402282 ⇒ print_i34(s_v402282)

fun prerr_i35(s_v402283) =
  ln __v402284 ⇒
    let ch_v402285 = open stderr in
    let ch_v402286 = send(ch_v402285, 1) in
    let ch_v402287 = send(ch_v402286, s_v402283) in
    let ch_v402288 = send(ch_v402287, 0) in NULL

val prerrclo_i133 = fn s_v402289 ⇒ prerr_i35(s_v402289)

val digits_i36 =
  (consUU_c35
    "0"
    (consUU_c35
      "1"
      (consUU_c35
        "2"
        (consUU_c35
          "3"
          (consUU_c35
            "4"
            (consUU_c35
              "5"
              (consUU_c35
                "6"
                (consUU_c35 "7" (consUU_c35 "8" (consUU_c35 "9" nilUU_c34))))))))))

fun get_at_i37(A_v402290, n_v402291, xs_v402292, a_v402293) =
  if n_v402291 then
    match xs_v402292 with
    | nilUU_c34  ⇒ a_v402293
    | consUU_c35 __v402294 xs_v402295 ⇒
      get_at_i37(NULL, n_v402291.-1, xs_v402295, a_v402293)
    end
  else
    match xs_v402292 with
    | nilUU_c34  ⇒ a_v402293 | consUU_c35 x_v402296 __v402297 ⇒ x_v402296
    end

val get_atclo_i134 =
  fn A_v402298 n_v402299 xs_v402300 a_v402301 ⇒
    get_at_i37(A_v402298, n_v402299, xs_v402300, a_v402301)

fun string_of_digit_i38(n_v402302) =
  get_at_i37(NULL, n_v402302, digits_i36, EmptyString_c6)

val string_of_digitclo_i135 = fn n_v402303 ⇒ string_of_digit_i38(n_v402303)

fun string_of_nat_i39(n_v402304) =
  let s_v402305 = string_of_digit_i38(modn_i16(n_v402304, 10)) in
  let n_v402306 = divn_i15(n_v402304, 10) in
  if ltn_i6(0, n_v402306) then
    cats_i19(string_of_nat_i39(n_v402306), s_v402305)
  else
    s_v402305

val string_of_natclo_i136 = fn n_v402307 ⇒ string_of_nat_i39(n_v402307)

fun digit_of_char_i40(c_v402308) =
  if eqc_i17(c_v402308, '0') then
    (SomeUL_c25 0)
  else
    if eqc_i17(c_v402308, '1') then
      (SomeUL_c25 1)
    else
      if eqc_i17(c_v402308, '2') then
        (SomeUL_c25 2)
      else
        if eqc_i17(c_v402308, '3') then
          (SomeUL_c25 3)
        else
          if eqc_i17(c_v402308, '4') then
            (SomeUL_c25 4)
          else
            if eqc_i17(c_v402308, '5') then
              (SomeUL_c25 5)
            else
              if eqc_i17(c_v402308, '6') then
                (SomeUL_c25 6)
              else
                if eqc_i17(c_v402308, '7') then
                  (SomeUL_c25 7)
                else
                  if eqc_i17(c_v402308, '8') then
                    (SomeUL_c25 8)
                  else
                    if eqc_i17(c_v402308, '9') then
                      (SomeUL_c25 9)
                    else
                      NoneUL_c24

val digit_of_charclo_i137 = fn c_v402309 ⇒ digit_of_char_i40(c_v402309)

fun nat_of_string_loop_i41(s_v402310, acc_v402311) =
  match s_v402310 with
  | EmptyString_c6  ⇒ (SomeUL_c25 acc_v402311)
  | String_c7 c_v402312 s_v402313 ⇒
    match digit_of_char_i40(c_v402312) with
    | NoneUL_c24  ⇒ NoneUL_c24
    | SomeUL_c25 n_v402314 ⇒
      nat_of_string_loop_i41(s_v402313,
                             addn_i12(muln_i14(acc_v402311, 10), n_v402314))
    end
  end

val nat_of_string_loopclo_i138 =
  fn s_v402315 acc_v402316 ⇒ nat_of_string_loop_i41(s_v402315, acc_v402316)

fun nat_of_string_i42(s_v402317) = nat_of_string_loop_i41(s_v402317, 0)

val nat_of_stringclo_i139 = fn s_v402318 ⇒ nat_of_string_i42(s_v402318)

fun contains_i50(c_v402319, s_v402320) =
  match s_v402320 with
  | EmptyString_c6  ⇒ 0
  | String_c7 c0_v402321 s_v402322 ⇒
    if eqc_i17(c_v402319, c0_v402321) then
      1
    else
      contains_i50(c_v402319, s_v402322)
  end

val containsclo_i140 =
  fn c_v402323 s_v402324 ⇒ contains_i50(c_v402323, s_v402324)

fun string_diff_i51(ans_v402325, s1_v402326, s2_v402327) =
  match s1_v402326 with
  | EmptyString_c6  ⇒
    match s2_v402327 with
    | EmptyString_c6  ⇒ fn e_v402328 ⇒ (EmptyString_c6, NULL)
    | String_c7 c2_v402329 s2_v402330 ⇒ fn e_v402331 ⇒ NULL
    end
  | String_c7 c1_v402332 s1_v402333 ⇒
    match s2_v402327 with
    | EmptyString_c6  ⇒ fn e_v402334 ⇒ NULL
    | String_c7 c2_v402335 s2_v402336 ⇒
      fn e_v402337 ⇒
        let __v402338 =
          ((((string_diffclo_i141) ans_v402325) s1_v402333) s2_v402336) NULL
        in
        match __v402338 with
        | (df_v402339, pf_v402340) ⇒
          (if eqc_i17(c1_v402332, c2_v402335) then
             fn e1_v402341 ⇒ (cats_i19("Y", df_v402339), NULL)
           else
             fn e1_v402342 ⇒
               (if contains_i50(c2_v402335, ans_v402325) then
                  fn e2_v402343 ⇒ (cats_i19("I", df_v402339), NULL)
                else
                  fn e2_v402344 ⇒ (cats_i19("N", df_v402339), NULL))
                 NULL)
            NULL
        end
    end
  end

val string_diffclo_i141 =
  fn ans_v402345 s1_v402346 s2_v402347 ⇒
    string_diff_i51(ans_v402345, s1_v402346, s2_v402347)

fun word_diff_i53(ans_v402348, guess_v402349) =
  match ans_v402348 with
  | Word_c16 s1_v402350 pf1_v402351 ⇒
    match guess_v402349 with
    | Word_c16 s2_v402352 pf2_v402353 ⇒
      let __v402354 =
        ((((string_diffclo_i141) s1_v402350) s1_v402350) s2_v402352) NULL
      in
      match __v402354 with
      | (s3_v402355, h_v402356) ⇒ ((Word_c16 s3_v402355 NULL), NULL)
      end
    end
  end

val word_diffclo_i142 =
  fn ans_v402357 guess_v402358 ⇒ word_diff_i53(ans_v402357, guess_v402358)

fun eqw_i54(w1_v402359, w2_v402360) =
  match w1_v402359 with
  | Word_c16 s1_v402361 __v402362 ⇒
    match w2_v402360 with
    | Word_c16 s2_v402363 __v402364 ⇒ eqs_i21(s1_v402361, s2_v402363)
    end
  end

val eqwclo_i143 =
  fn w1_v402365 w2_v402366 ⇒ eqw_i54(w1_v402365, w2_v402366)

fun read_word_i61(__v402367) =
  ln __v402368 ⇒
    let s_v402369 = (readline_i33(NULL)) NULL in
    ((if eqn_i9(strlen_i20(s_v402369), 5) then
        fn e_v402370 ⇒ ln __v402371 ⇒ (Word_c16 s_v402369 NULL)
      else
        fn __v402372 ⇒
          ln __v402373 ⇒
            let __v402374 =
              (print_i34("please input a word with length of 5\n")) NULL
            in (read_word_i61(NULL)) NULL)
       NULL)
      NULL

val read_wordclo_i144 = fn __v402375 ⇒ read_word_i61(__v402375)

fun player_loop_i62(ans_v402376, repeat_v402377, c_v402378) =
  (if repeat_v402377 then
     fn c_v402379 ⇒
       ln __v402380 ⇒
         let guess_v402381 = (read_word_i61(NULL)) NULL in
         let c_v402382 = send(c_v402379, guess_v402381) in
         let __v402383 = recv(c_v402382) in
         match __v402383 with
         | (b_v402384, c_v402385) ⇒
           match (NULL, c_v402385) with
           | (pf_v402386, c_v402387) ⇒
             ((if b_v402384 then
                 ln c_v402388 __v402389 ⇒
                   let __v402390 = (print_i34("You Win!\n")) NULL in
                   close(c_v402388)
               else
                 ln c_v402391 __v402392 ⇒
                   let __v402393 = recv(c_v402391) in
                   match __v402393 with
                   | (diff_v402394, c_v402395) ⇒
                     match (NULL, c_v402395) with
                     | (pf_v402396, c_v402397) ⇒
                       match diff_v402394 with
                       | Word_c16 s_v402398 __v402399 ⇒
                         let __v402400 =
                           (print_i34(cats_i19(cats_i19(cats_i19(cats_i19(
                                                                 "Incorrect, hint: ",
                                                                 s_v402398),
                                                                 ". You have "),
                                                        string_of_nat_i39(
                                                        repeat_v402377.-1)),
                                               " more tries.\n")))
                             NULL
                         in
                         (player_loop_i62(NULL, repeat_v402377.-1, c_v402397))
                           NULL
                       end
                     end
                   end)
                c_v402387)
               NULL
           end
         end
   else
     fn c_v402401 ⇒
       ln __v402402 ⇒
         let __v402403 = recv(c_v402401) in
         match __v402403 with
         | (ans_v402404, c_v402405) ⇒
           match (NULL, c_v402405) with
           | (pf_v402406, c_v402407) ⇒
             match ans_v402404 with
             | Word_c16 s_v402408 __v402409 ⇒
               let __v402410 =
                 (print_i34(cats_i19(cats_i19("You Lose! The answer is ",
                                              s_v402408),
                                     ".\n")))
                   NULL
               in close(c_v402407)
             end
           end
         end)
    c_v402378

val player_loopclo_i145 =
  fn ans_v402411 repeat_v402412 c_v402413 ⇒
    player_loop_i62(ans_v402411, repeat_v402412, c_v402413)

fun player_i63(c_v402414) =
  ln __v402415 ⇒
    match (NULL, c_v402414) with
    | (ans_v402416, c_v402417) ⇒
      let __v402418 = recv(c_v402417) in
      match __v402418 with
      | (repeat_v402419, c_v402420) ⇒
        let __v402421 = (print_i34("Wordle Game\n")) NULL in
        let __v402422 =
          (print_i34("Please guess a word of length 5.\n")) NULL
        in
        let __v402423 =
          (print_i34(cats_i19(cats_i19("You have ",
                                       string_of_nat_i39(repeat_v402419)),
                              " tries.\n")))
            NULL
        in (player_loop_i62(NULL, repeat_v402419, c_v402420)) NULL
      end
    end

val playerclo_i146 = fn c_v402424 ⇒ player_i63(c_v402424)

fun get_at_i64(A_v402425, n_v402426, xs_v402427) =
  match xs_v402427 with
  | nilUU_c34  ⇒ fn e_v402428 ⇒ NULL
  | consUU_c35 x_v402429 xs_v402430 ⇒
    if n_v402426 then
      fn e_v402431 ⇒
        let __v402432 =
          ((((get_atclo_i147) NULL) n_v402426.-1) xs_v402430) NULL
        in
        match __v402432 with
        | (x0_v402433, pf_v402434) ⇒ (x0_v402433, NULL)
        end
    else
      fn e_v402435 ⇒ (x_v402429, NULL)
  end

val get_atclo_i147 =
  fn A_v402436 n_v402437 xs_v402438 ⇒
    get_at_i64(A_v402436, n_v402437, xs_v402438)

fun rand_word_i65(__v402439) =
  ln __v402440 ⇒
    let r_v402441 = rand(0, 19) in
    match r_v402441 with
    | Between_c4 n_v402442 __v402443 pf_v402444 ⇒
      let __v402445 =
        ((((get_atclo_i147) NULL) n_v402442)
           (consUU_c35
             (Word_c16 "route" NULL)
             (consUU_c35
               (Word_c16 "crash" NULL)
               (consUU_c35
                 (Word_c16 "clown" NULL)
                 (consUU_c35
                   (Word_c16 "shaky" NULL)
                   (consUU_c35
                     (Word_c16 "vegan" NULL)
                     (consUU_c35
                       (Word_c16 "power" NULL)
                       (consUU_c35
                         (Word_c16 "trust" NULL)
                         (consUU_c35
                           (Word_c16 "enjoy" NULL)
                           (consUU_c35
                             (Word_c16 "brain" NULL)
                             (consUU_c35
                               (Word_c16 "adopt" NULL)
                               (consUU_c35
                                 (Word_c16 "tower" NULL)
                                 (consUU_c35
                                   (Word_c16 "shade" NULL)
                                   (consUU_c35
                                     (Word_c16 "delay" NULL)
                                     (consUU_c35
                                       (Word_c16 "twist" NULL)
                                       (consUU_c35
                                         (Word_c16 "alert" NULL)
                                         (consUU_c35
                                           (Word_c16 "choke" NULL)
                                           (consUU_c35
                                             (Word_c16 "split" NULL)
                                             (consUU_c35
                                               (Word_c16 "rhyme" NULL)
                                               (consUU_c35
                                                 (Word_c16 "muddy" NULL)
                                                 (consUU_c35
                                                   (Word_c16 "plant" NULL)
                                                   nilUU_c34)))))))))))))))))))))
          NULL
      in match __v402445 with
         | (w_v402446, __v402447) ⇒ w_v402446
         end
    end

val rand_wordclo_i148 = fn __v402448 ⇒ rand_word_i65(__v402448)

fun server_loop_i66(ans_v402449, repeat_v402450, c_v402451) =
  (if repeat_v402450 then
     fn c_v402452 ⇒
       ln __v402453 ⇒
         let __v402454 = recv(c_v402452) in
         match __v402454 with
         | (guess_v402455, c_v402456) ⇒
           let b_v402457 = eqw_i54(ans_v402449, guess_v402455) in
           let c_v402458 = send(c_v402456, b_v402457) in
           ((if b_v402457 then
               ln c_v402459 __v402460 ⇒ NULL
             else
               ln c_v402461 ⇒
                 let __v402462 = word_diff_i53(ans_v402449, guess_v402455) in
                 match __v402462 with
                 | (df_v402463, pf_v402464) ⇒
                   ln __v402465 ⇒
                     let c_v402466 = send(c_v402461, df_v402463) in
                     (server_loop_i66(ans_v402449, repeat_v402450.-1,
                                      c_v402466))
                       NULL
                 end)
              c_v402458)
             NULL
         end
   else
     fn c_v402467 ⇒
       ln __v402468 ⇒ let c_v402469 = send(c_v402467, ans_v402449) in NULL)
    c_v402451

val server_loopclo_i149 =
  fn ans_v402470 repeat_v402471 c_v402472 ⇒
    server_loop_i66(ans_v402470, repeat_v402471, c_v402472)

fun server_i67(c_v402473) =
  ln __v402474 ⇒
    let ans_v402475 = (rand_word_i65(NULL)) NULL in
    let c_v402476 = send(c_v402473, 6) in
    (server_loop_i66(ans_v402475, 6, c_v402476)) NULL

val serverclo_i150 = fn c_v402477 ⇒ server_i67(c_v402477)

main =
  let c_v402478 = fork c_v402479 in (server_i67(c_v402479)) NULL in
  let c0_v402480 =
    fork c0_v402481 in
      let __v402482 = recv(c0_v402481) in
      match __v402482 with
      | (c_v402483, c0_v402484) ⇒
        let __v402485 = (player_i63(c_v402483)) NULL in
        let c0_v402486 = send(c0_v402484, NULL) in NULL
      end
  in
  let c0_v402487 = send(c0_v402480, c_v402478) in
  let __v402488 = recv(c0_v402487) in
  match __v402488 with
  | (__v402489, c0_v402490) ⇒ close(c0_v402490)
  end

trans3e success--------------------------

trans34 success--------------------------

