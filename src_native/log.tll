logical eq_sym‹s› (A : Type‹s›) (x : A) (y : A) : (∀ (_ : x ≡ y) → y ≡ x) = (fn (e : _) ⇒ rew [y, _ ⇒ y ≡ x] e in refl)

logical eq_trans‹s› (A : Type‹s›) (x : A) (y : A) (z : A) : (∀ (_ : x ≡ y) → (∀ (_ : y ≡ z) → x ≡ z)) = (fn (e1 : _) ⇒ (fn (e2 : _) ⇒ rew [y0, _ ⇒ x ≡ y0] e2 in e1))

logical f_equal‹s,
t› (A : Type‹s›) (B : Type‹t›) (f : (∀ (_ : A) → B)) (x : A) (y : A) : (∀ (_ : x ≡ y) → (
(f) (x)) ≡ ((f) (y))) = (fn (e : _) ⇒ rew [y, p ⇒ ((f) (x)) ≡ (
(f)
(y))] e in refl)

logical bool_absurd‹› (e : true ≡ false) : ⊥ = rew [x, _ ⇒ match x as _ in _ with true ⇒ unit‹s› | false ⇒ ⊥] e in ()

logical nat_absurd‹› (n : nat) (e : n.+1 ≡ O) : ⊥ = rew [x, _ ⇒ match x as _ in _ with O ⇒ ⊥ | S _ ⇒ unit‹s›] e in ()

logical nat_inv‹› (n1 : nat) (n2 : nat) (e : n1.+1 ≡ n2.+1) : n1 ≡ n2 = (
(f_equal) (_) (_) (pred) (_) (_)
(e))

logical eqn_reflect‹› (m : nat) (n : nat) : (∀ (_ : ((eqn) (m)
(n)) ≡ true) → m ≡ n) = match m as m0 in (∀ (_ : ((eqn) (m0)
(n)) ≡ true) → m0 ≡ n) with O ⇒ match n as n0 in (∀ (_ : ((eqn)
(O.+0)
(n0)) ≡ true) → O.+0 ≡ n0) with O ⇒ (fn (_ : _) ⇒ refl) | S n ⇒ (fn (e : _) ⇒ absurd (
(bool_absurd)
(((eq_sym) (_) (_) (_) (e))))) | S m ⇒ match n as n0 in (∀ (_ : (
(eqn) (m.+1)
(n0)) ≡ true) → m.+1 ≡ n0) with O ⇒ (fn (e : _) ⇒ absurd ((bool_absurd)
(((eq_sym) (_) (_) (_) (e))))) | S n ⇒ (fn (e : _) ⇒ ((f_equal) (_) 
(_) ((fn (x : _) ⇒ x.+1)) (_) (_)
(((eqn_reflect) (m) (n) (e)))))

logical eqc_reflect‹› (c1 : char) (c2 : char) : (∀ (_ : ((eqc) 
(c1) (c2)) ≡ true) → c1 ≡ c2) = match c1 as c0 in (∀ (_ : ((eqc) 
(c0)
(c2)) ≡ true) → c0 ≡ c2) with Char m ⇒ match c2 as c0 in (∀ (_ : (
(eqc) (((Char) (m))) (c0)) ≡ true) → ((Char)
(m)) ≡ c0) with Char n ⇒ (fn (e : _) ⇒ let e = ((eqn_reflect) (_) 
(_) (e)) in ((f_equal) (_) (_) ((fn (x : _) ⇒ ((Char) (x)))) (_) (_)
(e)))

program contains‹› (c : char) (s : string) : bool = match s as _ in _ with EmptyString  ⇒ false | String c0
s ⇒ match ((eqc) (c)
(c0)) as _ in _ with true ⇒ true | false ⇒ ((contains) (c)
(s))

inductive diff‹› (ans : string) (a : string) (b : string) (df : string) : U = diff_EmptyString of ‹› {ans : string} {a : string} {b : string} {df : string} (_ : a ≡ EmptyString) (_ : b ≡ EmptyString) (_ : df ≡ EmptyString) → (
(diff‹›) (ans) (a) (b)
(df)) | diff_StringY of ‹› {ans : string} {a : string} {b : string} {df : string} (c : char) (s1 : string) (s2 : string) (s3 : string) (_ : (
(diff) (ans) (s1) (s2) (s3))) (_ : a ≡ ((String) (c)
(s1))) (_ : b ≡ ((String) (c) (s2))) (_ : df ≡ ((cats)
(((String) (((Char) (O.+89))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df)) | diff_StringI of ‹› {ans : string} {a : string} {b : string} {df : string} (c1 : char) (c2 : char) (s1 : string) (s2 : string) (s3 : string) (_ : (
(eqc) (c1) (c2)) ≡ false) (_ : ((contains) (c2)
(ans)) ≡ true) (_ : ((diff) (ans) (s1) (s2) (s3))) (_ : a ≡ ((String)
(c1) (s1))) (_ : b ≡ ((String) (c2) (s2))) (_ : df ≡ ((cats)
(((String) (((Char) (O.+73))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df)) | diff_StringN of ‹› {ans : string} {a : string} {b : string} {df : string} (c1 : char) (c2 : char) (s1 : string) (s2 : string) (s3 : string) (_ : (
(eqc) (c1) (c2)) ≡ false) (_ : ((contains) (c2)
(ans)) ≡ false) (_ : ((diff) (ans) (s1) (s2) (s3))) (_ : a ≡ ((String)
(c1) (s1))) (_ : b ≡ ((String) (c2) (s2))) (_ : df ≡ ((cats)
(((String) (((Char) (O.+78))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df))

program string_diff‹› (ans : string) (s1 : string) (s2 : string) : (∀ {_ : (
(strlen) (s1)) ≡ ((strlen) (s2))} → (∃ (df : string) ⊗ {((diff) 
(ans) (s1) (s2) (df))})) = match s1 as s0 in (∀ {_ : ((strlen)
(s0)) ≡ ((strlen) (s2))} → (∃ (df : string) ⊗ {((diff) (ans) 
(s0) (s2)
(df))})) with EmptyString  ⇒ match s2 as s0 in (∀ {_ : O.+0 ≡ (
(strlen) (s0))} → (∃ (df : string) ⊗ {((diff) (ans) (EmptyString) 
(s0)
(df))})) with EmptyString  ⇒ (fn {e : _} ⇒ ⟨EmptyString, {((diff_EmptyString)
(refl) (refl) (refl))}⟩) | String c2
s2 ⇒ (fn {e : _} ⇒ rew [x, _ ⇒ match x as _ in _ with O ⇒ unit‹s› | S _ ⇒ (∃ (df : string) ⊗ {(
(diff) (ans) (EmptyString) (((String) (c2) (s2)))
(df))})] e in ⟨⟩) | String c1
s1 ⇒ match s2 as s0 in (∀ {_ : ((strlen) (s1)).+1 ≡ ((strlen)
(s0))} → (∃ (df : string) ⊗ {((diff) (ans) (((String) (c1) (s1))) 
(s0)
(df))})) with EmptyString  ⇒ (fn {e : _} ⇒ rew [x, _ ⇒ match x as _ in _ with O ⇒ (∃ (df : string) ⊗ {(
(diff) (ans) (((String) (c1) (s1))) (EmptyString)
(df))}) | S _ ⇒ unit‹s›] e in ⟨⟩) | String c2
s2 ⇒ (fn {e : _} ⇒ let {e} = ((nat_inv) (_) (_)
(e)) in let ⟨df, {pf}⟩ = ((string_diff) (ans) (s1) (s2)
(e)) in ((match ((eqc) (c1) (c2)) as b0 in (∀ {_ : ((eqc) (c1)
          (c2)) ≡ b0} → (∃ (df : string) ⊗ {((diff) (ans)
          (((String) (c1) (s1))) (((String) (c2) (s2)))
          (df))})) with true ⇒ (fn {e1 : _} ⇒ let {e1} = ((eqc_reflect)
          (_) (_) (e1)) in let {h} = rew [c, _ ⇒ ((String) (c)
          (s2)) ≡ ((String) (c1) (s2))] e1 in refl in ⟨((cats)
          (((String) (((Char) (O.+89))) (EmptyString)))
          (df)), {((diff_StringY) (_) (_) (_) (_) (pf) (refl) (h)
          (refl))}⟩) | false ⇒ (fn {e1 : _} ⇒ ((match ((contains) 
                                                      (c2)
                                                      (ans)) as b0 in (∀ {_ : (
                                                      (contains) (c2)
                                                      (ans)) ≡ b0} → (∃ (df : string) ⊗ {(
                                                      (diff) (ans)
                                                      (((String) (c1) (s1)))
                                                      (((String) (c2) (s2)))
                                                      (df))})) with true ⇒ (fn {e2 : _} ⇒ ⟨(
                                                      (cats)
                                                      (((String)
                                                       (((Char) (O.+73)))
                                                       (EmptyString)))
                                                      (df)), {((diff_StringI)
                                                      (_) (_) (_) (_) 
                                                      (_) (e1) (e2) (pf)
                                                      (refl) (refl)
                                                      (refl))}⟩) | false ⇒ (fn {e2 : _} ⇒ ⟨(
                                                      (cats)
                                                      (((String)
                                                       (((Char) (O.+78)))
                                                       (EmptyString)))
                                                      (df)), {((diff_StringN)
                                                      (_) (_) (_) (_) 
                                                      (_) (e1) (e2) (pf)
                                                      (refl) (refl)
                                                      (refl))}⟩))
          (refl))))
(refl)))

logical diff_len‹› (ans : string) (s1 : string) (s2 : string) (df : string) (h : (
(diff) (ans) (s1) (s2) (df))) : ((strlen) (df)) ≡ ((strlen)
(s1)) = match h as _ in _ with diff_EmptyString pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen)
(df0)) ≡ O.+0] pf3 in refl | diff_StringY c s0 s3 s4 h1 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h1)) in refl | diff_StringI c1 _ s0 s3 s4 _ _ h3 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c1) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h3)) in refl | diff_StringN c1 _ s0 s3 s4 _ _ h3 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c1) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h3)) in refl

inductive word‹› : U = Word of ‹› (s : string) {pf : ((strlen)
(s)) ≡ O.+5} → ((word‹›))

inductive wdiff‹› (ans : word) (guess : word) (df : word) : U = diff_Word of ‹› {ans : word} {guess : word} {df : word} (s1 : string) (s2 : string) (s3 : string) (pf1 : (
(strlen) (s1)) ≡ O.+5) (pf2 : ((strlen) (s2)) ≡ O.+5) (pf3 : ((strlen)
(s3)) ≡ O.+5) (_ : ans ≡ ((Word) (s1) (pf1))) (_ : guess ≡ ((Word) 
(s2) (pf2))) (_ : df ≡ ((Word) (s3) (pf3))) (_ : ((diff) (s1) (s1) 
(s2) (s3))) → ((wdiff‹›) (ans) (guess)
(df))

program word_diff‹› (ans : word) (guess : word) : (∃ (df : word) ⊗ {(
(wdiff) (ans) (guess)
(df))}) = ((match ans as ans0 in (∀ {_ : ans ≡ ans0} → (∃ (df : word) ⊗ {(
            (wdiff) (ans) (guess) (df))})) with Word s1
            pf1 ⇒ (fn {e1 : _} ⇒ ((match guess as guess0 in (∀ {_ : guess ≡ guess0} → (∃ (df : word) ⊗ {(
                                       (wdiff) (ans) (guess)
                                       (df))})) with Word s2
                                       pf2 ⇒ (fn {e2 : _} ⇒ let {e} = (
                                       (eq_trans) (_) (_) (_) (_) (pf1)
                                       (((eq_sym) (_) (_) (_) (pf2)))) in let ⟨s3, {h}⟩ = (
                                       (string_diff) (s1) (s1) (s2)
                                       (e)) in let {e} = ((diff_len) 
                                       (_) (_) (_) (_)
                                       (h)) in let {pf} = ((eq_trans) 
                                       (_) (_) (_) (_) (e)
                                       (pf1)) in ⟨((Word) (s3)
                                       (pf)), {((diff_Word) (s1) (s2) 
                                       (s3) (pf1) (pf2) (pf) (e1) (e2) 
                                       (refl) (h))}⟩))
            (refl))))
(refl))

program eqw‹› (w1 : word) (w2 : word) : bool = match w1 as _ in _ with Word s1
_ ⇒ match w2 as _ in _ with Word s2 _ ⇒ ((eqs) (s1)
(s2))

logical wordle_loop‹› (ans : word) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ !(w : word) → !{_ : w ≡ ans} → end | S repeat ⇒ ?(guess : word) → !(b : bool) → !{_ : b ≡ (
(eqw) (ans)
(guess))} → match b as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
(wdiff) (ans) (guess) (df))} → ((wordle_loop) (ans)
(repeat))

logical wordle‹› : proto = !{ans : word} → !(repeat : nat) → (
(wordle_loop) (ans)
(repeat))

logical loop_ch‹› (ans : word) (repeat : nat) : L = ch‹((wordle_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : word) (repeat : nat) : L = hc‹((wordle_loop)
(ans)
(repeat))›

logical wordle_ch‹› : L = ch‹wordle›

logical wordle_hc‹› : L = hc‹wordle›

program read_word‹› (_ : unit‹s›) : IO word = let s ⇐ ((readline)
(())) in ((match ((eqn) (((strlen) (s))) (O.+5)) as b0 in (∀ {_ : (
           (eqn) (((strlen) (s)))
           (O.+5)) ≡ b0} → IO word) with true ⇒ (fn {e : _} ⇒ return (
           (Word) (s)
           (((eqn_reflect) (_) (_) (e))))) | false ⇒ (fn {_ : _} ⇒ let _ ⇐ (
           (print)
           (((String) (((Char) (O.+112)))
            (((String) (((Char) (O.+108)))
             (((String) (((Char) (O.+101)))
              (((String) (((Char) (O.+97)))
               (((String) (((Char) (O.+115)))
                (((String) (((Char) (O.+101)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+105)))
                   (((String) (((Char) (O.+110)))
                    (((String) (((Char) (O.+112)))
                     (((String) (((Char) (O.+117)))
                      (((String) (((Char) (O.+116)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+97)))
                         (((String) (((Char) (O.+32)))
                          (((String) (((Char) (O.+119)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+100)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+119)))
                                (((String) (((Char) (O.+105)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+104)))
                                   (((String) (((Char) (O.+32)))
                                    (((String) (((Char) (O.+108)))
                                     (((String) (((Char) (O.+101)))
                                      (((String) (((Char) (O.+110)))
                                       (((String) (((Char) (O.+103)))
                                        (((String) (((Char) (O.+116)))
                                         (((String) (((Char) (O.+104)))
                                          (((String) (((Char) (O.+32)))
                                           (((String) (((Char) (O.+111)))
                                            (((String) (((Char) (O.+102)))
                                             (((String) (((Char) (O.+32)))
                                              (((String) (((Char) (O.+53)))
                                               (((String) (((Char) (O.+10)))
                                                (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
           (read_word) (()))))
(refl))

program player_loop‹› {ans : word} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit‹s› = ((match repeat as repeat0 in (∀ (_ : (
                                (loop_hc) (ans)
                                (repeat0))) → IO unit‹s›) with O ⇒ (fn (c : _) ⇒ let ⟨ans, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in match ans as _ in _ with Word s
                                _ ⇒ let _ ⇐ ((print)
                                (((cats)
                                 (((cats)
                                  (((String) (((Char) (O.+89)))
                                   (((String) (((Char) (O.+111)))
                                    (((String) (((Char) (O.+117)))
                                     (((String) (((Char) (O.+32)))
                                      (((String) (((Char) (O.+76)))
                                       (((String) (((Char) (O.+111)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+101)))
                                          (((String) (((Char) (O.+33)))
                                           (((String) (((Char) (O.+32)))
                                            (((String) (((Char) (O.+84)))
                                             (((String) (((Char) (O.+104)))
                                              (((String) (((Char) (O.+101)))
                                               (((String) (((Char) (O.+32)))
                                                (((String) (((Char) (O.+97)))
                                                 (((String)
                                                  (((Char) (O.+110)))
                                                  (((String)
                                                   (((Char) (O.+115)))
                                                   (((String)
                                                    (((Char) (O.+119)))
                                                    (((String)
                                                     (((Char) (O.+101)))
                                                     (((String)
                                                      (((Char) (O.+114)))
                                                      (((String)
                                                       (((Char) (O.+32)))
                                                       (((String)
                                                        (((Char) (O.+105)))
                                                        (((String)
                                                         (((Char) (O.+115)))
                                                         (((String)
                                                          (((Char) (O.+32)))
                                                          (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))
                                  (s)))
                                 (((String) (((Char) (O.+46)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                                (read_word) (())) in let c ⇐ ((send c)
                                (guess)) in let ⟨b, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                                (match b as b0 in (∀ (_ : hc‹match b0 as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
                                 (wdiff) (ans) (guess)
                                 (df))} → ((wordle_loop) (ans)
                                 (repeat))›) ⊸ IO unit‹s›) with true ⇒ (ln (c : _) ⇒ let _ ⇐ (
                                 (print)
                                 (((String) (((Char) (O.+89)))
                                  (((String) (((Char) (O.+111)))
                                   (((String) (((Char) (O.+117)))
                                    (((String) (((Char) (O.+32)))
                                     (((String) (((Char) (O.+87)))
                                      (((String) (((Char) (O.+105)))
                                       (((String) (((Char) (O.+110)))
                                        (((String) (((Char) (O.+33)))
                                         (((String) (((Char) (O.+10)))
                                          (EmptyString)))))))))))))))))))) in close c) | false ⇒ (ln (c : _) ⇒ let ⟨diff, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in match diff as _ in _ with Word s
                                 _ ⇒ let _ ⇐ ((print)
                                 (((cats)
                                  (((cats)
                                   (((cats)
                                    (((cats)
                                     (((String) (((Char) (O.+73)))
                                      (((String) (((Char) (O.+110)))
                                       (((String) (((Char) (O.+99)))
                                        (((String) (((Char) (O.+111)))
                                         (((String) (((Char) (O.+114)))
                                          (((String) (((Char) (O.+114)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+99)))
                                             (((String) (((Char) (O.+116)))
                                              (((String) (((Char) (O.+44)))
                                               (((String) (((Char) (O.+32)))
                                                (((String)
                                                 (((Char) (O.+104)))
                                                 (((String)
                                                  (((Char) (O.+105)))
                                                  (((String)
                                                   (((Char) (O.+110)))
                                                   (((String)
                                                    (((Char) (O.+116)))
                                                    (((String)
                                                     (((Char) (O.+58)))
                                                     (((String)
                                                      (((Char) (O.+32)))
                                                      (EmptyString)))))))))))))))))))))))))))))))))))
                                     (s)))
                                    (((String) (((Char) (O.+46)))
                                     (((String) (((Char) (O.+32)))
                                      (((String) (((Char) (O.+89)))
                                       (((String) (((Char) (O.+111)))
                                        (((String) (((Char) (O.+117)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+104)))
                                           (((String) (((Char) (O.+97)))
                                            (((String) (((Char) (O.+118)))
                                             (((String) (((Char) (O.+101)))
                                              (((String) (((Char) (O.+32)))
                                               (EmptyString)))))))))))))))))))))))))
                                   (((string_of_nat) (repeat)))))
                                  (((String) (((Char) (O.+32)))
                                   (((String) (((Char) (O.+109)))
                                    (((String) (((Char) (O.+111)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+101)))
                                       (((String) (((Char) (O.+32)))
                                        (((String) (((Char) (O.+116)))
                                         (((String) (((Char) (O.+114)))
                                          (((String) (((Char) (O.+105)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+115)))
                                             (((String) (((Char) (O.+46)))
                                              (((String) (((Char) (O.+10)))
                                               (EmptyString)))))))))))))))))))))))))))))) in (
                                 (player_loop) (ans) (repeat) (c))))
                                (c))))
(c))

program player‹› (c : wordle_hc) : IO unit‹s› = let ⟨{ans}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((String) (((Char) (O.+87)))
 (((String) (((Char) (O.+111)))
  (((String) (((Char) (O.+114)))
   (((String) (((Char) (O.+100)))
    (((String) (((Char) (O.+108)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+71)))
        (((String) (((Char) (O.+97)))
         (((String) (((Char) (O.+109)))
          (((String) (((Char) (O.+101)))
           (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))) in let _ ⇐ (
(print)
(((String) (((Char) (O.+80)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+103)))
        (((String) (((Char) (O.+117)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+115)))
           (((String) (((Char) (O.+115)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+119)))
                (((String) (((Char) (O.+111)))
                 (((String) (((Char) (O.+114)))
                  (((String) (((Char) (O.+100)))
                   (((String) (((Char) (O.+32)))
                    (((String) (((Char) (O.+111)))
                     (((String) (((Char) (O.+102)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+108)))
                        (((String) (((Char) (O.+101)))
                         (((String) (((Char) (O.+110)))
                          (((String) (((Char) (O.+103)))
                           (((String) (((Char) (O.+116)))
                            (((String) (((Char) (O.+104)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+53)))
                               (((String) (((Char) (O.+46)))
                                (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

inductive at‹› (A : U) (x : A) (n : nat) (xs : ((list‹_, U›)
(A))) : U = at_O of ‹› {A : U} {x : A} {n : nat} {xs : ((list‹_, U›)
(A))} (xs0 : ((list) (A))) (_ : n ≡ O.+0) (_ : xs ≡ ((cons) (x)
(xs0))) → ((at‹›) (A) (x) (n)
(xs)) | at_S of ‹› {A : U} {x : A} {n : nat} {xs : ((list‹_, U›)
(A))} (n0 : nat) (x0 : A) (xs0 : ((list) (A))) (h : ((at) (A) (x) (n0)
(xs0))) (_ : n ≡ n0.+1) (_ : xs ≡ ((cons) (x0) (xs0))) → ((at‹›)
(A) (x) (n)
(xs))

logical ltn_inv‹› (m : nat) (n : nat) : (∀ (_ : ((ltn) (m.+1)
(n.+1)) ≡ true) → ((ltn) (m)
(n)) ≡ true) = (fn (h : _) ⇒ h)

program get_at‹› {A : U} (n : nat) (xs : ((list) (A))) : (∀ {_ : (
(ltn) (n) (((llen) (_) (xs)))) ≡ true} → (∃ (x : A) ⊗ {((at) 
(_) (x) (n) (xs))})) = match xs as xs0 in (∀ {_ : ((ltn) (n)
(((llen) (_) (xs0)))) ≡ true} → (∃ (x : A) ⊗ {((at) (_) (x) (n)
(xs0))})) with nil  ⇒ (fn {e : _} ⇒ rew [b, _ ⇒ match b as _ in _ with true ⇒ (∃ (x : A) ⊗ {(
(at) (_) (x) (n) (nil))}) | false ⇒ unit‹s›] e in ⟨⟩) | cons x
xs ⇒ match n as n0 in (∀ {_ : ((ltn) (n0)
(((llen) (_) (xs)).+1)) ≡ true} → (∃ (x0 : A) ⊗ {((at) (_) (x0) 
(n0) (((cons) (x) (xs))))})) with O ⇒ (fn {e : _} ⇒ ⟨x, {((at_O) 
(xs) (refl)
(refl))}⟩) | S n ⇒ (fn {e : _} ⇒ let ⟨x0, {pf}⟩ = ((get_at) 
(_) (n) (xs) (((ltn_inv) (_) (_) (e)))) in ⟨x0, {((at_S) (_) (_) (_) 
(pf) (refl)
(refl))}⟩)

program rand_word‹› (_ : unit‹s›) : IO word = let words = (((cons)
(((Word)
 (((String) (((Char) (O.+114)))
  (((String) (((Char) (O.+111)))
   (((String) (((Char) (O.+117)))
    (((String) (((Char) (O.+116)))
     (((String) (((Char) (O.+101))) (EmptyString)))))))))))
 (refl)))
(((cons)
 (((Word)
  (((String) (((Char) (O.+99)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+115)))
      (((String) (((Char) (O.+104))) (EmptyString)))))))))))
  (refl)))
 (((cons)
  (((Word)
   (((String) (((Char) (O.+99)))
    (((String) (((Char) (O.+108)))
     (((String) (((Char) (O.+111)))
      (((String) (((Char) (O.+119)))
       (((String) (((Char) (O.+110))) (EmptyString)))))))))))
   (refl)))
  (((cons)
   (((Word)
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+104)))
      (((String) (((Char) (O.+97)))
       (((String) (((Char) (O.+107)))
        (((String) (((Char) (O.+121))) (EmptyString)))))))))))
    (refl)))
   (((cons)
    (((Word)
     (((String) (((Char) (O.+118)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+103)))
        (((String) (((Char) (O.+97)))
         (((String) (((Char) (O.+110))) (EmptyString)))))))))))
     (refl)))
    (((cons)
     (((Word)
      (((String) (((Char) (O.+112)))
       (((String) (((Char) (O.+111)))
        (((String) (((Char) (O.+119)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+114))) (EmptyString)))))))))))
      (refl)))
     (((cons)
      (((Word)
       (((String) (((Char) (O.+116)))
        (((String) (((Char) (O.+114)))
         (((String) (((Char) (O.+117)))
          (((String) (((Char) (O.+115)))
           (((String) (((Char) (O.+116))) (EmptyString)))))))))))
       (refl)))
      (((cons)
       (((Word)
        (((String) (((Char) (O.+101)))
         (((String) (((Char) (O.+110)))
          (((String) (((Char) (O.+106)))
           (((String) (((Char) (O.+111)))
            (((String) (((Char) (O.+121))) (EmptyString)))))))))))
        (refl)))
       (((cons)
        (((Word)
         (((String) (((Char) (O.+98)))
          (((String) (((Char) (O.+114)))
           (((String) (((Char) (O.+97)))
            (((String) (((Char) (O.+105)))
             (((String) (((Char) (O.+110))) (EmptyString)))))))))))
         (refl)))
        (((cons)
         (((Word)
          (((String) (((Char) (O.+97)))
           (((String) (((Char) (O.+100)))
            (((String) (((Char) (O.+111)))
             (((String) (((Char) (O.+112)))
              (((String) (((Char) (O.+116))) (EmptyString)))))))))))
          (refl)))
         (((cons)
          (((Word)
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+111)))
             (((String) (((Char) (O.+119)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+114))) (EmptyString)))))))))))
           (refl)))
          (((cons)
           (((Word)
            (((String) (((Char) (O.+115)))
             (((String) (((Char) (O.+104)))
              (((String) (((Char) (O.+97)))
               (((String) (((Char) (O.+100)))
                (((String) (((Char) (O.+101))) (EmptyString)))))))))))
            (refl)))
           (((cons)
            (((Word)
             (((String) (((Char) (O.+100)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+108)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+121))) (EmptyString)))))))))))
             (refl)))
            (((cons)
             (((Word)
              (((String) (((Char) (O.+116)))
               (((String) (((Char) (O.+119)))
                (((String) (((Char) (O.+105)))
                 (((String) (((Char) (O.+115)))
                  (((String) (((Char) (O.+116))) (EmptyString)))))))))))
              (refl)))
             (((cons)
              (((Word)
               (((String) (((Char) (O.+97)))
                (((String) (((Char) (O.+108)))
                 (((String) (((Char) (O.+101)))
                  (((String) (((Char) (O.+114)))
                   (((String) (((Char) (O.+116))) (EmptyString)))))))))))
               (refl)))
              (((cons)
               (((Word)
                (((String) (((Char) (O.+99)))
                 (((String) (((Char) (O.+104)))
                  (((String) (((Char) (O.+111)))
                   (((String) (((Char) (O.+107)))
                    (((String) (((Char) (O.+101))) (EmptyString)))))))))))
                (refl)))
               (((cons)
                (((Word)
                 (((String) (((Char) (O.+115)))
                  (((String) (((Char) (O.+112)))
                   (((String) (((Char) (O.+108)))
                    (((String) (((Char) (O.+105)))
                     (((String) (((Char) (O.+116))) (EmptyString)))))))))))
                 (refl)))
                (((cons)
                 (((Word)
                  (((String) (((Char) (O.+114)))
                   (((String) (((Char) (O.+104)))
                    (((String) (((Char) (O.+121)))
                     (((String) (((Char) (O.+109)))
                      (((String) (((Char) (O.+101))) (EmptyString)))))))))))
                  (refl)))
                 (((cons)
                  (((Word)
                   (((String) (((Char) (O.+109)))
                    (((String) (((Char) (O.+117)))
                     (((String) (((Char) (O.+100)))
                      (((String) (((Char) (O.+100)))
                       (((String) (((Char) (O.+121))) (EmptyString)))))))))))
                   (refl)))
                  (((cons)
                   (((Word)
                    (((String) (((Char) (O.+112)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+97)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+116))) (EmptyString)))))))))))
                    (refl)))
                   (nil)))))))))))))))))))))))))))))))))))))))) : ((list‹_,
                                                                    U›)
(_))) in let r ⇐ rand O.+0 O.+19 in match r as _ in _ with Between n _
pf ⇒ let ⟨w, {_}⟩ = ((get_at) (_) (n) (words)
(pf)) in return w

program server_loop‹› (ans : word) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit‹s› = ((match repeat as repeat0 in (∀ (_ : (
                                (loop_ch) (ans)
                                (repeat0))) → IO unit‹s›) with O ⇒ (fn (c : _) ⇒ let c ⇐ (
                                (send c) (ans)) in let c ⇐ ((send c)
                                (refl)) in close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨guess, c⟩ ⇐ recv c in let b = (
                                (eqw) (ans) (guess)) in let c ⇐ ((send c)
                                (b)) in let c ⇐ ((send c)
                                (refl)) in ((match b as b0 in (∀ (_ : ch‹match b0 as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
                                             (wdiff) (ans) (guess)
                                             (df))} → ((wordle_loop) 
                                             (ans)
                                             (repeat))›) ⊸ IO unit‹s›) with true ⇒ (ln (c : _) ⇒ close c) | false ⇒ (ln (c : _) ⇒ let ⟨df, {pf}⟩ = (
                                             (word_diff) (ans)
                                             (guess)) in let c ⇐ ((send c)
                                             (df)) in let c ⇐ ((send c)
                                             (pf)) in ((server_loop) 
                                             (ans) (repeat) (c))))
                                (c))))
(c))

program server‹› (c : wordle_ch) : IO unit‹s› = let repeat = O.+6 in let ans ⇐ (
(rand_word) (())) in let c ⇐ ((send c) (ans)) in let c ⇐ ((send c)
(repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit‹s› = let c ⇐ fork (c : wordle_ch) in (
(server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : wordle_hc) → !(_ : unit‹s›) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v728 : bool) (b2_v729 : bool) ⇒
    match b1_v728 as __v730 in ??1 with
    | true ⇒ b2_v729 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v733 : bool) (b2_v734 : bool) ⇒
    match b1_v733 as __v735 in ??2 with
    | true ⇒ true | false ⇒ b2_v734
    end

program notb_i3 : bool → bool =
  fn (b_v737 : bool) ⇒
    match b_v737 as __v738 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v741 : bool) (b2_v742 : bool) ⇒
    match b1_v741 as __v743 in ??4 with
    | true ⇒
      match b2_v742 as __v744 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v742 as __v745 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v748 : nat) (y_v749 : nat) ⇒
    match x_v748 as __v750 in ??7 with
    | O ⇒ true
    | S x_v751 ⇒
      match y_v749 as __v752 in ??8 with
      | O ⇒ false | S y_v753 ⇒ (lten_i5 x_v751 y_v753)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v756 : nat) (y_v757 : nat) ⇒ (lten_i5 x_v756.+1 y_v757)

program gten_i7 : nat → nat → bool =
  fn (x_v760 : nat) (y_v761 : nat) ⇒ (lten_i5 y_v761 x_v760)

program gtn_i8 : nat → nat → bool =
  fn (x_v764 : nat) (y_v765 : nat) ⇒ (ltn_i6 y_v765 x_v764)

program eqn_i9 : nat → nat → bool =
  fn (x_v768 : nat) (y_v769 : nat) ⇒
    match x_v768 as __v770 in ??9 with
    | O ⇒
      match y_v769 as __v771 in ??11 with
      | O ⇒ true | S __v772 ⇒ false
      end
    | S x_v773 ⇒
      match y_v769 as __v774 in ??10 with
      | O ⇒ false | S y_v775 ⇒ (eqn_i9 x_v773 y_v775)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v778 : nat) (n2_v779 : nat) ⇒
    match n1_v778 as __v780 in ??12 with
    | O ⇒
      match n2_v779 as __v781 in ??14 with
      | O ⇒ EQ_c3‹› | S __v782 ⇒ LT_c1‹›
      end
    | S n1_v783 ⇒
      match n2_v779 as __v784 in ??13 with
      | O ⇒ GT_c2‹› | S n2_v785 ⇒ (comparen_i10 n1_v783 n2_v785)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v787 : nat) ⇒
    match x_v787 as __v788 in ??15 with
    | O ⇒ 0 | S x_v789 ⇒ x_v789
    end

program addn_i12 : nat → nat → nat =
  fn (x_v792 : nat) (y_v793 : nat) ⇒
    match x_v792 as __v794 in ??16 with
    | O ⇒ y_v793 | S x_v795 ⇒ (addn_i12 x_v795 y_v793).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v798 : nat) (y_v799 : nat) ⇒
    match y_v799 as __v800 in ??17 with
    | O ⇒ x_v798 | S y_v801 ⇒ (subn_i13 (pred_i11 x_v798) y_v801)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v804 : nat) (y_v805 : nat) ⇒
    match x_v804 as __v806 in ??18 with
    | O ⇒ 0 | S x_v807 ⇒ (addn_i12 y_v805 (muln_i14 x_v807 y_v805))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v810 : nat) (y_v811 : nat) ⇒
    match (ltn_i6 x_v810 y_v811) as __v812 in ??19 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v810 y_v811) y_v811).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v815 : nat) (y_v816 : nat) ⇒
    (subn_i13 x_v815 (muln_i14 (divn_i15 x_v815 y_v816) y_v816))

inductive between_d2 (lower_v817 : nat) (upper_v818 : nat) : L =
| Between_c4 of
    (lower_v819 : nat) (upper_v820 : nat) (n_v821 : nat)
    {pf1_v822 : (lten_i5 lower_v819 n_v821) ≡ true}
    {pf2_v823 : (lten_i5 n_v821 upper_v820) ≡ true}
    : (between_d2 lower_v819 upper_v820)

inductive char_d3 : U =
| Char_c5 of (n_v824 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v827 : char_d3) (c2_v828 : char_d3) ⇒
    match c1_v827 as __v829 in ??22 with
    | Char_c5 n1_v830 ⇒
      match c2_v828 as __v831 in ??23 with
      | Char_c5 n2_v832 ⇒ (eqn_i9 n1_v830 n2_v832)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v835 : char_d3) (c2_v836 : char_d3) ⇒
    match c1_v835 as __v837 in ??24 with
    | Char_c5 n1_v838 ⇒
      match c2_v836 as __v839 in ??25 with
      | Char_c5 n2_v840 ⇒ (comparen_i10 n1_v838 n2_v840)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v841 : char_d3) (s_v842 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v845 : string_d4) (s2_v846 : string_d4) ⇒
    match s1_v845 as __v847 in ??26 with
    | EmptyString_c6  ⇒ s2_v846
    | String_c7 c_v848 s1_v849 ⇒
      (String_c7‹› c_v848 (cats_i19 s1_v849 s2_v846))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v851 : string_d4) ⇒
    match s_v851 as __v852 in ??27 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v853 s_v854 ⇒ (strlen_i20 s_v854).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v857 : string_d4) (s2_v858 : string_d4) ⇒
    match s1_v857 as __v859 in ??28 with
    | EmptyString_c6  ⇒
      match s2_v858 as __v860 in ??30 with
      | EmptyString_c6  ⇒ true | String_c7 __v861 __v862 ⇒ false
      end
    | String_c7 c1_v863 s1_v864 ⇒
      match s2_v858 as __v865 in ??29 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v866 s2_v867 ⇒
        (andb_i1 (eqc_i17 c1_v863 c2_v866) (eqs_i21 s1_v864 s2_v867))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v870 : string_d4) (s2_v871 : string_d4) ⇒
    match s1_v870 as __v872 in ??31 with
    | EmptyString_c6  ⇒
      match s2_v871 as __v873 in ??34 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v874 __v875 ⇒ LT_c1‹›
      end
    | String_c7 c1_v876 s1_v877 ⇒
      match s2_v871 as __v878 in ??32 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v879 s2_v880 ⇒
        match (comparec_i18 c1_v876 c2_v879) as __v881 in ??33 with
        | EQ_c3  ⇒ (compares_i22 s1_v877 s2_v880) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s882, t_s883›
  (A_v884 : Type‹s_s882›) : Type‹t_s883›
=
| None_c8 of
    ‹s_s885, t_s886› (A_v887 : Type‹s_s885›)
    : (option_d5‹s_s885, t_s886› A_v887)
| Some_c9 of
    ‹s_s888, t_s889› (A_v890 : Type‹s_s888›) (x_v891 : A_v890)
    : (option_d5‹s_s888, t_s889› A_v890)

program and_then_i23 ‹s_s892, r_s893, t_s894› :
  ∀ {A_v895 : Type‹s_s892›} →
    ∀ {B_v896 : Type‹r_s893›} →
      (option_d5‹??35, t_s894› A_v895) →
        A_v895 → (option_d5‹??36, t_s894› B_v896) ⊸
          (option_d5‹??37, t_s894› B_v896)
=
  fn {A_v900 : Type‹s_s892›} {B_v901 : Type‹r_s893›}
     (opt_v902 : (option_d5‹??35, t_s894› A_v900)) ⇒
    ln (f_v903 : ??38) ⇒
      match opt_v902 as __v904 in ??39 with
      | None_c8  ⇒ None_c8‹??42, ??41›
      | Some_c9 x_v905 ⇒ (f_v903 x_v905)
      end

inductive list_d6 ‹s_s906, t_s907›
  (A_v908 : Type‹s_s906›) : Type‹t_s907›
=
| nil_c10 of
    ‹s_s909, t_s910› (A_v911 : Type‹s_s909›)
    : (list_d6‹s_s909, t_s910› A_v911)
| cons_c11 of
    ‹s_s912, t_s913› (A_v914 : Type‹s_s912›) (hd_v915 : A_v914)
    (tl_v916 : (list_d6‹s_s912, t_s913› A_v914))
    : (list_d6‹s_s912, t_s913› A_v914)

logical llen_i24 ‹s_s917, t_s918› :
  ∀ (A_v919 : Type‹s_s917›) →
    (list_d6‹s_s917, t_s918› A_v919) → nat
=
  fn (A_v921 : Type‹s_s917›)
     (xs_v922 : (list_d6‹s_s917, t_s918› A_v921)) ⇒
    match xs_v922 as __v923 in ??43 with
    | nil_c10  ⇒ 0
    | cons_c11 x_v924 xs_v925 ⇒ (llen_i24‹??46, ??45› ??44 xs_v925).+1
    end

program len_i25 ‹s_s926, t_s927› :
  ∀ {A_v928 : Type‹s_s926›} →
    (list_d6‹??47, t_s927› A_v928) →
      nat ⊗ (list_d6‹??48, t_s927› A_v928)
=
  fn {A_v931 : Type‹s_s926›}
     (xs_v932 : (list_d6‹??47, t_s927› A_v931)) ⇒
    match xs_v932 as __v933 in ??49 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??59, ??58›⟩
    | cons_c11 x_v934 xs_v935 ⇒
      match (len_i25‹??52, ??51› ??50 xs_v935) as __v936 in ??53 with
      | ⟨n_v937, xs_v938⟩ ⇒
        ⟨n_v937.+1, (cons_c11‹??56, ??55› x_v934 xs_v938)⟩
      end
    end

program append_i26 ‹s_s939, t_s940› :
  ∀ {A_v941 : Type‹s_s939›} →
    (list_d6‹??60, t_s940› A_v941) →
      (list_d6‹??61, t_s940› A_v941) ⊸ (list_d6‹??63, ??62› A_v941)
=
  fn {A_v944 : Type‹s_s939›}
     (xs_v945 : (list_d6‹??60, t_s940› A_v944)) ⇒
    ln (ys_v946 : ??64) ⇒
      match xs_v945 as __v947 in ??65 with
      | nil_c10  ⇒ ys_v946
      | cons_c11 x_v948 xs_v949 ⇒
        (cons_c11‹??71, ??70›
          x_v948 (append_i26‹??68, ??67› ??66 xs_v949 ys_v946))
      end

logical stdin_rec_i27 : unit‹U› → proto =
  fn (__v951 : unit‹U›) ⇒
    ⇑(b_v952 : bool) ⇒
      match b_v952 as __v953 in ??72 with
      | true ⇒ ⇓(__v954 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit‹U› → proto =
  fn (__v956 : unit‹U›) ⇒
    ⇑(b_v957 : bool) ⇒
      match b_v957 as __v958 in ??73 with
      | true ⇒ ⇑(__v959 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit‹U› → proto =
  fn (__v961 : unit‹U›) ⇒
    ⇑(b_v962 : bool) ⇒
      match b_v962 as __v963 in ??74 with
      | true ⇒ ⇑(__v964 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit‹U› → IO string_d4 =
  fn (__v966 : unit‹U›) ⇒
    let ch_v967 ⇐ open stdin in
    let ch_v968 ⇐ (send ch_v967 true) in
    let __v969 ⇐ recv ch_v968 in
    match __v969 as __v970 in ??75 with
    | ⟨s_v971, ch_v972⟩ ⇒
      let ch_v973 ⇐ (send ch_v972 false) in
      let __v974 ⇐ close ch_v973 in return s_v971
    end

program print_i34 : string_d4 → IO unit‹U› =
  fn (s_v976 : string_d4) ⇒
    let ch_v977 ⇐ open stdout in
    let ch_v978 ⇐ (send ch_v977 true) in
    let ch_v979 ⇐ (send ch_v978 s_v976) in
    let ch_v980 ⇐ (send ch_v979 false) in close ch_v980

program prerr_i35 : string_d4 → IO unit‹U› =
  fn (s_v982 : string_d4) ⇒
    let ch_v983 ⇐ open stderr in
    let ch_v984 ⇐ (send ch_v983 true) in
    let ch_v985 ⇐ (send ch_v984 s_v982) in
    let ch_v986 ⇐ (send ch_v985 false) in close ch_v986

program digits_i36 : (list_d6‹??76, U› ??77) =
  (cons_c11‹??110, ??109›
    "0"
    (cons_c11‹??107, ??106›
      "1"
      (cons_c11‹??104, ??103›
        "2"
        (cons_c11‹??101, ??100›
          "3"
          (cons_c11‹??98, ??97›
            "4"
            (cons_c11‹??95, ??94›
              "5"
              (cons_c11‹??92, ??91›
                "6"
                (cons_c11‹??89, ??88›
                  "7"
                  (cons_c11‹??86, ??85›
                    "8"
                    (cons_c11‹??83, ??82› "9" nil_c10‹??80, ??79›))))))))))

program get_at_i37 :
  ∀ {A_v987 : U} →
    nat → (list_d6‹??111, U› A_v987) → A_v987 → A_v987
=
  fn {A_v991 : U} (n_v992 : nat) (xs_v993 : (list_d6‹??111, U› A_v991))
     (a_v994 : A_v991) ⇒
    match n_v992 as __v995 in ??112 with
    | O ⇒
      match xs_v993 as __v996 in ??115 with
      | nil_c10  ⇒ a_v994 | cons_c11 x_v997 __v998 ⇒ x_v997
      end
    | S n_v999 ⇒
      match xs_v993 as __v1000 in ??113 with
      | nil_c10  ⇒ a_v994
      | cons_c11 __v1001 xs_v1002 ⇒
        (get_at_i37 ??114 n_v999 xs_v1002 a_v994)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v1004 : nat) ⇒
    (get_at_i37 ??116 n_v1004 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v1006 : nat) ⇒
    let s_v1007 = (string_of_digit_i38 (modn_i16 n_v1006 10)) in
    let n_v1008 = (divn_i15 n_v1006 10) in
    match (ltn_i6 0 n_v1008) as __v1009 in ??117 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v1008) s_v1007)
    | false ⇒ s_v1007
    end

program digit_of_char_i40 : char_d3 → (option_d5‹??118, L› nat) =
  fn (c_v1011 : char_d3) ⇒
    match (eqc_i17 c_v1011 '0') as __v1012 in ??119 with
    | true ⇒ (Some_c9‹??161, ??160› 0)
    | false ⇒
      match (eqc_i17 c_v1011 '1') as __v1013 in ??120 with
      | true ⇒ (Some_c9‹??158, ??157› 1)
      | false ⇒
        match (eqc_i17 c_v1011 '2') as __v1014 in ??121 with
        | true ⇒ (Some_c9‹??155, ??154› 2)
        | false ⇒
          match (eqc_i17 c_v1011 '3') as __v1015 in ??122 with
          | true ⇒ (Some_c9‹??152, ??151› 3)
          | false ⇒
            match (eqc_i17 c_v1011 '4') as __v1016 in ??123 with
            | true ⇒ (Some_c9‹??149, ??148› 4)
            | false ⇒
              match (eqc_i17 c_v1011 '5') as __v1017 in ??124 with
              | true ⇒ (Some_c9‹??146, ??145› 5)
              | false ⇒
                match (eqc_i17 c_v1011 '6') as __v1018 in ??125 with
                | true ⇒ (Some_c9‹??143, ??142› 6)
                | false ⇒
                  match (eqc_i17 c_v1011 '7') as __v1019 in ??126 with
                  | true ⇒ (Some_c9‹??140, ??139› 7)
                  | false ⇒
                    match (eqc_i17 c_v1011 '8') as __v1020 in ??127 with
                    | true ⇒ (Some_c9‹??137, ??136› 8)
                    | false ⇒
                      match (eqc_i17 c_v1011 '9') as __v1021 in ??128 with
                      | true ⇒ (Some_c9‹??134, ??133› 9)
                      | false ⇒ None_c8‹??131, ??130›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹??162, L› nat)
=
  fn (s_v1024 : string_d4) (acc_v1025 : nat) ⇒
    match s_v1024 as __v1026 in ??163 with
    | EmptyString_c6  ⇒ (Some_c9‹??170, ??169› acc_v1025)
    | String_c7 c_v1027 s_v1028 ⇒
      match (digit_of_char_i40 c_v1027) as __v1029 in ??164 with
      | None_c8  ⇒ None_c8‹??167, ??166›
      | Some_c9 n_v1030 ⇒
        (nat_of_string_loop_i41
          s_v1028 (addn_i12 (muln_i14 acc_v1025 10) n_v1030))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹??171, L› nat) =
  fn (s_v1032 : string_d4) ⇒ (nat_of_string_loop_i41 s_v1032 0)

logical eq_sym_i43 ‹s_s1033› :
  ∀ (A_v1034 : Type‹s_s1033›) →
    ∀ (x_v1035 : A_v1034) →
      ∀ (y_v1036 : A_v1034) →
        ∀ (__v1037 : x_v1035 ≡ y_v1036) → y_v1036 ≡ x_v1035
=
  fn (A_v1038 : Type‹s_s1033›) (x_v1039 : A_v1038) (y_v1040 : A_v1038)
     (e_v1041 : ??174) ⇒
    rew [y_v1042, __v1043 ⇒ y_v1042 ≡ x_v1039] e_v1041 in refl ??175

logical eq_trans_i44 ‹s_s1044› :
  ∀ (A_v1045 : Type‹s_s1044›) →
    ∀ (x_v1046 : A_v1045) →
      ∀ (y_v1047 : A_v1045) →
        ∀ (z_v1048 : A_v1045) →
          ∀ (__v1049 : x_v1046 ≡ y_v1047) →
            ∀ (__v1050 : y_v1047 ≡ z_v1048) → x_v1046 ≡ z_v1048
=
  fn (A_v1051 : Type‹s_s1044›) (x_v1052 : A_v1051) (y_v1053 : A_v1051)
     (z_v1054 : A_v1051) (e1_v1055 : ??180) (e2_v1056 : ??181) ⇒
    rew [y0_v1057, __v1058 ⇒ x_v1052 ≡ y0_v1057] e2_v1056 in e1_v1055

logical f_equal_i45 ‹s_s1059, t_s1060› :
  ∀ (A_v1061 : Type‹s_s1059›) →
    ∀ (B_v1062 : Type‹t_s1060›) →
      ∀ (f_v1063 : A_v1061 → B_v1062) →
        ∀ (x_v1065 : A_v1061) →
          ∀ (y_v1066 : A_v1061) →
            ∀ (__v1067 : x_v1065 ≡ y_v1066) →
              (f_v1063 x_v1065) ≡ (f_v1063 y_v1066)
=
  fn (A_v1068 : Type‹s_s1059›) (B_v1069 : Type‹t_s1060›)
     (f_v1070 : A_v1068 → B_v1069) (x_v1071 : A_v1068) (y_v1072 : A_v1068)
     (e_v1073 : ??185) ⇒
    rew [y_v1075, p_v1076 ⇒ (f_v1070 x_v1071) ≡ (f_v1070 y_v1075)]
      e_v1073 in
    refl ??186

logical bool_absurd_i46 : true ≡ false → ⊥ =
  fn (e_v1078 : true ≡ false) ⇒
    rew [x_v1079, __v1080 ⇒
      match x_v1079 as __v1081 in ??189 with
      | true ⇒ unit‹U› | false ⇒ ⊥
      end] e_v1078 in
    ()

logical nat_absurd_i47 : ∀ (n_v1082 : nat) → n_v1082.+1 ≡ 0 → ⊥ =
  fn (n_v1084 : nat) (e_v1085 : n_v1084.+1 ≡ 0) ⇒
    rew [x_v1086, __v1087 ⇒
      match x_v1086 as __v1088 in ??191 with
      | O ⇒ ⊥ | S __v1089 ⇒ unit‹U›
      end] e_v1085 in
    ()

logical nat_inv_i48 :
  ∀ (n1_v1090 : nat) →
    ∀ (n2_v1091 : nat) →
      ∀ (e_v1092 : n1_v1090.+1 ≡ n2_v1091.+1) → n1_v1090 ≡ n2_v1091
=
  fn (n1_v1093 : nat) (n2_v1094 : nat)
     (e_v1095 : n1_v1093.+1 ≡ n2_v1094.+1) ⇒
    (f_equal_i45‹??199, ??198› ??197 ??196 pred_i11 ??195 ??194 e_v1095)

logical eqn_reflect_i49 :
  ∀ (m_v1096 : nat) →
    ∀ (n_v1097 : nat) →
      ∀ (__v1098 : (eqn_i9 m_v1096 n_v1097) ≡ true) →
        m_v1096 ≡ n_v1097
=
  fn (m_v1099 : nat) (n_v1100 : nat) ⇒
    match m_v1099 as m0_v1101 in
      ∀ (__v1102 : (eqn_i9 m0_v1101 n_v1100) ≡ true) →
        m0_v1101 ≡ n_v1100 with
    | O ⇒
      match n_v1100 as n0_v1103 in
        ∀ (__v1104 : (eqn_i9 0 n0_v1103) ≡ true) → 0 ≡ n0_v1103 with
      | O ⇒ fn (__v1105 : ??228) ⇒ refl ??229
      | S n_v1106 ⇒
        fn (e_v1107 : ??222) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹??226› ??225 ??224 ??223 e_v1107))
      end
    | S m_v1108 ⇒
      match n_v1100 as n0_v1109 in
        ∀ (__v1110 : (eqn_i9 m_v1108.+1 n0_v1109) ≡ true) →
          m_v1108.+1 ≡ n0_v1109 with
      | O ⇒
        fn (e_v1111 : ??214) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹??218› ??217 ??216 ??215 e_v1111))
      | S n_v1112 ⇒
        fn (e_v1113 : ??206) ⇒
          (f_equal_i45‹??213, ??212›
            ??211 ??210 fn (x_v1114 : ??209) ⇒ x_v1114.+1 ??208 ??207
            (eqn_reflect_i49 m_v1108 n_v1112 e_v1113))
      end
    end

logical eqc_reflect_i50 :
  ∀ (c1_v1115 : char_d3) →
    ∀ (c2_v1116 : char_d3) →
      ∀ (__v1117 : (eqc_i17 c1_v1115 c2_v1116) ≡ true) →
        c1_v1115 ≡ c2_v1116
=
  fn (c1_v1118 : char_d3) (c2_v1119 : char_d3) ⇒
    match c1_v1118 as c0_v1120 in
      ∀ (__v1121 : (eqc_i17 c0_v1120 c2_v1119) ≡ true) →
        c0_v1120 ≡ c2_v1119 with
    | Char_c5 m_v1122 ⇒
      match c2_v1119 as c0_v1123 in
        ∀ (__v1124 :
          (eqc_i17 (Char_c5‹› m_v1122) c0_v1123) ≡ true) →
          (Char_c5‹› m_v1122) ≡ c0_v1123 with
      | Char_c5 n_v1125 ⇒
        fn (e_v1126 : ??236) ⇒
          let e_v1127 = (eqn_reflect_i49 ??238 ??237 e_v1126) in
          (f_equal_i45‹??245, ??244›
            ??243 ??242 fn (x_v1128 : ??241) ⇒ (Char_c5‹› x_v1128)
            ??240 ??239 e_v1127)
      end
    end

program contains_i51 : char_d3 → string_d4 → bool =
  fn (c_v1131 : char_d3) (s_v1132 : string_d4) ⇒
    match s_v1132 as __v1133 in ??246 with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v1134 s_v1135 ⇒
      match (eqc_i17 c_v1131 c0_v1134) as __v1136 in ??247 with
      | true ⇒ true | false ⇒ (contains_i51 c_v1131 s_v1135)
      end
    end

inductive diff_d7
  (ans_v1137 : string_d4) (a_v1138 : string_d4) (b_v1139 : string_d4) (df_v1140 : string_d4) : U
=
| diff_EmptyString_c12 of
    (ans_v1141 : string_d4) (a_v1142 : string_d4) (b_v1143 : string_d4)
    (df_v1144 : string_d4) (__v1145 : a_v1142 ≡ EmptyString_c6‹›)
    (__v1146 : b_v1143 ≡ EmptyString_c6‹›)
    (__v1147 : df_v1144 ≡ EmptyString_c6‹›)
    : (diff_d7 ans_v1141 a_v1142 b_v1143 df_v1144)
| diff_StringY_c13 of
    (ans_v1148 : string_d4) (a_v1149 : string_d4) (b_v1150 : string_d4)
    (df_v1151 : string_d4) (c_v1152 : char_d3) (s1_v1153 : string_d4)
    (s2_v1154 : string_d4) (s3_v1155 : string_d4)
    (__v1156 : (diff_d7 ans_v1148 s1_v1153 s2_v1154 s3_v1155))
    (__v1157 : a_v1149 ≡ (String_c7‹› c_v1152 s1_v1153))
    (__v1158 : b_v1150 ≡ (String_c7‹› c_v1152 s2_v1154))
    (__v1159 : df_v1151 ≡ (cats_i19 "Y" s3_v1155))
    : (diff_d7 ans_v1148 a_v1149 b_v1150 df_v1151)
| diff_StringI_c14 of
    (ans_v1160 : string_d4) (a_v1161 : string_d4) (b_v1162 : string_d4)
    (df_v1163 : string_d4) (c1_v1164 : char_d3) (c2_v1165 : char_d3)
    (s1_v1166 : string_d4) (s2_v1167 : string_d4) (s3_v1168 : string_d4)
    (__v1169 : (eqc_i17 c1_v1164 c2_v1165) ≡ false)
    (__v1170 : (contains_i51 c2_v1165 ans_v1160) ≡ true)
    (__v1171 : (diff_d7 ans_v1160 s1_v1166 s2_v1167 s3_v1168))
    (__v1172 : a_v1161 ≡ (String_c7‹› c1_v1164 s1_v1166))
    (__v1173 : b_v1162 ≡ (String_c7‹› c2_v1165 s2_v1167))
    (__v1174 : df_v1163 ≡ (cats_i19 "I" s3_v1168))
    : (diff_d7 ans_v1160 a_v1161 b_v1162 df_v1163)
| diff_StringN_c15 of
    (ans_v1175 : string_d4) (a_v1176 : string_d4) (b_v1177 : string_d4)
    (df_v1178 : string_d4) (c1_v1179 : char_d3) (c2_v1180 : char_d3)
    (s1_v1181 : string_d4) (s2_v1182 : string_d4) (s3_v1183 : string_d4)
    (__v1184 : (eqc_i17 c1_v1179 c2_v1180) ≡ false)
    (__v1185 : (contains_i51 c2_v1180 ans_v1175) ≡ false)
    (__v1186 : (diff_d7 ans_v1175 s1_v1181 s2_v1182 s3_v1183))
    (__v1187 : a_v1176 ≡ (String_c7‹› c1_v1179 s1_v1181))
    (__v1188 : b_v1177 ≡ (String_c7‹› c2_v1180 s2_v1182))
    (__v1189 : df_v1178 ≡ (cats_i19 "N" s3_v1183))
    : (diff_d7 ans_v1175 a_v1176 b_v1177 df_v1178)

program string_diff_i52 :
  ∀ (ans_v1190 : string_d4) →
    ∀ (s1_v1191 : string_d4) →
      ∀ (s2_v1192 : string_d4) →
        {(strlen_i20 s1_v1191) ≡ (strlen_i20 s2_v1192)} →
          ∃ (df_v1194 : string_d4) ⊗
            {(diff_d7 ans_v1190 s1_v1191 s2_v1192 df_v1194)}
=
  fn (ans_v1195 : string_d4) (s1_v1196 : string_d4) (s2_v1197 : string_d4) ⇒
    match s1_v1196 as s0_v1198 in
      {(strlen_i20 s0_v1198) ≡ (strlen_i20 s2_v1197)} →
        ∃ (df_v1200 : string_d4) ⊗
          {(diff_d7 ans_v1195 s0_v1198 s2_v1197 df_v1200)} with
    | EmptyString_c6  ⇒
      match s2_v1197 as s0_v1201 in
        {0 ≡ (strlen_i20 s0_v1201)} →
          ∃ (df_v1203 : string_d4) ⊗
            {(diff_d7 ans_v1195 EmptyString_c6‹› s0_v1201 df_v1203)} with
      | EmptyString_c6  ⇒
        fn {e_v1204 : ??322} ⇒
          ⟨EmptyString_c6‹›, {(diff_EmptyString_c12‹›
                                      refl ??325 refl ??324 refl ??323)}⟩
      | String_c7 c2_v1205 s2_v1206 ⇒
        fn {e_v1207 : ??320} ⇒
          rew [x_v1208, __v1209 ⇒
            match x_v1208 as __v1210 in ??321 with
            | O ⇒ unit‹L›
            | S __v1211 ⇒
              ∃ (df_v1212 : string_d4) ⊗
                {(diff_d7
                   ans_v1195 EmptyString_c6‹›
                   (String_c7‹› c2_v1205 s2_v1206) df_v1212)}
            end] e_v1207 in
          ⟨⟩
      end
    | String_c7 c1_v1213 s1_v1214 ⇒
      match s2_v1197 as s0_v1215 in
        {(strlen_i20 s1_v1214).+1 ≡ (strlen_i20 s0_v1215)} →
          ∃ (df_v1217 : string_d4) ⊗
            {(diff_d7
               ans_v1195 (String_c7‹› c1_v1213 s1_v1214) s0_v1215
               df_v1217)} with
      | EmptyString_c6  ⇒
        fn {e_v1218 : ??317} ⇒
          rew [x_v1219, __v1220 ⇒
            match x_v1219 as __v1221 in ??318 with
            | O ⇒
              ∃ (df_v1222 : string_d4) ⊗
                {(diff_d7
                   ans_v1195 (String_c7‹› c1_v1213 s1_v1214)
                   EmptyString_c6‹› df_v1222)}
            | S __v1223 ⇒ unit‹L›
            end] e_v1218 in
          ⟨⟩
      | String_c7 c2_v1224 s2_v1225 ⇒
        fn {e_v1226 : ??267} ⇒
          let {e_v1227} = (nat_inv_i48 ??269 ??268 e_v1226) in
          let __v1228 = (string_diff_i52 ans_v1195 s1_v1214 s2_v1225 e_v1227)
          in
          match __v1228 as __v1229 in ??316 with
          | ⟨df_v1230, {pf_v1231}⟩ ⇒
            (match (eqc_i17 c1_v1213 c2_v1224) as b0_v1232 in
               {(eqc_i17 c1_v1213 c2_v1224) ≡ b0_v1232} →
                 ∃ (df_v1234 : string_d4) ⊗
                   {(diff_d7
                      ans_v1195 (String_c7‹› c1_v1213 s1_v1214)
                      (String_c7‹› c2_v1224 s2_v1225) df_v1234)} with
             | true ⇒
               fn {e1_v1235 : ??300} ⇒
                 let {e1_v1236} = (eqc_reflect_i50 ??302 ??301 e1_v1235) in
                 let {h_v1237} =
                   rew [c_v1238, __v1239 ⇒
                     (String_c7‹› c_v1238 s2_v1225) ≡
                       (String_c7‹› c1_v1213 s2_v1225)]
                     e1_v1236 in
                   refl ??303
                 in
                 ⟨(cats_i19 "Y" df_v1230), {(diff_StringY_c13‹›
                                                ??310 ??309 ??308 ??307
                                                pf_v1231 refl ??306 h_v1237
                                                refl ??305)}⟩
             | false ⇒
               fn {e1_v1240 : ??271} ⇒
                 (match (contains_i51 c2_v1224 ans_v1195) as b0_v1241 in
                    {(contains_i51 c2_v1224 ans_v1195) ≡ b0_v1241} →
                      ∃ (df_v1243 : string_d4) ⊗
                        {(diff_d7
                           ans_v1195 (String_c7‹› c1_v1213 s1_v1214)
                           (String_c7‹› c2_v1224 s2_v1225) df_v1243)} with
                  | true ⇒
                    fn {e2_v1244 : ??286} ⇒
                      ⟨(cats_i19 "I" df_v1230), {(diff_StringI_c14‹›
                                                     ??294 ??293 ??292 ??291
                                                     ??290 e1_v1240 e2_v1244
                                                     pf_v1231 refl ??289
                                                     refl ??288 refl ??287)}⟩
                  | false ⇒
                    fn {e2_v1245 : ??273} ⇒
                      ⟨(cats_i19 "N" df_v1230), {(diff_StringN_c15‹›
                                                     ??281 ??280 ??279 ??278
                                                     ??277 e1_v1240 e2_v1245
                                                     pf_v1231 refl ??276
                                                     refl ??275 refl ??274)}⟩
                  end refl ??299)
             end refl ??315)
          end
      end
    end

logical diff_len_i53 :
  ∀ (ans_v1246 : string_d4) →
    ∀ (s1_v1247 : string_d4) →
      ∀ (s2_v1248 : string_d4) →
        ∀ (df_v1249 : string_d4) →
          ∀ (h_v1250 : (diff_d7 ans_v1246 s1_v1247 s2_v1248 df_v1249)) →
            (strlen_i20 df_v1249) ≡ (strlen_i20 s1_v1247)
=
  fn (ans_v1251 : string_d4) (s1_v1252 : string_d4) (s2_v1253 : string_d4)
     (df_v1254 : string_d4)
     (h_v1255 : (diff_d7 ans_v1251 s1_v1252 s2_v1253 df_v1254)) ⇒
    match h_v1255 as __v1256 in ??331 with
    | diff_EmptyString_c12 pf1_v1257 __v1258 pf3_v1259 ⇒
      let pf1_v1260 = (eq_sym_i43‹??383› ??382 ??381 ??380 pf1_v1257) in
      let pf3_v1261 = (eq_sym_i43‹??387› ??386 ??385 ??384 pf3_v1259) in
      rew [s0_v1262, __v1263 ⇒
        (strlen_i20 df_v1254) ≡ (strlen_i20 s0_v1262)] pf1_v1260 in
      rew [df0_v1264, __v1265 ⇒ (strlen_i20 df0_v1264) ≡ 0] pf3_v1261 in
      refl ??388
    | diff_StringY_c13 c_v1266 s0_v1267 s3_v1268 s4_v1269 h1_v1270 pf1_v1271
      __v1272 pf3_v1273 ⇒
      let pf1_v1274 = (eq_sym_i43‹??367› ??366 ??365 ??364 pf1_v1271) in
      let pf3_v1275 = (eq_sym_i43‹??371› ??370 ??369 ??368 pf3_v1273) in
      rew [s0_v1276, __v1277 ⇒
        (strlen_i20 df_v1254) ≡ (strlen_i20 s0_v1276)] pf1_v1274 in
      rew [df0_v1278, __v1279 ⇒
        (strlen_i20 df0_v1278) ≡
          (strlen_i20 (String_c7‹› c_v1266 s0_v1267))]
        pf3_v1275 in
      rew [n_v1280, __v1281 ⇒ (strlen_i20 s4_v1269).+1 ≡ n_v1280.+1]
        (diff_len_i53 ??375 ??374 ??373 ??372 h1_v1270) in
      refl ??376
    | diff_StringI_c14 c1_v1282 __v1283 s0_v1284 s3_v1285 s4_v1286 __v1287
      __v1288 h3_v1289 pf1_v1290 __v1291 pf3_v1292 ⇒
      let pf1_v1293 = (eq_sym_i43‹??351› ??350 ??349 ??348 pf1_v1290) in
      let pf3_v1294 = (eq_sym_i43‹??355› ??354 ??353 ??352 pf3_v1292) in
      rew [s0_v1295, __v1296 ⇒
        (strlen_i20 df_v1254) ≡ (strlen_i20 s0_v1295)] pf1_v1293 in
      rew [df0_v1297, __v1298 ⇒
        (strlen_i20 df0_v1297) ≡
          (strlen_i20 (String_c7‹› c1_v1282 s0_v1284))]
        pf3_v1294 in
      rew [n_v1299, __v1300 ⇒ (strlen_i20 s4_v1286).+1 ≡ n_v1299.+1]
        (diff_len_i53 ??359 ??358 ??357 ??356 h3_v1289) in
      refl ??360
    | diff_StringN_c15 c1_v1301 __v1302 s0_v1303 s3_v1304 s4_v1305 __v1306
      __v1307 h3_v1308 pf1_v1309 __v1310 pf3_v1311 ⇒
      let pf1_v1312 = (eq_sym_i43‹??335› ??334 ??333 ??332 pf1_v1309) in
      let pf3_v1313 = (eq_sym_i43‹??339› ??338 ??337 ??336 pf3_v1311) in
      rew [s0_v1314, __v1315 ⇒
        (strlen_i20 df_v1254) ≡ (strlen_i20 s0_v1314)] pf1_v1312 in
      rew [df0_v1316, __v1317 ⇒
        (strlen_i20 df0_v1316) ≡
          (strlen_i20 (String_c7‹› c1_v1301 s0_v1303))]
        pf3_v1313 in
      rew [n_v1318, __v1319 ⇒ (strlen_i20 s4_v1305).+1 ≡ n_v1318.+1]
        (diff_len_i53 ??343 ??342 ??341 ??340 h3_v1308) in
      refl ??344
    end

inductive word_d8 : U =
| Word_c16 of
    (s_v1320 : string_d4) {pf_v1321 : (strlen_i20 s_v1320) ≡ 5} : word_d8

inductive wdiff_d9
  (ans_v1322 : word_d8) (guess_v1323 : word_d8) (df_v1324 : word_d8) : U
=
| diff_Word_c17 of
    (ans_v1325 : word_d8) (guess_v1326 : word_d8) (df_v1327 : word_d8)
    (s1_v1328 : string_d4) (s2_v1329 : string_d4) (s3_v1330 : string_d4)
    (pf1_v1331 : (strlen_i20 s1_v1328) ≡ 5)
    (pf2_v1332 : (strlen_i20 s2_v1329) ≡ 5)
    (pf3_v1333 : (strlen_i20 s3_v1330) ≡ 5)
    (__v1334 : ans_v1325 ≡ (Word_c16‹› s1_v1328 pf1_v1331))
    (__v1335 : guess_v1326 ≡ (Word_c16‹› s2_v1329 pf2_v1332))
    (__v1336 : df_v1327 ≡ (Word_c16‹› s3_v1330 pf3_v1333))
    (__v1337 : (diff_d7 s1_v1328 s1_v1328 s2_v1329 s3_v1330))
    : (wdiff_d9 ans_v1325 guess_v1326 df_v1327)

program word_diff_i54 :
  ∀ (ans_v1338 : word_d8) →
    ∀ (guess_v1339 : word_d8) →
      ∃ (df_v1340 : word_d8) ⊗
        {(wdiff_d9 ans_v1338 guess_v1339 df_v1340)}
=
  fn (ans_v1341 : word_d8) (guess_v1342 : word_d8) ⇒
    (match ans_v1341 as ans0_v1343 in
       {ans_v1341 ≡ ans0_v1343} →
         ∃ (df_v1345 : word_d8) ⊗
           {(wdiff_d9 ans_v1341 guess_v1342 df_v1345)} with
     | Word_c16 s1_v1346 pf1_v1347 ⇒
       fn {e1_v1348 : ??399} ⇒
         (match guess_v1342 as guess0_v1349 in
            {guess_v1342 ≡ guess0_v1349} →
              ∃ (df_v1351 : word_d8) ⊗
                {(wdiff_d9 ans_v1341 guess_v1342 df_v1351)} with
          | Word_c16 s2_v1352 pf2_v1353 ⇒
            fn {e2_v1354 : ??401} ⇒
              let {e_v1355} =
                (eq_trans_i44‹??410›
                  ??409 ??408 ??407 ??406 pf1_v1347
                  (eq_sym_i43‹??405› ??404 ??403 ??402 pf2_v1353))
              in
              let __v1356 =
                (string_diff_i52 s1_v1346 s1_v1346 s2_v1352 e_v1355)
              in
              match __v1356 as __v1357 in ??424 with
              | ⟨s3_v1358, {h_v1359}⟩ ⇒
                let {e_v1360} =
                  (diff_len_i53 ??414 ??413 ??412 ??411 h_v1359)
                in
                let {pf_v1361} =
                  (eq_trans_i44‹??419›
                    ??418 ??417 ??416 ??415 e_v1360 pf1_v1347)
                in
                ⟨(Word_c16‹› s3_v1358 pf_v1361), {(diff_Word_c17‹›
                                                          s1_v1346 s2_v1352
                                                          s3_v1358 pf1_v1347
                                                          pf2_v1353 pf_v1361
                                                          e1_v1348 e2_v1354
                                                          refl ??420 h_v1359)}⟩
              end
          end refl ??425)
     end refl ??426)

program eqw_i55 : word_d8 → word_d8 → bool =
  fn (w1_v1364 : word_d8) (w2_v1365 : word_d8) ⇒
    match w1_v1364 as __v1366 in ??427 with
    | Word_c16 s1_v1367 __v1368 ⇒
      match w2_v1365 as __v1369 in ??428 with
      | Word_c16 s2_v1370 __v1371 ⇒ (eqs_i21 s1_v1367 s2_v1370)
      end
    end

logical wordle_loop_i56 : word_d8 → nat → proto =
  fn (ans_v1374 : word_d8) (repeat_v1375 : nat) ⇒
    match repeat_v1375 as __v1376 in ??429 with
    | O ⇒
      ⇑(w_v1377 : word_d8) ⇒ ⇑{__v1378 : w_v1377 ≡ ans_v1374} ⇒ end
    | S repeat_v1379 ⇒
      ⇓(guess_v1380 : word_d8) ⇒
        ⇑(b_v1381 : bool) ⇒
          ⇑{__v1382 : b_v1381 ≡ (eqw_i55 ans_v1374 guess_v1380)} ⇒
            match b_v1381 as __v1383 in ??431 with
            | true ⇒ end
            | false ⇒
              ⇑(df_v1384 : word_d8) ⇒
                ⇑{__v1385 : (wdiff_d9 ans_v1374 guess_v1380 df_v1384)} ⇒
                  (wordle_loop_i56 ans_v1374 repeat_v1379)
            end
    end

logical wordle_i57 : proto =
  ⇑{ans_v1386 : word_d8} ⇒
    ⇑(repeat_v1387 : nat) ⇒ (wordle_loop_i56 ans_v1386 repeat_v1387)

logical loop_ch_i58 : word_d8 → nat → L =
  fn (ans_v1390 : word_d8) (repeat_v1391 : nat) ⇒
    ch⟨(wordle_loop_i56 ans_v1390 repeat_v1391)⟩

logical loop_hc_i59 : word_d8 → nat → L =
  fn (ans_v1394 : word_d8) (repeat_v1395 : nat) ⇒
    hc⟨(wordle_loop_i56 ans_v1394 repeat_v1395)⟩

logical wordle_ch_i60 : L = ch⟨wordle_i57⟩

logical wordle_hc_i61 : L = hc⟨wordle_i57⟩

program read_word_i62 : unit‹U› → IO word_d8 =
  fn (__v1397 : unit‹U›) ⇒
    let s_v1398 ⇐ (readline_i33 ()) in
    (match (eqn_i9 (strlen_i20 s_v1398) 5) as b0_v1399 in
       {(eqn_i9 (strlen_i20 s_v1398) 5) ≡ b0_v1399} → IO word_d8 with
     | true ⇒
       fn {e_v1401 : ??435} ⇒
         return (Word_c16‹›
                  s_v1398 (eqn_reflect_i49 ??437 ??436 e_v1401))
     | false ⇒
       fn {__v1402 : ??434} ⇒
         let __v1403 ⇐ (print_i34 "please input a word with length of 5\n")
         in (read_word_i62 ())
     end refl ??438)

program player_loop_i63 :
  ∀ {ans_v1404 : word_d8} →
    ∀ (repeat_v1405 : nat) →
      (loop_hc_i59 ans_v1404 repeat_v1405) → IO unit‹U›
=
  fn {ans_v1407 : word_d8} (repeat_v1408 : nat)
     (c_v1409 : (loop_hc_i59 ans_v1407 repeat_v1408)) ⇒
    (match repeat_v1408 as repeat0_v1410 in
       (loop_hc_i59 ans_v1407 repeat0_v1410) → IO unit‹U› with
     | O ⇒
       fn (c_v1412 : ??448) ⇒
         let __v1413 ⇐ recv c_v1412 in
         match __v1413 as __v1414 in ??451 with
         | ⟨ans_v1415, c_v1416⟩ ⇒
           let __v1417 ⇐ recv c_v1416 in
           match __v1417 as __v1418 in ??450 with
           | ⟨{pf_v1419}, c_v1420⟩ ⇒
             match ans_v1415 as __v1421 in ??449 with
             | Word_c16 s_v1422 __v1423 ⇒
               let __v1424 ⇐
                 (print_i34
                   (cats_i19
                     (cats_i19 "You Lose! The answer is " s_v1422) ".\n"))
               in close c_v1420
             end
           end
         end
     | S repeat_v1425 ⇒
       fn (c_v1426 : ??439) ⇒
         let guess_v1427 ⇐ (read_word_i62 ()) in
         let c_v1428 ⇐ (send c_v1426 guess_v1427) in
         let __v1429 ⇐ recv c_v1428 in
         match __v1429 as __v1430 in ??447 with
         | ⟨b_v1431, c_v1432⟩ ⇒
           let __v1433 ⇐ recv c_v1432 in
           match __v1433 as __v1434 in ??446 with
           | ⟨{pf_v1435}, c_v1436⟩ ⇒
             (match b_v1431 as b0_v1437 in
                hc⟨match b0_v1437 as __v1439 in ??440 with
                     | true ⇒ end
                     | false ⇒
                       ⇑(df_v1440 : word_d8) ⇒
                         ⇑{__v1441 :
                           (wdiff_d9 ans_v1407 guess_v1427 df_v1440)} ⇒
                           (wordle_loop_i56 ans_v1407 repeat_v1425)
                     end⟩ ⊸
                  IO unit‹U› with
              | true ⇒
                ln (c_v1442 : ??445) ⇒
                  let __v1443 ⇐ (print_i34 "You Win!\n") in close c_v1442
              | false ⇒
                ln (c_v1444 : ??441) ⇒
                  let __v1445 ⇐ recv c_v1444 in
                  match __v1445 as __v1446 in ??444 with
                  | ⟨diff_v1447, c_v1448⟩ ⇒
                    let __v1449 ⇐ recv c_v1448 in
                    match __v1449 as __v1450 in ??443 with
                    | ⟨{pf_v1451}, c_v1452⟩ ⇒
                      match diff_v1447 as __v1453 in ??442 with
                      | Word_c16 s_v1454 __v1455 ⇒
                        let __v1456 ⇐
                          (print_i34
                            (cats_i19
                              (cats_i19
                                (cats_i19
                                  (cats_i19 "Incorrect, hint: " s_v1454)
                                  ". You have ")
                                (string_of_nat_i39 repeat_v1425))
                              " more tries.\n"))
                        in (player_loop_i63 ans_v1407 repeat_v1425 c_v1452)
                      end
                    end
                  end
              end c_v1436)
           end
         end
     end c_v1409)

program player_i64 : wordle_hc_i61 → IO unit‹U› =
  fn (c_v1458 : wordle_hc_i61) ⇒
    let __v1459 ⇐ recv c_v1458 in
    match __v1459 as __v1460 in ??453 with
    | ⟨{ans_v1461}, c_v1462⟩ ⇒
      let __v1463 ⇐ recv c_v1462 in
      match __v1463 as __v1464 in ??452 with
      | ⟨repeat_v1465, c_v1466⟩ ⇒
        let __v1467 ⇐ (print_i34 "Wordle Game\n") in
        let __v1468 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v1469 ⇐
          (print_i34
            (cats_i19
              (cats_i19 "You have " (string_of_nat_i39 repeat_v1465))
              " tries.\n"))
        in (player_loop_i63 ans_v1461 repeat_v1465 c_v1466)
      end
    end

inductive at_d10
  (A_v1470 : U) (x_v1471 : A_v1470) (n_v1472 : nat) (xs_v1473 : (list_d6‹??454,
                                                                U› 
                                                                A_v1470)) : U
=
| at_O_c18 of
    (A_v1474 : U) (x_v1475 : A_v1474) (n_v1476 : nat)
    (xs_v1477 : (list_d6‹??455, U› A_v1474))
    (xs0_v1478 : (list_d6‹??457, ??456› A_v1474))
    (__v1479 : n_v1476 ≡ 0)
    (__v1480 : xs_v1477 ≡ (cons_c11‹??461, ??460› x_v1475 xs0_v1478))
    : (at_d10 A_v1474 x_v1475 n_v1476 xs_v1477)
| at_S_c19 of
    (A_v1481 : U) (x_v1482 : A_v1481) (n_v1483 : nat)
    (xs_v1484 : (list_d6‹??463, U› A_v1481)) (n0_v1485 : nat)
    (x0_v1486 : A_v1481) (xs0_v1487 : (list_d6‹??465, ??464› A_v1481))
    (h_v1488 : (at_d10 A_v1481 x_v1482 n0_v1485 xs0_v1487))
    (__v1489 : n_v1483 ≡ n0_v1485.+1)
    (__v1490 : xs_v1484 ≡ (cons_c11‹??469, ??468› x0_v1486 xs0_v1487))
    : (at_d10 A_v1481 x_v1482 n_v1483 xs_v1484)

logical ltn_inv_i65 :
  ∀ (m_v1491 : nat) →
    ∀ (n_v1492 : nat) →
      ∀ (__v1493 : (ltn_i6 m_v1491.+1 n_v1492.+1) ≡ true) →
        (ltn_i6 m_v1491 n_v1492) ≡ true
= fn (m_v1494 : nat) (n_v1495 : nat) (h_v1496 : ??473) ⇒ h_v1496

program get_at_i66 :
  ∀ {A_v1497 : U} →
    ∀ (n_v1498 : nat) →
      ∀ (xs_v1499 : (list_d6‹??475, ??474› A_v1497)) →
        ∀ {__v1500 :
          (ltn_i6 n_v1498 (llen_i24‹??478, ??477› ??476 xs_v1499)) ≡
            true} →
          ∃ (x_v1501 : A_v1497) ⊗
            {(at_d10 ??480 x_v1501 n_v1498 xs_v1499)}
=
  fn {A_v1502 : U} (n_v1503 : nat)
     (xs_v1504 : (list_d6‹??475, ??474› A_v1502)) ⇒
    match xs_v1504 as xs0_v1505 in
      ∀ {__v1506 :
        (ltn_i6 n_v1503 (llen_i24‹??483, ??482› ??481 xs0_v1505)) ≡
          true} →
        ∃ (x_v1507 : A_v1502) ⊗
          {(at_d10 ??485 x_v1507 n_v1503 xs0_v1505)} with
    | nil_c10  ⇒
      fn {e_v1508 : ??515} ⇒
        rew [b_v1509, __v1510 ⇒
          match b_v1509 as __v1511 in ??516 with
          | true ⇒
            ∃ (x_v1512 : A_v1502) ⊗
              {(at_d10 ??520 x_v1512 n_v1503 nil_c10‹??519, ??518›)}
          | false ⇒ unit‹L›
          end] e_v1508 in
        ⟨⟩
    | cons_c11 x_v1513 xs_v1514 ⇒
      match n_v1503 as n0_v1515 in
        ∀ {__v1516 :
          (ltn_i6 n0_v1515 (llen_i24‹??488, ??487› ??486 xs_v1514).+1) ≡
            true} →
          ∃ (x0_v1517 : A_v1502) ⊗
            {(at_d10
               ??493 x0_v1517 n0_v1515
               (cons_c11‹??492, ??491› x_v1513 xs_v1514))} with
      | O ⇒
        fn {e_v1518 : ??508} ⇒
          ⟨x_v1513, {(at_O_c18‹› xs_v1514 refl ??510 refl ??509)}⟩
      | S n_v1519 ⇒
        fn {e_v1520 : ??494} ⇒
          let __v1521 =
            (get_at_i66
              ??497 n_v1519 xs_v1514 (ltn_inv_i65 ??496 ??495 e_v1520))
          in
          match __v1521 as __v1522 in ??507 with
          | ⟨x0_v1523, {pf_v1524}⟩ ⇒
            ⟨x0_v1523, {(at_S_c19‹›
                            ??502 ??501 ??500 pf_v1524 refl ??499 refl ??498)}⟩
          end
      end
    end

program rand_word_i67 : unit‹U› → IO word_d8 =
  fn (__v1526 : unit‹U›) ⇒
    let words_v1527 =
      ((cons_c11‹??603, ??602›
         (Word_c16‹› "route" refl ??600)
         (cons_c11‹??599, ??598›
           (Word_c16‹› "crash" refl ??596)
           (cons_c11‹??595, ??594›
             (Word_c16‹› "clown" refl ??592)
             (cons_c11‹??591, ??590›
               (Word_c16‹› "shaky" refl ??588)
               (cons_c11‹??587, ??586›
                 (Word_c16‹› "vegan" refl ??584)
                 (cons_c11‹??583, ??582›
                   (Word_c16‹› "power" refl ??580)
                   (cons_c11‹??579, ??578›
                     (Word_c16‹› "trust" refl ??576)
                     (cons_c11‹??575, ??574›
                       (Word_c16‹› "enjoy" refl ??572)
                       (cons_c11‹??571, ??570›
                         (Word_c16‹› "brain" refl ??568)
                         (cons_c11‹??567, ??566›
                           (Word_c16‹› "adopt" refl ??564)
                           (cons_c11‹??563, ??562›
                             (Word_c16‹› "tower" refl ??560)
                             (cons_c11‹??559, ??558›
                               (Word_c16‹› "shade" refl ??556)
                               (cons_c11‹??555, ??554›
                                 (Word_c16‹› "delay" refl ??552)
                                 (cons_c11‹??551, ??550›
                                   (Word_c16‹› "twist" refl ??548)
                                   (cons_c11‹??547, ??546›
                                     (Word_c16‹› "alert" refl ??544)
                                     (cons_c11‹??543, ??542›
                                       (Word_c16‹› "choke" refl ??540)
                                       (cons_c11‹??539, ??538›
                                         (Word_c16‹› "split" refl ??536)
                                         (cons_c11‹??535, ??534›
                                           (Word_c16‹›
                                             "rhyme" refl ??532)
                                           (cons_c11‹??531, ??530›
                                             (Word_c16‹›
                                               "muddy" refl ??528)
                                             (cons_c11‹??527, ??526›
                                               (Word_c16‹›
                                                 "plant" refl ??524)
                                               nil_c10‹??523, ??522›))))))))))))))))))))
        : (list_d6‹??604, U› ??605))
    in
    let r_v1528 ⇐ rand 0 19 in
    match r_v1528 as __v1529 in ??606 with
    | Between_c4 n_v1530 __v1531 pf_v1532 ⇒
      let __v1533 = (get_at_i66 ??607 n_v1530 words_v1527 pf_v1532) in
      match __v1533 as __v1534 in ??608 with
      | ⟨w_v1535, {__v1536}⟩ ⇒ return w_v1535
      end
    end

program server_loop_i68 :
  ∀ (ans_v1537 : word_d8) →
    ∀ (repeat_v1538 : nat) →
      (loop_ch_i58 ans_v1537 repeat_v1538) → IO unit‹U›
=
  fn (ans_v1540 : word_d8) (repeat_v1541 : nat)
     (c_v1542 : (loop_ch_i58 ans_v1540 repeat_v1541)) ⇒
    (match repeat_v1541 as repeat0_v1543 in
       (loop_ch_i58 ans_v1540 repeat0_v1543) → IO unit‹U› with
     | O ⇒
       fn (c_v1545 : ??616) ⇒
         let c_v1546 ⇐ (send c_v1545 ans_v1540) in
         let c_v1547 ⇐ (send c_v1546 refl ??617) in close c_v1547
     | S repeat_v1548 ⇒
       fn (c_v1549 : ??609) ⇒
         let __v1550 ⇐ recv c_v1549 in
         match __v1550 as __v1551 in ??615 with
         | ⟨guess_v1552, c_v1553⟩ ⇒
           let b_v1554 = (eqw_i55 ans_v1540 guess_v1552) in
           let c_v1555 ⇐ (send c_v1553 b_v1554) in
           let c_v1556 ⇐ (send c_v1555 refl ??610) in
           (match b_v1554 as b0_v1557 in
              ch⟨match b0_v1557 as __v1559 in ??611 with
                   | true ⇒ end
                   | false ⇒
                     ⇑(df_v1560 : word_d8) ⇒
                       ⇑{__v1561 :
                         (wdiff_d9 ans_v1540 guess_v1552 df_v1560)} ⇒
                         (wordle_loop_i56 ans_v1540 repeat_v1548)
                   end⟩ ⊸
                IO unit‹U› with
            | true ⇒ ln (c_v1562 : ??614) ⇒ close c_v1562
            | false ⇒
              ln (c_v1563 : ??612) ⇒
                let __v1564 = (word_diff_i54 ans_v1540 guess_v1552) in
                match __v1564 as __v1565 in ??613 with
                | ⟨df_v1566, {pf_v1567}⟩ ⇒
                  let c_v1568 ⇐ (send c_v1563 df_v1566) in
                  let c_v1569 ⇐ (send c_v1568 pf_v1567) in
                  (server_loop_i68 ans_v1540 repeat_v1548 c_v1569)
                end
            end c_v1556)
         end
     end c_v1542)

program server_i69 : wordle_ch_i60 → IO unit‹U› =
  fn (c_v1571 : wordle_ch_i60) ⇒
    let repeat_v1572 = 6 in
    let ans_v1573 ⇐ (rand_word_i67 ()) in
    let c_v1574 ⇐ (send c_v1571 ans_v1573) in
    let c_v1575 ⇐ (send c_v1574 repeat_v1572) in
    (server_loop_i68 ans_v1573 repeat_v1572 c_v1575)

program main_i70 : IO unit‹U› =
  let c_v1576 ⇐ fork (c_v1577 : wordle_ch_i60) in (server_i69 c_v1577) in
  let c0_v1578 ⇐
    fork (c0_v1579 :
      ch⟨⇓(__v1580 : wordle_hc_i61) ⇒
             ⇑(__v1581 : unit‹U›) ⇒ end⟩)
    in
      let __v1582 ⇐ recv c0_v1579 in
      match __v1582 as __v1583 in ??618 with
      | ⟨c_v1584, c0_v1585⟩ ⇒
        let __v1586 ⇐ (player_i64 c_v1584) in
        let c0_v1587 ⇐ (send c0_v1585 ()) in close c0_v1587
      end
  in
  let c0_v1588 ⇐ (send c0_v1578 c_v1576) in
  let __v1589 ⇐ recv c0_v1588 in
  match __v1589 as __v1590 in ??619 with
  | ⟨__v1591, c0_v1592⟩ ⇒ close c0_v1592
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v400383 : bool) (b2_v400384 : bool) ⇒
    match b1_v400383 as __v400385 in bool with
    | true ⇒ b2_v400384 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v400388 : bool) (b2_v400389 : bool) ⇒
    match b1_v400388 as __v400390 in bool with
    | true ⇒ true | false ⇒ b2_v400389
    end

program notb_i3 : bool → bool =
  fn (b_v400392 : bool) ⇒
    match b_v400392 as __v400393 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v400396 : bool) (b2_v400397 : bool) ⇒
    match b1_v400396 as __v400398 in order_d1 with
    | true ⇒
      match b2_v400397 as __v400399 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v400397 as __v400400 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v400403 : nat) (y_v400404 : nat) ⇒
    match x_v400403 as __v400405 in bool with
    | O ⇒ true
    | S x_v400406 ⇒
      match y_v400404 as __v400407 in bool with
      | O ⇒ false | S y_v400408 ⇒ (lten_i5 x_v400406 y_v400408)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v400411 : nat) (y_v400412 : nat) ⇒ (lten_i5 x_v400411.+1 y_v400412)

program gten_i7 : nat → nat → bool =
  fn (x_v400415 : nat) (y_v400416 : nat) ⇒ (lten_i5 y_v400416 x_v400415)

program gtn_i8 : nat → nat → bool =
  fn (x_v400419 : nat) (y_v400420 : nat) ⇒ (ltn_i6 y_v400420 x_v400419)

program eqn_i9 : nat → nat → bool =
  fn (x_v400423 : nat) (y_v400424 : nat) ⇒
    match x_v400423 as __v400425 in bool with
    | O ⇒
      match y_v400424 as __v400426 in bool with
      | O ⇒ true | S __v400427 ⇒ false
      end
    | S x_v400428 ⇒
      match y_v400424 as __v400429 in bool with
      | O ⇒ false | S y_v400430 ⇒ (eqn_i9 x_v400428 y_v400430)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v400433 : nat) (n2_v400434 : nat) ⇒
    match n1_v400433 as __v400435 in order_d1 with
    | O ⇒
      match n2_v400434 as __v400436 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v400437 ⇒ LT_c1‹›
      end
    | S n1_v400438 ⇒
      match n2_v400434 as __v400439 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v400440 ⇒ (comparen_i10 n1_v400438 n2_v400440)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v400442 : nat) ⇒
    match x_v400442 as __v400443 in nat with
    | O ⇒ 0 | S x_v400444 ⇒ x_v400444
    end

program addn_i12 : nat → nat → nat =
  fn (x_v400447 : nat) (y_v400448 : nat) ⇒
    match x_v400447 as __v400449 in nat with
    | O ⇒ y_v400448 | S x_v400450 ⇒ (addn_i12 x_v400450 y_v400448).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v400453 : nat) (y_v400454 : nat) ⇒
    match y_v400454 as __v400455 in nat with
    | O ⇒ x_v400453
    | S y_v400456 ⇒ (subn_i13 (pred_i11 x_v400453) y_v400456)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v400459 : nat) (y_v400460 : nat) ⇒
    match x_v400459 as __v400461 in nat with
    | O ⇒ 0
    | S x_v400462 ⇒ (addn_i12 y_v400460 (muln_i14 x_v400462 y_v400460))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v400465 : nat) (y_v400466 : nat) ⇒
    match (ltn_i6 x_v400465 y_v400466) as __v400467 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v400465 y_v400466) y_v400466).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v400470 : nat) (y_v400471 : nat) ⇒
    (subn_i13 x_v400470 (muln_i14 (divn_i15 x_v400470 y_v400471) y_v400471))

inductive between_d2 (lower_v400472 : nat) (upper_v400473 : nat) : L =
| Between_c4 of
    (lower_v400474 : nat) (upper_v400475 : nat) (n_v400476 : nat)
    {pf1_v400477 : (lten_i5 lower_v400474 n_v400476) ≡ true}
    {pf2_v400478 : (lten_i5 n_v400476 upper_v400475) ≡ true}
    : (between_d2 lower_v400474 upper_v400475)

inductive char_d3 : U =
| Char_c5 of (n_v400479 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v400482 : char_d3) (c2_v400483 : char_d3) ⇒
    match c1_v400482 as __v400484 in bool with
    | Char_c5 n1_v400485 ⇒
      match c2_v400483 as __v400486 in bool with
      | Char_c5 n2_v400487 ⇒ (eqn_i9 n1_v400485 n2_v400487)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v400490 : char_d3) (c2_v400491 : char_d3) ⇒
    match c1_v400490 as __v400492 in order_d1 with
    | Char_c5 n1_v400493 ⇒
      match c2_v400491 as __v400494 in order_d1 with
      | Char_c5 n2_v400495 ⇒ (comparen_i10 n1_v400493 n2_v400495)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v400496 : char_d3) (s_v400497 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v400500 : string_d4) (s2_v400501 : string_d4) ⇒
    match s1_v400500 as __v400502 in string_d4 with
    | EmptyString_c6  ⇒ s2_v400501
    | String_c7 c_v400503 s1_v400504 ⇒
      (String_c7‹› c_v400503 (cats_i19 s1_v400504 s2_v400501))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v400506 : string_d4) ⇒
    match s_v400506 as __v400507 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v400508 s_v400509 ⇒ (strlen_i20 s_v400509).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v400512 : string_d4) (s2_v400513 : string_d4) ⇒
    match s1_v400512 as __v400514 in bool with
    | EmptyString_c6  ⇒
      match s2_v400513 as __v400515 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v400516 __v400517 ⇒ false
      end
    | String_c7 c1_v400518 s1_v400519 ⇒
      match s2_v400513 as __v400520 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v400521 s2_v400522 ⇒
        (andb_i1
          (eqc_i17 c1_v400518 c2_v400521) (eqs_i21 s1_v400519 s2_v400522))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v400525 : string_d4) (s2_v400526 : string_d4) ⇒
    match s1_v400525 as __v400527 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v400526 as __v400528 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v400529 __v400530 ⇒ LT_c1‹›
      end
    | String_c7 c1_v400531 s1_v400532 ⇒
      match s2_v400526 as __v400533 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v400534 s2_v400535 ⇒
        match (comparec_i18 c1_v400531 c2_v400534) as __v400536 in
          order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v400532 s2_v400535)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s400537, t_s400538›
  (A_v400539 : Type‹s_s400537›) : Type‹t_s400538›
=
| None_c8 of
    ‹s_s400540, t_s400541› (A_v400542 : Type‹s_s400540›)
    : (option_d5‹s_s400540, t_s400541› A_v400542)
| Some_c9 of
    ‹s_s400543, t_s400544› (A_v400545 : Type‹s_s400543›)
    (x_v400546 : A_v400545) : (option_d5‹s_s400543, t_s400544› A_v400545)

program and_then_i23 ‹s_s400547, r_s400548, t_s400549› :
  ∀ {A_v400550 : Type‹s_s400547›} →
    ∀ {B_v400551 : Type‹r_s400548›} →
      (option_d5‹s_s400547, t_s400549› A_v400550) →
        A_v400550 → (option_d5‹r_s400548, t_s400549› B_v400551) ⊸
          (option_d5‹r_s400548, t_s400549› B_v400551)
=
  fn {A_v400555 : Type‹s_s400547›} {B_v400556 : Type‹r_s400548›}
     (opt_v400557 : (option_d5‹s_s400547, t_s400549› A_v400555)) ⇒
    ln (f_v400558 : A_v400555 →
                      (option_d5‹r_s400548, t_s400549› B_v400556)) ⇒
      match opt_v400557 as __v400560 in
        (option_d5‹r_s400548, t_s400549› B_v400556) with
      | None_c8  ⇒ None_c8‹r_s400548, t_s400549›
      | Some_c9 x_v400561 ⇒ (f_v400558 x_v400561)
      end

inductive list_d6 ‹s_s400562, t_s400563›
  (A_v400564 : Type‹s_s400562›) : Type‹t_s400563›
=
| nil_c10 of
    ‹s_s400565, t_s400566› (A_v400567 : Type‹s_s400565›)
    : (list_d6‹s_s400565, t_s400566› A_v400567)
| cons_c11 of
    ‹s_s400568, t_s400569› (A_v400570 : Type‹s_s400568›)
    (hd_v400571 : A_v400570)
    (tl_v400572 : (list_d6‹s_s400568, t_s400569› A_v400570))
    : (list_d6‹s_s400568, t_s400569› A_v400570)

logical llen_i24 ‹s_s400573, t_s400574› :
  ∀ (A_v400575 : Type‹s_s400573›) →
    (list_d6‹s_s400573, t_s400574› A_v400575) → nat
=
  fn (A_v400577 : Type‹s_s400573›)
     (xs_v400578 : (list_d6‹s_s400573, t_s400574› A_v400577)) ⇒
    match xs_v400578 as __v400579 in nat with
    | nil_c10  ⇒ 0
    | cons_c11 x_v400580 xs_v400581 ⇒
      (llen_i24‹s_s400573, t_s400574› A_v400577 xs_v400581).+1
    end

program len_i25 ‹s_s400582, t_s400583› :
  ∀ {A_v400584 : Type‹s_s400582›} →
    (list_d6‹s_s400582, t_s400583› A_v400584) →
      nat ⊗ (list_d6‹s_s400582, t_s400583› A_v400584)
=
  fn {A_v400587 : Type‹s_s400582›}
     (xs_v400588 : (list_d6‹s_s400582, t_s400583› A_v400587)) ⇒
    match xs_v400588 as __v400589 in
      nat ⊗ (list_d6‹s_s400582, t_s400583› A_v400587) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s400582, t_s400583›⟩
    | cons_c11 x_v400591 xs_v400592 ⇒
      match (len_i25‹s_s400582, t_s400583› A_v400587 xs_v400592) as __v400593 in
        nat ⊗ (list_d6‹s_s400582, t_s400583› A_v400587) with
      | ⟨n_v400595, xs_v400596⟩ ⇒
        ⟨n_v400595.+1, (cons_c11‹s_s400582, t_s400583›
                           x_v400591 xs_v400596)⟩
      end
    end

program append_i26 ‹s_s400597, t_s400598› :
  ∀ {A_v400599 : Type‹s_s400597›} →
    (list_d6‹s_s400597, t_s400598› A_v400599) →
      (list_d6‹s_s400597, t_s400598› A_v400599) ⊸
        (list_d6‹s_s400597, t_s400598› A_v400599)
=
  fn {A_v400602 : Type‹s_s400597›}
     (xs_v400603 : (list_d6‹s_s400597, t_s400598› A_v400602)) ⇒
    ln (ys_v400604 : (list_d6‹s_s400597, t_s400598› A_v400602)) ⇒
      match xs_v400603 as __v400605 in
        (list_d6‹s_s400597, t_s400598› A_v400602) with
      | nil_c10  ⇒ ys_v400604
      | cons_c11 x_v400606 xs_v400607 ⇒
        (cons_c11‹s_s400597, t_s400598›
          x_v400606
          (append_i26‹s_s400597, t_s400598›
            A_v400602 xs_v400607 ys_v400604))
      end

logical stdin_rec_i27 : unit‹U› → proto =
  fn (__v400609 : unit‹U›) ⇒
    ⇑(b_v400610 : bool) ⇒
      match b_v400610 as __v400611 in proto with
      | true ⇒ ⇓(__v400612 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit‹U› → proto =
  fn (__v400614 : unit‹U›) ⇒
    ⇑(b_v400615 : bool) ⇒
      match b_v400615 as __v400616 in proto with
      | true ⇒ ⇑(__v400617 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit‹U› → proto =
  fn (__v400619 : unit‹U›) ⇒
    ⇑(b_v400620 : bool) ⇒
      match b_v400620 as __v400621 in proto with
      | true ⇒ ⇑(__v400622 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit‹U› → IO string_d4 =
  fn (__v400624 : unit‹U›) ⇒
    let ch_v400625 ⇐ open stdin in
    let ch_v400626 ⇐ (send ch_v400625 true) in
    let __v400627 ⇐ recv ch_v400626 in
    match __v400627 as __v400628 in IO string_d4 with
    | ⟨s_v400629, ch_v400630⟩ ⇒
      let ch_v400631 ⇐ (send ch_v400630 false) in
      let __v400632 ⇐ close ch_v400631 in return s_v400629
    end

program print_i34 : string_d4 → IO unit‹U› =
  fn (s_v400634 : string_d4) ⇒
    let ch_v400635 ⇐ open stdout in
    let ch_v400636 ⇐ (send ch_v400635 true) in
    let ch_v400637 ⇐ (send ch_v400636 s_v400634) in
    let ch_v400638 ⇐ (send ch_v400637 false) in close ch_v400638

program prerr_i35 : string_d4 → IO unit‹U› =
  fn (s_v400640 : string_d4) ⇒
    let ch_v400641 ⇐ open stderr in
    let ch_v400642 ⇐ (send ch_v400641 true) in
    let ch_v400643 ⇐ (send ch_v400642 s_v400640) in
    let ch_v400644 ⇐ (send ch_v400643 false) in close ch_v400644

program digits_i36 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i37 :
  ∀ {A_v400645 : U} →
    nat → (list_d6‹U, U› A_v400645) → A_v400645 → A_v400645
=
  fn {A_v400649 : U} (n_v400650 : nat)
     (xs_v400651 : (list_d6‹U, U› A_v400649)) (a_v400652 : A_v400649) ⇒
    match n_v400650 as __v400653 in A_v400649 with
    | O ⇒
      match xs_v400651 as __v400654 in A_v400649 with
      | nil_c10  ⇒ a_v400652 | cons_c11 x_v400655 __v400656 ⇒ x_v400655
      end
    | S n_v400657 ⇒
      match xs_v400651 as __v400658 in A_v400649 with
      | nil_c10  ⇒ a_v400652
      | cons_c11 __v400659 xs_v400660 ⇒
        (get_at_i37 A_v400649 n_v400657 xs_v400660 a_v400652)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v400662 : nat) ⇒
    (get_at_i37 string_d4 n_v400662 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v400664 : nat) ⇒
    let s_v400665 = (string_of_digit_i38 (modn_i16 n_v400664 10)) in
    let n_v400666 = (divn_i15 n_v400664 10) in
    match (ltn_i6 0 n_v400666) as __v400667 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v400666) s_v400665)
    | false ⇒ s_v400665
    end

program digit_of_char_i40 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v400669 : char_d3) ⇒
    match (eqc_i17 c_v400669 '0') as __v400670 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v400669 '1') as __v400671 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v400669 '2') as __v400672 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v400669 '3') as __v400673 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v400669 '4') as __v400674 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v400669 '5') as __v400675 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v400669 '6') as __v400676 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v400669 '7') as __v400677 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v400669 '8') as __v400678 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v400669 '9') as __v400679 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v400682 : string_d4) (acc_v400683 : nat) ⇒
    match s_v400682 as __v400684 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v400683)
    | String_c7 c_v400685 s_v400686 ⇒
      match (digit_of_char_i40 c_v400685) as __v400687 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v400688 ⇒
        (nat_of_string_loop_i41
          s_v400686 (addn_i12 (muln_i14 acc_v400683 10) n_v400688))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v400690 : string_d4) ⇒ (nat_of_string_loop_i41 s_v400690 0)

logical eq_sym_i43 ‹s_s400691› :
  ∀ (A_v400692 : Type‹s_s400691›) →
    ∀ (x_v400693 : A_v400692) →
      ∀ (y_v400694 : A_v400692) →
        x_v400693 ≡ y_v400694 → y_v400694 ≡ x_v400693
=
  fn (A_v400696 : Type‹s_s400691›) (x_v400697 : A_v400696)
     (y_v400698 : A_v400696) (e_v400699 : x_v400697 ≡ y_v400698) ⇒
    rew [y_v400700, __v400701 ⇒ y_v400700 ≡ x_v400697] e_v400699 in
    refl x_v400697

logical eq_trans_i44 ‹s_s400702› :
  ∀ (A_v400703 : Type‹s_s400702›) →
    ∀ (x_v400704 : A_v400703) →
      ∀ (y_v400705 : A_v400703) →
        ∀ (z_v400706 : A_v400703) →
          x_v400704 ≡ y_v400705 →
            y_v400705 ≡ z_v400706 → x_v400704 ≡ z_v400706
=
  fn (A_v400709 : Type‹s_s400702›) (x_v400710 : A_v400709)
     (y_v400711 : A_v400709) (z_v400712 : A_v400709)
     (e1_v400713 : x_v400710 ≡ y_v400711)
     (e2_v400714 : y_v400711 ≡ z_v400712) ⇒
    rew [y0_v400715, __v400716 ⇒ x_v400710 ≡ y0_v400715] e2_v400714 in
    e1_v400713

logical f_equal_i45 ‹s_s400717, t_s400718› :
  ∀ (A_v400719 : Type‹s_s400717›) →
    ∀ (B_v400720 : Type‹t_s400718›) →
      ∀ (f_v400721 : A_v400719 → B_v400720) →
        ∀ (x_v400723 : A_v400719) →
          ∀ (y_v400724 : A_v400719) →
            x_v400723 ≡ y_v400724 →
              (f_v400721 x_v400723) ≡ (f_v400721 y_v400724)
=
  fn (A_v400726 : Type‹s_s400717›) (B_v400727 : Type‹t_s400718›)
     (f_v400728 : A_v400726 → B_v400727) (x_v400729 : A_v400726)
     (y_v400730 : A_v400726) (e_v400731 : x_v400729 ≡ y_v400730) ⇒
    rew [y_v400733, p_v400734 ⇒
      (f_v400728 x_v400729) ≡ (f_v400728 y_v400733)] e_v400731 in
    refl (f_v400728 x_v400729)

logical bool_absurd_i46 : true ≡ false → ⊥ =
  fn (e_v400736 : true ≡ false) ⇒
    rew [x_v400737, __v400738 ⇒
      match x_v400737 as __v400739 in U with
      | true ⇒ unit‹U› | false ⇒ ⊥
      end] e_v400736 in
    ()

logical nat_absurd_i47 : ∀ (n_v400740 : nat) → n_v400740.+1 ≡ 0 → ⊥
=
  fn (n_v400742 : nat) (e_v400743 : n_v400742.+1 ≡ 0) ⇒
    rew [x_v400744, __v400745 ⇒
      match x_v400744 as __v400746 in U with
      | O ⇒ ⊥ | S __v400747 ⇒ unit‹U›
      end] e_v400743 in
    ()

logical nat_inv_i48 :
  ∀ (n1_v400748 : nat) →
    ∀ (n2_v400749 : nat) →
      n1_v400748.+1 ≡ n2_v400749.+1 → n1_v400748 ≡ n2_v400749
=
  fn (n1_v400751 : nat) (n2_v400752 : nat)
     (e_v400753 : n1_v400751.+1 ≡ n2_v400752.+1) ⇒
    (f_equal_i45‹U, U›
      nat nat pred_i11 n1_v400751.+1 n2_v400752.+1 e_v400753)

logical eqn_reflect_i49 :
  ∀ (m_v400754 : nat) →
    ∀ (n_v400755 : nat) →
      (eqn_i9 m_v400754 n_v400755) ≡ true → m_v400754 ≡ n_v400755
=
  fn (m_v400757 : nat) (n_v400758 : nat) ⇒
    match m_v400757 as m0_v400759 in
      (eqn_i9 m0_v400759 n_v400758) ≡ true → m0_v400759 ≡ n_v400758 with
    | O ⇒
      match n_v400758 as n0_v400761 in
        (eqn_i9 0 n0_v400761) ≡ true → 0 ≡ n0_v400761 with
      | O ⇒ fn (__v400763 : (eqn_i9 0 0) ≡ true) ⇒ refl 0
      | S n_v400764 ⇒
        fn (e_v400765 : (eqn_i9 0 n_v400764.+1) ≡ true) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹U›
                     bool (eqn_i9 0 n_v400764.+1) true e_v400765))
      end
    | S m_v400766 ⇒
      match n_v400758 as n0_v400767 in
        (eqn_i9 m_v400766.+1 n0_v400767) ≡ true →
          m_v400766.+1 ≡ n0_v400767 with
      | O ⇒
        fn (e_v400769 : (eqn_i9 m_v400766.+1 0) ≡ true) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹U›
                     bool (eqn_i9 m_v400766.+1 0) true e_v400769))
      | S n_v400770 ⇒
        fn (e_v400771 : (eqn_i9 m_v400766.+1 n_v400770.+1) ≡ true) ⇒
          (f_equal_i45‹U, U›
            nat nat fn (x_v400772 : nat) ⇒ x_v400772.+1 m_v400766 n_v400770
            (eqn_reflect_i49 m_v400766 n_v400770 e_v400771))
      end
    end

logical eqc_reflect_i50 :
  ∀ (c1_v400773 : char_d3) →
    ∀ (c2_v400774 : char_d3) →
      (eqc_i17 c1_v400773 c2_v400774) ≡ true → c1_v400773 ≡ c2_v400774
=
  fn (c1_v400776 : char_d3) (c2_v400777 : char_d3) ⇒
    match c1_v400776 as c0_v400778 in
      (eqc_i17 c0_v400778 c2_v400777) ≡ true → c0_v400778 ≡ c2_v400777 with
    | Char_c5 m_v400780 ⇒
      match c2_v400777 as c0_v400781 in
        (eqc_i17 (Char_c5‹› m_v400780) c0_v400781) ≡ true →
          (Char_c5‹› m_v400780) ≡ c0_v400781 with
      | Char_c5 n_v400783 ⇒
        fn (e_v400784 : (eqc_i17
                          (Char_c5‹› m_v400780) (Char_c5‹› n_v400783)) ≡
                          true) ⇒
          let e_v400785 = (eqn_reflect_i49 m_v400780 n_v400783 e_v400784) in
          (f_equal_i45‹U, U›
            nat char_d3 fn (x_v400786 : nat) ⇒ (Char_c5‹› x_v400786)
            m_v400780 n_v400783 e_v400785)
      end
    end

program contains_i51 : char_d3 → string_d4 → bool =
  fn (c_v400789 : char_d3) (s_v400790 : string_d4) ⇒
    match s_v400790 as __v400791 in bool with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v400792 s_v400793 ⇒
      match (eqc_i17 c_v400789 c0_v400792) as __v400794 in bool with
      | true ⇒ true | false ⇒ (contains_i51 c_v400789 s_v400793)
      end
    end

inductive diff_d7
  (ans_v400795 : string_d4) (a_v400796 : string_d4) (b_v400797 : string_d4) (df_v400798 : string_d4) : U
=
| diff_EmptyString_c12 of
    (ans_v400799 : string_d4) (a_v400800 : string_d4) (b_v400801 : string_d4)
    (df_v400802 : string_d4) (__v400803 : a_v400800 ≡ EmptyString_c6‹›)
    (__v400804 : b_v400801 ≡ EmptyString_c6‹›)
    (__v400805 : df_v400802 ≡ EmptyString_c6‹›)
    : (diff_d7 ans_v400799 a_v400800 b_v400801 df_v400802)
| diff_StringY_c13 of
    (ans_v400806 : string_d4) (a_v400807 : string_d4) (b_v400808 : string_d4)
    (df_v400809 : string_d4) (c_v400810 : char_d3) (s1_v400811 : string_d4)
    (s2_v400812 : string_d4) (s3_v400813 : string_d4)
    (__v400814 : (diff_d7 ans_v400806 s1_v400811 s2_v400812 s3_v400813))
    (__v400815 : a_v400807 ≡ (String_c7‹› c_v400810 s1_v400811))
    (__v400816 : b_v400808 ≡ (String_c7‹› c_v400810 s2_v400812))
    (__v400817 : df_v400809 ≡ (cats_i19 "Y" s3_v400813))
    : (diff_d7 ans_v400806 a_v400807 b_v400808 df_v400809)
| diff_StringI_c14 of
    (ans_v400818 : string_d4) (a_v400819 : string_d4) (b_v400820 : string_d4)
    (df_v400821 : string_d4) (c1_v400822 : char_d3) (c2_v400823 : char_d3)
    (s1_v400824 : string_d4) (s2_v400825 : string_d4)
    (s3_v400826 : string_d4)
    (__v400827 : (eqc_i17 c1_v400822 c2_v400823) ≡ false)
    (__v400828 : (contains_i51 c2_v400823 ans_v400818) ≡ true)
    (__v400829 : (diff_d7 ans_v400818 s1_v400824 s2_v400825 s3_v400826))
    (__v400830 : a_v400819 ≡ (String_c7‹› c1_v400822 s1_v400824))
    (__v400831 : b_v400820 ≡ (String_c7‹› c2_v400823 s2_v400825))
    (__v400832 : df_v400821 ≡ (cats_i19 "I" s3_v400826))
    : (diff_d7 ans_v400818 a_v400819 b_v400820 df_v400821)
| diff_StringN_c15 of
    (ans_v400833 : string_d4) (a_v400834 : string_d4) (b_v400835 : string_d4)
    (df_v400836 : string_d4) (c1_v400837 : char_d3) (c2_v400838 : char_d3)
    (s1_v400839 : string_d4) (s2_v400840 : string_d4)
    (s3_v400841 : string_d4)
    (__v400842 : (eqc_i17 c1_v400837 c2_v400838) ≡ false)
    (__v400843 : (contains_i51 c2_v400838 ans_v400833) ≡ false)
    (__v400844 : (diff_d7 ans_v400833 s1_v400839 s2_v400840 s3_v400841))
    (__v400845 : a_v400834 ≡ (String_c7‹› c1_v400837 s1_v400839))
    (__v400846 : b_v400835 ≡ (String_c7‹› c2_v400838 s2_v400840))
    (__v400847 : df_v400836 ≡ (cats_i19 "N" s3_v400841))
    : (diff_d7 ans_v400833 a_v400834 b_v400835 df_v400836)

program string_diff_i52 :
  ∀ (ans_v400848 : string_d4) →
    ∀ (s1_v400849 : string_d4) →
      ∀ (s2_v400850 : string_d4) →
        {(strlen_i20 s1_v400849) ≡ (strlen_i20 s2_v400850)} →
          ∃ (df_v400852 : string_d4) ⊗
            {(diff_d7 ans_v400848 s1_v400849 s2_v400850 df_v400852)}
=
  fn (ans_v400853 : string_d4) (s1_v400854 : string_d4)
     (s2_v400855 : string_d4) ⇒
    match s1_v400854 as s0_v400856 in
      {(strlen_i20 s0_v400856) ≡ (strlen_i20 s2_v400855)} →
        ∃ (df_v400858 : string_d4) ⊗
          {(diff_d7 ans_v400853 s0_v400856 s2_v400855 df_v400858)} with
    | EmptyString_c6  ⇒
      match s2_v400855 as s0_v400859 in
        {0 ≡ (strlen_i20 s0_v400859)} →
          ∃ (df_v400861 : string_d4) ⊗
            {(diff_d7 ans_v400853 EmptyString_c6‹› s0_v400859 df_v400861)} with
      | EmptyString_c6  ⇒
        fn {e_v400862 : 0 ≡ (strlen_i20 EmptyString_c6‹›)} ⇒
          ⟨EmptyString_c6‹›, {(diff_EmptyString_c12‹›
                                      refl EmptyString_c6‹›
                                      refl EmptyString_c6‹›
                                      refl EmptyString_c6‹›)}⟩
      | String_c7 c2_v400863 s2_v400864 ⇒
        fn {e_v400865 : 0 ≡
                          (strlen_i20
                            (String_c7‹› c2_v400863 s2_v400864))} ⇒
          rew [x_v400866, __v400867 ⇒
            match x_v400866 as __v400868 in L with
            | O ⇒ unit‹L›
            | S __v400869 ⇒
              ∃ (df_v400870 : string_d4) ⊗
                {(diff_d7
                   ans_v400853 EmptyString_c6‹›
                   (String_c7‹› c2_v400863 s2_v400864) df_v400870)}
            end] e_v400865 in
          ⟨⟩
      end
    | String_c7 c1_v400871 s1_v400872 ⇒
      match s2_v400855 as s0_v400873 in
        {(strlen_i20 s1_v400872).+1 ≡ (strlen_i20 s0_v400873)} →
          ∃ (df_v400875 : string_d4) ⊗
            {(diff_d7
               ans_v400853 (String_c7‹› c1_v400871 s1_v400872) s0_v400873
               df_v400875)} with
      | EmptyString_c6  ⇒
        fn {e_v400876 : (strlen_i20 s1_v400872).+1 ≡
                          (strlen_i20 EmptyString_c6‹›)} ⇒
          rew [x_v400877, __v400878 ⇒
            match x_v400877 as __v400879 in L with
            | O ⇒
              ∃ (df_v400880 : string_d4) ⊗
                {(diff_d7
                   ans_v400853 (String_c7‹› c1_v400871 s1_v400872)
                   EmptyString_c6‹› df_v400880)}
            | S __v400881 ⇒ unit‹L›
            end] e_v400876 in
          ⟨⟩
      | String_c7 c2_v400882 s2_v400883 ⇒
        fn {e_v400884 : (strlen_i20 s1_v400872).+1 ≡
                          (strlen_i20
                            (String_c7‹› c2_v400882 s2_v400883))} ⇒
          let {e_v400885} =
            (nat_inv_i48
              (strlen_i20 s1_v400872)
              match s2_v400883 as __v400886 in nat with
              | EmptyString_c6  ⇒ 0
              | String_c7 __v400887 s_v400888 ⇒ (strlen_i20 s_v400888).+1
              end e_v400884)
          in
          let __v400889 =
            (string_diff_i52 ans_v400853 s1_v400872 s2_v400883 e_v400885)
          in
          match __v400889 as __v400890 in
            ∃ (df_v400891 : string_d4) ⊗
              {(diff_d7
                 ans_v400853 (String_c7‹› c1_v400871 s1_v400872)
                 (String_c7‹› c2_v400882 s2_v400883) df_v400891)} with
          | ⟨df_v400892, {pf_v400893}⟩ ⇒
            (match (eqc_i17 c1_v400871 c2_v400882) as b0_v400894 in
               {(eqc_i17 c1_v400871 c2_v400882) ≡ b0_v400894} →
                 ∃ (df_v400896 : string_d4) ⊗
                   {(diff_d7
                      ans_v400853 (String_c7‹› c1_v400871 s1_v400872)
                      (String_c7‹› c2_v400882 s2_v400883) df_v400896)} with
             | true ⇒
               fn {e1_v400897 : (eqc_i17 c1_v400871 c2_v400882) ≡ true} ⇒
                 let {e1_v400898} =
                   (eqc_reflect_i50 c1_v400871 c2_v400882 e1_v400897)
                 in
                 let {h_v400899} =
                   rew [c_v400900, __v400901 ⇒
                     (String_c7‹› c_v400900 s2_v400883) ≡
                       (String_c7‹› c1_v400871 s2_v400883)]
                     e1_v400898 in
                   refl (String_c7‹› c1_v400871 s2_v400883)
                 in
                 ⟨(cats_i19 "Y" df_v400892), {(diff_StringY_c13‹›
                                                  c1_v400871 s1_v400872
                                                  s2_v400883 df_v400892
                                                  pf_v400893
                                                  refl (String_c7‹›
                                                         c1_v400871
                                                         s1_v400872)
                                                  h_v400899
                                                  refl (cats_i19
                                                         "Y" df_v400892))}⟩
             | false ⇒
               fn {e1_v400902 : (eqc_i17 c1_v400871 c2_v400882) ≡ false} ⇒
                 (match (contains_i51 c2_v400882 ans_v400853) as b0_v400903 in
                    {(contains_i51 c2_v400882 ans_v400853) ≡ b0_v400903} →
                      ∃ (df_v400905 : string_d4) ⊗
                        {(diff_d7
                           ans_v400853
                           (String_c7‹› c1_v400871 s1_v400872)
                           (String_c7‹› c2_v400882 s2_v400883) df_v400905)} with
                  | true ⇒
                    fn {e2_v400906 : (contains_i51 c2_v400882 ans_v400853) ≡
                                       true} ⇒
                      ⟨(cats_i19 "I" df_v400892), {(diff_StringI_c14‹›
                                                       c1_v400871 c2_v400882
                                                       s1_v400872 s2_v400883
                                                       df_v400892 e1_v400902
                                                       e2_v400906 pf_v400893
                                                       refl (String_c7‹›
                                                              c1_v400871
                                                              s1_v400872)
                                                       refl (String_c7‹›
                                                              c2_v400882
                                                              s2_v400883)
                                                       refl (cats_i19
                                                              "I" df_v400892))}⟩
                  | false ⇒
                    fn {e2_v400907 : (contains_i51 c2_v400882 ans_v400853) ≡
                                       false} ⇒
                      ⟨(cats_i19 "N" df_v400892), {(diff_StringN_c15‹›
                                                       c1_v400871 c2_v400882
                                                       s1_v400872 s2_v400883
                                                       df_v400892 e1_v400902
                                                       e2_v400907 pf_v400893
                                                       refl (String_c7‹›
                                                              c1_v400871
                                                              s1_v400872)
                                                       refl (String_c7‹›
                                                              c2_v400882
                                                              s2_v400883)
                                                       refl (cats_i19
                                                              "N" df_v400892))}⟩
                  end refl (contains_i51 c2_v400882 ans_v400853))
             end refl (eqc_i17 c1_v400871 c2_v400882))
          end
      end
    end

logical diff_len_i53 :
  ∀ (ans_v400908 : string_d4) →
    ∀ (s1_v400909 : string_d4) →
      ∀ (s2_v400910 : string_d4) →
        ∀ (df_v400911 : string_d4) →
          (diff_d7 ans_v400908 s1_v400909 s2_v400910 df_v400911) →
            (strlen_i20 df_v400911) ≡ (strlen_i20 s1_v400909)
=
  fn (ans_v400913 : string_d4) (s1_v400914 : string_d4)
     (s2_v400915 : string_d4) (df_v400916 : string_d4)
     (h_v400917 : (diff_d7 ans_v400913 s1_v400914 s2_v400915 df_v400916)) ⇒
    match h_v400917 as __v400918 in
      (strlen_i20 df_v400916) ≡ (strlen_i20 s1_v400914) with
    | diff_EmptyString_c12 pf1_v400919 __v400920 pf3_v400921 ⇒
      let pf1_v400922 =
        (eq_sym_i43‹U›
          string_d4 s1_v400914 EmptyString_c6‹› pf1_v400919)
      in
      let pf3_v400923 =
        (eq_sym_i43‹U›
          string_d4 df_v400916 EmptyString_c6‹› pf3_v400921)
      in
      rew [s0_v400924, __v400925 ⇒
        (strlen_i20 df_v400916) ≡ (strlen_i20 s0_v400924)] pf1_v400922 in
      rew [df0_v400926, __v400927 ⇒ (strlen_i20 df0_v400926) ≡ 0]
        pf3_v400923 in
      refl (strlen_i20 EmptyString_c6‹›)
    | diff_StringY_c13 c_v400928 s0_v400929 s3_v400930 s4_v400931 h1_v400932
      pf1_v400933 __v400934 pf3_v400935 ⇒
      let pf1_v400936 =
        (eq_sym_i43‹U›
          string_d4 s1_v400914 (String_c7‹› c_v400928 s0_v400929)
          pf1_v400933)
      in
      let pf3_v400937 =
        (eq_sym_i43‹U›
          string_d4 df_v400916 (cats_i19 "Y" s4_v400931) pf3_v400935)
      in
      rew [s0_v400938, __v400939 ⇒
        (strlen_i20 df_v400916) ≡ (strlen_i20 s0_v400938)] pf1_v400936 in
      rew [df0_v400940, __v400941 ⇒
        (strlen_i20 df0_v400940) ≡
          (strlen_i20 (String_c7‹› c_v400928 s0_v400929))]
        pf3_v400937 in
      rew [n_v400942, __v400943 ⇒
        (strlen_i20 s4_v400931).+1 ≡ n_v400942.+1]
        (diff_len_i53
          ans_v400913 s0_v400929 s3_v400930 s4_v400931 h1_v400932) in
      refl (strlen_i20 s4_v400931).+1
    | diff_StringI_c14 c1_v400944 __v400945 s0_v400946 s3_v400947 s4_v400948
      __v400949 __v400950 h3_v400951 pf1_v400952 __v400953 pf3_v400954 ⇒
      let pf1_v400955 =
        (eq_sym_i43‹U›
          string_d4 s1_v400914 (String_c7‹› c1_v400944 s0_v400946)
          pf1_v400952)
      in
      let pf3_v400956 =
        (eq_sym_i43‹U›
          string_d4 df_v400916 (cats_i19 "I" s4_v400948) pf3_v400954)
      in
      rew [s0_v400957, __v400958 ⇒
        (strlen_i20 df_v400916) ≡ (strlen_i20 s0_v400957)] pf1_v400955 in
      rew [df0_v400959, __v400960 ⇒
        (strlen_i20 df0_v400959) ≡
          (strlen_i20 (String_c7‹› c1_v400944 s0_v400946))]
        pf3_v400956 in
      rew [n_v400961, __v400962 ⇒
        (strlen_i20 s4_v400948).+1 ≡ n_v400961.+1]
        (diff_len_i53
          ans_v400913 s0_v400946 s3_v400947 s4_v400948 h3_v400951) in
      refl (strlen_i20 s4_v400948).+1
    | diff_StringN_c15 c1_v400963 __v400964 s0_v400965 s3_v400966 s4_v400967
      __v400968 __v400969 h3_v400970 pf1_v400971 __v400972 pf3_v400973 ⇒
      let pf1_v400974 =
        (eq_sym_i43‹U›
          string_d4 s1_v400914 (String_c7‹› c1_v400963 s0_v400965)
          pf1_v400971)
      in
      let pf3_v400975 =
        (eq_sym_i43‹U›
          string_d4 df_v400916 (cats_i19 "N" s4_v400967) pf3_v400973)
      in
      rew [s0_v400976, __v400977 ⇒
        (strlen_i20 df_v400916) ≡ (strlen_i20 s0_v400976)] pf1_v400974 in
      rew [df0_v400978, __v400979 ⇒
        (strlen_i20 df0_v400978) ≡
          (strlen_i20 (String_c7‹› c1_v400963 s0_v400965))]
        pf3_v400975 in
      rew [n_v400980, __v400981 ⇒
        (strlen_i20 s4_v400967).+1 ≡ n_v400980.+1]
        (diff_len_i53
          ans_v400913 s0_v400965 s3_v400966 s4_v400967 h3_v400970) in
      refl (strlen_i20 s4_v400967).+1
    end

inductive word_d8 : U =
| Word_c16 of
    (s_v400982 : string_d4) {pf_v400983 : (strlen_i20 s_v400982) ≡ 5}
    : word_d8

inductive wdiff_d9
  (ans_v400984 : word_d8) (guess_v400985 : word_d8) (df_v400986 : word_d8) : U
=
| diff_Word_c17 of
    (ans_v400987 : word_d8) (guess_v400988 : word_d8) (df_v400989 : word_d8)
    (s1_v400990 : string_d4) (s2_v400991 : string_d4)
    (s3_v400992 : string_d4) (pf1_v400993 : (strlen_i20 s1_v400990) ≡ 5)
    (pf2_v400994 : (strlen_i20 s2_v400991) ≡ 5)
    (pf3_v400995 : (strlen_i20 s3_v400992) ≡ 5)
    (__v400996 : ans_v400987 ≡ (Word_c16‹› s1_v400990 pf1_v400993))
    (__v400997 : guess_v400988 ≡ (Word_c16‹› s2_v400991 pf2_v400994))
    (__v400998 : df_v400989 ≡ (Word_c16‹› s3_v400992 pf3_v400995))
    (__v400999 : (diff_d7 s1_v400990 s1_v400990 s2_v400991 s3_v400992))
    : (wdiff_d9 ans_v400987 guess_v400988 df_v400989)

program word_diff_i54 :
  ∀ (ans_v401000 : word_d8) →
    ∀ (guess_v401001 : word_d8) →
      ∃ (df_v401002 : word_d8) ⊗
        {(wdiff_d9 ans_v401000 guess_v401001 df_v401002)}
=
  fn (ans_v401003 : word_d8) (guess_v401004 : word_d8) ⇒
    (match ans_v401003 as ans0_v401005 in
       {ans_v401003 ≡ ans0_v401005} →
         ∃ (df_v401007 : word_d8) ⊗
           {(wdiff_d9 ans_v401003 guess_v401004 df_v401007)} with
     | Word_c16 s1_v401008 pf1_v401009 ⇒
       fn {e1_v401010 : ans_v401003 ≡
                          (Word_c16‹› s1_v401008 pf1_v401009)} ⇒
         (match guess_v401004 as guess0_v401011 in
            {guess_v401004 ≡ guess0_v401011} →
              ∃ (df_v401013 : word_d8) ⊗
                {(wdiff_d9 ans_v401003 guess_v401004 df_v401013)} with
          | Word_c16 s2_v401014 pf2_v401015 ⇒
            fn {e2_v401016 : guess_v401004 ≡
                               (Word_c16‹› s2_v401014 pf2_v401015)} ⇒
              let {e_v401017} =
                (eq_trans_i44‹U›
                  nat (strlen_i20 s1_v401008) 5 (strlen_i20 s2_v401014)
                  pf1_v401009
                  (eq_sym_i43‹U›
                    nat (strlen_i20 s2_v401014) 5 pf2_v401015))
              in
              let __v401018 =
                (string_diff_i52 s1_v401008 s1_v401008 s2_v401014 e_v401017)
              in
              match __v401018 as __v401019 in
                ∃ (df_v401020 : word_d8) ⊗
                  {(wdiff_d9 ans_v401003 guess_v401004 df_v401020)} with
              | ⟨s3_v401021, {h_v401022}⟩ ⇒
                let {e_v401023} =
                  (diff_len_i53
                    s1_v401008 s1_v401008 s2_v401014 s3_v401021 h_v401022)
                in
                let {pf_v401024} =
                  (eq_trans_i44‹U›
                    nat (strlen_i20 s3_v401021) (strlen_i20 s1_v401008) 5
                    e_v401023 pf1_v401009)
                in
                ⟨(Word_c16‹› s3_v401021 pf_v401024), {(diff_Word_c17‹›
                                                              s1_v401008
                                                              s2_v401014
                                                              s3_v401021
                                                              pf1_v401009
                                                              pf2_v401015
                                                              pf_v401024
                                                              e1_v401010
                                                              e2_v401016
                                                              refl (Word_c16‹›
                                                                    s3_v401021
                                                                    pf_v401024)
                                                              h_v401022)}⟩
              end
          end refl guess_v401004)
     end refl ans_v401003)

program eqw_i55 : word_d8 → word_d8 → bool =
  fn (w1_v401027 : word_d8) (w2_v401028 : word_d8) ⇒
    match w1_v401027 as __v401029 in bool with
    | Word_c16 s1_v401030 __v401031 ⇒
      match w2_v401028 as __v401032 in bool with
      | Word_c16 s2_v401033 __v401034 ⇒ (eqs_i21 s1_v401030 s2_v401033)
      end
    end

logical wordle_loop_i56 : word_d8 → nat → proto =
  fn (ans_v401037 : word_d8) (repeat_v401038 : nat) ⇒
    match repeat_v401038 as __v401039 in proto with
    | O ⇒
      ⇑(w_v401040 : word_d8) ⇒
        ⇑{__v401041 : w_v401040 ≡ ans_v401037} ⇒ end
    | S repeat_v401042 ⇒
      ⇓(guess_v401043 : word_d8) ⇒
        ⇑(b_v401044 : bool) ⇒
          ⇑{__v401045 :
            b_v401044 ≡ (eqw_i55 ans_v401037 guess_v401043)} ⇒
            match b_v401044 as __v401046 in proto with
            | true ⇒ end
            | false ⇒
              ⇑(df_v401047 : word_d8) ⇒
                ⇑{__v401048 :
                  (wdiff_d9 ans_v401037 guess_v401043 df_v401047)} ⇒
                  (wordle_loop_i56 ans_v401037 repeat_v401042)
            end
    end

logical wordle_i57 : proto =
  ⇑{ans_v401049 : word_d8} ⇒
    ⇑(repeat_v401050 : nat) ⇒
      (wordle_loop_i56 ans_v401049 repeat_v401050)

logical loop_ch_i58 : word_d8 → nat → L =
  fn (ans_v401053 : word_d8) (repeat_v401054 : nat) ⇒
    ch⟨(wordle_loop_i56 ans_v401053 repeat_v401054)⟩

logical loop_hc_i59 : word_d8 → nat → L =
  fn (ans_v401057 : word_d8) (repeat_v401058 : nat) ⇒
    hc⟨(wordle_loop_i56 ans_v401057 repeat_v401058)⟩

logical wordle_ch_i60 : L = ch⟨wordle_i57⟩

logical wordle_hc_i61 : L = hc⟨wordle_i57⟩

program read_word_i62 : unit‹U› → IO word_d8 =
  fn (__v401060 : unit‹U›) ⇒
    let s_v401061 ⇐ (readline_i33 ()) in
    (match (eqn_i9 (strlen_i20 s_v401061) 5) as b0_v401062 in
       {(eqn_i9 (strlen_i20 s_v401061) 5) ≡ b0_v401062} → IO word_d8 with
     | true ⇒
       fn {e_v401064 : (eqn_i9 (strlen_i20 s_v401061) 5) ≡ true} ⇒
         return (Word_c16‹›
                  s_v401061
                  (eqn_reflect_i49 (strlen_i20 s_v401061) 5 e_v401064))
     | false ⇒
       fn {__v401065 : (eqn_i9 (strlen_i20 s_v401061) 5) ≡ false} ⇒
         let __v401066 ⇐
           (print_i34 "please input a word with length of 5\n")
         in (read_word_i62 ())
     end refl (eqn_i9 (strlen_i20 s_v401061) 5))

program player_loop_i63 :
  ∀ {ans_v401067 : word_d8} →
    ∀ (repeat_v401068 : nat) →
      (loop_hc_i59 ans_v401067 repeat_v401068) → IO unit‹U›
=
  fn {ans_v401070 : word_d8} (repeat_v401071 : nat)
     (c_v401072 : (loop_hc_i59 ans_v401070 repeat_v401071)) ⇒
    (match repeat_v401071 as repeat0_v401073 in
       (loop_hc_i59 ans_v401070 repeat0_v401073) → IO unit‹U› with
     | O ⇒
       fn (c_v401075 : (loop_hc_i59 ans_v401070 0)) ⇒
         let __v401076 ⇐ recv c_v401075 in
         match __v401076 as __v401077 in IO unit‹U› with
         | ⟨ans_v401078, c_v401079⟩ ⇒
           let __v401080 ⇐ recv c_v401079 in
           match __v401080 as __v401081 in IO unit‹U› with
           | ⟨{pf_v401082}, c_v401083⟩ ⇒
             match ans_v401078 as __v401084 in IO unit‹U› with
             | Word_c16 s_v401085 __v401086 ⇒
               let __v401087 ⇐
                 (print_i34
                   (cats_i19
                     (cats_i19 "You Lose! The answer is " s_v401085) ".\n"))
               in close c_v401083
             end
           end
         end
     | S repeat_v401088 ⇒
       fn (c_v401089 : (loop_hc_i59 ans_v401070 repeat_v401088.+1)) ⇒
         let guess_v401090 ⇐ (read_word_i62 ()) in
         let c_v401091 ⇐ (send c_v401089 guess_v401090) in
         let __v401092 ⇐ recv c_v401091 in
         match __v401092 as __v401093 in IO unit‹U› with
         | ⟨b_v401094, c_v401095⟩ ⇒
           let __v401096 ⇐ recv c_v401095 in
           match __v401096 as __v401097 in IO unit‹U› with
           | ⟨{pf_v401098}, c_v401099⟩ ⇒
             (match b_v401094 as b0_v401100 in
                hc⟨match b0_v401100 as __v401102 in proto with
                     | true ⇒ end
                     | false ⇒
                       ⇑(df_v401103 : word_d8) ⇒
                         ⇑{__v401104 :
                           (wdiff_d9 ans_v401070 guess_v401090 df_v401103)} ⇒
                           (wordle_loop_i56 ans_v401070 repeat_v401088)
                     end⟩ ⊸
                  IO unit‹U› with
              | true ⇒
                ln (c_v401105 : hc⟨end⟩) ⇒
                  let __v401106 ⇐ (print_i34 "You Win!\n") in
                  close c_v401105
              | false ⇒
                ln (c_v401107 : hc⟨⇑(df_v401108 : word_d8) ⇒
                                       ⇑{__v401109 :
                                         (wdiff_d9
                                           ans_v401070 guess_v401090
                                           df_v401108)} ⇒
                                         (wordle_loop_i56
                                           ans_v401070 repeat_v401088)⟩) ⇒
                  let __v401110 ⇐ recv c_v401107 in
                  match __v401110 as __v401111 in IO unit‹U› with
                  | ⟨diff_v401112, c_v401113⟩ ⇒
                    let __v401114 ⇐ recv c_v401113 in
                    match __v401114 as __v401115 in IO unit‹U› with
                    | ⟨{pf_v401116}, c_v401117⟩ ⇒
                      match diff_v401112 as __v401118 in IO unit‹U› with
                      | Word_c16 s_v401119 __v401120 ⇒
                        let __v401121 ⇐
                          (print_i34
                            (cats_i19
                              (cats_i19
                                (cats_i19
                                  (cats_i19 "Incorrect, hint: " s_v401119)
                                  ". You have ")
                                (string_of_nat_i39 repeat_v401088))
                              " more tries.\n"))
                        in
                        (player_loop_i63
                          ans_v401070 repeat_v401088 c_v401117)
                      end
                    end
                  end
              end c_v401099)
           end
         end
     end c_v401072)

program player_i64 : wordle_hc_i61 → IO unit‹U› =
  fn (c_v401123 : wordle_hc_i61) ⇒
    let __v401124 ⇐ recv c_v401123 in
    match __v401124 as __v401125 in IO unit‹U› with
    | ⟨{ans_v401126}, c_v401127⟩ ⇒
      let __v401128 ⇐ recv c_v401127 in
      match __v401128 as __v401129 in IO unit‹U› with
      | ⟨repeat_v401130, c_v401131⟩ ⇒
        let __v401132 ⇐ (print_i34 "Wordle Game\n") in
        let __v401133 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v401134 ⇐
          (print_i34
            (cats_i19
              (cats_i19 "You have " (string_of_nat_i39 repeat_v401130))
              " tries.\n"))
        in (player_loop_i63 ans_v401126 repeat_v401130 c_v401131)
      end
    end

inductive at_d10
  (A_v401135 : U) (x_v401136 : A_v401135) (n_v401137 : nat) (xs_v401138 : 
(list_d6‹U, U› A_v401135)) : U =
| at_O_c18 of
    (A_v401139 : U) (x_v401140 : A_v401139) (n_v401141 : nat)
    (xs_v401142 : (list_d6‹U, U› A_v401139))
    (xs0_v401143 : (list_d6‹U, U› A_v401139))
    (__v401144 : n_v401141 ≡ 0)
    (__v401145 : xs_v401142 ≡ (cons_c11‹U, U› x_v401140 xs0_v401143))
    : (at_d10 A_v401139 x_v401140 n_v401141 xs_v401142)
| at_S_c19 of
    (A_v401146 : U) (x_v401147 : A_v401146) (n_v401148 : nat)
    (xs_v401149 : (list_d6‹U, U› A_v401146)) (n0_v401150 : nat)
    (x0_v401151 : A_v401146) (xs0_v401152 : (list_d6‹U, U› A_v401146))
    (h_v401153 : (at_d10 A_v401146 x_v401147 n0_v401150 xs0_v401152))
    (__v401154 : n_v401148 ≡ n0_v401150.+1)
    (__v401155 : xs_v401149 ≡ (cons_c11‹U, U› x0_v401151 xs0_v401152))
    : (at_d10 A_v401146 x_v401147 n_v401148 xs_v401149)

logical ltn_inv_i65 :
  ∀ (m_v401156 : nat) →
    ∀ (n_v401157 : nat) →
      (ltn_i6 m_v401156.+1 n_v401157.+1) ≡ true →
        (ltn_i6 m_v401156 n_v401157) ≡ true
=
  fn (m_v401159 : nat) (n_v401160 : nat)
     (h_v401161 : (ltn_i6 m_v401159.+1 n_v401160.+1) ≡ true) ⇒
    h_v401161

program get_at_i66 :
  ∀ {A_v401162 : U} →
    ∀ (n_v401163 : nat) →
      ∀ (xs_v401164 : (list_d6‹U, U› A_v401162)) →
        {(ltn_i6 n_v401163 (llen_i24‹U, U› A_v401162 xs_v401164)) ≡
           true} →
          ∃ (x_v401166 : A_v401162) ⊗
            {(at_d10 A_v401162 x_v401166 n_v401163 xs_v401164)}
=
  fn {A_v401167 : U} (n_v401168 : nat)
     (xs_v401169 : (list_d6‹U, U› A_v401167)) ⇒
    match xs_v401169 as xs0_v401170 in
      {(ltn_i6 n_v401168 (llen_i24‹U, U› A_v401167 xs0_v401170)) ≡ true} →
        ∃ (x_v401172 : A_v401167) ⊗
          {(at_d10 A_v401167 x_v401172 n_v401168 xs0_v401170)} with
    | nil_c10  ⇒
      fn {e_v401173 : (ltn_i6
                        n_v401168
                        (llen_i24‹U, U› A_v401167 nil_c10‹U, U›)) ≡
                        true} ⇒
        rew [b_v401174, __v401175 ⇒
          match b_v401174 as __v401176 in L with
          | true ⇒
            ∃ (x_v401177 : A_v401167) ⊗
              {(at_d10 A_v401167 x_v401177 n_v401168 nil_c10‹U, U›)}
          | false ⇒ unit‹L›
          end] e_v401173 in
        ⟨⟩
    | cons_c11 x_v401178 xs_v401179 ⇒
      match n_v401168 as n0_v401180 in
        {(ltn_i6 n0_v401180 (llen_i24‹U, U› A_v401167 xs_v401179).+1) ≡
           true} →
          ∃ (x0_v401182 : A_v401167) ⊗
            {(at_d10
               A_v401167 x0_v401182 n0_v401180
               (cons_c11‹U, U› x_v401178 xs_v401179))} with
      | O ⇒
        fn {e_v401183 : (ltn_i6
                          0 (llen_i24‹U, U› A_v401167 xs_v401179).+1) ≡
                          true} ⇒
          ⟨x_v401178, {(at_O_c18‹›
                           xs_v401179 refl 0
                           refl (cons_c11‹U, U› x_v401178 xs_v401179))}⟩
      | S n_v401184 ⇒
        fn {e_v401185 : (ltn_i6
                          n_v401184.+1
                          (llen_i24‹U, U› A_v401167 xs_v401179).+1) ≡
                          true} ⇒
          let __v401186 =
            (get_at_i66
              A_v401167 n_v401184 xs_v401179
              (ltn_inv_i65
                n_v401184 (llen_i24‹U, U› A_v401167 xs_v401179) e_v401185))
          in
          match __v401186 as __v401187 in
            ∃ (x0_v401188 : A_v401167) ⊗
              {(at_d10
                 A_v401167 x0_v401188 n_v401184.+1
                 (cons_c11‹U, U› x_v401178 xs_v401179))} with
          | ⟨x0_v401189, {pf_v401190}⟩ ⇒
            ⟨x0_v401189, {(at_S_c19‹›
                              n_v401184 x_v401178 xs_v401179 pf_v401190
                              refl n_v401184.+1
                              refl (cons_c11‹U, U› x_v401178 xs_v401179))}⟩
          end
      end
    end

program rand_word_i67 : unit‹U› → IO word_d8 =
  fn (__v401192 : unit‹U›) ⇒
    let words_v401193 =
      ((cons_c11‹U, U›
         (Word_c16‹› "route" refl (strlen_i20 "route"))
         (cons_c11‹U, U›
           (Word_c16‹› "crash" refl (strlen_i20 "crash"))
           (cons_c11‹U, U›
             (Word_c16‹› "clown" refl (strlen_i20 "clown"))
             (cons_c11‹U, U›
               (Word_c16‹› "shaky" refl (strlen_i20 "shaky"))
               (cons_c11‹U, U›
                 (Word_c16‹› "vegan" refl (strlen_i20 "vegan"))
                 (cons_c11‹U, U›
                   (Word_c16‹› "power" refl (strlen_i20 "power"))
                   (cons_c11‹U, U›
                     (Word_c16‹› "trust" refl (strlen_i20 "trust"))
                     (cons_c11‹U, U›
                       (Word_c16‹› "enjoy" refl (strlen_i20 "enjoy"))
                       (cons_c11‹U, U›
                         (Word_c16‹› "brain" refl (strlen_i20 "brain"))
                         (cons_c11‹U, U›
                           (Word_c16‹› "adopt" refl (strlen_i20 "adopt"))
                           (cons_c11‹U, U›
                             (Word_c16‹›
                               "tower" refl (strlen_i20 "tower"))
                             (cons_c11‹U, U›
                               (Word_c16‹›
                                 "shade" refl (strlen_i20 "shade"))
                               (cons_c11‹U, U›
                                 (Word_c16‹›
                                   "delay" refl (strlen_i20 "delay"))
                                 (cons_c11‹U, U›
                                   (Word_c16‹›
                                     "twist" refl (strlen_i20 "twist"))
                                   (cons_c11‹U, U›
                                     (Word_c16‹›
                                       "alert" refl (strlen_i20 "alert"))
                                     (cons_c11‹U, U›
                                       (Word_c16‹›
                                         "choke" refl (strlen_i20 "choke"))
                                       (cons_c11‹U, U›
                                         (Word_c16‹›
                                           "split" refl (strlen_i20 "split"))
                                         (cons_c11‹U, U›
                                           (Word_c16‹›
                                             "rhyme"
                                             refl (strlen_i20 "rhyme"))
                                           (cons_c11‹U, U›
                                             (Word_c16‹›
                                               "muddy"
                                               refl (strlen_i20 "muddy"))
                                             (cons_c11‹U, U›
                                               (Word_c16‹›
                                                 "plant"
                                                 refl (strlen_i20 "plant"))
                                               nil_c10‹U, U›))))))))))))))))))))
        : (list_d6‹U, U› word_d8))
    in
    let r_v401194 ⇐ rand 0 19 in
    match r_v401194 as __v401195 in IO word_d8 with
    | Between_c4 n_v401196 __v401197 pf_v401198 ⇒
      let __v401199 = (get_at_i66 word_d8 n_v401196 words_v401193 pf_v401198)
      in
      match __v401199 as __v401200 in IO word_d8 with
      | ⟨w_v401201, {__v401202}⟩ ⇒ return w_v401201
      end
    end

program server_loop_i68 :
  ∀ (ans_v401203 : word_d8) →
    ∀ (repeat_v401204 : nat) →
      (loop_ch_i58 ans_v401203 repeat_v401204) → IO unit‹U›
=
  fn (ans_v401206 : word_d8) (repeat_v401207 : nat)
     (c_v401208 : (loop_ch_i58 ans_v401206 repeat_v401207)) ⇒
    (match repeat_v401207 as repeat0_v401209 in
       (loop_ch_i58 ans_v401206 repeat0_v401209) → IO unit‹U› with
     | O ⇒
       fn (c_v401211 : (loop_ch_i58 ans_v401206 0)) ⇒
         let c_v401212 ⇐ (send c_v401211 ans_v401206) in
         let c_v401213 ⇐ (send c_v401212 refl ans_v401206) in
         close c_v401213
     | S repeat_v401214 ⇒
       fn (c_v401215 : (loop_ch_i58 ans_v401206 repeat_v401214.+1)) ⇒
         let __v401216 ⇐ recv c_v401215 in
         match __v401216 as __v401217 in IO unit‹U› with
         | ⟨guess_v401218, c_v401219⟩ ⇒
           let b_v401220 = (eqw_i55 ans_v401206 guess_v401218) in
           let c_v401221 ⇐ (send c_v401219 b_v401220) in
           let c_v401222 ⇐
             (send c_v401221 refl (eqw_i55 ans_v401206 guess_v401218))
           in
           (match b_v401220 as b0_v401223 in
              ch⟨match b0_v401223 as __v401225 in proto with
                   | true ⇒ end
                   | false ⇒
                     ⇑(df_v401226 : word_d8) ⇒
                       ⇑{__v401227 :
                         (wdiff_d9 ans_v401206 guess_v401218 df_v401226)} ⇒
                         (wordle_loop_i56 ans_v401206 repeat_v401214)
                   end⟩ ⊸
                IO unit‹U› with
            | true ⇒ ln (c_v401228 : ch⟨end⟩) ⇒ close c_v401228
            | false ⇒
              ln (c_v401229 : ch⟨⇑(df_v401230 : word_d8) ⇒
                                     ⇑{__v401231 :
                                       (wdiff_d9
                                         ans_v401206 guess_v401218 df_v401230)} ⇒
                                       (wordle_loop_i56
                                         ans_v401206 repeat_v401214)⟩) ⇒
                let __v401232 = (word_diff_i54 ans_v401206 guess_v401218) in
                match __v401232 as __v401233 in IO unit‹U› with
                | ⟨df_v401234, {pf_v401235}⟩ ⇒
                  let c_v401236 ⇐ (send c_v401229 df_v401234) in
                  let c_v401237 ⇐ (send c_v401236 pf_v401235) in
                  (server_loop_i68 ans_v401206 repeat_v401214 c_v401237)
                end
            end c_v401222)
         end
     end c_v401208)

program server_i69 : wordle_ch_i60 → IO unit‹U› =
  fn (c_v401239 : wordle_ch_i60) ⇒
    let repeat_v401240 = 6 in
    let ans_v401241 ⇐ (rand_word_i67 ()) in
    let c_v401242 ⇐ (send c_v401239 ans_v401241) in
    let c_v401243 ⇐ (send c_v401242 repeat_v401240) in
    (server_loop_i68 ans_v401241 repeat_v401240 c_v401243)

program main_i70 : IO unit‹U› =
  let c_v401244 ⇐
    fork (c_v401245 : wordle_ch_i60) in (server_i69 c_v401245)
  in
  let c0_v401246 ⇐
    fork (c0_v401247 :
      ch⟨⇓(__v401248 : wordle_hc_i61) ⇒
             ⇑(__v401249 : unit‹U›) ⇒ end⟩)
    in
      let __v401250 ⇐ recv c0_v401247 in
      match __v401250 as __v401251 in IO unit‹U› with
      | ⟨c_v401252, c0_v401253⟩ ⇒
        let __v401254 ⇐ (player_i64 c_v401252) in
        let c0_v401255 ⇐ (send c0_v401253 ()) in close c0_v401255
      end
  in
  let c0_v401256 ⇐ (send c0_v401246 c_v401244) in
  let __v401257 ⇐ recv c0_v401256 in
  match __v401257 as __v401258 in IO unit‹U› with
  | ⟨__v401259, c0_v401260⟩ ⇒ close c0_v401260
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v402590 b2_v402591 ⇒
    match b1_v402590 with
    | true ⇒ b2_v402591 | false ⇒ false
    end

def orb_i2 =
  fn b1_v402592 b2_v402593 ⇒
    match b1_v402592 with
    | true ⇒ true | false ⇒ b2_v402593
    end

def notb_i3 =
  fn b_v402594 ⇒ match b_v402594 with
                   | true ⇒ false | false ⇒ true
                   end

def compareb_i4 =
  fn b1_v402595 b2_v402596 ⇒
    match b1_v402595 with
    | true ⇒ match b2_v402596 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v402596 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v402597 y_v402598 ⇒
    match x_v402597 with
    | O ⇒ true
    | S x_v402599 ⇒
      match y_v402598 with
      | O ⇒ false | S y_v402600 ⇒ ((lten_i5 x_v402599) y_v402600)
      end
    end

def ltn_i6 = fn x_v402601 y_v402602 ⇒ ((lten_i5 x_v402601.+1) y_v402602)

def gten_i7 = fn x_v402603 y_v402604 ⇒ ((lten_i5 y_v402604) x_v402603)

def gtn_i8 = fn x_v402605 y_v402606 ⇒ ((ltn_i6 y_v402606) x_v402605)

def eqn_i9 =
  fn x_v402607 y_v402608 ⇒
    match x_v402607 with
    | O ⇒ match y_v402608 with
            | O ⇒ true | S __v402609 ⇒ false
            end
    | S x_v402610 ⇒
      match y_v402608 with
      | O ⇒ false | S y_v402611 ⇒ ((eqn_i9 x_v402610) y_v402611)
      end
    end

def comparen_i10 =
  fn n1_v402612 n2_v402613 ⇒
    match n1_v402612 with
    | O ⇒ match n2_v402613 with
            | O ⇒ EQ_c3 | S __v402614 ⇒ LT_c1
            end
    | S n1_v402615 ⇒
      match n2_v402613 with
      | O ⇒ GT_c2 | S n2_v402616 ⇒ ((comparen_i10 n1_v402615) n2_v402616)
      end
    end

def pred_i11 =
  fn x_v402617 ⇒
    match x_v402617 with
    | O ⇒ 0 | S x_v402618 ⇒ x_v402618
    end

def addn_i12 =
  fn x_v402619 y_v402620 ⇒
    match x_v402619 with
    | O ⇒ y_v402620 | S x_v402621 ⇒ ((addn_i12 x_v402621) y_v402620).+1
    end

def subn_i13 =
  fn x_v402622 y_v402623 ⇒
    match y_v402623 with
    | O ⇒ x_v402622
    | S y_v402624 ⇒ ((subn_i13 (pred_i11 x_v402622)) y_v402624)
    end

def muln_i14 =
  fn x_v402625 y_v402626 ⇒
    match x_v402625 with
    | O ⇒ 0
    | S x_v402627 ⇒ ((addn_i12 y_v402626) ((muln_i14 x_v402627) y_v402626))
    end

def divn_i15 =
  fn x_v402628 y_v402629 ⇒
    match ((ltn_i6 x_v402628) y_v402629) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v402628) y_v402629)) y_v402629).+1
    end

def modn_i16 =
  fn x_v402630 y_v402631 ⇒
    ((subn_i13 x_v402630)
      ((muln_i14 ((divn_i15 x_v402630) y_v402631)) y_v402631))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v402632 c2_v402633 ⇒
    match c1_v402632 with
    | Char_c5 n1_v402634 ⇒
      match c2_v402633 with
      | Char_c5 n2_v402635 ⇒ ((eqn_i9 n1_v402634) n2_v402635)
      end
    end

def comparec_i18 =
  fn c1_v402636 c2_v402637 ⇒
    match c1_v402636 with
    | Char_c5 n1_v402638 ⇒
      match c2_v402637 with
      | Char_c5 n2_v402639 ⇒ ((comparen_i10 n1_v402638) n2_v402639)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v402640 s2_v402641 ⇒
    match s1_v402640 with
    | EmptyString_c6  ⇒ s2_v402641
    | String_c7 c_v402642 s1_v402643 ⇒
      (String_c7 c_v402642 ((cats_i19 s1_v402643) s2_v402641))
    end

def strlen_i20 =
  fn s_v402644 ⇒
    match s_v402644 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v402645 s_v402646 ⇒ (strlen_i20 s_v402646).+1
    end

def eqs_i21 =
  fn s1_v402647 s2_v402648 ⇒
    match s1_v402647 with
    | EmptyString_c6  ⇒
      match s2_v402648 with
      | EmptyString_c6  ⇒ true | String_c7 __v402649 __v402650 ⇒ false
      end
    | String_c7 c1_v402651 s1_v402652 ⇒
      match s2_v402648 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v402653 s2_v402654 ⇒
        ((andb_i1 ((eqc_i17 c1_v402651) c2_v402653))
          ((eqs_i21 s1_v402652) s2_v402654))
      end
    end

def compares_i22 =
  fn s1_v402655 s2_v402656 ⇒
    match s1_v402655 with
    | EmptyString_c6  ⇒
      match s2_v402656 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v402657 __v402658 ⇒ LT_c1
      end
    | String_c7 c1_v402659 s1_v402660 ⇒
      match s2_v402656 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v402661 s2_v402662 ⇒
        match ((comparec_i18 c1_v402659) c2_v402661) with
        | EQ_c3  ⇒ ((compares_i22 s1_v402660) s2_v402662)
        | LT_c1  ⇒ LT_c1 | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d14 =
| NoneUU_c26 of size(0) | SomeUU_c27 of size(1)

data optionUL_d13 =
| NoneUL_c24 of size(0) | SomeUL_c25 of size(1)

data optionLU_d12 =
| NoneLU_c22 of size(0)

data optionLL_d11 =
| NoneLL_c20 of size(0) | SomeLL_c21 of size(1)

def and_thenUUU_i78 =
  fn A_v402663 B_v402664 opt_v402665 ⇒
    ln f_v402666 ⇒
      match opt_v402665 with
      | NoneUU_c26  ⇒ NoneUU_c26
      | SomeUU_c27 x_v402667 ⇒ (f_v402666 x_v402667)
      end

def and_thenUUL_i77 =
  fn A_v402668 B_v402669 opt_v402670 ⇒
    ln f_v402671 ⇒
      match opt_v402670 with
      | NoneUL_c24  ⇒ NoneUL_c24
      | SomeUL_c25 x_v402672 ⇒ (f_v402671 x_v402672)
      end

def and_thenULU_i76 =
  fn A_v402673 B_v402674 opt_v402675 ⇒
    ln f_v402676 ⇒
      match opt_v402675 with
      | NoneUU_c26  ⇒ NoneLU_c22
      | SomeUU_c27 x_v402677 ⇒ (f_v402676 x_v402677)
      end

def and_thenULL_i75 =
  fn A_v402678 B_v402679 opt_v402680 ⇒
    ln f_v402681 ⇒
      match opt_v402680 with
      | NoneUL_c24  ⇒ NoneLL_c20
      | SomeUL_c25 x_v402682 ⇒ (f_v402681 x_v402682)
      end

def and_thenLUL_i73 =
  fn A_v402683 B_v402684 opt_v402685 ⇒
    ln f_v402686 ⇒
      match opt_v402685 with
      | NoneLL_c20  ⇒ NoneUL_c24
      | SomeLL_c21 x_v402687 ⇒ (f_v402686 x_v402687)
      end

def and_thenLLL_i71 =
  fn A_v402688 B_v402689 opt_v402690 ⇒
    ln f_v402691 ⇒
      match opt_v402690 with
      | NoneLL_c20  ⇒ NoneLL_c20
      | SomeLL_c21 x_v402692 ⇒ (f_v402691 x_v402692)
      end

data listUU_d18 =
| nilUU_c34 of size(0) | consUU_c35 of size(2)

data listUL_d17 =
| nilUL_c32 of size(0) | consUL_c33 of size(2)

data listLU_d16 =
| nilLU_c30 of size(0)

data listLL_d15 =
| nilLL_c28 of size(0) | consLL_c29 of size(2)

def lenUU_i86 =
  fn A_v402693 xs_v402694 ⇒
    match xs_v402694 with
    | nilUU_c34  ⇒ (0, nilUU_c34)
    | consUU_c35 x_v402695 xs_v402696 ⇒
      match ((lenUU_i86 NULL) xs_v402696) with
      | (n_v402697, xs_v402698) ⇒
        (n_v402697.+1, (consUU_c35 x_v402695 xs_v402698))
      end
    end

def lenUL_i85 =
  fn A_v402699 xs_v402700 ⇒
    match xs_v402700 with
    | nilUL_c32  ⇒ (0, nilUL_c32)
    | consUL_c33 x_v402701 xs_v402702 ⇒
      match ((lenUL_i85 NULL) xs_v402702) with
      | (n_v402703, xs_v402704) ⇒
        (n_v402703.+1, (consUL_c33 x_v402701 xs_v402704))
      end
    end

def lenLL_i83 =
  fn A_v402705 xs_v402706 ⇒
    match xs_v402706 with
    | nilLL_c28  ⇒ (0, nilLL_c28)
    | consLL_c29 x_v402707 xs_v402708 ⇒
      match ((lenLL_i83 NULL) xs_v402708) with
      | (n_v402709, xs_v402710) ⇒
        (n_v402709.+1, (consLL_c29 x_v402707 xs_v402710))
      end
    end

def appendUU_i90 =
  fn A_v402711 xs_v402712 ⇒
    ln ys_v402713 ⇒
      match xs_v402712 with
      | nilUU_c34  ⇒ ys_v402713
      | consUU_c35 x_v402714 xs_v402715 ⇒
        (consUU_c35 x_v402714 (((appendUU_i90 NULL) xs_v402715) ys_v402713))
      end

def appendUL_i89 =
  fn A_v402716 xs_v402717 ⇒
    ln ys_v402718 ⇒
      match xs_v402717 with
      | nilUL_c32  ⇒ ys_v402718
      | consUL_c33 x_v402719 xs_v402720 ⇒
        (consUL_c33 x_v402719 (((appendUL_i89 NULL) xs_v402720) ys_v402718))
      end

def appendLL_i87 =
  fn A_v402721 xs_v402722 ⇒
    ln ys_v402723 ⇒
      match xs_v402722 with
      | nilLL_c28  ⇒ ys_v402723
      | consLL_c29 x_v402724 xs_v402725 ⇒
        (consLL_c29 x_v402724 (((appendLL_i87 NULL) xs_v402725) ys_v402723))
      end

def readline_i33 =
  fn __v402726 ⇒
    let ch_v402727 ⇐ open stdin in
    let ch_v402728 ⇐ (send ch_v402727 true) in
    let __v402729 ⇐ recv ch_v402728 in
    match __v402729 with
    | (s_v402730, ch_v402731) ⇒
      let ch_v402732 ⇐ (send ch_v402731 false) in
      let __v402733 ⇐ close⇑ ch_v402732 in return s_v402730
    end

def print_i34 =
  fn s_v402734 ⇒
    let ch_v402735 ⇐ open stdout in
    let ch_v402736 ⇐ (send ch_v402735 true) in
    let ch_v402737 ⇐ (send ch_v402736 s_v402734) in
    let ch_v402738 ⇐ (send ch_v402737 false) in close⇑ ch_v402738

def prerr_i35 =
  fn s_v402739 ⇒
    let ch_v402740 ⇐ open stderr in
    let ch_v402741 ⇐ (send ch_v402740 true) in
    let ch_v402742 ⇐ (send ch_v402741 s_v402739) in
    let ch_v402743 ⇐ (send ch_v402742 false) in close⇑ ch_v402743

def digits_i36 =
  (consUU_c35
    "0"
    (consUU_c35
      "1"
      (consUU_c35
        "2"
        (consUU_c35
          "3"
          (consUU_c35
            "4"
            (consUU_c35
              "5"
              (consUU_c35
                "6"
                (consUU_c35 "7" (consUU_c35 "8" (consUU_c35 "9" nilUU_c34))))))))))

def get_at_i37 =
  fn A_v402744 n_v402745 xs_v402746 a_v402747 ⇒
    match n_v402745 with
    | O ⇒
      match xs_v402746 with
      | nilUU_c34  ⇒ a_v402747
      | consUU_c35 x_v402748 __v402749 ⇒ x_v402748
      end
    | S n_v402750 ⇒
      match xs_v402746 with
      | nilUU_c34  ⇒ a_v402747
      | consUU_c35 __v402751 xs_v402752 ⇒
        ((((get_at_i37 NULL) n_v402750) xs_v402752) a_v402747)
      end
    end

def string_of_digit_i38 =
  fn n_v402753 ⇒
    ((((get_at_i37 NULL) n_v402753) digits_i36) EmptyString_c6)

def string_of_nat_i39 =
  fn n_v402754 ⇒
    let s_v402755 = (string_of_digit_i38 ((modn_i16 n_v402754) 10)) in
    let n_v402756 = ((divn_i15 n_v402754) 10) in
    match ((ltn_i6 0) n_v402756) with
    | true ⇒ ((cats_i19 (string_of_nat_i39 n_v402756)) s_v402755)
    | false ⇒ s_v402755
    end

def digit_of_char_i40 =
  fn c_v402757 ⇒
    match ((eqc_i17 c_v402757) '0') with
    | true ⇒ (SomeUL_c25 0)
    | false ⇒
      match ((eqc_i17 c_v402757) '1') with
      | true ⇒ (SomeUL_c25 1)
      | false ⇒
        match ((eqc_i17 c_v402757) '2') with
        | true ⇒ (SomeUL_c25 2)
        | false ⇒
          match ((eqc_i17 c_v402757) '3') with
          | true ⇒ (SomeUL_c25 3)
          | false ⇒
            match ((eqc_i17 c_v402757) '4') with
            | true ⇒ (SomeUL_c25 4)
            | false ⇒
              match ((eqc_i17 c_v402757) '5') with
              | true ⇒ (SomeUL_c25 5)
              | false ⇒
                match ((eqc_i17 c_v402757) '6') with
                | true ⇒ (SomeUL_c25 6)
                | false ⇒
                  match ((eqc_i17 c_v402757) '7') with
                  | true ⇒ (SomeUL_c25 7)
                  | false ⇒
                    match ((eqc_i17 c_v402757) '8') with
                    | true ⇒ (SomeUL_c25 8)
                    | false ⇒
                      match ((eqc_i17 c_v402757) '9') with
                      | true ⇒ (SomeUL_c25 9) | false ⇒ NoneUL_c24
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i41 =
  fn s_v402758 acc_v402759 ⇒
    match s_v402758 with
    | EmptyString_c6  ⇒ (SomeUL_c25 acc_v402759)
    | String_c7 c_v402760 s_v402761 ⇒
      match (digit_of_char_i40 c_v402760) with
      | NoneUL_c24  ⇒ NoneUL_c24
      | SomeUL_c25 n_v402762 ⇒
        ((nat_of_string_loop_i41 s_v402761)
          ((addn_i12 ((muln_i14 acc_v402759) 10)) n_v402762))
      end
    end

def nat_of_string_i42 =
  fn s_v402763 ⇒ ((nat_of_string_loop_i41 s_v402763) 0)

def contains_i51 =
  fn c_v402764 s_v402765 ⇒
    match s_v402765 with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v402766 s_v402767 ⇒
      match ((eqc_i17 c_v402764) c0_v402766) with
      | true ⇒ true | false ⇒ ((contains_i51 c_v402764) s_v402767)
      end
    end

data diff_d7 =
| diff_EmptyString_c12 of size(3) | diff_StringY_c13 of size(8)
| diff_StringI_c14 of size(11) | diff_StringN_c15 of size(11)

def string_diff_i52 =
  fn ans_v402768 s1_v402769 s2_v402770 ⇒
    match s1_v402769 with
    | EmptyString_c6  ⇒
      match s2_v402770 with
      | EmptyString_c6  ⇒ fn e_v402771 ⇒ (EmptyString_c6, NULL)
      | String_c7 c2_v402772 s2_v402773 ⇒ fn e_v402774 ⇒ ()
      end
    | String_c7 c1_v402775 s1_v402776 ⇒
      match s2_v402770 with
      | EmptyString_c6  ⇒ fn e_v402777 ⇒ ()
      | String_c7 c2_v402778 s2_v402779 ⇒
        fn e_v402780 ⇒
          let e_v402781 = NULL in
          let __v402782 =
            ((((string_diff_i52 ans_v402768) s1_v402776) s2_v402779) NULL)
          in
          match __v402782 with
          | (df_v402783, pf_v402784) ⇒
            (match ((eqc_i17 c1_v402775) c2_v402778) with
             | true ⇒
               fn e1_v402785 ⇒
                 let e1_v402786 = NULL in
                 let h_v402787 = NULL in (((cats_i19 "Y") df_v402783), NULL)
             | false ⇒
               fn e1_v402788 ⇒
                 (match ((contains_i51 c2_v402778) ans_v402768) with
                  | true ⇒
                    fn e2_v402789 ⇒ (((cats_i19 "I") df_v402783), NULL)
                  | false ⇒
                    fn e2_v402790 ⇒ (((cats_i19 "N") df_v402783), NULL)
                  end NULL)
             end NULL)
          end
      end
    end

data word_d8 =
| Word_c16 of size(2)

data wdiff_d9 =
| diff_Word_c17 of size(10)

def word_diff_i54 =
  fn ans_v402791 guess_v402792 ⇒
    (match ans_v402791 with
     | Word_c16 s1_v402793 pf1_v402794 ⇒
       fn e1_v402795 ⇒
         (match guess_v402792 with
          | Word_c16 s2_v402796 pf2_v402797 ⇒
            fn e2_v402798 ⇒
              let e_v402799 = NULL in
              let __v402800 =
                ((((string_diff_i52 s1_v402793) s1_v402793) s2_v402796) NULL)
              in
              match __v402800 with
              | (s3_v402801, h_v402802) ⇒
                let e_v402803 = NULL in
                let pf_v402804 = NULL in ((Word_c16 s3_v402801 NULL), NULL)
              end
          end NULL)
     end NULL)

def eqw_i55 =
  fn w1_v402805 w2_v402806 ⇒
    match w1_v402805 with
    | Word_c16 s1_v402807 __v402808 ⇒
      match w2_v402806 with
      | Word_c16 s2_v402809 __v402810 ⇒ ((eqs_i21 s1_v402807) s2_v402809)
      end
    end

def read_word_i62 =
  fn __v402811 ⇒
    let s_v402812 ⇐ (readline_i33 ()) in
    (match ((eqn_i9 (strlen_i20 s_v402812)) 5) with
     | true ⇒ fn e_v402813 ⇒ return (Word_c16 s_v402812 NULL)
     | false ⇒
       fn __v402814 ⇒
         let __v402815 ⇐
           (print_i34 "please input a word with length of 5\n")
         in (read_word_i62 ())
     end NULL)

def player_loop_i63 =
  fn ans_v402816 repeat_v402817 c_v402818 ⇒
    (match repeat_v402817 with
     | O ⇒
       fn c_v402819 ⇒
         let __v402820 ⇐ recv c_v402819 in
         match __v402820 with
         | (ans_v402821, c_v402822) ⇒
           let __v402823 ⇐ {recv} c_v402822 in
           match __v402823 with
           | (pf_v402824, c_v402825) ⇒
             match ans_v402821 with
             | Word_c16 s_v402826 __v402827 ⇒
               let __v402828 ⇐
                 (print_i34
                   ((cats_i19
                      ((cats_i19 "You Lose! The answer is ") s_v402826))
                     ".\n"))
               in close⇓ c_v402825
             end
           end
         end
     | S repeat_v402829 ⇒
       fn c_v402830 ⇒
         let guess_v402831 ⇐ (read_word_i62 ()) in
         let c_v402832 ⇐ (send c_v402830 guess_v402831) in
         let __v402833 ⇐ recv c_v402832 in
         match __v402833 with
         | (b_v402834, c_v402835) ⇒
           let __v402836 ⇐ {recv} c_v402835 in
           match __v402836 with
           | (pf_v402837, c_v402838) ⇒
             (match b_v402834 with
              | true ⇒
                ln c_v402839 ⇒
                  let __v402840 ⇐ (print_i34 "You Win!\n") in
                  close⇓ c_v402839
              | false ⇒
                ln c_v402841 ⇒
                  let __v402842 ⇐ recv c_v402841 in
                  match __v402842 with
                  | (diff_v402843, c_v402844) ⇒
                    let __v402845 ⇐ {recv} c_v402844 in
                    match __v402845 with
                    | (pf_v402846, c_v402847) ⇒
                      match diff_v402843 with
                      | Word_c16 s_v402848 __v402849 ⇒
                        let __v402850 ⇐
                          (print_i34
                            ((cats_i19
                               ((cats_i19
                                  ((cats_i19
                                     ((cats_i19 "Incorrect, hint: ")
                                       s_v402848))
                                    ". You have "))
                                 (string_of_nat_i39 repeat_v402829)))
                              " more tries.\n"))
                        in
                        (((player_loop_i63 NULL) repeat_v402829) c_v402847)
                      end
                    end
                  end
              end c_v402838)
           end
         end
     end c_v402818)

def player_i64 =
  fn c_v402851 ⇒
    let __v402852 ⇐ {recv} c_v402851 in
    match __v402852 with
    | (ans_v402853, c_v402854) ⇒
      let __v402855 ⇐ recv c_v402854 in
      match __v402855 with
      | (repeat_v402856, c_v402857) ⇒
        let __v402858 ⇐ (print_i34 "Wordle Game\n") in
        let __v402859 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v402860 ⇐
          (print_i34
            ((cats_i19
               ((cats_i19 "You have ") (string_of_nat_i39 repeat_v402856)))
              " tries.\n"))
        in (((player_loop_i63 NULL) repeat_v402856) c_v402857)
      end
    end

data at_d10 =
| at_O_c18 of size(3) | at_S_c19 of size(6)

def get_at_i66 =
  fn A_v402861 n_v402862 xs_v402863 ⇒
    match xs_v402863 with
    | nilUU_c34  ⇒ fn e_v402864 ⇒ ()
    | consUU_c35 x_v402865 xs_v402866 ⇒
      match n_v402862 with
      | O ⇒ fn e_v402867 ⇒ (x_v402865, NULL)
      | S n_v402868 ⇒
        fn e_v402869 ⇒
          let __v402870 = ((((get_at_i66 NULL) n_v402868) xs_v402866) NULL)
          in
          match __v402870 with
          | (x0_v402871, pf_v402872) ⇒ (x0_v402871, NULL)
          end
      end
    end

def rand_word_i67 =
  fn __v402873 ⇒
    let words_v402874 =
      (consUU_c35
        (Word_c16 "route" NULL)
        (consUU_c35
          (Word_c16 "crash" NULL)
          (consUU_c35
            (Word_c16 "clown" NULL)
            (consUU_c35
              (Word_c16 "shaky" NULL)
              (consUU_c35
                (Word_c16 "vegan" NULL)
                (consUU_c35
                  (Word_c16 "power" NULL)
                  (consUU_c35
                    (Word_c16 "trust" NULL)
                    (consUU_c35
                      (Word_c16 "enjoy" NULL)
                      (consUU_c35
                        (Word_c16 "brain" NULL)
                        (consUU_c35
                          (Word_c16 "adopt" NULL)
                          (consUU_c35
                            (Word_c16 "tower" NULL)
                            (consUU_c35
                              (Word_c16 "shade" NULL)
                              (consUU_c35
                                (Word_c16 "delay" NULL)
                                (consUU_c35
                                  (Word_c16 "twist" NULL)
                                  (consUU_c35
                                    (Word_c16 "alert" NULL)
                                    (consUU_c35
                                      (Word_c16 "choke" NULL)
                                      (consUU_c35
                                        (Word_c16 "split" NULL)
                                        (consUU_c35
                                          (Word_c16 "rhyme" NULL)
                                          (consUU_c35
                                            (Word_c16 "muddy" NULL)
                                            (consUU_c35
                                              (Word_c16 "plant" NULL)
                                              nilUU_c34))))))))))))))))))))
    in
    let r_v402875 ⇐ rand 0 19 in
    match r_v402875 with
    | Between_c4 n_v402876 __v402877 pf_v402878 ⇒
      let __v402879 = ((((get_at_i66 NULL) n_v402876) words_v402874) NULL) in
      match __v402879 with
      | (w_v402880, __v402881) ⇒ return w_v402880
      end
    end

def server_loop_i68 =
  fn ans_v402882 repeat_v402883 c_v402884 ⇒
    (match repeat_v402883 with
     | O ⇒
       fn c_v402885 ⇒
         let c_v402886 ⇐ (send c_v402885 ans_v402882) in
         let c_v402887 ⇐ ({send} c_v402886 NULL) in close⇑ c_v402887
     | S repeat_v402888 ⇒
       fn c_v402889 ⇒
         let __v402890 ⇐ recv c_v402889 in
         match __v402890 with
         | (guess_v402891, c_v402892) ⇒
           let b_v402893 = ((eqw_i55 ans_v402882) guess_v402891) in
           let c_v402894 ⇐ (send c_v402892 b_v402893) in
           let c_v402895 ⇐ ({send} c_v402894 NULL) in
           (match b_v402893 with
            | true ⇒ ln c_v402896 ⇒ close⇑ c_v402896
            | false ⇒
              ln c_v402897 ⇒
                let __v402898 = ((word_diff_i54 ans_v402882) guess_v402891)
                in
                match __v402898 with
                | (df_v402899, pf_v402900) ⇒
                  let c_v402901 ⇐ (send c_v402897 df_v402899) in
                  let c_v402902 ⇐ ({send} c_v402901 NULL) in
                  (((server_loop_i68 ans_v402882) repeat_v402888) c_v402902)
                end
            end c_v402895)
         end
     end c_v402884)

def server_i69 =
  fn c_v402903 ⇒
    let repeat_v402904 = 6 in
    let ans_v402905 ⇐ (rand_word_i67 ()) in
    let c_v402906 ⇐ ({send} c_v402903 NULL) in
    let c_v402907 ⇐ (send c_v402906 repeat_v402904) in
    (((server_loop_i68 ans_v402905) repeat_v402904) c_v402907)

main =
  let c_v402908 ⇐ fork c_v402909 in (server_i69 c_v402909) in
  let c0_v402910 ⇐
    fork c0_v402911 in
      let __v402912 ⇐ recv c0_v402911 in
      match __v402912 with
      | (c_v402913, c0_v402914) ⇒
        let __v402915 ⇐ (player_i64 c_v402913) in
        let c0_v402916 ⇐ (send c0_v402914 ()) in close⇑ c0_v402916
      end
  in
  let c0_v402917 ⇐ (send c0_v402910 c_v402908) in
  let __v402918 ⇐ recv c0_v402917 in
  match __v402918 with
  | (__v402919, c0_v402920) ⇒ close⇓ c0_v402920
  end

trans12 success--------------------------

fun andb_i1(b1_v403363, b2_v403364) = if b1_v403363 then
                                        b2_v403364
                                      else
                                        0

val andbclo_i99 =
  fn b1_v403365 b2_v403366 ⇒ andb_i1(b1_v403365, b2_v403366)

fun orb_i2(b1_v403367, b2_v403368) = if b1_v403367 then
                                       1
                                     else
                                       b2_v403368

val orbclo_i100 = fn b1_v403369 b2_v403370 ⇒ orb_i2(b1_v403369, b2_v403370)

fun notb_i3(b_v403371) = if b_v403371 then
                           0
                         else
                           1

val notbclo_i101 = fn b_v403372 ⇒ notb_i3(b_v403372)

fun compareb_i4(b1_v403373, b2_v403374) =
  if b1_v403373 then
    if b2_v403374 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v403374 then
      LT_c1
    else
      EQ_c3

val comparebclo_i102 =
  fn b1_v403375 b2_v403376 ⇒ compareb_i4(b1_v403375, b2_v403376)

fun lten_i5(x_v403377, y_v403378) =
  let __v403379 = x_v403377 in
  if __v403379 then
    let x_v403380 = __v403379.-1 in
    let __v403381 = y_v403378 in
    if __v403381 then
      let y_v403382 = __v403381.-1 in lten_i5(x_v403380, y_v403382)
    else
      0
  else
    1

val ltenclo_i103 = fn x_v403383 y_v403384 ⇒ lten_i5(x_v403383, y_v403384)

fun ltn_i6(x_v403385, y_v403386) = lten_i5(x_v403385.+1, y_v403386)

val ltnclo_i104 = fn x_v403387 y_v403388 ⇒ ltn_i6(x_v403387, y_v403388)

fun gten_i7(x_v403389, y_v403390) = lten_i5(y_v403390, x_v403389)

val gtenclo_i105 = fn x_v403391 y_v403392 ⇒ gten_i7(x_v403391, y_v403392)

fun gtn_i8(x_v403393, y_v403394) = ltn_i6(y_v403394, x_v403393)

val gtnclo_i106 = fn x_v403395 y_v403396 ⇒ gtn_i8(x_v403395, y_v403396)

fun eqn_i9(x_v403397, y_v403398) =
  let __v403399 = x_v403397 in
  if __v403399 then
    let x_v403400 = __v403399.-1 in
    let __v403401 = y_v403398 in
    if __v403401 then
      let y_v403402 = __v403401.-1 in eqn_i9(x_v403400, y_v403402)
    else
      0
  else
    let __v403403 = y_v403398 in
    if __v403403 then
      let __v403404 = __v403403.-1 in 0
    else
      1

val eqnclo_i107 = fn x_v403405 y_v403406 ⇒ eqn_i9(x_v403405, y_v403406)

fun comparen_i10(n1_v403407, n2_v403408) =
  let __v403409 = n1_v403407 in
  if __v403409 then
    let n1_v403410 = __v403409.-1 in
    let __v403411 = n2_v403408 in
    if __v403411 then
      let n2_v403412 = __v403411.-1 in comparen_i10(n1_v403410, n2_v403412)
    else
      GT_c2
  else
    let __v403413 = n2_v403408 in
    if __v403413 then
      let __v403414 = __v403413.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i108 =
  fn n1_v403415 n2_v403416 ⇒ comparen_i10(n1_v403415, n2_v403416)

fun pred_i11(x_v403417) =
  let __v403418 = x_v403417 in
  if __v403418 then
    let x_v403419 = __v403418.-1 in x_v403419
  else
    0

val predclo_i109 = fn x_v403420 ⇒ pred_i11(x_v403420)

fun addn_i12(x_v403421, y_v403422) =
  let __v403423 = x_v403421 in
  if __v403423 then
    let x_v403424 = __v403423.-1 in addn_i12(x_v403424, y_v403422).+1
  else
    y_v403422

val addnclo_i110 = fn x_v403425 y_v403426 ⇒ addn_i12(x_v403425, y_v403426)

fun subn_i13(x_v403427, y_v403428) =
  let __v403429 = y_v403428 in
  if __v403429 then
    let y_v403430 = __v403429.-1 in subn_i13(pred_i11(x_v403427), y_v403430)
  else
    x_v403427

val subnclo_i111 = fn x_v403431 y_v403432 ⇒ subn_i13(x_v403431, y_v403432)

fun muln_i14(x_v403433, y_v403434) =
  let __v403435 = x_v403433 in
  if __v403435 then
    let x_v403436 = __v403435.-1 in
    addn_i12(y_v403434, muln_i14(x_v403436, y_v403434))
  else
    0

val mulnclo_i112 = fn x_v403437 y_v403438 ⇒ muln_i14(x_v403437, y_v403438)

fun divn_i15(x_v403439, y_v403440) =
  if ltn_i6(x_v403439, y_v403440) then
    0
  else
    divn_i15(subn_i13(x_v403439, y_v403440), y_v403440).+1

val divnclo_i113 = fn x_v403441 y_v403442 ⇒ divn_i15(x_v403441, y_v403442)

fun modn_i16(x_v403443, y_v403444) =
  subn_i13(x_v403443, muln_i14(divn_i15(x_v403443, y_v403444), y_v403444))

val modnclo_i114 = fn x_v403445 y_v403446 ⇒ modn_i16(x_v403445, y_v403446)

fun eqc_i17(c1_v403447, c2_v403448) =
  match c1_v403447 with
  | Char_c5 n1_v403449 ⇒
    match c2_v403448 with
    | Char_c5 n2_v403450 ⇒ eqn_i9(n1_v403449, n2_v403450)
    end
  end

val eqcclo_i115 =
  fn c1_v403451 c2_v403452 ⇒ eqc_i17(c1_v403451, c2_v403452)

fun comparec_i18(c1_v403453, c2_v403454) =
  match c1_v403453 with
  | Char_c5 n1_v403455 ⇒
    match c2_v403454 with
    | Char_c5 n2_v403456 ⇒ comparen_i10(n1_v403455, n2_v403456)
    end
  end

val comparecclo_i116 =
  fn c1_v403457 c2_v403458 ⇒ comparec_i18(c1_v403457, c2_v403458)

fun cats_i19(s1_v403459, s2_v403460) =
  match s1_v403459 with
  | EmptyString_c6  ⇒ s2_v403460
  | String_c7 c_v403461 s1_v403462 ⇒
    (String_c7 c_v403461 cats_i19(s1_v403462, s2_v403460))
  end

val catsclo_i117 =
  fn s1_v403463 s2_v403464 ⇒ cats_i19(s1_v403463, s2_v403464)

fun strlen_i20(s_v403465) =
  match s_v403465 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v403466 s_v403467 ⇒ strlen_i20(s_v403467).+1
  end

val strlenclo_i118 = fn s_v403468 ⇒ strlen_i20(s_v403468)

fun eqs_i21(s1_v403469, s2_v403470) =
  match s1_v403469 with
  | EmptyString_c6  ⇒
    match s2_v403470 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v403471 __v403472 ⇒ 0
    end
  | String_c7 c1_v403473 s1_v403474 ⇒
    match s2_v403470 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v403475 s2_v403476 ⇒
      andb_i1(eqc_i17(c1_v403473, c2_v403475),
              eqs_i21(s1_v403474, s2_v403476))
    end
  end

val eqsclo_i119 =
  fn s1_v403477 s2_v403478 ⇒ eqs_i21(s1_v403477, s2_v403478)

fun compares_i22(s1_v403479, s2_v403480) =
  match s1_v403479 with
  | EmptyString_c6  ⇒
    match s2_v403480 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v403481 __v403482 ⇒ LT_c1
    end
  | String_c7 c1_v403483 s1_v403484 ⇒
    match s2_v403480 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v403485 s2_v403486 ⇒
      match comparec_i18(c1_v403483, c2_v403485) with
      | EQ_c3  ⇒ compares_i22(s1_v403484, s2_v403486) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i120 =
  fn s1_v403487 s2_v403488 ⇒ compares_i22(s1_v403487, s2_v403488)

fun and_thenUUU_i78(A_v403489, B_v403490, opt_v403491, f_v403492) =
  match opt_v403491 with
  | NoneUU_c26  ⇒ NoneUU_c26
  | SomeUU_c27 x_v403493 ⇒ (f_v403492) x_v403493
  end

val and_thenUUUclo_i121 =
  fn A_v403494 B_v403495 opt_v403496 ⇒
    ln f_v403497 ⇒
      and_thenUUU_i78(A_v403494, B_v403495, opt_v403496, f_v403497)

fun and_thenUUL_i77(A_v403498, B_v403499, opt_v403500, f_v403501) =
  match opt_v403500 with
  | NoneUL_c24  ⇒ NoneUL_c24
  | SomeUL_c25 x_v403502 ⇒ (f_v403501) x_v403502
  end

val and_thenUULclo_i122 =
  fn A_v403503 B_v403504 opt_v403505 ⇒
    ln f_v403506 ⇒
      and_thenUUL_i77(A_v403503, B_v403504, opt_v403505, f_v403506)

fun and_thenULU_i76(A_v403507, B_v403508, opt_v403509, f_v403510) =
  match opt_v403509 with
  | NoneUU_c26  ⇒ NoneLU_c22
  | SomeUU_c27 x_v403511 ⇒ (f_v403510) x_v403511
  end

val and_thenULUclo_i123 =
  fn A_v403512 B_v403513 opt_v403514 ⇒
    ln f_v403515 ⇒
      and_thenULU_i76(A_v403512, B_v403513, opt_v403514, f_v403515)

fun and_thenULL_i75(A_v403516, B_v403517, opt_v403518, f_v403519) =
  match opt_v403518 with
  | NoneUL_c24  ⇒ NoneLL_c20
  | SomeUL_c25 x_v403520 ⇒ (f_v403519) x_v403520
  end

val and_thenULLclo_i124 =
  fn A_v403521 B_v403522 opt_v403523 ⇒
    ln f_v403524 ⇒
      and_thenULL_i75(A_v403521, B_v403522, opt_v403523, f_v403524)

fun and_thenLUL_i73(A_v403525, B_v403526, opt_v403527, f_v403528) =
  match opt_v403527 with
  | NoneLL_c20  ⇒ NoneUL_c24
  | SomeLL_c21 x_v403529 ⇒ (f_v403528) x_v403529
  end

val and_thenLULclo_i125 =
  fn A_v403530 B_v403531 opt_v403532 ⇒
    ln f_v403533 ⇒
      and_thenLUL_i73(A_v403530, B_v403531, opt_v403532, f_v403533)

fun and_thenLLL_i71(A_v403534, B_v403535, opt_v403536, f_v403537) =
  match opt_v403536 with
  | NoneLL_c20  ⇒ NoneLL_c20
  | SomeLL_c21 x_v403538 ⇒ (f_v403537) x_v403538
  end

val and_thenLLLclo_i126 =
  fn A_v403539 B_v403540 opt_v403541 ⇒
    ln f_v403542 ⇒
      and_thenLLL_i71(A_v403539, B_v403540, opt_v403541, f_v403542)

fun lenUU_i86(A_v403543, xs_v403544) =
  match xs_v403544 with
  | nilUU_c34  ⇒ (0, nilUU_c34)
  | consUU_c35 x_v403545 xs_v403546 ⇒
    match lenUU_i86(NULL, xs_v403546) with
    | (n_v403547, xs_v403548) ⇒
      (n_v403547.+1, (consUU_c35 x_v403545 xs_v403548))
    end
  end

val lenUUclo_i127 =
  fn A_v403549 xs_v403550 ⇒ lenUU_i86(A_v403549, xs_v403550)

fun lenUL_i85(A_v403551, xs_v403552) =
  match xs_v403552 with
  | nilUL_c32  ⇒ (0, nilUL_c32)
  | consUL_c33 x_v403553 xs_v403554 ⇒
    match lenUL_i85(NULL, xs_v403554) with
    | (n_v403555, xs_v403556) ⇒
      (n_v403555.+1, (consUL_c33 x_v403553 xs_v403556))
    end
  end

val lenULclo_i128 =
  fn A_v403557 xs_v403558 ⇒ lenUL_i85(A_v403557, xs_v403558)

fun lenLL_i83(A_v403559, xs_v403560) =
  match xs_v403560 with
  | nilLL_c28  ⇒ (0, nilLL_c28)
  | consLL_c29 x_v403561 xs_v403562 ⇒
    match lenLL_i83(NULL, xs_v403562) with
    | (n_v403563, xs_v403564) ⇒
      (n_v403563.+1, (consLL_c29 x_v403561 xs_v403564))
    end
  end

val lenLLclo_i129 =
  fn A_v403565 xs_v403566 ⇒ lenLL_i83(A_v403565, xs_v403566)

fun appendUU_i90(A_v403567, xs_v403568, ys_v403569) =
  match xs_v403568 with
  | nilUU_c34  ⇒ ys_v403569
  | consUU_c35 x_v403570 xs_v403571 ⇒
    (consUU_c35 x_v403570 appendUU_i90(NULL, xs_v403571, ys_v403569))
  end

val appendUUclo_i130 =
  fn A_v403572 xs_v403573 ⇒
    ln ys_v403574 ⇒ appendUU_i90(A_v403572, xs_v403573, ys_v403574)

fun appendUL_i89(A_v403575, xs_v403576, ys_v403577) =
  match xs_v403576 with
  | nilUL_c32  ⇒ ys_v403577
  | consUL_c33 x_v403578 xs_v403579 ⇒
    (consUL_c33 x_v403578 appendUL_i89(NULL, xs_v403579, ys_v403577))
  end

val appendULclo_i131 =
  fn A_v403580 xs_v403581 ⇒
    ln ys_v403582 ⇒ appendUL_i89(A_v403580, xs_v403581, ys_v403582)

fun appendLL_i87(A_v403583, xs_v403584, ys_v403585) =
  match xs_v403584 with
  | nilLL_c28  ⇒ ys_v403585
  | consLL_c29 x_v403586 xs_v403587 ⇒
    (consLL_c29 x_v403586 appendLL_i87(NULL, xs_v403587, ys_v403585))
  end

val appendLLclo_i132 =
  fn A_v403588 xs_v403589 ⇒
    ln ys_v403590 ⇒ appendLL_i87(A_v403588, xs_v403589, ys_v403590)

fun readline_i33(__v403591) =
  ln __v403592 ⇒
    let ch_v403593 = (ln __v403594 ⇒ open stdin) NULL in
    let ch_v403595 =
      ((fn x_v403596 ⇒ ln __v403597 ⇒ send(ch_v403593, x_v403596)) 1)
        NULL
    in
    let __v403598 = (ln __v403599 ⇒ recv(ch_v403595)) NULL in
    (match __v403598 with
     | (s_v403600, ch_v403601) ⇒
       ln __v403602 ⇒
         let ch_v403603 =
           ((fn x_v403604 ⇒ ln __v403605 ⇒ send(ch_v403601, x_v403604)) 0)
             NULL
         in
         let __v403606 =
           (ln __v403607 ⇒ let __v403608 = ch_v403603 in NULL) NULL
         in (ln __v403609 ⇒ s_v403600) NULL
     end) NULL

val readlineclo_i133 = fn __v403610 ⇒ readline_i33(__v403610)

fun print_i34(s_v403611) =
  ln __v403612 ⇒
    let ch_v403613 = (ln __v403614 ⇒ open stdout) NULL in
    let ch_v403615 =
      ((fn x_v403616 ⇒ ln __v403617 ⇒ send(ch_v403613, x_v403616)) 1)
        NULL
    in
    let ch_v403618 =
      ((fn x_v403619 ⇒ ln __v403620 ⇒ send(ch_v403615, x_v403619))
         s_v403611)
        NULL
    in
    let ch_v403621 =
      ((fn x_v403622 ⇒ ln __v403623 ⇒ send(ch_v403618, x_v403622)) 0)
        NULL
    in (ln __v403624 ⇒ let __v403625 = ch_v403621 in NULL) NULL

val printclo_i134 = fn s_v403626 ⇒ print_i34(s_v403626)

fun prerr_i35(s_v403627) =
  ln __v403628 ⇒
    let ch_v403629 = (ln __v403630 ⇒ open stderr) NULL in
    let ch_v403631 =
      ((fn x_v403632 ⇒ ln __v403633 ⇒ send(ch_v403629, x_v403632)) 1)
        NULL
    in
    let ch_v403634 =
      ((fn x_v403635 ⇒ ln __v403636 ⇒ send(ch_v403631, x_v403635))
         s_v403627)
        NULL
    in
    let ch_v403637 =
      ((fn x_v403638 ⇒ ln __v403639 ⇒ send(ch_v403634, x_v403638)) 0)
        NULL
    in (ln __v403640 ⇒ let __v403641 = ch_v403637 in NULL) NULL

val prerrclo_i135 = fn s_v403642 ⇒ prerr_i35(s_v403642)

val digits_i36 =
  (consUU_c35
    "0"
    (consUU_c35
      "1"
      (consUU_c35
        "2"
        (consUU_c35
          "3"
          (consUU_c35
            "4"
            (consUU_c35
              "5"
              (consUU_c35
                "6"
                (consUU_c35 "7" (consUU_c35 "8" (consUU_c35 "9" nilUU_c34))))))))))

fun get_at_i37(A_v403643, n_v403644, xs_v403645, a_v403646) =
  let __v403647 = n_v403644 in
  if __v403647 then
    let n_v403648 = __v403647.-1 in
    match xs_v403645 with
    | nilUU_c34  ⇒ a_v403646
    | consUU_c35 __v403649 xs_v403650 ⇒
      get_at_i37(NULL, n_v403648, xs_v403650, a_v403646)
    end
  else
    match xs_v403645 with
    | nilUU_c34  ⇒ a_v403646 | consUU_c35 x_v403651 __v403652 ⇒ x_v403651
    end

val get_atclo_i136 =
  fn A_v403653 n_v403654 xs_v403655 a_v403656 ⇒
    get_at_i37(A_v403653, n_v403654, xs_v403655, a_v403656)

fun string_of_digit_i38(n_v403657) =
  get_at_i37(NULL, n_v403657, digits_i36, EmptyString_c6)

val string_of_digitclo_i137 = fn n_v403658 ⇒ string_of_digit_i38(n_v403658)

fun string_of_nat_i39(n_v403659) =
  let s_v403660 = string_of_digit_i38(modn_i16(n_v403659, 10)) in
  let n_v403661 = divn_i15(n_v403659, 10) in
  if ltn_i6(0, n_v403661) then
    cats_i19(string_of_nat_i39(n_v403661), s_v403660)
  else
    s_v403660

val string_of_natclo_i138 = fn n_v403662 ⇒ string_of_nat_i39(n_v403662)

fun digit_of_char_i40(c_v403663) =
  if eqc_i17(c_v403663, '0') then
    (SomeUL_c25 0)
  else
    if eqc_i17(c_v403663, '1') then
      (SomeUL_c25 1)
    else
      if eqc_i17(c_v403663, '2') then
        (SomeUL_c25 2)
      else
        if eqc_i17(c_v403663, '3') then
          (SomeUL_c25 3)
        else
          if eqc_i17(c_v403663, '4') then
            (SomeUL_c25 4)
          else
            if eqc_i17(c_v403663, '5') then
              (SomeUL_c25 5)
            else
              if eqc_i17(c_v403663, '6') then
                (SomeUL_c25 6)
              else
                if eqc_i17(c_v403663, '7') then
                  (SomeUL_c25 7)
                else
                  if eqc_i17(c_v403663, '8') then
                    (SomeUL_c25 8)
                  else
                    if eqc_i17(c_v403663, '9') then
                      (SomeUL_c25 9)
                    else
                      NoneUL_c24

val digit_of_charclo_i139 = fn c_v403664 ⇒ digit_of_char_i40(c_v403664)

fun nat_of_string_loop_i41(s_v403665, acc_v403666) =
  match s_v403665 with
  | EmptyString_c6  ⇒ (SomeUL_c25 acc_v403666)
  | String_c7 c_v403667 s_v403668 ⇒
    match digit_of_char_i40(c_v403667) with
    | NoneUL_c24  ⇒ NoneUL_c24
    | SomeUL_c25 n_v403669 ⇒
      nat_of_string_loop_i41(s_v403668,
                             addn_i12(muln_i14(acc_v403666, 10), n_v403669))
    end
  end

val nat_of_string_loopclo_i140 =
  fn s_v403670 acc_v403671 ⇒ nat_of_string_loop_i41(s_v403670, acc_v403671)

fun nat_of_string_i42(s_v403672) = nat_of_string_loop_i41(s_v403672, 0)

val nat_of_stringclo_i141 = fn s_v403673 ⇒ nat_of_string_i42(s_v403673)

fun contains_i51(c_v403674, s_v403675) =
  match s_v403675 with
  | EmptyString_c6  ⇒ 0
  | String_c7 c0_v403676 s_v403677 ⇒
    if eqc_i17(c_v403674, c0_v403676) then
      1
    else
      contains_i51(c_v403674, s_v403677)
  end

val containsclo_i142 =
  fn c_v403678 s_v403679 ⇒ contains_i51(c_v403678, s_v403679)

fun string_diff_i52(ans_v403680, s1_v403681, s2_v403682) =
  match s1_v403681 with
  | EmptyString_c6  ⇒
    match s2_v403682 with
    | EmptyString_c6  ⇒ fn e_v403683 ⇒ (EmptyString_c6, NULL)
    | String_c7 c2_v403684 s2_v403685 ⇒ fn e_v403686 ⇒ NULL
    end
  | String_c7 c1_v403687 s1_v403688 ⇒
    match s2_v403682 with
    | EmptyString_c6  ⇒ fn e_v403689 ⇒ NULL
    | String_c7 c2_v403690 s2_v403691 ⇒
      fn e_v403692 ⇒
        let e_v403693 = NULL in
        let __v403694 =
          ((((string_diffclo_i143) ans_v403680) s1_v403688) s2_v403691) NULL
        in
        match __v403694 with
        | (df_v403695, pf_v403696) ⇒
          (if eqc_i17(c1_v403687, c2_v403690) then
             fn e1_v403697 ⇒
               let e1_v403698 = NULL in
               let h_v403699 = NULL in (cats_i19("Y", df_v403695), NULL)
           else
             fn e1_v403700 ⇒
               (if contains_i51(c2_v403690, ans_v403680) then
                  fn e2_v403701 ⇒ (cats_i19("I", df_v403695), NULL)
                else
                  fn e2_v403702 ⇒ (cats_i19("N", df_v403695), NULL))
                 NULL)
            NULL
        end
    end
  end

val string_diffclo_i143 =
  fn ans_v403703 s1_v403704 s2_v403705 ⇒
    string_diff_i52(ans_v403703, s1_v403704, s2_v403705)

fun word_diff_i54(ans_v403706, guess_v403707) =
  (match ans_v403706 with
   | Word_c16 s1_v403708 pf1_v403709 ⇒
     fn e1_v403710 ⇒
       (match guess_v403707 with
        | Word_c16 s2_v403711 pf2_v403712 ⇒
          fn e2_v403713 ⇒
            let e_v403714 = NULL in
            let __v403715 =
              ((((string_diffclo_i143) s1_v403708) s1_v403708) s2_v403711)
                NULL
            in
            match __v403715 with
            | (s3_v403716, h_v403717) ⇒
              let e_v403718 = NULL in
              let pf_v403719 = NULL in ((Word_c16 s3_v403716 NULL), NULL)
            end
        end) NULL
   end) NULL

val word_diffclo_i144 =
  fn ans_v403720 guess_v403721 ⇒ word_diff_i54(ans_v403720, guess_v403721)

fun eqw_i55(w1_v403722, w2_v403723) =
  match w1_v403722 with
  | Word_c16 s1_v403724 __v403725 ⇒
    match w2_v403723 with
    | Word_c16 s2_v403726 __v403727 ⇒ eqs_i21(s1_v403724, s2_v403726)
    end
  end

val eqwclo_i145 =
  fn w1_v403728 w2_v403729 ⇒ eqw_i55(w1_v403728, w2_v403729)

fun read_word_i62(__v403730) =
  ln __v403731 ⇒
    let s_v403732 = (readline_i33(NULL)) NULL in
    ((if eqn_i9(strlen_i20(s_v403732), 5) then
        fn e_v403733 ⇒ ln __v403734 ⇒ (Word_c16 s_v403732 NULL)
      else
        fn __v403735 ⇒
          ln __v403736 ⇒
            let __v403737 =
              (print_i34("please input a word with length of 5\n")) NULL
            in (read_word_i62(NULL)) NULL)
       NULL)
      NULL

val read_wordclo_i146 = fn __v403738 ⇒ read_word_i62(__v403738)

fun player_loop_i63(ans_v403739, repeat_v403740, c_v403741) =
  (let __v403742 = repeat_v403740 in
   if __v403742 then
     let repeat_v403743 = __v403742.-1 in
     fn c_v403744 ⇒
       ln __v403745 ⇒
         let guess_v403746 = (read_word_i62(NULL)) NULL in
         let c_v403747 =
           ((fn x_v403748 ⇒ ln __v403749 ⇒ send(c_v403744, x_v403748))
              guess_v403746)
             NULL
         in
         let __v403750 = (ln __v403751 ⇒ recv(c_v403747)) NULL in
         (match __v403750 with
          | (b_v403752, c_v403753) ⇒
            ln __v403754 ⇒
              let __v403755 = (ln __v403756 ⇒ (NULL, c_v403753)) NULL in
              (match __v403755 with
               | (pf_v403757, c_v403758) ⇒
                 (if b_v403752 then
                    ln c_v403759 __v403760 ⇒
                      let __v403761 = (print_i34("You Win!\n")) NULL in
                      (ln __v403762 ⇒ close(c_v403759)) NULL
                  else
                    ln c_v403763 __v403764 ⇒
                      let __v403765 = (ln __v403766 ⇒ recv(c_v403763)) NULL
                      in
                      (match __v403765 with
                       | (diff_v403767, c_v403768) ⇒
                         ln __v403769 ⇒
                           let __v403770 =
                             (ln __v403771 ⇒ (NULL, c_v403768)) NULL
                           in
                           (match __v403770 with
                            | (pf_v403772, c_v403773) ⇒
                              match diff_v403767 with
                              | Word_c16 s_v403774 __v403775 ⇒
                                ln __v403776 ⇒
                                  let __v403777 =
                                    (print_i34(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Incorrect, hint: ",
                                                                 s_v403774),
                                                                 ". You have "),
                                                                 string_of_nat_i39(
                                                                 repeat_v403743)),
                                                        " more tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i63(NULL, repeat_v403743,
                                                   c_v403773))
                                    NULL
                              end
                            end) NULL
                       end) NULL)
                   c_v403758
               end) NULL
          end) NULL
   else
     fn c_v403778 ⇒
       ln __v403779 ⇒
         let __v403780 = (ln __v403781 ⇒ recv(c_v403778)) NULL in
         (match __v403780 with
          | (ans_v403782, c_v403783) ⇒
            ln __v403784 ⇒
              let __v403785 = (ln __v403786 ⇒ (NULL, c_v403783)) NULL in
              (match __v403785 with
               | (pf_v403787, c_v403788) ⇒
                 match ans_v403782 with
                 | Word_c16 s_v403789 __v403790 ⇒
                   ln __v403791 ⇒
                     let __v403792 =
                       (print_i34(cats_i19(cats_i19("You Lose! The answer is ",
                                                    s_v403789),
                                           ".\n")))
                         NULL
                     in (ln __v403793 ⇒ close(c_v403788)) NULL
                 end
               end) NULL
          end) NULL)
    c_v403741

val player_loopclo_i147 =
  fn ans_v403794 repeat_v403795 c_v403796 ⇒
    player_loop_i63(ans_v403794, repeat_v403795, c_v403796)

fun player_i64(c_v403797) =
  ln __v403798 ⇒
    let __v403799 = (ln __v403800 ⇒ (NULL, c_v403797)) NULL in
    (match __v403799 with
     | (ans_v403801, c_v403802) ⇒
       ln __v403803 ⇒
         let __v403804 = (ln __v403805 ⇒ recv(c_v403802)) NULL in
         (match __v403804 with
          | (repeat_v403806, c_v403807) ⇒
            ln __v403808 ⇒
              let __v403809 = (print_i34("Wordle Game\n")) NULL in
              let __v403810 =
                (print_i34("Please guess a word of length 5.\n")) NULL
              in
              let __v403811 =
                (print_i34(cats_i19(cats_i19("You have ",
                                             string_of_nat_i39(repeat_v403806)),
                                    " tries.\n")))
                  NULL
              in (player_loop_i63(NULL, repeat_v403806, c_v403807)) NULL
          end) NULL
     end) NULL

val playerclo_i148 = fn c_v403812 ⇒ player_i64(c_v403812)

fun get_at_i66(A_v403813, n_v403814, xs_v403815) =
  match xs_v403815 with
  | nilUU_c34  ⇒ fn e_v403816 ⇒ NULL
  | consUU_c35 x_v403817 xs_v403818 ⇒
    let __v403819 = n_v403814 in
    if __v403819 then
      let n_v403820 = __v403819.-1 in
      fn e_v403821 ⇒
        let __v403822 = ((((get_atclo_i149) NULL) n_v403820) xs_v403818) NULL
        in
        match __v403822 with
        | (x0_v403823, pf_v403824) ⇒ (x0_v403823, NULL)
        end
    else
      fn e_v403825 ⇒ (x_v403817, NULL)
  end

val get_atclo_i149 =
  fn A_v403826 n_v403827 xs_v403828 ⇒
    get_at_i66(A_v403826, n_v403827, xs_v403828)

fun rand_word_i67(__v403829) =
  let words_v403830 =
    (consUU_c35
      (Word_c16 "route" NULL)
      (consUU_c35
        (Word_c16 "crash" NULL)
        (consUU_c35
          (Word_c16 "clown" NULL)
          (consUU_c35
            (Word_c16 "shaky" NULL)
            (consUU_c35
              (Word_c16 "vegan" NULL)
              (consUU_c35
                (Word_c16 "power" NULL)
                (consUU_c35
                  (Word_c16 "trust" NULL)
                  (consUU_c35
                    (Word_c16 "enjoy" NULL)
                    (consUU_c35
                      (Word_c16 "brain" NULL)
                      (consUU_c35
                        (Word_c16 "adopt" NULL)
                        (consUU_c35
                          (Word_c16 "tower" NULL)
                          (consUU_c35
                            (Word_c16 "shade" NULL)
                            (consUU_c35
                              (Word_c16 "delay" NULL)
                              (consUU_c35
                                (Word_c16 "twist" NULL)
                                (consUU_c35
                                  (Word_c16 "alert" NULL)
                                  (consUU_c35
                                    (Word_c16 "choke" NULL)
                                    (consUU_c35
                                      (Word_c16 "split" NULL)
                                      (consUU_c35
                                        (Word_c16 "rhyme" NULL)
                                        (consUU_c35
                                          (Word_c16 "muddy" NULL)
                                          (consUU_c35
                                            (Word_c16 "plant" NULL) nilUU_c34))))))))))))))))))))
  in
  ln __v403831 ⇒
    let r_v403832 = (ln __v403833 ⇒ rand(0, 19)) NULL in
    (match r_v403832 with
     | Between_c4 n_v403834 __v403835 pf_v403836 ⇒
       let __v403837 =
         ((((get_atclo_i149) NULL) n_v403834) words_v403830) NULL
       in
       match __v403837 with
       | (w_v403838, __v403839) ⇒ ln __v403840 ⇒ w_v403838
       end
     end) NULL

val rand_wordclo_i150 = fn __v403841 ⇒ rand_word_i67(__v403841)

fun server_loop_i68(ans_v403842, repeat_v403843, c_v403844) =
  (let __v403845 = repeat_v403843 in
   if __v403845 then
     let repeat_v403846 = __v403845.-1 in
     fn c_v403847 ⇒
       ln __v403848 ⇒
         let __v403849 = (ln __v403850 ⇒ recv(c_v403847)) NULL in
         (match __v403849 with
          | (guess_v403851, c_v403852) ⇒
            let b_v403853 = eqw_i55(ans_v403842, guess_v403851) in
            ln __v403854 ⇒
              let c_v403855 =
                ((fn x_v403856 ⇒
                    ln __v403857 ⇒ send(c_v403852, x_v403856))
                   b_v403853)
                  NULL
              in
              let c_v403858 =
                ((fn x_v403859 ⇒ ln __v403860 ⇒ c_v403855) NULL) NULL
              in
              ((if b_v403853 then
                  ln c_v403861 __v403862 ⇒
                    let __v403863 = c_v403861 in NULL
                else
                  ln c_v403864 ⇒
                    let __v403865 = word_diff_i54(ans_v403842, guess_v403851)
                    in
                    match __v403865 with
                    | (df_v403866, pf_v403867) ⇒
                      ln __v403868 ⇒
                        let c_v403869 =
                          ((fn x_v403870 ⇒
                              ln __v403871 ⇒ send(c_v403864, x_v403870))
                             df_v403866)
                            NULL
                        in
                        let c_v403872 =
                          ((fn x_v403873 ⇒ ln __v403874 ⇒ c_v403869) NULL)
                            NULL
                        in
                        (server_loop_i68(ans_v403842, repeat_v403846,
                                         c_v403872))
                          NULL
                    end)
                 c_v403858)
                NULL
          end) NULL
   else
     fn c_v403875 ⇒
       ln __v403876 ⇒
         let c_v403877 =
           ((fn x_v403878 ⇒ ln __v403879 ⇒ send(c_v403875, x_v403878))
              ans_v403842)
             NULL
         in
         let c_v403880 =
           ((fn x_v403881 ⇒ ln __v403882 ⇒ c_v403877) NULL) NULL
         in (ln __v403883 ⇒ let __v403884 = c_v403880 in NULL) NULL)
    c_v403844

val server_loopclo_i151 =
  fn ans_v403885 repeat_v403886 c_v403887 ⇒
    server_loop_i68(ans_v403885, repeat_v403886, c_v403887)

fun server_i69(c_v403888) =
  let repeat_v403889 = 6 in
  ln __v403890 ⇒
    let ans_v403891 = (rand_word_i67(NULL)) NULL in
    let c_v403892 = ((fn x_v403893 ⇒ ln __v403894 ⇒ c_v403888) NULL) NULL
    in
    let c_v403895 =
      ((fn x_v403896 ⇒ ln __v403897 ⇒ send(c_v403892, x_v403896))
         repeat_v403889)
        NULL
    in (server_loop_i68(ans_v403891, repeat_v403889, c_v403895)) NULL

val serverclo_i152 = fn c_v403898 ⇒ server_i69(c_v403898)

main =
  (ln __v403899 ⇒
     let c_v403900 =
       (ln __v403901 ⇒ fork c_v403902 in (server_i69(c_v403902)) NULL) NULL
     in
     let c0_v403903 =
       (ln __v403904 ⇒
          fork c0_v403905 in
            (ln __v403906 ⇒
               let __v403907 = (ln __v403908 ⇒ recv(c0_v403905)) NULL in
               (match __v403907 with
                | (c_v403909, c0_v403910) ⇒
                  ln __v403911 ⇒
                    let __v403912 = (player_i64(c_v403909)) NULL in
                    let c0_v403913 =
                      ((fn x_v403914 ⇒
                          ln __v403915 ⇒ send(c0_v403910, x_v403914))
                         NULL)
                        NULL
                    in
                    (ln __v403916 ⇒ let __v403917 = c0_v403913 in NULL)
                      NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v403918 =
       ((ln x_v403919 __v403920 ⇒ send(c0_v403903, x_v403919)) c_v403900)
         NULL
     in
     let __v403921 = (ln __v403922 ⇒ recv(c0_v403918)) NULL in
     (match __v403921 with
      | (__v403923, c0_v403924) ⇒ ln __v403925 ⇒ close(c0_v403924)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v405219, b2_v405220) = if b1_v405219 then
                                        b2_v405220
                                      else
                                        0

val andbclo_i99 =
  fn b1_v405221 b2_v405222 ⇒ andb_i1(b1_v405221, b2_v405222)

fun orb_i2(b1_v405223, b2_v405224) = if b1_v405223 then
                                       1
                                     else
                                       b2_v405224

val orbclo_i100 = fn b1_v405225 b2_v405226 ⇒ orb_i2(b1_v405225, b2_v405226)

fun notb_i3(b_v405227) = if b_v405227 then
                           0
                         else
                           1

val notbclo_i101 = fn b_v405228 ⇒ notb_i3(b_v405228)

fun compareb_i4(b1_v405229, b2_v405230) =
  if b1_v405229 then
    if b2_v405230 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v405230 then
      LT_c1
    else
      EQ_c3

val comparebclo_i102 =
  fn b1_v405231 b2_v405232 ⇒ compareb_i4(b1_v405231, b2_v405232)

fun lten_i5(x_v405233, y_v405234) =
  if x_v405233 then
    if y_v405234 then
      lten_i5(x_v405233.-1, y_v405234.-1)
    else
      0
  else
    1

val ltenclo_i103 = fn x_v405235 y_v405236 ⇒ lten_i5(x_v405235, y_v405236)

fun ltn_i6(x_v405237, y_v405238) = lten_i5(x_v405237.+1, y_v405238)

val ltnclo_i104 = fn x_v405239 y_v405240 ⇒ ltn_i6(x_v405239, y_v405240)

fun gten_i7(x_v405241, y_v405242) = lten_i5(y_v405242, x_v405241)

val gtenclo_i105 = fn x_v405243 y_v405244 ⇒ gten_i7(x_v405243, y_v405244)

fun gtn_i8(x_v405245, y_v405246) = ltn_i6(y_v405246, x_v405245)

val gtnclo_i106 = fn x_v405247 y_v405248 ⇒ gtn_i8(x_v405247, y_v405248)

fun eqn_i9(x_v405249, y_v405250) =
  if x_v405249 then
    if y_v405250 then
      eqn_i9(x_v405249.-1, y_v405250.-1)
    else
      0
  else
    if y_v405250 then
      0
    else
      1

val eqnclo_i107 = fn x_v405251 y_v405252 ⇒ eqn_i9(x_v405251, y_v405252)

fun comparen_i10(n1_v405253, n2_v405254) =
  if n1_v405253 then
    if n2_v405254 then
      comparen_i10(n1_v405253.-1, n2_v405254.-1)
    else
      GT_c2
  else
    if n2_v405254 then
      LT_c1
    else
      EQ_c3

val comparenclo_i108 =
  fn n1_v405255 n2_v405256 ⇒ comparen_i10(n1_v405255, n2_v405256)

fun pred_i11(x_v405257) = if x_v405257 then
                            x_v405257.-1
                          else
                            0

val predclo_i109 = fn x_v405258 ⇒ pred_i11(x_v405258)

fun addn_i12(x_v405259, y_v405260) =
  if x_v405259 then
    addn_i12(x_v405259.-1, y_v405260).+1
  else
    y_v405260

val addnclo_i110 = fn x_v405261 y_v405262 ⇒ addn_i12(x_v405261, y_v405262)

fun subn_i13(x_v405263, y_v405264) =
  if y_v405264 then
    subn_i13(pred_i11(x_v405263), y_v405264.-1)
  else
    x_v405263

val subnclo_i111 = fn x_v405265 y_v405266 ⇒ subn_i13(x_v405265, y_v405266)

fun muln_i14(x_v405267, y_v405268) =
  if x_v405267 then
    addn_i12(y_v405268, muln_i14(x_v405267.-1, y_v405268))
  else
    0

val mulnclo_i112 = fn x_v405269 y_v405270 ⇒ muln_i14(x_v405269, y_v405270)

fun divn_i15(x_v405271, y_v405272) =
  if ltn_i6(x_v405271, y_v405272) then
    0
  else
    divn_i15(subn_i13(x_v405271, y_v405272), y_v405272).+1

val divnclo_i113 = fn x_v405273 y_v405274 ⇒ divn_i15(x_v405273, y_v405274)

fun modn_i16(x_v405275, y_v405276) =
  subn_i13(x_v405275, muln_i14(divn_i15(x_v405275, y_v405276), y_v405276))

val modnclo_i114 = fn x_v405277 y_v405278 ⇒ modn_i16(x_v405277, y_v405278)

fun eqc_i17(c1_v405279, c2_v405280) =
  match c1_v405279 with
  | Char_c5 n1_v405281 ⇒
    match c2_v405280 with
    | Char_c5 n2_v405282 ⇒ eqn_i9(n1_v405281, n2_v405282)
    end
  end

val eqcclo_i115 =
  fn c1_v405283 c2_v405284 ⇒ eqc_i17(c1_v405283, c2_v405284)

fun comparec_i18(c1_v405285, c2_v405286) =
  match c1_v405285 with
  | Char_c5 n1_v405287 ⇒
    match c2_v405286 with
    | Char_c5 n2_v405288 ⇒ comparen_i10(n1_v405287, n2_v405288)
    end
  end

val comparecclo_i116 =
  fn c1_v405289 c2_v405290 ⇒ comparec_i18(c1_v405289, c2_v405290)

fun cats_i19(s1_v405291, s2_v405292) =
  match s1_v405291 with
  | EmptyString_c6  ⇒ s2_v405292
  | String_c7 c_v405293 s1_v405294 ⇒
    (String_c7 c_v405293 cats_i19(s1_v405294, s2_v405292))
  end

val catsclo_i117 =
  fn s1_v405295 s2_v405296 ⇒ cats_i19(s1_v405295, s2_v405296)

fun strlen_i20(s_v405297) =
  match s_v405297 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v405298 s_v405299 ⇒ strlen_i20(s_v405299).+1
  end

val strlenclo_i118 = fn s_v405300 ⇒ strlen_i20(s_v405300)

fun eqs_i21(s1_v405301, s2_v405302) =
  match s1_v405301 with
  | EmptyString_c6  ⇒
    match s2_v405302 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v405303 __v405304 ⇒ 0
    end
  | String_c7 c1_v405305 s1_v405306 ⇒
    match s2_v405302 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v405307 s2_v405308 ⇒
      andb_i1(eqc_i17(c1_v405305, c2_v405307),
              eqs_i21(s1_v405306, s2_v405308))
    end
  end

val eqsclo_i119 =
  fn s1_v405309 s2_v405310 ⇒ eqs_i21(s1_v405309, s2_v405310)

fun compares_i22(s1_v405311, s2_v405312) =
  match s1_v405311 with
  | EmptyString_c6  ⇒
    match s2_v405312 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v405313 __v405314 ⇒ LT_c1
    end
  | String_c7 c1_v405315 s1_v405316 ⇒
    match s2_v405312 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v405317 s2_v405318 ⇒
      match comparec_i18(c1_v405315, c2_v405317) with
      | EQ_c3  ⇒ compares_i22(s1_v405316, s2_v405318) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i120 =
  fn s1_v405319 s2_v405320 ⇒ compares_i22(s1_v405319, s2_v405320)

fun and_thenUUU_i78(A_v405321, B_v405322, opt_v405323, f_v405324) =
  match opt_v405323 with
  | NoneUU_c26  ⇒ NoneUU_c26
  | SomeUU_c27 x_v405325 ⇒ (f_v405324) x_v405325
  end

val and_thenUUUclo_i121 =
  fn A_v405326 B_v405327 opt_v405328 ⇒
    ln f_v405329 ⇒
      and_thenUUU_i78(A_v405326, B_v405327, opt_v405328, f_v405329)

fun and_thenUUL_i77(A_v405330, B_v405331, opt_v405332, f_v405333) =
  match opt_v405332 with
  | NoneUL_c24  ⇒ NoneUL_c24
  | SomeUL_c25 x_v405334 ⇒ (f_v405333) x_v405334
  end

val and_thenUULclo_i122 =
  fn A_v405335 B_v405336 opt_v405337 ⇒
    ln f_v405338 ⇒
      and_thenUUL_i77(A_v405335, B_v405336, opt_v405337, f_v405338)

fun and_thenULU_i76(A_v405339, B_v405340, opt_v405341, f_v405342) =
  match opt_v405341 with
  | NoneUU_c26  ⇒ NoneLU_c22
  | SomeUU_c27 x_v405343 ⇒ (f_v405342) x_v405343
  end

val and_thenULUclo_i123 =
  fn A_v405344 B_v405345 opt_v405346 ⇒
    ln f_v405347 ⇒
      and_thenULU_i76(A_v405344, B_v405345, opt_v405346, f_v405347)

fun and_thenULL_i75(A_v405348, B_v405349, opt_v405350, f_v405351) =
  match opt_v405350 with
  | NoneUL_c24  ⇒ NoneLL_c20
  | SomeUL_c25 x_v405352 ⇒ (f_v405351) x_v405352
  end

val and_thenULLclo_i124 =
  fn A_v405353 B_v405354 opt_v405355 ⇒
    ln f_v405356 ⇒
      and_thenULL_i75(A_v405353, B_v405354, opt_v405355, f_v405356)

fun and_thenLUL_i73(A_v405357, B_v405358, opt_v405359, f_v405360) =
  match opt_v405359 with
  | NoneLL_c20  ⇒ NoneUL_c24
  | SomeLL_c21 x_v405361 ⇒ (f_v405360) x_v405361
  end

val and_thenLULclo_i125 =
  fn A_v405362 B_v405363 opt_v405364 ⇒
    ln f_v405365 ⇒
      and_thenLUL_i73(A_v405362, B_v405363, opt_v405364, f_v405365)

fun and_thenLLL_i71(A_v405366, B_v405367, opt_v405368, f_v405369) =
  match opt_v405368 with
  | NoneLL_c20  ⇒ NoneLL_c20
  | SomeLL_c21 x_v405370 ⇒ (f_v405369) x_v405370
  end

val and_thenLLLclo_i126 =
  fn A_v405371 B_v405372 opt_v405373 ⇒
    ln f_v405374 ⇒
      and_thenLLL_i71(A_v405371, B_v405372, opt_v405373, f_v405374)

fun lenUU_i86(A_v405375, xs_v405376) =
  match xs_v405376 with
  | nilUU_c34  ⇒ (0, nilUU_c34)
  | consUU_c35 x_v405377 xs_v405378 ⇒
    match lenUU_i86(NULL, xs_v405378) with
    | (n_v405379, xs_v405380) ⇒
      (n_v405379.+1, (consUU_c35 x_v405377 xs_v405380))
    end
  end

val lenUUclo_i127 =
  fn A_v405381 xs_v405382 ⇒ lenUU_i86(A_v405381, xs_v405382)

fun lenUL_i85(A_v405383, xs_v405384) =
  match xs_v405384 with
  | nilUL_c32  ⇒ (0, nilUL_c32)
  | consUL_c33 x_v405385 xs_v405386 ⇒
    match lenUL_i85(NULL, xs_v405386) with
    | (n_v405387, xs_v405388) ⇒
      (n_v405387.+1, (consUL_c33 x_v405385 xs_v405388))
    end
  end

val lenULclo_i128 =
  fn A_v405389 xs_v405390 ⇒ lenUL_i85(A_v405389, xs_v405390)

fun lenLL_i83(A_v405391, xs_v405392) =
  match xs_v405392 with
  | nilLL_c28  ⇒ (0, nilLL_c28)
  | consLL_c29 x_v405393 xs_v405394 ⇒
    match lenLL_i83(NULL, xs_v405394) with
    | (n_v405395, xs_v405396) ⇒
      (n_v405395.+1, (consLL_c29 x_v405393 xs_v405396))
    end
  end

val lenLLclo_i129 =
  fn A_v405397 xs_v405398 ⇒ lenLL_i83(A_v405397, xs_v405398)

fun appendUU_i90(A_v405399, xs_v405400, ys_v405401) =
  match xs_v405400 with
  | nilUU_c34  ⇒ ys_v405401
  | consUU_c35 x_v405402 xs_v405403 ⇒
    (consUU_c35 x_v405402 appendUU_i90(NULL, xs_v405403, ys_v405401))
  end

val appendUUclo_i130 =
  fn A_v405404 xs_v405405 ⇒
    ln ys_v405406 ⇒ appendUU_i90(A_v405404, xs_v405405, ys_v405406)

fun appendUL_i89(A_v405407, xs_v405408, ys_v405409) =
  match xs_v405408 with
  | nilUL_c32  ⇒ ys_v405409
  | consUL_c33 x_v405410 xs_v405411 ⇒
    (consUL_c33 x_v405410 appendUL_i89(NULL, xs_v405411, ys_v405409))
  end

val appendULclo_i131 =
  fn A_v405412 xs_v405413 ⇒
    ln ys_v405414 ⇒ appendUL_i89(A_v405412, xs_v405413, ys_v405414)

fun appendLL_i87(A_v405415, xs_v405416, ys_v405417) =
  match xs_v405416 with
  | nilLL_c28  ⇒ ys_v405417
  | consLL_c29 x_v405418 xs_v405419 ⇒
    (consLL_c29 x_v405418 appendLL_i87(NULL, xs_v405419, ys_v405417))
  end

val appendLLclo_i132 =
  fn A_v405420 xs_v405421 ⇒
    ln ys_v405422 ⇒ appendLL_i87(A_v405420, xs_v405421, ys_v405422)

fun readline_i33(__v405423) =
  ln __v405424 ⇒
    let ch_v405425 = open stdin in
    let ch_v405426 = send(ch_v405425, 1) in
    let __v405427 = recv(ch_v405426) in
    match __v405427 with
    | (s_v405428, ch_v405429) ⇒
      let ch_v405430 = send(ch_v405429, 0) in s_v405428
    end

val readlineclo_i133 = fn __v405431 ⇒ readline_i33(__v405431)

fun print_i34(s_v405432) =
  ln __v405433 ⇒
    let ch_v405434 = open stdout in
    let ch_v405435 = send(ch_v405434, 1) in
    let ch_v405436 = send(ch_v405435, s_v405432) in
    let ch_v405437 = send(ch_v405436, 0) in NULL

val printclo_i134 = fn s_v405438 ⇒ print_i34(s_v405438)

fun prerr_i35(s_v405439) =
  ln __v405440 ⇒
    let ch_v405441 = open stderr in
    let ch_v405442 = send(ch_v405441, 1) in
    let ch_v405443 = send(ch_v405442, s_v405439) in
    let ch_v405444 = send(ch_v405443, 0) in NULL

val prerrclo_i135 = fn s_v405445 ⇒ prerr_i35(s_v405445)

val digits_i36 =
  (consUU_c35
    "0"
    (consUU_c35
      "1"
      (consUU_c35
        "2"
        (consUU_c35
          "3"
          (consUU_c35
            "4"
            (consUU_c35
              "5"
              (consUU_c35
                "6"
                (consUU_c35 "7" (consUU_c35 "8" (consUU_c35 "9" nilUU_c34))))))))))

fun get_at_i37(A_v405446, n_v405447, xs_v405448, a_v405449) =
  if n_v405447 then
    match xs_v405448 with
    | nilUU_c34  ⇒ a_v405449
    | consUU_c35 __v405450 xs_v405451 ⇒
      get_at_i37(NULL, n_v405447.-1, xs_v405451, a_v405449)
    end
  else
    match xs_v405448 with
    | nilUU_c34  ⇒ a_v405449 | consUU_c35 x_v405452 __v405453 ⇒ x_v405452
    end

val get_atclo_i136 =
  fn A_v405454 n_v405455 xs_v405456 a_v405457 ⇒
    get_at_i37(A_v405454, n_v405455, xs_v405456, a_v405457)

fun string_of_digit_i38(n_v405458) =
  get_at_i37(NULL, n_v405458, digits_i36, EmptyString_c6)

val string_of_digitclo_i137 = fn n_v405459 ⇒ string_of_digit_i38(n_v405459)

fun string_of_nat_i39(n_v405460) =
  let s_v405461 = string_of_digit_i38(modn_i16(n_v405460, 10)) in
  let n_v405462 = divn_i15(n_v405460, 10) in
  if ltn_i6(0, n_v405462) then
    cats_i19(string_of_nat_i39(n_v405462), s_v405461)
  else
    s_v405461

val string_of_natclo_i138 = fn n_v405463 ⇒ string_of_nat_i39(n_v405463)

fun digit_of_char_i40(c_v405464) =
  if eqc_i17(c_v405464, '0') then
    (SomeUL_c25 0)
  else
    if eqc_i17(c_v405464, '1') then
      (SomeUL_c25 1)
    else
      if eqc_i17(c_v405464, '2') then
        (SomeUL_c25 2)
      else
        if eqc_i17(c_v405464, '3') then
          (SomeUL_c25 3)
        else
          if eqc_i17(c_v405464, '4') then
            (SomeUL_c25 4)
          else
            if eqc_i17(c_v405464, '5') then
              (SomeUL_c25 5)
            else
              if eqc_i17(c_v405464, '6') then
                (SomeUL_c25 6)
              else
                if eqc_i17(c_v405464, '7') then
                  (SomeUL_c25 7)
                else
                  if eqc_i17(c_v405464, '8') then
                    (SomeUL_c25 8)
                  else
                    if eqc_i17(c_v405464, '9') then
                      (SomeUL_c25 9)
                    else
                      NoneUL_c24

val digit_of_charclo_i139 = fn c_v405465 ⇒ digit_of_char_i40(c_v405465)

fun nat_of_string_loop_i41(s_v405466, acc_v405467) =
  match s_v405466 with
  | EmptyString_c6  ⇒ (SomeUL_c25 acc_v405467)
  | String_c7 c_v405468 s_v405469 ⇒
    match digit_of_char_i40(c_v405468) with
    | NoneUL_c24  ⇒ NoneUL_c24
    | SomeUL_c25 n_v405470 ⇒
      nat_of_string_loop_i41(s_v405469,
                             addn_i12(muln_i14(acc_v405467, 10), n_v405470))
    end
  end

val nat_of_string_loopclo_i140 =
  fn s_v405471 acc_v405472 ⇒ nat_of_string_loop_i41(s_v405471, acc_v405472)

fun nat_of_string_i42(s_v405473) = nat_of_string_loop_i41(s_v405473, 0)

val nat_of_stringclo_i141 = fn s_v405474 ⇒ nat_of_string_i42(s_v405474)

fun contains_i51(c_v405475, s_v405476) =
  match s_v405476 with
  | EmptyString_c6  ⇒ 0
  | String_c7 c0_v405477 s_v405478 ⇒
    if eqc_i17(c_v405475, c0_v405477) then
      1
    else
      contains_i51(c_v405475, s_v405478)
  end

val containsclo_i142 =
  fn c_v405479 s_v405480 ⇒ contains_i51(c_v405479, s_v405480)

fun string_diff_i52(ans_v405481, s1_v405482, s2_v405483) =
  match s1_v405482 with
  | EmptyString_c6  ⇒
    match s2_v405483 with
    | EmptyString_c6  ⇒ fn e_v405484 ⇒ (EmptyString_c6, NULL)
    | String_c7 c2_v405485 s2_v405486 ⇒ fn e_v405487 ⇒ NULL
    end
  | String_c7 c1_v405488 s1_v405489 ⇒
    match s2_v405483 with
    | EmptyString_c6  ⇒ fn e_v405490 ⇒ NULL
    | String_c7 c2_v405491 s2_v405492 ⇒
      fn e_v405493 ⇒
        let __v405494 =
          ((((string_diffclo_i143) ans_v405481) s1_v405489) s2_v405492) NULL
        in
        match __v405494 with
        | (df_v405495, pf_v405496) ⇒
          (if eqc_i17(c1_v405488, c2_v405491) then
             fn e1_v405497 ⇒ (cats_i19("Y", df_v405495), NULL)
           else
             fn e1_v405498 ⇒
               (if contains_i51(c2_v405491, ans_v405481) then
                  fn e2_v405499 ⇒ (cats_i19("I", df_v405495), NULL)
                else
                  fn e2_v405500 ⇒ (cats_i19("N", df_v405495), NULL))
                 NULL)
            NULL
        end
    end
  end

val string_diffclo_i143 =
  fn ans_v405501 s1_v405502 s2_v405503 ⇒
    string_diff_i52(ans_v405501, s1_v405502, s2_v405503)

fun word_diff_i54(ans_v405504, guess_v405505) =
  match ans_v405504 with
  | Word_c16 s1_v405506 pf1_v405507 ⇒
    match guess_v405505 with
    | Word_c16 s2_v405508 pf2_v405509 ⇒
      let __v405510 =
        ((((string_diffclo_i143) s1_v405506) s1_v405506) s2_v405508) NULL
      in
      match __v405510 with
      | (s3_v405511, h_v405512) ⇒ ((Word_c16 s3_v405511 NULL), NULL)
      end
    end
  end

val word_diffclo_i144 =
  fn ans_v405513 guess_v405514 ⇒ word_diff_i54(ans_v405513, guess_v405514)

fun eqw_i55(w1_v405515, w2_v405516) =
  match w1_v405515 with
  | Word_c16 s1_v405517 __v405518 ⇒
    match w2_v405516 with
    | Word_c16 s2_v405519 __v405520 ⇒ eqs_i21(s1_v405517, s2_v405519)
    end
  end

val eqwclo_i145 =
  fn w1_v405521 w2_v405522 ⇒ eqw_i55(w1_v405521, w2_v405522)

fun read_word_i62(__v405523) =
  ln __v405524 ⇒
    let s_v405525 = (readline_i33(NULL)) NULL in
    ((if eqn_i9(strlen_i20(s_v405525), 5) then
        fn e_v405526 ⇒ ln __v405527 ⇒ (Word_c16 s_v405525 NULL)
      else
        fn __v405528 ⇒
          ln __v405529 ⇒
            let __v405530 =
              (print_i34("please input a word with length of 5\n")) NULL
            in (read_word_i62(NULL)) NULL)
       NULL)
      NULL

val read_wordclo_i146 = fn __v405531 ⇒ read_word_i62(__v405531)

fun player_loop_i63(ans_v405532, repeat_v405533, c_v405534) =
  (if repeat_v405533 then
     fn c_v405535 ⇒
       ln __v405536 ⇒
         let guess_v405537 = (read_word_i62(NULL)) NULL in
         let c_v405538 = send(c_v405535, guess_v405537) in
         let __v405539 = recv(c_v405538) in
         match __v405539 with
         | (b_v405540, c_v405541) ⇒
           match (NULL, c_v405541) with
           | (pf_v405542, c_v405543) ⇒
             ((if b_v405540 then
                 ln c_v405544 __v405545 ⇒
                   let __v405546 = (print_i34("You Win!\n")) NULL in
                   close(c_v405544)
               else
                 ln c_v405547 __v405548 ⇒
                   let __v405549 = recv(c_v405547) in
                   match __v405549 with
                   | (diff_v405550, c_v405551) ⇒
                     match (NULL, c_v405551) with
                     | (pf_v405552, c_v405553) ⇒
                       match diff_v405550 with
                       | Word_c16 s_v405554 __v405555 ⇒
                         let __v405556 =
                           (print_i34(cats_i19(cats_i19(cats_i19(cats_i19(
                                                                 "Incorrect, hint: ",
                                                                 s_v405554),
                                                                 ". You have "),
                                                        string_of_nat_i39(
                                                        repeat_v405533.-1)),
                                               " more tries.\n")))
                             NULL
                         in
                         (player_loop_i63(NULL, repeat_v405533.-1, c_v405553))
                           NULL
                       end
                     end
                   end)
                c_v405543)
               NULL
           end
         end
   else
     fn c_v405557 ⇒
       ln __v405558 ⇒
         let __v405559 = recv(c_v405557) in
         match __v405559 with
         | (ans_v405560, c_v405561) ⇒
           match (NULL, c_v405561) with
           | (pf_v405562, c_v405563) ⇒
             match ans_v405560 with
             | Word_c16 s_v405564 __v405565 ⇒
               let __v405566 =
                 (print_i34(cats_i19(cats_i19("You Lose! The answer is ",
                                              s_v405564),
                                     ".\n")))
                   NULL
               in close(c_v405563)
             end
           end
         end)
    c_v405534

val player_loopclo_i147 =
  fn ans_v405567 repeat_v405568 c_v405569 ⇒
    player_loop_i63(ans_v405567, repeat_v405568, c_v405569)

fun player_i64(c_v405570) =
  ln __v405571 ⇒
    match (NULL, c_v405570) with
    | (ans_v405572, c_v405573) ⇒
      let __v405574 = recv(c_v405573) in
      match __v405574 with
      | (repeat_v405575, c_v405576) ⇒
        let __v405577 = (print_i34("Wordle Game\n")) NULL in
        let __v405578 =
          (print_i34("Please guess a word of length 5.\n")) NULL
        in
        let __v405579 =
          (print_i34(cats_i19(cats_i19("You have ",
                                       string_of_nat_i39(repeat_v405575)),
                              " tries.\n")))
            NULL
        in (player_loop_i63(NULL, repeat_v405575, c_v405576)) NULL
      end
    end

val playerclo_i148 = fn c_v405580 ⇒ player_i64(c_v405580)

fun get_at_i66(A_v405581, n_v405582, xs_v405583) =
  match xs_v405583 with
  | nilUU_c34  ⇒ fn e_v405584 ⇒ NULL
  | consUU_c35 x_v405585 xs_v405586 ⇒
    if n_v405582 then
      fn e_v405587 ⇒
        let __v405588 =
          ((((get_atclo_i149) NULL) n_v405582.-1) xs_v405586) NULL
        in
        match __v405588 with
        | (x0_v405589, pf_v405590) ⇒ (x0_v405589, NULL)
        end
    else
      fn e_v405591 ⇒ (x_v405585, NULL)
  end

val get_atclo_i149 =
  fn A_v405592 n_v405593 xs_v405594 ⇒
    get_at_i66(A_v405592, n_v405593, xs_v405594)

fun rand_word_i67(__v405595) =
  ln __v405596 ⇒
    let r_v405597 = rand(0, 19) in
    match r_v405597 with
    | Between_c4 n_v405598 __v405599 pf_v405600 ⇒
      let __v405601 =
        ((((get_atclo_i149) NULL) n_v405598)
           (consUU_c35
             (Word_c16 "route" NULL)
             (consUU_c35
               (Word_c16 "crash" NULL)
               (consUU_c35
                 (Word_c16 "clown" NULL)
                 (consUU_c35
                   (Word_c16 "shaky" NULL)
                   (consUU_c35
                     (Word_c16 "vegan" NULL)
                     (consUU_c35
                       (Word_c16 "power" NULL)
                       (consUU_c35
                         (Word_c16 "trust" NULL)
                         (consUU_c35
                           (Word_c16 "enjoy" NULL)
                           (consUU_c35
                             (Word_c16 "brain" NULL)
                             (consUU_c35
                               (Word_c16 "adopt" NULL)
                               (consUU_c35
                                 (Word_c16 "tower" NULL)
                                 (consUU_c35
                                   (Word_c16 "shade" NULL)
                                   (consUU_c35
                                     (Word_c16 "delay" NULL)
                                     (consUU_c35
                                       (Word_c16 "twist" NULL)
                                       (consUU_c35
                                         (Word_c16 "alert" NULL)
                                         (consUU_c35
                                           (Word_c16 "choke" NULL)
                                           (consUU_c35
                                             (Word_c16 "split" NULL)
                                             (consUU_c35
                                               (Word_c16 "rhyme" NULL)
                                               (consUU_c35
                                                 (Word_c16 "muddy" NULL)
                                                 (consUU_c35
                                                   (Word_c16 "plant" NULL)
                                                   nilUU_c34)))))))))))))))))))))
          NULL
      in match __v405601 with
         | (w_v405602, __v405603) ⇒ w_v405602
         end
    end

val rand_wordclo_i150 = fn __v405604 ⇒ rand_word_i67(__v405604)

fun server_loop_i68(ans_v405605, repeat_v405606, c_v405607) =
  (if repeat_v405606 then
     fn c_v405608 ⇒
       ln __v405609 ⇒
         let __v405610 = recv(c_v405608) in
         match __v405610 with
         | (guess_v405611, c_v405612) ⇒
           let b_v405613 = eqw_i55(ans_v405605, guess_v405611) in
           let c_v405614 = send(c_v405612, b_v405613) in
           ((if b_v405613 then
               ln c_v405615 __v405616 ⇒ NULL
             else
               ln c_v405617 ⇒
                 let __v405618 = word_diff_i54(ans_v405605, guess_v405611) in
                 match __v405618 with
                 | (df_v405619, pf_v405620) ⇒
                   ln __v405621 ⇒
                     let c_v405622 = send(c_v405617, df_v405619) in
                     (server_loop_i68(ans_v405605, repeat_v405606.-1,
                                      c_v405622))
                       NULL
                 end)
              c_v405614)
             NULL
         end
   else
     fn c_v405623 ⇒
       ln __v405624 ⇒ let c_v405625 = send(c_v405623, ans_v405605) in NULL)
    c_v405607

val server_loopclo_i151 =
  fn ans_v405626 repeat_v405627 c_v405628 ⇒
    server_loop_i68(ans_v405626, repeat_v405627, c_v405628)

fun server_i69(c_v405629) =
  ln __v405630 ⇒
    let ans_v405631 = (rand_word_i67(NULL)) NULL in
    let c_v405632 = send(c_v405629, 6) in
    (server_loop_i68(ans_v405631, 6, c_v405632)) NULL

val serverclo_i152 = fn c_v405633 ⇒ server_i69(c_v405633)

main =
  let c_v405634 = fork c_v405635 in (server_i69(c_v405635)) NULL in
  let c0_v405636 =
    fork c0_v405637 in
      let __v405638 = recv(c0_v405637) in
      match __v405638 with
      | (c_v405639, c0_v405640) ⇒
        let __v405641 = (player_i64(c_v405639)) NULL in
        let c0_v405642 = send(c0_v405640, NULL) in NULL
      end
  in
  let c0_v405643 = send(c0_v405636, c_v405634) in
  let __v405644 = recv(c0_v405643) in
  match __v405644 with
  | (__v405645, c0_v405646) ⇒ close(c0_v405646)
  end

trans3e success--------------------------

trans34 success--------------------------

