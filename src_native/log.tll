program digits‹› : ((list‹_, U›) (_)) = ((cons)
(((String) (((Char) (O.+48))) (EmptyString)))
(((cons) (((String) (((Char) (O.+49))) (EmptyString)))
 (((cons) (((String) (((Char) (O.+50))) (EmptyString)))
  (((cons) (((String) (((Char) (O.+51))) (EmptyString)))
   (((cons) (((String) (((Char) (O.+52))) (EmptyString)))
    (((cons) (((String) (((Char) (O.+53))) (EmptyString)))
     (((cons) (((String) (((Char) (O.+54))) (EmptyString)))
      (((cons) (((String) (((Char) (O.+55))) (EmptyString)))
       (((cons) (((String) (((Char) (O.+56))) (EmptyString)))
        (((cons) (((String) (((Char) (O.+57))) (EmptyString))) (nil))))))))))))))))))))

program get_at‹› {A : U} (n : nat) (xs : ((list‹_, U›)
(A))) (a : A) : A = match n as _ in _ with O ⇒ match xs as _ in _ with nil  ⇒ a | cons x
_ ⇒ x | S n ⇒ match xs as _ in _ with nil  ⇒ a | cons _
xs ⇒ ((get_at) (_) (n) (xs)
(a))

program string_of_digit‹› (n : nat) : string = ((get_at) (_) (n) 
(digits)
(EmptyString))

program string_of_nat‹› (n : nat) : string = let s = ((string_of_digit)
(((modn) (n) (O.+10)))) in let n = ((divn) (n) (O.+10)) in match ((ltn)
(O.+0) (n)) as _ in _ with true ⇒ ((cats) (((string_of_nat) (n)))
(s)) | false ⇒ s

logical gcd‹› (a : nat) (b : nat) : nat = match b as _ in _ with O ⇒ a | S _ ⇒ (
(gcd) (b)
(((modn) (a) (b))))

program powm‹› (a : nat) (b : nat) (m : nat) : nat = match b as _ in _ with O ⇒ O.+1 | S b ⇒ (
(modn) (((muln) (a) (((powm) (a) (b) (m)))))
(m))

logical coprime‹› (a : nat) (b : nat) : U = ((gcd) (a)
(b)) ≡ O.+1

logical RSA‹› : proto = !{x : nat} → !{y : nat} → !(n : nat) → !{_ : n ≡ (
(muln) (x) (y))} → !{tot : nat} → !{_ : tot ≡ ((muln)
(((subn) (x) (O.+1)))
(((subn) (y) (O.+1))))} → !(e : nat) → !{_ : ((coprime) (e)
(tot))} → !{_ : ((ltn) (O.+1) (e)) ≡ true} → !{_ : ((ltn) (e)
(tot)) ≡ true} → ?{P0 : nat} → ?(C : nat) → ?{_ : C ≡ ((powm) 
(P0) (e)
(n))} → end

logical RSA_ch‹› : L = ch‹RSA›

logical RSA_hc‹› : L = hc‹RSA›

program client‹› (ch : RSA_hc) : IO unit = let P0 = O.+123 in let ⟨{x}, ch⟩ ⇐ recv ch in let ⟨{y}, ch⟩ ⇐ recv ch in let ⟨n, ch⟩ ⇐ recv ch in let ⟨{pf1}, ch⟩ ⇐ recv ch in let ⟨{tot}, ch⟩ ⇐ recv ch in let ⟨{pf2}, ch⟩ ⇐ recv ch in let ⟨e, ch⟩ ⇐ recv ch in let ⟨{pf3}, ch⟩ ⇐ recv ch in let ⟨{pf4}, ch⟩ ⇐ recv ch in let ⟨{pf5}, ch⟩ ⇐ recv ch in let ch ⇐ (
(send ch) (P0)) in let ch ⇐ ((send ch)
(((powm) (P0) (e) (n)))) in let ch ⇐ ((send ch)
(refl)) in close ch

program server‹› (ch : RSA_ch) : IO unit = let x = O.+7 in let y = O.+19 in let n = (
(muln) (x) (y)) in let tot = ((muln) (((subn) (x) (O.+1)))
(((subn) (y) (O.+1)))) in let e = O.+5 in let d = O.+65 in let ch ⇐ (
(send ch) (x)) in let ch ⇐ ((send ch) (y)) in let ch ⇐ ((send ch)
(n)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(tot)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(e)) in let ch ⇐ ((send ch) (refl)) in let ch ⇐ ((send ch)
(refl)) in let ch ⇐ ((send ch)
(refl)) in let ⟨{P0}, ch⟩ ⇐ recv ch in let ⟨C, ch⟩ ⇐ recv ch in let ⟨{pf}, ch⟩ ⇐ recv ch in let P1 = (
(powm) (C) (d) (n)) in let _ ⇐ close ch in ((print)
(((cats) (((string_of_nat) (P1)))
 (((String) (((Char) (O.+10))) (EmptyString))))))

program main‹› : IO unit = let c ⇐ fork (c : RSA_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : RSA_hc) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ close c0 in (
(client) (c)) in let c0 ⇐ ((send c0)
(c)) in let _ ⇐ close c0 in sleep O.+1

parsing success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v254 : bool) (b2_v255 : bool) ⇒
    match b1_v254 as __v256 in ??1 with
    | true ⇒ b2_v255 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v259 : bool) (b2_v260 : bool) ⇒
    match b1_v259 as __v261 in ??2 with
    | true ⇒ true | false ⇒ b2_v260
    end

program notb_i3 : bool → bool =
  fn (b_v263 : bool) ⇒
    match b_v263 as __v264 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v267 : nat) (y_v268 : nat) ⇒
    match x_v267 as __v269 in ??4 with
    | O ⇒ true
    | S x_v270 ⇒
      match y_v268 as __v271 in ??5 with
      | O ⇒ false | S y_v272 ⇒ (lten_i4 x_v270 y_v272)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v275 : nat) (y_v276 : nat) ⇒
    match x_v275 as __v277 in ??6 with
    | O ⇒
      match y_v276 as __v278 in ??8 with
      | O ⇒ true | S __v279 ⇒ false
      end
    | S x_v280 ⇒
      match y_v276 as __v281 in ??7 with
      | O ⇒ true | S y_v282 ⇒ (gten_i5 x_v280 y_v282)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v285 : nat) (y_v286 : nat) ⇒
    match x_v285 as __v287 in ??9 with
    | O ⇒
      match y_v286 as __v288 in ??11 with
      | O ⇒ false | S y_v289 ⇒ true
      end
    | S x_v290 ⇒
      match y_v286 as __v291 in ??10 with
      | O ⇒ false | S y_v292 ⇒ (ltn_i6 x_v290 y_v292)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v295 : nat) (y_v296 : nat) ⇒
    match x_v295 as __v297 in ??12 with
    | O ⇒ false
    | S x_v298 ⇒
      match y_v296 as __v299 in ??13 with
      | O ⇒ true | S y_v300 ⇒ (gtn_i7 x_v298 y_v300)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v303 : nat) (y_v304 : nat) ⇒
    match x_v303 as __v305 in ??14 with
    | O ⇒
      match y_v304 as __v306 in ??16 with
      | O ⇒ true | S __v307 ⇒ false
      end
    | S x_v308 ⇒
      match y_v304 as __v309 in ??15 with
      | O ⇒ false | S y_v310 ⇒ (eqn_i8 x_v308 y_v310)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v312 : nat) ⇒
    match x_v312 as __v313 in ??17 with
    | O ⇒ 0 | S x_v314 ⇒ x_v314
    end

program addn_i10 : nat → nat → nat =
  fn (x_v317 : nat) (y_v318 : nat) ⇒
    match x_v317 as __v319 in ??18 with
    | O ⇒ y_v318 | S x_v320 ⇒ (addn_i10 x_v320 y_v318).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v323 : nat) (y_v324 : nat) ⇒
    match y_v324 as __v325 in ??19 with
    | O ⇒ x_v323 | S y_v326 ⇒ (subn_i11 (pred_i9 x_v323) y_v326)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v329 : nat) (y_v330 : nat) ⇒
    match x_v329 as __v331 in ??20 with
    | O ⇒ 0 | S x_v332 ⇒ (addn_i10 y_v330 (muln_i12 x_v332 y_v330))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v335 : nat) (y_v336 : nat) ⇒
    match (ltn_i6 x_v335 y_v336) as __v337 in ??21 with
    | true ⇒ 0 | false ⇒ (divn_i13 (subn_i11 x_v335 y_v336) y_v336).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v340 : nat) (y_v341 : nat) ⇒
    (subn_i11 x_v340 (muln_i12 (divn_i13 x_v340 y_v341) y_v341))

inductive char_d1 : U =
| Char_c1 of (n_v342 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v343 : char_d1) (s_v344 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v347 : string_d2) (s2_v348 : string_d2) ⇒
    match s1_v347 as __v349 in ??22 with
    | EmptyString_c2  ⇒ s2_v348
    | String_c3 c_v350 s1_v351 ⇒
      (String_c3‹› c_v350 (cats_i15 s1_v351 s2_v348))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v353 : string_d2) ⇒
    match s_v353 as __v354 in ??23 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v355 s_v356 ⇒ (strlen_i16 s_v356).+1
    end

inductive list_d3 ‹s_s357, t_s358›
  (A_v359 : Type‹s_s357›) : Type‹t_s358›
=
| nil_c4 of
    ‹s_s360, t_s361› (A_v362 : Type‹s_s360›)
    : (list_d3‹s_s360, t_s361› A_v362)
| cons_c5 of
    ‹s_s363, t_s364› (A_v365 : Type‹s_s363›) (hd_v366 : A_v365)
    (tl_v367 : (list_d3‹s_s363, t_s364› A_v365))
    : (list_d3‹s_s363, t_s364› A_v365)

program len_i17 ‹s_s368, t_s369› :
  ∀ {A_v370 : Type‹s_s368›} →
    (list_d3‹??24, t_s369› A_v370) →
      nat ⊗ (list_d3‹??25, t_s369› A_v370)
=
  fn {A_v373 : Type‹s_s368›}
     (xs_v374 : (list_d3‹??24, t_s369› A_v373)) ⇒
    match xs_v374 as __v375 in ??26 with
    | nil_c4  ⇒ ⟨0, nil_c4‹??36, ??35›⟩
    | cons_c5 x_v376 xs_v377 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v377) as __v378 in ??30 with
      | ⟨n_v379, xs_v380⟩ ⇒
        ⟨n_v379.+1, (cons_c5‹??33, ??32› x_v376 xs_v380)⟩
      end
    end

program append_i18 ‹s_s381, t_s382› :
  ∀ {A_v383 : Type‹s_s381›} →
    (list_d3‹??37, t_s382› A_v383) →
      (list_d3‹??38, t_s382› A_v383) ⊸ (list_d3‹??40, ??39› A_v383)
=
  fn {A_v386 : Type‹s_s381›}
     (xs_v387 : (list_d3‹??37, t_s382› A_v386)) ⇒
    ln (ys_v388 : ??41) ⇒
      match xs_v387 as __v389 in ??42 with
      | nil_c4  ⇒ ys_v388
      | cons_c5 x_v390 xs_v391 ⇒
        (cons_c5‹??48, ??47›
          x_v390 (append_i18‹??45, ??44› ??43 xs_v391 ys_v388))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v393 : unit) ⇒
    ⇑(b_v394 : bool) ⇒
      match b_v394 as __v395 in ??49 with
      | true ⇒ ⇓(__v396 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v398 : unit) ⇒
    ⇑(b_v399 : bool) ⇒
      match b_v399 as __v400 in ??50 with
      | true ⇒ ⇑(__v401 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v403 : unit) ⇒
    ⇑(b_v404 : bool) ⇒
      match b_v404 as __v405 in ??51 with
      | true ⇒ ⇑(__v406 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v408 : unit) ⇒
    let ch_v409 ⇐ open stdin in
    let ch_v410 ⇐ (send ch_v409 true) in
    let __v411 ⇐ recv ch_v410 in
    match __v411 as __v412 in ??52 with
    | ⟨s_v413, ch_v414⟩ ⇒
      let ch_v415 ⇐ (send ch_v414 false) in
      let __v416 ⇐ close ch_v415 in return s_v413
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v418 : string_d2) ⇒
    let ch_v419 ⇐ open stdout in
    let ch_v420 ⇐ (send ch_v419 true) in
    let ch_v421 ⇐ (send ch_v420 s_v418) in
    let ch_v422 ⇐ (send ch_v421 false) in close ch_v422

program prerr_i27 : string_d2 → IO unit =
  fn (s_v424 : string_d2) ⇒
    let ch_v425 ⇐ open stderr in
    let ch_v426 ⇐ (send ch_v425 true) in
    let ch_v427 ⇐ (send ch_v426 s_v424) in
    let ch_v428 ⇐ (send ch_v427 false) in close ch_v428

program digits_i28 : (list_d3‹??53, U› ??54) =
  (cons_c5‹??87, ??86›
    "0"
    (cons_c5‹??84, ??83›
      "1"
      (cons_c5‹??81, ??80›
        "2"
        (cons_c5‹??78, ??77›
          "3"
          (cons_c5‹??75, ??74›
            "4"
            (cons_c5‹??72, ??71›
              "5"
              (cons_c5‹??69, ??68›
                "6"
                (cons_c5‹??66, ??65›
                  "7"
                  (cons_c5‹??63, ??62›
                    "8" (cons_c5‹??60, ??59› "9" nil_c4‹??57, ??56›))))))))))

program get_at_i29 :
  ∀ {A_v429 : U} →
    nat → (list_d3‹??88, U› A_v429) → A_v429 → A_v429
=
  fn {A_v433 : U} (n_v434 : nat) (xs_v435 : (list_d3‹??88, U› A_v433))
     (a_v436 : A_v433) ⇒
    match n_v434 as __v437 in ??89 with
    | O ⇒
      match xs_v435 as __v438 in ??92 with
      | nil_c4  ⇒ a_v436 | cons_c5 x_v439 __v440 ⇒ x_v439
      end
    | S n_v441 ⇒
      match xs_v435 as __v442 in ??90 with
      | nil_c4  ⇒ a_v436
      | cons_c5 __v443 xs_v444 ⇒ (get_at_i29 ??91 n_v441 xs_v444 a_v436)
      end
    end

program string_of_digit_i30 : nat → string_d2 =
  fn (n_v446 : nat) ⇒
    (get_at_i29 ??93 n_v446 digits_i28 EmptyString_c2‹›)

program string_of_nat_i31 : nat → string_d2 =
  fn (n_v448 : nat) ⇒
    let s_v449 = (string_of_digit_i30 (modn_i14 n_v448 10)) in
    let n_v450 = (divn_i13 n_v448 10) in
    match (ltn_i6 0 n_v450) as __v451 in ??94 with
    | true ⇒ (cats_i15 (string_of_nat_i31 n_v450) s_v449)
    | false ⇒ s_v449
    end

logical gcd_i32 : nat → nat → nat =
  fn (a_v454 : nat) (b_v455 : nat) ⇒
    match b_v455 as __v456 in ??95 with
    | O ⇒ a_v454 | S __v457 ⇒ (gcd_i32 b_v455 (modn_i14 a_v454 b_v455))
    end

program powm_i33 : nat → nat → nat → nat =
  fn (a_v461 : nat) (b_v462 : nat) (m_v463 : nat) ⇒
    match b_v462 as __v464 in ??96 with
    | O ⇒ 1
    | S b_v465 ⇒
      (modn_i14 (muln_i12 a_v461 (powm_i33 a_v461 b_v465 m_v463)) m_v463)
    end

logical coprime_i34 : nat → nat → U =
  fn (a_v468 : nat) (b_v469 : nat) ⇒ (gcd_i32 a_v468 b_v469) ≡ 1

logical RSA_i35 : proto =
  ⇑{x_v470 : nat} ⇒
    ⇑{y_v471 : nat} ⇒
      ⇑(n_v472 : nat) ⇒
        ⇑{__v473 : n_v472 ≡ (muln_i12 x_v470 y_v471)} ⇒
          ⇑{tot_v474 : nat} ⇒
            ⇑{__v475 :
              tot_v474 ≡ (muln_i12 (subn_i11 x_v470 1) (subn_i11 y_v471 1))} ⇒
              ⇑(e_v476 : nat) ⇒
                ⇑{__v477 : (coprime_i34 e_v476 tot_v474)} ⇒
                  ⇑{__v478 : (ltn_i6 1 e_v476) ≡ true} ⇒
                    ⇑{__v479 : (ltn_i6 e_v476 tot_v474) ≡ true} ⇒
                      ⇓{P0_v480 : nat} ⇒
                        ⇓(C_v481 : nat) ⇒
                          ⇓{__v482 :
                            C_v481 ≡ (powm_i33 P0_v480 e_v476 n_v472)} ⇒
                            end

logical RSA_ch_i36 : L = ch⟨RSA_i35⟩

logical RSA_hc_i37 : L = hc⟨RSA_i35⟩

program client_i38 : RSA_hc_i37 → IO unit =
  fn (ch_v484 : RSA_hc_i37) ⇒
    let P0_v485 = 123 in
    let __v486 ⇐ recv ch_v484 in
    match __v486 as __v487 in ??113 with
    | ⟨{x_v488}, ch_v489⟩ ⇒
      let __v490 ⇐ recv ch_v489 in
      match __v490 as __v491 in ??112 with
      | ⟨{y_v492}, ch_v493⟩ ⇒
        let __v494 ⇐ recv ch_v493 in
        match __v494 as __v495 in ??111 with
        | ⟨n_v496, ch_v497⟩ ⇒
          let __v498 ⇐ recv ch_v497 in
          match __v498 as __v499 in ??110 with
          | ⟨{pf1_v500}, ch_v501⟩ ⇒
            let __v502 ⇐ recv ch_v501 in
            match __v502 as __v503 in ??109 with
            | ⟨{tot_v504}, ch_v505⟩ ⇒
              let __v506 ⇐ recv ch_v505 in
              match __v506 as __v507 in ??108 with
              | ⟨{pf2_v508}, ch_v509⟩ ⇒
                let __v510 ⇐ recv ch_v509 in
                match __v510 as __v511 in ??107 with
                | ⟨e_v512, ch_v513⟩ ⇒
                  let __v514 ⇐ recv ch_v513 in
                  match __v514 as __v515 in ??106 with
                  | ⟨{pf3_v516}, ch_v517⟩ ⇒
                    let __v518 ⇐ recv ch_v517 in
                    match __v518 as __v519 in ??105 with
                    | ⟨{pf4_v520}, ch_v521⟩ ⇒
                      let __v522 ⇐ recv ch_v521 in
                      match __v522 as __v523 in ??104 with
                      | ⟨{pf5_v524}, ch_v525⟩ ⇒
                        let ch_v526 ⇐ (send ch_v525 P0_v485) in
                        let ch_v527 ⇐
                          (send ch_v526 (powm_i33 P0_v485 e_v512 n_v496))
                        in
                        let ch_v528 ⇐ (send ch_v527 refl ??103) in
                        close ch_v528
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program server_i39 : RSA_ch_i36 → IO unit =
  fn (ch_v530 : RSA_ch_i36) ⇒
    let x_v531 = 7 in
    let y_v532 = 19 in
    let n_v533 = (muln_i12 x_v531 y_v532) in
    let tot_v534 = (muln_i12 (subn_i11 x_v531 1) (subn_i11 y_v532 1)) in
    let e_v535 = 5 in
    let d_v536 = 65 in
    let ch_v537 ⇐ (send ch_v530 x_v531) in
    let ch_v538 ⇐ (send ch_v537 y_v532) in
    let ch_v539 ⇐ (send ch_v538 n_v533) in
    let ch_v540 ⇐ (send ch_v539 refl ??114) in
    let ch_v541 ⇐ (send ch_v540 tot_v534) in
    let ch_v542 ⇐ (send ch_v541 refl ??115) in
    let ch_v543 ⇐ (send ch_v542 e_v535) in
    let ch_v544 ⇐ (send ch_v543 refl ??116) in
    let ch_v545 ⇐ (send ch_v544 refl ??117) in
    let ch_v546 ⇐ (send ch_v545 refl ??118) in
    let __v547 ⇐ recv ch_v546 in
    match __v547 as __v548 in ??121 with
    | ⟨{P0_v549}, ch_v550⟩ ⇒
      let __v551 ⇐ recv ch_v550 in
      match __v551 as __v552 in ??120 with
      | ⟨C_v553, ch_v554⟩ ⇒
        let __v555 ⇐ recv ch_v554 in
        match __v555 as __v556 in ??119 with
        | ⟨{pf_v557}, ch_v558⟩ ⇒
          let P1_v559 = (powm_i33 C_v553 d_v536 n_v533) in
          let __v560 ⇐ close ch_v558 in
          (print_i26 (cats_i15 (string_of_nat_i31 P1_v559) "\n"))
        end
      end
    end

program main_i40 : IO unit =
  let c_v561 ⇐ fork (c_v562 : RSA_ch_i36) in (server_i39 c_v562) in
  let c0_v563 ⇐
    fork (c0_v564 : ch⟨⇓(__v565 : RSA_hc_i37) ⇒ end⟩) in
      let __v566 ⇐ recv c0_v564 in
      match __v566 as __v567 in ??122 with
      | ⟨c_v568, c0_v569⟩ ⇒
        let __v570 ⇐ close c0_v569 in (client_i38 c_v568)
      end
  in
  let c0_v571 ⇐ (send c0_v563 c_v561) in
  let __v572 ⇐ close c0_v571 in sleep 1

trans01 success--------------------------

program andb_i1 : bool → bool → bool =
  fn (b1_v19652 : bool) (b2_v19653 : bool) ⇒
    match b1_v19652 as __v19654 in bool with
    | true ⇒ b2_v19653 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v19657 : bool) (b2_v19658 : bool) ⇒
    match b1_v19657 as __v19659 in bool with
    | true ⇒ true | false ⇒ b2_v19658
    end

program notb_i3 : bool → bool =
  fn (b_v19661 : bool) ⇒
    match b_v19661 as __v19662 in bool with
    | true ⇒ false | false ⇒ true
    end

program lten_i4 : nat → nat → bool =
  fn (x_v19665 : nat) (y_v19666 : nat) ⇒
    match x_v19665 as __v19667 in bool with
    | O ⇒ true
    | S x_v19668 ⇒
      match y_v19666 as __v19669 in bool with
      | O ⇒ false | S y_v19670 ⇒ (lten_i4 x_v19668 y_v19670)
      end
    end

program gten_i5 : nat → nat → bool =
  fn (x_v19673 : nat) (y_v19674 : nat) ⇒
    match x_v19673 as __v19675 in bool with
    | O ⇒
      match y_v19674 as __v19676 in bool with
      | O ⇒ true | S __v19677 ⇒ false
      end
    | S x_v19678 ⇒
      match y_v19674 as __v19679 in bool with
      | O ⇒ true | S y_v19680 ⇒ (gten_i5 x_v19678 y_v19680)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v19683 : nat) (y_v19684 : nat) ⇒
    match x_v19683 as __v19685 in bool with
    | O ⇒
      match y_v19684 as __v19686 in bool with
      | O ⇒ false | S y_v19687 ⇒ true
      end
    | S x_v19688 ⇒
      match y_v19684 as __v19689 in bool with
      | O ⇒ false | S y_v19690 ⇒ (ltn_i6 x_v19688 y_v19690)
      end
    end

program gtn_i7 : nat → nat → bool =
  fn (x_v19693 : nat) (y_v19694 : nat) ⇒
    match x_v19693 as __v19695 in bool with
    | O ⇒ false
    | S x_v19696 ⇒
      match y_v19694 as __v19697 in bool with
      | O ⇒ true | S y_v19698 ⇒ (gtn_i7 x_v19696 y_v19698)
      end
    end

program eqn_i8 : nat → nat → bool =
  fn (x_v19701 : nat) (y_v19702 : nat) ⇒
    match x_v19701 as __v19703 in bool with
    | O ⇒
      match y_v19702 as __v19704 in bool with
      | O ⇒ true | S __v19705 ⇒ false
      end
    | S x_v19706 ⇒
      match y_v19702 as __v19707 in bool with
      | O ⇒ false | S y_v19708 ⇒ (eqn_i8 x_v19706 y_v19708)
      end
    end

program pred_i9 : nat → nat =
  fn (x_v19710 : nat) ⇒
    match x_v19710 as __v19711 in nat with
    | O ⇒ 0 | S x_v19712 ⇒ x_v19712
    end

program addn_i10 : nat → nat → nat =
  fn (x_v19715 : nat) (y_v19716 : nat) ⇒
    match x_v19715 as __v19717 in nat with
    | O ⇒ y_v19716 | S x_v19718 ⇒ (addn_i10 x_v19718 y_v19716).+1
    end

program subn_i11 : nat → nat → nat =
  fn (x_v19721 : nat) (y_v19722 : nat) ⇒
    match y_v19722 as __v19723 in nat with
    | O ⇒ x_v19721 | S y_v19724 ⇒ (subn_i11 (pred_i9 x_v19721) y_v19724)
    end

program muln_i12 : nat → nat → nat =
  fn (x_v19727 : nat) (y_v19728 : nat) ⇒
    match x_v19727 as __v19729 in nat with
    | O ⇒ 0
    | S x_v19730 ⇒ (addn_i10 y_v19728 (muln_i12 x_v19730 y_v19728))
    end

program divn_i13 : nat → nat → nat =
  fn (x_v19733 : nat) (y_v19734 : nat) ⇒
    match (ltn_i6 x_v19733 y_v19734) as __v19735 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i13 (subn_i11 x_v19733 y_v19734) y_v19734).+1
    end

program modn_i14 : nat → nat → nat =
  fn (x_v19738 : nat) (y_v19739 : nat) ⇒
    (subn_i11 x_v19738 (muln_i12 (divn_i13 x_v19738 y_v19739) y_v19739))

inductive char_d1 : U =
| Char_c1 of (n_v19740 : nat) : char_d1

inductive string_d2 : U =
| EmptyString_c2 of : string_d2
| String_c3 of (c_v19741 : char_d1) (s_v19742 : string_d2) : string_d2

program cats_i15 : string_d2 → string_d2 → string_d2 =
  fn (s1_v19745 : string_d2) (s2_v19746 : string_d2) ⇒
    match s1_v19745 as __v19747 in string_d2 with
    | EmptyString_c2  ⇒ s2_v19746
    | String_c3 c_v19748 s1_v19749 ⇒
      (String_c3‹› c_v19748 (cats_i15 s1_v19749 s2_v19746))
    end

program strlen_i16 : string_d2 → nat =
  fn (s_v19751 : string_d2) ⇒
    match s_v19751 as __v19752 in nat with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v19753 s_v19754 ⇒ (strlen_i16 s_v19754).+1
    end

inductive list_d3 ‹s_s19755, t_s19756›
  (A_v19757 : Type‹s_s19755›) : Type‹t_s19756›
=
| nil_c4 of
    ‹s_s19758, t_s19759› (A_v19760 : Type‹s_s19758›)
    : (list_d3‹s_s19758, t_s19759› A_v19760)
| cons_c5 of
    ‹s_s19761, t_s19762› (A_v19763 : Type‹s_s19761›)
    (hd_v19764 : A_v19763)
    (tl_v19765 : (list_d3‹s_s19761, t_s19762› A_v19763))
    : (list_d3‹s_s19761, t_s19762› A_v19763)

program len_i17 ‹s_s19766, t_s19767› :
  ∀ {A_v19768 : Type‹s_s19766›} →
    (list_d3‹s_s19766, t_s19767› A_v19768) →
      nat ⊗ (list_d3‹s_s19766, t_s19767› A_v19768)
=
  fn {A_v19771 : Type‹s_s19766›}
     (xs_v19772 : (list_d3‹s_s19766, t_s19767› A_v19771)) ⇒
    match xs_v19772 as __v19773 in
      nat ⊗ (list_d3‹s_s19766, t_s19767› A_v19771) with
    | nil_c4  ⇒ ⟨0, nil_c4‹s_s19766, t_s19767›⟩
    | cons_c5 x_v19775 xs_v19776 ⇒
      match (len_i17‹s_s19766, t_s19767› A_v19771 xs_v19776) as __v19777 in
        nat ⊗ (list_d3‹s_s19766, t_s19767› A_v19771) with
      | ⟨n_v19779, xs_v19780⟩ ⇒
        ⟨n_v19779.+1, (cons_c5‹s_s19766, t_s19767› x_v19775 xs_v19780)⟩
      end
    end

program append_i18 ‹s_s19781, t_s19782› :
  ∀ {A_v19783 : Type‹s_s19781›} →
    (list_d3‹s_s19781, t_s19782› A_v19783) →
      (list_d3‹s_s19781, t_s19782› A_v19783) ⊸
        (list_d3‹s_s19781, t_s19782› A_v19783)
=
  fn {A_v19786 : Type‹s_s19781›}
     (xs_v19787 : (list_d3‹s_s19781, t_s19782› A_v19786)) ⇒
    ln (ys_v19788 : (list_d3‹s_s19781, t_s19782› A_v19786)) ⇒
      match xs_v19787 as __v19789 in
        (list_d3‹s_s19781, t_s19782› A_v19786) with
      | nil_c4  ⇒ ys_v19788
      | cons_c5 x_v19790 xs_v19791 ⇒
        (cons_c5‹s_s19781, t_s19782›
          x_v19790
          (append_i18‹s_s19781, t_s19782› A_v19786 xs_v19791 ys_v19788))
      end

logical stdin_rec_i19 : unit → proto =
  fn (__v19793 : unit) ⇒
    ⇑(b_v19794 : bool) ⇒
      match b_v19794 as __v19795 in proto with
      | true ⇒ ⇓(__v19796 : string_d2) ⇒ (stdin_rec_i19 ())
      | false ⇒ end
      end

logical stdout_rec_i20 : unit → proto =
  fn (__v19798 : unit) ⇒
    ⇑(b_v19799 : bool) ⇒
      match b_v19799 as __v19800 in proto with
      | true ⇒ ⇑(__v19801 : string_d2) ⇒ (stdout_rec_i20 ())
      | false ⇒ end
      end

logical stderr_rec_i21 : unit → proto =
  fn (__v19803 : unit) ⇒
    ⇑(b_v19804 : bool) ⇒
      match b_v19804 as __v19805 in proto with
      | true ⇒ ⇑(__v19806 : string_d2) ⇒ (stderr_rec_i21 ())
      | false ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 ())

logical stdout_t_i23 : proto = (stdout_rec_i20 ())

logical stderr_t_i24 : proto = (stderr_rec_i21 ())

program readline_i25 : unit → IO string_d2 =
  fn (__v19808 : unit) ⇒
    let ch_v19809 ⇐ open stdin in
    let ch_v19810 ⇐ (send ch_v19809 true) in
    let __v19811 ⇐ recv ch_v19810 in
    match __v19811 as __v19812 in IO string_d2 with
    | ⟨s_v19813, ch_v19814⟩ ⇒
      let ch_v19815 ⇐ (send ch_v19814 false) in
      let __v19816 ⇐ close ch_v19815 in return s_v19813
    end

program print_i26 : string_d2 → IO unit =
  fn (s_v19818 : string_d2) ⇒
    let ch_v19819 ⇐ open stdout in
    let ch_v19820 ⇐ (send ch_v19819 true) in
    let ch_v19821 ⇐ (send ch_v19820 s_v19818) in
    let ch_v19822 ⇐ (send ch_v19821 false) in close ch_v19822

program prerr_i27 : string_d2 → IO unit =
  fn (s_v19824 : string_d2) ⇒
    let ch_v19825 ⇐ open stderr in
    let ch_v19826 ⇐ (send ch_v19825 true) in
    let ch_v19827 ⇐ (send ch_v19826 s_v19824) in
    let ch_v19828 ⇐ (send ch_v19827 false) in close ch_v19828

program digits_i28 : (list_d3‹U, U› string_d2) =
  (cons_c5‹U, U›
    "0"
    (cons_c5‹U, U›
      "1"
      (cons_c5‹U, U›
        "2"
        (cons_c5‹U, U›
          "3"
          (cons_c5‹U, U›
            "4"
            (cons_c5‹U, U›
              "5"
              (cons_c5‹U, U›
                "6"
                (cons_c5‹U, U›
                  "7"
                  (cons_c5‹U, U›
                    "8" (cons_c5‹U, U› "9" nil_c4‹U, U›))))))))))

program get_at_i29 :
  ∀ {A_v19829 : U} →
    nat → (list_d3‹U, U› A_v19829) → A_v19829 → A_v19829
=
  fn {A_v19833 : U} (n_v19834 : nat)
     (xs_v19835 : (list_d3‹U, U› A_v19833)) (a_v19836 : A_v19833) ⇒
    match n_v19834 as __v19837 in A_v19833 with
    | O ⇒
      match xs_v19835 as __v19838 in A_v19833 with
      | nil_c4  ⇒ a_v19836 | cons_c5 x_v19839 __v19840 ⇒ x_v19839
      end
    | S n_v19841 ⇒
      match xs_v19835 as __v19842 in A_v19833 with
      | nil_c4  ⇒ a_v19836
      | cons_c5 __v19843 xs_v19844 ⇒
        (get_at_i29 A_v19833 n_v19841 xs_v19844 a_v19836)
      end
    end

program string_of_digit_i30 : nat → string_d2 =
  fn (n_v19846 : nat) ⇒
    (get_at_i29 string_d2 n_v19846 digits_i28 EmptyString_c2‹›)

program string_of_nat_i31 : nat → string_d2 =
  fn (n_v19848 : nat) ⇒
    let s_v19849 = (string_of_digit_i30 (modn_i14 n_v19848 10)) in
    let n_v19850 = (divn_i13 n_v19848 10) in
    match (ltn_i6 0 n_v19850) as __v19851 in string_d2 with
    | true ⇒ (cats_i15 (string_of_nat_i31 n_v19850) s_v19849)
    | false ⇒ s_v19849
    end

logical gcd_i32 : nat → nat → nat =
  fn (a_v19854 : nat) (b_v19855 : nat) ⇒
    match b_v19855 as __v19856 in nat with
    | O ⇒ a_v19854
    | S __v19857 ⇒ (gcd_i32 b_v19855 (modn_i14 a_v19854 b_v19855))
    end

program powm_i33 : nat → nat → nat → nat =
  fn (a_v19861 : nat) (b_v19862 : nat) (m_v19863 : nat) ⇒
    match b_v19862 as __v19864 in nat with
    | O ⇒ 1
    | S b_v19865 ⇒
      (modn_i14
        (muln_i12 a_v19861 (powm_i33 a_v19861 b_v19865 m_v19863)) m_v19863)
    end

logical coprime_i34 : nat → nat → U =
  fn (a_v19868 : nat) (b_v19869 : nat) ⇒ (gcd_i32 a_v19868 b_v19869) ≡ 1

logical RSA_i35 : proto =
  ⇑{x_v19870 : nat} ⇒
    ⇑{y_v19871 : nat} ⇒
      ⇑(n_v19872 : nat) ⇒
        ⇑{__v19873 : n_v19872 ≡ (muln_i12 x_v19870 y_v19871)} ⇒
          ⇑{tot_v19874 : nat} ⇒
            ⇑{__v19875 :
              tot_v19874 ≡
                (muln_i12 (subn_i11 x_v19870 1) (subn_i11 y_v19871 1))} ⇒
              ⇑(e_v19876 : nat) ⇒
                ⇑{__v19877 : (coprime_i34 e_v19876 tot_v19874)} ⇒
                  ⇑{__v19878 : (ltn_i6 1 e_v19876) ≡ true} ⇒
                    ⇑{__v19879 : (ltn_i6 e_v19876 tot_v19874) ≡ true} ⇒
                      ⇓{P0_v19880 : nat} ⇒
                        ⇓(C_v19881 : nat) ⇒
                          ⇓{__v19882 :
                            C_v19881 ≡
                              (powm_i33 P0_v19880 e_v19876 n_v19872)} ⇒
                            end

logical RSA_ch_i36 : L = ch⟨RSA_i35⟩

logical RSA_hc_i37 : L = hc⟨RSA_i35⟩

program client_i38 : RSA_hc_i37 → IO unit =
  fn (ch_v19884 : RSA_hc_i37) ⇒
    let P0_v19885 = 123 in
    let __v19886 ⇐ recv ch_v19884 in
    match __v19886 as __v19887 in IO unit with
    | ⟨{x_v19888}, ch_v19889⟩ ⇒
      let __v19890 ⇐ recv ch_v19889 in
      match __v19890 as __v19891 in IO unit with
      | ⟨{y_v19892}, ch_v19893⟩ ⇒
        let __v19894 ⇐ recv ch_v19893 in
        match __v19894 as __v19895 in IO unit with
        | ⟨n_v19896, ch_v19897⟩ ⇒
          let __v19898 ⇐ recv ch_v19897 in
          match __v19898 as __v19899 in IO unit with
          | ⟨{pf1_v19900}, ch_v19901⟩ ⇒
            let __v19902 ⇐ recv ch_v19901 in
            match __v19902 as __v19903 in IO unit with
            | ⟨{tot_v19904}, ch_v19905⟩ ⇒
              let __v19906 ⇐ recv ch_v19905 in
              match __v19906 as __v19907 in IO unit with
              | ⟨{pf2_v19908}, ch_v19909⟩ ⇒
                let __v19910 ⇐ recv ch_v19909 in
                match __v19910 as __v19911 in IO unit with
                | ⟨e_v19912, ch_v19913⟩ ⇒
                  let __v19914 ⇐ recv ch_v19913 in
                  match __v19914 as __v19915 in IO unit with
                  | ⟨{pf3_v19916}, ch_v19917⟩ ⇒
                    let __v19918 ⇐ recv ch_v19917 in
                    match __v19918 as __v19919 in IO unit with
                    | ⟨{pf4_v19920}, ch_v19921⟩ ⇒
                      let __v19922 ⇐ recv ch_v19921 in
                      match __v19922 as __v19923 in IO unit with
                      | ⟨{pf5_v19924}, ch_v19925⟩ ⇒
                        let ch_v19926 ⇐ (send ch_v19925 P0_v19885) in
                        let ch_v19927 ⇐
                          (send ch_v19926
                            (powm_i33 P0_v19885 e_v19912 n_v19896))
                        in
                        let ch_v19928 ⇐
                          (send ch_v19927
                            refl (powm_i33 123 e_v19912 n_v19896))
                        in close ch_v19928
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program server_i39 : RSA_ch_i36 → IO unit =
  fn (ch_v19930 : RSA_ch_i36) ⇒
    let x_v19931 = 7 in
    let y_v19932 = 19 in
    let n_v19933 = (muln_i12 x_v19931 y_v19932) in
    let tot_v19934 = (muln_i12 (subn_i11 x_v19931 1) (subn_i11 y_v19932 1))
    in
    let e_v19935 = 5 in
    let d_v19936 = 65 in
    let ch_v19937 ⇐ (send ch_v19930 x_v19931) in
    let ch_v19938 ⇐ (send ch_v19937 y_v19932) in
    let ch_v19939 ⇐ (send ch_v19938 n_v19933) in
    let ch_v19940 ⇐ (send ch_v19939 refl (muln_i12 7 19)) in
    let ch_v19941 ⇐ (send ch_v19940 tot_v19934) in
    let ch_v19942 ⇐
      (send ch_v19941 refl (muln_i12 (subn_i11 7 1) (subn_i11 19 1)))
    in
    let ch_v19943 ⇐ (send ch_v19942 e_v19935) in
    let ch_v19944 ⇐ (send ch_v19943 refl (gcd_i32 5 108)) in
    let ch_v19945 ⇐ (send ch_v19944 refl (ltn_i6 1 5)) in
    let ch_v19946 ⇐
      (send ch_v19945
        refl (ltn_i6 5 (muln_i12 (subn_i11 7 1) (subn_i11 19 1))))
    in
    let __v19947 ⇐ recv ch_v19946 in
    match __v19947 as __v19948 in IO unit with
    | ⟨{P0_v19949}, ch_v19950⟩ ⇒
      let __v19951 ⇐ recv ch_v19950 in
      match __v19951 as __v19952 in IO unit with
      | ⟨C_v19953, ch_v19954⟩ ⇒
        let __v19955 ⇐ recv ch_v19954 in
        match __v19955 as __v19956 in IO unit with
        | ⟨{pf_v19957}, ch_v19958⟩ ⇒
          let P1_v19959 = (powm_i33 C_v19953 d_v19936 n_v19933) in
          let __v19960 ⇐ close ch_v19958 in
          (print_i26 (cats_i15 (string_of_nat_i31 P1_v19959) "\n"))
        end
      end
    end

program main_i40 : IO unit =
  let c_v19961 ⇐ fork (c_v19962 : RSA_ch_i36) in (server_i39 c_v19962) in
  let c0_v19963 ⇐
    fork (c0_v19964 : ch⟨⇓(__v19965 : RSA_hc_i37) ⇒ end⟩) in
      let __v19966 ⇐ recv c0_v19964 in
      match __v19966 as __v19967 in IO unit with
      | ⟨c_v19968, c0_v19969⟩ ⇒
        let __v19970 ⇐ close c0_v19969 in (client_i38 c_v19968)
      end
  in
  let c0_v19971 ⇐ (send c0_v19963 c_v19961) in
  let __v19972 ⇐ close c0_v19971 in sleep 1

trans1e success--------------------------

def andb_i1 =
  fn b1_v20858 b2_v20859 ⇒
    match b1_v20858 with
    | true ⇒ b2_v20859 | false ⇒ false
    end

def orb_i2 =
  fn b1_v20860 b2_v20861 ⇒
    match b1_v20860 with
    | true ⇒ true | false ⇒ b2_v20861
    end

def notb_i3 =
  fn b_v20862 ⇒ match b_v20862 with
                  | true ⇒ false | false ⇒ true
                  end

def lten_i4 =
  fn x_v20863 y_v20864 ⇒
    match x_v20863 with
    | O ⇒ true
    | S x_v20865 ⇒
      match y_v20864 with
      | O ⇒ false | S y_v20866 ⇒ ((lten_i4 x_v20865) y_v20866)
      end
    end

def gten_i5 =
  fn x_v20867 y_v20868 ⇒
    match x_v20867 with
    | O ⇒ match y_v20868 with
            | O ⇒ true | S __v20869 ⇒ false
            end
    | S x_v20870 ⇒
      match y_v20868 with
      | O ⇒ true | S y_v20871 ⇒ ((gten_i5 x_v20870) y_v20871)
      end
    end

def ltn_i6 =
  fn x_v20872 y_v20873 ⇒
    match x_v20872 with
    | O ⇒ match y_v20873 with
            | O ⇒ false | S y_v20874 ⇒ true
            end
    | S x_v20875 ⇒
      match y_v20873 with
      | O ⇒ false | S y_v20876 ⇒ ((ltn_i6 x_v20875) y_v20876)
      end
    end

def gtn_i7 =
  fn x_v20877 y_v20878 ⇒
    match x_v20877 with
    | O ⇒ false
    | S x_v20879 ⇒
      match y_v20878 with
      | O ⇒ true | S y_v20880 ⇒ ((gtn_i7 x_v20879) y_v20880)
      end
    end

def eqn_i8 =
  fn x_v20881 y_v20882 ⇒
    match x_v20881 with
    | O ⇒ match y_v20882 with
            | O ⇒ true | S __v20883 ⇒ false
            end
    | S x_v20884 ⇒
      match y_v20882 with
      | O ⇒ false | S y_v20885 ⇒ ((eqn_i8 x_v20884) y_v20885)
      end
    end

def pred_i9 =
  fn x_v20886 ⇒ match x_v20886 with
                  | O ⇒ 0 | S x_v20887 ⇒ x_v20887
                  end

def addn_i10 =
  fn x_v20888 y_v20889 ⇒
    match x_v20888 with
    | O ⇒ y_v20889 | S x_v20890 ⇒ ((addn_i10 x_v20890) y_v20889).+1
    end

def subn_i11 =
  fn x_v20891 y_v20892 ⇒
    match y_v20892 with
    | O ⇒ x_v20891
    | S y_v20893 ⇒ ((subn_i11 (pred_i9 x_v20891)) y_v20893)
    end

def muln_i12 =
  fn x_v20894 y_v20895 ⇒
    match x_v20894 with
    | O ⇒ 0
    | S x_v20896 ⇒ ((addn_i10 y_v20895) ((muln_i12 x_v20896) y_v20895))
    end

def divn_i13 =
  fn x_v20897 y_v20898 ⇒
    match ((ltn_i6 x_v20897) y_v20898) with
    | true ⇒ 0
    | false ⇒ ((divn_i13 ((subn_i11 x_v20897) y_v20898)) y_v20898).+1
    end

def modn_i14 =
  fn x_v20899 y_v20900 ⇒
    ((subn_i11 x_v20899)
      ((muln_i12 ((divn_i13 x_v20899) y_v20900)) y_v20900))

data char_d1 =
| Char_c1 of size(1)

data string_d2 =
| EmptyString_c2 of size(0) | String_c3 of size(2)

def cats_i15 =
  fn s1_v20901 s2_v20902 ⇒
    match s1_v20901 with
    | EmptyString_c2  ⇒ s2_v20902
    | String_c3 c_v20903 s1_v20904 ⇒
      (String_c3 c_v20903 ((cats_i15 s1_v20904) s2_v20902))
    end

def strlen_i16 =
  fn s_v20905 ⇒
    match s_v20905 with
    | EmptyString_c2  ⇒ 0
    | String_c3 __v20906 s_v20907 ⇒ (strlen_i16 s_v20907).+1
    end

data listUU_d7 =
| nilUU_c12 of size(0) | consUU_c13 of size(2)

data listUL_d6 =
| nilUL_c10 of size(0) | consUL_c11 of size(2)

data listLU_d5 =
| nilLU_c8 of size(0)

data listLL_d4 =
| nilLL_c6 of size(0) | consLL_c7 of size(2)

def lenUU_i44 =
  fn A_v20908 xs_v20909 ⇒
    match xs_v20909 with
    | nilUU_c12  ⇒ (0, nilUU_c12)
    | consUU_c13 x_v20910 xs_v20911 ⇒
      match ((lenUU_i44 NULL) xs_v20911) with
      | (n_v20912, xs_v20913) ⇒
        (n_v20912.+1, (consUU_c13 x_v20910 xs_v20913))
      end
    end

def lenUL_i43 =
  fn A_v20914 xs_v20915 ⇒
    match xs_v20915 with
    | nilUL_c10  ⇒ (0, nilUL_c10)
    | consUL_c11 x_v20916 xs_v20917 ⇒
      match ((lenUL_i43 NULL) xs_v20917) with
      | (n_v20918, xs_v20919) ⇒
        (n_v20918.+1, (consUL_c11 x_v20916 xs_v20919))
      end
    end

def lenLL_i41 =
  fn A_v20920 xs_v20921 ⇒
    match xs_v20921 with
    | nilLL_c6  ⇒ (0, nilLL_c6)
    | consLL_c7 x_v20922 xs_v20923 ⇒
      match ((lenLL_i41 NULL) xs_v20923) with
      | (n_v20924, xs_v20925) ⇒
        (n_v20924.+1, (consLL_c7 x_v20922 xs_v20925))
      end
    end

def appendUU_i48 =
  fn A_v20926 xs_v20927 ⇒
    ln ys_v20928 ⇒
      match xs_v20927 with
      | nilUU_c12  ⇒ ys_v20928
      | consUU_c13 x_v20929 xs_v20930 ⇒
        (consUU_c13 x_v20929 (((appendUU_i48 NULL) xs_v20930) ys_v20928))
      end

def appendUL_i47 =
  fn A_v20931 xs_v20932 ⇒
    ln ys_v20933 ⇒
      match xs_v20932 with
      | nilUL_c10  ⇒ ys_v20933
      | consUL_c11 x_v20934 xs_v20935 ⇒
        (consUL_c11 x_v20934 (((appendUL_i47 NULL) xs_v20935) ys_v20933))
      end

def appendLL_i45 =
  fn A_v20936 xs_v20937 ⇒
    ln ys_v20938 ⇒
      match xs_v20937 with
      | nilLL_c6  ⇒ ys_v20938
      | consLL_c7 x_v20939 xs_v20940 ⇒
        (consLL_c7 x_v20939 (((appendLL_i45 NULL) xs_v20940) ys_v20938))
      end

def readline_i25 =
  fn __v20941 ⇒
    let ch_v20942 ⇐ open stdin in
    let ch_v20943 ⇐ (send ch_v20942 true) in
    let __v20944 ⇐ recv ch_v20943 in
    match __v20944 with
    | (s_v20945, ch_v20946) ⇒
      let ch_v20947 ⇐ (send ch_v20946 false) in
      let __v20948 ⇐ close⇑ ch_v20947 in return s_v20945
    end

def print_i26 =
  fn s_v20949 ⇒
    let ch_v20950 ⇐ open stdout in
    let ch_v20951 ⇐ (send ch_v20950 true) in
    let ch_v20952 ⇐ (send ch_v20951 s_v20949) in
    let ch_v20953 ⇐ (send ch_v20952 false) in close⇑ ch_v20953

def prerr_i27 =
  fn s_v20954 ⇒
    let ch_v20955 ⇐ open stderr in
    let ch_v20956 ⇐ (send ch_v20955 true) in
    let ch_v20957 ⇐ (send ch_v20956 s_v20954) in
    let ch_v20958 ⇐ (send ch_v20957 false) in close⇑ ch_v20958

def digits_i28 =
  (consUU_c13
    "0"
    (consUU_c13
      "1"
      (consUU_c13
        "2"
        (consUU_c13
          "3"
          (consUU_c13
            "4"
            (consUU_c13
              "5"
              (consUU_c13
                "6"
                (consUU_c13 "7" (consUU_c13 "8" (consUU_c13 "9" nilUU_c12))))))))))

def get_at_i29 =
  fn A_v20959 n_v20960 xs_v20961 a_v20962 ⇒
    match n_v20960 with
    | O ⇒
      match xs_v20961 with
      | nilUU_c12  ⇒ a_v20962 | consUU_c13 x_v20963 __v20964 ⇒ x_v20963
      end
    | S n_v20965 ⇒
      match xs_v20961 with
      | nilUU_c12  ⇒ a_v20962
      | consUU_c13 __v20966 xs_v20967 ⇒
        ((((get_at_i29 NULL) n_v20965) xs_v20967) a_v20962)
      end
    end

def string_of_digit_i30 =
  fn n_v20968 ⇒ ((((get_at_i29 NULL) n_v20968) digits_i28) EmptyString_c2)

def string_of_nat_i31 =
  fn n_v20969 ⇒
    let s_v20970 = (string_of_digit_i30 ((modn_i14 n_v20969) 10)) in
    let n_v20971 = ((divn_i13 n_v20969) 10) in
    match ((ltn_i6 0) n_v20971) with
    | true ⇒ ((cats_i15 (string_of_nat_i31 n_v20971)) s_v20970)
    | false ⇒ s_v20970
    end

def powm_i33 =
  fn a_v20972 b_v20973 m_v20974 ⇒
    match b_v20973 with
    | O ⇒ 1
    | S b_v20975 ⇒
      ((modn_i14
         ((muln_i12 a_v20972) (((powm_i33 a_v20972) b_v20975) m_v20974)))
        m_v20974)
    end

def client_i38 =
  fn ch_v20976 ⇒
    let P0_v20977 = 123 in
    let __v20978 ⇐ {recv} ch_v20976 in
    match __v20978 with
    | (x_v20979, ch_v20980) ⇒
      let __v20981 ⇐ {recv} ch_v20980 in
      match __v20981 with
      | (y_v20982, ch_v20983) ⇒
        let __v20984 ⇐ recv ch_v20983 in
        match __v20984 with
        | (n_v20985, ch_v20986) ⇒
          let __v20987 ⇐ {recv} ch_v20986 in
          match __v20987 with
          | (pf1_v20988, ch_v20989) ⇒
            let __v20990 ⇐ {recv} ch_v20989 in
            match __v20990 with
            | (tot_v20991, ch_v20992) ⇒
              let __v20993 ⇐ {recv} ch_v20992 in
              match __v20993 with
              | (pf2_v20994, ch_v20995) ⇒
                let __v20996 ⇐ recv ch_v20995 in
                match __v20996 with
                | (e_v20997, ch_v20998) ⇒
                  let __v20999 ⇐ {recv} ch_v20998 in
                  match __v20999 with
                  | (pf3_v21000, ch_v21001) ⇒
                    let __v21002 ⇐ {recv} ch_v21001 in
                    match __v21002 with
                    | (pf4_v21003, ch_v21004) ⇒
                      let __v21005 ⇐ {recv} ch_v21004 in
                      match __v21005 with
                      | (pf5_v21006, ch_v21007) ⇒
                        let ch_v21008 ⇐ ({send} ch_v21007 NULL) in
                        let ch_v21009 ⇐
                          (send ch_v21008
                            (((powm_i33 P0_v20977) e_v20997) n_v20985))
                        in
                        let ch_v21010 ⇐ ({send} ch_v21009 NULL) in
                        close⇓ ch_v21010
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def server_i39 =
  fn ch_v21011 ⇒
    let x_v21012 = 7 in
    let y_v21013 = 19 in
    let n_v21014 = ((muln_i12 x_v21012) y_v21013) in
    let tot_v21015 =
      ((muln_i12 ((subn_i11 x_v21012) 1)) ((subn_i11 y_v21013) 1))
    in
    let e_v21016 = 5 in
    let d_v21017 = 65 in
    let ch_v21018 ⇐ ({send} ch_v21011 NULL) in
    let ch_v21019 ⇐ ({send} ch_v21018 NULL) in
    let ch_v21020 ⇐ (send ch_v21019 n_v21014) in
    let ch_v21021 ⇐ ({send} ch_v21020 NULL) in
    let ch_v21022 ⇐ ({send} ch_v21021 NULL) in
    let ch_v21023 ⇐ ({send} ch_v21022 NULL) in
    let ch_v21024 ⇐ (send ch_v21023 e_v21016) in
    let ch_v21025 ⇐ ({send} ch_v21024 NULL) in
    let ch_v21026 ⇐ ({send} ch_v21025 NULL) in
    let ch_v21027 ⇐ ({send} ch_v21026 NULL) in
    let __v21028 ⇐ {recv} ch_v21027 in
    match __v21028 with
    | (P0_v21029, ch_v21030) ⇒
      let __v21031 ⇐ recv ch_v21030 in
      match __v21031 with
      | (C_v21032, ch_v21033) ⇒
        let __v21034 ⇐ {recv} ch_v21033 in
        match __v21034 with
        | (pf_v21035, ch_v21036) ⇒
          let P1_v21037 = (((powm_i33 C_v21032) d_v21017) n_v21014) in
          let __v21038 ⇐ close⇑ ch_v21036 in
          (print_i26 ((cats_i15 (string_of_nat_i31 P1_v21037)) "\n"))
        end
      end
    end

main =
  let c_v21039 ⇐ fork c_v21040 in (server_i39 c_v21040) in
  let c0_v21041 ⇐
    fork c0_v21042 in
      let __v21043 ⇐ recv c0_v21042 in
      match __v21043 with
      | (c_v21044, c0_v21045) ⇒
        let __v21046 ⇐ close⇑ c0_v21045 in (client_i38 c_v21044)
      end
  in
  let c0_v21047 ⇐ (send c0_v21041 c_v21039) in
  let __v21048 ⇐ close⇓ c0_v21047 in sleep 1

trans12 success--------------------------

fun andb_i1(b1_v21354, b2_v21355) = if b1_v21354 then
                                      b2_v21355
                                    else
                                      0

val andbclo_i49 = fn b1_v21356 b2_v21357 ⇒ andb_i1(b1_v21356, b2_v21357)

fun orb_i2(b1_v21358, b2_v21359) = if b1_v21358 then
                                     1
                                   else
                                     b2_v21359

val orbclo_i50 = fn b1_v21360 b2_v21361 ⇒ orb_i2(b1_v21360, b2_v21361)

fun notb_i3(b_v21362) = if b_v21362 then
                          0
                        else
                          1

val notbclo_i51 = fn b_v21363 ⇒ notb_i3(b_v21363)

fun lten_i4(x_v21364, y_v21365) =
  let __v21366 = x_v21364 in
  if __v21366 then
    let x_v21367 = __v21366.-1 in
    let __v21368 = y_v21365 in
    if __v21368 then
      let y_v21369 = __v21368.-1 in lten_i4(x_v21367, y_v21369)
    else
      0
  else
    1

val ltenclo_i52 = fn x_v21370 y_v21371 ⇒ lten_i4(x_v21370, y_v21371)

fun gten_i5(x_v21372, y_v21373) =
  let __v21374 = x_v21372 in
  if __v21374 then
    let x_v21375 = __v21374.-1 in
    let __v21376 = y_v21373 in
    if __v21376 then
      let y_v21377 = __v21376.-1 in gten_i5(x_v21375, y_v21377)
    else
      1
  else
    let __v21378 = y_v21373 in
    if __v21378 then
      let __v21379 = __v21378.-1 in 0
    else
      1

val gtenclo_i53 = fn x_v21380 y_v21381 ⇒ gten_i5(x_v21380, y_v21381)

fun ltn_i6(x_v21382, y_v21383) =
  let __v21384 = x_v21382 in
  if __v21384 then
    let x_v21385 = __v21384.-1 in
    let __v21386 = y_v21383 in
    if __v21386 then
      let y_v21387 = __v21386.-1 in ltn_i6(x_v21385, y_v21387)
    else
      0
  else
    let __v21388 = y_v21383 in
    if __v21388 then
      let y_v21389 = __v21388.-1 in 1
    else
      0

val ltnclo_i54 = fn x_v21390 y_v21391 ⇒ ltn_i6(x_v21390, y_v21391)

fun gtn_i7(x_v21392, y_v21393) =
  let __v21394 = x_v21392 in
  if __v21394 then
    let x_v21395 = __v21394.-1 in
    let __v21396 = y_v21393 in
    if __v21396 then
      let y_v21397 = __v21396.-1 in gtn_i7(x_v21395, y_v21397)
    else
      1
  else
    0

val gtnclo_i55 = fn x_v21398 y_v21399 ⇒ gtn_i7(x_v21398, y_v21399)

fun eqn_i8(x_v21400, y_v21401) =
  let __v21402 = x_v21400 in
  if __v21402 then
    let x_v21403 = __v21402.-1 in
    let __v21404 = y_v21401 in
    if __v21404 then
      let y_v21405 = __v21404.-1 in eqn_i8(x_v21403, y_v21405)
    else
      0
  else
    let __v21406 = y_v21401 in
    if __v21406 then
      let __v21407 = __v21406.-1 in 0
    else
      1

val eqnclo_i56 = fn x_v21408 y_v21409 ⇒ eqn_i8(x_v21408, y_v21409)

fun pred_i9(x_v21410) =
  let __v21411 = x_v21410 in
  if __v21411 then
    let x_v21412 = __v21411.-1 in x_v21412
  else
    0

val predclo_i57 = fn x_v21413 ⇒ pred_i9(x_v21413)

fun addn_i10(x_v21414, y_v21415) =
  let __v21416 = x_v21414 in
  if __v21416 then
    let x_v21417 = __v21416.-1 in addn_i10(x_v21417, y_v21415).+1
  else
    y_v21415

val addnclo_i58 = fn x_v21418 y_v21419 ⇒ addn_i10(x_v21418, y_v21419)

fun subn_i11(x_v21420, y_v21421) =
  let __v21422 = y_v21421 in
  if __v21422 then
    let y_v21423 = __v21422.-1 in subn_i11(pred_i9(x_v21420), y_v21423)
  else
    x_v21420

val subnclo_i59 = fn x_v21424 y_v21425 ⇒ subn_i11(x_v21424, y_v21425)

fun muln_i12(x_v21426, y_v21427) =
  let __v21428 = x_v21426 in
  if __v21428 then
    let x_v21429 = __v21428.-1 in
    addn_i10(y_v21427, muln_i12(x_v21429, y_v21427))
  else
    0

val mulnclo_i60 = fn x_v21430 y_v21431 ⇒ muln_i12(x_v21430, y_v21431)

fun divn_i13(x_v21432, y_v21433) =
  if ltn_i6(x_v21432, y_v21433) then
    0
  else
    divn_i13(subn_i11(x_v21432, y_v21433), y_v21433).+1

val divnclo_i61 = fn x_v21434 y_v21435 ⇒ divn_i13(x_v21434, y_v21435)

fun modn_i14(x_v21436, y_v21437) =
  subn_i11(x_v21436, muln_i12(divn_i13(x_v21436, y_v21437), y_v21437))

val modnclo_i62 = fn x_v21438 y_v21439 ⇒ modn_i14(x_v21438, y_v21439)

fun cats_i15(s1_v21440, s2_v21441) =
  match s1_v21440 with
  | EmptyString_c2  ⇒ s2_v21441
  | String_c3 c_v21442 s1_v21443 ⇒
    (String_c3 c_v21442 cats_i15(s1_v21443, s2_v21441))
  end

val catsclo_i63 = fn s1_v21444 s2_v21445 ⇒ cats_i15(s1_v21444, s2_v21445)

fun strlen_i16(s_v21446) =
  match s_v21446 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v21447 s_v21448 ⇒ strlen_i16(s_v21448).+1
  end

val strlenclo_i64 = fn s_v21449 ⇒ strlen_i16(s_v21449)

fun lenUU_i44(A_v21450, xs_v21451) =
  match xs_v21451 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v21452 xs_v21453 ⇒
    match lenUU_i44(NULL, xs_v21453) with
    | (n_v21454, xs_v21455) ⇒
      (n_v21454.+1, (consUU_c13 x_v21452 xs_v21455))
    end
  end

val lenUUclo_i65 = fn A_v21456 xs_v21457 ⇒ lenUU_i44(A_v21456, xs_v21457)

fun lenUL_i43(A_v21458, xs_v21459) =
  match xs_v21459 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v21460 xs_v21461 ⇒
    match lenUL_i43(NULL, xs_v21461) with
    | (n_v21462, xs_v21463) ⇒
      (n_v21462.+1, (consUL_c11 x_v21460 xs_v21463))
    end
  end

val lenULclo_i66 = fn A_v21464 xs_v21465 ⇒ lenUL_i43(A_v21464, xs_v21465)

fun lenLL_i41(A_v21466, xs_v21467) =
  match xs_v21467 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v21468 xs_v21469 ⇒
    match lenLL_i41(NULL, xs_v21469) with
    | (n_v21470, xs_v21471) ⇒ (n_v21470.+1, (consLL_c7 x_v21468 xs_v21471))
    end
  end

val lenLLclo_i67 = fn A_v21472 xs_v21473 ⇒ lenLL_i41(A_v21472, xs_v21473)

fun appendUU_i48(A_v21474, xs_v21475, ys_v21476) =
  match xs_v21475 with
  | nilUU_c12  ⇒ ys_v21476
  | consUU_c13 x_v21477 xs_v21478 ⇒
    (consUU_c13 x_v21477 appendUU_i48(NULL, xs_v21478, ys_v21476))
  end

val appendUUclo_i68 =
  fn A_v21479 xs_v21480 ⇒
    ln ys_v21481 ⇒ appendUU_i48(A_v21479, xs_v21480, ys_v21481)

fun appendUL_i47(A_v21482, xs_v21483, ys_v21484) =
  match xs_v21483 with
  | nilUL_c10  ⇒ ys_v21484
  | consUL_c11 x_v21485 xs_v21486 ⇒
    (consUL_c11 x_v21485 appendUL_i47(NULL, xs_v21486, ys_v21484))
  end

val appendULclo_i69 =
  fn A_v21487 xs_v21488 ⇒
    ln ys_v21489 ⇒ appendUL_i47(A_v21487, xs_v21488, ys_v21489)

fun appendLL_i45(A_v21490, xs_v21491, ys_v21492) =
  match xs_v21491 with
  | nilLL_c6  ⇒ ys_v21492
  | consLL_c7 x_v21493 xs_v21494 ⇒
    (consLL_c7 x_v21493 appendLL_i45(NULL, xs_v21494, ys_v21492))
  end

val appendLLclo_i70 =
  fn A_v21495 xs_v21496 ⇒
    ln ys_v21497 ⇒ appendLL_i45(A_v21495, xs_v21496, ys_v21497)

fun readline_i25(__v21498) =
  ln __v21499 ⇒
    let ch_v21500 = (ln __v21501 ⇒ open stdin) NULL in
    let ch_v21502 =
      ((fn x_v21503 ⇒ ln __v21504 ⇒ send(ch_v21500, x_v21503)) 1) NULL
    in
    let __v21505 = (ln __v21506 ⇒ recv(ch_v21502)) NULL in
    (match __v21505 with
     | (s_v21507, ch_v21508) ⇒
       ln __v21509 ⇒
         let ch_v21510 =
           ((fn x_v21511 ⇒ ln __v21512 ⇒ send(ch_v21508, x_v21511)) 0)
             NULL
         in
         let __v21513 =
           (ln __v21514 ⇒ let __v21515 = ch_v21510 in NULL) NULL
         in (ln __v21516 ⇒ s_v21507) NULL
     end) NULL

val readlineclo_i71 = fn __v21517 ⇒ readline_i25(__v21517)

fun print_i26(s_v21518) =
  ln __v21519 ⇒
    let ch_v21520 = (ln __v21521 ⇒ open stdout) NULL in
    let ch_v21522 =
      ((fn x_v21523 ⇒ ln __v21524 ⇒ send(ch_v21520, x_v21523)) 1) NULL
    in
    let ch_v21525 =
      ((fn x_v21526 ⇒ ln __v21527 ⇒ send(ch_v21522, x_v21526)) s_v21518)
        NULL
    in
    let ch_v21528 =
      ((fn x_v21529 ⇒ ln __v21530 ⇒ send(ch_v21525, x_v21529)) 0) NULL
    in (ln __v21531 ⇒ let __v21532 = ch_v21528 in NULL) NULL

val printclo_i72 = fn s_v21533 ⇒ print_i26(s_v21533)

fun prerr_i27(s_v21534) =
  ln __v21535 ⇒
    let ch_v21536 = (ln __v21537 ⇒ open stderr) NULL in
    let ch_v21538 =
      ((fn x_v21539 ⇒ ln __v21540 ⇒ send(ch_v21536, x_v21539)) 1) NULL
    in
    let ch_v21541 =
      ((fn x_v21542 ⇒ ln __v21543 ⇒ send(ch_v21538, x_v21542)) s_v21534)
        NULL
    in
    let ch_v21544 =
      ((fn x_v21545 ⇒ ln __v21546 ⇒ send(ch_v21541, x_v21545)) 0) NULL
    in (ln __v21547 ⇒ let __v21548 = ch_v21544 in NULL) NULL

val prerrclo_i73 = fn s_v21549 ⇒ prerr_i27(s_v21549)

val digits_i28 =
  (consUU_c13
    "0"
    (consUU_c13
      "1"
      (consUU_c13
        "2"
        (consUU_c13
          "3"
          (consUU_c13
            "4"
            (consUU_c13
              "5"
              (consUU_c13
                "6"
                (consUU_c13 "7" (consUU_c13 "8" (consUU_c13 "9" nilUU_c12))))))))))

fun get_at_i29(A_v21550, n_v21551, xs_v21552, a_v21553) =
  let __v21554 = n_v21551 in
  if __v21554 then
    let n_v21555 = __v21554.-1 in
    match xs_v21552 with
    | nilUU_c12  ⇒ a_v21553
    | consUU_c13 __v21556 xs_v21557 ⇒
      get_at_i29(NULL, n_v21555, xs_v21557, a_v21553)
    end
  else
    match xs_v21552 with
    | nilUU_c12  ⇒ a_v21553 | consUU_c13 x_v21558 __v21559 ⇒ x_v21558
    end

val get_atclo_i74 =
  fn A_v21560 n_v21561 xs_v21562 a_v21563 ⇒
    get_at_i29(A_v21560, n_v21561, xs_v21562, a_v21563)

fun string_of_digit_i30(n_v21564) =
  get_at_i29(NULL, n_v21564, digits_i28, EmptyString_c2)

val string_of_digitclo_i75 = fn n_v21565 ⇒ string_of_digit_i30(n_v21565)

fun string_of_nat_i31(n_v21566) =
  let s_v21567 = string_of_digit_i30(modn_i14(n_v21566, 10)) in
  let n_v21568 = divn_i13(n_v21566, 10) in
  if ltn_i6(0, n_v21568) then
    cats_i15(string_of_nat_i31(n_v21568), s_v21567)
  else
    s_v21567

val string_of_natclo_i76 = fn n_v21569 ⇒ string_of_nat_i31(n_v21569)

fun powm_i33(a_v21570, b_v21571, m_v21572) =
  let __v21573 = b_v21571 in
  if __v21573 then
    let b_v21574 = __v21573.-1 in
    modn_i14(muln_i12(a_v21570, powm_i33(a_v21570, b_v21574, m_v21572)),
             m_v21572)
  else
    1

val powmclo_i77 =
  fn a_v21575 b_v21576 m_v21577 ⇒ powm_i33(a_v21575, b_v21576, m_v21577)

fun client_i38(ch_v21578) =
  let P0_v21579 = 123 in
  ln __v21580 ⇒
    let __v21581 = (ln __v21582 ⇒ (NULL, ch_v21578)) NULL in
    (match __v21581 with
     | (x_v21583, ch_v21584) ⇒
       ln __v21585 ⇒
         let __v21586 = (ln __v21587 ⇒ (NULL, ch_v21584)) NULL in
         (match __v21586 with
          | (y_v21588, ch_v21589) ⇒
            ln __v21590 ⇒
              let __v21591 = (ln __v21592 ⇒ recv(ch_v21589)) NULL in
              (match __v21591 with
               | (n_v21593, ch_v21594) ⇒
                 ln __v21595 ⇒
                   let __v21596 = (ln __v21597 ⇒ (NULL, ch_v21594)) NULL in
                   (match __v21596 with
                    | (pf1_v21598, ch_v21599) ⇒
                      ln __v21600 ⇒
                        let __v21601 =
                          (ln __v21602 ⇒ (NULL, ch_v21599)) NULL
                        in
                        (match __v21601 with
                         | (tot_v21603, ch_v21604) ⇒
                           ln __v21605 ⇒
                             let __v21606 =
                               (ln __v21607 ⇒ (NULL, ch_v21604)) NULL
                             in
                             (match __v21606 with
                              | (pf2_v21608, ch_v21609) ⇒
                                ln __v21610 ⇒
                                  let __v21611 =
                                    (ln __v21612 ⇒ recv(ch_v21609)) NULL
                                  in
                                  (match __v21611 with
                                   | (e_v21613, ch_v21614) ⇒
                                     ln __v21615 ⇒
                                       let __v21616 =
                                         (ln __v21617 ⇒ (NULL, ch_v21614))
                                           NULL
                                       in
                                       (match __v21616 with
                                        | (pf3_v21618, ch_v21619) ⇒
                                          ln __v21620 ⇒
                                            let __v21621 =
                                              (ln __v21622 ⇒
                                                 (NULL, ch_v21619))
                                                NULL
                                            in
                                            (match __v21621 with
                                             | (pf4_v21623, ch_v21624) ⇒
                                               ln __v21625 ⇒
                                                 let __v21626 =
                                                   (ln __v21627 ⇒
                                                      (NULL, ch_v21624))
                                                     NULL
                                                 in
                                                 (match __v21626 with
                                                  | (pf5_v21628, ch_v21629) ⇒
                                                    ln __v21630 ⇒
                                                      let ch_v21631 =
                                                        ((fn x_v21632 ⇒
                                                            ln __v21633 ⇒
                                                              ch_v21629)
                                                           NULL)
                                                          NULL
                                                      in
                                                      let ch_v21634 =
                                                        ((fn x_v21635 ⇒
                                                            ln __v21636 ⇒
                                                              send(ch_v21631, x_v21635))
                                                           powm_i33(P0_v21579,
                                                                    e_v21613,
                                                                    n_v21593))
                                                          NULL
                                                      in
                                                      let ch_v21637 =
                                                        ((fn x_v21638 ⇒
                                                            ln __v21639 ⇒
                                                              ch_v21634)
                                                           NULL)
                                                          NULL
                                                      in
                                                      (ln __v21640 ⇒
                                                         close(ch_v21637))
                                                        NULL
                                                  end) NULL
                                             end) NULL
                                        end) NULL
                                   end) NULL
                              end) NULL
                         end) NULL
                    end) NULL
               end) NULL
          end) NULL
     end) NULL

val clientclo_i78 = fn ch_v21641 ⇒ client_i38(ch_v21641)

fun server_i39(ch_v21642) =
  let x_v21643 = 7 in
  let y_v21644 = 19 in
  let n_v21645 = muln_i12(x_v21643, y_v21644) in
  let tot_v21646 = muln_i12(subn_i11(x_v21643, 1), subn_i11(y_v21644, 1)) in
  let e_v21647 = 5 in
  let d_v21648 = 65 in
  ln __v21649 ⇒
    let ch_v21650 = ((fn x_v21651 ⇒ ln __v21652 ⇒ ch_v21642) NULL) NULL
    in
    let ch_v21653 = ((fn x_v21654 ⇒ ln __v21655 ⇒ ch_v21650) NULL) NULL
    in
    let ch_v21656 =
      ((fn x_v21657 ⇒ ln __v21658 ⇒ send(ch_v21653, x_v21657)) n_v21645)
        NULL
    in
    let ch_v21659 = ((fn x_v21660 ⇒ ln __v21661 ⇒ ch_v21656) NULL) NULL
    in
    let ch_v21662 = ((fn x_v21663 ⇒ ln __v21664 ⇒ ch_v21659) NULL) NULL
    in
    let ch_v21665 = ((fn x_v21666 ⇒ ln __v21667 ⇒ ch_v21662) NULL) NULL
    in
    let ch_v21668 =
      ((fn x_v21669 ⇒ ln __v21670 ⇒ send(ch_v21665, x_v21669)) e_v21647)
        NULL
    in
    let ch_v21671 = ((fn x_v21672 ⇒ ln __v21673 ⇒ ch_v21668) NULL) NULL
    in
    let ch_v21674 = ((fn x_v21675 ⇒ ln __v21676 ⇒ ch_v21671) NULL) NULL
    in
    let ch_v21677 = ((fn x_v21678 ⇒ ln __v21679 ⇒ ch_v21674) NULL) NULL
    in
    let __v21680 = (ln __v21681 ⇒ (NULL, ch_v21677)) NULL in
    (match __v21680 with
     | (P0_v21682, ch_v21683) ⇒
       ln __v21684 ⇒
         let __v21685 = (ln __v21686 ⇒ recv(ch_v21683)) NULL in
         (match __v21685 with
          | (C_v21687, ch_v21688) ⇒
            ln __v21689 ⇒
              let __v21690 = (ln __v21691 ⇒ (NULL, ch_v21688)) NULL in
              (match __v21690 with
               | (pf_v21692, ch_v21693) ⇒
                 let P1_v21694 = powm_i33(C_v21687, d_v21648, n_v21645) in
                 ln __v21695 ⇒
                   let __v21696 =
                     (ln __v21697 ⇒ let __v21698 = ch_v21693 in NULL) NULL
                   in
                   (print_i26(cats_i15(string_of_nat_i31(P1_v21694), "\n")))
                     NULL
               end) NULL
          end) NULL
     end) NULL

val serverclo_i79 = fn ch_v21699 ⇒ server_i39(ch_v21699)

main =
  (ln __v21700 ⇒
     let c_v21701 =
       (ln __v21702 ⇒ fork c_v21703 in (server_i39(c_v21703)) NULL) NULL
     in
     let c0_v21704 =
       (ln __v21705 ⇒
          fork c0_v21706 in
            (ln __v21707 ⇒
               let __v21708 = (ln __v21709 ⇒ recv(c0_v21706)) NULL in
               (match __v21708 with
                | (c_v21710, c0_v21711) ⇒
                  ln __v21712 ⇒
                    let __v21713 =
                      (ln __v21714 ⇒ let __v21715 = c0_v21711 in NULL) NULL
                    in (client_i38(c_v21710)) NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v21716 =
       ((ln x_v21717 __v21718 ⇒ send(c0_v21704, x_v21717)) c_v21701) NULL
     in
     let __v21719 = (ln __v21720 ⇒ close(c0_v21716)) NULL in
     (ln __v21721 ⇒ sleep(1)) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v22995, b2_v22996) = if b1_v22995 then
                                      b2_v22996
                                    else
                                      0

val andbclo_i49 = fn b1_v22997 b2_v22998 ⇒ andb_i1(b1_v22997, b2_v22998)

fun orb_i2(b1_v22999, b2_v23000) = if b1_v22999 then
                                     1
                                   else
                                     b2_v23000

val orbclo_i50 = fn b1_v23001 b2_v23002 ⇒ orb_i2(b1_v23001, b2_v23002)

fun notb_i3(b_v23003) = if b_v23003 then
                          0
                        else
                          1

val notbclo_i51 = fn b_v23004 ⇒ notb_i3(b_v23004)

fun lten_i4(x_v23005, y_v23006) =
  if x_v23005 then
    if y_v23006 then
      lten_i4(x_v23005.-1, y_v23006.-1)
    else
      0
  else
    1

val ltenclo_i52 = fn x_v23007 y_v23008 ⇒ lten_i4(x_v23007, y_v23008)

fun gten_i5(x_v23009, y_v23010) =
  if x_v23009 then
    if y_v23010 then
      gten_i5(x_v23009.-1, y_v23010.-1)
    else
      1
  else
    if y_v23010 then
      0
    else
      1

val gtenclo_i53 = fn x_v23011 y_v23012 ⇒ gten_i5(x_v23011, y_v23012)

fun ltn_i6(x_v23013, y_v23014) =
  if x_v23013 then
    if y_v23014 then
      ltn_i6(x_v23013.-1, y_v23014.-1)
    else
      0
  else
    if y_v23014 then
      1
    else
      0

val ltnclo_i54 = fn x_v23015 y_v23016 ⇒ ltn_i6(x_v23015, y_v23016)

fun gtn_i7(x_v23017, y_v23018) =
  if x_v23017 then
    if y_v23018 then
      gtn_i7(x_v23017.-1, y_v23018.-1)
    else
      1
  else
    0

val gtnclo_i55 = fn x_v23019 y_v23020 ⇒ gtn_i7(x_v23019, y_v23020)

fun eqn_i8(x_v23021, y_v23022) =
  if x_v23021 then
    if y_v23022 then
      eqn_i8(x_v23021.-1, y_v23022.-1)
    else
      0
  else
    if y_v23022 then
      0
    else
      1

val eqnclo_i56 = fn x_v23023 y_v23024 ⇒ eqn_i8(x_v23023, y_v23024)

fun pred_i9(x_v23025) = if x_v23025 then
                          x_v23025.-1
                        else
                          0

val predclo_i57 = fn x_v23026 ⇒ pred_i9(x_v23026)

fun addn_i10(x_v23027, y_v23028) =
  if x_v23027 then
    addn_i10(x_v23027.-1, y_v23028).+1
  else
    y_v23028

val addnclo_i58 = fn x_v23029 y_v23030 ⇒ addn_i10(x_v23029, y_v23030)

fun subn_i11(x_v23031, y_v23032) =
  if y_v23032 then
    subn_i11(pred_i9(x_v23031), y_v23032.-1)
  else
    x_v23031

val subnclo_i59 = fn x_v23033 y_v23034 ⇒ subn_i11(x_v23033, y_v23034)

fun muln_i12(x_v23035, y_v23036) =
  if x_v23035 then
    addn_i10(y_v23036, muln_i12(x_v23035.-1, y_v23036))
  else
    0

val mulnclo_i60 = fn x_v23037 y_v23038 ⇒ muln_i12(x_v23037, y_v23038)

fun divn_i13(x_v23039, y_v23040) =
  if ltn_i6(x_v23039, y_v23040) then
    0
  else
    divn_i13(subn_i11(x_v23039, y_v23040), y_v23040).+1

val divnclo_i61 = fn x_v23041 y_v23042 ⇒ divn_i13(x_v23041, y_v23042)

fun modn_i14(x_v23043, y_v23044) =
  subn_i11(x_v23043, muln_i12(divn_i13(x_v23043, y_v23044), y_v23044))

val modnclo_i62 = fn x_v23045 y_v23046 ⇒ modn_i14(x_v23045, y_v23046)

fun cats_i15(s1_v23047, s2_v23048) =
  match s1_v23047 with
  | EmptyString_c2  ⇒ s2_v23048
  | String_c3 c_v23049 s1_v23050 ⇒
    (String_c3 c_v23049 cats_i15(s1_v23050, s2_v23048))
  end

val catsclo_i63 = fn s1_v23051 s2_v23052 ⇒ cats_i15(s1_v23051, s2_v23052)

fun strlen_i16(s_v23053) =
  match s_v23053 with
  | EmptyString_c2  ⇒ 0
  | String_c3 __v23054 s_v23055 ⇒ strlen_i16(s_v23055).+1
  end

val strlenclo_i64 = fn s_v23056 ⇒ strlen_i16(s_v23056)

fun lenUU_i44(A_v23057, xs_v23058) =
  match xs_v23058 with
  | nilUU_c12  ⇒ (0, nilUU_c12)
  | consUU_c13 x_v23059 xs_v23060 ⇒
    match lenUU_i44(NULL, xs_v23060) with
    | (n_v23061, xs_v23062) ⇒
      (n_v23061.+1, (consUU_c13 x_v23059 xs_v23062))
    end
  end

val lenUUclo_i65 = fn A_v23063 xs_v23064 ⇒ lenUU_i44(A_v23063, xs_v23064)

fun lenUL_i43(A_v23065, xs_v23066) =
  match xs_v23066 with
  | nilUL_c10  ⇒ (0, nilUL_c10)
  | consUL_c11 x_v23067 xs_v23068 ⇒
    match lenUL_i43(NULL, xs_v23068) with
    | (n_v23069, xs_v23070) ⇒
      (n_v23069.+1, (consUL_c11 x_v23067 xs_v23070))
    end
  end

val lenULclo_i66 = fn A_v23071 xs_v23072 ⇒ lenUL_i43(A_v23071, xs_v23072)

fun lenLL_i41(A_v23073, xs_v23074) =
  match xs_v23074 with
  | nilLL_c6  ⇒ (0, nilLL_c6)
  | consLL_c7 x_v23075 xs_v23076 ⇒
    match lenLL_i41(NULL, xs_v23076) with
    | (n_v23077, xs_v23078) ⇒ (n_v23077.+1, (consLL_c7 x_v23075 xs_v23078))
    end
  end

val lenLLclo_i67 = fn A_v23079 xs_v23080 ⇒ lenLL_i41(A_v23079, xs_v23080)

fun appendUU_i48(A_v23081, xs_v23082, ys_v23083) =
  match xs_v23082 with
  | nilUU_c12  ⇒ ys_v23083
  | consUU_c13 x_v23084 xs_v23085 ⇒
    (consUU_c13 x_v23084 appendUU_i48(NULL, xs_v23085, ys_v23083))
  end

val appendUUclo_i68 =
  fn A_v23086 xs_v23087 ⇒
    ln ys_v23088 ⇒ appendUU_i48(A_v23086, xs_v23087, ys_v23088)

fun appendUL_i47(A_v23089, xs_v23090, ys_v23091) =
  match xs_v23090 with
  | nilUL_c10  ⇒ ys_v23091
  | consUL_c11 x_v23092 xs_v23093 ⇒
    (consUL_c11 x_v23092 appendUL_i47(NULL, xs_v23093, ys_v23091))
  end

val appendULclo_i69 =
  fn A_v23094 xs_v23095 ⇒
    ln ys_v23096 ⇒ appendUL_i47(A_v23094, xs_v23095, ys_v23096)

fun appendLL_i45(A_v23097, xs_v23098, ys_v23099) =
  match xs_v23098 with
  | nilLL_c6  ⇒ ys_v23099
  | consLL_c7 x_v23100 xs_v23101 ⇒
    (consLL_c7 x_v23100 appendLL_i45(NULL, xs_v23101, ys_v23099))
  end

val appendLLclo_i70 =
  fn A_v23102 xs_v23103 ⇒
    ln ys_v23104 ⇒ appendLL_i45(A_v23102, xs_v23103, ys_v23104)

fun readline_i25(__v23105) =
  ln __v23106 ⇒
    let ch_v23107 = open stdin in
    let ch_v23108 = send(ch_v23107, 1) in
    let __v23109 = recv(ch_v23108) in
    match __v23109 with
    | (s_v23110, ch_v23111) ⇒
      let ch_v23112 = send(ch_v23111, 0) in s_v23110
    end

val readlineclo_i71 = fn __v23113 ⇒ readline_i25(__v23113)

fun print_i26(s_v23114) =
  ln __v23115 ⇒
    let ch_v23116 = open stdout in
    let ch_v23117 = send(ch_v23116, 1) in
    let ch_v23118 = send(ch_v23117, s_v23114) in
    let ch_v23119 = send(ch_v23118, 0) in NULL

val printclo_i72 = fn s_v23120 ⇒ print_i26(s_v23120)

fun prerr_i27(s_v23121) =
  ln __v23122 ⇒
    let ch_v23123 = open stderr in
    let ch_v23124 = send(ch_v23123, 1) in
    let ch_v23125 = send(ch_v23124, s_v23121) in
    let ch_v23126 = send(ch_v23125, 0) in NULL

val prerrclo_i73 = fn s_v23127 ⇒ prerr_i27(s_v23127)

val digits_i28 =
  (consUU_c13
    "0"
    (consUU_c13
      "1"
      (consUU_c13
        "2"
        (consUU_c13
          "3"
          (consUU_c13
            "4"
            (consUU_c13
              "5"
              (consUU_c13
                "6"
                (consUU_c13 "7" (consUU_c13 "8" (consUU_c13 "9" nilUU_c12))))))))))

fun get_at_i29(A_v23128, n_v23129, xs_v23130, a_v23131) =
  if n_v23129 then
    match xs_v23130 with
    | nilUU_c12  ⇒ a_v23131
    | consUU_c13 __v23132 xs_v23133 ⇒
      get_at_i29(NULL, n_v23129.-1, xs_v23133, a_v23131)
    end
  else
    match xs_v23130 with
    | nilUU_c12  ⇒ a_v23131 | consUU_c13 x_v23134 __v23135 ⇒ x_v23134
    end

val get_atclo_i74 =
  fn A_v23136 n_v23137 xs_v23138 a_v23139 ⇒
    get_at_i29(A_v23136, n_v23137, xs_v23138, a_v23139)

fun string_of_digit_i30(n_v23140) =
  get_at_i29(NULL, n_v23140, digits_i28, EmptyString_c2)

val string_of_digitclo_i75 = fn n_v23141 ⇒ string_of_digit_i30(n_v23141)

fun string_of_nat_i31(n_v23142) =
  let s_v23143 = string_of_digit_i30(modn_i14(n_v23142, 10)) in
  let n_v23144 = divn_i13(n_v23142, 10) in
  if ltn_i6(0, n_v23144) then
    cats_i15(string_of_nat_i31(n_v23144), s_v23143)
  else
    s_v23143

val string_of_natclo_i76 = fn n_v23145 ⇒ string_of_nat_i31(n_v23145)

fun powm_i33(a_v23146, b_v23147, m_v23148) =
  if b_v23147 then
    modn_i14(muln_i12(a_v23146, powm_i33(a_v23146, b_v23147.-1, m_v23148)),
             m_v23148)
  else
    1

val powmclo_i77 =
  fn a_v23149 b_v23150 m_v23151 ⇒ powm_i33(a_v23149, b_v23150, m_v23151)

fun client_i38(ch_v23152) =
  ln __v23153 ⇒
    match (NULL, ch_v23152) with
    | (x_v23154, ch_v23155) ⇒
      match (NULL, ch_v23155) with
      | (y_v23156, ch_v23157) ⇒
        let __v23158 = recv(ch_v23157) in
        match __v23158 with
        | (n_v23159, ch_v23160) ⇒
          match (NULL, ch_v23160) with
          | (pf1_v23161, ch_v23162) ⇒
            match (NULL, ch_v23162) with
            | (tot_v23163, ch_v23164) ⇒
              match (NULL, ch_v23164) with
              | (pf2_v23165, ch_v23166) ⇒
                let __v23167 = recv(ch_v23166) in
                match __v23167 with
                | (e_v23168, ch_v23169) ⇒
                  match (NULL, ch_v23169) with
                  | (pf3_v23170, ch_v23171) ⇒
                    match (NULL, ch_v23171) with
                    | (pf4_v23172, ch_v23173) ⇒
                      match (NULL, ch_v23173) with
                      | (pf5_v23174, ch_v23175) ⇒
                        let ch_v23176 =
                          let x_v23177 = powm_i33(123, e_v23168, n_v23159) in
                          send(ch_v23175, x_v23177)
                        in close(ch_v23176)
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

val clientclo_i78 = fn ch_v23178 ⇒ client_i38(ch_v23178)

fun server_i39(ch_v23179) =
  let n_v23180 = muln_i12(7, 19) in
  let tot_v23181 = muln_i12(subn_i11(7, 1), subn_i11(19, 1)) in
  ln __v23182 ⇒
    let ch_v23183 = send(ch_v23179, n_v23180) in
    let ch_v23184 = send(ch_v23183, 5) in
    match (NULL, ch_v23184) with
    | (P0_v23185, ch_v23186) ⇒
      let __v23187 = recv(ch_v23186) in
      match __v23187 with
      | (C_v23188, ch_v23189) ⇒
        match (NULL, ch_v23189) with
        | (pf_v23190, ch_v23191) ⇒
          let P1_v23192 = powm_i33(C_v23188, 65, n_v23180) in
          (print_i26(cats_i15(string_of_nat_i31(P1_v23192), "\n"))) NULL
        end
      end
    end

val serverclo_i79 = fn ch_v23193 ⇒ server_i39(ch_v23193)

main =
  let c_v23194 = fork c_v23195 in (server_i39(c_v23195)) NULL in
  let c0_v23196 =
    fork c0_v23197 in
      let __v23198 = recv(c0_v23197) in
      match __v23198 with
      | (c_v23199, c0_v23200) ⇒ (client_i38(c_v23199)) NULL
      end
  in
  let c0_v23201 = send(c0_v23196, c_v23194) in
  let __v23202 = close(c0_v23201) in sleep(1)

trans3e success--------------------------

trans34 success--------------------------

