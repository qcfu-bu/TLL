logical eq_sym‹s› (A : Type‹s›) (x : A) (y : A) : (∀ (_ : x ≡ y) → y ≡ x) = (fn (e : _) ⇒ rew [y, _ ⇒ y ≡ x] e in refl)

logical eq_trans‹s› (A : Type‹s›) (x : A) (y : A) (z : A) : (∀ (_ : x ≡ y) → (∀ (_ : y ≡ z) → x ≡ z)) = (fn (e1 : _) ⇒ (fn (e2 : _) ⇒ rew [y0, _ ⇒ x ≡ y0] e2 in e1))

logical f_equal‹s,
t› (A : Type‹s›) (B : Type‹t›) (f : (∀ (_ : A) → B)) (x : A) (y : A) : (∀ (_ : x ≡ y) → (
(f) (x)) ≡ ((f) (y))) = (fn (e : _) ⇒ rew [y, p ⇒ ((f) (x)) ≡ (
(f)
(y))] e in refl)

logical bool_absurd‹› (e : true ≡ false) : ⊥ = rew [x, _ ⇒ match x as _ in _ with true ⇒ unit | false ⇒ ⊥] e in ()

logical nat_absurd‹› (n : nat) (e : n.+1 ≡ O) : ⊥ = rew [x, _ ⇒ match x as _ in _ with O ⇒ ⊥ | S _ ⇒ unit] e in ()

logical nat_inv‹› (n1 : nat) (n2 : nat) (e : n1.+1 ≡ n2.+1) : n1 ≡ n2 = (
(f_equal) (_) (_) (pred) (_) (_)
(e))

logical eqn_reflect‹› (m : nat) (n : nat) : (∀ (_ : ((eqn) (m)
(n)) ≡ true) → m ≡ n) = match m as m0 in (∀ (_ : ((eqn) (m0)
(n)) ≡ true) → m0 ≡ n) with O ⇒ match n as n0 in (∀ (_ : ((eqn)
(O.+0)
(n0)) ≡ true) → O.+0 ≡ n0) with O ⇒ (fn (_ : _) ⇒ refl) | S n ⇒ (fn (e : _) ⇒ absurd (
(bool_absurd)
(((eq_sym) (_) (_) (_) (e))))) | S m ⇒ match n as n0 in (∀ (_ : (
(eqn) (m.+1)
(n0)) ≡ true) → m.+1 ≡ n0) with O ⇒ (fn (e : _) ⇒ absurd ((bool_absurd)
(((eq_sym) (_) (_) (_) (e))))) | S n ⇒ (fn (e : _) ⇒ ((f_equal) (_) 
(_) ((fn (x : _) ⇒ x.+1)) (_) (_)
(((eqn_reflect) (m) (n) (e)))))

logical eqc_reflect‹› (c1 : char) (c2 : char) : (∀ (_ : ((eqc) 
(c1) (c2)) ≡ true) → c1 ≡ c2) = match c1 as c0 in (∀ (_ : ((eqc) 
(c0)
(c2)) ≡ true) → c0 ≡ c2) with Char m ⇒ match c2 as c0 in (∀ (_ : (
(eqc) (((Char) (m))) (c0)) ≡ true) → ((Char)
(m)) ≡ c0) with Char n ⇒ (fn (e : _) ⇒ let e = ((eqn_reflect) (_) 
(_) (e)) in ((f_equal) (_) (_) ((fn (x : _) ⇒ ((Char) (x)))) (_) (_)
(e)))

program contains‹› (c : char) (s : string) : bool = match s as _ in _ with EmptyString  ⇒ false | String c0
s ⇒ match ((eqc) (c)
(c0)) as _ in _ with true ⇒ true | false ⇒ ((contains) (c)
(s))

inductive subset‹s, r,
t› (A : Type‹s›) (P : (∀ (_ : A) → Type‹r›)) : Type‹t› = SPair of ‹s,
r,
t› {A : Type‹s›} {P : (∀ (_ : A) → Type‹r›)} (m : A) {pf : (
(P) (m))} → ((subset‹s, r, t›) (A)
(P))

inductive diff‹› (ans : string) (a : string) (b : string) (df : string) : U = diff_EmptyString of ‹› {ans : string} {a : string} {b : string} {df : string} (pf1 : a ≡ EmptyString) (pf2 : b ≡ EmptyString) (pf3 : df ≡ EmptyString) → (
(diff‹›) (ans) (a) (b)
(df)) | diff_StringY of ‹› {ans : string} {a : string} {b : string} {df : string} (c : char) (s1 : string) (s2 : string) (s3 : string) (h : (
(diff) (ans) (s1) (s2) (s3))) (pf1 : a ≡ ((String) (c)
(s1))) (pf2 : b ≡ ((String) (c) (s2))) (pf3 : df ≡ ((cats)
(((String) (((Char) (O.+89))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df)) | diff_StringI of ‹› {ans : string} {a : string} {b : string} {df : string} (c1 : char) (c2 : char) (s1 : string) (s2 : string) (s3 : string) (h1 : (
(eqc) (c1) (c2)) ≡ false) (h2 : ((contains) (c2)
(ans)) ≡ true) (h3 : ((diff) (ans) (s1) (s2) (s3))) (pf1 : a ≡ ((String)
(c1) (s1))) (pf2 : b ≡ ((String) (c2) (s2))) (pf3 : df ≡ ((cats)
(((String) (((Char) (O.+73))) (EmptyString))) (s3))) → ((diff‹›) 
(ans) (a) (b)
(df)) | diff_StringN of ‹› {ans : string} {a : string} {b : string} {df : string} (c1 : char) (c2 : char) (s1 : string) (s2 : string) (s3 : string) (h1 : (
(eqc) (c1) (c2)) ≡ false) (h2 : ((contains) (c2)
(ans)) ≡ false) (h3 : ((diff) (ans) (s1) (s2) (s3))) (pf1 : a ≡ (
(String) (c1) (s1))) (pf2 : b ≡ ((String) (c2) (s2))) (pf3 : df ≡ (
(cats) (((String) (((Char) (O.+78))) (EmptyString))) (s3))) → ((diff‹›)
(ans) (a) (b)
(df))

program string_diff‹› (ans : string) (s1 : string) (s2 : string) : (∀ {_ : (
(strlen) (s1)) ≡ ((strlen) (s2))} → ((subset‹_, _, U›) (string)
((fn (df : _) ⇒ ((diff) (ans) (s1) (s2) (df)))))) = match s1 as s0 in (∀ {_ : (
(strlen) (s0)) ≡ ((strlen) (s2))} → ((subset) (string)
((fn (df : _) ⇒ ((diff) (ans) (s0) (s2) (df)))))) with EmptyString  ⇒ match s2 as s0 in (∀ {_ : O.+0 ≡ (
(strlen) (s0))} → ((subset) (string)
((fn (df : _) ⇒ ((diff) (ans) (EmptyString) (s0) (df)))))) with EmptyString  ⇒ (fn {e : _} ⇒ (
(SPair) (EmptyString)
(((diff_EmptyString) (refl) (refl) (refl))))) | String c2
s2 ⇒ (fn {e : _} ⇒ rew [x, _ ⇒ match x as _ in _ with O ⇒ unit | S _ ⇒ (
(subset) (string)
((fn (df : _) ⇒ ((diff) (ans) (EmptyString) (((String) (c2) (s2))) (df)))))] e in ()) | String c1
s1 ⇒ match s2 as s0 in (∀ {_ : ((strlen) (s1)).+1 ≡ ((strlen)
(s0))} → ((subset) (string)
((fn (df : _) ⇒ ((diff) (ans) (((String) (c1) (s1))) (s0) (df)))))) with EmptyString  ⇒ (fn {e : _} ⇒ rew [x, _ ⇒ match x as _ in _ with O ⇒ (
(subset) (string)
((fn (df : _) ⇒ ((diff) (ans) (((String) (c1) (s1))) (EmptyString) (df))))) | S _ ⇒ unit] e in ()) | String c2
s2 ⇒ (fn {e : _} ⇒ let {e} = ((nat_inv) (_) (_)
(e)) in match ((string_diff) (ans) (s1) (s2) (e)) as _ in _ with SPair df
pf ⇒ ((match ((eqc) (c1) (c2)) as b0 in (∀ {_ : ((eqc) (c1)
         (c2)) ≡ b0} → ((subset) (string)
         ((fn (df : _) ⇒ ((diff) (ans) (((String) (c1) (s1)))
          (((String) (c2) (s2))) (df)))))) with true ⇒ (fn {e1 : _} ⇒ let {e1} = (
         (eqc_reflect) (_) (_) (e1)) in let {h} = rew [c, _ ⇒ ((String) 
         (c) (s2)) ≡ ((String) (c1) (s2))] e1 in refl in ((SPair)
         (((cats) (((String) (((Char) (O.+89))) (EmptyString))) (df)))
         (((diff_StringY) (_) (_) (_) (_) (pf) (refl) (h) (refl))))) | false ⇒ (fn {e1 : _} ⇒ (
         (match ((contains) (c2) (ans)) as b0 in (∀ {_ : ((contains) 
          (c2) (ans)) ≡ b0} → ((subset) (string)
          ((fn (df : _) ⇒ ((diff) (ans) (((String) (c1) (s1)))
           (((String) (c2) (s2))) (df)))))) with true ⇒ (fn {e2 : _} ⇒ (
          (SPair)
          (((cats) (((String) (((Char) (O.+73))) (EmptyString))) (df)))
          (((diff_StringI) (_) (_) (_) (_) (_) (e1) (e2) (pf) (refl) 
           (refl) (refl))))) | false ⇒ (fn {e2 : _} ⇒ ((SPair)
          (((cats) (((String) (((Char) (O.+78))) (EmptyString))) (df)))
          (((diff_StringN) (_) (_) (_) (_) (_) (e1) (e2) (pf) (refl) 
           (refl) (refl))))))
         (refl))))
(refl)))

logical diff_len‹› (ans : string) (s1 : string) (s2 : string) (df : string) (h : (
(diff) (ans) (s1) (s2) (df))) : ((strlen) (df)) ≡ ((strlen)
(s1)) = match h as _ in _ with diff_EmptyString pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen)
(df0)) ≡ O.+0] pf3 in refl | diff_StringY c s0 s3 s4 h1 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h1)) in refl | diff_StringI c1 _ s0 s3 s4 _ _ h3 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c1) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h3)) in refl | diff_StringN c1 _ s0 s3 s4 _ _ h3 pf1 _
pf3 ⇒ let pf1 = ((eq_sym) (_) (_) (_) (pf1)) in let pf3 = ((eq_sym) 
(_) (_) (_) (pf3)) in rew [s0, _ ⇒ ((strlen) (df)) ≡ ((strlen)
(s0))] pf1 in rew [df0, _ ⇒ ((strlen) (df0)) ≡ ((strlen)
(((String) (c1) (s0))))] pf3 in rew [n, _ ⇒ ((strlen)
(s4)).+1 ≡ n.+1] ((diff_len) (_) (_) (_) (_)
(h3)) in refl

inductive word‹› : U = Word of ‹› (s : string) {pf : ((strlen)
(s)) ≡ O.+5} → ((word‹›))

inductive wdiff‹› (ans : word) (guess : word) (df : word) : U = diff_Word of ‹› {ans : word} {guess : word} {df : word} (s1 : string) (s2 : string) (s3 : string) (pf1 : (
(strlen) (s1)) ≡ O.+5) (pf2 : ((strlen) (s2)) ≡ O.+5) (pf3 : ((strlen)
(s3)) ≡ O.+5) (pf4 : ans ≡ ((Word) (s1) (pf1))) (pf5 : guess ≡ (
(Word) (s2) (pf2))) (pf6 : df ≡ ((Word) (s3) (pf3))) (pf7 : ((diff) 
(s1) (s1) (s2) (s3))) → ((wdiff‹›) (ans) (guess)
(df))

program word_diff‹› (ans : word) (guess : word) : ((subset‹_, _, U›)
(word)
((fn (df : _) ⇒ ((wdiff) (ans) (guess) (df))))) = ((match ans as ans0 in (∀ {_ : ans ≡ ans0} → (
                                                      (subset) (word)
                                                      ((fn (df : _) ⇒ (
                                                       (wdiff) (ans) 
                                                       (guess) (df)))))) with Word s1
                                                      pf1 ⇒ (fn {e1 : _} ⇒ (
                                                      (match guess as guess0 in (∀ {_ : guess ≡ guess0} → (
                                                       (subset) (word)
                                                       ((fn (df : _) ⇒ (
                                                        (wdiff) (ans) 
                                                        (guess) (df)))))) with Word s2
                                                       pf2 ⇒ (fn {e2 : _} ⇒ let {e} = (
                                                       (eq_trans) (_) 
                                                       (_) (_) (_) (pf1)
                                                       (((eq_sym) (_) 
                                                        (_) (_) (pf2)))) in match (
                                                       (string_diff) 
                                                       (s1) (s1) (s2)
                                                       (e)) as _ in _ with SPair s3
                                                       h ⇒ let {e} = (
                                                       (diff_len) (_) 
                                                       (_) (_) (_)
                                                       (h)) in let {pf} = (
                                                       (eq_trans) (_) 
                                                       (_) (_) (_) (e)
                                                       (pf1)) in ((SPair)
                                                       (((Word) (s3) (pf)))
                                                       (((diff_Word) 
                                                        (s1) (s2) (s3) 
                                                        (pf1) (pf2) (pf) 
                                                        (e1) (e2) (refl)
                                                        (h))))))
                                                      (refl))))
(refl))

program eqw‹› (w1 : word) (w2 : word) : bool = match w1 as _ in _ with Word s1
_ ⇒ match w2 as _ in _ with Word s2 _ ⇒ ((eqs) (s1)
(s2))

logical wordle_loop‹› (ans : word) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ !(w : word) → !{_ : w ≡ ans} → end | S repeat ⇒ ?(guess : word) → !(b : bool) → !{_ : b ≡ (
(eqw) (ans)
(guess))} → match b as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
(wdiff) (ans) (guess) (df))} → ((wordle_loop) (ans)
(repeat))

logical wordle‹› : proto = !{ans : word} → !(repeat : nat) → (
(wordle_loop) (ans)
(repeat))

logical loop_ch‹› (ans : word) (repeat : nat) : L = ch‹((wordle_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : word) (repeat : nat) : L = hc‹((wordle_loop)
(ans)
(repeat))›

logical wordle_ch‹› : L = ch‹wordle›

logical wordle_hc‹› : L = hc‹wordle›

program read_word‹› (_ : unit) : IO word = let s ⇐ ((readline)
(())) in ((match ((eqn) (((strlen) (s))) (O.+5)) as b0 in (∀ {_ : (
           (eqn) (((strlen) (s)))
           (O.+5)) ≡ b0} → IO word) with true ⇒ (fn {e : _} ⇒ return (
           (Word) (s)
           (((eqn_reflect) (_) (_) (e))))) | false ⇒ (fn {_ : _} ⇒ let _ ⇐ (
           (print)
           (((String) (((Char) (O.+112)))
            (((String) (((Char) (O.+108)))
             (((String) (((Char) (O.+101)))
              (((String) (((Char) (O.+97)))
               (((String) (((Char) (O.+115)))
                (((String) (((Char) (O.+101)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+105)))
                   (((String) (((Char) (O.+110)))
                    (((String) (((Char) (O.+112)))
                     (((String) (((Char) (O.+117)))
                      (((String) (((Char) (O.+116)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+97)))
                         (((String) (((Char) (O.+32)))
                          (((String) (((Char) (O.+119)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+100)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+119)))
                                (((String) (((Char) (O.+105)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+104)))
                                   (((String) (((Char) (O.+32)))
                                    (((String) (((Char) (O.+108)))
                                     (((String) (((Char) (O.+101)))
                                      (((String) (((Char) (O.+110)))
                                       (((String) (((Char) (O.+103)))
                                        (((String) (((Char) (O.+116)))
                                         (((String) (((Char) (O.+104)))
                                          (((String) (((Char) (O.+32)))
                                           (((String) (((Char) (O.+111)))
                                            (((String) (((Char) (O.+102)))
                                             (((String) (((Char) (O.+32)))
                                              (((String) (((Char) (O.+53)))
                                               (((String) (((Char) (O.+10)))
                                                (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
           (read_word) (()))))
(refl))

program player_loop‹› {ans : word} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_hc)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let ⟨ans, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in match ans as _ in _ with Word s
                         _ ⇒ let _ ⇐ ((print)
                         (((cats)
                          (((cats)
                           (((String) (((Char) (O.+89)))
                            (((String) (((Char) (O.+111)))
                             (((String) (((Char) (O.+117)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+76)))
                                (((String) (((Char) (O.+111)))
                                 (((String) (((Char) (O.+115)))
                                  (((String) (((Char) (O.+101)))
                                   (((String) (((Char) (O.+33)))
                                    (((String) (((Char) (O.+32)))
                                     (((String) (((Char) (O.+84)))
                                      (((String) (((Char) (O.+104)))
                                       (((String) (((Char) (O.+101)))
                                        (((String) (((Char) (O.+32)))
                                         (((String) (((Char) (O.+97)))
                                          (((String) (((Char) (O.+110)))
                                           (((String) (((Char) (O.+115)))
                                            (((String) (((Char) (O.+119)))
                                             (((String) (((Char) (O.+101)))
                                              (((String) (((Char) (O.+114)))
                                               (((String) (((Char) (O.+32)))
                                                (((String)
                                                 (((Char) (O.+105)))
                                                 (((String)
                                                  (((Char) (O.+115)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))
                           (s)))
                          (((String) (((Char) (O.+46)))
                           (((String) (((Char) (O.+10))) (EmptyString)))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                         (read_word) (())) in let c ⇐ ((send c)
                         (guess)) in let ⟨b, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                         (match b as b0 in (∀ (_ : hc‹match b0 as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
                          (wdiff) (ans) (guess) (df))} → ((wordle_loop)
                          (ans)
                          (repeat))›) ⊸ IO unit) with true ⇒ (ln (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((String) (((Char) (O.+89)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+117)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+87)))
                               (((String) (((Char) (O.+105)))
                                (((String) (((Char) (O.+110)))
                                 (((String) (((Char) (O.+33)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))))))))))))))) in close c) | false ⇒ (ln (c : _) ⇒ let ⟨diff, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in match diff as _ in _ with Word s
                          _ ⇒ let _ ⇐ ((print)
                          (((cats)
                           (((cats)
                            (((cats)
                             (((cats)
                              (((String) (((Char) (O.+73)))
                               (((String) (((Char) (O.+110)))
                                (((String) (((Char) (O.+99)))
                                 (((String) (((Char) (O.+111)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+114)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+99)))
                                      (((String) (((Char) (O.+116)))
                                       (((String) (((Char) (O.+44)))
                                        (((String) (((Char) (O.+32)))
                                         (((String) (((Char) (O.+104)))
                                          (((String) (((Char) (O.+105)))
                                           (((String) (((Char) (O.+110)))
                                            (((String) (((Char) (O.+116)))
                                             (((String) (((Char) (O.+58)))
                                              (((String) (((Char) (O.+32)))
                                               (EmptyString)))))))))))))))))))))))))))))))))))
                              (s)))
                             (((String) (((Char) (O.+46)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+89)))
                                (((String) (((Char) (O.+111)))
                                 (((String) (((Char) (O.+117)))
                                  (((String) (((Char) (O.+32)))
                                   (((String) (((Char) (O.+104)))
                                    (((String) (((Char) (O.+97)))
                                     (((String) (((Char) (O.+118)))
                                      (((String) (((Char) (O.+101)))
                                       (((String) (((Char) (O.+32)))
                                        (EmptyString)))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program player‹› (c : wordle_hc) : IO unit = let ⟨{ans}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((String) (((Char) (O.+87)))
 (((String) (((Char) (O.+111)))
  (((String) (((Char) (O.+114)))
   (((String) (((Char) (O.+100)))
    (((String) (((Char) (O.+108)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+71)))
        (((String) (((Char) (O.+97)))
         (((String) (((Char) (O.+109)))
          (((String) (((Char) (O.+101)))
           (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))) in let _ ⇐ (
(print)
(((String) (((Char) (O.+80)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+103)))
        (((String) (((Char) (O.+117)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+115)))
           (((String) (((Char) (O.+115)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+119)))
                (((String) (((Char) (O.+111)))
                 (((String) (((Char) (O.+114)))
                  (((String) (((Char) (O.+100)))
                   (((String) (((Char) (O.+32)))
                    (((String) (((Char) (O.+111)))
                     (((String) (((Char) (O.+102)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+108)))
                        (((String) (((Char) (O.+101)))
                         (((String) (((Char) (O.+110)))
                          (((String) (((Char) (O.+103)))
                           (((String) (((Char) (O.+116)))
                            (((String) (((Char) (O.+104)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+53)))
                               (((String) (((Char) (O.+46)))
                                (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

inductive at‹› (A : U) (x : A) (n : nat) (xs : ((list‹_, U›)
(A))) : U = at_O of ‹› {A : U} {x : A} {n : nat} {xs : ((list‹_, U›)
(A))} (xs0 : ((list) (A))) (pf1 : n ≡ O.+0) (pf2 : xs ≡ ((cons) (x)
(xs0))) → ((at‹›) (A) (x) (n)
(xs)) | at_S of ‹› {A : U} {x : A} {n : nat} {xs : ((list‹_, U›)
(A))} (n0 : nat) (x0 : A) (xs0 : ((list) (A))) (h : ((at) (A) (x) (n0)
(xs0))) (pf1 : n ≡ n0.+1) (pf2 : xs ≡ ((cons) (x0)
(xs0))) → ((at‹›) (A) (x) (n)
(xs))

logical ltn_inv‹› (m : nat) (n : nat) : (∀ (_ : ((ltn) (m.+1)
(n.+1)) ≡ true) → ((ltn) (m)
(n)) ≡ true) = (fn (h : _) ⇒ h)

program get_at‹› {A : U} (n : nat) (xs : ((list) (A))) : (∀ {_ : (
(ltn) (n) (((llen) (_) (xs)))) ≡ true} → ((subset‹_, _, U›) (_)
((fn (x : _) ⇒ ((at) (_) (x) (n) (xs)))))) = match xs as xs0 in (∀ {_ : (
(ltn) (n) (((llen) (_) (xs0)))) ≡ true} → ((subset) (_)
((fn (x : _) ⇒ ((at) (_) (x) (n) (xs0)))))) with nil  ⇒ (fn {e : _} ⇒ rew [b, _ ⇒ match b as _ in _ with true ⇒ (
(subset) (_)
((fn (x : _) ⇒ ((at) (_) (x) (n) (nil))))) | false ⇒ unit] e in ()) | cons x
xs ⇒ match n as n0 in (∀ {_ : ((ltn) (n0)
(((llen) (_) (xs)).+1)) ≡ true} → ((subset) (_)
((fn (x0 : _) ⇒ ((at) (_) (x0) (n0) (((cons) (x) (xs)))))))) with O ⇒ (fn {e : _} ⇒ (
(SPair) (x)
(((at_O) (xs) (refl) (refl))))) | S n ⇒ (fn {e : _} ⇒ match ((get_at) 
(_) (n) (xs) (((ltn_inv) (_) (_) (e)))) as _ in _ with SPair x0
pf ⇒ ((SPair) (x0)
(((at_S) (_) (_) (_) (pf) (refl) (refl)))))

program rand_word‹› (_ : unit) : IO word = let words = (((cons)
(((Word)
 (((String) (((Char) (O.+114)))
  (((String) (((Char) (O.+111)))
   (((String) (((Char) (O.+117)))
    (((String) (((Char) (O.+116)))
     (((String) (((Char) (O.+101))) (EmptyString)))))))))))
 (refl)))
(((cons)
 (((Word)
  (((String) (((Char) (O.+99)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+115)))
      (((String) (((Char) (O.+104))) (EmptyString)))))))))))
  (refl)))
 (((cons)
  (((Word)
   (((String) (((Char) (O.+99)))
    (((String) (((Char) (O.+108)))
     (((String) (((Char) (O.+111)))
      (((String) (((Char) (O.+119)))
       (((String) (((Char) (O.+110))) (EmptyString)))))))))))
   (refl)))
  (((cons)
   (((Word)
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+104)))
      (((String) (((Char) (O.+97)))
       (((String) (((Char) (O.+107)))
        (((String) (((Char) (O.+121))) (EmptyString)))))))))))
    (refl)))
   (((cons)
    (((Word)
     (((String) (((Char) (O.+118)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+103)))
        (((String) (((Char) (O.+97)))
         (((String) (((Char) (O.+110))) (EmptyString)))))))))))
     (refl)))
    (((cons)
     (((Word)
      (((String) (((Char) (O.+112)))
       (((String) (((Char) (O.+111)))
        (((String) (((Char) (O.+119)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+114))) (EmptyString)))))))))))
      (refl)))
     (((cons)
      (((Word)
       (((String) (((Char) (O.+116)))
        (((String) (((Char) (O.+114)))
         (((String) (((Char) (O.+117)))
          (((String) (((Char) (O.+115)))
           (((String) (((Char) (O.+116))) (EmptyString)))))))))))
       (refl)))
      (((cons)
       (((Word)
        (((String) (((Char) (O.+101)))
         (((String) (((Char) (O.+110)))
          (((String) (((Char) (O.+106)))
           (((String) (((Char) (O.+111)))
            (((String) (((Char) (O.+121))) (EmptyString)))))))))))
        (refl)))
       (((cons)
        (((Word)
         (((String) (((Char) (O.+98)))
          (((String) (((Char) (O.+114)))
           (((String) (((Char) (O.+97)))
            (((String) (((Char) (O.+105)))
             (((String) (((Char) (O.+110))) (EmptyString)))))))))))
         (refl)))
        (((cons)
         (((Word)
          (((String) (((Char) (O.+97)))
           (((String) (((Char) (O.+100)))
            (((String) (((Char) (O.+111)))
             (((String) (((Char) (O.+112)))
              (((String) (((Char) (O.+116))) (EmptyString)))))))))))
          (refl)))
         (((cons)
          (((Word)
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+111)))
             (((String) (((Char) (O.+119)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+114))) (EmptyString)))))))))))
           (refl)))
          (((cons)
           (((Word)
            (((String) (((Char) (O.+115)))
             (((String) (((Char) (O.+104)))
              (((String) (((Char) (O.+97)))
               (((String) (((Char) (O.+100)))
                (((String) (((Char) (O.+101))) (EmptyString)))))))))))
            (refl)))
           (((cons)
            (((Word)
             (((String) (((Char) (O.+100)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+108)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+121))) (EmptyString)))))))))))
             (refl)))
            (((cons)
             (((Word)
              (((String) (((Char) (O.+116)))
               (((String) (((Char) (O.+119)))
                (((String) (((Char) (O.+105)))
                 (((String) (((Char) (O.+115)))
                  (((String) (((Char) (O.+116))) (EmptyString)))))))))))
              (refl)))
             (((cons)
              (((Word)
               (((String) (((Char) (O.+97)))
                (((String) (((Char) (O.+108)))
                 (((String) (((Char) (O.+101)))
                  (((String) (((Char) (O.+114)))
                   (((String) (((Char) (O.+116))) (EmptyString)))))))))))
               (refl)))
              (((cons)
               (((Word)
                (((String) (((Char) (O.+99)))
                 (((String) (((Char) (O.+104)))
                  (((String) (((Char) (O.+111)))
                   (((String) (((Char) (O.+107)))
                    (((String) (((Char) (O.+101))) (EmptyString)))))))))))
                (refl)))
               (((cons)
                (((Word)
                 (((String) (((Char) (O.+115)))
                  (((String) (((Char) (O.+112)))
                   (((String) (((Char) (O.+108)))
                    (((String) (((Char) (O.+105)))
                     (((String) (((Char) (O.+116))) (EmptyString)))))))))))
                 (refl)))
                (((cons)
                 (((Word)
                  (((String) (((Char) (O.+114)))
                   (((String) (((Char) (O.+104)))
                    (((String) (((Char) (O.+121)))
                     (((String) (((Char) (O.+109)))
                      (((String) (((Char) (O.+101))) (EmptyString)))))))))))
                  (refl)))
                 (((cons)
                  (((Word)
                   (((String) (((Char) (O.+109)))
                    (((String) (((Char) (O.+117)))
                     (((String) (((Char) (O.+100)))
                      (((String) (((Char) (O.+100)))
                       (((String) (((Char) (O.+121))) (EmptyString)))))))))))
                   (refl)))
                  (((cons)
                   (((Word)
                    (((String) (((Char) (O.+112)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+97)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+116))) (EmptyString)))))))))))
                    (refl)))
                   (nil)))))))))))))))))))))))))))))))))))))))) : ((list‹_,
                                                                    U›)
(_))) in let r ⇐ rand O.+0 O.+19 in match r as _ in _ with Between n _
pf ⇒ match ((get_at) (_) (n) (words) (pf)) as _ in _ with SPair w
_ ⇒ return w

program server_loop‹› (ans : word) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_ch)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let c ⇐ (
                         (send c) (ans)) in let c ⇐ ((send c)
                         (refl)) in close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨guess, c⟩ ⇐ recv c in let b = (
                         (eqw) (ans) (guess)) in let c ⇐ ((send c)
                         (b)) in let c ⇐ ((send c)
                         (refl)) in ((match b as b0 in (∀ (_ : ch‹match b0 as _ in _ with true ⇒ end | false ⇒ !(df : word) → !{_ : (
                                      (wdiff) (ans) (guess)
                                      (df))} → ((wordle_loop) (ans)
                                      (repeat))›) ⊸ IO unit) with true ⇒ (ln (c : _) ⇒ close c) | false ⇒ (ln (c : _) ⇒ match (
                                      (word_diff) (ans)
                                      (guess)) as _ in _ with SPair df
                                      pf ⇒ let c ⇐ ((send c)
                                      (df)) in let c ⇐ ((send c)
                                      (pf)) in ((server_loop) (ans) (repeat)
                                      (c))))
                         (c))))
(c))

program server‹› (c : wordle_ch) : IO unit = let repeat = O.+6 in let ans ⇐ (
(rand_word) (())) in let c ⇐ ((send c) (ans)) in let c ⇐ ((send c)
(repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit = let c ⇐ fork (c : wordle_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : wordle_hc) → !(_ : unit) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v742 : bool) (b2_v743 : bool) ⇒
    match b1_v742 as __v744 in ??1 with
    | true ⇒ b2_v743 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v747 : bool) (b2_v748 : bool) ⇒
    match b1_v747 as __v749 in ??2 with
    | true ⇒ true | false ⇒ b2_v748
    end

program notb_i3 : bool → bool =
  fn (b_v751 : bool) ⇒
    match b_v751 as __v752 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v755 : bool) (b2_v756 : bool) ⇒
    match b1_v755 as __v757 in ??4 with
    | true ⇒
      match b2_v756 as __v758 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v756 as __v759 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v762 : nat) (y_v763 : nat) ⇒
    match x_v762 as __v764 in ??7 with
    | O ⇒ true
    | S x_v765 ⇒
      match y_v763 as __v766 in ??8 with
      | O ⇒ false | S y_v767 ⇒ (lten_i5 x_v765 y_v767)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v770 : nat) (y_v771 : nat) ⇒ (lten_i5 x_v770.+1 y_v771)

program gten_i7 : nat → nat → bool =
  fn (x_v774 : nat) (y_v775 : nat) ⇒ (lten_i5 y_v775 x_v774)

program gtn_i8 : nat → nat → bool =
  fn (x_v778 : nat) (y_v779 : nat) ⇒ (ltn_i6 y_v779 x_v778)

program eqn_i9 : nat → nat → bool =
  fn (x_v782 : nat) (y_v783 : nat) ⇒
    match x_v782 as __v784 in ??9 with
    | O ⇒
      match y_v783 as __v785 in ??11 with
      | O ⇒ true | S __v786 ⇒ false
      end
    | S x_v787 ⇒
      match y_v783 as __v788 in ??10 with
      | O ⇒ false | S y_v789 ⇒ (eqn_i9 x_v787 y_v789)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v792 : nat) (n2_v793 : nat) ⇒
    match n1_v792 as __v794 in ??12 with
    | O ⇒
      match n2_v793 as __v795 in ??14 with
      | O ⇒ EQ_c3‹› | S __v796 ⇒ LT_c1‹›
      end
    | S n1_v797 ⇒
      match n2_v793 as __v798 in ??13 with
      | O ⇒ GT_c2‹› | S n2_v799 ⇒ (comparen_i10 n1_v797 n2_v799)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v801 : nat) ⇒
    match x_v801 as __v802 in ??15 with
    | O ⇒ 0 | S x_v803 ⇒ x_v803
    end

program addn_i12 : nat → nat → nat =
  fn (x_v806 : nat) (y_v807 : nat) ⇒
    match x_v806 as __v808 in ??16 with
    | O ⇒ y_v807 | S x_v809 ⇒ (addn_i12 x_v809 y_v807).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v812 : nat) (y_v813 : nat) ⇒
    match y_v813 as __v814 in ??17 with
    | O ⇒ x_v812 | S y_v815 ⇒ (subn_i13 (pred_i11 x_v812) y_v815)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v818 : nat) (y_v819 : nat) ⇒
    match x_v818 as __v820 in ??18 with
    | O ⇒ 0 | S x_v821 ⇒ (addn_i12 y_v819 (muln_i14 x_v821 y_v819))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v824 : nat) (y_v825 : nat) ⇒
    match (ltn_i6 x_v824 y_v825) as __v826 in ??19 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v824 y_v825) y_v825).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v829 : nat) (y_v830 : nat) ⇒
    (subn_i13 x_v829 (muln_i14 (divn_i15 x_v829 y_v830) y_v830))

inductive between_d2 (lower_v831 : nat) (upper_v832 : nat) : L =
| Between_c4 of
    (lower_v833 : nat) (upper_v834 : nat) (n_v835 : nat)
    {pf1_v836 : (lten_i5 lower_v833 n_v835) ≡ true}
    {pf2_v837 : (lten_i5 n_v835 upper_v834) ≡ true}
    : (between_d2 lower_v833 upper_v834)

inductive char_d3 : U =
| Char_c5 of (n_v838 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v841 : char_d3) (c2_v842 : char_d3) ⇒
    match c1_v841 as __v843 in ??22 with
    | Char_c5 n1_v844 ⇒
      match c2_v842 as __v845 in ??23 with
      | Char_c5 n2_v846 ⇒ (eqn_i9 n1_v844 n2_v846)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v849 : char_d3) (c2_v850 : char_d3) ⇒
    match c1_v849 as __v851 in ??24 with
    | Char_c5 n1_v852 ⇒
      match c2_v850 as __v853 in ??25 with
      | Char_c5 n2_v854 ⇒ (comparen_i10 n1_v852 n2_v854)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v855 : char_d3) (s_v856 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v859 : string_d4) (s2_v860 : string_d4) ⇒
    match s1_v859 as __v861 in ??26 with
    | EmptyString_c6  ⇒ s2_v860
    | String_c7 c_v862 s1_v863 ⇒
      (String_c7‹› c_v862 (cats_i19 s1_v863 s2_v860))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v865 : string_d4) ⇒
    match s_v865 as __v866 in ??27 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v867 s_v868 ⇒ (strlen_i20 s_v868).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v871 : string_d4) (s2_v872 : string_d4) ⇒
    match s1_v871 as __v873 in ??28 with
    | EmptyString_c6  ⇒
      match s2_v872 as __v874 in ??30 with
      | EmptyString_c6  ⇒ true | String_c7 __v875 __v876 ⇒ false
      end
    | String_c7 c1_v877 s1_v878 ⇒
      match s2_v872 as __v879 in ??29 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v880 s2_v881 ⇒
        (andb_i1 (eqc_i17 c1_v877 c2_v880) (eqs_i21 s1_v878 s2_v881))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v884 : string_d4) (s2_v885 : string_d4) ⇒
    match s1_v884 as __v886 in ??31 with
    | EmptyString_c6  ⇒
      match s2_v885 as __v887 in ??34 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v888 __v889 ⇒ LT_c1‹›
      end
    | String_c7 c1_v890 s1_v891 ⇒
      match s2_v885 as __v892 in ??32 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v893 s2_v894 ⇒
        match (comparec_i18 c1_v890 c2_v893) as __v895 in ??33 with
        | EQ_c3  ⇒ (compares_i22 s1_v891 s2_v894) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s896, t_s897›
  (A_v898 : Type‹s_s896›) : Type‹t_s897›
=
| None_c8 of
    ‹s_s899, t_s900› (A_v901 : Type‹s_s899›)
    : (option_d5‹s_s899, t_s900› A_v901)
| Some_c9 of
    ‹s_s902, t_s903› (A_v904 : Type‹s_s902›) (x_v905 : A_v904)
    : (option_d5‹s_s902, t_s903› A_v904)

program and_then_i23 ‹s_s906, r_s907, t_s908› :
  ∀ {A_v909 : Type‹s_s906›} →
    ∀ {B_v910 : Type‹r_s907›} →
      (option_d5‹??35, t_s908› A_v909) →
        A_v909 → (option_d5‹??36, t_s908› B_v910) ⊸
          (option_d5‹??37, t_s908› B_v910)
=
  fn {A_v914 : Type‹s_s906›} {B_v915 : Type‹r_s907›}
     (opt_v916 : (option_d5‹??35, t_s908› A_v914)) ⇒
    ln (f_v917 : ??38) ⇒
      match opt_v916 as __v918 in ??39 with
      | None_c8  ⇒ None_c8‹??42, ??41›
      | Some_c9 x_v919 ⇒ (f_v917 x_v919)
      end

inductive list_d6 ‹s_s920, t_s921›
  (A_v922 : Type‹s_s920›) : Type‹t_s921›
=
| nil_c10 of
    ‹s_s923, t_s924› (A_v925 : Type‹s_s923›)
    : (list_d6‹s_s923, t_s924› A_v925)
| cons_c11 of
    ‹s_s926, t_s927› (A_v928 : Type‹s_s926›) (hd_v929 : A_v928)
    (tl_v930 : (list_d6‹s_s926, t_s927› A_v928))
    : (list_d6‹s_s926, t_s927› A_v928)

logical llen_i24 ‹s_s931, t_s932› :
  ∀ (A_v933 : Type‹s_s931›) →
    (list_d6‹s_s931, t_s932› A_v933) → nat
=
  fn (A_v935 : Type‹s_s931›)
     (xs_v936 : (list_d6‹s_s931, t_s932› A_v935)) ⇒
    match xs_v936 as __v937 in ??43 with
    | nil_c10  ⇒ 0
    | cons_c11 x_v938 xs_v939 ⇒ (llen_i24‹??46, ??45› ??44 xs_v939).+1
    end

program len_i25 ‹s_s940, t_s941› :
  ∀ {A_v942 : Type‹s_s940›} →
    (list_d6‹??47, t_s941› A_v942) →
      nat ⊗ (list_d6‹??48, t_s941› A_v942)
=
  fn {A_v945 : Type‹s_s940›}
     (xs_v946 : (list_d6‹??47, t_s941› A_v945)) ⇒
    match xs_v946 as __v947 in ??49 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??59, ??58›⟩
    | cons_c11 x_v948 xs_v949 ⇒
      match (len_i25‹??52, ??51› ??50 xs_v949) as __v950 in ??53 with
      | ⟨n_v951, xs_v952⟩ ⇒
        ⟨n_v951.+1, (cons_c11‹??56, ??55› x_v948 xs_v952)⟩
      end
    end

program append_i26 ‹s_s953, t_s954› :
  ∀ {A_v955 : Type‹s_s953›} →
    (list_d6‹??60, t_s954› A_v955) →
      (list_d6‹??61, t_s954› A_v955) ⊸ (list_d6‹??63, ??62› A_v955)
=
  fn {A_v958 : Type‹s_s953›}
     (xs_v959 : (list_d6‹??60, t_s954› A_v958)) ⇒
    ln (ys_v960 : ??64) ⇒
      match xs_v959 as __v961 in ??65 with
      | nil_c10  ⇒ ys_v960
      | cons_c11 x_v962 xs_v963 ⇒
        (cons_c11‹??71, ??70›
          x_v962 (append_i26‹??68, ??67› ??66 xs_v963 ys_v960))
      end

logical stdin_rec_i27 : unit → proto =
  fn (__v965 : unit) ⇒
    ⇑(b_v966 : bool) ⇒
      match b_v966 as __v967 in ??72 with
      | true ⇒ ⇓(__v968 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit → proto =
  fn (__v970 : unit) ⇒
    ⇑(b_v971 : bool) ⇒
      match b_v971 as __v972 in ??73 with
      | true ⇒ ⇑(__v973 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit → proto =
  fn (__v975 : unit) ⇒
    ⇑(b_v976 : bool) ⇒
      match b_v976 as __v977 in ??74 with
      | true ⇒ ⇑(__v978 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit → IO string_d4 =
  fn (__v980 : unit) ⇒
    let ch_v981 ⇐ open stdin in
    let ch_v982 ⇐ (send ch_v981 true) in
    let __v983 ⇐ recv ch_v982 in
    match __v983 as __v984 in ??75 with
    | ⟨s_v985, ch_v986⟩ ⇒
      let ch_v987 ⇐ (send ch_v986 false) in
      let __v988 ⇐ close ch_v987 in return s_v985
    end

program print_i34 : string_d4 → IO unit =
  fn (s_v990 : string_d4) ⇒
    let ch_v991 ⇐ open stdout in
    let ch_v992 ⇐ (send ch_v991 true) in
    let ch_v993 ⇐ (send ch_v992 s_v990) in
    let ch_v994 ⇐ (send ch_v993 false) in close ch_v994

program prerr_i35 : string_d4 → IO unit =
  fn (s_v996 : string_d4) ⇒
    let ch_v997 ⇐ open stderr in
    let ch_v998 ⇐ (send ch_v997 true) in
    let ch_v999 ⇐ (send ch_v998 s_v996) in
    let ch_v1000 ⇐ (send ch_v999 false) in close ch_v1000

program digits_i36 : (list_d6‹??76, U› ??77) =
  (cons_c11‹??110, ??109›
    "0"
    (cons_c11‹??107, ??106›
      "1"
      (cons_c11‹??104, ??103›
        "2"
        (cons_c11‹??101, ??100›
          "3"
          (cons_c11‹??98, ??97›
            "4"
            (cons_c11‹??95, ??94›
              "5"
              (cons_c11‹??92, ??91›
                "6"
                (cons_c11‹??89, ??88›
                  "7"
                  (cons_c11‹??86, ??85›
                    "8"
                    (cons_c11‹??83, ??82› "9" nil_c10‹??80, ??79›))))))))))

program get_at_i37 :
  ∀ {A_v1001 : U} →
    nat → (list_d6‹??111, U› A_v1001) → A_v1001 → A_v1001
=
  fn {A_v1005 : U} (n_v1006 : nat)
     (xs_v1007 : (list_d6‹??111, U› A_v1005)) (a_v1008 : A_v1005) ⇒
    match n_v1006 as __v1009 in ??112 with
    | O ⇒
      match xs_v1007 as __v1010 in ??115 with
      | nil_c10  ⇒ a_v1008 | cons_c11 x_v1011 __v1012 ⇒ x_v1011
      end
    | S n_v1013 ⇒
      match xs_v1007 as __v1014 in ??113 with
      | nil_c10  ⇒ a_v1008
      | cons_c11 __v1015 xs_v1016 ⇒
        (get_at_i37 ??114 n_v1013 xs_v1016 a_v1008)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v1018 : nat) ⇒
    (get_at_i37 ??116 n_v1018 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v1020 : nat) ⇒
    let s_v1021 = (string_of_digit_i38 (modn_i16 n_v1020 10)) in
    let n_v1022 = (divn_i15 n_v1020 10) in
    match (ltn_i6 0 n_v1022) as __v1023 in ??117 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v1022) s_v1021)
    | false ⇒ s_v1021
    end

program digit_of_char_i40 : char_d3 → (option_d5‹??118, L› nat) =
  fn (c_v1025 : char_d3) ⇒
    match (eqc_i17 c_v1025 '0') as __v1026 in ??119 with
    | true ⇒ (Some_c9‹??161, ??160› 0)
    | false ⇒
      match (eqc_i17 c_v1025 '1') as __v1027 in ??120 with
      | true ⇒ (Some_c9‹??158, ??157› 1)
      | false ⇒
        match (eqc_i17 c_v1025 '2') as __v1028 in ??121 with
        | true ⇒ (Some_c9‹??155, ??154› 2)
        | false ⇒
          match (eqc_i17 c_v1025 '3') as __v1029 in ??122 with
          | true ⇒ (Some_c9‹??152, ??151› 3)
          | false ⇒
            match (eqc_i17 c_v1025 '4') as __v1030 in ??123 with
            | true ⇒ (Some_c9‹??149, ??148› 4)
            | false ⇒
              match (eqc_i17 c_v1025 '5') as __v1031 in ??124 with
              | true ⇒ (Some_c9‹??146, ??145› 5)
              | false ⇒
                match (eqc_i17 c_v1025 '6') as __v1032 in ??125 with
                | true ⇒ (Some_c9‹??143, ??142› 6)
                | false ⇒
                  match (eqc_i17 c_v1025 '7') as __v1033 in ??126 with
                  | true ⇒ (Some_c9‹??140, ??139› 7)
                  | false ⇒
                    match (eqc_i17 c_v1025 '8') as __v1034 in ??127 with
                    | true ⇒ (Some_c9‹??137, ??136› 8)
                    | false ⇒
                      match (eqc_i17 c_v1025 '9') as __v1035 in ??128 with
                      | true ⇒ (Some_c9‹??134, ??133› 9)
                      | false ⇒ None_c8‹??131, ??130›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹??162, L› nat)
=
  fn (s_v1038 : string_d4) (acc_v1039 : nat) ⇒
    match s_v1038 as __v1040 in ??163 with
    | EmptyString_c6  ⇒ (Some_c9‹??170, ??169› acc_v1039)
    | String_c7 c_v1041 s_v1042 ⇒
      match (digit_of_char_i40 c_v1041) as __v1043 in ??164 with
      | None_c8  ⇒ None_c8‹??167, ??166›
      | Some_c9 n_v1044 ⇒
        (nat_of_string_loop_i41
          s_v1042 (addn_i12 (muln_i14 acc_v1039 10) n_v1044))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹??171, L› nat) =
  fn (s_v1046 : string_d4) ⇒ (nat_of_string_loop_i41 s_v1046 0)

logical eq_sym_i43 ‹s_s1047› :
  ∀ (A_v1048 : Type‹s_s1047›) →
    ∀ (x_v1049 : A_v1048) →
      ∀ (y_v1050 : A_v1048) →
        ∀ (__v1051 : x_v1049 ≡ y_v1050) → y_v1050 ≡ x_v1049
=
  fn (A_v1052 : Type‹s_s1047›) (x_v1053 : A_v1052) (y_v1054 : A_v1052)
     (e_v1055 : ??174) ⇒
    rew [y_v1056, __v1057 ⇒ y_v1056 ≡ x_v1053] e_v1055 in refl ??175

logical eq_trans_i44 ‹s_s1058› :
  ∀ (A_v1059 : Type‹s_s1058›) →
    ∀ (x_v1060 : A_v1059) →
      ∀ (y_v1061 : A_v1059) →
        ∀ (z_v1062 : A_v1059) →
          ∀ (__v1063 : x_v1060 ≡ y_v1061) →
            ∀ (__v1064 : y_v1061 ≡ z_v1062) → x_v1060 ≡ z_v1062
=
  fn (A_v1065 : Type‹s_s1058›) (x_v1066 : A_v1065) (y_v1067 : A_v1065)
     (z_v1068 : A_v1065) (e1_v1069 : ??180) (e2_v1070 : ??181) ⇒
    rew [y0_v1071, __v1072 ⇒ x_v1066 ≡ y0_v1071] e2_v1070 in e1_v1069

logical f_equal_i45 ‹s_s1073, t_s1074› :
  ∀ (A_v1075 : Type‹s_s1073›) →
    ∀ (B_v1076 : Type‹t_s1074›) →
      ∀ (f_v1077 : A_v1075 → B_v1076) →
        ∀ (x_v1079 : A_v1075) →
          ∀ (y_v1080 : A_v1075) →
            ∀ (__v1081 : x_v1079 ≡ y_v1080) →
              (f_v1077 x_v1079) ≡ (f_v1077 y_v1080)
=
  fn (A_v1082 : Type‹s_s1073›) (B_v1083 : Type‹t_s1074›)
     (f_v1084 : A_v1082 → B_v1083) (x_v1085 : A_v1082) (y_v1086 : A_v1082)
     (e_v1087 : ??185) ⇒
    rew [y_v1089, p_v1090 ⇒ (f_v1084 x_v1085) ≡ (f_v1084 y_v1089)]
      e_v1087 in
    refl ??186

logical bool_absurd_i46 : true ≡ false → ⊥ =
  fn (e_v1092 : true ≡ false) ⇒
    rew [x_v1093, __v1094 ⇒
      match x_v1093 as __v1095 in ??189 with
      | true ⇒ unit | false ⇒ ⊥
      end] e_v1092 in
    ()

logical nat_absurd_i47 : ∀ (n_v1096 : nat) → n_v1096.+1 ≡ 0 → ⊥ =
  fn (n_v1098 : nat) (e_v1099 : n_v1098.+1 ≡ 0) ⇒
    rew [x_v1100, __v1101 ⇒
      match x_v1100 as __v1102 in ??191 with
      | O ⇒ ⊥ | S __v1103 ⇒ unit
      end] e_v1099 in
    ()

logical nat_inv_i48 :
  ∀ (n1_v1104 : nat) →
    ∀ (n2_v1105 : nat) →
      ∀ (e_v1106 : n1_v1104.+1 ≡ n2_v1105.+1) → n1_v1104 ≡ n2_v1105
=
  fn (n1_v1107 : nat) (n2_v1108 : nat)
     (e_v1109 : n1_v1107.+1 ≡ n2_v1108.+1) ⇒
    (f_equal_i45‹??199, ??198› ??197 ??196 pred_i11 ??195 ??194 e_v1109)

logical eqn_reflect_i49 :
  ∀ (m_v1110 : nat) →
    ∀ (n_v1111 : nat) →
      ∀ (__v1112 : (eqn_i9 m_v1110 n_v1111) ≡ true) →
        m_v1110 ≡ n_v1111
=
  fn (m_v1113 : nat) (n_v1114 : nat) ⇒
    match m_v1113 as m0_v1115 in
      ∀ (__v1116 : (eqn_i9 m0_v1115 n_v1114) ≡ true) →
        m0_v1115 ≡ n_v1114 with
    | O ⇒
      match n_v1114 as n0_v1117 in
        ∀ (__v1118 : (eqn_i9 0 n0_v1117) ≡ true) → 0 ≡ n0_v1117 with
      | O ⇒ fn (__v1119 : ??228) ⇒ refl ??229
      | S n_v1120 ⇒
        fn (e_v1121 : ??222) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹??226› ??225 ??224 ??223 e_v1121))
      end
    | S m_v1122 ⇒
      match n_v1114 as n0_v1123 in
        ∀ (__v1124 : (eqn_i9 m_v1122.+1 n0_v1123) ≡ true) →
          m_v1122.+1 ≡ n0_v1123 with
      | O ⇒
        fn (e_v1125 : ??214) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹??218› ??217 ??216 ??215 e_v1125))
      | S n_v1126 ⇒
        fn (e_v1127 : ??206) ⇒
          (f_equal_i45‹??213, ??212›
            ??211 ??210 fn (x_v1128 : ??209) ⇒ x_v1128.+1 ??208 ??207
            (eqn_reflect_i49 m_v1122 n_v1126 e_v1127))
      end
    end

logical eqc_reflect_i50 :
  ∀ (c1_v1129 : char_d3) →
    ∀ (c2_v1130 : char_d3) →
      ∀ (__v1131 : (eqc_i17 c1_v1129 c2_v1130) ≡ true) →
        c1_v1129 ≡ c2_v1130
=
  fn (c1_v1132 : char_d3) (c2_v1133 : char_d3) ⇒
    match c1_v1132 as c0_v1134 in
      ∀ (__v1135 : (eqc_i17 c0_v1134 c2_v1133) ≡ true) →
        c0_v1134 ≡ c2_v1133 with
    | Char_c5 m_v1136 ⇒
      match c2_v1133 as c0_v1137 in
        ∀ (__v1138 :
          (eqc_i17 (Char_c5‹› m_v1136) c0_v1137) ≡ true) →
          (Char_c5‹› m_v1136) ≡ c0_v1137 with
      | Char_c5 n_v1139 ⇒
        fn (e_v1140 : ??236) ⇒
          let e_v1141 = (eqn_reflect_i49 ??238 ??237 e_v1140) in
          (f_equal_i45‹??245, ??244›
            ??243 ??242 fn (x_v1142 : ??241) ⇒ (Char_c5‹› x_v1142)
            ??240 ??239 e_v1141)
      end
    end

program contains_i51 : char_d3 → string_d4 → bool =
  fn (c_v1145 : char_d3) (s_v1146 : string_d4) ⇒
    match s_v1146 as __v1147 in ??246 with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v1148 s_v1149 ⇒
      match (eqc_i17 c_v1145 c0_v1148) as __v1150 in ??247 with
      | true ⇒ true | false ⇒ (contains_i51 c_v1145 s_v1149)
      end
    end

inductive subset_d7 ‹s_s1151, r_s1152, t_s1153›
  (A_v1154 : Type‹s_s1151›) (P_v1155 : A_v1154 → Type‹r_s1152›) : Type‹t_s1153›
=
| SPair_c12 of
    ‹s_s1157, r_s1158, t_s1159› (A_v1160 : Type‹s_s1157›)
    (P_v1161 : A_v1160 → Type‹r_s1158›) (m_v1163 : A_v1160)
    {pf_v1164 : (P_v1161 m_v1163)}
    : (subset_d7‹s_s1157, r_s1158, t_s1159› A_v1160 P_v1161)

inductive diff_d8
  (ans_v1165 : string_d4) (a_v1166 : string_d4) (b_v1167 : string_d4) (df_v1168 : string_d4) : U
=
| diff_EmptyString_c13 of
    (ans_v1169 : string_d4) (a_v1170 : string_d4) (b_v1171 : string_d4)
    (df_v1172 : string_d4) (pf1_v1173 : a_v1170 ≡ EmptyString_c6‹›)
    (pf2_v1174 : b_v1171 ≡ EmptyString_c6‹›)
    (pf3_v1175 : df_v1172 ≡ EmptyString_c6‹›)
    : (diff_d8 ans_v1169 a_v1170 b_v1171 df_v1172)
| diff_StringY_c14 of
    (ans_v1176 : string_d4) (a_v1177 : string_d4) (b_v1178 : string_d4)
    (df_v1179 : string_d4) (c_v1180 : char_d3) (s1_v1181 : string_d4)
    (s2_v1182 : string_d4) (s3_v1183 : string_d4)
    (h_v1184 : (diff_d8 ans_v1176 s1_v1181 s2_v1182 s3_v1183))
    (pf1_v1185 : a_v1177 ≡ (String_c7‹› c_v1180 s1_v1181))
    (pf2_v1186 : b_v1178 ≡ (String_c7‹› c_v1180 s2_v1182))
    (pf3_v1187 : df_v1179 ≡ (cats_i19 "Y" s3_v1183))
    : (diff_d8 ans_v1176 a_v1177 b_v1178 df_v1179)
| diff_StringI_c15 of
    (ans_v1188 : string_d4) (a_v1189 : string_d4) (b_v1190 : string_d4)
    (df_v1191 : string_d4) (c1_v1192 : char_d3) (c2_v1193 : char_d3)
    (s1_v1194 : string_d4) (s2_v1195 : string_d4) (s3_v1196 : string_d4)
    (h1_v1197 : (eqc_i17 c1_v1192 c2_v1193) ≡ false)
    (h2_v1198 : (contains_i51 c2_v1193 ans_v1188) ≡ true)
    (h3_v1199 : (diff_d8 ans_v1188 s1_v1194 s2_v1195 s3_v1196))
    (pf1_v1200 : a_v1189 ≡ (String_c7‹› c1_v1192 s1_v1194))
    (pf2_v1201 : b_v1190 ≡ (String_c7‹› c2_v1193 s2_v1195))
    (pf3_v1202 : df_v1191 ≡ (cats_i19 "I" s3_v1196))
    : (diff_d8 ans_v1188 a_v1189 b_v1190 df_v1191)
| diff_StringN_c16 of
    (ans_v1203 : string_d4) (a_v1204 : string_d4) (b_v1205 : string_d4)
    (df_v1206 : string_d4) (c1_v1207 : char_d3) (c2_v1208 : char_d3)
    (s1_v1209 : string_d4) (s2_v1210 : string_d4) (s3_v1211 : string_d4)
    (h1_v1212 : (eqc_i17 c1_v1207 c2_v1208) ≡ false)
    (h2_v1213 : (contains_i51 c2_v1208 ans_v1203) ≡ false)
    (h3_v1214 : (diff_d8 ans_v1203 s1_v1209 s2_v1210 s3_v1211))
    (pf1_v1215 : a_v1204 ≡ (String_c7‹› c1_v1207 s1_v1209))
    (pf2_v1216 : b_v1205 ≡ (String_c7‹› c2_v1208 s2_v1210))
    (pf3_v1217 : df_v1206 ≡ (cats_i19 "N" s3_v1211))
    : (diff_d8 ans_v1203 a_v1204 b_v1205 df_v1206)

program string_diff_i52 :
  ∀ (ans_v1218 : string_d4) →
    ∀ (s1_v1219 : string_d4) →
      ∀ (s2_v1220 : string_d4) →
        ∀ {__v1221 : (strlen_i20 s1_v1219) ≡ (strlen_i20 s2_v1220)} →
          (subset_d7‹??265, ??266, U›
            string_d4
            fn (df_v1222 : ??267) ⇒
              (diff_d8 ans_v1218 s1_v1219 s2_v1220 df_v1222))
=
  fn (ans_v1223 : string_d4) (s1_v1224 : string_d4) (s2_v1225 : string_d4) ⇒
    match s1_v1224 as s0_v1226 in
      ∀ {__v1227 : (strlen_i20 s0_v1226) ≡ (strlen_i20 s2_v1225)} →
        (subset_d7‹??272, ??271, ??270›
          string_d4
          fn (df_v1228 : ??269) ⇒
            (diff_d8 ans_v1223 s0_v1226 s2_v1225 df_v1228)) with
    | EmptyString_c6  ⇒
      match s2_v1225 as s0_v1229 in
        ∀ {__v1230 : 0 ≡ (strlen_i20 s0_v1229)} →
          (subset_d7‹??361, ??360, ??359›
            string_d4
            fn (df_v1231 : ??358) ⇒
              (diff_d8 ans_v1223 EmptyString_c6‹› s0_v1229 df_v1231)) with
      | EmptyString_c6  ⇒
        fn {e_v1232 : ??368} ⇒
          (SPair_c12‹??380, ??379, ??378›
            EmptyString_c6‹›
            (diff_EmptyString_c13‹› refl ??371 refl ??370 refl ??369))
      | String_c7 c2_v1233 s2_v1234 ⇒
        fn {e_v1235 : ??362} ⇒
          rew [x_v1236, __v1237 ⇒
            match x_v1236 as __v1238 in ??363 with
            | O ⇒ unit
            | S __v1239 ⇒
              (subset_d7‹??367, ??366, ??365›
                string_d4
                fn (df_v1240 : ??364) ⇒
                  (diff_d8
                    ans_v1223 EmptyString_c6‹›
                    (String_c7‹› c2_v1233 s2_v1234) df_v1240))
            end] e_v1235 in
          ()
      end
    | String_c7 c1_v1241 s1_v1242 ⇒
      match s2_v1225 as s0_v1243 in
        ∀ {__v1244 :
          (strlen_i20 s1_v1242).+1 ≡ (strlen_i20 s0_v1243)} →
          (subset_d7‹??277, ??276, ??275›
            string_d4
            fn (df_v1245 : ??274) ⇒
              (diff_d8
                ans_v1223 (String_c7‹› c1_v1241 s1_v1242) s0_v1243
                df_v1245)) with
      | EmptyString_c6  ⇒
        fn {e_v1246 : ??351} ⇒
          rew [x_v1247, __v1248 ⇒
            match x_v1247 as __v1249 in ??352 with
            | O ⇒
              (subset_d7‹??356, ??355, ??354›
                string_d4
                fn (df_v1250 : ??353) ⇒
                  (diff_d8
                    ans_v1223 (String_c7‹› c1_v1241 s1_v1242)
                    EmptyString_c6‹› df_v1250))
            | S __v1251 ⇒ unit
            end] e_v1246 in
          ()
      | String_c7 c2_v1252 s2_v1253 ⇒
        fn {e_v1254 : ??278} ⇒
          let {e_v1255} = (nat_inv_i48 ??280 ??279 e_v1254) in
          match (string_diff_i52 ans_v1223 s1_v1242 s2_v1253 e_v1255) as __v1256 in
            ??281 with
          | SPair_c12 df_v1257 pf_v1258 ⇒
            (match (eqc_i17 c1_v1241 c2_v1252) as b0_v1259 in
               ∀ {__v1260 : (eqc_i17 c1_v1241 c2_v1252) ≡ b0_v1259} →
                 (subset_d7‹??286, ??285, ??284›
                   string_d4
                   fn (df_v1261 : ??283) ⇒
                     (diff_d8
                       ans_v1223 (String_c7‹› c1_v1241 s1_v1242)
                       (String_c7‹› c2_v1252 s2_v1253) df_v1261)) with
             | true ⇒
               fn {e1_v1262 : ??330} ⇒
                 let {e1_v1263} = (eqc_reflect_i50 ??332 ??331 e1_v1262) in
                 let {h_v1264} =
                   rew [c_v1265, __v1266 ⇒
                     (String_c7‹› c_v1265 s2_v1253) ≡
                       (String_c7‹› c1_v1241 s2_v1253)]
                     e1_v1263 in
                   refl ??333
                 in
                 (SPair_c12‹??349, ??348, ??347›
                   (cats_i19 "Y" df_v1257)
                   (diff_StringY_c14‹›
                     ??340 ??339 ??338 ??337 pf_v1258 refl ??336 h_v1264
                     refl ??335))
             | false ⇒
               fn {e1_v1267 : ??287} ⇒
                 (match (contains_i51 c2_v1252 ans_v1223) as b0_v1268 in
                    ∀ {__v1269 :
                      (contains_i51 c2_v1252 ans_v1223) ≡ b0_v1268} →
                      (subset_d7‹??292, ??291, ??290›
                        string_d4
                        fn (df_v1270 : ??289) ⇒
                          (diff_d8
                            ans_v1223 (String_c7‹› c1_v1241 s1_v1242)
                            (String_c7‹› c2_v1252 s2_v1253) df_v1270)) with
                  | true ⇒
                    fn {e2_v1271 : ??311} ⇒
                      (SPair_c12‹??328, ??327, ??326›
                        (cats_i19 "I" df_v1257)
                        (diff_StringI_c15‹›
                          ??319 ??318 ??317 ??316 ??315 e1_v1267 e2_v1271
                          pf_v1258 refl ??314 refl ??313 refl ??312))
                  | false ⇒
                    fn {e2_v1272 : ??293} ⇒
                      (SPair_c12‹??310, ??309, ??308›
                        (cats_i19 "N" df_v1257)
                        (diff_StringN_c16‹›
                          ??301 ??300 ??299 ??298 ??297 e1_v1267 e2_v1272
                          pf_v1258 refl ??296 refl ??295 refl ??294))
                  end refl ??329)
             end refl ??350)
          end
      end
    end

logical diff_len_i53 :
  ∀ (ans_v1273 : string_d4) →
    ∀ (s1_v1274 : string_d4) →
      ∀ (s2_v1275 : string_d4) →
        ∀ (df_v1276 : string_d4) →
          ∀ (h_v1277 : (diff_d8 ans_v1273 s1_v1274 s2_v1275 df_v1276)) →
            (strlen_i20 df_v1276) ≡ (strlen_i20 s1_v1274)
=
  fn (ans_v1278 : string_d4) (s1_v1279 : string_d4) (s2_v1280 : string_d4)
     (df_v1281 : string_d4)
     (h_v1282 : (diff_d8 ans_v1278 s1_v1279 s2_v1280 df_v1281)) ⇒
    match h_v1282 as __v1283 in ??382 with
    | diff_EmptyString_c13 pf1_v1284 __v1285 pf3_v1286 ⇒
      let pf1_v1287 = (eq_sym_i43‹??434› ??433 ??432 ??431 pf1_v1284) in
      let pf3_v1288 = (eq_sym_i43‹??438› ??437 ??436 ??435 pf3_v1286) in
      rew [s0_v1289, __v1290 ⇒
        (strlen_i20 df_v1281) ≡ (strlen_i20 s0_v1289)] pf1_v1287 in
      rew [df0_v1291, __v1292 ⇒ (strlen_i20 df0_v1291) ≡ 0] pf3_v1288 in
      refl ??439
    | diff_StringY_c14 c_v1293 s0_v1294 s3_v1295 s4_v1296 h1_v1297 pf1_v1298
      __v1299 pf3_v1300 ⇒
      let pf1_v1301 = (eq_sym_i43‹??418› ??417 ??416 ??415 pf1_v1298) in
      let pf3_v1302 = (eq_sym_i43‹??422› ??421 ??420 ??419 pf3_v1300) in
      rew [s0_v1303, __v1304 ⇒
        (strlen_i20 df_v1281) ≡ (strlen_i20 s0_v1303)] pf1_v1301 in
      rew [df0_v1305, __v1306 ⇒
        (strlen_i20 df0_v1305) ≡
          (strlen_i20 (String_c7‹› c_v1293 s0_v1294))]
        pf3_v1302 in
      rew [n_v1307, __v1308 ⇒ (strlen_i20 s4_v1296).+1 ≡ n_v1307.+1]
        (diff_len_i53 ??426 ??425 ??424 ??423 h1_v1297) in
      refl ??427
    | diff_StringI_c15 c1_v1309 __v1310 s0_v1311 s3_v1312 s4_v1313 __v1314
      __v1315 h3_v1316 pf1_v1317 __v1318 pf3_v1319 ⇒
      let pf1_v1320 = (eq_sym_i43‹??402› ??401 ??400 ??399 pf1_v1317) in
      let pf3_v1321 = (eq_sym_i43‹??406› ??405 ??404 ??403 pf3_v1319) in
      rew [s0_v1322, __v1323 ⇒
        (strlen_i20 df_v1281) ≡ (strlen_i20 s0_v1322)] pf1_v1320 in
      rew [df0_v1324, __v1325 ⇒
        (strlen_i20 df0_v1324) ≡
          (strlen_i20 (String_c7‹› c1_v1309 s0_v1311))]
        pf3_v1321 in
      rew [n_v1326, __v1327 ⇒ (strlen_i20 s4_v1313).+1 ≡ n_v1326.+1]
        (diff_len_i53 ??410 ??409 ??408 ??407 h3_v1316) in
      refl ??411
    | diff_StringN_c16 c1_v1328 __v1329 s0_v1330 s3_v1331 s4_v1332 __v1333
      __v1334 h3_v1335 pf1_v1336 __v1337 pf3_v1338 ⇒
      let pf1_v1339 = (eq_sym_i43‹??386› ??385 ??384 ??383 pf1_v1336) in
      let pf3_v1340 = (eq_sym_i43‹??390› ??389 ??388 ??387 pf3_v1338) in
      rew [s0_v1341, __v1342 ⇒
        (strlen_i20 df_v1281) ≡ (strlen_i20 s0_v1341)] pf1_v1339 in
      rew [df0_v1343, __v1344 ⇒
        (strlen_i20 df0_v1343) ≡
          (strlen_i20 (String_c7‹› c1_v1328 s0_v1330))]
        pf3_v1340 in
      rew [n_v1345, __v1346 ⇒ (strlen_i20 s4_v1332).+1 ≡ n_v1345.+1]
        (diff_len_i53 ??394 ??393 ??392 ??391 h3_v1335) in
      refl ??395
    end

inductive word_d9 : U =
| Word_c17 of
    (s_v1347 : string_d4) {pf_v1348 : (strlen_i20 s_v1347) ≡ 5} : word_d9

inductive wdiff_d10
  (ans_v1349 : word_d9) (guess_v1350 : word_d9) (df_v1351 : word_d9) : U
=
| diff_Word_c18 of
    (ans_v1352 : word_d9) (guess_v1353 : word_d9) (df_v1354 : word_d9)
    (s1_v1355 : string_d4) (s2_v1356 : string_d4) (s3_v1357 : string_d4)
    (pf1_v1358 : (strlen_i20 s1_v1355) ≡ 5)
    (pf2_v1359 : (strlen_i20 s2_v1356) ≡ 5)
    (pf3_v1360 : (strlen_i20 s3_v1357) ≡ 5)
    (pf4_v1361 : ans_v1352 ≡ (Word_c17‹› s1_v1355 pf1_v1358))
    (pf5_v1362 : guess_v1353 ≡ (Word_c17‹› s2_v1356 pf2_v1359))
    (pf6_v1363 : df_v1354 ≡ (Word_c17‹› s3_v1357 pf3_v1360))
    (pf7_v1364 : (diff_d8 s1_v1355 s1_v1355 s2_v1356 s3_v1357))
    : (wdiff_d10 ans_v1352 guess_v1353 df_v1354)

program word_diff_i54 :
  ∀ (ans_v1365 : word_d9) →
    ∀ (guess_v1366 : word_d9) →
      (subset_d7‹??449, ??450, U›
        word_d9
        fn (df_v1367 : ??451) ⇒ (wdiff_d10 ans_v1365 guess_v1366 df_v1367))
=
  fn (ans_v1368 : word_d9) (guess_v1369 : word_d9) ⇒
    (match ans_v1368 as ans0_v1370 in
       ∀ {__v1371 : ans_v1368 ≡ ans0_v1370} →
         (subset_d7‹??456, ??455, ??454›
           word_d9
           fn (df_v1372 : ??453) ⇒
             (wdiff_d10 ans_v1368 guess_v1369 df_v1372)) with
     | Word_c17 s1_v1373 pf1_v1374 ⇒
       fn {e1_v1375 : ??457} ⇒
         (match guess_v1369 as guess0_v1376 in
            ∀ {__v1377 : guess_v1369 ≡ guess0_v1376} →
              (subset_d7‹??462, ??461, ??460›
                word_d9
                fn (df_v1378 : ??459) ⇒
                  (wdiff_d10 ans_v1368 guess_v1369 df_v1378)) with
          | Word_c17 s2_v1379 pf2_v1380 ⇒
            fn {e2_v1381 : ??463} ⇒
              let {e_v1382} =
                (eq_trans_i44‹??472›
                  ??471 ??470 ??469 ??468 pf1_v1374
                  (eq_sym_i43‹??467› ??466 ??465 ??464 pf2_v1380))
              in
              match (string_diff_i52 s1_v1373 s1_v1373 s2_v1379 e_v1382) as __v1383 in
                ??473 with
              | SPair_c12 s3_v1384 h_v1385 ⇒
                let {e_v1386} =
                  (diff_len_i53 ??477 ??476 ??475 ??474 h_v1385)
                in
                let {pf_v1387} =
                  (eq_trans_i44‹??482›
                    ??481 ??480 ??479 ??478 e_v1386 pf1_v1374)
                in
                (SPair_c12‹??491, ??490, ??489›
                  (Word_c17‹› s3_v1384 pf_v1387)
                  (diff_Word_c18‹›
                    s1_v1373 s2_v1379 s3_v1384 pf1_v1374 pf2_v1380 pf_v1387
                    e1_v1375 e2_v1381 refl ??483 h_v1385))
              end
          end refl ??492)
     end refl ??493)

program eqw_i55 : word_d9 → word_d9 → bool =
  fn (w1_v1390 : word_d9) (w2_v1391 : word_d9) ⇒
    match w1_v1390 as __v1392 in ??494 with
    | Word_c17 s1_v1393 __v1394 ⇒
      match w2_v1391 as __v1395 in ??495 with
      | Word_c17 s2_v1396 __v1397 ⇒ (eqs_i21 s1_v1393 s2_v1396)
      end
    end

logical wordle_loop_i56 : word_d9 → nat → proto =
  fn (ans_v1400 : word_d9) (repeat_v1401 : nat) ⇒
    match repeat_v1401 as __v1402 in ??496 with
    | O ⇒
      ⇑(w_v1403 : word_d9) ⇒ ⇑{__v1404 : w_v1403 ≡ ans_v1400} ⇒ end
    | S repeat_v1405 ⇒
      ⇓(guess_v1406 : word_d9) ⇒
        ⇑(b_v1407 : bool) ⇒
          ⇑{__v1408 : b_v1407 ≡ (eqw_i55 ans_v1400 guess_v1406)} ⇒
            match b_v1407 as __v1409 in ??498 with
            | true ⇒ end
            | false ⇒
              ⇑(df_v1410 : word_d9) ⇒
                ⇑{__v1411 : (wdiff_d10 ans_v1400 guess_v1406 df_v1410)} ⇒
                  (wordle_loop_i56 ans_v1400 repeat_v1405)
            end
    end

logical wordle_i57 : proto =
  ⇑{ans_v1412 : word_d9} ⇒
    ⇑(repeat_v1413 : nat) ⇒ (wordle_loop_i56 ans_v1412 repeat_v1413)

logical loop_ch_i58 : word_d9 → nat → L =
  fn (ans_v1416 : word_d9) (repeat_v1417 : nat) ⇒
    ch⟨(wordle_loop_i56 ans_v1416 repeat_v1417)⟩

logical loop_hc_i59 : word_d9 → nat → L =
  fn (ans_v1420 : word_d9) (repeat_v1421 : nat) ⇒
    hc⟨(wordle_loop_i56 ans_v1420 repeat_v1421)⟩

logical wordle_ch_i60 : L = ch⟨wordle_i57⟩

logical wordle_hc_i61 : L = hc⟨wordle_i57⟩

program read_word_i62 : unit → IO word_d9 =
  fn (__v1423 : unit) ⇒
    let s_v1424 ⇐ (readline_i33 ()) in
    (match (eqn_i9 (strlen_i20 s_v1424) 5) as b0_v1425 in
       {(eqn_i9 (strlen_i20 s_v1424) 5) ≡ b0_v1425} → IO word_d9 with
     | true ⇒
       fn {e_v1427 : ??502} ⇒
         return (Word_c17‹›
                  s_v1424 (eqn_reflect_i49 ??504 ??503 e_v1427))
     | false ⇒
       fn {__v1428 : ??501} ⇒
         let __v1429 ⇐ (print_i34 "please input a word with length of 5\n")
         in (read_word_i62 ())
     end refl ??505)

program player_loop_i63 :
  ∀ {ans_v1430 : word_d9} →
    ∀ (repeat_v1431 : nat) →
      (loop_hc_i59 ans_v1430 repeat_v1431) → IO unit
=
  fn {ans_v1433 : word_d9} (repeat_v1434 : nat)
     (c_v1435 : (loop_hc_i59 ans_v1433 repeat_v1434)) ⇒
    (match repeat_v1434 as repeat0_v1436 in
       (loop_hc_i59 ans_v1433 repeat0_v1436) → IO unit with
     | O ⇒
       fn (c_v1438 : ??515) ⇒
         let __v1439 ⇐ recv c_v1438 in
         match __v1439 as __v1440 in ??518 with
         | ⟨ans_v1441, c_v1442⟩ ⇒
           let __v1443 ⇐ recv c_v1442 in
           match __v1443 as __v1444 in ??517 with
           | ⟨{pf_v1445}, c_v1446⟩ ⇒
             match ans_v1441 as __v1447 in ??516 with
             | Word_c17 s_v1448 __v1449 ⇒
               let __v1450 ⇐
                 (print_i34
                   (cats_i19
                     (cats_i19 "You Lose! The answer is " s_v1448) ".\n"))
               in close c_v1446
             end
           end
         end
     | S repeat_v1451 ⇒
       fn (c_v1452 : ??506) ⇒
         let guess_v1453 ⇐ (read_word_i62 ()) in
         let c_v1454 ⇐ (send c_v1452 guess_v1453) in
         let __v1455 ⇐ recv c_v1454 in
         match __v1455 as __v1456 in ??514 with
         | ⟨b_v1457, c_v1458⟩ ⇒
           let __v1459 ⇐ recv c_v1458 in
           match __v1459 as __v1460 in ??513 with
           | ⟨{pf_v1461}, c_v1462⟩ ⇒
             (match b_v1457 as b0_v1463 in
                hc⟨match b0_v1463 as __v1465 in ??507 with
                     | true ⇒ end
                     | false ⇒
                       ⇑(df_v1466 : word_d9) ⇒
                         ⇑{__v1467 :
                           (wdiff_d10 ans_v1433 guess_v1453 df_v1466)} ⇒
                           (wordle_loop_i56 ans_v1433 repeat_v1451)
                     end⟩ ⊸
                  IO unit with
              | true ⇒
                ln (c_v1468 : ??512) ⇒
                  let __v1469 ⇐ (print_i34 "You Win!\n") in close c_v1468
              | false ⇒
                ln (c_v1470 : ??508) ⇒
                  let __v1471 ⇐ recv c_v1470 in
                  match __v1471 as __v1472 in ??511 with
                  | ⟨diff_v1473, c_v1474⟩ ⇒
                    let __v1475 ⇐ recv c_v1474 in
                    match __v1475 as __v1476 in ??510 with
                    | ⟨{pf_v1477}, c_v1478⟩ ⇒
                      match diff_v1473 as __v1479 in ??509 with
                      | Word_c17 s_v1480 __v1481 ⇒
                        let __v1482 ⇐
                          (print_i34
                            (cats_i19
                              (cats_i19
                                (cats_i19
                                  (cats_i19 "Incorrect, hint: " s_v1480)
                                  ". You have ")
                                (string_of_nat_i39 repeat_v1451))
                              " more tries.\n"))
                        in (player_loop_i63 ans_v1433 repeat_v1451 c_v1478)
                      end
                    end
                  end
              end c_v1462)
           end
         end
     end c_v1435)

program player_i64 : wordle_hc_i61 → IO unit =
  fn (c_v1484 : wordle_hc_i61) ⇒
    let __v1485 ⇐ recv c_v1484 in
    match __v1485 as __v1486 in ??520 with
    | ⟨{ans_v1487}, c_v1488⟩ ⇒
      let __v1489 ⇐ recv c_v1488 in
      match __v1489 as __v1490 in ??519 with
      | ⟨repeat_v1491, c_v1492⟩ ⇒
        let __v1493 ⇐ (print_i34 "Wordle Game\n") in
        let __v1494 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v1495 ⇐
          (print_i34
            (cats_i19
              (cats_i19 "You have " (string_of_nat_i39 repeat_v1491))
              " tries.\n"))
        in (player_loop_i63 ans_v1487 repeat_v1491 c_v1492)
      end
    end

inductive at_d11
  (A_v1496 : U) (x_v1497 : A_v1496) (n_v1498 : nat) (xs_v1499 : (list_d6‹??521,
                                                                U› 
                                                                A_v1496)) : U
=
| at_O_c19 of
    (A_v1500 : U) (x_v1501 : A_v1500) (n_v1502 : nat)
    (xs_v1503 : (list_d6‹??522, U› A_v1500))
    (xs0_v1504 : (list_d6‹??524, ??523› A_v1500))
    (pf1_v1505 : n_v1502 ≡ 0)
    (pf2_v1506 : xs_v1503 ≡ (cons_c11‹??528, ??527› x_v1501 xs0_v1504))
    : (at_d11 A_v1500 x_v1501 n_v1502 xs_v1503)
| at_S_c20 of
    (A_v1507 : U) (x_v1508 : A_v1507) (n_v1509 : nat)
    (xs_v1510 : (list_d6‹??530, U› A_v1507)) (n0_v1511 : nat)
    (x0_v1512 : A_v1507) (xs0_v1513 : (list_d6‹??532, ??531› A_v1507))
    (h_v1514 : (at_d11 A_v1507 x_v1508 n0_v1511 xs0_v1513))
    (pf1_v1515 : n_v1509 ≡ n0_v1511.+1)
    (pf2_v1516 : xs_v1510 ≡ (cons_c11‹??536, ??535› x0_v1512 xs0_v1513))
    : (at_d11 A_v1507 x_v1508 n_v1509 xs_v1510)

logical ltn_inv_i65 :
  ∀ (m_v1517 : nat) →
    ∀ (n_v1518 : nat) →
      ∀ (__v1519 : (ltn_i6 m_v1517.+1 n_v1518.+1) ≡ true) →
        (ltn_i6 m_v1517 n_v1518) ≡ true
= fn (m_v1520 : nat) (n_v1521 : nat) (h_v1522 : ??540) ⇒ h_v1522

program get_at_i66 :
  ∀ {A_v1523 : U} →
    ∀ (n_v1524 : nat) →
      ∀ (xs_v1525 : (list_d6‹??542, ??541› A_v1523)) →
        ∀ {__v1526 :
          (ltn_i6 n_v1524 (llen_i24‹??545, ??544› ??543 xs_v1525)) ≡
            true} →
          (subset_d7‹??547, ??548, U›
            ??551
            fn (x_v1527 : ??549) ⇒ (at_d11 ??550 x_v1527 n_v1524 xs_v1525))
=
  fn {A_v1528 : U} (n_v1529 : nat)
     (xs_v1530 : (list_d6‹??542, ??541› A_v1528)) ⇒
    match xs_v1530 as xs0_v1531 in
      ∀ {__v1532 :
        (ltn_i6 n_v1529 (llen_i24‹??554, ??553› ??552 xs0_v1531)) ≡
          true} →
        (subset_d7‹??561, ??560, ??559›
          ??558
          fn (x_v1533 : ??556) ⇒ (at_d11 ??557 x_v1533 n_v1529 xs0_v1531)) with
    | nil_c10  ⇒
      fn {e_v1534 : ??606} ⇒
        rew [b_v1535, __v1536 ⇒
          match b_v1535 as __v1537 in ??607 with
          | true ⇒
            (subset_d7‹??616, ??615, ??614›
              ??613
              fn (x_v1538 : ??608) ⇒
                (at_d11 ??612 x_v1538 n_v1529 nil_c10‹??611, ??610›))
          | false ⇒ unit
          end] e_v1534 in
        ()
    | cons_c11 x_v1539 xs_v1540 ⇒
      match n_v1529 as n0_v1541 in
        ∀ {__v1542 :
          (ltn_i6 n0_v1541 (llen_i24‹??564, ??563› ??562 xs_v1540).+1) ≡
            true} →
          (subset_d7‹??574, ??573, ??572›
            ??571
            fn (x0_v1543 : ??566) ⇒
              (at_d11
                ??570 x0_v1543 n0_v1541
                (cons_c11‹??569, ??568› x_v1539 xs_v1540))) with
      | O ⇒
        fn {e_v1544 : ??594} ⇒
          (SPair_c12‹??605, ??604, ??603›
            x_v1539 (at_O_c19‹› xs_v1540 refl ??596 refl ??595))
      | S n_v1545 ⇒
        fn {e_v1546 : ??575} ⇒
          match (get_at_i66
                  ??578 n_v1545 xs_v1540 (ltn_inv_i65 ??577 ??576 e_v1546)) as __v1547 in
            ??579 with
          | SPair_c12 x0_v1548 pf_v1549 ⇒
            (SPair_c12‹??593, ??592, ??591›
              x0_v1548
              (at_S_c20‹›
                ??584 ??583 ??582 pf_v1549 refl ??581 refl ??580))
          end
      end
    end

program rand_word_i67 : unit → IO word_d9 =
  fn (__v1551 : unit) ⇒
    let words_v1552 =
      ((cons_c11‹??699, ??698›
         (Word_c17‹› "route" refl ??696)
         (cons_c11‹??695, ??694›
           (Word_c17‹› "crash" refl ??692)
           (cons_c11‹??691, ??690›
             (Word_c17‹› "clown" refl ??688)
             (cons_c11‹??687, ??686›
               (Word_c17‹› "shaky" refl ??684)
               (cons_c11‹??683, ??682›
                 (Word_c17‹› "vegan" refl ??680)
                 (cons_c11‹??679, ??678›
                   (Word_c17‹› "power" refl ??676)
                   (cons_c11‹??675, ??674›
                     (Word_c17‹› "trust" refl ??672)
                     (cons_c11‹??671, ??670›
                       (Word_c17‹› "enjoy" refl ??668)
                       (cons_c11‹??667, ??666›
                         (Word_c17‹› "brain" refl ??664)
                         (cons_c11‹??663, ??662›
                           (Word_c17‹› "adopt" refl ??660)
                           (cons_c11‹??659, ??658›
                             (Word_c17‹› "tower" refl ??656)
                             (cons_c11‹??655, ??654›
                               (Word_c17‹› "shade" refl ??652)
                               (cons_c11‹??651, ??650›
                                 (Word_c17‹› "delay" refl ??648)
                                 (cons_c11‹??647, ??646›
                                   (Word_c17‹› "twist" refl ??644)
                                   (cons_c11‹??643, ??642›
                                     (Word_c17‹› "alert" refl ??640)
                                     (cons_c11‹??639, ??638›
                                       (Word_c17‹› "choke" refl ??636)
                                       (cons_c11‹??635, ??634›
                                         (Word_c17‹› "split" refl ??632)
                                         (cons_c11‹??631, ??630›
                                           (Word_c17‹›
                                             "rhyme" refl ??628)
                                           (cons_c11‹??627, ??626›
                                             (Word_c17‹›
                                               "muddy" refl ??624)
                                             (cons_c11‹??623, ??622›
                                               (Word_c17‹›
                                                 "plant" refl ??620)
                                               nil_c10‹??619, ??618›))))))))))))))))))))
        : (list_d6‹??700, U› ??701))
    in
    let r_v1553 ⇐ rand 0 19 in
    match r_v1553 as __v1554 in ??702 with
    | Between_c4 n_v1555 __v1556 pf_v1557 ⇒
      match (get_at_i66 ??703 n_v1555 words_v1552 pf_v1557) as __v1558 in
        ??704 with
      | SPair_c12 w_v1559 __v1560 ⇒ return w_v1559
      end
    end

program server_loop_i68 :
  ∀ (ans_v1561 : word_d9) →
    ∀ (repeat_v1562 : nat) →
      (loop_ch_i58 ans_v1561 repeat_v1562) → IO unit
=
  fn (ans_v1564 : word_d9) (repeat_v1565 : nat)
     (c_v1566 : (loop_ch_i58 ans_v1564 repeat_v1565)) ⇒
    (match repeat_v1565 as repeat0_v1567 in
       (loop_ch_i58 ans_v1564 repeat0_v1567) → IO unit with
     | O ⇒
       fn (c_v1569 : ??712) ⇒
         let c_v1570 ⇐ (send c_v1569 ans_v1564) in
         let c_v1571 ⇐ (send c_v1570 refl ??713) in close c_v1571
     | S repeat_v1572 ⇒
       fn (c_v1573 : ??705) ⇒
         let __v1574 ⇐ recv c_v1573 in
         match __v1574 as __v1575 in ??711 with
         | ⟨guess_v1576, c_v1577⟩ ⇒
           let b_v1578 = (eqw_i55 ans_v1564 guess_v1576) in
           let c_v1579 ⇐ (send c_v1577 b_v1578) in
           let c_v1580 ⇐ (send c_v1579 refl ??706) in
           (match b_v1578 as b0_v1581 in
              ch⟨match b0_v1581 as __v1583 in ??707 with
                   | true ⇒ end
                   | false ⇒
                     ⇑(df_v1584 : word_d9) ⇒
                       ⇑{__v1585 :
                         (wdiff_d10 ans_v1564 guess_v1576 df_v1584)} ⇒
                         (wordle_loop_i56 ans_v1564 repeat_v1572)
                   end⟩ ⊸
                IO unit with
            | true ⇒ ln (c_v1586 : ??710) ⇒ close c_v1586
            | false ⇒
              ln (c_v1587 : ??708) ⇒
                match (word_diff_i54 ans_v1564 guess_v1576) as __v1588 in
                  ??709 with
                | SPair_c12 df_v1589 pf_v1590 ⇒
                  let c_v1591 ⇐ (send c_v1587 df_v1589) in
                  let c_v1592 ⇐ (send c_v1591 pf_v1590) in
                  (server_loop_i68 ans_v1564 repeat_v1572 c_v1592)
                end
            end c_v1580)
         end
     end c_v1566)

program server_i69 : wordle_ch_i60 → IO unit =
  fn (c_v1594 : wordle_ch_i60) ⇒
    let repeat_v1595 = 6 in
    let ans_v1596 ⇐ (rand_word_i67 ()) in
    let c_v1597 ⇐ (send c_v1594 ans_v1596) in
    let c_v1598 ⇐ (send c_v1597 repeat_v1595) in
    (server_loop_i68 ans_v1596 repeat_v1595 c_v1598)

program main_i70 : IO unit =
  let c_v1599 ⇐ fork (c_v1600 : wordle_ch_i60) in (server_i69 c_v1600) in
  let c0_v1601 ⇐
    fork (c0_v1602 :
      ch⟨⇓(__v1603 : wordle_hc_i61) ⇒ ⇑(__v1604 : unit) ⇒ end⟩)
    in
      let __v1605 ⇐ recv c0_v1602 in
      match __v1605 as __v1606 in ??714 with
      | ⟨c_v1607, c0_v1608⟩ ⇒
        let __v1609 ⇐ (player_i64 c_v1607) in
        let c0_v1610 ⇐ (send c0_v1608 ()) in close c0_v1610
      end
  in
  let c0_v1611 ⇐ (send c0_v1601 c_v1599) in
  let __v1612 ⇐ recv c0_v1611 in
  match __v1612 as __v1613 in ??715 with
  | ⟨__v1614, c0_v1615⟩ ⇒ close c0_v1615
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v899348 : bool) (b2_v899349 : bool) ⇒
    match b1_v899348 as __v899350 in bool with
    | true ⇒ b2_v899349 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v899353 : bool) (b2_v899354 : bool) ⇒
    match b1_v899353 as __v899355 in bool with
    | true ⇒ true | false ⇒ b2_v899354
    end

program notb_i3 : bool → bool =
  fn (b_v899357 : bool) ⇒
    match b_v899357 as __v899358 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v899361 : bool) (b2_v899362 : bool) ⇒
    match b1_v899361 as __v899363 in order_d1 with
    | true ⇒
      match b2_v899362 as __v899364 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v899362 as __v899365 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v899368 : nat) (y_v899369 : nat) ⇒
    match x_v899368 as __v899370 in bool with
    | O ⇒ true
    | S x_v899371 ⇒
      match y_v899369 as __v899372 in bool with
      | O ⇒ false | S y_v899373 ⇒ (lten_i5 x_v899371 y_v899373)
      end
    end

program ltn_i6 : nat → nat → bool =
  fn (x_v899376 : nat) (y_v899377 : nat) ⇒ (lten_i5 x_v899376.+1 y_v899377)

program gten_i7 : nat → nat → bool =
  fn (x_v899380 : nat) (y_v899381 : nat) ⇒ (lten_i5 y_v899381 x_v899380)

program gtn_i8 : nat → nat → bool =
  fn (x_v899384 : nat) (y_v899385 : nat) ⇒ (ltn_i6 y_v899385 x_v899384)

program eqn_i9 : nat → nat → bool =
  fn (x_v899388 : nat) (y_v899389 : nat) ⇒
    match x_v899388 as __v899390 in bool with
    | O ⇒
      match y_v899389 as __v899391 in bool with
      | O ⇒ true | S __v899392 ⇒ false
      end
    | S x_v899393 ⇒
      match y_v899389 as __v899394 in bool with
      | O ⇒ false | S y_v899395 ⇒ (eqn_i9 x_v899393 y_v899395)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v899398 : nat) (n2_v899399 : nat) ⇒
    match n1_v899398 as __v899400 in order_d1 with
    | O ⇒
      match n2_v899399 as __v899401 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v899402 ⇒ LT_c1‹›
      end
    | S n1_v899403 ⇒
      match n2_v899399 as __v899404 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v899405 ⇒ (comparen_i10 n1_v899403 n2_v899405)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v899407 : nat) ⇒
    match x_v899407 as __v899408 in nat with
    | O ⇒ 0 | S x_v899409 ⇒ x_v899409
    end

program addn_i12 : nat → nat → nat =
  fn (x_v899412 : nat) (y_v899413 : nat) ⇒
    match x_v899412 as __v899414 in nat with
    | O ⇒ y_v899413 | S x_v899415 ⇒ (addn_i12 x_v899415 y_v899413).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v899418 : nat) (y_v899419 : nat) ⇒
    match y_v899419 as __v899420 in nat with
    | O ⇒ x_v899418
    | S y_v899421 ⇒ (subn_i13 (pred_i11 x_v899418) y_v899421)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v899424 : nat) (y_v899425 : nat) ⇒
    match x_v899424 as __v899426 in nat with
    | O ⇒ 0
    | S x_v899427 ⇒ (addn_i12 y_v899425 (muln_i14 x_v899427 y_v899425))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v899430 : nat) (y_v899431 : nat) ⇒
    match (ltn_i6 x_v899430 y_v899431) as __v899432 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v899430 y_v899431) y_v899431).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v899435 : nat) (y_v899436 : nat) ⇒
    (subn_i13 x_v899435 (muln_i14 (divn_i15 x_v899435 y_v899436) y_v899436))

inductive between_d2 (lower_v899437 : nat) (upper_v899438 : nat) : L =
| Between_c4 of
    (lower_v899439 : nat) (upper_v899440 : nat) (n_v899441 : nat)
    {pf1_v899442 : (lten_i5 lower_v899439 n_v899441) ≡ true}
    {pf2_v899443 : (lten_i5 n_v899441 upper_v899440) ≡ true}
    : (between_d2 lower_v899439 upper_v899440)

inductive char_d3 : U =
| Char_c5 of (n_v899444 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v899447 : char_d3) (c2_v899448 : char_d3) ⇒
    match c1_v899447 as __v899449 in bool with
    | Char_c5 n1_v899450 ⇒
      match c2_v899448 as __v899451 in bool with
      | Char_c5 n2_v899452 ⇒ (eqn_i9 n1_v899450 n2_v899452)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v899455 : char_d3) (c2_v899456 : char_d3) ⇒
    match c1_v899455 as __v899457 in order_d1 with
    | Char_c5 n1_v899458 ⇒
      match c2_v899456 as __v899459 in order_d1 with
      | Char_c5 n2_v899460 ⇒ (comparen_i10 n1_v899458 n2_v899460)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v899461 : char_d3) (s_v899462 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v899465 : string_d4) (s2_v899466 : string_d4) ⇒
    match s1_v899465 as __v899467 in string_d4 with
    | EmptyString_c6  ⇒ s2_v899466
    | String_c7 c_v899468 s1_v899469 ⇒
      (String_c7‹› c_v899468 (cats_i19 s1_v899469 s2_v899466))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v899471 : string_d4) ⇒
    match s_v899471 as __v899472 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v899473 s_v899474 ⇒ (strlen_i20 s_v899474).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v899477 : string_d4) (s2_v899478 : string_d4) ⇒
    match s1_v899477 as __v899479 in bool with
    | EmptyString_c6  ⇒
      match s2_v899478 as __v899480 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v899481 __v899482 ⇒ false
      end
    | String_c7 c1_v899483 s1_v899484 ⇒
      match s2_v899478 as __v899485 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v899486 s2_v899487 ⇒
        (andb_i1
          (eqc_i17 c1_v899483 c2_v899486) (eqs_i21 s1_v899484 s2_v899487))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v899490 : string_d4) (s2_v899491 : string_d4) ⇒
    match s1_v899490 as __v899492 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v899491 as __v899493 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v899494 __v899495 ⇒ LT_c1‹›
      end
    | String_c7 c1_v899496 s1_v899497 ⇒
      match s2_v899491 as __v899498 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v899499 s2_v899500 ⇒
        match (comparec_i18 c1_v899496 c2_v899499) as __v899501 in
          order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v899497 s2_v899500)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s899502, t_s899503›
  (A_v899504 : Type‹s_s899502›) : Type‹t_s899503›
=
| None_c8 of
    ‹s_s899505, t_s899506› (A_v899507 : Type‹s_s899505›)
    : (option_d5‹s_s899505, t_s899506› A_v899507)
| Some_c9 of
    ‹s_s899508, t_s899509› (A_v899510 : Type‹s_s899508›)
    (x_v899511 : A_v899510) : (option_d5‹s_s899508, t_s899509› A_v899510)

program and_then_i23 ‹s_s899512, r_s899513, t_s899514› :
  ∀ {A_v899515 : Type‹s_s899512›} →
    ∀ {B_v899516 : Type‹r_s899513›} →
      (option_d5‹s_s899512, t_s899514› A_v899515) →
        A_v899515 → (option_d5‹r_s899513, t_s899514› B_v899516) ⊸
          (option_d5‹r_s899513, t_s899514› B_v899516)
=
  fn {A_v899520 : Type‹s_s899512›} {B_v899521 : Type‹r_s899513›}
     (opt_v899522 : (option_d5‹s_s899512, t_s899514› A_v899520)) ⇒
    ln (f_v899523 : A_v899520 →
                      (option_d5‹r_s899513, t_s899514› B_v899521)) ⇒
      match opt_v899522 as __v899525 in
        (option_d5‹r_s899513, t_s899514› B_v899521) with
      | None_c8  ⇒ None_c8‹r_s899513, t_s899514›
      | Some_c9 x_v899526 ⇒ (f_v899523 x_v899526)
      end

inductive list_d6 ‹s_s899527, t_s899528›
  (A_v899529 : Type‹s_s899527›) : Type‹t_s899528›
=
| nil_c10 of
    ‹s_s899530, t_s899531› (A_v899532 : Type‹s_s899530›)
    : (list_d6‹s_s899530, t_s899531› A_v899532)
| cons_c11 of
    ‹s_s899533, t_s899534› (A_v899535 : Type‹s_s899533›)
    (hd_v899536 : A_v899535)
    (tl_v899537 : (list_d6‹s_s899533, t_s899534› A_v899535))
    : (list_d6‹s_s899533, t_s899534› A_v899535)

logical llen_i24 ‹s_s899538, t_s899539› :
  ∀ (A_v899540 : Type‹s_s899538›) →
    (list_d6‹s_s899538, t_s899539› A_v899540) → nat
=
  fn (A_v899542 : Type‹s_s899538›)
     (xs_v899543 : (list_d6‹s_s899538, t_s899539› A_v899542)) ⇒
    match xs_v899543 as __v899544 in nat with
    | nil_c10  ⇒ 0
    | cons_c11 x_v899545 xs_v899546 ⇒
      (llen_i24‹s_s899538, t_s899539› A_v899542 xs_v899546).+1
    end

program len_i25 ‹s_s899547, t_s899548› :
  ∀ {A_v899549 : Type‹s_s899547›} →
    (list_d6‹s_s899547, t_s899548› A_v899549) →
      nat ⊗ (list_d6‹s_s899547, t_s899548› A_v899549)
=
  fn {A_v899552 : Type‹s_s899547›}
     (xs_v899553 : (list_d6‹s_s899547, t_s899548› A_v899552)) ⇒
    match xs_v899553 as __v899554 in
      nat ⊗ (list_d6‹s_s899547, t_s899548› A_v899552) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s899547, t_s899548›⟩
    | cons_c11 x_v899556 xs_v899557 ⇒
      match (len_i25‹s_s899547, t_s899548› A_v899552 xs_v899557) as __v899558 in
        nat ⊗ (list_d6‹s_s899547, t_s899548› A_v899552) with
      | ⟨n_v899560, xs_v899561⟩ ⇒
        ⟨n_v899560.+1, (cons_c11‹s_s899547, t_s899548›
                           x_v899556 xs_v899561)⟩
      end
    end

program append_i26 ‹s_s899562, t_s899563› :
  ∀ {A_v899564 : Type‹s_s899562›} →
    (list_d6‹s_s899562, t_s899563› A_v899564) →
      (list_d6‹s_s899562, t_s899563› A_v899564) ⊸
        (list_d6‹s_s899562, t_s899563› A_v899564)
=
  fn {A_v899567 : Type‹s_s899562›}
     (xs_v899568 : (list_d6‹s_s899562, t_s899563› A_v899567)) ⇒
    ln (ys_v899569 : (list_d6‹s_s899562, t_s899563› A_v899567)) ⇒
      match xs_v899568 as __v899570 in
        (list_d6‹s_s899562, t_s899563› A_v899567) with
      | nil_c10  ⇒ ys_v899569
      | cons_c11 x_v899571 xs_v899572 ⇒
        (cons_c11‹s_s899562, t_s899563›
          x_v899571
          (append_i26‹s_s899562, t_s899563›
            A_v899567 xs_v899572 ys_v899569))
      end

logical stdin_rec_i27 : unit → proto =
  fn (__v899574 : unit) ⇒
    ⇑(b_v899575 : bool) ⇒
      match b_v899575 as __v899576 in proto with
      | true ⇒ ⇓(__v899577 : string_d4) ⇒ (stdin_rec_i27 ())
      | false ⇒ end
      end

logical stdout_rec_i28 : unit → proto =
  fn (__v899579 : unit) ⇒
    ⇑(b_v899580 : bool) ⇒
      match b_v899580 as __v899581 in proto with
      | true ⇒ ⇑(__v899582 : string_d4) ⇒ (stdout_rec_i28 ())
      | false ⇒ end
      end

logical stderr_rec_i29 : unit → proto =
  fn (__v899584 : unit) ⇒
    ⇑(b_v899585 : bool) ⇒
      match b_v899585 as __v899586 in proto with
      | true ⇒ ⇑(__v899587 : string_d4) ⇒ (stderr_rec_i29 ())
      | false ⇒ end
      end

logical stdin_t_i30 : proto = (stdin_rec_i27 ())

logical stdout_t_i31 : proto = (stdout_rec_i28 ())

logical stderr_t_i32 : proto = (stderr_rec_i29 ())

program readline_i33 : unit → IO string_d4 =
  fn (__v899589 : unit) ⇒
    let ch_v899590 ⇐ open stdin in
    let ch_v899591 ⇐ (send ch_v899590 true) in
    let __v899592 ⇐ recv ch_v899591 in
    match __v899592 as __v899593 in IO string_d4 with
    | ⟨s_v899594, ch_v899595⟩ ⇒
      let ch_v899596 ⇐ (send ch_v899595 false) in
      let __v899597 ⇐ close ch_v899596 in return s_v899594
    end

program print_i34 : string_d4 → IO unit =
  fn (s_v899599 : string_d4) ⇒
    let ch_v899600 ⇐ open stdout in
    let ch_v899601 ⇐ (send ch_v899600 true) in
    let ch_v899602 ⇐ (send ch_v899601 s_v899599) in
    let ch_v899603 ⇐ (send ch_v899602 false) in close ch_v899603

program prerr_i35 : string_d4 → IO unit =
  fn (s_v899605 : string_d4) ⇒
    let ch_v899606 ⇐ open stderr in
    let ch_v899607 ⇐ (send ch_v899606 true) in
    let ch_v899608 ⇐ (send ch_v899607 s_v899605) in
    let ch_v899609 ⇐ (send ch_v899608 false) in close ch_v899609

program digits_i36 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i37 :
  ∀ {A_v899610 : U} →
    nat → (list_d6‹U, U› A_v899610) → A_v899610 → A_v899610
=
  fn {A_v899614 : U} (n_v899615 : nat)
     (xs_v899616 : (list_d6‹U, U› A_v899614)) (a_v899617 : A_v899614) ⇒
    match n_v899615 as __v899618 in A_v899614 with
    | O ⇒
      match xs_v899616 as __v899619 in A_v899614 with
      | nil_c10  ⇒ a_v899617 | cons_c11 x_v899620 __v899621 ⇒ x_v899620
      end
    | S n_v899622 ⇒
      match xs_v899616 as __v899623 in A_v899614 with
      | nil_c10  ⇒ a_v899617
      | cons_c11 __v899624 xs_v899625 ⇒
        (get_at_i37 A_v899614 n_v899622 xs_v899625 a_v899617)
      end
    end

program string_of_digit_i38 : nat → string_d4 =
  fn (n_v899627 : nat) ⇒
    (get_at_i37 string_d4 n_v899627 digits_i36 EmptyString_c6‹›)

program string_of_nat_i39 : nat → string_d4 =
  fn (n_v899629 : nat) ⇒
    let s_v899630 = (string_of_digit_i38 (modn_i16 n_v899629 10)) in
    let n_v899631 = (divn_i15 n_v899629 10) in
    match (ltn_i6 0 n_v899631) as __v899632 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i39 n_v899631) s_v899630)
    | false ⇒ s_v899630
    end

program digit_of_char_i40 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v899634 : char_d3) ⇒
    match (eqc_i17 c_v899634 '0') as __v899635 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v899634 '1') as __v899636 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v899634 '2') as __v899637 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v899634 '3') as __v899638 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v899634 '4') as __v899639 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v899634 '5') as __v899640 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v899634 '6') as __v899641 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v899634 '7') as __v899642 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v899634 '8') as __v899643 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v899634 '9') as __v899644 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i41 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v899647 : string_d4) (acc_v899648 : nat) ⇒
    match s_v899647 as __v899649 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v899648)
    | String_c7 c_v899650 s_v899651 ⇒
      match (digit_of_char_i40 c_v899650) as __v899652 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v899653 ⇒
        (nat_of_string_loop_i41
          s_v899651 (addn_i12 (muln_i14 acc_v899648 10) n_v899653))
      end
    end

program nat_of_string_i42 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v899655 : string_d4) ⇒ (nat_of_string_loop_i41 s_v899655 0)

logical eq_sym_i43 ‹s_s899656› :
  ∀ (A_v899657 : Type‹s_s899656›) →
    ∀ (x_v899658 : A_v899657) →
      ∀ (y_v899659 : A_v899657) →
        x_v899658 ≡ y_v899659 → y_v899659 ≡ x_v899658
=
  fn (A_v899661 : Type‹s_s899656›) (x_v899662 : A_v899661)
     (y_v899663 : A_v899661) (e_v899664 : x_v899662 ≡ y_v899663) ⇒
    rew [y_v899665, __v899666 ⇒ y_v899665 ≡ x_v899662] e_v899664 in
    refl x_v899662

logical eq_trans_i44 ‹s_s899667› :
  ∀ (A_v899668 : Type‹s_s899667›) →
    ∀ (x_v899669 : A_v899668) →
      ∀ (y_v899670 : A_v899668) →
        ∀ (z_v899671 : A_v899668) →
          x_v899669 ≡ y_v899670 →
            y_v899670 ≡ z_v899671 → x_v899669 ≡ z_v899671
=
  fn (A_v899674 : Type‹s_s899667›) (x_v899675 : A_v899674)
     (y_v899676 : A_v899674) (z_v899677 : A_v899674)
     (e1_v899678 : x_v899675 ≡ y_v899676)
     (e2_v899679 : y_v899676 ≡ z_v899677) ⇒
    rew [y0_v899680, __v899681 ⇒ x_v899675 ≡ y0_v899680] e2_v899679 in
    e1_v899678

logical f_equal_i45 ‹s_s899682, t_s899683› :
  ∀ (A_v899684 : Type‹s_s899682›) →
    ∀ (B_v899685 : Type‹t_s899683›) →
      ∀ (f_v899686 : A_v899684 → B_v899685) →
        ∀ (x_v899688 : A_v899684) →
          ∀ (y_v899689 : A_v899684) →
            x_v899688 ≡ y_v899689 →
              (f_v899686 x_v899688) ≡ (f_v899686 y_v899689)
=
  fn (A_v899691 : Type‹s_s899682›) (B_v899692 : Type‹t_s899683›)
     (f_v899693 : A_v899691 → B_v899692) (x_v899694 : A_v899691)
     (y_v899695 : A_v899691) (e_v899696 : x_v899694 ≡ y_v899695) ⇒
    rew [y_v899698, p_v899699 ⇒
      (f_v899693 x_v899694) ≡ (f_v899693 y_v899698)] e_v899696 in
    refl (f_v899693 x_v899694)

logical bool_absurd_i46 : true ≡ false → ⊥ =
  fn (e_v899701 : true ≡ false) ⇒
    rew [x_v899702, __v899703 ⇒
      match x_v899702 as __v899704 in U with
      | true ⇒ unit | false ⇒ ⊥
      end] e_v899701 in
    ()

logical nat_absurd_i47 : ∀ (n_v899705 : nat) → n_v899705.+1 ≡ 0 → ⊥
=
  fn (n_v899707 : nat) (e_v899708 : n_v899707.+1 ≡ 0) ⇒
    rew [x_v899709, __v899710 ⇒
      match x_v899709 as __v899711 in U with
      | O ⇒ ⊥ | S __v899712 ⇒ unit
      end] e_v899708 in
    ()

logical nat_inv_i48 :
  ∀ (n1_v899713 : nat) →
    ∀ (n2_v899714 : nat) →
      n1_v899713.+1 ≡ n2_v899714.+1 → n1_v899713 ≡ n2_v899714
=
  fn (n1_v899716 : nat) (n2_v899717 : nat)
     (e_v899718 : n1_v899716.+1 ≡ n2_v899717.+1) ⇒
    (f_equal_i45‹U, U›
      nat nat pred_i11 n1_v899716.+1 n2_v899717.+1 e_v899718)

logical eqn_reflect_i49 :
  ∀ (m_v899719 : nat) →
    ∀ (n_v899720 : nat) →
      (eqn_i9 m_v899719 n_v899720) ≡ true → m_v899719 ≡ n_v899720
=
  fn (m_v899722 : nat) (n_v899723 : nat) ⇒
    match m_v899722 as m0_v899724 in
      (eqn_i9 m0_v899724 n_v899723) ≡ true → m0_v899724 ≡ n_v899723 with
    | O ⇒
      match n_v899723 as n0_v899726 in
        (eqn_i9 0 n0_v899726) ≡ true → 0 ≡ n0_v899726 with
      | O ⇒ fn (__v899728 : (eqn_i9 0 0) ≡ true) ⇒ refl 0
      | S n_v899729 ⇒
        fn (e_v899730 : (eqn_i9 0 n_v899729.+1) ≡ true) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹U›
                     bool (eqn_i9 0 n_v899729.+1) true e_v899730))
      end
    | S m_v899731 ⇒
      match n_v899723 as n0_v899732 in
        (eqn_i9 m_v899731.+1 n0_v899732) ≡ true →
          m_v899731.+1 ≡ n0_v899732 with
      | O ⇒
        fn (e_v899734 : (eqn_i9 m_v899731.+1 0) ≡ true) ⇒
          absurd (bool_absurd_i46
                   (eq_sym_i43‹U›
                     bool (eqn_i9 m_v899731.+1 0) true e_v899734))
      | S n_v899735 ⇒
        fn (e_v899736 : (eqn_i9 m_v899731.+1 n_v899735.+1) ≡ true) ⇒
          (f_equal_i45‹U, U›
            nat nat fn (x_v899737 : nat) ⇒ x_v899737.+1 m_v899731 n_v899735
            (eqn_reflect_i49 m_v899731 n_v899735 e_v899736))
      end
    end

logical eqc_reflect_i50 :
  ∀ (c1_v899738 : char_d3) →
    ∀ (c2_v899739 : char_d3) →
      (eqc_i17 c1_v899738 c2_v899739) ≡ true → c1_v899738 ≡ c2_v899739
=
  fn (c1_v899741 : char_d3) (c2_v899742 : char_d3) ⇒
    match c1_v899741 as c0_v899743 in
      (eqc_i17 c0_v899743 c2_v899742) ≡ true → c0_v899743 ≡ c2_v899742 with
    | Char_c5 m_v899745 ⇒
      match c2_v899742 as c0_v899746 in
        (eqc_i17 (Char_c5‹› m_v899745) c0_v899746) ≡ true →
          (Char_c5‹› m_v899745) ≡ c0_v899746 with
      | Char_c5 n_v899748 ⇒
        fn (e_v899749 : (eqc_i17
                          (Char_c5‹› m_v899745) (Char_c5‹› n_v899748)) ≡
                          true) ⇒
          let e_v899750 = (eqn_reflect_i49 m_v899745 n_v899748 e_v899749) in
          (f_equal_i45‹U, U›
            nat char_d3 fn (x_v899751 : nat) ⇒ (Char_c5‹› x_v899751)
            m_v899745 n_v899748 e_v899750)
      end
    end

program contains_i51 : char_d3 → string_d4 → bool =
  fn (c_v899754 : char_d3) (s_v899755 : string_d4) ⇒
    match s_v899755 as __v899756 in bool with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v899757 s_v899758 ⇒
      match (eqc_i17 c_v899754 c0_v899757) as __v899759 in bool with
      | true ⇒ true | false ⇒ (contains_i51 c_v899754 s_v899758)
      end
    end

inductive subset_d7 ‹s_s899760, r_s899761, t_s899762›
  (A_v899763 : Type‹s_s899760›) (P_v899764 : A_v899763 →
                                                   Type‹r_s899761›) : Type‹t_s899762›
=
| SPair_c12 of
    ‹s_s899766, r_s899767, t_s899768› (A_v899769 : Type‹s_s899766›)
    (P_v899770 : A_v899769 → Type‹r_s899767›) (m_v899772 : A_v899769)
    {pf_v899773 : (P_v899770 m_v899772)}
    : (subset_d7‹s_s899766, r_s899767, t_s899768› A_v899769 P_v899770)

inductive diff_d8
  (ans_v899774 : string_d4) (a_v899775 : string_d4) (b_v899776 : string_d4) (df_v899777 : string_d4) : U
=
| diff_EmptyString_c13 of
    (ans_v899778 : string_d4) (a_v899779 : string_d4) (b_v899780 : string_d4)
    (df_v899781 : string_d4)
    (pf1_v899782 : a_v899779 ≡ EmptyString_c6‹›)
    (pf2_v899783 : b_v899780 ≡ EmptyString_c6‹›)
    (pf3_v899784 : df_v899781 ≡ EmptyString_c6‹›)
    : (diff_d8 ans_v899778 a_v899779 b_v899780 df_v899781)
| diff_StringY_c14 of
    (ans_v899785 : string_d4) (a_v899786 : string_d4) (b_v899787 : string_d4)
    (df_v899788 : string_d4) (c_v899789 : char_d3) (s1_v899790 : string_d4)
    (s2_v899791 : string_d4) (s3_v899792 : string_d4)
    (h_v899793 : (diff_d8 ans_v899785 s1_v899790 s2_v899791 s3_v899792))
    (pf1_v899794 : a_v899786 ≡ (String_c7‹› c_v899789 s1_v899790))
    (pf2_v899795 : b_v899787 ≡ (String_c7‹› c_v899789 s2_v899791))
    (pf3_v899796 : df_v899788 ≡ (cats_i19 "Y" s3_v899792))
    : (diff_d8 ans_v899785 a_v899786 b_v899787 df_v899788)
| diff_StringI_c15 of
    (ans_v899797 : string_d4) (a_v899798 : string_d4) (b_v899799 : string_d4)
    (df_v899800 : string_d4) (c1_v899801 : char_d3) (c2_v899802 : char_d3)
    (s1_v899803 : string_d4) (s2_v899804 : string_d4)
    (s3_v899805 : string_d4)
    (h1_v899806 : (eqc_i17 c1_v899801 c2_v899802) ≡ false)
    (h2_v899807 : (contains_i51 c2_v899802 ans_v899797) ≡ true)
    (h3_v899808 : (diff_d8 ans_v899797 s1_v899803 s2_v899804 s3_v899805))
    (pf1_v899809 : a_v899798 ≡ (String_c7‹› c1_v899801 s1_v899803))
    (pf2_v899810 : b_v899799 ≡ (String_c7‹› c2_v899802 s2_v899804))
    (pf3_v899811 : df_v899800 ≡ (cats_i19 "I" s3_v899805))
    : (diff_d8 ans_v899797 a_v899798 b_v899799 df_v899800)
| diff_StringN_c16 of
    (ans_v899812 : string_d4) (a_v899813 : string_d4) (b_v899814 : string_d4)
    (df_v899815 : string_d4) (c1_v899816 : char_d3) (c2_v899817 : char_d3)
    (s1_v899818 : string_d4) (s2_v899819 : string_d4)
    (s3_v899820 : string_d4)
    (h1_v899821 : (eqc_i17 c1_v899816 c2_v899817) ≡ false)
    (h2_v899822 : (contains_i51 c2_v899817 ans_v899812) ≡ false)
    (h3_v899823 : (diff_d8 ans_v899812 s1_v899818 s2_v899819 s3_v899820))
    (pf1_v899824 : a_v899813 ≡ (String_c7‹› c1_v899816 s1_v899818))
    (pf2_v899825 : b_v899814 ≡ (String_c7‹› c2_v899817 s2_v899819))
    (pf3_v899826 : df_v899815 ≡ (cats_i19 "N" s3_v899820))
    : (diff_d8 ans_v899812 a_v899813 b_v899814 df_v899815)

program string_diff_i52 :
  ∀ (ans_v899827 : string_d4) →
    ∀ (s1_v899828 : string_d4) →
      ∀ (s2_v899829 : string_d4) →
        {(strlen_i20 s1_v899828) ≡ (strlen_i20 s2_v899829)} →
          (subset_d7‹U, U, U›
            string_d4
            fn (df_v899831 : string_d4) ⇒
              (diff_d8 ans_v899827 s1_v899828 s2_v899829 df_v899831))
=
  fn (ans_v899832 : string_d4) (s1_v899833 : string_d4)
     (s2_v899834 : string_d4) ⇒
    match s1_v899833 as s0_v899835 in
      {(strlen_i20 s0_v899835) ≡ (strlen_i20 s2_v899834)} →
        (subset_d7‹U, U, U›
          string_d4
          fn (df_v899837 : string_d4) ⇒
            (diff_d8 ans_v899832 s0_v899835 s2_v899834 df_v899837)) with
    | EmptyString_c6  ⇒
      match s2_v899834 as s0_v899838 in
        {0 ≡ (strlen_i20 s0_v899838)} →
          (subset_d7‹U, U, U›
            string_d4
            fn (df_v899840 : string_d4) ⇒
              (diff_d8
                ans_v899832 EmptyString_c6‹› s0_v899838 df_v899840)) with
      | EmptyString_c6  ⇒
        fn {e_v899841 : 0 ≡ (strlen_i20 EmptyString_c6‹›)} ⇒
          (SPair_c12‹U, U, U›
            EmptyString_c6‹›
            (diff_EmptyString_c13‹›
              refl EmptyString_c6‹› refl EmptyString_c6‹›
              refl EmptyString_c6‹›))
      | String_c7 c2_v899842 s2_v899843 ⇒
        fn {e_v899844 : 0 ≡
                          (strlen_i20
                            (String_c7‹› c2_v899842 s2_v899843))} ⇒
          rew [x_v899845, __v899846 ⇒
            match x_v899845 as __v899847 in U with
            | O ⇒ unit
            | S __v899848 ⇒
              (subset_d7‹U, U, U›
                string_d4
                fn (df_v899849 : string_d4) ⇒
                  (diff_d8
                    ans_v899832 EmptyString_c6‹›
                    (String_c7‹› c2_v899842 s2_v899843) df_v899849))
            end] e_v899844 in
          ()
      end
    | String_c7 c1_v899850 s1_v899851 ⇒
      match s2_v899834 as s0_v899852 in
        {(strlen_i20 s1_v899851).+1 ≡ (strlen_i20 s0_v899852)} →
          (subset_d7‹U, U, U›
            string_d4
            fn (df_v899854 : string_d4) ⇒
              (diff_d8
                ans_v899832 (String_c7‹› c1_v899850 s1_v899851)
                s0_v899852 df_v899854)) with
      | EmptyString_c6  ⇒
        fn {e_v899855 : (strlen_i20 s1_v899851).+1 ≡
                          (strlen_i20 EmptyString_c6‹›)} ⇒
          rew [x_v899856, __v899857 ⇒
            match x_v899856 as __v899858 in U with
            | O ⇒
              (subset_d7‹U, U, U›
                string_d4
                fn (df_v899859 : string_d4) ⇒
                  (diff_d8
                    ans_v899832 (String_c7‹› c1_v899850 s1_v899851)
                    EmptyString_c6‹› df_v899859))
            | S __v899860 ⇒ unit
            end] e_v899855 in
          ()
      | String_c7 c2_v899861 s2_v899862 ⇒
        fn {e_v899863 : (strlen_i20 s1_v899851).+1 ≡
                          (strlen_i20
                            (String_c7‹› c2_v899861 s2_v899862))} ⇒
          let {e_v899864} =
            (nat_inv_i48
              (strlen_i20 s1_v899851)
              match s2_v899862 as __v899865 in nat with
              | EmptyString_c6  ⇒ 0
              | String_c7 __v899866 s_v899867 ⇒ (strlen_i20 s_v899867).+1
              end e_v899863)
          in
          match (string_diff_i52 ans_v899832 s1_v899851 s2_v899862 e_v899864) as __v899868 in
            (subset_d7‹U, U, U›
              string_d4
              fn (df_v899869 : string_d4) ⇒
                (diff_d8
                  ans_v899832 (String_c7‹› c1_v899850 s1_v899851)
                  (String_c7‹› c2_v899861 s2_v899862) df_v899869)) with
          | SPair_c12 df_v899870 pf_v899871 ⇒
            (match (eqc_i17 c1_v899850 c2_v899861) as b0_v899872 in
               {(eqc_i17 c1_v899850 c2_v899861) ≡ b0_v899872} →
                 (subset_d7‹U, U, U›
                   string_d4
                   fn (df_v899874 : string_d4) ⇒
                     (diff_d8
                       ans_v899832 (String_c7‹› c1_v899850 s1_v899851)
                       (String_c7‹› c2_v899861 s2_v899862) df_v899874)) with
             | true ⇒
               fn {e1_v899875 : (eqc_i17 c1_v899850 c2_v899861) ≡ true} ⇒
                 let {e1_v899876} =
                   (eqc_reflect_i50 c1_v899850 c2_v899861 e1_v899875)
                 in
                 let {h_v899877} =
                   rew [c_v899878, __v899879 ⇒
                     (String_c7‹› c_v899878 s2_v899862) ≡
                       (String_c7‹› c1_v899850 s2_v899862)]
                     e1_v899876 in
                   refl (String_c7‹› c1_v899850 s2_v899862)
                 in
                 (SPair_c12‹U, U, U›
                   (cats_i19 "Y" df_v899870)
                   (diff_StringY_c14‹›
                     c1_v899850 s1_v899851 s2_v899862 df_v899870 pf_v899871
                     refl (String_c7‹› c1_v899850 s1_v899851) h_v899877
                     refl (String_c7‹›
                            'Y' (cats_i19 EmptyString_c6‹› df_v899870))))
             | false ⇒
               fn {e1_v899880 : (eqc_i17 c1_v899850 c2_v899861) ≡ false} ⇒
                 (match (contains_i51 c2_v899861 ans_v899832) as b0_v899881 in
                    {(contains_i51 c2_v899861 ans_v899832) ≡ b0_v899881} →
                      (subset_d7‹U, U, U›
                        string_d4
                        fn (df_v899883 : string_d4) ⇒
                          (diff_d8
                            ans_v899832
                            (String_c7‹› c1_v899850 s1_v899851)
                            (String_c7‹› c2_v899861 s2_v899862)
                            df_v899883)) with
                  | true ⇒
                    fn {e2_v899884 : (contains_i51 c2_v899861 ans_v899832) ≡
                                       true} ⇒
                      (SPair_c12‹U, U, U›
                        (cats_i19 "I" df_v899870)
                        (diff_StringI_c15‹›
                          c1_v899850 c2_v899861 s1_v899851 s2_v899862
                          df_v899870 e1_v899880 e2_v899884 pf_v899871
                          refl (String_c7‹› c1_v899850 s1_v899851)
                          refl (String_c7‹› c2_v899861 s2_v899862)
                          refl (String_c7‹›
                                 'I'
                                 (cats_i19 EmptyString_c6‹› df_v899870))))
                  | false ⇒
                    fn {e2_v899885 : (contains_i51 c2_v899861 ans_v899832) ≡
                                       false} ⇒
                      (SPair_c12‹U, U, U›
                        (cats_i19 "N" df_v899870)
                        (diff_StringN_c16‹›
                          c1_v899850 c2_v899861 s1_v899851 s2_v899862
                          df_v899870 e1_v899880 e2_v899885 pf_v899871
                          refl (String_c7‹› c1_v899850 s1_v899851)
                          refl (String_c7‹› c2_v899861 s2_v899862)
                          refl (String_c7‹›
                                 'N'
                                 (cats_i19 EmptyString_c6‹› df_v899870))))
                  end refl (contains_i51 c2_v899861 ans_v899832))
             end refl (eqc_i17 c1_v899850 c2_v899861))
          end
      end
    end

logical diff_len_i53 :
  ∀ (ans_v899886 : string_d4) →
    ∀ (s1_v899887 : string_d4) →
      ∀ (s2_v899888 : string_d4) →
        ∀ (df_v899889 : string_d4) →
          (diff_d8 ans_v899886 s1_v899887 s2_v899888 df_v899889) →
            (strlen_i20 df_v899889) ≡ (strlen_i20 s1_v899887)
=
  fn (ans_v899891 : string_d4) (s1_v899892 : string_d4)
     (s2_v899893 : string_d4) (df_v899894 : string_d4)
     (h_v899895 : (diff_d8 ans_v899891 s1_v899892 s2_v899893 df_v899894)) ⇒
    match h_v899895 as __v899896 in
      (strlen_i20 df_v899894) ≡ (strlen_i20 s1_v899892) with
    | diff_EmptyString_c13 pf1_v899897 __v899898 pf3_v899899 ⇒
      let pf1_v899900 =
        (eq_sym_i43‹U›
          string_d4 s1_v899892 EmptyString_c6‹› pf1_v899897)
      in
      let pf3_v899901 =
        (eq_sym_i43‹U›
          string_d4 df_v899894 EmptyString_c6‹› pf3_v899899)
      in
      rew [s0_v899902, __v899903 ⇒
        (strlen_i20 df_v899894) ≡ (strlen_i20 s0_v899902)] pf1_v899900 in
      rew [df0_v899904, __v899905 ⇒ (strlen_i20 df0_v899904) ≡ 0]
        pf3_v899901 in
      refl (strlen_i20 EmptyString_c6‹›)
    | diff_StringY_c14 c_v899906 s0_v899907 s3_v899908 s4_v899909 h1_v899910
      pf1_v899911 __v899912 pf3_v899913 ⇒
      let pf1_v899914 =
        (eq_sym_i43‹U›
          string_d4 s1_v899892 (String_c7‹› c_v899906 s0_v899907)
          pf1_v899911)
      in
      let pf3_v899915 =
        (eq_sym_i43‹U›
          string_d4 df_v899894 (cats_i19 "Y" s4_v899909) pf3_v899913)
      in
      rew [s0_v899916, __v899917 ⇒
        (strlen_i20 df_v899894) ≡ (strlen_i20 s0_v899916)] pf1_v899914 in
      rew [df0_v899918, __v899919 ⇒
        (strlen_i20 df0_v899918) ≡
          (strlen_i20 (String_c7‹› c_v899906 s0_v899907))]
        pf3_v899915 in
      rew [n_v899920, __v899921 ⇒
        (strlen_i20 s4_v899909).+1 ≡ n_v899920.+1]
        (diff_len_i53
          ans_v899891 s0_v899907 s3_v899908 s4_v899909 h1_v899910) in
      refl (strlen_i20 s4_v899909).+1
    | diff_StringI_c15 c1_v899922 __v899923 s0_v899924 s3_v899925 s4_v899926
      __v899927 __v899928 h3_v899929 pf1_v899930 __v899931 pf3_v899932 ⇒
      let pf1_v899933 =
        (eq_sym_i43‹U›
          string_d4 s1_v899892 (String_c7‹› c1_v899922 s0_v899924)
          pf1_v899930)
      in
      let pf3_v899934 =
        (eq_sym_i43‹U›
          string_d4 df_v899894 (cats_i19 "I" s4_v899926) pf3_v899932)
      in
      rew [s0_v899935, __v899936 ⇒
        (strlen_i20 df_v899894) ≡ (strlen_i20 s0_v899935)] pf1_v899933 in
      rew [df0_v899937, __v899938 ⇒
        (strlen_i20 df0_v899937) ≡
          (strlen_i20 (String_c7‹› c1_v899922 s0_v899924))]
        pf3_v899934 in
      rew [n_v899939, __v899940 ⇒
        (strlen_i20 s4_v899926).+1 ≡ n_v899939.+1]
        (diff_len_i53
          ans_v899891 s0_v899924 s3_v899925 s4_v899926 h3_v899929) in
      refl (strlen_i20 s4_v899926).+1
    | diff_StringN_c16 c1_v899941 __v899942 s0_v899943 s3_v899944 s4_v899945
      __v899946 __v899947 h3_v899948 pf1_v899949 __v899950 pf3_v899951 ⇒
      let pf1_v899952 =
        (eq_sym_i43‹U›
          string_d4 s1_v899892 (String_c7‹› c1_v899941 s0_v899943)
          pf1_v899949)
      in
      let pf3_v899953 =
        (eq_sym_i43‹U›
          string_d4 df_v899894 (cats_i19 "N" s4_v899945) pf3_v899951)
      in
      rew [s0_v899954, __v899955 ⇒
        (strlen_i20 df_v899894) ≡ (strlen_i20 s0_v899954)] pf1_v899952 in
      rew [df0_v899956, __v899957 ⇒
        (strlen_i20 df0_v899956) ≡
          (strlen_i20 (String_c7‹› c1_v899941 s0_v899943))]
        pf3_v899953 in
      rew [n_v899958, __v899959 ⇒
        (strlen_i20 s4_v899945).+1 ≡ n_v899958.+1]
        (diff_len_i53
          ans_v899891 s0_v899943 s3_v899944 s4_v899945 h3_v899948) in
      refl (strlen_i20 s4_v899945).+1
    end

inductive word_d9 : U =
| Word_c17 of
    (s_v899960 : string_d4) {pf_v899961 : (strlen_i20 s_v899960) ≡ 5}
    : word_d9

inductive wdiff_d10
  (ans_v899962 : word_d9) (guess_v899963 : word_d9) (df_v899964 : word_d9) : U
=
| diff_Word_c18 of
    (ans_v899965 : word_d9) (guess_v899966 : word_d9) (df_v899967 : word_d9)
    (s1_v899968 : string_d4) (s2_v899969 : string_d4)
    (s3_v899970 : string_d4) (pf1_v899971 : (strlen_i20 s1_v899968) ≡ 5)
    (pf2_v899972 : (strlen_i20 s2_v899969) ≡ 5)
    (pf3_v899973 : (strlen_i20 s3_v899970) ≡ 5)
    (pf4_v899974 : ans_v899965 ≡ (Word_c17‹› s1_v899968 pf1_v899971))
    (pf5_v899975 : guess_v899966 ≡ (Word_c17‹› s2_v899969 pf2_v899972))
    (pf6_v899976 : df_v899967 ≡ (Word_c17‹› s3_v899970 pf3_v899973))
    (pf7_v899977 : (diff_d8 s1_v899968 s1_v899968 s2_v899969 s3_v899970))
    : (wdiff_d10 ans_v899965 guess_v899966 df_v899967)

program word_diff_i54 :
  ∀ (ans_v899978 : word_d9) →
    ∀ (guess_v899979 : word_d9) →
      (subset_d7‹U, U, U›
        word_d9
        fn (df_v899980 : word_d9) ⇒
          (wdiff_d10 ans_v899978 guess_v899979 df_v899980))
=
  fn (ans_v899981 : word_d9) (guess_v899982 : word_d9) ⇒
    (match ans_v899981 as ans0_v899983 in
       {ans_v899981 ≡ ans0_v899983} →
         (subset_d7‹U, U, U›
           word_d9
           fn (df_v899985 : word_d9) ⇒
             (wdiff_d10 ans_v899981 guess_v899982 df_v899985)) with
     | Word_c17 s1_v899986 pf1_v899987 ⇒
       fn {e1_v899988 : ans_v899981 ≡
                          (Word_c17‹› s1_v899986 pf1_v899987)} ⇒
         (match guess_v899982 as guess0_v899989 in
            {guess_v899982 ≡ guess0_v899989} →
              (subset_d7‹U, U, U›
                word_d9
                fn (df_v899991 : word_d9) ⇒
                  (wdiff_d10 ans_v899981 guess_v899982 df_v899991)) with
          | Word_c17 s2_v899992 pf2_v899993 ⇒
            fn {e2_v899994 : guess_v899982 ≡
                               (Word_c17‹› s2_v899992 pf2_v899993)} ⇒
              let {e_v899995} =
                (eq_trans_i44‹U›
                  nat (strlen_i20 s1_v899986) 5 (strlen_i20 s2_v899992)
                  pf1_v899987
                  (eq_sym_i43‹U›
                    nat (strlen_i20 s2_v899992) 5 pf2_v899993))
              in
              match (string_diff_i52
                      s1_v899986 s1_v899986 s2_v899992 e_v899995) as __v899996 in
                (subset_d7‹U, U, U›
                  word_d9
                  fn (df_v899997 : word_d9) ⇒
                    (wdiff_d10 ans_v899981 guess_v899982 df_v899997)) with
              | SPair_c12 s3_v899998 h_v899999 ⇒
                let {e_v900000} =
                  (diff_len_i53
                    s1_v899986 s1_v899986 s2_v899992 s3_v899998 h_v899999)
                in
                let {pf_v900001} =
                  (eq_trans_i44‹U›
                    nat (strlen_i20 s3_v899998) (strlen_i20 s1_v899986) 5
                    e_v900000 pf1_v899987)
                in
                (SPair_c12‹U, U, U›
                  (Word_c17‹› s3_v899998 pf_v900001)
                  (diff_Word_c18‹›
                    s1_v899986 s2_v899992 s3_v899998 pf1_v899987 pf2_v899993
                    pf_v900001 e1_v899988 e2_v899994
                    refl (Word_c17‹› s3_v899998 pf_v900001) h_v899999))
              end
          end refl guess_v899982)
     end refl ans_v899981)

program eqw_i55 : word_d9 → word_d9 → bool =
  fn (w1_v900004 : word_d9) (w2_v900005 : word_d9) ⇒
    match w1_v900004 as __v900006 in bool with
    | Word_c17 s1_v900007 __v900008 ⇒
      match w2_v900005 as __v900009 in bool with
      | Word_c17 s2_v900010 __v900011 ⇒ (eqs_i21 s1_v900007 s2_v900010)
      end
    end

logical wordle_loop_i56 : word_d9 → nat → proto =
  fn (ans_v900014 : word_d9) (repeat_v900015 : nat) ⇒
    match repeat_v900015 as __v900016 in proto with
    | O ⇒
      ⇑(w_v900017 : word_d9) ⇒
        ⇑{__v900018 : w_v900017 ≡ ans_v900014} ⇒ end
    | S repeat_v900019 ⇒
      ⇓(guess_v900020 : word_d9) ⇒
        ⇑(b_v900021 : bool) ⇒
          ⇑{__v900022 :
            b_v900021 ≡ (eqw_i55 ans_v900014 guess_v900020)} ⇒
            match b_v900021 as __v900023 in proto with
            | true ⇒ end
            | false ⇒
              ⇑(df_v900024 : word_d9) ⇒
                ⇑{__v900025 :
                  (wdiff_d10 ans_v900014 guess_v900020 df_v900024)} ⇒
                  (wordle_loop_i56 ans_v900014 repeat_v900019)
            end
    end

logical wordle_i57 : proto =
  ⇑{ans_v900026 : word_d9} ⇒
    ⇑(repeat_v900027 : nat) ⇒
      (wordle_loop_i56 ans_v900026 repeat_v900027)

logical loop_ch_i58 : word_d9 → nat → L =
  fn (ans_v900030 : word_d9) (repeat_v900031 : nat) ⇒
    ch⟨(wordle_loop_i56 ans_v900030 repeat_v900031)⟩

logical loop_hc_i59 : word_d9 → nat → L =
  fn (ans_v900034 : word_d9) (repeat_v900035 : nat) ⇒
    hc⟨(wordle_loop_i56 ans_v900034 repeat_v900035)⟩

logical wordle_ch_i60 : L = ch⟨wordle_i57⟩

logical wordle_hc_i61 : L = hc⟨wordle_i57⟩

program read_word_i62 : unit → IO word_d9 =
  fn (__v900037 : unit) ⇒
    let s_v900038 ⇐ (readline_i33 ()) in
    (match (eqn_i9 (strlen_i20 s_v900038) 5) as b0_v900039 in
       {(eqn_i9 (strlen_i20 s_v900038) 5) ≡ b0_v900039} → IO word_d9 with
     | true ⇒
       fn {e_v900041 : (eqn_i9 (strlen_i20 s_v900038) 5) ≡ true} ⇒
         return (Word_c17‹›
                  s_v900038
                  (eqn_reflect_i49 (strlen_i20 s_v900038) 5 e_v900041))
     | false ⇒
       fn {__v900042 : (eqn_i9 (strlen_i20 s_v900038) 5) ≡ false} ⇒
         let __v900043 ⇐
           (print_i34 "please input a word with length of 5\n")
         in (read_word_i62 ())
     end refl (eqn_i9 (strlen_i20 s_v900038) 5))

program player_loop_i63 :
  ∀ {ans_v900044 : word_d9} →
    ∀ (repeat_v900045 : nat) →
      (loop_hc_i59 ans_v900044 repeat_v900045) → IO unit
=
  fn {ans_v900047 : word_d9} (repeat_v900048 : nat)
     (c_v900049 : (loop_hc_i59 ans_v900047 repeat_v900048)) ⇒
    (match repeat_v900048 as repeat0_v900050 in
       (loop_hc_i59 ans_v900047 repeat0_v900050) → IO unit with
     | O ⇒
       fn (c_v900052 : (loop_hc_i59 ans_v900047 0)) ⇒
         let __v900053 ⇐ recv c_v900052 in
         match __v900053 as __v900054 in IO unit with
         | ⟨ans_v900055, c_v900056⟩ ⇒
           let __v900057 ⇐ recv c_v900056 in
           match __v900057 as __v900058 in IO unit with
           | ⟨{pf_v900059}, c_v900060⟩ ⇒
             match ans_v900055 as __v900061 in IO unit with
             | Word_c17 s_v900062 __v900063 ⇒
               let __v900064 ⇐
                 (print_i34
                   (cats_i19
                     (cats_i19 "You Lose! The answer is " s_v900062) ".\n"))
               in close c_v900060
             end
           end
         end
     | S repeat_v900065 ⇒
       fn (c_v900066 : (loop_hc_i59 ans_v900047 repeat_v900065.+1)) ⇒
         let guess_v900067 ⇐ (read_word_i62 ()) in
         let c_v900068 ⇐ (send c_v900066 guess_v900067) in
         let __v900069 ⇐ recv c_v900068 in
         match __v900069 as __v900070 in IO unit with
         | ⟨b_v900071, c_v900072⟩ ⇒
           let __v900073 ⇐ recv c_v900072 in
           match __v900073 as __v900074 in IO unit with
           | ⟨{pf_v900075}, c_v900076⟩ ⇒
             (match b_v900071 as b0_v900077 in
                hc⟨match b0_v900077 as __v900079 in proto with
                     | true ⇒ end
                     | false ⇒
                       ⇑(df_v900080 : word_d9) ⇒
                         ⇑{__v900081 :
                           (wdiff_d10 ans_v900047 guess_v900067 df_v900080)} ⇒
                           (wordle_loop_i56 ans_v900047 repeat_v900065)
                     end⟩ ⊸
                  IO unit with
              | true ⇒
                ln (c_v900082 : hc⟨end⟩) ⇒
                  let __v900083 ⇐ (print_i34 "You Win!\n") in
                  close c_v900082
              | false ⇒
                ln (c_v900084 : hc⟨⇑(df_v900085 : word_d9) ⇒
                                       ⇑{__v900086 :
                                         (wdiff_d10
                                           ans_v900047 guess_v900067
                                           df_v900085)} ⇒
                                         (wordle_loop_i56
                                           ans_v900047 repeat_v900065)⟩) ⇒
                  let __v900087 ⇐ recv c_v900084 in
                  match __v900087 as __v900088 in IO unit with
                  | ⟨diff_v900089, c_v900090⟩ ⇒
                    let __v900091 ⇐ recv c_v900090 in
                    match __v900091 as __v900092 in IO unit with
                    | ⟨{pf_v900093}, c_v900094⟩ ⇒
                      match diff_v900089 as __v900095 in IO unit with
                      | Word_c17 s_v900096 __v900097 ⇒
                        let __v900098 ⇐
                          (print_i34
                            (cats_i19
                              (cats_i19
                                (cats_i19
                                  (cats_i19 "Incorrect, hint: " s_v900096)
                                  ". You have ")
                                (string_of_nat_i39 repeat_v900065))
                              " more tries.\n"))
                        in
                        (player_loop_i63
                          ans_v900047 repeat_v900065 c_v900094)
                      end
                    end
                  end
              end c_v900076)
           end
         end
     end c_v900049)

program player_i64 : wordle_hc_i61 → IO unit =
  fn (c_v900100 : wordle_hc_i61) ⇒
    let __v900101 ⇐ recv c_v900100 in
    match __v900101 as __v900102 in IO unit with
    | ⟨{ans_v900103}, c_v900104⟩ ⇒
      let __v900105 ⇐ recv c_v900104 in
      match __v900105 as __v900106 in IO unit with
      | ⟨repeat_v900107, c_v900108⟩ ⇒
        let __v900109 ⇐ (print_i34 "Wordle Game\n") in
        let __v900110 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v900111 ⇐
          (print_i34
            (cats_i19
              (cats_i19 "You have " (string_of_nat_i39 repeat_v900107))
              " tries.\n"))
        in (player_loop_i63 ans_v900103 repeat_v900107 c_v900108)
      end
    end

inductive at_d11
  (A_v900112 : U) (x_v900113 : A_v900112) (n_v900114 : nat) (xs_v900115 : 
(list_d6‹U, U› A_v900112)) : U =
| at_O_c19 of
    (A_v900116 : U) (x_v900117 : A_v900116) (n_v900118 : nat)
    (xs_v900119 : (list_d6‹U, U› A_v900116))
    (xs0_v900120 : (list_d6‹U, U› A_v900116))
    (pf1_v900121 : n_v900118 ≡ 0)
    (pf2_v900122 : xs_v900119 ≡ (cons_c11‹U, U› x_v900117 xs0_v900120))
    : (at_d11 A_v900116 x_v900117 n_v900118 xs_v900119)
| at_S_c20 of
    (A_v900123 : U) (x_v900124 : A_v900123) (n_v900125 : nat)
    (xs_v900126 : (list_d6‹U, U› A_v900123)) (n0_v900127 : nat)
    (x0_v900128 : A_v900123) (xs0_v900129 : (list_d6‹U, U› A_v900123))
    (h_v900130 : (at_d11 A_v900123 x_v900124 n0_v900127 xs0_v900129))
    (pf1_v900131 : n_v900125 ≡ n0_v900127.+1)
    (pf2_v900132 : xs_v900126 ≡ (cons_c11‹U, U› x0_v900128 xs0_v900129))
    : (at_d11 A_v900123 x_v900124 n_v900125 xs_v900126)

logical ltn_inv_i65 :
  ∀ (m_v900133 : nat) →
    ∀ (n_v900134 : nat) →
      (ltn_i6 m_v900133.+1 n_v900134.+1) ≡ true →
        (ltn_i6 m_v900133 n_v900134) ≡ true
=
  fn (m_v900136 : nat) (n_v900137 : nat)
     (h_v900138 : (ltn_i6 m_v900136.+1 n_v900137.+1) ≡ true) ⇒
    h_v900138

program get_at_i66 :
  ∀ {A_v900139 : U} →
    ∀ (n_v900140 : nat) →
      ∀ (xs_v900141 : (list_d6‹U, U› A_v900139)) →
        {(ltn_i6 n_v900140 (llen_i24‹U, U› A_v900139 xs_v900141)) ≡
           true} →
          (subset_d7‹U, U, U›
            A_v900139
            fn (x_v900143 : A_v900139) ⇒
              (at_d11 A_v900139 x_v900143 n_v900140 xs_v900141))
=
  fn {A_v900144 : U} (n_v900145 : nat)
     (xs_v900146 : (list_d6‹U, U› A_v900144)) ⇒
    match xs_v900146 as xs0_v900147 in
      {(ltn_i6 n_v900145 (llen_i24‹U, U› A_v900144 xs0_v900147)) ≡ true} →
        (subset_d7‹U, U, U›
          A_v900144
          fn (x_v900149 : A_v900144) ⇒
            (at_d11 A_v900144 x_v900149 n_v900145 xs0_v900147)) with
    | nil_c10  ⇒
      fn {e_v900150 : (ltn_i6
                        n_v900145
                        (llen_i24‹U, U› A_v900144 nil_c10‹U, U›)) ≡
                        true} ⇒
        rew [b_v900151, __v900152 ⇒
          match b_v900151 as __v900153 in U with
          | true ⇒
            (subset_d7‹U, U, U›
              A_v900144
              fn (x_v900154 : A_v900144) ⇒
                (at_d11 A_v900144 x_v900154 n_v900145 nil_c10‹U, U›))
          | false ⇒ unit
          end] e_v900150 in
        ()
    | cons_c11 x_v900155 xs_v900156 ⇒
      match n_v900145 as n0_v900157 in
        {(ltn_i6 n0_v900157 (llen_i24‹U, U› A_v900144 xs_v900156).+1) ≡
           true} →
          (subset_d7‹U, U, U›
            A_v900144
            fn (x0_v900159 : A_v900144) ⇒
              (at_d11
                A_v900144 x0_v900159 n0_v900157
                (cons_c11‹U, U› x_v900155 xs_v900156))) with
      | O ⇒
        fn {e_v900160 : (ltn_i6
                          0 (llen_i24‹U, U› A_v900144 xs_v900156).+1) ≡
                          true} ⇒
          (SPair_c12‹U, U, U›
            x_v900155
            (at_O_c19‹›
              xs_v900156 refl 0
              refl (cons_c11‹U, U› x_v900155 xs_v900156)))
      | S n_v900161 ⇒
        fn {e_v900162 : (ltn_i6
                          n_v900161.+1
                          (llen_i24‹U, U› A_v900144 xs_v900156).+1) ≡
                          true} ⇒
          match (get_at_i66
                  A_v900144 n_v900161 xs_v900156
                  (ltn_inv_i65
                    n_v900161 (llen_i24‹U, U› A_v900144 xs_v900156)
                    e_v900162)) as __v900163 in
            (subset_d7‹U, U, U›
              A_v900144
              fn (x0_v900164 : A_v900144) ⇒
                (at_d11
                  A_v900144 x0_v900164 n_v900161.+1
                  (cons_c11‹U, U› x_v900155 xs_v900156))) with
          | SPair_c12 x0_v900165 pf_v900166 ⇒
            (SPair_c12‹U, U, U›
              x0_v900165
              (at_S_c20‹›
                n_v900161 x_v900155 xs_v900156 pf_v900166 refl n_v900161.+1
                refl (cons_c11‹U, U› x_v900155 xs_v900156)))
          end
      end
    end

program rand_word_i67 : unit → IO word_d9 =
  fn (__v900168 : unit) ⇒
    let words_v900169 =
      ((cons_c11‹U, U›
         (Word_c17‹› "route" refl (strlen_i20 "route"))
         (cons_c11‹U, U›
           (Word_c17‹› "crash" refl (strlen_i20 "crash"))
           (cons_c11‹U, U›
             (Word_c17‹› "clown" refl (strlen_i20 "clown"))
             (cons_c11‹U, U›
               (Word_c17‹› "shaky" refl (strlen_i20 "shaky"))
               (cons_c11‹U, U›
                 (Word_c17‹› "vegan" refl (strlen_i20 "vegan"))
                 (cons_c11‹U, U›
                   (Word_c17‹› "power" refl (strlen_i20 "power"))
                   (cons_c11‹U, U›
                     (Word_c17‹› "trust" refl (strlen_i20 "trust"))
                     (cons_c11‹U, U›
                       (Word_c17‹› "enjoy" refl (strlen_i20 "enjoy"))
                       (cons_c11‹U, U›
                         (Word_c17‹› "brain" refl (strlen_i20 "brain"))
                         (cons_c11‹U, U›
                           (Word_c17‹› "adopt" refl (strlen_i20 "adopt"))
                           (cons_c11‹U, U›
                             (Word_c17‹›
                               "tower" refl (strlen_i20 "tower"))
                             (cons_c11‹U, U›
                               (Word_c17‹›
                                 "shade" refl (strlen_i20 "shade"))
                               (cons_c11‹U, U›
                                 (Word_c17‹›
                                   "delay" refl (strlen_i20 "delay"))
                                 (cons_c11‹U, U›
                                   (Word_c17‹›
                                     "twist" refl (strlen_i20 "twist"))
                                   (cons_c11‹U, U›
                                     (Word_c17‹›
                                       "alert" refl (strlen_i20 "alert"))
                                     (cons_c11‹U, U›
                                       (Word_c17‹›
                                         "choke" refl (strlen_i20 "choke"))
                                       (cons_c11‹U, U›
                                         (Word_c17‹›
                                           "split" refl (strlen_i20 "split"))
                                         (cons_c11‹U, U›
                                           (Word_c17‹›
                                             "rhyme"
                                             refl (strlen_i20 "rhyme"))
                                           (cons_c11‹U, U›
                                             (Word_c17‹›
                                               "muddy"
                                               refl (strlen_i20 "muddy"))
                                             (cons_c11‹U, U›
                                               (Word_c17‹›
                                                 "plant"
                                                 refl (strlen_i20 "plant"))
                                               nil_c10‹U, U›))))))))))))))))))))
        : (list_d6‹U, U› word_d9))
    in
    let r_v900170 ⇐ rand 0 19 in
    match r_v900170 as __v900171 in IO (word_d9 : U) with
    | Between_c4 n_v900172 __v900173 pf_v900174 ⇒
      match (get_at_i66 word_d9 n_v900172 words_v900169 pf_v900174) as __v900175 in
        IO (word_d9 : U) with
      | SPair_c12 w_v900176 __v900177 ⇒ return w_v900176
      end
    end

program server_loop_i68 :
  ∀ (ans_v900178 : word_d9) →
    ∀ (repeat_v900179 : nat) →
      (loop_ch_i58 ans_v900178 repeat_v900179) → IO unit
=
  fn (ans_v900181 : word_d9) (repeat_v900182 : nat)
     (c_v900183 : (loop_ch_i58 ans_v900181 repeat_v900182)) ⇒
    (match repeat_v900182 as repeat0_v900184 in
       (loop_ch_i58 ans_v900181 repeat0_v900184) → IO unit with
     | O ⇒
       fn (c_v900186 : (loop_ch_i58 ans_v900181 0)) ⇒
         let c_v900187 ⇐ (send c_v900186 ans_v900181) in
         let c_v900188 ⇐ (send c_v900187 refl ans_v900181) in
         close c_v900188
     | S repeat_v900189 ⇒
       fn (c_v900190 : (loop_ch_i58 ans_v900181 repeat_v900189.+1)) ⇒
         let __v900191 ⇐ recv c_v900190 in
         match __v900191 as __v900192 in IO unit with
         | ⟨guess_v900193, c_v900194⟩ ⇒
           let b_v900195 = (eqw_i55 ans_v900181 guess_v900193) in
           let c_v900196 ⇐ (send c_v900194 b_v900195) in
           let c_v900197 ⇐
             (send c_v900196 refl (eqw_i55 ans_v900181 guess_v900193))
           in
           (match b_v900195 as b0_v900198 in
              ch⟨match b0_v900198 as __v900200 in proto with
                   | true ⇒ end
                   | false ⇒
                     ⇑(df_v900201 : word_d9) ⇒
                       ⇑{__v900202 :
                         (wdiff_d10 ans_v900181 guess_v900193 df_v900201)} ⇒
                         (wordle_loop_i56 ans_v900181 repeat_v900189)
                   end⟩ ⊸
                IO unit with
            | true ⇒ ln (c_v900203 : ch⟨end⟩) ⇒ close c_v900203
            | false ⇒
              ln (c_v900204 : ch⟨⇑(df_v900205 : word_d9) ⇒
                                     ⇑{__v900206 :
                                       (wdiff_d10
                                         ans_v900181 guess_v900193 df_v900205)} ⇒
                                       (wordle_loop_i56
                                         ans_v900181 repeat_v900189)⟩) ⇒
                match (word_diff_i54 ans_v900181 guess_v900193) as __v900207 in
                  IO unit with
                | SPair_c12 df_v900208 pf_v900209 ⇒
                  let c_v900210 ⇐ (send c_v900204 df_v900208) in
                  let c_v900211 ⇐ (send c_v900210 pf_v900209) in
                  (server_loop_i68 ans_v900181 repeat_v900189 c_v900211)
                end
            end c_v900197)
         end
     end c_v900183)

program server_i69 : wordle_ch_i60 → IO unit =
  fn (c_v900213 : wordle_ch_i60) ⇒
    let repeat_v900214 = 6 in
    let ans_v900215 ⇐ (rand_word_i67 ()) in
    let c_v900216 ⇐ (send c_v900213 ans_v900215) in
    let c_v900217 ⇐ (send c_v900216 repeat_v900214) in
    (server_loop_i68 ans_v900215 repeat_v900214 c_v900217)

program main_i70 : IO unit =
  let c_v900218 ⇐
    fork (c_v900219 : wordle_ch_i60) in (server_i69 c_v900219)
  in
  let c0_v900220 ⇐
    fork (c0_v900221 :
      ch⟨⇓(__v900222 : wordle_hc_i61) ⇒ ⇑(__v900223 : unit) ⇒ end⟩)
    in
      let __v900224 ⇐ recv c0_v900221 in
      match __v900224 as __v900225 in IO unit with
      | ⟨c_v900226, c0_v900227⟩ ⇒
        let __v900228 ⇐ (player_i64 c_v900226) in
        let c0_v900229 ⇐ (send c0_v900227 ()) in close c0_v900229
      end
  in
  let c0_v900230 ⇐ (send c0_v900220 c_v900218) in
  let __v900231 ⇐ recv c0_v900230 in
  match __v900231 as __v900232 in IO unit with
  | ⟨__v900233, c0_v900234⟩ ⇒ close c0_v900234
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v901675 b2_v901676 ⇒
    match b1_v901675 with
    | true ⇒ b2_v901676 | false ⇒ false
    end

def orb_i2 =
  fn b1_v901677 b2_v901678 ⇒
    match b1_v901677 with
    | true ⇒ true | false ⇒ b2_v901678
    end

def notb_i3 =
  fn b_v901679 ⇒ match b_v901679 with
                   | true ⇒ false | false ⇒ true
                   end

def compareb_i4 =
  fn b1_v901680 b2_v901681 ⇒
    match b1_v901680 with
    | true ⇒ match b2_v901681 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v901681 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v901682 y_v901683 ⇒
    match x_v901682 with
    | O ⇒ true
    | S x_v901684 ⇒
      match y_v901683 with
      | O ⇒ false | S y_v901685 ⇒ ((lten_i5 x_v901684) y_v901685)
      end
    end

def ltn_i6 = fn x_v901686 y_v901687 ⇒ ((lten_i5 x_v901686.+1) y_v901687)

def gten_i7 = fn x_v901688 y_v901689 ⇒ ((lten_i5 y_v901689) x_v901688)

def gtn_i8 = fn x_v901690 y_v901691 ⇒ ((ltn_i6 y_v901691) x_v901690)

def eqn_i9 =
  fn x_v901692 y_v901693 ⇒
    match x_v901692 with
    | O ⇒ match y_v901693 with
            | O ⇒ true | S __v901694 ⇒ false
            end
    | S x_v901695 ⇒
      match y_v901693 with
      | O ⇒ false | S y_v901696 ⇒ ((eqn_i9 x_v901695) y_v901696)
      end
    end

def comparen_i10 =
  fn n1_v901697 n2_v901698 ⇒
    match n1_v901697 with
    | O ⇒ match n2_v901698 with
            | O ⇒ EQ_c3 | S __v901699 ⇒ LT_c1
            end
    | S n1_v901700 ⇒
      match n2_v901698 with
      | O ⇒ GT_c2 | S n2_v901701 ⇒ ((comparen_i10 n1_v901700) n2_v901701)
      end
    end

def pred_i11 =
  fn x_v901702 ⇒
    match x_v901702 with
    | O ⇒ 0 | S x_v901703 ⇒ x_v901703
    end

def addn_i12 =
  fn x_v901704 y_v901705 ⇒
    match x_v901704 with
    | O ⇒ y_v901705 | S x_v901706 ⇒ ((addn_i12 x_v901706) y_v901705).+1
    end

def subn_i13 =
  fn x_v901707 y_v901708 ⇒
    match y_v901708 with
    | O ⇒ x_v901707
    | S y_v901709 ⇒ ((subn_i13 (pred_i11 x_v901707)) y_v901709)
    end

def muln_i14 =
  fn x_v901710 y_v901711 ⇒
    match x_v901710 with
    | O ⇒ 0
    | S x_v901712 ⇒ ((addn_i12 y_v901711) ((muln_i14 x_v901712) y_v901711))
    end

def divn_i15 =
  fn x_v901713 y_v901714 ⇒
    match ((ltn_i6 x_v901713) y_v901714) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v901713) y_v901714)) y_v901714).+1
    end

def modn_i16 =
  fn x_v901715 y_v901716 ⇒
    ((subn_i13 x_v901715)
      ((muln_i14 ((divn_i15 x_v901715) y_v901716)) y_v901716))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v901717 c2_v901718 ⇒
    match c1_v901717 with
    | Char_c5 n1_v901719 ⇒
      match c2_v901718 with
      | Char_c5 n2_v901720 ⇒ ((eqn_i9 n1_v901719) n2_v901720)
      end
    end

def comparec_i18 =
  fn c1_v901721 c2_v901722 ⇒
    match c1_v901721 with
    | Char_c5 n1_v901723 ⇒
      match c2_v901722 with
      | Char_c5 n2_v901724 ⇒ ((comparen_i10 n1_v901723) n2_v901724)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v901725 s2_v901726 ⇒
    match s1_v901725 with
    | EmptyString_c6  ⇒ s2_v901726
    | String_c7 c_v901727 s1_v901728 ⇒
      (String_c7 c_v901727 ((cats_i19 s1_v901728) s2_v901726))
    end

def strlen_i20 =
  fn s_v901729 ⇒
    match s_v901729 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v901730 s_v901731 ⇒ (strlen_i20 s_v901731).+1
    end

def eqs_i21 =
  fn s1_v901732 s2_v901733 ⇒
    match s1_v901732 with
    | EmptyString_c6  ⇒
      match s2_v901733 with
      | EmptyString_c6  ⇒ true | String_c7 __v901734 __v901735 ⇒ false
      end
    | String_c7 c1_v901736 s1_v901737 ⇒
      match s2_v901733 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v901738 s2_v901739 ⇒
        ((andb_i1 ((eqc_i17 c1_v901736) c2_v901738))
          ((eqs_i21 s1_v901737) s2_v901739))
      end
    end

def compares_i22 =
  fn s1_v901740 s2_v901741 ⇒
    match s1_v901740 with
    | EmptyString_c6  ⇒
      match s2_v901741 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v901742 __v901743 ⇒ LT_c1
      end
    | String_c7 c1_v901744 s1_v901745 ⇒
      match s2_v901741 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v901746 s2_v901747 ⇒
        match ((comparec_i18 c1_v901744) c2_v901746) with
        | EQ_c3  ⇒ ((compares_i22 s1_v901745) s2_v901747)
        | LT_c1  ⇒ LT_c1 | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d15 =
| NoneUU_c27 of size(0) | SomeUU_c28 of size(1)

data optionUL_d14 =
| NoneUL_c25 of size(0) | SomeUL_c26 of size(1)

data optionLU_d13 =
| NoneLU_c23 of size(0)

data optionLL_d12 =
| NoneLL_c21 of size(0) | SomeLL_c22 of size(1)

def and_thenUUU_i78 =
  fn A_v901748 B_v901749 opt_v901750 ⇒
    ln f_v901751 ⇒
      match opt_v901750 with
      | NoneUU_c27  ⇒ NoneUU_c27
      | SomeUU_c28 x_v901752 ⇒ (f_v901751 x_v901752)
      end

def and_thenUUL_i77 =
  fn A_v901753 B_v901754 opt_v901755 ⇒
    ln f_v901756 ⇒
      match opt_v901755 with
      | NoneUL_c25  ⇒ NoneUL_c25
      | SomeUL_c26 x_v901757 ⇒ (f_v901756 x_v901757)
      end

def and_thenULU_i76 =
  fn A_v901758 B_v901759 opt_v901760 ⇒
    ln f_v901761 ⇒
      match opt_v901760 with
      | NoneUU_c27  ⇒ NoneLU_c23
      | SomeUU_c28 x_v901762 ⇒ (f_v901761 x_v901762)
      end

def and_thenULL_i75 =
  fn A_v901763 B_v901764 opt_v901765 ⇒
    ln f_v901766 ⇒
      match opt_v901765 with
      | NoneUL_c25  ⇒ NoneLL_c21
      | SomeUL_c26 x_v901767 ⇒ (f_v901766 x_v901767)
      end

def and_thenLUL_i73 =
  fn A_v901768 B_v901769 opt_v901770 ⇒
    ln f_v901771 ⇒
      match opt_v901770 with
      | NoneLL_c21  ⇒ NoneUL_c25
      | SomeLL_c22 x_v901772 ⇒ (f_v901771 x_v901772)
      end

def and_thenLLL_i71 =
  fn A_v901773 B_v901774 opt_v901775 ⇒
    ln f_v901776 ⇒
      match opt_v901775 with
      | NoneLL_c21  ⇒ NoneLL_c21
      | SomeLL_c22 x_v901777 ⇒ (f_v901776 x_v901777)
      end

data listUU_d19 =
| nilUU_c35 of size(0) | consUU_c36 of size(2)

data listUL_d18 =
| nilUL_c33 of size(0) | consUL_c34 of size(2)

data listLU_d17 =
| nilLU_c31 of size(0)

data listLL_d16 =
| nilLL_c29 of size(0) | consLL_c30 of size(2)

def lenUU_i86 =
  fn A_v901778 xs_v901779 ⇒
    match xs_v901779 with
    | nilUU_c35  ⇒ (0, nilUU_c35)
    | consUU_c36 x_v901780 xs_v901781 ⇒
      match ((lenUU_i86 NULL) xs_v901781) with
      | (n_v901782, xs_v901783) ⇒
        (n_v901782.+1, (consUU_c36 x_v901780 xs_v901783))
      end
    end

def lenUL_i85 =
  fn A_v901784 xs_v901785 ⇒
    match xs_v901785 with
    | nilUL_c33  ⇒ (0, nilUL_c33)
    | consUL_c34 x_v901786 xs_v901787 ⇒
      match ((lenUL_i85 NULL) xs_v901787) with
      | (n_v901788, xs_v901789) ⇒
        (n_v901788.+1, (consUL_c34 x_v901786 xs_v901789))
      end
    end

def lenLL_i83 =
  fn A_v901790 xs_v901791 ⇒
    match xs_v901791 with
    | nilLL_c29  ⇒ (0, nilLL_c29)
    | consLL_c30 x_v901792 xs_v901793 ⇒
      match ((lenLL_i83 NULL) xs_v901793) with
      | (n_v901794, xs_v901795) ⇒
        (n_v901794.+1, (consLL_c30 x_v901792 xs_v901795))
      end
    end

def appendUU_i90 =
  fn A_v901796 xs_v901797 ⇒
    ln ys_v901798 ⇒
      match xs_v901797 with
      | nilUU_c35  ⇒ ys_v901798
      | consUU_c36 x_v901799 xs_v901800 ⇒
        (consUU_c36 x_v901799 (((appendUU_i90 NULL) xs_v901800) ys_v901798))
      end

def appendUL_i89 =
  fn A_v901801 xs_v901802 ⇒
    ln ys_v901803 ⇒
      match xs_v901802 with
      | nilUL_c33  ⇒ ys_v901803
      | consUL_c34 x_v901804 xs_v901805 ⇒
        (consUL_c34 x_v901804 (((appendUL_i89 NULL) xs_v901805) ys_v901803))
      end

def appendLL_i87 =
  fn A_v901806 xs_v901807 ⇒
    ln ys_v901808 ⇒
      match xs_v901807 with
      | nilLL_c29  ⇒ ys_v901808
      | consLL_c30 x_v901809 xs_v901810 ⇒
        (consLL_c30 x_v901809 (((appendLL_i87 NULL) xs_v901810) ys_v901808))
      end

def readline_i33 =
  fn __v901811 ⇒
    let ch_v901812 ⇐ open stdin in
    let ch_v901813 ⇐ (send ch_v901812 true) in
    let __v901814 ⇐ recv ch_v901813 in
    match __v901814 with
    | (s_v901815, ch_v901816) ⇒
      let ch_v901817 ⇐ (send ch_v901816 false) in
      let __v901818 ⇐ close⇑ ch_v901817 in return s_v901815
    end

def print_i34 =
  fn s_v901819 ⇒
    let ch_v901820 ⇐ open stdout in
    let ch_v901821 ⇐ (send ch_v901820 true) in
    let ch_v901822 ⇐ (send ch_v901821 s_v901819) in
    let ch_v901823 ⇐ (send ch_v901822 false) in close⇑ ch_v901823

def prerr_i35 =
  fn s_v901824 ⇒
    let ch_v901825 ⇐ open stderr in
    let ch_v901826 ⇐ (send ch_v901825 true) in
    let ch_v901827 ⇐ (send ch_v901826 s_v901824) in
    let ch_v901828 ⇐ (send ch_v901827 false) in close⇑ ch_v901828

def digits_i36 =
  (consUU_c36
    "0"
    (consUU_c36
      "1"
      (consUU_c36
        "2"
        (consUU_c36
          "3"
          (consUU_c36
            "4"
            (consUU_c36
              "5"
              (consUU_c36
                "6"
                (consUU_c36 "7" (consUU_c36 "8" (consUU_c36 "9" nilUU_c35))))))))))

def get_at_i37 =
  fn A_v901829 n_v901830 xs_v901831 a_v901832 ⇒
    match n_v901830 with
    | O ⇒
      match xs_v901831 with
      | nilUU_c35  ⇒ a_v901832
      | consUU_c36 x_v901833 __v901834 ⇒ x_v901833
      end
    | S n_v901835 ⇒
      match xs_v901831 with
      | nilUU_c35  ⇒ a_v901832
      | consUU_c36 __v901836 xs_v901837 ⇒
        ((((get_at_i37 NULL) n_v901835) xs_v901837) a_v901832)
      end
    end

def string_of_digit_i38 =
  fn n_v901838 ⇒
    ((((get_at_i37 NULL) n_v901838) digits_i36) EmptyString_c6)

def string_of_nat_i39 =
  fn n_v901839 ⇒
    let s_v901840 = (string_of_digit_i38 ((modn_i16 n_v901839) 10)) in
    let n_v901841 = ((divn_i15 n_v901839) 10) in
    match ((ltn_i6 0) n_v901841) with
    | true ⇒ ((cats_i19 (string_of_nat_i39 n_v901841)) s_v901840)
    | false ⇒ s_v901840
    end

def digit_of_char_i40 =
  fn c_v901842 ⇒
    match ((eqc_i17 c_v901842) '0') with
    | true ⇒ (SomeUL_c26 0)
    | false ⇒
      match ((eqc_i17 c_v901842) '1') with
      | true ⇒ (SomeUL_c26 1)
      | false ⇒
        match ((eqc_i17 c_v901842) '2') with
        | true ⇒ (SomeUL_c26 2)
        | false ⇒
          match ((eqc_i17 c_v901842) '3') with
          | true ⇒ (SomeUL_c26 3)
          | false ⇒
            match ((eqc_i17 c_v901842) '4') with
            | true ⇒ (SomeUL_c26 4)
            | false ⇒
              match ((eqc_i17 c_v901842) '5') with
              | true ⇒ (SomeUL_c26 5)
              | false ⇒
                match ((eqc_i17 c_v901842) '6') with
                | true ⇒ (SomeUL_c26 6)
                | false ⇒
                  match ((eqc_i17 c_v901842) '7') with
                  | true ⇒ (SomeUL_c26 7)
                  | false ⇒
                    match ((eqc_i17 c_v901842) '8') with
                    | true ⇒ (SomeUL_c26 8)
                    | false ⇒
                      match ((eqc_i17 c_v901842) '9') with
                      | true ⇒ (SomeUL_c26 9) | false ⇒ NoneUL_c25
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i41 =
  fn s_v901843 acc_v901844 ⇒
    match s_v901843 with
    | EmptyString_c6  ⇒ (SomeUL_c26 acc_v901844)
    | String_c7 c_v901845 s_v901846 ⇒
      match (digit_of_char_i40 c_v901845) with
      | NoneUL_c25  ⇒ NoneUL_c25
      | SomeUL_c26 n_v901847 ⇒
        ((nat_of_string_loop_i41 s_v901846)
          ((addn_i12 ((muln_i14 acc_v901844) 10)) n_v901847))
      end
    end

def nat_of_string_i42 =
  fn s_v901848 ⇒ ((nat_of_string_loop_i41 s_v901848) 0)

def contains_i51 =
  fn c_v901849 s_v901850 ⇒
    match s_v901850 with
    | EmptyString_c6  ⇒ false
    | String_c7 c0_v901851 s_v901852 ⇒
      match ((eqc_i17 c_v901849) c0_v901851) with
      | true ⇒ true | false ⇒ ((contains_i51 c_v901849) s_v901852)
      end
    end

data subsetUUU_d27 =
| SPairUUU_c44 of size(2)

data subsetUUL_d26 =
| SPairUUL_c43 of size(2)

data subsetULU_d25 =
| SPairULU_c42 of size(2)

data subsetULL_d24 =
| SPairULL_c41 of size(2)

data subsetLUL_d22 =
| SPairLUL_c39 of size(2)

data subsetLLL_d20 =
| SPairLLL_c37 of size(2)

data diff_d8 =
| diff_EmptyString_c13 of size(3) | diff_StringY_c14 of size(8)
| diff_StringI_c15 of size(11) | diff_StringN_c16 of size(11)

def string_diff_i52 =
  fn ans_v901853 s1_v901854 s2_v901855 ⇒
    match s1_v901854 with
    | EmptyString_c6  ⇒
      match s2_v901855 with
      | EmptyString_c6  ⇒
        fn e_v901856 ⇒ (SPairUUU_c44 EmptyString_c6 NULL)
      | String_c7 c2_v901857 s2_v901858 ⇒ fn e_v901859 ⇒ ()
      end
    | String_c7 c1_v901860 s1_v901861 ⇒
      match s2_v901855 with
      | EmptyString_c6  ⇒ fn e_v901862 ⇒ ()
      | String_c7 c2_v901863 s2_v901864 ⇒
        fn e_v901865 ⇒
          let e_v901866 = NULL in
          match ((((string_diff_i52 ans_v901853) s1_v901861) s2_v901864)
                  NULL) with
          | SPairUUU_c44 df_v901867 pf_v901868 ⇒
            (match ((eqc_i17 c1_v901860) c2_v901863) with
             | true ⇒
               fn e1_v901869 ⇒
                 let e1_v901870 = NULL in
                 let h_v901871 = NULL in
                 (SPairUUU_c44 ((cats_i19 "Y") df_v901867) NULL)
             | false ⇒
               fn e1_v901872 ⇒
                 (match ((contains_i51 c2_v901863) ans_v901853) with
                  | true ⇒
                    fn e2_v901873 ⇒
                      (SPairUUU_c44 ((cats_i19 "I") df_v901867) NULL)
                  | false ⇒
                    fn e2_v901874 ⇒
                      (SPairUUU_c44 ((cats_i19 "N") df_v901867) NULL)
                  end NULL)
             end NULL)
          end
      end
    end

data word_d9 =
| Word_c17 of size(2)

data wdiff_d10 =
| diff_Word_c18 of size(10)

def word_diff_i54 =
  fn ans_v901875 guess_v901876 ⇒
    (match ans_v901875 with
     | Word_c17 s1_v901877 pf1_v901878 ⇒
       fn e1_v901879 ⇒
         (match guess_v901876 with
          | Word_c17 s2_v901880 pf2_v901881 ⇒
            fn e2_v901882 ⇒
              let e_v901883 = NULL in
              match ((((string_diff_i52 s1_v901877) s1_v901877) s2_v901880)
                      NULL) with
              | SPairUUU_c44 s3_v901884 h_v901885 ⇒
                let e_v901886 = NULL in
                let pf_v901887 = NULL in
                (SPairUUU_c44 (Word_c17 s3_v901884 NULL) NULL)
              end
          end NULL)
     end NULL)

def eqw_i55 =
  fn w1_v901888 w2_v901889 ⇒
    match w1_v901888 with
    | Word_c17 s1_v901890 __v901891 ⇒
      match w2_v901889 with
      | Word_c17 s2_v901892 __v901893 ⇒ ((eqs_i21 s1_v901890) s2_v901892)
      end
    end

def read_word_i62 =
  fn __v901894 ⇒
    let s_v901895 ⇐ (readline_i33 ()) in
    (match ((eqn_i9 (strlen_i20 s_v901895)) 5) with
     | true ⇒ fn e_v901896 ⇒ return (Word_c17 s_v901895 NULL)
     | false ⇒
       fn __v901897 ⇒
         let __v901898 ⇐
           (print_i34 "please input a word with length of 5\n")
         in (read_word_i62 ())
     end NULL)

def player_loop_i63 =
  fn ans_v901899 repeat_v901900 c_v901901 ⇒
    (match repeat_v901900 with
     | O ⇒
       fn c_v901902 ⇒
         let __v901903 ⇐ recv c_v901902 in
         match __v901903 with
         | (ans_v901904, c_v901905) ⇒
           let __v901906 ⇐ {recv} c_v901905 in
           match __v901906 with
           | (pf_v901907, c_v901908) ⇒
             match ans_v901904 with
             | Word_c17 s_v901909 __v901910 ⇒
               let __v901911 ⇐
                 (print_i34
                   ((cats_i19
                      ((cats_i19 "You Lose! The answer is ") s_v901909))
                     ".\n"))
               in close⇓ c_v901908
             end
           end
         end
     | S repeat_v901912 ⇒
       fn c_v901913 ⇒
         let guess_v901914 ⇐ (read_word_i62 ()) in
         let c_v901915 ⇐ (send c_v901913 guess_v901914) in
         let __v901916 ⇐ recv c_v901915 in
         match __v901916 with
         | (b_v901917, c_v901918) ⇒
           let __v901919 ⇐ {recv} c_v901918 in
           match __v901919 with
           | (pf_v901920, c_v901921) ⇒
             (match b_v901917 with
              | true ⇒
                ln c_v901922 ⇒
                  let __v901923 ⇐ (print_i34 "You Win!\n") in
                  close⇓ c_v901922
              | false ⇒
                ln c_v901924 ⇒
                  let __v901925 ⇐ recv c_v901924 in
                  match __v901925 with
                  | (diff_v901926, c_v901927) ⇒
                    let __v901928 ⇐ {recv} c_v901927 in
                    match __v901928 with
                    | (pf_v901929, c_v901930) ⇒
                      match diff_v901926 with
                      | Word_c17 s_v901931 __v901932 ⇒
                        let __v901933 ⇐
                          (print_i34
                            ((cats_i19
                               ((cats_i19
                                  ((cats_i19
                                     ((cats_i19 "Incorrect, hint: ")
                                       s_v901931))
                                    ". You have "))
                                 (string_of_nat_i39 repeat_v901912)))
                              " more tries.\n"))
                        in
                        (((player_loop_i63 NULL) repeat_v901912) c_v901930)
                      end
                    end
                  end
              end c_v901921)
           end
         end
     end c_v901901)

def player_i64 =
  fn c_v901934 ⇒
    let __v901935 ⇐ {recv} c_v901934 in
    match __v901935 with
    | (ans_v901936, c_v901937) ⇒
      let __v901938 ⇐ recv c_v901937 in
      match __v901938 with
      | (repeat_v901939, c_v901940) ⇒
        let __v901941 ⇐ (print_i34 "Wordle Game\n") in
        let __v901942 ⇐ (print_i34 "Please guess a word of length 5.\n") in
        let __v901943 ⇐
          (print_i34
            ((cats_i19
               ((cats_i19 "You have ") (string_of_nat_i39 repeat_v901939)))
              " tries.\n"))
        in (((player_loop_i63 NULL) repeat_v901939) c_v901940)
      end
    end

data at_d11 =
| at_O_c19 of size(3) | at_S_c20 of size(6)

def get_at_i66 =
  fn A_v901944 n_v901945 xs_v901946 ⇒
    match xs_v901946 with
    | nilUU_c35  ⇒ fn e_v901947 ⇒ ()
    | consUU_c36 x_v901948 xs_v901949 ⇒
      match n_v901945 with
      | O ⇒ fn e_v901950 ⇒ (SPairUUU_c44 x_v901948 NULL)
      | S n_v901951 ⇒
        fn e_v901952 ⇒
          match ((((get_at_i66 NULL) n_v901951) xs_v901949) NULL) with
          | SPairUUU_c44 x0_v901953 pf_v901954 ⇒
            (SPairUUU_c44 x0_v901953 NULL)
          end
      end
    end

def rand_word_i67 =
  fn __v901955 ⇒
    let words_v901956 =
      (consUU_c36
        (Word_c17 "route" NULL)
        (consUU_c36
          (Word_c17 "crash" NULL)
          (consUU_c36
            (Word_c17 "clown" NULL)
            (consUU_c36
              (Word_c17 "shaky" NULL)
              (consUU_c36
                (Word_c17 "vegan" NULL)
                (consUU_c36
                  (Word_c17 "power" NULL)
                  (consUU_c36
                    (Word_c17 "trust" NULL)
                    (consUU_c36
                      (Word_c17 "enjoy" NULL)
                      (consUU_c36
                        (Word_c17 "brain" NULL)
                        (consUU_c36
                          (Word_c17 "adopt" NULL)
                          (consUU_c36
                            (Word_c17 "tower" NULL)
                            (consUU_c36
                              (Word_c17 "shade" NULL)
                              (consUU_c36
                                (Word_c17 "delay" NULL)
                                (consUU_c36
                                  (Word_c17 "twist" NULL)
                                  (consUU_c36
                                    (Word_c17 "alert" NULL)
                                    (consUU_c36
                                      (Word_c17 "choke" NULL)
                                      (consUU_c36
                                        (Word_c17 "split" NULL)
                                        (consUU_c36
                                          (Word_c17 "rhyme" NULL)
                                          (consUU_c36
                                            (Word_c17 "muddy" NULL)
                                            (consUU_c36
                                              (Word_c17 "plant" NULL)
                                              nilUU_c35))))))))))))))))))))
    in
    let r_v901957 ⇐ rand 0 19 in
    match r_v901957 with
    | Between_c4 n_v901958 __v901959 pf_v901960 ⇒
      match ((((get_at_i66 NULL) n_v901958) words_v901956) NULL) with
      | SPairUUU_c44 w_v901961 __v901962 ⇒ return w_v901961
      end
    end

def server_loop_i68 =
  fn ans_v901963 repeat_v901964 c_v901965 ⇒
    (match repeat_v901964 with
     | O ⇒
       fn c_v901966 ⇒
         let c_v901967 ⇐ (send c_v901966 ans_v901963) in
         let c_v901968 ⇐ ({send} c_v901967 NULL) in close⇑ c_v901968
     | S repeat_v901969 ⇒
       fn c_v901970 ⇒
         let __v901971 ⇐ recv c_v901970 in
         match __v901971 with
         | (guess_v901972, c_v901973) ⇒
           let b_v901974 = ((eqw_i55 ans_v901963) guess_v901972) in
           let c_v901975 ⇐ (send c_v901973 b_v901974) in
           let c_v901976 ⇐ ({send} c_v901975 NULL) in
           (match b_v901974 with
            | true ⇒ ln c_v901977 ⇒ close⇑ c_v901977
            | false ⇒
              ln c_v901978 ⇒
                match ((word_diff_i54 ans_v901963) guess_v901972) with
                | SPairUUU_c44 df_v901979 pf_v901980 ⇒
                  let c_v901981 ⇐ (send c_v901978 df_v901979) in
                  let c_v901982 ⇐ ({send} c_v901981 NULL) in
                  (((server_loop_i68 ans_v901963) repeat_v901969) c_v901982)
                end
            end c_v901976)
         end
     end c_v901965)

def server_i69 =
  fn c_v901983 ⇒
    let repeat_v901984 = 6 in
    let ans_v901985 ⇐ (rand_word_i67 ()) in
    let c_v901986 ⇐ ({send} c_v901983 NULL) in
    let c_v901987 ⇐ (send c_v901986 repeat_v901984) in
    (((server_loop_i68 ans_v901985) repeat_v901984) c_v901987)

main =
  let c_v901988 ⇐ fork c_v901989 in (server_i69 c_v901989) in
  let c0_v901990 ⇐
    fork c0_v901991 in
      let __v901992 ⇐ recv c0_v901991 in
      match __v901992 with
      | (c_v901993, c0_v901994) ⇒
        let __v901995 ⇐ (player_i64 c_v901993) in
        let c0_v901996 ⇐ (send c0_v901994 ()) in close⇑ c0_v901996
      end
  in
  let c0_v901997 ⇐ (send c0_v901990 c_v901988) in
  let __v901998 ⇐ recv c0_v901997 in
  match __v901998 with
  | (__v901999, c0_v902000) ⇒ close⇓ c0_v902000
  end

trans12 success--------------------------

fun andb_i1(b1_v902438, b2_v902439) = if b1_v902438 then
                                        b2_v902439
                                      else
                                        0

val andbclo_i99 =
  fn b1_v902440 b2_v902441 ⇒ andb_i1(b1_v902440, b2_v902441)

fun orb_i2(b1_v902442, b2_v902443) = if b1_v902442 then
                                       1
                                     else
                                       b2_v902443

val orbclo_i100 = fn b1_v902444 b2_v902445 ⇒ orb_i2(b1_v902444, b2_v902445)

fun notb_i3(b_v902446) = if b_v902446 then
                           0
                         else
                           1

val notbclo_i101 = fn b_v902447 ⇒ notb_i3(b_v902447)

fun compareb_i4(b1_v902448, b2_v902449) =
  if b1_v902448 then
    if b2_v902449 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v902449 then
      LT_c1
    else
      EQ_c3

val comparebclo_i102 =
  fn b1_v902450 b2_v902451 ⇒ compareb_i4(b1_v902450, b2_v902451)

fun lten_i5(x_v902452, y_v902453) =
  let __v902454 = x_v902452 in
  if __v902454 then
    let x_v902455 = __v902454.-1 in
    let __v902456 = y_v902453 in
    if __v902456 then
      let y_v902457 = __v902456.-1 in lten_i5(x_v902455, y_v902457)
    else
      0
  else
    1

val ltenclo_i103 = fn x_v902458 y_v902459 ⇒ lten_i5(x_v902458, y_v902459)

fun ltn_i6(x_v902460, y_v902461) = lten_i5(x_v902460.+1, y_v902461)

val ltnclo_i104 = fn x_v902462 y_v902463 ⇒ ltn_i6(x_v902462, y_v902463)

fun gten_i7(x_v902464, y_v902465) = lten_i5(y_v902465, x_v902464)

val gtenclo_i105 = fn x_v902466 y_v902467 ⇒ gten_i7(x_v902466, y_v902467)

fun gtn_i8(x_v902468, y_v902469) = ltn_i6(y_v902469, x_v902468)

val gtnclo_i106 = fn x_v902470 y_v902471 ⇒ gtn_i8(x_v902470, y_v902471)

fun eqn_i9(x_v902472, y_v902473) =
  let __v902474 = x_v902472 in
  if __v902474 then
    let x_v902475 = __v902474.-1 in
    let __v902476 = y_v902473 in
    if __v902476 then
      let y_v902477 = __v902476.-1 in eqn_i9(x_v902475, y_v902477)
    else
      0
  else
    let __v902478 = y_v902473 in
    if __v902478 then
      let __v902479 = __v902478.-1 in 0
    else
      1

val eqnclo_i107 = fn x_v902480 y_v902481 ⇒ eqn_i9(x_v902480, y_v902481)

fun comparen_i10(n1_v902482, n2_v902483) =
  let __v902484 = n1_v902482 in
  if __v902484 then
    let n1_v902485 = __v902484.-1 in
    let __v902486 = n2_v902483 in
    if __v902486 then
      let n2_v902487 = __v902486.-1 in comparen_i10(n1_v902485, n2_v902487)
    else
      GT_c2
  else
    let __v902488 = n2_v902483 in
    if __v902488 then
      let __v902489 = __v902488.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i108 =
  fn n1_v902490 n2_v902491 ⇒ comparen_i10(n1_v902490, n2_v902491)

fun pred_i11(x_v902492) =
  let __v902493 = x_v902492 in
  if __v902493 then
    let x_v902494 = __v902493.-1 in x_v902494
  else
    0

val predclo_i109 = fn x_v902495 ⇒ pred_i11(x_v902495)

fun addn_i12(x_v902496, y_v902497) =
  let __v902498 = x_v902496 in
  if __v902498 then
    let x_v902499 = __v902498.-1 in addn_i12(x_v902499, y_v902497).+1
  else
    y_v902497

val addnclo_i110 = fn x_v902500 y_v902501 ⇒ addn_i12(x_v902500, y_v902501)

fun subn_i13(x_v902502, y_v902503) =
  let __v902504 = y_v902503 in
  if __v902504 then
    let y_v902505 = __v902504.-1 in subn_i13(pred_i11(x_v902502), y_v902505)
  else
    x_v902502

val subnclo_i111 = fn x_v902506 y_v902507 ⇒ subn_i13(x_v902506, y_v902507)

fun muln_i14(x_v902508, y_v902509) =
  let __v902510 = x_v902508 in
  if __v902510 then
    let x_v902511 = __v902510.-1 in
    addn_i12(y_v902509, muln_i14(x_v902511, y_v902509))
  else
    0

val mulnclo_i112 = fn x_v902512 y_v902513 ⇒ muln_i14(x_v902512, y_v902513)

fun divn_i15(x_v902514, y_v902515) =
  if ltn_i6(x_v902514, y_v902515) then
    0
  else
    divn_i15(subn_i13(x_v902514, y_v902515), y_v902515).+1

val divnclo_i113 = fn x_v902516 y_v902517 ⇒ divn_i15(x_v902516, y_v902517)

fun modn_i16(x_v902518, y_v902519) =
  subn_i13(x_v902518, muln_i14(divn_i15(x_v902518, y_v902519), y_v902519))

val modnclo_i114 = fn x_v902520 y_v902521 ⇒ modn_i16(x_v902520, y_v902521)

fun eqc_i17(c1_v902522, c2_v902523) =
  match c1_v902522 with
  | Char_c5 n1_v902524 ⇒
    match c2_v902523 with
    | Char_c5 n2_v902525 ⇒ eqn_i9(n1_v902524, n2_v902525)
    end
  end

val eqcclo_i115 =
  fn c1_v902526 c2_v902527 ⇒ eqc_i17(c1_v902526, c2_v902527)

fun comparec_i18(c1_v902528, c2_v902529) =
  match c1_v902528 with
  | Char_c5 n1_v902530 ⇒
    match c2_v902529 with
    | Char_c5 n2_v902531 ⇒ comparen_i10(n1_v902530, n2_v902531)
    end
  end

val comparecclo_i116 =
  fn c1_v902532 c2_v902533 ⇒ comparec_i18(c1_v902532, c2_v902533)

fun cats_i19(s1_v902534, s2_v902535) =
  match s1_v902534 with
  | EmptyString_c6  ⇒ s2_v902535
  | String_c7 c_v902536 s1_v902537 ⇒
    (String_c7 c_v902536 cats_i19(s1_v902537, s2_v902535))
  end

val catsclo_i117 =
  fn s1_v902538 s2_v902539 ⇒ cats_i19(s1_v902538, s2_v902539)

fun strlen_i20(s_v902540) =
  match s_v902540 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v902541 s_v902542 ⇒ strlen_i20(s_v902542).+1
  end

val strlenclo_i118 = fn s_v902543 ⇒ strlen_i20(s_v902543)

fun eqs_i21(s1_v902544, s2_v902545) =
  match s1_v902544 with
  | EmptyString_c6  ⇒
    match s2_v902545 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v902546 __v902547 ⇒ 0
    end
  | String_c7 c1_v902548 s1_v902549 ⇒
    match s2_v902545 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v902550 s2_v902551 ⇒
      andb_i1(eqc_i17(c1_v902548, c2_v902550),
              eqs_i21(s1_v902549, s2_v902551))
    end
  end

val eqsclo_i119 =
  fn s1_v902552 s2_v902553 ⇒ eqs_i21(s1_v902552, s2_v902553)

fun compares_i22(s1_v902554, s2_v902555) =
  match s1_v902554 with
  | EmptyString_c6  ⇒
    match s2_v902555 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v902556 __v902557 ⇒ LT_c1
    end
  | String_c7 c1_v902558 s1_v902559 ⇒
    match s2_v902555 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v902560 s2_v902561 ⇒
      match comparec_i18(c1_v902558, c2_v902560) with
      | EQ_c3  ⇒ compares_i22(s1_v902559, s2_v902561) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i120 =
  fn s1_v902562 s2_v902563 ⇒ compares_i22(s1_v902562, s2_v902563)

fun and_thenUUU_i78(A_v902564, B_v902565, opt_v902566, f_v902567) =
  match opt_v902566 with
  | NoneUU_c27  ⇒ NoneUU_c27
  | SomeUU_c28 x_v902568 ⇒ (f_v902567) x_v902568
  end

val and_thenUUUclo_i121 =
  fn A_v902569 B_v902570 opt_v902571 ⇒
    ln f_v902572 ⇒
      and_thenUUU_i78(A_v902569, B_v902570, opt_v902571, f_v902572)

fun and_thenUUL_i77(A_v902573, B_v902574, opt_v902575, f_v902576) =
  match opt_v902575 with
  | NoneUL_c25  ⇒ NoneUL_c25
  | SomeUL_c26 x_v902577 ⇒ (f_v902576) x_v902577
  end

val and_thenUULclo_i122 =
  fn A_v902578 B_v902579 opt_v902580 ⇒
    ln f_v902581 ⇒
      and_thenUUL_i77(A_v902578, B_v902579, opt_v902580, f_v902581)

fun and_thenULU_i76(A_v902582, B_v902583, opt_v902584, f_v902585) =
  match opt_v902584 with
  | NoneUU_c27  ⇒ NoneLU_c23
  | SomeUU_c28 x_v902586 ⇒ (f_v902585) x_v902586
  end

val and_thenULUclo_i123 =
  fn A_v902587 B_v902588 opt_v902589 ⇒
    ln f_v902590 ⇒
      and_thenULU_i76(A_v902587, B_v902588, opt_v902589, f_v902590)

fun and_thenULL_i75(A_v902591, B_v902592, opt_v902593, f_v902594) =
  match opt_v902593 with
  | NoneUL_c25  ⇒ NoneLL_c21
  | SomeUL_c26 x_v902595 ⇒ (f_v902594) x_v902595
  end

val and_thenULLclo_i124 =
  fn A_v902596 B_v902597 opt_v902598 ⇒
    ln f_v902599 ⇒
      and_thenULL_i75(A_v902596, B_v902597, opt_v902598, f_v902599)

fun and_thenLUL_i73(A_v902600, B_v902601, opt_v902602, f_v902603) =
  match opt_v902602 with
  | NoneLL_c21  ⇒ NoneUL_c25
  | SomeLL_c22 x_v902604 ⇒ (f_v902603) x_v902604
  end

val and_thenLULclo_i125 =
  fn A_v902605 B_v902606 opt_v902607 ⇒
    ln f_v902608 ⇒
      and_thenLUL_i73(A_v902605, B_v902606, opt_v902607, f_v902608)

fun and_thenLLL_i71(A_v902609, B_v902610, opt_v902611, f_v902612) =
  match opt_v902611 with
  | NoneLL_c21  ⇒ NoneLL_c21
  | SomeLL_c22 x_v902613 ⇒ (f_v902612) x_v902613
  end

val and_thenLLLclo_i126 =
  fn A_v902614 B_v902615 opt_v902616 ⇒
    ln f_v902617 ⇒
      and_thenLLL_i71(A_v902614, B_v902615, opt_v902616, f_v902617)

fun lenUU_i86(A_v902618, xs_v902619) =
  match xs_v902619 with
  | nilUU_c35  ⇒ (0, nilUU_c35)
  | consUU_c36 x_v902620 xs_v902621 ⇒
    match lenUU_i86(NULL, xs_v902621) with
    | (n_v902622, xs_v902623) ⇒
      (n_v902622.+1, (consUU_c36 x_v902620 xs_v902623))
    end
  end

val lenUUclo_i127 =
  fn A_v902624 xs_v902625 ⇒ lenUU_i86(A_v902624, xs_v902625)

fun lenUL_i85(A_v902626, xs_v902627) =
  match xs_v902627 with
  | nilUL_c33  ⇒ (0, nilUL_c33)
  | consUL_c34 x_v902628 xs_v902629 ⇒
    match lenUL_i85(NULL, xs_v902629) with
    | (n_v902630, xs_v902631) ⇒
      (n_v902630.+1, (consUL_c34 x_v902628 xs_v902631))
    end
  end

val lenULclo_i128 =
  fn A_v902632 xs_v902633 ⇒ lenUL_i85(A_v902632, xs_v902633)

fun lenLL_i83(A_v902634, xs_v902635) =
  match xs_v902635 with
  | nilLL_c29  ⇒ (0, nilLL_c29)
  | consLL_c30 x_v902636 xs_v902637 ⇒
    match lenLL_i83(NULL, xs_v902637) with
    | (n_v902638, xs_v902639) ⇒
      (n_v902638.+1, (consLL_c30 x_v902636 xs_v902639))
    end
  end

val lenLLclo_i129 =
  fn A_v902640 xs_v902641 ⇒ lenLL_i83(A_v902640, xs_v902641)

fun appendUU_i90(A_v902642, xs_v902643, ys_v902644) =
  match xs_v902643 with
  | nilUU_c35  ⇒ ys_v902644
  | consUU_c36 x_v902645 xs_v902646 ⇒
    (consUU_c36 x_v902645 appendUU_i90(NULL, xs_v902646, ys_v902644))
  end

val appendUUclo_i130 =
  fn A_v902647 xs_v902648 ⇒
    ln ys_v902649 ⇒ appendUU_i90(A_v902647, xs_v902648, ys_v902649)

fun appendUL_i89(A_v902650, xs_v902651, ys_v902652) =
  match xs_v902651 with
  | nilUL_c33  ⇒ ys_v902652
  | consUL_c34 x_v902653 xs_v902654 ⇒
    (consUL_c34 x_v902653 appendUL_i89(NULL, xs_v902654, ys_v902652))
  end

val appendULclo_i131 =
  fn A_v902655 xs_v902656 ⇒
    ln ys_v902657 ⇒ appendUL_i89(A_v902655, xs_v902656, ys_v902657)

fun appendLL_i87(A_v902658, xs_v902659, ys_v902660) =
  match xs_v902659 with
  | nilLL_c29  ⇒ ys_v902660
  | consLL_c30 x_v902661 xs_v902662 ⇒
    (consLL_c30 x_v902661 appendLL_i87(NULL, xs_v902662, ys_v902660))
  end

val appendLLclo_i132 =
  fn A_v902663 xs_v902664 ⇒
    ln ys_v902665 ⇒ appendLL_i87(A_v902663, xs_v902664, ys_v902665)

fun readline_i33(__v902666) =
  ln __v902667 ⇒
    let ch_v902668 = (ln __v902669 ⇒ open stdin) NULL in
    let ch_v902670 =
      ((fn x_v902671 ⇒ ln __v902672 ⇒ send(ch_v902668, x_v902671)) 1)
        NULL
    in
    let __v902673 = (ln __v902674 ⇒ recv(ch_v902670)) NULL in
    (match __v902673 with
     | (s_v902675, ch_v902676) ⇒
       ln __v902677 ⇒
         let ch_v902678 =
           ((fn x_v902679 ⇒ ln __v902680 ⇒ send(ch_v902676, x_v902679)) 0)
             NULL
         in
         let __v902681 =
           (ln __v902682 ⇒ let __v902683 = ch_v902678 in NULL) NULL
         in (ln __v902684 ⇒ s_v902675) NULL
     end) NULL

val readlineclo_i133 = fn __v902685 ⇒ readline_i33(__v902685)

fun print_i34(s_v902686) =
  ln __v902687 ⇒
    let ch_v902688 = (ln __v902689 ⇒ open stdout) NULL in
    let ch_v902690 =
      ((fn x_v902691 ⇒ ln __v902692 ⇒ send(ch_v902688, x_v902691)) 1)
        NULL
    in
    let ch_v902693 =
      ((fn x_v902694 ⇒ ln __v902695 ⇒ send(ch_v902690, x_v902694))
         s_v902686)
        NULL
    in
    let ch_v902696 =
      ((fn x_v902697 ⇒ ln __v902698 ⇒ send(ch_v902693, x_v902697)) 0)
        NULL
    in (ln __v902699 ⇒ let __v902700 = ch_v902696 in NULL) NULL

val printclo_i134 = fn s_v902701 ⇒ print_i34(s_v902701)

fun prerr_i35(s_v902702) =
  ln __v902703 ⇒
    let ch_v902704 = (ln __v902705 ⇒ open stderr) NULL in
    let ch_v902706 =
      ((fn x_v902707 ⇒ ln __v902708 ⇒ send(ch_v902704, x_v902707)) 1)
        NULL
    in
    let ch_v902709 =
      ((fn x_v902710 ⇒ ln __v902711 ⇒ send(ch_v902706, x_v902710))
         s_v902702)
        NULL
    in
    let ch_v902712 =
      ((fn x_v902713 ⇒ ln __v902714 ⇒ send(ch_v902709, x_v902713)) 0)
        NULL
    in (ln __v902715 ⇒ let __v902716 = ch_v902712 in NULL) NULL

val prerrclo_i135 = fn s_v902717 ⇒ prerr_i35(s_v902717)

val digits_i36 =
  (consUU_c36
    "0"
    (consUU_c36
      "1"
      (consUU_c36
        "2"
        (consUU_c36
          "3"
          (consUU_c36
            "4"
            (consUU_c36
              "5"
              (consUU_c36
                "6"
                (consUU_c36 "7" (consUU_c36 "8" (consUU_c36 "9" nilUU_c35))))))))))

fun get_at_i37(A_v902718, n_v902719, xs_v902720, a_v902721) =
  let __v902722 = n_v902719 in
  if __v902722 then
    let n_v902723 = __v902722.-1 in
    match xs_v902720 with
    | nilUU_c35  ⇒ a_v902721
    | consUU_c36 __v902724 xs_v902725 ⇒
      get_at_i37(NULL, n_v902723, xs_v902725, a_v902721)
    end
  else
    match xs_v902720 with
    | nilUU_c35  ⇒ a_v902721 | consUU_c36 x_v902726 __v902727 ⇒ x_v902726
    end

val get_atclo_i136 =
  fn A_v902728 n_v902729 xs_v902730 a_v902731 ⇒
    get_at_i37(A_v902728, n_v902729, xs_v902730, a_v902731)

fun string_of_digit_i38(n_v902732) =
  get_at_i37(NULL, n_v902732, digits_i36, EmptyString_c6)

val string_of_digitclo_i137 = fn n_v902733 ⇒ string_of_digit_i38(n_v902733)

fun string_of_nat_i39(n_v902734) =
  let s_v902735 = string_of_digit_i38(modn_i16(n_v902734, 10)) in
  let n_v902736 = divn_i15(n_v902734, 10) in
  if ltn_i6(0, n_v902736) then
    cats_i19(string_of_nat_i39(n_v902736), s_v902735)
  else
    s_v902735

val string_of_natclo_i138 = fn n_v902737 ⇒ string_of_nat_i39(n_v902737)

fun digit_of_char_i40(c_v902738) =
  if eqc_i17(c_v902738, '0') then
    (SomeUL_c26 0)
  else
    if eqc_i17(c_v902738, '1') then
      (SomeUL_c26 1)
    else
      if eqc_i17(c_v902738, '2') then
        (SomeUL_c26 2)
      else
        if eqc_i17(c_v902738, '3') then
          (SomeUL_c26 3)
        else
          if eqc_i17(c_v902738, '4') then
            (SomeUL_c26 4)
          else
            if eqc_i17(c_v902738, '5') then
              (SomeUL_c26 5)
            else
              if eqc_i17(c_v902738, '6') then
                (SomeUL_c26 6)
              else
                if eqc_i17(c_v902738, '7') then
                  (SomeUL_c26 7)
                else
                  if eqc_i17(c_v902738, '8') then
                    (SomeUL_c26 8)
                  else
                    if eqc_i17(c_v902738, '9') then
                      (SomeUL_c26 9)
                    else
                      NoneUL_c25

val digit_of_charclo_i139 = fn c_v902739 ⇒ digit_of_char_i40(c_v902739)

fun nat_of_string_loop_i41(s_v902740, acc_v902741) =
  match s_v902740 with
  | EmptyString_c6  ⇒ (SomeUL_c26 acc_v902741)
  | String_c7 c_v902742 s_v902743 ⇒
    match digit_of_char_i40(c_v902742) with
    | NoneUL_c25  ⇒ NoneUL_c25
    | SomeUL_c26 n_v902744 ⇒
      nat_of_string_loop_i41(s_v902743,
                             addn_i12(muln_i14(acc_v902741, 10), n_v902744))
    end
  end

val nat_of_string_loopclo_i140 =
  fn s_v902745 acc_v902746 ⇒ nat_of_string_loop_i41(s_v902745, acc_v902746)

fun nat_of_string_i42(s_v902747) = nat_of_string_loop_i41(s_v902747, 0)

val nat_of_stringclo_i141 = fn s_v902748 ⇒ nat_of_string_i42(s_v902748)

fun contains_i51(c_v902749, s_v902750) =
  match s_v902750 with
  | EmptyString_c6  ⇒ 0
  | String_c7 c0_v902751 s_v902752 ⇒
    if eqc_i17(c_v902749, c0_v902751) then
      1
    else
      contains_i51(c_v902749, s_v902752)
  end

val containsclo_i142 =
  fn c_v902753 s_v902754 ⇒ contains_i51(c_v902753, s_v902754)

fun string_diff_i52(ans_v902755, s1_v902756, s2_v902757) =
  match s1_v902756 with
  | EmptyString_c6  ⇒
    match s2_v902757 with
    | EmptyString_c6  ⇒ fn e_v902758 ⇒ (SPairUUU_c44 EmptyString_c6 NULL)
    | String_c7 c2_v902759 s2_v902760 ⇒ fn e_v902761 ⇒ NULL
    end
  | String_c7 c1_v902762 s1_v902763 ⇒
    match s2_v902757 with
    | EmptyString_c6  ⇒ fn e_v902764 ⇒ NULL
    | String_c7 c2_v902765 s2_v902766 ⇒
      fn e_v902767 ⇒
        let e_v902768 = NULL in
        match ((((string_diffclo_i143) ans_v902755) s1_v902763) s2_v902766)
                NULL with
        | SPairUUU_c44 df_v902769 pf_v902770 ⇒
          (if eqc_i17(c1_v902762, c2_v902765) then
             fn e1_v902771 ⇒
               let e1_v902772 = NULL in
               let h_v902773 = NULL in
               (SPairUUU_c44 cats_i19("Y", df_v902769) NULL)
           else
             fn e1_v902774 ⇒
               (if contains_i51(c2_v902765, ans_v902755) then
                  fn e2_v902775 ⇒
                    (SPairUUU_c44 cats_i19("I", df_v902769) NULL)
                else
                  fn e2_v902776 ⇒
                    (SPairUUU_c44 cats_i19("N", df_v902769) NULL))
                 NULL)
            NULL
        end
    end
  end

val string_diffclo_i143 =
  fn ans_v902777 s1_v902778 s2_v902779 ⇒
    string_diff_i52(ans_v902777, s1_v902778, s2_v902779)

fun word_diff_i54(ans_v902780, guess_v902781) =
  (match ans_v902780 with
   | Word_c17 s1_v902782 pf1_v902783 ⇒
     fn e1_v902784 ⇒
       (match guess_v902781 with
        | Word_c17 s2_v902785 pf2_v902786 ⇒
          fn e2_v902787 ⇒
            let e_v902788 = NULL in
            match ((((string_diffclo_i143) s1_v902782) s1_v902782) s2_v902785)
                    NULL with
            | SPairUUU_c44 s3_v902789 h_v902790 ⇒
              let e_v902791 = NULL in
              let pf_v902792 = NULL in
              (SPairUUU_c44 (Word_c17 s3_v902789 NULL) NULL)
            end
        end) NULL
   end) NULL

val word_diffclo_i144 =
  fn ans_v902793 guess_v902794 ⇒ word_diff_i54(ans_v902793, guess_v902794)

fun eqw_i55(w1_v902795, w2_v902796) =
  match w1_v902795 with
  | Word_c17 s1_v902797 __v902798 ⇒
    match w2_v902796 with
    | Word_c17 s2_v902799 __v902800 ⇒ eqs_i21(s1_v902797, s2_v902799)
    end
  end

val eqwclo_i145 =
  fn w1_v902801 w2_v902802 ⇒ eqw_i55(w1_v902801, w2_v902802)

fun read_word_i62(__v902803) =
  ln __v902804 ⇒
    let s_v902805 = (readline_i33(NULL)) NULL in
    ((if eqn_i9(strlen_i20(s_v902805), 5) then
        fn e_v902806 ⇒ ln __v902807 ⇒ (Word_c17 s_v902805 NULL)
      else
        fn __v902808 ⇒
          ln __v902809 ⇒
            let __v902810 =
              (print_i34("please input a word with length of 5\n")) NULL
            in (read_word_i62(NULL)) NULL)
       NULL)
      NULL

val read_wordclo_i146 = fn __v902811 ⇒ read_word_i62(__v902811)

fun player_loop_i63(ans_v902812, repeat_v902813, c_v902814) =
  (let __v902815 = repeat_v902813 in
   if __v902815 then
     let repeat_v902816 = __v902815.-1 in
     fn c_v902817 ⇒
       ln __v902818 ⇒
         let guess_v902819 = (read_word_i62(NULL)) NULL in
         let c_v902820 =
           ((fn x_v902821 ⇒ ln __v902822 ⇒ send(c_v902817, x_v902821))
              guess_v902819)
             NULL
         in
         let __v902823 = (ln __v902824 ⇒ recv(c_v902820)) NULL in
         (match __v902823 with
          | (b_v902825, c_v902826) ⇒
            ln __v902827 ⇒
              let __v902828 = (ln __v902829 ⇒ (NULL, c_v902826)) NULL in
              (match __v902828 with
               | (pf_v902830, c_v902831) ⇒
                 (if b_v902825 then
                    ln c_v902832 __v902833 ⇒
                      let __v902834 = (print_i34("You Win!\n")) NULL in
                      (ln __v902835 ⇒ close(c_v902832)) NULL
                  else
                    ln c_v902836 __v902837 ⇒
                      let __v902838 = (ln __v902839 ⇒ recv(c_v902836)) NULL
                      in
                      (match __v902838 with
                       | (diff_v902840, c_v902841) ⇒
                         ln __v902842 ⇒
                           let __v902843 =
                             (ln __v902844 ⇒ (NULL, c_v902841)) NULL
                           in
                           (match __v902843 with
                            | (pf_v902845, c_v902846) ⇒
                              match diff_v902840 with
                              | Word_c17 s_v902847 __v902848 ⇒
                                ln __v902849 ⇒
                                  let __v902850 =
                                    (print_i34(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Incorrect, hint: ",
                                                                 s_v902847),
                                                                 ". You have "),
                                                                 string_of_nat_i39(
                                                                 repeat_v902816)),
                                                        " more tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i63(NULL, repeat_v902816,
                                                   c_v902846))
                                    NULL
                              end
                            end) NULL
                       end) NULL)
                   c_v902831
               end) NULL
          end) NULL
   else
     fn c_v902851 ⇒
       ln __v902852 ⇒
         let __v902853 = (ln __v902854 ⇒ recv(c_v902851)) NULL in
         (match __v902853 with
          | (ans_v902855, c_v902856) ⇒
            ln __v902857 ⇒
              let __v902858 = (ln __v902859 ⇒ (NULL, c_v902856)) NULL in
              (match __v902858 with
               | (pf_v902860, c_v902861) ⇒
                 match ans_v902855 with
                 | Word_c17 s_v902862 __v902863 ⇒
                   ln __v902864 ⇒
                     let __v902865 =
                       (print_i34(cats_i19(cats_i19("You Lose! The answer is ",
                                                    s_v902862),
                                           ".\n")))
                         NULL
                     in (ln __v902866 ⇒ close(c_v902861)) NULL
                 end
               end) NULL
          end) NULL)
    c_v902814

val player_loopclo_i147 =
  fn ans_v902867 repeat_v902868 c_v902869 ⇒
    player_loop_i63(ans_v902867, repeat_v902868, c_v902869)

fun player_i64(c_v902870) =
  ln __v902871 ⇒
    let __v902872 = (ln __v902873 ⇒ (NULL, c_v902870)) NULL in
    (match __v902872 with
     | (ans_v902874, c_v902875) ⇒
       ln __v902876 ⇒
         let __v902877 = (ln __v902878 ⇒ recv(c_v902875)) NULL in
         (match __v902877 with
          | (repeat_v902879, c_v902880) ⇒
            ln __v902881 ⇒
              let __v902882 = (print_i34("Wordle Game\n")) NULL in
              let __v902883 =
                (print_i34("Please guess a word of length 5.\n")) NULL
              in
              let __v902884 =
                (print_i34(cats_i19(cats_i19("You have ",
                                             string_of_nat_i39(repeat_v902879)),
                                    " tries.\n")))
                  NULL
              in (player_loop_i63(NULL, repeat_v902879, c_v902880)) NULL
          end) NULL
     end) NULL

val playerclo_i148 = fn c_v902885 ⇒ player_i64(c_v902885)

fun get_at_i66(A_v902886, n_v902887, xs_v902888) =
  match xs_v902888 with
  | nilUU_c35  ⇒ fn e_v902889 ⇒ NULL
  | consUU_c36 x_v902890 xs_v902891 ⇒
    let __v902892 = n_v902887 in
    if __v902892 then
      let n_v902893 = __v902892.-1 in
      fn e_v902894 ⇒
        match ((((get_atclo_i149) NULL) n_v902893) xs_v902891) NULL with
        | SPairUUU_c44 x0_v902895 pf_v902896 ⇒
          (SPairUUU_c44 x0_v902895 NULL)
        end
    else
      fn e_v902897 ⇒ (SPairUUU_c44 x_v902890 NULL)
  end

val get_atclo_i149 =
  fn A_v902898 n_v902899 xs_v902900 ⇒
    get_at_i66(A_v902898, n_v902899, xs_v902900)

fun rand_word_i67(__v902901) =
  let words_v902902 =
    (consUU_c36
      (Word_c17 "route" NULL)
      (consUU_c36
        (Word_c17 "crash" NULL)
        (consUU_c36
          (Word_c17 "clown" NULL)
          (consUU_c36
            (Word_c17 "shaky" NULL)
            (consUU_c36
              (Word_c17 "vegan" NULL)
              (consUU_c36
                (Word_c17 "power" NULL)
                (consUU_c36
                  (Word_c17 "trust" NULL)
                  (consUU_c36
                    (Word_c17 "enjoy" NULL)
                    (consUU_c36
                      (Word_c17 "brain" NULL)
                      (consUU_c36
                        (Word_c17 "adopt" NULL)
                        (consUU_c36
                          (Word_c17 "tower" NULL)
                          (consUU_c36
                            (Word_c17 "shade" NULL)
                            (consUU_c36
                              (Word_c17 "delay" NULL)
                              (consUU_c36
                                (Word_c17 "twist" NULL)
                                (consUU_c36
                                  (Word_c17 "alert" NULL)
                                  (consUU_c36
                                    (Word_c17 "choke" NULL)
                                    (consUU_c36
                                      (Word_c17 "split" NULL)
                                      (consUU_c36
                                        (Word_c17 "rhyme" NULL)
                                        (consUU_c36
                                          (Word_c17 "muddy" NULL)
                                          (consUU_c36
                                            (Word_c17 "plant" NULL) nilUU_c35))))))))))))))))))))
  in
  ln __v902903 ⇒
    let r_v902904 = (ln __v902905 ⇒ rand(0, 19)) NULL in
    (match r_v902904 with
     | Between_c4 n_v902906 __v902907 pf_v902908 ⇒
       match ((((get_atclo_i149) NULL) n_v902906) words_v902902) NULL with
       | SPairUUU_c44 w_v902909 __v902910 ⇒ ln __v902911 ⇒ w_v902909
       end
     end) NULL

val rand_wordclo_i150 = fn __v902912 ⇒ rand_word_i67(__v902912)

fun server_loop_i68(ans_v902913, repeat_v902914, c_v902915) =
  (let __v902916 = repeat_v902914 in
   if __v902916 then
     let repeat_v902917 = __v902916.-1 in
     fn c_v902918 ⇒
       ln __v902919 ⇒
         let __v902920 = (ln __v902921 ⇒ recv(c_v902918)) NULL in
         (match __v902920 with
          | (guess_v902922, c_v902923) ⇒
            let b_v902924 = eqw_i55(ans_v902913, guess_v902922) in
            ln __v902925 ⇒
              let c_v902926 =
                ((fn x_v902927 ⇒
                    ln __v902928 ⇒ send(c_v902923, x_v902927))
                   b_v902924)
                  NULL
              in
              let c_v902929 =
                ((fn x_v902930 ⇒ ln __v902931 ⇒ c_v902926) NULL) NULL
              in
              ((if b_v902924 then
                  ln c_v902932 __v902933 ⇒
                    let __v902934 = c_v902932 in NULL
                else
                  ln c_v902935 ⇒
                    match word_diff_i54(ans_v902913, guess_v902922) with
                    | SPairUUU_c44 df_v902936 pf_v902937 ⇒
                      ln __v902938 ⇒
                        let c_v902939 =
                          ((fn x_v902940 ⇒
                              ln __v902941 ⇒ send(c_v902935, x_v902940))
                             df_v902936)
                            NULL
                        in
                        let c_v902942 =
                          ((fn x_v902943 ⇒ ln __v902944 ⇒ c_v902939) NULL)
                            NULL
                        in
                        (server_loop_i68(ans_v902913, repeat_v902917,
                                         c_v902942))
                          NULL
                    end)
                 c_v902929)
                NULL
          end) NULL
   else
     fn c_v902945 ⇒
       ln __v902946 ⇒
         let c_v902947 =
           ((fn x_v902948 ⇒ ln __v902949 ⇒ send(c_v902945, x_v902948))
              ans_v902913)
             NULL
         in
         let c_v902950 =
           ((fn x_v902951 ⇒ ln __v902952 ⇒ c_v902947) NULL) NULL
         in (ln __v902953 ⇒ let __v902954 = c_v902950 in NULL) NULL)
    c_v902915

val server_loopclo_i151 =
  fn ans_v902955 repeat_v902956 c_v902957 ⇒
    server_loop_i68(ans_v902955, repeat_v902956, c_v902957)

fun server_i69(c_v902958) =
  let repeat_v902959 = 6 in
  ln __v902960 ⇒
    let ans_v902961 = (rand_word_i67(NULL)) NULL in
    let c_v902962 = ((fn x_v902963 ⇒ ln __v902964 ⇒ c_v902958) NULL) NULL
    in
    let c_v902965 =
      ((fn x_v902966 ⇒ ln __v902967 ⇒ send(c_v902962, x_v902966))
         repeat_v902959)
        NULL
    in (server_loop_i68(ans_v902961, repeat_v902959, c_v902965)) NULL

val serverclo_i152 = fn c_v902968 ⇒ server_i69(c_v902968)

main =
  (ln __v902969 ⇒
     let c_v902970 =
       (ln __v902971 ⇒ fork c_v902972 in (server_i69(c_v902972)) NULL) NULL
     in
     let c0_v902973 =
       (ln __v902974 ⇒
          fork c0_v902975 in
            (ln __v902976 ⇒
               let __v902977 = (ln __v902978 ⇒ recv(c0_v902975)) NULL in
               (match __v902977 with
                | (c_v902979, c0_v902980) ⇒
                  ln __v902981 ⇒
                    let __v902982 = (player_i64(c_v902979)) NULL in
                    let c0_v902983 =
                      ((fn x_v902984 ⇒
                          ln __v902985 ⇒ send(c0_v902980, x_v902984))
                         NULL)
                        NULL
                    in
                    (ln __v902986 ⇒ let __v902987 = c0_v902983 in NULL)
                      NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v902988 =
       ((ln x_v902989 __v902990 ⇒ send(c0_v902973, x_v902989)) c_v902970)
         NULL
     in
     let __v902991 = (ln __v902992 ⇒ recv(c0_v902988)) NULL in
     (match __v902991 with
      | (__v902993, c0_v902994) ⇒ ln __v902995 ⇒ close(c0_v902994)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v904233, b2_v904234) = if b1_v904233 then
                                        b2_v904234
                                      else
                                        0

val andbclo_i99 =
  fn b1_v904235 b2_v904236 ⇒ andb_i1(b1_v904235, b2_v904236)

fun orb_i2(b1_v904237, b2_v904238) = if b1_v904237 then
                                       1
                                     else
                                       b2_v904238

val orbclo_i100 = fn b1_v904239 b2_v904240 ⇒ orb_i2(b1_v904239, b2_v904240)

fun notb_i3(b_v904241) = if b_v904241 then
                           0
                         else
                           1

val notbclo_i101 = fn b_v904242 ⇒ notb_i3(b_v904242)

fun compareb_i4(b1_v904243, b2_v904244) =
  if b1_v904243 then
    if b2_v904244 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v904244 then
      LT_c1
    else
      EQ_c3

val comparebclo_i102 =
  fn b1_v904245 b2_v904246 ⇒ compareb_i4(b1_v904245, b2_v904246)

fun lten_i5(x_v904247, y_v904248) =
  if x_v904247 then
    if y_v904248 then
      lten_i5(x_v904247.-1, y_v904248.-1)
    else
      0
  else
    1

val ltenclo_i103 = fn x_v904249 y_v904250 ⇒ lten_i5(x_v904249, y_v904250)

fun ltn_i6(x_v904251, y_v904252) = lten_i5(x_v904251.+1, y_v904252)

val ltnclo_i104 = fn x_v904253 y_v904254 ⇒ ltn_i6(x_v904253, y_v904254)

fun gten_i7(x_v904255, y_v904256) = lten_i5(y_v904256, x_v904255)

val gtenclo_i105 = fn x_v904257 y_v904258 ⇒ gten_i7(x_v904257, y_v904258)

fun gtn_i8(x_v904259, y_v904260) = ltn_i6(y_v904260, x_v904259)

val gtnclo_i106 = fn x_v904261 y_v904262 ⇒ gtn_i8(x_v904261, y_v904262)

fun eqn_i9(x_v904263, y_v904264) =
  if x_v904263 then
    if y_v904264 then
      eqn_i9(x_v904263.-1, y_v904264.-1)
    else
      0
  else
    if y_v904264 then
      0
    else
      1

val eqnclo_i107 = fn x_v904265 y_v904266 ⇒ eqn_i9(x_v904265, y_v904266)

fun comparen_i10(n1_v904267, n2_v904268) =
  if n1_v904267 then
    if n2_v904268 then
      comparen_i10(n1_v904267.-1, n2_v904268.-1)
    else
      GT_c2
  else
    if n2_v904268 then
      LT_c1
    else
      EQ_c3

val comparenclo_i108 =
  fn n1_v904269 n2_v904270 ⇒ comparen_i10(n1_v904269, n2_v904270)

fun pred_i11(x_v904271) = if x_v904271 then
                            x_v904271.-1
                          else
                            0

val predclo_i109 = fn x_v904272 ⇒ pred_i11(x_v904272)

fun addn_i12(x_v904273, y_v904274) =
  if x_v904273 then
    addn_i12(x_v904273.-1, y_v904274).+1
  else
    y_v904274

val addnclo_i110 = fn x_v904275 y_v904276 ⇒ addn_i12(x_v904275, y_v904276)

fun subn_i13(x_v904277, y_v904278) =
  if y_v904278 then
    subn_i13(pred_i11(x_v904277), y_v904278.-1)
  else
    x_v904277

val subnclo_i111 = fn x_v904279 y_v904280 ⇒ subn_i13(x_v904279, y_v904280)

fun muln_i14(x_v904281, y_v904282) =
  if x_v904281 then
    addn_i12(y_v904282, muln_i14(x_v904281.-1, y_v904282))
  else
    0

val mulnclo_i112 = fn x_v904283 y_v904284 ⇒ muln_i14(x_v904283, y_v904284)

fun divn_i15(x_v904285, y_v904286) =
  if ltn_i6(x_v904285, y_v904286) then
    0
  else
    divn_i15(subn_i13(x_v904285, y_v904286), y_v904286).+1

val divnclo_i113 = fn x_v904287 y_v904288 ⇒ divn_i15(x_v904287, y_v904288)

fun modn_i16(x_v904289, y_v904290) =
  subn_i13(x_v904289, muln_i14(divn_i15(x_v904289, y_v904290), y_v904290))

val modnclo_i114 = fn x_v904291 y_v904292 ⇒ modn_i16(x_v904291, y_v904292)

fun eqc_i17(c1_v904293, c2_v904294) =
  match c1_v904293 with
  | Char_c5 n1_v904295 ⇒
    match c2_v904294 with
    | Char_c5 n2_v904296 ⇒ eqn_i9(n1_v904295, n2_v904296)
    end
  end

val eqcclo_i115 =
  fn c1_v904297 c2_v904298 ⇒ eqc_i17(c1_v904297, c2_v904298)

fun comparec_i18(c1_v904299, c2_v904300) =
  match c1_v904299 with
  | Char_c5 n1_v904301 ⇒
    match c2_v904300 with
    | Char_c5 n2_v904302 ⇒ comparen_i10(n1_v904301, n2_v904302)
    end
  end

val comparecclo_i116 =
  fn c1_v904303 c2_v904304 ⇒ comparec_i18(c1_v904303, c2_v904304)

fun cats_i19(s1_v904305, s2_v904306) =
  match s1_v904305 with
  | EmptyString_c6  ⇒ s2_v904306
  | String_c7 c_v904307 s1_v904308 ⇒
    (String_c7 c_v904307 cats_i19(s1_v904308, s2_v904306))
  end

val catsclo_i117 =
  fn s1_v904309 s2_v904310 ⇒ cats_i19(s1_v904309, s2_v904310)

fun strlen_i20(s_v904311) =
  match s_v904311 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v904312 s_v904313 ⇒ strlen_i20(s_v904313).+1
  end

val strlenclo_i118 = fn s_v904314 ⇒ strlen_i20(s_v904314)

fun eqs_i21(s1_v904315, s2_v904316) =
  match s1_v904315 with
  | EmptyString_c6  ⇒
    match s2_v904316 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v904317 __v904318 ⇒ 0
    end
  | String_c7 c1_v904319 s1_v904320 ⇒
    match s2_v904316 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v904321 s2_v904322 ⇒
      andb_i1(eqc_i17(c1_v904319, c2_v904321),
              eqs_i21(s1_v904320, s2_v904322))
    end
  end

val eqsclo_i119 =
  fn s1_v904323 s2_v904324 ⇒ eqs_i21(s1_v904323, s2_v904324)

fun compares_i22(s1_v904325, s2_v904326) =
  match s1_v904325 with
  | EmptyString_c6  ⇒
    match s2_v904326 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v904327 __v904328 ⇒ LT_c1
    end
  | String_c7 c1_v904329 s1_v904330 ⇒
    match s2_v904326 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v904331 s2_v904332 ⇒
      match comparec_i18(c1_v904329, c2_v904331) with
      | EQ_c3  ⇒ compares_i22(s1_v904330, s2_v904332) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i120 =
  fn s1_v904333 s2_v904334 ⇒ compares_i22(s1_v904333, s2_v904334)

fun and_thenUUU_i78(A_v904335, B_v904336, opt_v904337, f_v904338) =
  match opt_v904337 with
  | NoneUU_c27  ⇒ NoneUU_c27
  | SomeUU_c28 x_v904339 ⇒ (f_v904338) x_v904339
  end

val and_thenUUUclo_i121 =
  fn A_v904340 B_v904341 opt_v904342 ⇒
    ln f_v904343 ⇒
      and_thenUUU_i78(A_v904340, B_v904341, opt_v904342, f_v904343)

fun and_thenUUL_i77(A_v904344, B_v904345, opt_v904346, f_v904347) =
  match opt_v904346 with
  | NoneUL_c25  ⇒ NoneUL_c25
  | SomeUL_c26 x_v904348 ⇒ (f_v904347) x_v904348
  end

val and_thenUULclo_i122 =
  fn A_v904349 B_v904350 opt_v904351 ⇒
    ln f_v904352 ⇒
      and_thenUUL_i77(A_v904349, B_v904350, opt_v904351, f_v904352)

fun and_thenULU_i76(A_v904353, B_v904354, opt_v904355, f_v904356) =
  match opt_v904355 with
  | NoneUU_c27  ⇒ NoneLU_c23
  | SomeUU_c28 x_v904357 ⇒ (f_v904356) x_v904357
  end

val and_thenULUclo_i123 =
  fn A_v904358 B_v904359 opt_v904360 ⇒
    ln f_v904361 ⇒
      and_thenULU_i76(A_v904358, B_v904359, opt_v904360, f_v904361)

fun and_thenULL_i75(A_v904362, B_v904363, opt_v904364, f_v904365) =
  match opt_v904364 with
  | NoneUL_c25  ⇒ NoneLL_c21
  | SomeUL_c26 x_v904366 ⇒ (f_v904365) x_v904366
  end

val and_thenULLclo_i124 =
  fn A_v904367 B_v904368 opt_v904369 ⇒
    ln f_v904370 ⇒
      and_thenULL_i75(A_v904367, B_v904368, opt_v904369, f_v904370)

fun and_thenLUL_i73(A_v904371, B_v904372, opt_v904373, f_v904374) =
  match opt_v904373 with
  | NoneLL_c21  ⇒ NoneUL_c25
  | SomeLL_c22 x_v904375 ⇒ (f_v904374) x_v904375
  end

val and_thenLULclo_i125 =
  fn A_v904376 B_v904377 opt_v904378 ⇒
    ln f_v904379 ⇒
      and_thenLUL_i73(A_v904376, B_v904377, opt_v904378, f_v904379)

fun and_thenLLL_i71(A_v904380, B_v904381, opt_v904382, f_v904383) =
  match opt_v904382 with
  | NoneLL_c21  ⇒ NoneLL_c21
  | SomeLL_c22 x_v904384 ⇒ (f_v904383) x_v904384
  end

val and_thenLLLclo_i126 =
  fn A_v904385 B_v904386 opt_v904387 ⇒
    ln f_v904388 ⇒
      and_thenLLL_i71(A_v904385, B_v904386, opt_v904387, f_v904388)

fun lenUU_i86(A_v904389, xs_v904390) =
  match xs_v904390 with
  | nilUU_c35  ⇒ (0, nilUU_c35)
  | consUU_c36 x_v904391 xs_v904392 ⇒
    match lenUU_i86(NULL, xs_v904392) with
    | (n_v904393, xs_v904394) ⇒
      (n_v904393.+1, (consUU_c36 x_v904391 xs_v904394))
    end
  end

val lenUUclo_i127 =
  fn A_v904395 xs_v904396 ⇒ lenUU_i86(A_v904395, xs_v904396)

fun lenUL_i85(A_v904397, xs_v904398) =
  match xs_v904398 with
  | nilUL_c33  ⇒ (0, nilUL_c33)
  | consUL_c34 x_v904399 xs_v904400 ⇒
    match lenUL_i85(NULL, xs_v904400) with
    | (n_v904401, xs_v904402) ⇒
      (n_v904401.+1, (consUL_c34 x_v904399 xs_v904402))
    end
  end

val lenULclo_i128 =
  fn A_v904403 xs_v904404 ⇒ lenUL_i85(A_v904403, xs_v904404)

fun lenLL_i83(A_v904405, xs_v904406) =
  match xs_v904406 with
  | nilLL_c29  ⇒ (0, nilLL_c29)
  | consLL_c30 x_v904407 xs_v904408 ⇒
    match lenLL_i83(NULL, xs_v904408) with
    | (n_v904409, xs_v904410) ⇒
      (n_v904409.+1, (consLL_c30 x_v904407 xs_v904410))
    end
  end

val lenLLclo_i129 =
  fn A_v904411 xs_v904412 ⇒ lenLL_i83(A_v904411, xs_v904412)

fun appendUU_i90(A_v904413, xs_v904414, ys_v904415) =
  match xs_v904414 with
  | nilUU_c35  ⇒ ys_v904415
  | consUU_c36 x_v904416 xs_v904417 ⇒
    (consUU_c36 x_v904416 appendUU_i90(NULL, xs_v904417, ys_v904415))
  end

val appendUUclo_i130 =
  fn A_v904418 xs_v904419 ⇒
    ln ys_v904420 ⇒ appendUU_i90(A_v904418, xs_v904419, ys_v904420)

fun appendUL_i89(A_v904421, xs_v904422, ys_v904423) =
  match xs_v904422 with
  | nilUL_c33  ⇒ ys_v904423
  | consUL_c34 x_v904424 xs_v904425 ⇒
    (consUL_c34 x_v904424 appendUL_i89(NULL, xs_v904425, ys_v904423))
  end

val appendULclo_i131 =
  fn A_v904426 xs_v904427 ⇒
    ln ys_v904428 ⇒ appendUL_i89(A_v904426, xs_v904427, ys_v904428)

fun appendLL_i87(A_v904429, xs_v904430, ys_v904431) =
  match xs_v904430 with
  | nilLL_c29  ⇒ ys_v904431
  | consLL_c30 x_v904432 xs_v904433 ⇒
    (consLL_c30 x_v904432 appendLL_i87(NULL, xs_v904433, ys_v904431))
  end

val appendLLclo_i132 =
  fn A_v904434 xs_v904435 ⇒
    ln ys_v904436 ⇒ appendLL_i87(A_v904434, xs_v904435, ys_v904436)

fun readline_i33(__v904437) =
  ln __v904438 ⇒
    let ch_v904439 = open stdin in
    let ch_v904440 = send(ch_v904439, 1) in
    let __v904441 = recv(ch_v904440) in
    match __v904441 with
    | (s_v904442, ch_v904443) ⇒
      let ch_v904444 = send(ch_v904443, 0) in s_v904442
    end

val readlineclo_i133 = fn __v904445 ⇒ readline_i33(__v904445)

fun print_i34(s_v904446) =
  ln __v904447 ⇒
    let ch_v904448 = open stdout in
    let ch_v904449 = send(ch_v904448, 1) in
    let ch_v904450 = send(ch_v904449, s_v904446) in
    let ch_v904451 = send(ch_v904450, 0) in NULL

val printclo_i134 = fn s_v904452 ⇒ print_i34(s_v904452)

fun prerr_i35(s_v904453) =
  ln __v904454 ⇒
    let ch_v904455 = open stderr in
    let ch_v904456 = send(ch_v904455, 1) in
    let ch_v904457 = send(ch_v904456, s_v904453) in
    let ch_v904458 = send(ch_v904457, 0) in NULL

val prerrclo_i135 = fn s_v904459 ⇒ prerr_i35(s_v904459)

val digits_i36 =
  (consUU_c36
    "0"
    (consUU_c36
      "1"
      (consUU_c36
        "2"
        (consUU_c36
          "3"
          (consUU_c36
            "4"
            (consUU_c36
              "5"
              (consUU_c36
                "6"
                (consUU_c36 "7" (consUU_c36 "8" (consUU_c36 "9" nilUU_c35))))))))))

fun get_at_i37(A_v904460, n_v904461, xs_v904462, a_v904463) =
  if n_v904461 then
    match xs_v904462 with
    | nilUU_c35  ⇒ a_v904463
    | consUU_c36 __v904464 xs_v904465 ⇒
      get_at_i37(NULL, n_v904461.-1, xs_v904465, a_v904463)
    end
  else
    match xs_v904462 with
    | nilUU_c35  ⇒ a_v904463 | consUU_c36 x_v904466 __v904467 ⇒ x_v904466
    end

val get_atclo_i136 =
  fn A_v904468 n_v904469 xs_v904470 a_v904471 ⇒
    get_at_i37(A_v904468, n_v904469, xs_v904470, a_v904471)

fun string_of_digit_i38(n_v904472) =
  get_at_i37(NULL, n_v904472, digits_i36, EmptyString_c6)

val string_of_digitclo_i137 = fn n_v904473 ⇒ string_of_digit_i38(n_v904473)

fun string_of_nat_i39(n_v904474) =
  let s_v904475 = string_of_digit_i38(modn_i16(n_v904474, 10)) in
  let n_v904476 = divn_i15(n_v904474, 10) in
  if ltn_i6(0, n_v904476) then
    cats_i19(string_of_nat_i39(n_v904476), s_v904475)
  else
    s_v904475

val string_of_natclo_i138 = fn n_v904477 ⇒ string_of_nat_i39(n_v904477)

fun digit_of_char_i40(c_v904478) =
  if eqc_i17(c_v904478, '0') then
    (SomeUL_c26 0)
  else
    if eqc_i17(c_v904478, '1') then
      (SomeUL_c26 1)
    else
      if eqc_i17(c_v904478, '2') then
        (SomeUL_c26 2)
      else
        if eqc_i17(c_v904478, '3') then
          (SomeUL_c26 3)
        else
          if eqc_i17(c_v904478, '4') then
            (SomeUL_c26 4)
          else
            if eqc_i17(c_v904478, '5') then
              (SomeUL_c26 5)
            else
              if eqc_i17(c_v904478, '6') then
                (SomeUL_c26 6)
              else
                if eqc_i17(c_v904478, '7') then
                  (SomeUL_c26 7)
                else
                  if eqc_i17(c_v904478, '8') then
                    (SomeUL_c26 8)
                  else
                    if eqc_i17(c_v904478, '9') then
                      (SomeUL_c26 9)
                    else
                      NoneUL_c25

val digit_of_charclo_i139 = fn c_v904479 ⇒ digit_of_char_i40(c_v904479)

fun nat_of_string_loop_i41(s_v904480, acc_v904481) =
  match s_v904480 with
  | EmptyString_c6  ⇒ (SomeUL_c26 acc_v904481)
  | String_c7 c_v904482 s_v904483 ⇒
    match digit_of_char_i40(c_v904482) with
    | NoneUL_c25  ⇒ NoneUL_c25
    | SomeUL_c26 n_v904484 ⇒
      nat_of_string_loop_i41(s_v904483,
                             addn_i12(muln_i14(acc_v904481, 10), n_v904484))
    end
  end

val nat_of_string_loopclo_i140 =
  fn s_v904485 acc_v904486 ⇒ nat_of_string_loop_i41(s_v904485, acc_v904486)

fun nat_of_string_i42(s_v904487) = nat_of_string_loop_i41(s_v904487, 0)

val nat_of_stringclo_i141 = fn s_v904488 ⇒ nat_of_string_i42(s_v904488)

fun contains_i51(c_v904489, s_v904490) =
  match s_v904490 with
  | EmptyString_c6  ⇒ 0
  | String_c7 c0_v904491 s_v904492 ⇒
    if eqc_i17(c_v904489, c0_v904491) then
      1
    else
      contains_i51(c_v904489, s_v904492)
  end

val containsclo_i142 =
  fn c_v904493 s_v904494 ⇒ contains_i51(c_v904493, s_v904494)

fun string_diff_i52(ans_v904495, s1_v904496, s2_v904497) =
  match s1_v904496 with
  | EmptyString_c6  ⇒
    match s2_v904497 with
    | EmptyString_c6  ⇒ fn e_v904498 ⇒ (SPairUUU_c44 EmptyString_c6 NULL)
    | String_c7 c2_v904499 s2_v904500 ⇒ fn e_v904501 ⇒ NULL
    end
  | String_c7 c1_v904502 s1_v904503 ⇒
    match s2_v904497 with
    | EmptyString_c6  ⇒ fn e_v904504 ⇒ NULL
    | String_c7 c2_v904505 s2_v904506 ⇒
      fn e_v904507 ⇒
        match ((((string_diffclo_i143) ans_v904495) s1_v904503) s2_v904506)
                NULL with
        | SPairUUU_c44 df_v904508 pf_v904509 ⇒
          (if eqc_i17(c1_v904502, c2_v904505) then
             fn e1_v904510 ⇒ (SPairUUU_c44 cats_i19("Y", df_v904508) NULL)
           else
             fn e1_v904511 ⇒
               (if contains_i51(c2_v904505, ans_v904495) then
                  fn e2_v904512 ⇒
                    (SPairUUU_c44 cats_i19("I", df_v904508) NULL)
                else
                  fn e2_v904513 ⇒
                    (SPairUUU_c44 cats_i19("N", df_v904508) NULL))
                 NULL)
            NULL
        end
    end
  end

val string_diffclo_i143 =
  fn ans_v904514 s1_v904515 s2_v904516 ⇒
    string_diff_i52(ans_v904514, s1_v904515, s2_v904516)

fun word_diff_i54(ans_v904517, guess_v904518) =
  match ans_v904517 with
  | Word_c17 s1_v904519 pf1_v904520 ⇒
    match guess_v904518 with
    | Word_c17 s2_v904521 pf2_v904522 ⇒
      match ((((string_diffclo_i143) s1_v904519) s1_v904519) s2_v904521) NULL with
      | SPairUUU_c44 s3_v904523 h_v904524 ⇒
        (SPairUUU_c44 (Word_c17 s3_v904523 NULL) NULL)
      end
    end
  end

val word_diffclo_i144 =
  fn ans_v904525 guess_v904526 ⇒ word_diff_i54(ans_v904525, guess_v904526)

fun eqw_i55(w1_v904527, w2_v904528) =
  match w1_v904527 with
  | Word_c17 s1_v904529 __v904530 ⇒
    match w2_v904528 with
    | Word_c17 s2_v904531 __v904532 ⇒ eqs_i21(s1_v904529, s2_v904531)
    end
  end

val eqwclo_i145 =
  fn w1_v904533 w2_v904534 ⇒ eqw_i55(w1_v904533, w2_v904534)

fun read_word_i62(__v904535) =
  ln __v904536 ⇒
    let s_v904537 = (readline_i33(NULL)) NULL in
    ((if eqn_i9(strlen_i20(s_v904537), 5) then
        fn e_v904538 ⇒ ln __v904539 ⇒ (Word_c17 s_v904537 NULL)
      else
        fn __v904540 ⇒
          ln __v904541 ⇒
            let __v904542 =
              (print_i34("please input a word with length of 5\n")) NULL
            in (read_word_i62(NULL)) NULL)
       NULL)
      NULL

val read_wordclo_i146 = fn __v904543 ⇒ read_word_i62(__v904543)

fun player_loop_i63(ans_v904544, repeat_v904545, c_v904546) =
  (if repeat_v904545 then
     fn c_v904547 ⇒
       ln __v904548 ⇒
         let guess_v904549 = (read_word_i62(NULL)) NULL in
         let c_v904550 = send(c_v904547, guess_v904549) in
         let __v904551 = recv(c_v904550) in
         match __v904551 with
         | (b_v904552, c_v904553) ⇒
           match (NULL, c_v904553) with
           | (pf_v904554, c_v904555) ⇒
             ((if b_v904552 then
                 ln c_v904556 __v904557 ⇒
                   let __v904558 = (print_i34("You Win!\n")) NULL in
                   close(c_v904556)
               else
                 ln c_v904559 __v904560 ⇒
                   let __v904561 = recv(c_v904559) in
                   match __v904561 with
                   | (diff_v904562, c_v904563) ⇒
                     match (NULL, c_v904563) with
                     | (pf_v904564, c_v904565) ⇒
                       match diff_v904562 with
                       | Word_c17 s_v904566 __v904567 ⇒
                         let __v904568 =
                           (print_i34(cats_i19(cats_i19(cats_i19(cats_i19(
                                                                 "Incorrect, hint: ",
                                                                 s_v904566),
                                                                 ". You have "),
                                                        string_of_nat_i39(
                                                        repeat_v904545.-1)),
                                               " more tries.\n")))
                             NULL
                         in
                         (player_loop_i63(NULL, repeat_v904545.-1, c_v904565))
                           NULL
                       end
                     end
                   end)
                c_v904555)
               NULL
           end
         end
   else
     fn c_v904569 ⇒
       ln __v904570 ⇒
         let __v904571 = recv(c_v904569) in
         match __v904571 with
         | (ans_v904572, c_v904573) ⇒
           match (NULL, c_v904573) with
           | (pf_v904574, c_v904575) ⇒
             match ans_v904572 with
             | Word_c17 s_v904576 __v904577 ⇒
               let __v904578 =
                 (print_i34(cats_i19(cats_i19("You Lose! The answer is ",
                                              s_v904576),
                                     ".\n")))
                   NULL
               in close(c_v904575)
             end
           end
         end)
    c_v904546

val player_loopclo_i147 =
  fn ans_v904579 repeat_v904580 c_v904581 ⇒
    player_loop_i63(ans_v904579, repeat_v904580, c_v904581)

fun player_i64(c_v904582) =
  ln __v904583 ⇒
    match (NULL, c_v904582) with
    | (ans_v904584, c_v904585) ⇒
      let __v904586 = recv(c_v904585) in
      match __v904586 with
      | (repeat_v904587, c_v904588) ⇒
        let __v904589 = (print_i34("Wordle Game\n")) NULL in
        let __v904590 =
          (print_i34("Please guess a word of length 5.\n")) NULL
        in
        let __v904591 =
          (print_i34(cats_i19(cats_i19("You have ",
                                       string_of_nat_i39(repeat_v904587)),
                              " tries.\n")))
            NULL
        in (player_loop_i63(NULL, repeat_v904587, c_v904588)) NULL
      end
    end

val playerclo_i148 = fn c_v904592 ⇒ player_i64(c_v904592)

fun get_at_i66(A_v904593, n_v904594, xs_v904595) =
  match xs_v904595 with
  | nilUU_c35  ⇒ fn e_v904596 ⇒ NULL
  | consUU_c36 x_v904597 xs_v904598 ⇒
    if n_v904594 then
      fn e_v904599 ⇒
        match ((((get_atclo_i149) NULL) n_v904594.-1) xs_v904598) NULL with
        | SPairUUU_c44 x0_v904600 pf_v904601 ⇒
          (SPairUUU_c44 x0_v904600 NULL)
        end
    else
      fn e_v904602 ⇒ (SPairUUU_c44 x_v904597 NULL)
  end

val get_atclo_i149 =
  fn A_v904603 n_v904604 xs_v904605 ⇒
    get_at_i66(A_v904603, n_v904604, xs_v904605)

fun rand_word_i67(__v904606) =
  ln __v904607 ⇒
    let r_v904608 = rand(0, 19) in
    match r_v904608 with
    | Between_c4 n_v904609 __v904610 pf_v904611 ⇒
      match ((((get_atclo_i149) NULL) n_v904609)
               (consUU_c36
                 (Word_c17 "route" NULL)
                 (consUU_c36
                   (Word_c17 "crash" NULL)
                   (consUU_c36
                     (Word_c17 "clown" NULL)
                     (consUU_c36
                       (Word_c17 "shaky" NULL)
                       (consUU_c36
                         (Word_c17 "vegan" NULL)
                         (consUU_c36
                           (Word_c17 "power" NULL)
                           (consUU_c36
                             (Word_c17 "trust" NULL)
                             (consUU_c36
                               (Word_c17 "enjoy" NULL)
                               (consUU_c36
                                 (Word_c17 "brain" NULL)
                                 (consUU_c36
                                   (Word_c17 "adopt" NULL)
                                   (consUU_c36
                                     (Word_c17 "tower" NULL)
                                     (consUU_c36
                                       (Word_c17 "shade" NULL)
                                       (consUU_c36
                                         (Word_c17 "delay" NULL)
                                         (consUU_c36
                                           (Word_c17 "twist" NULL)
                                           (consUU_c36
                                             (Word_c17 "alert" NULL)
                                             (consUU_c36
                                               (Word_c17 "choke" NULL)
                                               (consUU_c36
                                                 (Word_c17 "split" NULL)
                                                 (consUU_c36
                                                   (Word_c17 "rhyme" NULL)
                                                   (consUU_c36
                                                     (Word_c17 "muddy" NULL)
                                                     (consUU_c36
                                                       (Word_c17
                                                         "plant" NULL)
                                                       nilUU_c35)))))))))))))))))))))
              NULL with
      | SPairUUU_c44 w_v904612 __v904613 ⇒ w_v904612
      end
    end

val rand_wordclo_i150 = fn __v904614 ⇒ rand_word_i67(__v904614)

fun server_loop_i68(ans_v904615, repeat_v904616, c_v904617) =
  (if repeat_v904616 then
     fn c_v904618 ⇒
       ln __v904619 ⇒
         let __v904620 = recv(c_v904618) in
         match __v904620 with
         | (guess_v904621, c_v904622) ⇒
           let b_v904623 = eqw_i55(ans_v904615, guess_v904621) in
           let c_v904624 = send(c_v904622, b_v904623) in
           ((if b_v904623 then
               ln c_v904625 __v904626 ⇒ NULL
             else
               ln c_v904627 ⇒
                 match word_diff_i54(ans_v904615, guess_v904621) with
                 | SPairUUU_c44 df_v904628 pf_v904629 ⇒
                   ln __v904630 ⇒
                     let c_v904631 = send(c_v904627, df_v904628) in
                     (server_loop_i68(ans_v904615, repeat_v904616.-1,
                                      c_v904631))
                       NULL
                 end)
              c_v904624)
             NULL
         end
   else
     fn c_v904632 ⇒
       ln __v904633 ⇒ let c_v904634 = send(c_v904632, ans_v904615) in NULL)
    c_v904617

val server_loopclo_i151 =
  fn ans_v904635 repeat_v904636 c_v904637 ⇒
    server_loop_i68(ans_v904635, repeat_v904636, c_v904637)

fun server_i69(c_v904638) =
  ln __v904639 ⇒
    let ans_v904640 = (rand_word_i67(NULL)) NULL in
    let c_v904641 = send(c_v904638, 6) in
    (server_loop_i68(ans_v904640, 6, c_v904641)) NULL

val serverclo_i152 = fn c_v904642 ⇒ server_i69(c_v904642)

main =
  let c_v904643 = fork c_v904644 in (server_i69(c_v904644)) NULL in
  let c0_v904645 =
    fork c0_v904646 in
      let __v904647 = recv(c0_v904646) in
      match __v904647 with
      | (c_v904648, c0_v904649) ⇒
        let __v904650 = (player_i64(c_v904648)) NULL in
        let c0_v904651 = send(c0_v904649, NULL) in NULL
      end
  in
  let c0_v904652 = send(c0_v904645, c_v904643) in
  let __v904653 = recv(c0_v904652) in
  match __v904653 with
  | (__v904654, c0_v904655) ⇒ close(c0_v904655)
  end

trans3e success--------------------------

trans34 success--------------------------

