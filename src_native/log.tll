logical game_loop‹› (ans : nat) (repeat : nat) : proto = match repeat as _ in _ with O ⇒ !(n : nat) → !{_ : n ≡ ans} → end | S repeat ⇒ ?(guess : nat) → !(ord : order) → !{_ : ord ≡ (
(comparen) (ans)
(guess))} → match ord as _ in _ with EQ  ⇒ end | LT  ⇒ ((game_loop)
(ans) (repeat)) | GT  ⇒ ((game_loop) (ans)
(repeat))

logical game‹› : proto = !(lower : nat) → !(upper : nat) → !{ans : nat} → !{_ : (
(lten) (lower) (ans)) ≡ true} → !{_ : ((lten) (ans)
(upper)) ≡ true} → !(repeat : nat) → ((game_loop) (ans)
(repeat))

logical loop_ch‹› (ans : nat) (repeat : nat) : L = ch‹((game_loop)
(ans)
(repeat))›

logical loop_hc‹› (ans : nat) (repeat : nat) : L = hc‹((game_loop)
(ans)
(repeat))›

logical game_ch‹› : L = ch‹game›

logical game_hc‹› : L = hc‹game›

program read_nat‹› (_ : unit) : IO nat = let s ⇐ ((readline)
(())) in match ((nat_of_string)
(s)) as _ in _ with Some n ⇒ return n | None  ⇒ let _ ⇐ ((print)
(((String) (((Char) (O.+112)))
 (((String) (((Char) (O.+108)))
  (((String) (((Char) (O.+101)))
   (((String) (((Char) (O.+97)))
    (((String) (((Char) (O.+115)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+32)))
       (((String) (((Char) (O.+105)))
        (((String) (((Char) (O.+110)))
         (((String) (((Char) (O.+112)))
          (((String) (((Char) (O.+117)))
           (((String) (((Char) (O.+116)))
            (((String) (((Char) (O.+32)))
             (((String) (((Char) (O.+97)))
              (((String) (((Char) (O.+32)))
               (((String) (((Char) (O.+110)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+116)))
                  (((String) (((Char) (O.+117)))
                   (((String) (((Char) (O.+114)))
                    (((String) (((Char) (O.+97)))
                     (((String) (((Char) (O.+108)))
                      (((String) (((Char) (O.+32)))
                       (((String) (((Char) (O.+110)))
                        (((String) (((Char) (O.+117)))
                         (((String) (((Char) (O.+109)))
                          (((String) (((Char) (O.+98)))
                           (((String) (((Char) (O.+101)))
                            (((String) (((Char) (O.+114)))
                             (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) in (
(read_nat)
(()))

program player_loop‹› {ans : nat} (repeat : nat) (c : ((loop_hc) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_hc)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let ⟨ans, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in let _ ⇐ (
                         (print)
                         (((cats)
                          (((cats)
                           (((String) (((Char) (O.+89)))
                            (((String) (((Char) (O.+111)))
                             (((String) (((Char) (O.+117)))
                              (((String) (((Char) (O.+32)))
                               (((String) (((Char) (O.+76)))
                                (((String) (((Char) (O.+111)))
                                 (((String) (((Char) (O.+115)))
                                  (((String) (((Char) (O.+101)))
                                   (((String) (((Char) (O.+33)))
                                    (((String) (((Char) (O.+32)))
                                     (((String) (((Char) (O.+84)))
                                      (((String) (((Char) (O.+104)))
                                       (((String) (((Char) (O.+101)))
                                        (((String) (((Char) (O.+32)))
                                         (((String) (((Char) (O.+97)))
                                          (((String) (((Char) (O.+110)))
                                           (((String) (((Char) (O.+115)))
                                            (((String) (((Char) (O.+119)))
                                             (((String) (((Char) (O.+101)))
                                              (((String) (((Char) (O.+114)))
                                               (((String) (((Char) (O.+32)))
                                                (((String)
                                                 (((Char) (O.+105)))
                                                 (((String)
                                                  (((Char) (O.+115)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))
                           (((string_of_nat) (ans)))))
                          (((String) (((Char) (O.+46)))
                           (((String) (((Char) (O.+10))) (EmptyString)))))))) in close c) | S repeat ⇒ (fn (c : _) ⇒ let guess ⇐ (
                         (read_nat) (())) in let c ⇐ ((send c)
                         (guess)) in let ⟨ord, c⟩ ⇐ recv c in let ⟨{pf}, c⟩ ⇐ recv c in (
                         (match ord as ord0 in (∀ (_ : hc‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                          (game_loop) (ans) (repeat)) | GT  ⇒ ((game_loop)
                          (ans)
                          (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((String) (((Char) (O.+89)))
                           (((String) (((Char) (O.+111)))
                            (((String) (((Char) (O.+117)))
                             (((String) (((Char) (O.+32)))
                              (((String) (((Char) (O.+87)))
                               (((String) (((Char) (O.+105)))
                                (((String) (((Char) (O.+110)))
                                 (((String) (((Char) (O.+33)))
                                  (((String) (((Char) (O.+10)))
                                   (EmptyString)))))))))))))))))))) in close c) | LT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+108)))
                                           (((String) (((Char) (O.+101)))
                                            (((String) (((Char) (O.+115)))
                                             (((String) (((Char) (O.+115)))
                                              (((String) (((Char) (O.+101)))
                                               (((String) (((Char) (O.+114)))
                                                (((String) (((Char) (O.+44)))
                                                 (((String)
                                                  (((Char) (O.+32)))
                                                  (((String)
                                                   (((Char) (O.+121)))
                                                   (((String)
                                                    (((Char) (O.+111)))
                                                    (((String)
                                                     (((Char) (O.+117)))
                                                     (((String)
                                                      (((Char) (O.+32)))
                                                      (((String)
                                                       (((Char) (O.+104)))
                                                       (((String)
                                                        (((Char) (O.+97)))
                                                        (((String)
                                                         (((Char) (O.+118)))
                                                         (((String)
                                                          (((Char) (O.+101)))
                                                          (((String)
                                                           (((Char) (O.+32)))
                                                           (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat)
                          (c))) | GT  ⇒ (fn (c : _) ⇒ let _ ⇐ (
                          (print)
                          (((cats)
                           (((cats)
                            (((String) (((Char) (O.+84)))
                             (((String) (((Char) (O.+104)))
                              (((String) (((Char) (O.+101)))
                               (((String) (((Char) (O.+32)))
                                (((String) (((Char) (O.+97)))
                                 (((String) (((Char) (O.+110)))
                                  (((String) (((Char) (O.+115)))
                                   (((String) (((Char) (O.+119)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+114)))
                                      (((String) (((Char) (O.+32)))
                                       (((String) (((Char) (O.+105)))
                                        (((String) (((Char) (O.+115)))
                                         (((String) (((Char) (O.+32)))
                                          (((String) (((Char) (O.+103)))
                                           (((String) (((Char) (O.+114)))
                                            (((String) (((Char) (O.+101)))
                                             (((String) (((Char) (O.+97)))
                                              (((String) (((Char) (O.+116)))
                                               (((String) (((Char) (O.+101)))
                                                (((String)
                                                 (((Char) (O.+114)))
                                                 (((String)
                                                  (((Char) (O.+44)))
                                                  (((String)
                                                   (((Char) (O.+32)))
                                                   (((String)
                                                    (((Char) (O.+121)))
                                                    (((String)
                                                     (((Char) (O.+111)))
                                                     (((String)
                                                      (((Char) (O.+117)))
                                                      (((String)
                                                       (((Char) (O.+32)))
                                                       (((String)
                                                        (((Char) (O.+104)))
                                                        (((String)
                                                         (((Char) (O.+97)))
                                                         (((String)
                                                          (((Char) (O.+118)))
                                                          (((String)
                                                           (((Char)
                                                            (O.+101)))
                                                           (((String)
                                                            (((Char)
                                                             (O.+32)))
                                                            (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                            (((string_of_nat) (repeat)))))
                           (((String) (((Char) (O.+32)))
                            (((String) (((Char) (O.+109)))
                             (((String) (((Char) (O.+111)))
                              (((String) (((Char) (O.+114)))
                               (((String) (((Char) (O.+101)))
                                (((String) (((Char) (O.+32)))
                                 (((String) (((Char) (O.+116)))
                                  (((String) (((Char) (O.+114)))
                                   (((String) (((Char) (O.+105)))
                                    (((String) (((Char) (O.+101)))
                                     (((String) (((Char) (O.+115)))
                                      (((String) (((Char) (O.+46)))
                                       (((String) (((Char) (O.+10)))
                                        (EmptyString)))))))))))))))))))))))))))))) in (
                          (player_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program player‹› (c : game_hc) : IO unit = let ⟨lower, c⟩ ⇐ recv c in let ⟨upper, c⟩ ⇐ recv c in let ⟨{ans}, c⟩ ⇐ recv c in let ⟨{pf1}, c⟩ ⇐ recv c in let ⟨{pf2}, c⟩ ⇐ recv c in let ⟨repeat, c⟩ ⇐ recv c in let _ ⇐ (
(print)
(((cats)
 (((cats)
  (((cats)
   (((cats)
    (((String) (((Char) (O.+80)))
     (((String) (((Char) (O.+108)))
      (((String) (((Char) (O.+101)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+115)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32)))
           (((String) (((Char) (O.+109)))
            (((String) (((Char) (O.+97)))
             (((String) (((Char) (O.+107)))
              (((String) (((Char) (O.+101)))
               (((String) (((Char) (O.+32)))
                (((String) (((Char) (O.+97)))
                 (((String) (((Char) (O.+32)))
                  (((String) (((Char) (O.+103)))
                   (((String) (((Char) (O.+117)))
                    (((String) (((Char) (O.+101)))
                     (((String) (((Char) (O.+115)))
                      (((String) (((Char) (O.+115)))
                       (((String) (((Char) (O.+32)))
                        (((String) (((Char) (O.+98)))
                         (((String) (((Char) (O.+101)))
                          (((String) (((Char) (O.+116)))
                           (((String) (((Char) (O.+119)))
                            (((String) (((Char) (O.+101)))
                             (((String) (((Char) (O.+101)))
                              (((String) (((Char) (O.+110)))
                               (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    (((string_of_nat) (lower)))))
   (((String) (((Char) (O.+32)))
    (((String) (((Char) (O.+97)))
     (((String) (((Char) (O.+110)))
      (((String) (((Char) (O.+100)))
       (((String) (((Char) (O.+32))) (EmptyString)))))))))))))
  (((string_of_nat) (upper)))))
 (((String) (((Char) (O.+46)))
  (((String) (((Char) (O.+10))) (EmptyString)))))))) in let _ ⇐ ((print)
(((cats)
 (((cats)
  (((String) (((Char) (O.+89)))
   (((String) (((Char) (O.+111)))
    (((String) (((Char) (O.+117)))
     (((String) (((Char) (O.+32)))
      (((String) (((Char) (O.+104)))
       (((String) (((Char) (O.+97)))
        (((String) (((Char) (O.+118)))
         (((String) (((Char) (O.+101)))
          (((String) (((Char) (O.+32))) (EmptyString)))))))))))))))))))
  (((string_of_nat) (repeat)))))
 (((String) (((Char) (O.+32)))
  (((String) (((Char) (O.+116)))
   (((String) (((Char) (O.+114)))
    (((String) (((Char) (O.+105)))
     (((String) (((Char) (O.+101)))
      (((String) (((Char) (O.+115)))
       (((String) (((Char) (O.+46)))
        (((String) (((Char) (O.+10))) (EmptyString)))))))))))))))))))) in (
(player_loop) (ans) (repeat)
(c))

program server_loop‹› (ans : nat) (repeat : nat) (c : ((loop_ch) 
(ans)
(repeat))) : IO unit = ((match repeat as repeat0 in (∀ (_ : ((loop_ch)
                         (ans)
                         (repeat0))) → IO unit) with O ⇒ (fn (c : _) ⇒ let c ⇐ (
                         (send c) (ans)) in let c ⇐ ((send c)
                         (refl)) in close c) | S repeat ⇒ (fn (c : _) ⇒ let ⟨n, c⟩ ⇐ recv c in let ord = (
                         (comparen) (ans) (n)) in let c ⇐ ((send c)
                         (ord)) in let c ⇐ ((send c)
                         (refl)) in ((match ord as ord0 in (∀ (_ : ch‹match ord0 as _ in _ with EQ  ⇒ end | LT  ⇒ (
                                      (game_loop) (ans)
                                      (repeat)) | GT  ⇒ ((game_loop) 
                                      (ans)
                                      (repeat))›) → IO unit) with EQ  ⇒ (fn (c : _) ⇒ close c) | LT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat)
                                      (c))) | GT  ⇒ (fn (c : _) ⇒ (
                                      (server_loop) (ans) (repeat) (c))))
                         (c))))
(c))

program server‹› (c : game_ch) : IO unit = let lower = O.+0 in let offset = O.+128 in let res ⇐ rand lower offset in match res as _ in _ with Between ans
pf1 pf2 ⇒ let repeat = O.+6 in let c ⇐ ((send c)
(lower)) in let c ⇐ ((send c)
(((addn) (lower) (offset)))) in let c ⇐ ((send c)
(ans)) in let c ⇐ ((send c) (pf1)) in let c ⇐ ((send c)
(pf2)) in let c ⇐ ((send c) (repeat)) in ((server_loop) (ans) (repeat)
(c))

program main‹› : IO unit = let c ⇐ fork (c : game_ch) in ((server)
(c)) in let c0 ⇐ fork (c0 : ch‹?(_ : game_hc) → !(_ : unit) → end›) in let ⟨c, c0⟩ ⇐ recv c0 in let _ ⇐ (
(player) (c)) in let c0 ⇐ ((send c0)
(())) in close c0 in let c0 ⇐ ((send c0)
(c)) in let ⟨_, c0⟩ ⇐ recv c0 in close c0

parsing success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v381 : bool) (b2_v382 : bool) ⇒
    match b1_v381 as __v383 in ??1 with
    | true ⇒ b2_v382 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v386 : bool) (b2_v387 : bool) ⇒
    match b1_v386 as __v388 in ??2 with
    | true ⇒ true | false ⇒ b2_v387
    end

program notb_i3 : bool → bool =
  fn (b_v390 : bool) ⇒
    match b_v390 as __v391 in ??3 with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v394 : bool) (b2_v395 : bool) ⇒
    match b1_v394 as __v396 in ??4 with
    | true ⇒
      match b2_v395 as __v397 in ??6 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v395 as __v398 in ??5 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v401 : nat) (y_v402 : nat) ⇒
    match x_v401 as __v403 in ??7 with
    | O ⇒ true
    | S x_v404 ⇒
      match y_v402 as __v405 in ??8 with
      | O ⇒ false | S y_v406 ⇒ (lten_i5 x_v404 y_v406)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v409 : nat) (y_v410 : nat) ⇒
    match x_v409 as __v411 in ??9 with
    | O ⇒
      match y_v410 as __v412 in ??11 with
      | O ⇒ true | S __v413 ⇒ false
      end
    | S x_v414 ⇒
      match y_v410 as __v415 in ??10 with
      | O ⇒ true | S y_v416 ⇒ (gten_i6 x_v414 y_v416)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v419 : nat) (y_v420 : nat) ⇒
    match x_v419 as __v421 in ??12 with
    | O ⇒
      match y_v420 as __v422 in ??14 with
      | O ⇒ false | S y_v423 ⇒ true
      end
    | S x_v424 ⇒
      match y_v420 as __v425 in ??13 with
      | O ⇒ false | S y_v426 ⇒ (ltn_i7 x_v424 y_v426)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v429 : nat) (y_v430 : nat) ⇒
    match x_v429 as __v431 in ??15 with
    | O ⇒ false
    | S x_v432 ⇒
      match y_v430 as __v433 in ??16 with
      | O ⇒ true | S y_v434 ⇒ (gtn_i8 x_v432 y_v434)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v437 : nat) (y_v438 : nat) ⇒
    match x_v437 as __v439 in ??17 with
    | O ⇒
      match y_v438 as __v440 in ??19 with
      | O ⇒ true | S __v441 ⇒ false
      end
    | S x_v442 ⇒
      match y_v438 as __v443 in ??18 with
      | O ⇒ false | S y_v444 ⇒ (eqn_i9 x_v442 y_v444)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v447 : nat) (n2_v448 : nat) ⇒
    match n1_v447 as __v449 in ??20 with
    | O ⇒
      match n2_v448 as __v450 in ??22 with
      | O ⇒ EQ_c3‹› | S __v451 ⇒ LT_c1‹›
      end
    | S n1_v452 ⇒
      match n2_v448 as __v453 in ??21 with
      | O ⇒ GT_c2‹› | S n2_v454 ⇒ (comparen_i10 n1_v452 n2_v454)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v456 : nat) ⇒
    match x_v456 as __v457 in ??23 with
    | O ⇒ 0 | S x_v458 ⇒ x_v458
    end

program addn_i12 : nat → nat → nat =
  fn (x_v461 : nat) (y_v462 : nat) ⇒
    match x_v461 as __v463 in ??24 with
    | O ⇒ y_v462 | S x_v464 ⇒ (addn_i12 x_v464 y_v462).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v467 : nat) (y_v468 : nat) ⇒
    match y_v468 as __v469 in ??25 with
    | O ⇒ x_v467 | S y_v470 ⇒ (subn_i13 (pred_i11 x_v467) y_v470)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v473 : nat) (y_v474 : nat) ⇒
    match x_v473 as __v475 in ??26 with
    | O ⇒ 0 | S x_v476 ⇒ (addn_i12 y_v474 (muln_i14 x_v476 y_v474))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v479 : nat) (y_v480 : nat) ⇒
    match (ltn_i7 x_v479 y_v480) as __v481 in ??27 with
    | true ⇒ 0 | false ⇒ (divn_i15 (subn_i13 x_v479 y_v480) y_v480).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v484 : nat) (y_v485 : nat) ⇒
    (subn_i13 x_v484 (muln_i14 (divn_i15 x_v484 y_v485) y_v485))

inductive between_d2 (lower_v486 : nat) (upper_v487 : nat) : L =
| Between_c4 of
    (lower_v488 : nat) (upper_v489 : nat) (n_v490 : nat)
    {pf1_v491 : (lten_i5 lower_v488 n_v490) ≡ true}
    {pf2_v492 : (lten_i5 n_v490 upper_v489) ≡ true}
    : (between_d2 lower_v488 upper_v489)

inductive char_d3 : U =
| Char_c5 of (n_v493 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v496 : char_d3) (c2_v497 : char_d3) ⇒
    match c1_v496 as __v498 in ??30 with
    | Char_c5 n1_v499 ⇒
      match c2_v497 as __v500 in ??31 with
      | Char_c5 n2_v501 ⇒ (eqn_i9 n1_v499 n2_v501)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v504 : char_d3) (c2_v505 : char_d3) ⇒
    match c1_v504 as __v506 in ??32 with
    | Char_c5 n1_v507 ⇒
      match c2_v505 as __v508 in ??33 with
      | Char_c5 n2_v509 ⇒ (comparen_i10 n1_v507 n2_v509)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v510 : char_d3) (s_v511 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v514 : string_d4) (s2_v515 : string_d4) ⇒
    match s1_v514 as __v516 in ??34 with
    | EmptyString_c6  ⇒ s2_v515
    | String_c7 c_v517 s1_v518 ⇒
      (String_c7‹› c_v517 (cats_i19 s1_v518 s2_v515))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v520 : string_d4) ⇒
    match s_v520 as __v521 in ??35 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v522 s_v523 ⇒ (strlen_i20 s_v523).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v526 : string_d4) (s2_v527 : string_d4) ⇒
    match s1_v526 as __v528 in ??36 with
    | EmptyString_c6  ⇒
      match s2_v527 as __v529 in ??38 with
      | EmptyString_c6  ⇒ true | String_c7 __v530 __v531 ⇒ false
      end
    | String_c7 c1_v532 s1_v533 ⇒
      match s2_v527 as __v534 in ??37 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v535 s2_v536 ⇒
        (andb_i1 (eqc_i17 c1_v532 c2_v535) (eqs_i21 s1_v533 s2_v536))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v539 : string_d4) (s2_v540 : string_d4) ⇒
    match s1_v539 as __v541 in ??39 with
    | EmptyString_c6  ⇒
      match s2_v540 as __v542 in ??42 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v543 __v544 ⇒ LT_c1‹›
      end
    | String_c7 c1_v545 s1_v546 ⇒
      match s2_v540 as __v547 in ??40 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v548 s2_v549 ⇒
        match (comparec_i18 c1_v545 c2_v548) as __v550 in ??41 with
        | EQ_c3  ⇒ (compares_i22 s1_v546 s2_v549) | LT_c1  ⇒ LT_c1‹›
        | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s551, t_s552›
  (A_v553 : Type‹s_s551›) : Type‹t_s552›
=
| None_c8 of
    ‹s_s554, t_s555› (A_v556 : Type‹s_s554›)
    : (option_d5‹s_s554, t_s555› A_v556)
| Some_c9 of
    ‹s_s557, t_s558› (A_v559 : Type‹s_s557›) (x_v560 : A_v559)
    : (option_d5‹s_s557, t_s558› A_v559)

program and_then_i23 ‹s_s561, r_s562, t_s563› :
  ∀ {A_v564 : Type‹s_s561›} →
    ∀ {B_v565 : Type‹r_s562›} →
      (option_d5‹??43, t_s563› A_v564) →
        A_v564 → (option_d5‹??44, t_s563› B_v565) ⊸
          (option_d5‹??45, t_s563› B_v565)
=
  fn {A_v569 : Type‹s_s561›} {B_v570 : Type‹r_s562›}
     (opt_v571 : (option_d5‹??43, t_s563› A_v569)) ⇒
    ln (f_v572 : ??46) ⇒
      match opt_v571 as __v573 in ??47 with
      | None_c8  ⇒ None_c8‹??50, ??49›
      | Some_c9 x_v574 ⇒ (f_v572 x_v574)
      end

inductive list_d6 ‹s_s575, t_s576›
  (A_v577 : Type‹s_s575›) : Type‹t_s576›
=
| nil_c10 of
    ‹s_s578, t_s579› (A_v580 : Type‹s_s578›)
    : (list_d6‹s_s578, t_s579› A_v580)
| cons_c11 of
    ‹s_s581, t_s582› (A_v583 : Type‹s_s581›) (hd_v584 : A_v583)
    (tl_v585 : (list_d6‹s_s581, t_s582› A_v583))
    : (list_d6‹s_s581, t_s582› A_v583)

program len_i24 ‹s_s586, t_s587› :
  ∀ {A_v588 : Type‹s_s586›} →
    (list_d6‹??51, t_s587› A_v588) →
      nat ⊗ (list_d6‹??52, t_s587› A_v588)
=
  fn {A_v591 : Type‹s_s586›}
     (xs_v592 : (list_d6‹??51, t_s587› A_v591)) ⇒
    match xs_v592 as __v593 in ??53 with
    | nil_c10  ⇒ ⟨0, nil_c10‹??63, ??62›⟩
    | cons_c11 x_v594 xs_v595 ⇒
      match (len_i24‹??56, ??55› ??54 xs_v595) as __v596 in ??57 with
      | ⟨n_v597, xs_v598⟩ ⇒
        ⟨n_v597.+1, (cons_c11‹??60, ??59› x_v594 xs_v598)⟩
      end
    end

program append_i25 ‹s_s599, t_s600› :
  ∀ {A_v601 : Type‹s_s599›} →
    (list_d6‹??64, t_s600› A_v601) →
      (list_d6‹??65, t_s600› A_v601) ⊸ (list_d6‹??67, ??66› A_v601)
=
  fn {A_v604 : Type‹s_s599›}
     (xs_v605 : (list_d6‹??64, t_s600› A_v604)) ⇒
    ln (ys_v606 : ??68) ⇒
      match xs_v605 as __v607 in ??69 with
      | nil_c10  ⇒ ys_v606
      | cons_c11 x_v608 xs_v609 ⇒
        (cons_c11‹??75, ??74›
          x_v608 (append_i25‹??72, ??71› ??70 xs_v609 ys_v606))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v611 : unit) ⇒
    ⇑(b_v612 : bool) ⇒
      match b_v612 as __v613 in ??76 with
      | true ⇒ ⇓(__v614 : string_d4) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v616 : unit) ⇒
    ⇑(b_v617 : bool) ⇒
      match b_v617 as __v618 in ??77 with
      | true ⇒ ⇑(__v619 : string_d4) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v621 : unit) ⇒
    ⇑(b_v622 : bool) ⇒
      match b_v622 as __v623 in ??78 with
      | true ⇒ ⇑(__v624 : string_d4) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d4 =
  fn (__v626 : unit) ⇒
    let ch_v627 ⇐ open stdin in
    let ch_v628 ⇐ (send ch_v627 true) in
    let __v629 ⇐ recv ch_v628 in
    match __v629 as __v630 in ??79 with
    | ⟨s_v631, ch_v632⟩ ⇒
      let ch_v633 ⇐ (send ch_v632 false) in
      let __v634 ⇐ close ch_v633 in return s_v631
    end

program print_i33 : string_d4 → IO unit =
  fn (s_v636 : string_d4) ⇒
    let ch_v637 ⇐ open stdout in
    let ch_v638 ⇐ (send ch_v637 true) in
    let ch_v639 ⇐ (send ch_v638 s_v636) in
    let ch_v640 ⇐ (send ch_v639 false) in close ch_v640

program prerr_i34 : string_d4 → IO unit =
  fn (s_v642 : string_d4) ⇒
    let ch_v643 ⇐ open stderr in
    let ch_v644 ⇐ (send ch_v643 true) in
    let ch_v645 ⇐ (send ch_v644 s_v642) in
    let ch_v646 ⇐ (send ch_v645 false) in close ch_v646

program digits_i35 : (list_d6‹??80, U› ??81) =
  (cons_c11‹??114, ??113›
    "0"
    (cons_c11‹??111, ??110›
      "1"
      (cons_c11‹??108, ??107›
        "2"
        (cons_c11‹??105, ??104›
          "3"
          (cons_c11‹??102, ??101›
            "4"
            (cons_c11‹??99, ??98›
              "5"
              (cons_c11‹??96, ??95›
                "6"
                (cons_c11‹??93, ??92›
                  "7"
                  (cons_c11‹??90, ??89›
                    "8"
                    (cons_c11‹??87, ??86› "9" nil_c10‹??84, ??83›))))))))))

program get_at_i36 :
  ∀ {A_v647 : U} →
    nat → (list_d6‹??115, U› A_v647) → A_v647 → A_v647
=
  fn {A_v651 : U} (n_v652 : nat) (xs_v653 : (list_d6‹??115, U› A_v651))
     (a_v654 : A_v651) ⇒
    match n_v652 as __v655 in ??116 with
    | O ⇒
      match xs_v653 as __v656 in ??119 with
      | nil_c10  ⇒ a_v654 | cons_c11 x_v657 __v658 ⇒ x_v657
      end
    | S n_v659 ⇒
      match xs_v653 as __v660 in ??117 with
      | nil_c10  ⇒ a_v654
      | cons_c11 __v661 xs_v662 ⇒ (get_at_i36 ??118 n_v659 xs_v662 a_v654)
      end
    end

program string_of_digit_i37 : nat → string_d4 =
  fn (n_v664 : nat) ⇒
    (get_at_i36 ??120 n_v664 digits_i35 EmptyString_c6‹›)

program string_of_nat_i38 : nat → string_d4 =
  fn (n_v666 : nat) ⇒
    let s_v667 = (string_of_digit_i37 (modn_i16 n_v666 10)) in
    let n_v668 = (divn_i15 n_v666 10) in
    match (ltn_i7 0 n_v668) as __v669 in ??121 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v668) s_v667)
    | false ⇒ s_v667
    end

program digit_of_char_i39 : char_d3 → (option_d5‹??122, L› nat) =
  fn (c_v671 : char_d3) ⇒
    match (eqc_i17 c_v671 '0') as __v672 in ??123 with
    | true ⇒ (Some_c9‹??165, ??164› 0)
    | false ⇒
      match (eqc_i17 c_v671 '1') as __v673 in ??124 with
      | true ⇒ (Some_c9‹??162, ??161› 1)
      | false ⇒
        match (eqc_i17 c_v671 '2') as __v674 in ??125 with
        | true ⇒ (Some_c9‹??159, ??158› 2)
        | false ⇒
          match (eqc_i17 c_v671 '3') as __v675 in ??126 with
          | true ⇒ (Some_c9‹??156, ??155› 3)
          | false ⇒
            match (eqc_i17 c_v671 '4') as __v676 in ??127 with
            | true ⇒ (Some_c9‹??153, ??152› 4)
            | false ⇒
              match (eqc_i17 c_v671 '5') as __v677 in ??128 with
              | true ⇒ (Some_c9‹??150, ??149› 5)
              | false ⇒
                match (eqc_i17 c_v671 '6') as __v678 in ??129 with
                | true ⇒ (Some_c9‹??147, ??146› 6)
                | false ⇒
                  match (eqc_i17 c_v671 '7') as __v679 in ??130 with
                  | true ⇒ (Some_c9‹??144, ??143› 7)
                  | false ⇒
                    match (eqc_i17 c_v671 '8') as __v680 in ??131 with
                    | true ⇒ (Some_c9‹??141, ??140› 8)
                    | false ⇒
                      match (eqc_i17 c_v671 '9') as __v681 in ??132 with
                      | true ⇒ (Some_c9‹??138, ??137› 9)
                      | false ⇒ None_c8‹??135, ??134›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d4 → nat → (option_d5‹??166, L› nat)
=
  fn (s_v684 : string_d4) (acc_v685 : nat) ⇒
    match s_v684 as __v686 in ??167 with
    | EmptyString_c6  ⇒ (Some_c9‹??174, ??173› acc_v685)
    | String_c7 c_v687 s_v688 ⇒
      match (digit_of_char_i39 c_v687) as __v689 in ??168 with
      | None_c8  ⇒ None_c8‹??171, ??170›
      | Some_c9 n_v690 ⇒
        (nat_of_string_loop_i40
          s_v688 (addn_i12 (muln_i14 acc_v685 10) n_v690))
      end
    end

program nat_of_string_i41 : string_d4 → (option_d5‹??175, L› nat) =
  fn (s_v692 : string_d4) ⇒ (nat_of_string_loop_i40 s_v692 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v695 : nat) (repeat_v696 : nat) ⇒
    match repeat_v696 as __v697 in ??176 with
    | O ⇒ ⇑(n_v698 : nat) ⇒ ⇑{__v699 : n_v698 ≡ ans_v695} ⇒ end
    | S repeat_v700 ⇒
      ⇓(guess_v701 : nat) ⇒
        ⇑(ord_v702 : order_d1) ⇒
          ⇑{__v703 : ord_v702 ≡ (comparen_i10 ans_v695 guess_v701)} ⇒
            match ord_v702 as __v704 in ??178 with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v695 repeat_v700)
            | GT_c2  ⇒ (game_loop_i42 ans_v695 repeat_v700)
            end
    end

logical game_i43 : proto =
  ⇑(lower_v705 : nat) ⇒
    ⇑(upper_v706 : nat) ⇒
      ⇑{ans_v707 : nat} ⇒
        ⇑{__v708 : (lten_i5 lower_v705 ans_v707) ≡ true} ⇒
          ⇑{__v709 : (lten_i5 ans_v707 upper_v706) ≡ true} ⇒
            ⇑(repeat_v710 : nat) ⇒ (game_loop_i42 ans_v707 repeat_v710)

logical loop_ch_i44 : nat → nat → L =
  fn (ans_v713 : nat) (repeat_v714 : nat) ⇒
    ch⟨(game_loop_i42 ans_v713 repeat_v714)⟩

logical loop_hc_i45 : nat → nat → L =
  fn (ans_v717 : nat) (repeat_v718 : nat) ⇒
    hc⟨(game_loop_i42 ans_v717 repeat_v718)⟩

logical game_ch_i46 : L = ch⟨game_i43⟩

logical game_hc_i47 : L = hc⟨game_i43⟩

program read_nat_i48 : unit → IO nat =
  fn (__v720 : unit) ⇒
    let s_v721 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v721) as __v722 in ??182 with
    | Some_c9 n_v723 ⇒ return n_v723
    | None_c8  ⇒
      let __v724 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v725 : nat} →
    ∀ (repeat_v726 : nat) →
      (loop_hc_i45 ans_v725 repeat_v726) → IO unit
=
  fn {ans_v728 : nat} (repeat_v729 : nat)
     (c_v730 : (loop_hc_i45 ans_v728 repeat_v729)) ⇒
    (match repeat_v729 as repeat0_v731 in
       (loop_hc_i45 ans_v728 repeat0_v731) → IO unit with
     | O ⇒
       fn (c_v733 : ??190) ⇒
         let __v734 ⇐ recv c_v733 in
         match __v734 as __v735 in ??192 with
         | ⟨ans_v736, c_v737⟩ ⇒
           let __v738 ⇐ recv c_v737 in
           match __v738 as __v739 in ??191 with
           | ⟨{pf_v740}, c_v741⟩ ⇒
             let __v742 ⇐
               (print_i33
                 (cats_i19
                   (cats_i19
                     "You Lose! The answer is " (string_of_nat_i38 ans_v736))
                   ".\n"))
             in close c_v741
           end
         end
     | S repeat_v743 ⇒
       fn (c_v744 : ??183) ⇒
         let guess_v745 ⇐ (read_nat_i48 ()) in
         let c_v746 ⇐ (send c_v744 guess_v745) in
         let __v747 ⇐ recv c_v746 in
         match __v747 as __v748 in ??189 with
         | ⟨ord_v749, c_v750⟩ ⇒
           let __v751 ⇐ recv c_v750 in
           match __v751 as __v752 in ??188 with
           | ⟨{pf_v753}, c_v754⟩ ⇒
             (match ord_v749 as ord0_v755 in
                hc⟨match ord0_v755 as __v757 in ??184 with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v728 repeat_v743)
                     | GT_c2  ⇒ (game_loop_i42 ans_v728 repeat_v743)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v758 : ??187) ⇒
                  let __v759 ⇐ (print_i33 "You Win!\n") in close c_v758
              | LT_c1  ⇒
                fn (c_v760 : ??186) ⇒
                  let __v761 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v743))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v728 repeat_v743 c_v760)
              | GT_c2  ⇒
                fn (c_v762 : ??185) ⇒
                  let __v763 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v743))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v728 repeat_v743 c_v762)
              end c_v754)
           end
         end
     end c_v730)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v765 : game_hc_i47) ⇒
    let __v766 ⇐ recv c_v765 in
    match __v766 as __v767 in ??198 with
    | ⟨lower_v768, c_v769⟩ ⇒
      let __v770 ⇐ recv c_v769 in
      match __v770 as __v771 in ??197 with
      | ⟨upper_v772, c_v773⟩ ⇒
        let __v774 ⇐ recv c_v773 in
        match __v774 as __v775 in ??196 with
        | ⟨{ans_v776}, c_v777⟩ ⇒
          let __v778 ⇐ recv c_v777 in
          match __v778 as __v779 in ??195 with
          | ⟨{pf1_v780}, c_v781⟩ ⇒
            let __v782 ⇐ recv c_v781 in
            match __v782 as __v783 in ??194 with
            | ⟨{pf2_v784}, c_v785⟩ ⇒
              let __v786 ⇐ recv c_v785 in
              match __v786 as __v787 in ??193 with
              | ⟨repeat_v788, c_v789⟩ ⇒
                let __v790 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v768))
                          " and ")
                        (string_of_nat_i38 upper_v772))
                      ".\n"))
                in
                let __v791 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19 "You have " (string_of_nat_i38 repeat_v788))
                      " tries.\n"))
                in (player_loop_i49 ans_v776 repeat_v788 c_v789)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v792 : nat) →
    ∀ (repeat_v793 : nat) →
      (loop_ch_i44 ans_v792 repeat_v793) → IO unit
=
  fn (ans_v795 : nat) (repeat_v796 : nat)
     (c_v797 : (loop_ch_i44 ans_v795 repeat_v796)) ⇒
    (match repeat_v796 as repeat0_v798 in
       (loop_ch_i44 ans_v795 repeat0_v798) → IO unit with
     | O ⇒
       fn (c_v800 : ??206) ⇒
         let c_v801 ⇐ (send c_v800 ans_v795) in
         let c_v802 ⇐ (send c_v801 refl ??207) in close c_v802
     | S repeat_v803 ⇒
       fn (c_v804 : ??199) ⇒
         let __v805 ⇐ recv c_v804 in
         match __v805 as __v806 in ??205 with
         | ⟨n_v807, c_v808⟩ ⇒
           let ord_v809 = (comparen_i10 ans_v795 n_v807) in
           let c_v810 ⇐ (send c_v808 ord_v809) in
           let c_v811 ⇐ (send c_v810 refl ??200) in
           (match ord_v809 as ord0_v812 in
              ch⟨match ord0_v812 as __v814 in ??201 with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v795 repeat_v803)
                   | GT_c2  ⇒ (game_loop_i42 ans_v795 repeat_v803)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v815 : ??204) ⇒ close c_v815
            | LT_c1  ⇒
              fn (c_v816 : ??203) ⇒
                (server_loop_i51 ans_v795 repeat_v803 c_v816)
            | GT_c2  ⇒
              fn (c_v817 : ??202) ⇒
                (server_loop_i51 ans_v795 repeat_v803 c_v817)
            end c_v811)
         end
     end c_v797)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v819 : game_ch_i46) ⇒
    let lower_v820 = 0 in
    let offset_v821 = 128 in
    let res_v822 ⇐ rand lower_v820 offset_v821 in
    match res_v822 as __v823 in ??208 with
    | Between_c4 ans_v824 pf1_v825 pf2_v826 ⇒
      let repeat_v827 = 6 in
      let c_v828 ⇐ (send c_v819 lower_v820) in
      let c_v829 ⇐ (send c_v828 (addn_i12 lower_v820 offset_v821)) in
      let c_v830 ⇐ (send c_v829 ans_v824) in
      let c_v831 ⇐ (send c_v830 pf1_v825) in
      let c_v832 ⇐ (send c_v831 pf2_v826) in
      let c_v833 ⇐ (send c_v832 repeat_v827) in
      (server_loop_i51 ans_v824 repeat_v827 c_v833)
    end

program main_i53 : IO unit =
  let c_v834 ⇐ fork (c_v835 : game_ch_i46) in (server_i52 c_v835) in
  let c0_v836 ⇐
    fork (c0_v837 :
      ch⟨⇓(__v838 : game_hc_i47) ⇒ ⇑(__v839 : unit) ⇒ end⟩)
    in
      let __v840 ⇐ recv c0_v837 in
      match __v840 as __v841 in ??209 with
      | ⟨c_v842, c0_v843⟩ ⇒
        let __v844 ⇐ (player_i50 c_v842) in
        let c0_v845 ⇐ (send c0_v843 ()) in close c0_v845
      end
  in
  let c0_v846 ⇐ (send c0_v836 c_v834) in
  let __v847 ⇐ recv c0_v846 in
  match __v847 as __v848 in ??210 with
  | ⟨__v849, c0_v850⟩ ⇒ close c0_v850
  end

trans01 success--------------------------

inductive order_d1 : U =
| LT_c1 of : order_d1 | GT_c2 of : order_d1 | EQ_c3 of : order_d1

program andb_i1 : bool → bool → bool =
  fn (b1_v34839 : bool) (b2_v34840 : bool) ⇒
    match b1_v34839 as __v34841 in bool with
    | true ⇒ b2_v34840 | false ⇒ false
    end

program orb_i2 : bool → bool → bool =
  fn (b1_v34844 : bool) (b2_v34845 : bool) ⇒
    match b1_v34844 as __v34846 in bool with
    | true ⇒ true | false ⇒ b2_v34845
    end

program notb_i3 : bool → bool =
  fn (b_v34848 : bool) ⇒
    match b_v34848 as __v34849 in bool with
    | true ⇒ false | false ⇒ true
    end

program compareb_i4 : bool → bool → order_d1 =
  fn (b1_v34852 : bool) (b2_v34853 : bool) ⇒
    match b1_v34852 as __v34854 in order_d1 with
    | true ⇒
      match b2_v34853 as __v34855 in order_d1 with
      | true ⇒ EQ_c3‹› | false ⇒ GT_c2‹›
      end
    | false ⇒
      match b2_v34853 as __v34856 in order_d1 with
      | true ⇒ LT_c1‹› | false ⇒ EQ_c3‹›
      end
    end

program lten_i5 : nat → nat → bool =
  fn (x_v34859 : nat) (y_v34860 : nat) ⇒
    match x_v34859 as __v34861 in bool with
    | O ⇒ true
    | S x_v34862 ⇒
      match y_v34860 as __v34863 in bool with
      | O ⇒ false | S y_v34864 ⇒ (lten_i5 x_v34862 y_v34864)
      end
    end

program gten_i6 : nat → nat → bool =
  fn (x_v34867 : nat) (y_v34868 : nat) ⇒
    match x_v34867 as __v34869 in bool with
    | O ⇒
      match y_v34868 as __v34870 in bool with
      | O ⇒ true | S __v34871 ⇒ false
      end
    | S x_v34872 ⇒
      match y_v34868 as __v34873 in bool with
      | O ⇒ true | S y_v34874 ⇒ (gten_i6 x_v34872 y_v34874)
      end
    end

program ltn_i7 : nat → nat → bool =
  fn (x_v34877 : nat) (y_v34878 : nat) ⇒
    match x_v34877 as __v34879 in bool with
    | O ⇒
      match y_v34878 as __v34880 in bool with
      | O ⇒ false | S y_v34881 ⇒ true
      end
    | S x_v34882 ⇒
      match y_v34878 as __v34883 in bool with
      | O ⇒ false | S y_v34884 ⇒ (ltn_i7 x_v34882 y_v34884)
      end
    end

program gtn_i8 : nat → nat → bool =
  fn (x_v34887 : nat) (y_v34888 : nat) ⇒
    match x_v34887 as __v34889 in bool with
    | O ⇒ false
    | S x_v34890 ⇒
      match y_v34888 as __v34891 in bool with
      | O ⇒ true | S y_v34892 ⇒ (gtn_i8 x_v34890 y_v34892)
      end
    end

program eqn_i9 : nat → nat → bool =
  fn (x_v34895 : nat) (y_v34896 : nat) ⇒
    match x_v34895 as __v34897 in bool with
    | O ⇒
      match y_v34896 as __v34898 in bool with
      | O ⇒ true | S __v34899 ⇒ false
      end
    | S x_v34900 ⇒
      match y_v34896 as __v34901 in bool with
      | O ⇒ false | S y_v34902 ⇒ (eqn_i9 x_v34900 y_v34902)
      end
    end

program comparen_i10 : nat → nat → order_d1 =
  fn (n1_v34905 : nat) (n2_v34906 : nat) ⇒
    match n1_v34905 as __v34907 in order_d1 with
    | O ⇒
      match n2_v34906 as __v34908 in order_d1 with
      | O ⇒ EQ_c3‹› | S __v34909 ⇒ LT_c1‹›
      end
    | S n1_v34910 ⇒
      match n2_v34906 as __v34911 in order_d1 with
      | O ⇒ GT_c2‹›
      | S n2_v34912 ⇒ (comparen_i10 n1_v34910 n2_v34912)
      end
    end

program pred_i11 : nat → nat =
  fn (x_v34914 : nat) ⇒
    match x_v34914 as __v34915 in nat with
    | O ⇒ 0 | S x_v34916 ⇒ x_v34916
    end

program addn_i12 : nat → nat → nat =
  fn (x_v34919 : nat) (y_v34920 : nat) ⇒
    match x_v34919 as __v34921 in nat with
    | O ⇒ y_v34920 | S x_v34922 ⇒ (addn_i12 x_v34922 y_v34920).+1
    end

program subn_i13 : nat → nat → nat =
  fn (x_v34925 : nat) (y_v34926 : nat) ⇒
    match y_v34926 as __v34927 in nat with
    | O ⇒ x_v34925 | S y_v34928 ⇒ (subn_i13 (pred_i11 x_v34925) y_v34928)
    end

program muln_i14 : nat → nat → nat =
  fn (x_v34931 : nat) (y_v34932 : nat) ⇒
    match x_v34931 as __v34933 in nat with
    | O ⇒ 0
    | S x_v34934 ⇒ (addn_i12 y_v34932 (muln_i14 x_v34934 y_v34932))
    end

program divn_i15 : nat → nat → nat =
  fn (x_v34937 : nat) (y_v34938 : nat) ⇒
    match (ltn_i7 x_v34937 y_v34938) as __v34939 in nat with
    | true ⇒ 0
    | false ⇒ (divn_i15 (subn_i13 x_v34937 y_v34938) y_v34938).+1
    end

program modn_i16 : nat → nat → nat =
  fn (x_v34942 : nat) (y_v34943 : nat) ⇒
    (subn_i13 x_v34942 (muln_i14 (divn_i15 x_v34942 y_v34943) y_v34943))

inductive between_d2 (lower_v34944 : nat) (upper_v34945 : nat) : L =
| Between_c4 of
    (lower_v34946 : nat) (upper_v34947 : nat) (n_v34948 : nat)
    {pf1_v34949 : (lten_i5 lower_v34946 n_v34948) ≡ true}
    {pf2_v34950 : (lten_i5 n_v34948 upper_v34947) ≡ true}
    : (between_d2 lower_v34946 upper_v34947)

inductive char_d3 : U =
| Char_c5 of (n_v34951 : nat) : char_d3

program eqc_i17 : char_d3 → char_d3 → bool =
  fn (c1_v34954 : char_d3) (c2_v34955 : char_d3) ⇒
    match c1_v34954 as __v34956 in bool with
    | Char_c5 n1_v34957 ⇒
      match c2_v34955 as __v34958 in bool with
      | Char_c5 n2_v34959 ⇒ (eqn_i9 n1_v34957 n2_v34959)
      end
    end

program comparec_i18 : char_d3 → char_d3 → order_d1 =
  fn (c1_v34962 : char_d3) (c2_v34963 : char_d3) ⇒
    match c1_v34962 as __v34964 in order_d1 with
    | Char_c5 n1_v34965 ⇒
      match c2_v34963 as __v34966 in order_d1 with
      | Char_c5 n2_v34967 ⇒ (comparen_i10 n1_v34965 n2_v34967)
      end
    end

inductive string_d4 : U =
| EmptyString_c6 of : string_d4
| String_c7 of (c_v34968 : char_d3) (s_v34969 : string_d4) : string_d4

program cats_i19 : string_d4 → string_d4 → string_d4 =
  fn (s1_v34972 : string_d4) (s2_v34973 : string_d4) ⇒
    match s1_v34972 as __v34974 in string_d4 with
    | EmptyString_c6  ⇒ s2_v34973
    | String_c7 c_v34975 s1_v34976 ⇒
      (String_c7‹› c_v34975 (cats_i19 s1_v34976 s2_v34973))
    end

program strlen_i20 : string_d4 → nat =
  fn (s_v34978 : string_d4) ⇒
    match s_v34978 as __v34979 in nat with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v34980 s_v34981 ⇒ (strlen_i20 s_v34981).+1
    end

program eqs_i21 : string_d4 → string_d4 → bool =
  fn (s1_v34984 : string_d4) (s2_v34985 : string_d4) ⇒
    match s1_v34984 as __v34986 in bool with
    | EmptyString_c6  ⇒
      match s2_v34985 as __v34987 in bool with
      | EmptyString_c6  ⇒ true | String_c7 __v34988 __v34989 ⇒ false
      end
    | String_c7 c1_v34990 s1_v34991 ⇒
      match s2_v34985 as __v34992 in bool with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v34993 s2_v34994 ⇒
        (andb_i1 (eqc_i17 c1_v34990 c2_v34993) (eqs_i21 s1_v34991 s2_v34994))
      end
    end

program compares_i22 : string_d4 → string_d4 → order_d1 =
  fn (s1_v34997 : string_d4) (s2_v34998 : string_d4) ⇒
    match s1_v34997 as __v34999 in order_d1 with
    | EmptyString_c6  ⇒
      match s2_v34998 as __v35000 in order_d1 with
      | EmptyString_c6  ⇒ EQ_c3‹›
      | String_c7 __v35001 __v35002 ⇒ LT_c1‹›
      end
    | String_c7 c1_v35003 s1_v35004 ⇒
      match s2_v34998 as __v35005 in order_d1 with
      | EmptyString_c6  ⇒ GT_c2‹›
      | String_c7 c2_v35006 s2_v35007 ⇒
        match (comparec_i18 c1_v35003 c2_v35006) as __v35008 in order_d1 with
        | EQ_c3  ⇒ (compares_i22 s1_v35004 s2_v35007)
        | LT_c1  ⇒ LT_c1‹› | GT_c2  ⇒ GT_c2‹›
        end
      end
    end

inductive option_d5 ‹s_s35009, t_s35010›
  (A_v35011 : Type‹s_s35009›) : Type‹t_s35010›
=
| None_c8 of
    ‹s_s35012, t_s35013› (A_v35014 : Type‹s_s35012›)
    : (option_d5‹s_s35012, t_s35013› A_v35014)
| Some_c9 of
    ‹s_s35015, t_s35016› (A_v35017 : Type‹s_s35015›)
    (x_v35018 : A_v35017) : (option_d5‹s_s35015, t_s35016› A_v35017)

program and_then_i23 ‹s_s35019, r_s35020, t_s35021› :
  ∀ {A_v35022 : Type‹s_s35019›} →
    ∀ {B_v35023 : Type‹r_s35020›} →
      (option_d5‹s_s35019, t_s35021› A_v35022) →
        A_v35022 → (option_d5‹r_s35020, t_s35021› B_v35023) ⊸
          (option_d5‹r_s35020, t_s35021› B_v35023)
=
  fn {A_v35027 : Type‹s_s35019›} {B_v35028 : Type‹r_s35020›}
     (opt_v35029 : (option_d5‹s_s35019, t_s35021› A_v35027)) ⇒
    ln (f_v35030 : A_v35027 → (option_d5‹r_s35020, t_s35021› B_v35028)) ⇒
      match opt_v35029 as __v35032 in
        (option_d5‹r_s35020, t_s35021› B_v35028) with
      | None_c8  ⇒ None_c8‹r_s35020, t_s35021›
      | Some_c9 x_v35033 ⇒ (f_v35030 x_v35033)
      end

inductive list_d6 ‹s_s35034, t_s35035›
  (A_v35036 : Type‹s_s35034›) : Type‹t_s35035›
=
| nil_c10 of
    ‹s_s35037, t_s35038› (A_v35039 : Type‹s_s35037›)
    : (list_d6‹s_s35037, t_s35038› A_v35039)
| cons_c11 of
    ‹s_s35040, t_s35041› (A_v35042 : Type‹s_s35040›)
    (hd_v35043 : A_v35042)
    (tl_v35044 : (list_d6‹s_s35040, t_s35041› A_v35042))
    : (list_d6‹s_s35040, t_s35041› A_v35042)

program len_i24 ‹s_s35045, t_s35046› :
  ∀ {A_v35047 : Type‹s_s35045›} →
    (list_d6‹s_s35045, t_s35046› A_v35047) →
      nat ⊗ (list_d6‹s_s35045, t_s35046› A_v35047)
=
  fn {A_v35050 : Type‹s_s35045›}
     (xs_v35051 : (list_d6‹s_s35045, t_s35046› A_v35050)) ⇒
    match xs_v35051 as __v35052 in
      nat ⊗ (list_d6‹s_s35045, t_s35046› A_v35050) with
    | nil_c10  ⇒ ⟨0, nil_c10‹s_s35045, t_s35046›⟩
    | cons_c11 x_v35054 xs_v35055 ⇒
      match (len_i24‹s_s35045, t_s35046› A_v35050 xs_v35055) as __v35056 in
        nat ⊗ (list_d6‹s_s35045, t_s35046› A_v35050) with
      | ⟨n_v35058, xs_v35059⟩ ⇒
        ⟨n_v35058.+1, (cons_c11‹s_s35045, t_s35046› x_v35054 xs_v35059)⟩
      end
    end

program append_i25 ‹s_s35060, t_s35061› :
  ∀ {A_v35062 : Type‹s_s35060›} →
    (list_d6‹s_s35060, t_s35061› A_v35062) →
      (list_d6‹s_s35060, t_s35061› A_v35062) ⊸
        (list_d6‹s_s35060, t_s35061› A_v35062)
=
  fn {A_v35065 : Type‹s_s35060›}
     (xs_v35066 : (list_d6‹s_s35060, t_s35061› A_v35065)) ⇒
    ln (ys_v35067 : (list_d6‹s_s35060, t_s35061› A_v35065)) ⇒
      match xs_v35066 as __v35068 in
        (list_d6‹s_s35060, t_s35061› A_v35065) with
      | nil_c10  ⇒ ys_v35067
      | cons_c11 x_v35069 xs_v35070 ⇒
        (cons_c11‹s_s35060, t_s35061›
          x_v35069
          (append_i25‹s_s35060, t_s35061› A_v35065 xs_v35070 ys_v35067))
      end

logical stdin_rec_i26 : unit → proto =
  fn (__v35072 : unit) ⇒
    ⇑(b_v35073 : bool) ⇒
      match b_v35073 as __v35074 in proto with
      | true ⇒ ⇓(__v35075 : string_d4) ⇒ (stdin_rec_i26 ())
      | false ⇒ end
      end

logical stdout_rec_i27 : unit → proto =
  fn (__v35077 : unit) ⇒
    ⇑(b_v35078 : bool) ⇒
      match b_v35078 as __v35079 in proto with
      | true ⇒ ⇑(__v35080 : string_d4) ⇒ (stdout_rec_i27 ())
      | false ⇒ end
      end

logical stderr_rec_i28 : unit → proto =
  fn (__v35082 : unit) ⇒
    ⇑(b_v35083 : bool) ⇒
      match b_v35083 as __v35084 in proto with
      | true ⇒ ⇑(__v35085 : string_d4) ⇒ (stderr_rec_i28 ())
      | false ⇒ end
      end

logical stdin_t_i29 : proto = (stdin_rec_i26 ())

logical stdout_t_i30 : proto = (stdout_rec_i27 ())

logical stderr_t_i31 : proto = (stderr_rec_i28 ())

program readline_i32 : unit → IO string_d4 =
  fn (__v35087 : unit) ⇒
    let ch_v35088 ⇐ open stdin in
    let ch_v35089 ⇐ (send ch_v35088 true) in
    let __v35090 ⇐ recv ch_v35089 in
    match __v35090 as __v35091 in IO string_d4 with
    | ⟨s_v35092, ch_v35093⟩ ⇒
      let ch_v35094 ⇐ (send ch_v35093 false) in
      let __v35095 ⇐ close ch_v35094 in return s_v35092
    end

program print_i33 : string_d4 → IO unit =
  fn (s_v35097 : string_d4) ⇒
    let ch_v35098 ⇐ open stdout in
    let ch_v35099 ⇐ (send ch_v35098 true) in
    let ch_v35100 ⇐ (send ch_v35099 s_v35097) in
    let ch_v35101 ⇐ (send ch_v35100 false) in close ch_v35101

program prerr_i34 : string_d4 → IO unit =
  fn (s_v35103 : string_d4) ⇒
    let ch_v35104 ⇐ open stderr in
    let ch_v35105 ⇐ (send ch_v35104 true) in
    let ch_v35106 ⇐ (send ch_v35105 s_v35103) in
    let ch_v35107 ⇐ (send ch_v35106 false) in close ch_v35107

program digits_i35 : (list_d6‹U, U› string_d4) =
  (cons_c11‹U, U›
    "0"
    (cons_c11‹U, U›
      "1"
      (cons_c11‹U, U›
        "2"
        (cons_c11‹U, U›
          "3"
          (cons_c11‹U, U›
            "4"
            (cons_c11‹U, U›
              "5"
              (cons_c11‹U, U›
                "6"
                (cons_c11‹U, U›
                  "7"
                  (cons_c11‹U, U›
                    "8" (cons_c11‹U, U› "9" nil_c10‹U, U›))))))))))

program get_at_i36 :
  ∀ {A_v35108 : U} →
    nat → (list_d6‹U, U› A_v35108) → A_v35108 → A_v35108
=
  fn {A_v35112 : U} (n_v35113 : nat)
     (xs_v35114 : (list_d6‹U, U› A_v35112)) (a_v35115 : A_v35112) ⇒
    match n_v35113 as __v35116 in A_v35112 with
    | O ⇒
      match xs_v35114 as __v35117 in A_v35112 with
      | nil_c10  ⇒ a_v35115 | cons_c11 x_v35118 __v35119 ⇒ x_v35118
      end
    | S n_v35120 ⇒
      match xs_v35114 as __v35121 in A_v35112 with
      | nil_c10  ⇒ a_v35115
      | cons_c11 __v35122 xs_v35123 ⇒
        (get_at_i36 A_v35112 n_v35120 xs_v35123 a_v35115)
      end
    end

program string_of_digit_i37 : nat → string_d4 =
  fn (n_v35125 : nat) ⇒
    (get_at_i36 string_d4 n_v35125 digits_i35 EmptyString_c6‹›)

program string_of_nat_i38 : nat → string_d4 =
  fn (n_v35127 : nat) ⇒
    let s_v35128 = (string_of_digit_i37 (modn_i16 n_v35127 10)) in
    let n_v35129 = (divn_i15 n_v35127 10) in
    match (ltn_i7 0 n_v35129) as __v35130 in string_d4 with
    | true ⇒ (cats_i19 (string_of_nat_i38 n_v35129) s_v35128)
    | false ⇒ s_v35128
    end

program digit_of_char_i39 : char_d3 → (option_d5‹U, L› nat) =
  fn (c_v35132 : char_d3) ⇒
    match (eqc_i17 c_v35132 '0') as __v35133 in
      (option_d5‹U, L› nat) with
    | true ⇒ (Some_c9‹U, L› 0)
    | false ⇒
      match (eqc_i17 c_v35132 '1') as __v35134 in
        (option_d5‹U, L› nat) with
      | true ⇒ (Some_c9‹U, L› 1)
      | false ⇒
        match (eqc_i17 c_v35132 '2') as __v35135 in
          (option_d5‹U, L› nat) with
        | true ⇒ (Some_c9‹U, L› 2)
        | false ⇒
          match (eqc_i17 c_v35132 '3') as __v35136 in
            (option_d5‹U, L› nat) with
          | true ⇒ (Some_c9‹U, L› 3)
          | false ⇒
            match (eqc_i17 c_v35132 '4') as __v35137 in
              (option_d5‹U, L› nat) with
            | true ⇒ (Some_c9‹U, L› 4)
            | false ⇒
              match (eqc_i17 c_v35132 '5') as __v35138 in
                (option_d5‹U, L› nat) with
              | true ⇒ (Some_c9‹U, L› 5)
              | false ⇒
                match (eqc_i17 c_v35132 '6') as __v35139 in
                  (option_d5‹U, L› nat) with
                | true ⇒ (Some_c9‹U, L› 6)
                | false ⇒
                  match (eqc_i17 c_v35132 '7') as __v35140 in
                    (option_d5‹U, L› nat) with
                  | true ⇒ (Some_c9‹U, L› 7)
                  | false ⇒
                    match (eqc_i17 c_v35132 '8') as __v35141 in
                      (option_d5‹U, L› nat) with
                    | true ⇒ (Some_c9‹U, L› 8)
                    | false ⇒
                      match (eqc_i17 c_v35132 '9') as __v35142 in
                        (option_d5‹U, L› nat) with
                      | true ⇒ (Some_c9‹U, L› 9)
                      | false ⇒ None_c8‹U, L›
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

program nat_of_string_loop_i40 :
  string_d4 → nat → (option_d5‹U, L› nat)
=
  fn (s_v35145 : string_d4) (acc_v35146 : nat) ⇒
    match s_v35145 as __v35147 in (option_d5‹U, L› nat) with
    | EmptyString_c6  ⇒ (Some_c9‹U, L› acc_v35146)
    | String_c7 c_v35148 s_v35149 ⇒
      match (digit_of_char_i39 c_v35148) as __v35150 in
        (option_d5‹U, L› nat) with
      | None_c8  ⇒ None_c8‹U, L›
      | Some_c9 n_v35151 ⇒
        (nat_of_string_loop_i40
          s_v35149 (addn_i12 (muln_i14 acc_v35146 10) n_v35151))
      end
    end

program nat_of_string_i41 : string_d4 → (option_d5‹U, L› nat) =
  fn (s_v35153 : string_d4) ⇒ (nat_of_string_loop_i40 s_v35153 0)

logical game_loop_i42 : nat → nat → proto =
  fn (ans_v35156 : nat) (repeat_v35157 : nat) ⇒
    match repeat_v35157 as __v35158 in proto with
    | O ⇒
      ⇑(n_v35159 : nat) ⇒ ⇑{__v35160 : n_v35159 ≡ ans_v35156} ⇒ end
    | S repeat_v35161 ⇒
      ⇓(guess_v35162 : nat) ⇒
        ⇑(ord_v35163 : order_d1) ⇒
          ⇑{__v35164 :
            ord_v35163 ≡ (comparen_i10 ans_v35156 guess_v35162)} ⇒
            match ord_v35163 as __v35165 in proto with
            | EQ_c3  ⇒ end
            | LT_c1  ⇒ (game_loop_i42 ans_v35156 repeat_v35161)
            | GT_c2  ⇒ (game_loop_i42 ans_v35156 repeat_v35161)
            end
    end

logical game_i43 : proto =
  ⇑(lower_v35166 : nat) ⇒
    ⇑(upper_v35167 : nat) ⇒
      ⇑{ans_v35168 : nat} ⇒
        ⇑{__v35169 : (lten_i5 lower_v35166 ans_v35168) ≡ true} ⇒
          ⇑{__v35170 : (lten_i5 ans_v35168 upper_v35167) ≡ true} ⇒
            ⇑(repeat_v35171 : nat) ⇒
              (game_loop_i42 ans_v35168 repeat_v35171)

logical loop_ch_i44 : nat → nat → L =
  fn (ans_v35174 : nat) (repeat_v35175 : nat) ⇒
    ch⟨(game_loop_i42 ans_v35174 repeat_v35175)⟩

logical loop_hc_i45 : nat → nat → L =
  fn (ans_v35178 : nat) (repeat_v35179 : nat) ⇒
    hc⟨(game_loop_i42 ans_v35178 repeat_v35179)⟩

logical game_ch_i46 : L = ch⟨game_i43⟩

logical game_hc_i47 : L = hc⟨game_i43⟩

program read_nat_i48 : unit → IO nat =
  fn (__v35181 : unit) ⇒
    let s_v35182 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v35182) as __v35183 in IO (nat : U) with
    | Some_c9 n_v35184 ⇒ return n_v35184
    | None_c8  ⇒
      let __v35185 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

program player_loop_i49 :
  ∀ {ans_v35186 : nat} →
    ∀ (repeat_v35187 : nat) →
      (loop_hc_i45 ans_v35186 repeat_v35187) → IO unit
=
  fn {ans_v35189 : nat} (repeat_v35190 : nat)
     (c_v35191 : (loop_hc_i45 ans_v35189 repeat_v35190)) ⇒
    (match repeat_v35190 as repeat0_v35192 in
       (loop_hc_i45 ans_v35189 repeat0_v35192) → IO unit with
     | O ⇒
       fn (c_v35194 : (loop_hc_i45 ans_v35189 0)) ⇒
         let __v35195 ⇐ recv c_v35194 in
         match __v35195 as __v35196 in IO unit with
         | ⟨ans_v35197, c_v35198⟩ ⇒
           let __v35199 ⇐ recv c_v35198 in
           match __v35199 as __v35200 in IO unit with
           | ⟨{pf_v35201}, c_v35202⟩ ⇒
             let __v35203 ⇐
               (print_i33
                 (cats_i19
                   (cats_i19
                     "You Lose! The answer is "
                     (string_of_nat_i38 ans_v35197))
                   ".\n"))
             in close c_v35202
           end
         end
     | S repeat_v35204 ⇒
       fn (c_v35205 : (loop_hc_i45 ans_v35189 repeat_v35204.+1)) ⇒
         let guess_v35206 ⇐ (read_nat_i48 ()) in
         let c_v35207 ⇐ (send c_v35205 guess_v35206) in
         let __v35208 ⇐ recv c_v35207 in
         match __v35208 as __v35209 in IO unit with
         | ⟨ord_v35210, c_v35211⟩ ⇒
           let __v35212 ⇐ recv c_v35211 in
           match __v35212 as __v35213 in IO unit with
           | ⟨{pf_v35214}, c_v35215⟩ ⇒
             (match ord_v35210 as ord0_v35216 in
                hc⟨match ord0_v35216 as __v35218 in proto with
                     | EQ_c3  ⇒ end
                     | LT_c1  ⇒ (game_loop_i42 ans_v35189 repeat_v35204)
                     | GT_c2  ⇒ (game_loop_i42 ans_v35189 repeat_v35204)
                     end⟩ →
                  IO unit with
              | EQ_c3  ⇒
                fn (c_v35219 : hc⟨end⟩) ⇒
                  let __v35220 ⇐ (print_i33 "You Win!\n") in close c_v35219
              | LT_c1  ⇒
                fn (c_v35221 : hc⟨(game_loop_i42 ans_v35189 repeat_v35204)⟩) ⇒
                  let __v35222 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is lesser, you have "
                          (string_of_nat_i38 repeat_v35204))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v35189 repeat_v35204 c_v35221)
              | GT_c2  ⇒
                fn (c_v35223 : hc⟨(game_loop_i42 ans_v35189 repeat_v35204)⟩) ⇒
                  let __v35224 ⇐
                    (print_i33
                      (cats_i19
                        (cats_i19
                          "The answer is greater, you have "
                          (string_of_nat_i38 repeat_v35204))
                        " more tries.\n"))
                  in (player_loop_i49 ans_v35189 repeat_v35204 c_v35223)
              end c_v35215)
           end
         end
     end c_v35191)

program player_i50 : game_hc_i47 → IO unit =
  fn (c_v35226 : game_hc_i47) ⇒
    let __v35227 ⇐ recv c_v35226 in
    match __v35227 as __v35228 in IO unit with
    | ⟨lower_v35229, c_v35230⟩ ⇒
      let __v35231 ⇐ recv c_v35230 in
      match __v35231 as __v35232 in IO unit with
      | ⟨upper_v35233, c_v35234⟩ ⇒
        let __v35235 ⇐ recv c_v35234 in
        match __v35235 as __v35236 in IO unit with
        | ⟨{ans_v35237}, c_v35238⟩ ⇒
          let __v35239 ⇐ recv c_v35238 in
          match __v35239 as __v35240 in IO unit with
          | ⟨{pf1_v35241}, c_v35242⟩ ⇒
            let __v35243 ⇐ recv c_v35242 in
            match __v35243 as __v35244 in IO unit with
            | ⟨{pf2_v35245}, c_v35246⟩ ⇒
              let __v35247 ⇐ recv c_v35246 in
              match __v35247 as __v35248 in IO unit with
              | ⟨repeat_v35249, c_v35250⟩ ⇒
                let __v35251 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        (cats_i19
                          (cats_i19
                            "Please make a guess between "
                            (string_of_nat_i38 lower_v35229))
                          " and ")
                        (string_of_nat_i38 upper_v35233))
                      ".\n"))
                in
                let __v35252 ⇐
                  (print_i33
                    (cats_i19
                      (cats_i19
                        "You have " (string_of_nat_i38 repeat_v35249))
                      " tries.\n"))
                in (player_loop_i49 ans_v35237 repeat_v35249 c_v35250)
              end
            end
          end
        end
      end
    end

program server_loop_i51 :
  ∀ (ans_v35253 : nat) →
    ∀ (repeat_v35254 : nat) →
      (loop_ch_i44 ans_v35253 repeat_v35254) → IO unit
=
  fn (ans_v35256 : nat) (repeat_v35257 : nat)
     (c_v35258 : (loop_ch_i44 ans_v35256 repeat_v35257)) ⇒
    (match repeat_v35257 as repeat0_v35259 in
       (loop_ch_i44 ans_v35256 repeat0_v35259) → IO unit with
     | O ⇒
       fn (c_v35261 : (loop_ch_i44 ans_v35256 0)) ⇒
         let c_v35262 ⇐ (send c_v35261 ans_v35256) in
         let c_v35263 ⇐ (send c_v35262 refl ans_v35256) in close c_v35263
     | S repeat_v35264 ⇒
       fn (c_v35265 : (loop_ch_i44 ans_v35256 repeat_v35264.+1)) ⇒
         let __v35266 ⇐ recv c_v35265 in
         match __v35266 as __v35267 in IO unit with
         | ⟨n_v35268, c_v35269⟩ ⇒
           let ord_v35270 = (comparen_i10 ans_v35256 n_v35268) in
           let c_v35271 ⇐ (send c_v35269 ord_v35270) in
           let c_v35272 ⇐
             (send c_v35271 refl (comparen_i10 ans_v35256 n_v35268))
           in
           (match ord_v35270 as ord0_v35273 in
              ch⟨match ord0_v35273 as __v35275 in proto with
                   | EQ_c3  ⇒ end
                   | LT_c1  ⇒ (game_loop_i42 ans_v35256 repeat_v35264)
                   | GT_c2  ⇒ (game_loop_i42 ans_v35256 repeat_v35264)
                   end⟩ →
                IO unit with
            | EQ_c3  ⇒ fn (c_v35276 : ch⟨end⟩) ⇒ close c_v35276
            | LT_c1  ⇒
              fn (c_v35277 : ch⟨(game_loop_i42 ans_v35256 repeat_v35264)⟩) ⇒
                (server_loop_i51 ans_v35256 repeat_v35264 c_v35277)
            | GT_c2  ⇒
              fn (c_v35278 : ch⟨(game_loop_i42 ans_v35256 repeat_v35264)⟩) ⇒
                (server_loop_i51 ans_v35256 repeat_v35264 c_v35278)
            end c_v35272)
         end
     end c_v35258)

program server_i52 : game_ch_i46 → IO unit =
  fn (c_v35280 : game_ch_i46) ⇒
    let lower_v35281 = 0 in
    let offset_v35282 = 128 in
    let res_v35283 ⇐ rand lower_v35281 offset_v35282 in
    match res_v35283 as __v35284 in IO unit with
    | Between_c4 ans_v35285 pf1_v35286 pf2_v35287 ⇒
      let repeat_v35288 = 6 in
      let c_v35289 ⇐ (send c_v35280 lower_v35281) in
      let c_v35290 ⇐ (send c_v35289 (addn_i12 lower_v35281 offset_v35282))
      in
      let c_v35291 ⇐ (send c_v35290 ans_v35285) in
      let c_v35292 ⇐ (send c_v35291 pf1_v35286) in
      let c_v35293 ⇐ (send c_v35292 pf2_v35287) in
      let c_v35294 ⇐ (send c_v35293 repeat_v35288) in
      (server_loop_i51 ans_v35285 repeat_v35288 c_v35294)
    end

program main_i53 : IO unit =
  let c_v35295 ⇐ fork (c_v35296 : game_ch_i46) in (server_i52 c_v35296) in
  let c0_v35297 ⇐
    fork (c0_v35298 :
      ch⟨⇓(__v35299 : game_hc_i47) ⇒ ⇑(__v35300 : unit) ⇒ end⟩)
    in
      let __v35301 ⇐ recv c0_v35298 in
      match __v35301 as __v35302 in IO unit with
      | ⟨c_v35303, c0_v35304⟩ ⇒
        let __v35305 ⇐ (player_i50 c_v35303) in
        let c0_v35306 ⇐ (send c0_v35304 ()) in close c0_v35306
      end
  in
  let c0_v35307 ⇐ (send c0_v35297 c_v35295) in
  let __v35308 ⇐ recv c0_v35307 in
  match __v35308 as __v35309 in IO unit with
  | ⟨__v35310, c0_v35311⟩ ⇒ close c0_v35311
  end

trans1e success--------------------------

data order_d1 =
| LT_c1 of size(0) | GT_c2 of size(0) | EQ_c3 of size(0)

def andb_i1 =
  fn b1_v36113 b2_v36114 ⇒
    match b1_v36113 with
    | true ⇒ b2_v36114 | false ⇒ false
    end

def orb_i2 =
  fn b1_v36115 b2_v36116 ⇒
    match b1_v36115 with
    | true ⇒ true | false ⇒ b2_v36116
    end

def notb_i3 =
  fn b_v36117 ⇒ match b_v36117 with
                  | true ⇒ false | false ⇒ true
                  end

def compareb_i4 =
  fn b1_v36118 b2_v36119 ⇒
    match b1_v36118 with
    | true ⇒ match b2_v36119 with
               | true ⇒ EQ_c3 | false ⇒ GT_c2
               end
    | false ⇒ match b2_v36119 with
                | true ⇒ LT_c1 | false ⇒ EQ_c3
                end
    end

def lten_i5 =
  fn x_v36120 y_v36121 ⇒
    match x_v36120 with
    | O ⇒ true
    | S x_v36122 ⇒
      match y_v36121 with
      | O ⇒ false | S y_v36123 ⇒ ((lten_i5 x_v36122) y_v36123)
      end
    end

def gten_i6 =
  fn x_v36124 y_v36125 ⇒
    match x_v36124 with
    | O ⇒ match y_v36125 with
            | O ⇒ true | S __v36126 ⇒ false
            end
    | S x_v36127 ⇒
      match y_v36125 with
      | O ⇒ true | S y_v36128 ⇒ ((gten_i6 x_v36127) y_v36128)
      end
    end

def ltn_i7 =
  fn x_v36129 y_v36130 ⇒
    match x_v36129 with
    | O ⇒ match y_v36130 with
            | O ⇒ false | S y_v36131 ⇒ true
            end
    | S x_v36132 ⇒
      match y_v36130 with
      | O ⇒ false | S y_v36133 ⇒ ((ltn_i7 x_v36132) y_v36133)
      end
    end

def gtn_i8 =
  fn x_v36134 y_v36135 ⇒
    match x_v36134 with
    | O ⇒ false
    | S x_v36136 ⇒
      match y_v36135 with
      | O ⇒ true | S y_v36137 ⇒ ((gtn_i8 x_v36136) y_v36137)
      end
    end

def eqn_i9 =
  fn x_v36138 y_v36139 ⇒
    match x_v36138 with
    | O ⇒ match y_v36139 with
            | O ⇒ true | S __v36140 ⇒ false
            end
    | S x_v36141 ⇒
      match y_v36139 with
      | O ⇒ false | S y_v36142 ⇒ ((eqn_i9 x_v36141) y_v36142)
      end
    end

def comparen_i10 =
  fn n1_v36143 n2_v36144 ⇒
    match n1_v36143 with
    | O ⇒ match n2_v36144 with
            | O ⇒ EQ_c3 | S __v36145 ⇒ LT_c1
            end
    | S n1_v36146 ⇒
      match n2_v36144 with
      | O ⇒ GT_c2 | S n2_v36147 ⇒ ((comparen_i10 n1_v36146) n2_v36147)
      end
    end

def pred_i11 =
  fn x_v36148 ⇒ match x_v36148 with
                  | O ⇒ 0 | S x_v36149 ⇒ x_v36149
                  end

def addn_i12 =
  fn x_v36150 y_v36151 ⇒
    match x_v36150 with
    | O ⇒ y_v36151 | S x_v36152 ⇒ ((addn_i12 x_v36152) y_v36151).+1
    end

def subn_i13 =
  fn x_v36153 y_v36154 ⇒
    match y_v36154 with
    | O ⇒ x_v36153
    | S y_v36155 ⇒ ((subn_i13 (pred_i11 x_v36153)) y_v36155)
    end

def muln_i14 =
  fn x_v36156 y_v36157 ⇒
    match x_v36156 with
    | O ⇒ 0
    | S x_v36158 ⇒ ((addn_i12 y_v36157) ((muln_i14 x_v36158) y_v36157))
    end

def divn_i15 =
  fn x_v36159 y_v36160 ⇒
    match ((ltn_i7 x_v36159) y_v36160) with
    | true ⇒ 0
    | false ⇒ ((divn_i15 ((subn_i13 x_v36159) y_v36160)) y_v36160).+1
    end

def modn_i16 =
  fn x_v36161 y_v36162 ⇒
    ((subn_i13 x_v36161)
      ((muln_i14 ((divn_i15 x_v36161) y_v36162)) y_v36162))

data between_d2 =
| Between_c4 of size(3)

data char_d3 =
| Char_c5 of size(1)

def eqc_i17 =
  fn c1_v36163 c2_v36164 ⇒
    match c1_v36163 with
    | Char_c5 n1_v36165 ⇒
      match c2_v36164 with
      | Char_c5 n2_v36166 ⇒ ((eqn_i9 n1_v36165) n2_v36166)
      end
    end

def comparec_i18 =
  fn c1_v36167 c2_v36168 ⇒
    match c1_v36167 with
    | Char_c5 n1_v36169 ⇒
      match c2_v36168 with
      | Char_c5 n2_v36170 ⇒ ((comparen_i10 n1_v36169) n2_v36170)
      end
    end

data string_d4 =
| EmptyString_c6 of size(0) | String_c7 of size(2)

def cats_i19 =
  fn s1_v36171 s2_v36172 ⇒
    match s1_v36171 with
    | EmptyString_c6  ⇒ s2_v36172
    | String_c7 c_v36173 s1_v36174 ⇒
      (String_c7 c_v36173 ((cats_i19 s1_v36174) s2_v36172))
    end

def strlen_i20 =
  fn s_v36175 ⇒
    match s_v36175 with
    | EmptyString_c6  ⇒ 0
    | String_c7 __v36176 s_v36177 ⇒ (strlen_i20 s_v36177).+1
    end

def eqs_i21 =
  fn s1_v36178 s2_v36179 ⇒
    match s1_v36178 with
    | EmptyString_c6  ⇒
      match s2_v36179 with
      | EmptyString_c6  ⇒ true | String_c7 __v36180 __v36181 ⇒ false
      end
    | String_c7 c1_v36182 s1_v36183 ⇒
      match s2_v36179 with
      | EmptyString_c6  ⇒ false
      | String_c7 c2_v36184 s2_v36185 ⇒
        ((andb_i1 ((eqc_i17 c1_v36182) c2_v36184))
          ((eqs_i21 s1_v36183) s2_v36185))
      end
    end

def compares_i22 =
  fn s1_v36186 s2_v36187 ⇒
    match s1_v36186 with
    | EmptyString_c6  ⇒
      match s2_v36187 with
      | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v36188 __v36189 ⇒ LT_c1
      end
    | String_c7 c1_v36190 s1_v36191 ⇒
      match s2_v36187 with
      | EmptyString_c6  ⇒ GT_c2
      | String_c7 c2_v36192 s2_v36193 ⇒
        match ((comparec_i18 c1_v36190) c2_v36192) with
        | EQ_c3  ⇒ ((compares_i22 s1_v36191) s2_v36193) | LT_c1  ⇒ LT_c1
        | GT_c2  ⇒ GT_c2
        end
      end
    end

data optionUU_d10 =
| NoneUU_c18 of size(0) | SomeUU_c19 of size(1)

data optionUL_d9 =
| NoneUL_c16 of size(0) | SomeUL_c17 of size(1)

data optionLU_d8 =
| NoneLU_c14 of size(0)

data optionLL_d7 =
| NoneLL_c12 of size(0) | SomeLL_c13 of size(1)

def and_thenUUU_i61 =
  fn A_v36194 B_v36195 opt_v36196 ⇒
    ln f_v36197 ⇒
      match opt_v36196 with
      | NoneUU_c18  ⇒ NoneUU_c18
      | SomeUU_c19 x_v36198 ⇒ (f_v36197 x_v36198)
      end

def and_thenUUL_i60 =
  fn A_v36199 B_v36200 opt_v36201 ⇒
    ln f_v36202 ⇒
      match opt_v36201 with
      | NoneUL_c16  ⇒ NoneUL_c16
      | SomeUL_c17 x_v36203 ⇒ (f_v36202 x_v36203)
      end

def and_thenULU_i59 =
  fn A_v36204 B_v36205 opt_v36206 ⇒
    ln f_v36207 ⇒
      match opt_v36206 with
      | NoneUU_c18  ⇒ NoneLU_c14
      | SomeUU_c19 x_v36208 ⇒ (f_v36207 x_v36208)
      end

def and_thenULL_i58 =
  fn A_v36209 B_v36210 opt_v36211 ⇒
    ln f_v36212 ⇒
      match opt_v36211 with
      | NoneUL_c16  ⇒ NoneLL_c12
      | SomeUL_c17 x_v36213 ⇒ (f_v36212 x_v36213)
      end

def and_thenLUL_i56 =
  fn A_v36214 B_v36215 opt_v36216 ⇒
    ln f_v36217 ⇒
      match opt_v36216 with
      | NoneLL_c12  ⇒ NoneUL_c16
      | SomeLL_c13 x_v36218 ⇒ (f_v36217 x_v36218)
      end

def and_thenLLL_i54 =
  fn A_v36219 B_v36220 opt_v36221 ⇒
    ln f_v36222 ⇒
      match opt_v36221 with
      | NoneLL_c12  ⇒ NoneLL_c12
      | SomeLL_c13 x_v36223 ⇒ (f_v36222 x_v36223)
      end

data listUU_d14 =
| nilUU_c26 of size(0) | consUU_c27 of size(2)

data listUL_d13 =
| nilUL_c24 of size(0) | consUL_c25 of size(2)

data listLU_d12 =
| nilLU_c22 of size(0)

data listLL_d11 =
| nilLL_c20 of size(0) | consLL_c21 of size(2)

def lenUU_i65 =
  fn A_v36224 xs_v36225 ⇒
    match xs_v36225 with
    | nilUU_c26  ⇒ (0, nilUU_c26)
    | consUU_c27 x_v36226 xs_v36227 ⇒
      match ((lenUU_i65 NULL) xs_v36227) with
      | (n_v36228, xs_v36229) ⇒
        (n_v36228.+1, (consUU_c27 x_v36226 xs_v36229))
      end
    end

def lenUL_i64 =
  fn A_v36230 xs_v36231 ⇒
    match xs_v36231 with
    | nilUL_c24  ⇒ (0, nilUL_c24)
    | consUL_c25 x_v36232 xs_v36233 ⇒
      match ((lenUL_i64 NULL) xs_v36233) with
      | (n_v36234, xs_v36235) ⇒
        (n_v36234.+1, (consUL_c25 x_v36232 xs_v36235))
      end
    end

def lenLL_i62 =
  fn A_v36236 xs_v36237 ⇒
    match xs_v36237 with
    | nilLL_c20  ⇒ (0, nilLL_c20)
    | consLL_c21 x_v36238 xs_v36239 ⇒
      match ((lenLL_i62 NULL) xs_v36239) with
      | (n_v36240, xs_v36241) ⇒
        (n_v36240.+1, (consLL_c21 x_v36238 xs_v36241))
      end
    end

def appendUU_i69 =
  fn A_v36242 xs_v36243 ⇒
    ln ys_v36244 ⇒
      match xs_v36243 with
      | nilUU_c26  ⇒ ys_v36244
      | consUU_c27 x_v36245 xs_v36246 ⇒
        (consUU_c27 x_v36245 (((appendUU_i69 NULL) xs_v36246) ys_v36244))
      end

def appendUL_i68 =
  fn A_v36247 xs_v36248 ⇒
    ln ys_v36249 ⇒
      match xs_v36248 with
      | nilUL_c24  ⇒ ys_v36249
      | consUL_c25 x_v36250 xs_v36251 ⇒
        (consUL_c25 x_v36250 (((appendUL_i68 NULL) xs_v36251) ys_v36249))
      end

def appendLL_i66 =
  fn A_v36252 xs_v36253 ⇒
    ln ys_v36254 ⇒
      match xs_v36253 with
      | nilLL_c20  ⇒ ys_v36254
      | consLL_c21 x_v36255 xs_v36256 ⇒
        (consLL_c21 x_v36255 (((appendLL_i66 NULL) xs_v36256) ys_v36254))
      end

def readline_i32 =
  fn __v36257 ⇒
    let ch_v36258 ⇐ open stdin in
    let ch_v36259 ⇐ (send ch_v36258 true) in
    let __v36260 ⇐ recv ch_v36259 in
    match __v36260 with
    | (s_v36261, ch_v36262) ⇒
      let ch_v36263 ⇐ (send ch_v36262 false) in
      let __v36264 ⇐ close⇑ ch_v36263 in return s_v36261
    end

def print_i33 =
  fn s_v36265 ⇒
    let ch_v36266 ⇐ open stdout in
    let ch_v36267 ⇐ (send ch_v36266 true) in
    let ch_v36268 ⇐ (send ch_v36267 s_v36265) in
    let ch_v36269 ⇐ (send ch_v36268 false) in close⇑ ch_v36269

def prerr_i34 =
  fn s_v36270 ⇒
    let ch_v36271 ⇐ open stderr in
    let ch_v36272 ⇐ (send ch_v36271 true) in
    let ch_v36273 ⇐ (send ch_v36272 s_v36270) in
    let ch_v36274 ⇐ (send ch_v36273 false) in close⇑ ch_v36274

def digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

def get_at_i36 =
  fn A_v36275 n_v36276 xs_v36277 a_v36278 ⇒
    match n_v36276 with
    | O ⇒
      match xs_v36277 with
      | nilUU_c26  ⇒ a_v36278 | consUU_c27 x_v36279 __v36280 ⇒ x_v36279
      end
    | S n_v36281 ⇒
      match xs_v36277 with
      | nilUU_c26  ⇒ a_v36278
      | consUU_c27 __v36282 xs_v36283 ⇒
        ((((get_at_i36 NULL) n_v36281) xs_v36283) a_v36278)
      end
    end

def string_of_digit_i37 =
  fn n_v36284 ⇒ ((((get_at_i36 NULL) n_v36284) digits_i35) EmptyString_c6)

def string_of_nat_i38 =
  fn n_v36285 ⇒
    let s_v36286 = (string_of_digit_i37 ((modn_i16 n_v36285) 10)) in
    let n_v36287 = ((divn_i15 n_v36285) 10) in
    match ((ltn_i7 0) n_v36287) with
    | true ⇒ ((cats_i19 (string_of_nat_i38 n_v36287)) s_v36286)
    | false ⇒ s_v36286
    end

def digit_of_char_i39 =
  fn c_v36288 ⇒
    match ((eqc_i17 c_v36288) '0') with
    | true ⇒ (SomeUL_c17 0)
    | false ⇒
      match ((eqc_i17 c_v36288) '1') with
      | true ⇒ (SomeUL_c17 1)
      | false ⇒
        match ((eqc_i17 c_v36288) '2') with
        | true ⇒ (SomeUL_c17 2)
        | false ⇒
          match ((eqc_i17 c_v36288) '3') with
          | true ⇒ (SomeUL_c17 3)
          | false ⇒
            match ((eqc_i17 c_v36288) '4') with
            | true ⇒ (SomeUL_c17 4)
            | false ⇒
              match ((eqc_i17 c_v36288) '5') with
              | true ⇒ (SomeUL_c17 5)
              | false ⇒
                match ((eqc_i17 c_v36288) '6') with
                | true ⇒ (SomeUL_c17 6)
                | false ⇒
                  match ((eqc_i17 c_v36288) '7') with
                  | true ⇒ (SomeUL_c17 7)
                  | false ⇒
                    match ((eqc_i17 c_v36288) '8') with
                    | true ⇒ (SomeUL_c17 8)
                    | false ⇒
                      match ((eqc_i17 c_v36288) '9') with
                      | true ⇒ (SomeUL_c17 9) | false ⇒ NoneUL_c16
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end

def nat_of_string_loop_i40 =
  fn s_v36289 acc_v36290 ⇒
    match s_v36289 with
    | EmptyString_c6  ⇒ (SomeUL_c17 acc_v36290)
    | String_c7 c_v36291 s_v36292 ⇒
      match (digit_of_char_i39 c_v36291) with
      | NoneUL_c16  ⇒ NoneUL_c16
      | SomeUL_c17 n_v36293 ⇒
        ((nat_of_string_loop_i40 s_v36292)
          ((addn_i12 ((muln_i14 acc_v36290) 10)) n_v36293))
      end
    end

def nat_of_string_i41 = fn s_v36294 ⇒ ((nat_of_string_loop_i40 s_v36294) 0)

def read_nat_i48 =
  fn __v36295 ⇒
    let s_v36296 ⇐ (readline_i32 ()) in
    match (nat_of_string_i41 s_v36296) with
    | SomeUL_c17 n_v36297 ⇒ return n_v36297
    | NoneUL_c16  ⇒
      let __v36298 ⇐ (print_i33 "please input a natural number\n") in
      (read_nat_i48 ())
    end

def player_loop_i49 =
  fn ans_v36299 repeat_v36300 c_v36301 ⇒
    (match repeat_v36300 with
     | O ⇒
       fn c_v36302 ⇒
         let __v36303 ⇐ recv c_v36302 in
         match __v36303 with
         | (ans_v36304, c_v36305) ⇒
           let __v36306 ⇐ {recv} c_v36305 in
           match __v36306 with
           | (pf_v36307, c_v36308) ⇒
             let __v36309 ⇐
               (print_i33
                 ((cats_i19
                    ((cats_i19 "You Lose! The answer is ")
                      (string_of_nat_i38 ans_v36304)))
                   ".\n"))
             in close⇓ c_v36308
           end
         end
     | S repeat_v36310 ⇒
       fn c_v36311 ⇒
         let guess_v36312 ⇐ (read_nat_i48 ()) in
         let c_v36313 ⇐ (send c_v36311 guess_v36312) in
         let __v36314 ⇐ recv c_v36313 in
         match __v36314 with
         | (ord_v36315, c_v36316) ⇒
           let __v36317 ⇐ {recv} c_v36316 in
           match __v36317 with
           | (pf_v36318, c_v36319) ⇒
             (match ord_v36315 with
              | EQ_c3  ⇒
                fn c_v36320 ⇒
                  let __v36321 ⇐ (print_i33 "You Win!\n") in
                  close⇓ c_v36320
              | LT_c1  ⇒
                fn c_v36322 ⇒
                  let __v36323 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is lesser, you have ")
                           (string_of_nat_i38 repeat_v36310)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v36310) c_v36322)
              | GT_c2  ⇒
                fn c_v36324 ⇒
                  let __v36325 ⇐
                    (print_i33
                      ((cats_i19
                         ((cats_i19 "The answer is greater, you have ")
                           (string_of_nat_i38 repeat_v36310)))
                        " more tries.\n"))
                  in (((player_loop_i49 NULL) repeat_v36310) c_v36324)
              end c_v36319)
           end
         end
     end c_v36301)

def player_i50 =
  fn c_v36326 ⇒
    let __v36327 ⇐ recv c_v36326 in
    match __v36327 with
    | (lower_v36328, c_v36329) ⇒
      let __v36330 ⇐ recv c_v36329 in
      match __v36330 with
      | (upper_v36331, c_v36332) ⇒
        let __v36333 ⇐ {recv} c_v36332 in
        match __v36333 with
        | (ans_v36334, c_v36335) ⇒
          let __v36336 ⇐ {recv} c_v36335 in
          match __v36336 with
          | (pf1_v36337, c_v36338) ⇒
            let __v36339 ⇐ {recv} c_v36338 in
            match __v36339 with
            | (pf2_v36340, c_v36341) ⇒
              let __v36342 ⇐ recv c_v36341 in
              match __v36342 with
              | (repeat_v36343, c_v36344) ⇒
                let __v36345 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19
                          ((cats_i19
                             ((cats_i19 "Please make a guess between ")
                               (string_of_nat_i38 lower_v36328)))
                            " and "))
                         (string_of_nat_i38 upper_v36331)))
                      ".\n"))
                in
                let __v36346 ⇐
                  (print_i33
                    ((cats_i19
                       ((cats_i19 "You have ")
                         (string_of_nat_i38 repeat_v36343)))
                      " tries.\n"))
                in (((player_loop_i49 NULL) repeat_v36343) c_v36344)
              end
            end
          end
        end
      end
    end

def server_loop_i51 =
  fn ans_v36347 repeat_v36348 c_v36349 ⇒
    (match repeat_v36348 with
     | O ⇒
       fn c_v36350 ⇒
         let c_v36351 ⇐ (send c_v36350 ans_v36347) in
         let c_v36352 ⇐ ({send} c_v36351 NULL) in close⇑ c_v36352
     | S repeat_v36353 ⇒
       fn c_v36354 ⇒
         let __v36355 ⇐ recv c_v36354 in
         match __v36355 with
         | (n_v36356, c_v36357) ⇒
           let ord_v36358 = ((comparen_i10 ans_v36347) n_v36356) in
           let c_v36359 ⇐ (send c_v36357 ord_v36358) in
           let c_v36360 ⇐ ({send} c_v36359 NULL) in
           (match ord_v36358 with
            | EQ_c3  ⇒ fn c_v36361 ⇒ close⇑ c_v36361
            | LT_c1  ⇒
              fn c_v36362 ⇒
                (((server_loop_i51 ans_v36347) repeat_v36353) c_v36362)
            | GT_c2  ⇒
              fn c_v36363 ⇒
                (((server_loop_i51 ans_v36347) repeat_v36353) c_v36363)
            end c_v36360)
         end
     end c_v36349)

def server_i52 =
  fn c_v36364 ⇒
    let lower_v36365 = 0 in
    let offset_v36366 = 128 in
    let res_v36367 ⇐ rand lower_v36365 offset_v36366 in
    match res_v36367 with
    | Between_c4 ans_v36368 pf1_v36369 pf2_v36370 ⇒
      let repeat_v36371 = 6 in
      let c_v36372 ⇐ (send c_v36364 lower_v36365) in
      let c_v36373 ⇐
        (send c_v36372 ((addn_i12 lower_v36365) offset_v36366))
      in
      let c_v36374 ⇐ ({send} c_v36373 NULL) in
      let c_v36375 ⇐ ({send} c_v36374 NULL) in
      let c_v36376 ⇐ ({send} c_v36375 NULL) in
      let c_v36377 ⇐ (send c_v36376 repeat_v36371) in
      (((server_loop_i51 ans_v36368) repeat_v36371) c_v36377)
    end

main =
  let c_v36378 ⇐ fork c_v36379 in (server_i52 c_v36379) in
  let c0_v36380 ⇐
    fork c0_v36381 in
      let __v36382 ⇐ recv c0_v36381 in
      match __v36382 with
      | (c_v36383, c0_v36384) ⇒
        let __v36385 ⇐ (player_i50 c_v36383) in
        let c0_v36386 ⇐ (send c0_v36384 ()) in close⇑ c0_v36386
      end
  in
  let c0_v36387 ⇐ (send c0_v36380 c_v36378) in
  let __v36388 ⇐ recv c0_v36387 in
  match __v36388 with
  | (__v36389, c0_v36390) ⇒ close⇓ c0_v36390
  end

trans12 success--------------------------

fun andb_i1(b1_v36794, b2_v36795) = if b1_v36794 then
                                      b2_v36795
                                    else
                                      0

val andbclo_i70 = fn b1_v36796 b2_v36797 ⇒ andb_i1(b1_v36796, b2_v36797)

fun orb_i2(b1_v36798, b2_v36799) = if b1_v36798 then
                                     1
                                   else
                                     b2_v36799

val orbclo_i71 = fn b1_v36800 b2_v36801 ⇒ orb_i2(b1_v36800, b2_v36801)

fun notb_i3(b_v36802) = if b_v36802 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v36803 ⇒ notb_i3(b_v36803)

fun compareb_i4(b1_v36804, b2_v36805) =
  if b1_v36804 then
    if b2_v36805 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v36805 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v36806 b2_v36807 ⇒ compareb_i4(b1_v36806, b2_v36807)

fun lten_i5(x_v36808, y_v36809) =
  let __v36810 = x_v36808 in
  if __v36810 then
    let x_v36811 = __v36810.-1 in
    let __v36812 = y_v36809 in
    if __v36812 then
      let y_v36813 = __v36812.-1 in lten_i5(x_v36811, y_v36813)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v36814 y_v36815 ⇒ lten_i5(x_v36814, y_v36815)

fun gten_i6(x_v36816, y_v36817) =
  let __v36818 = x_v36816 in
  if __v36818 then
    let x_v36819 = __v36818.-1 in
    let __v36820 = y_v36817 in
    if __v36820 then
      let y_v36821 = __v36820.-1 in gten_i6(x_v36819, y_v36821)
    else
      1
  else
    let __v36822 = y_v36817 in
    if __v36822 then
      let __v36823 = __v36822.-1 in 0
    else
      1

val gtenclo_i75 = fn x_v36824 y_v36825 ⇒ gten_i6(x_v36824, y_v36825)

fun ltn_i7(x_v36826, y_v36827) =
  let __v36828 = x_v36826 in
  if __v36828 then
    let x_v36829 = __v36828.-1 in
    let __v36830 = y_v36827 in
    if __v36830 then
      let y_v36831 = __v36830.-1 in ltn_i7(x_v36829, y_v36831)
    else
      0
  else
    let __v36832 = y_v36827 in
    if __v36832 then
      let y_v36833 = __v36832.-1 in 1
    else
      0

val ltnclo_i76 = fn x_v36834 y_v36835 ⇒ ltn_i7(x_v36834, y_v36835)

fun gtn_i8(x_v36836, y_v36837) =
  let __v36838 = x_v36836 in
  if __v36838 then
    let x_v36839 = __v36838.-1 in
    let __v36840 = y_v36837 in
    if __v36840 then
      let y_v36841 = __v36840.-1 in gtn_i8(x_v36839, y_v36841)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v36842 y_v36843 ⇒ gtn_i8(x_v36842, y_v36843)

fun eqn_i9(x_v36844, y_v36845) =
  let __v36846 = x_v36844 in
  if __v36846 then
    let x_v36847 = __v36846.-1 in
    let __v36848 = y_v36845 in
    if __v36848 then
      let y_v36849 = __v36848.-1 in eqn_i9(x_v36847, y_v36849)
    else
      0
  else
    let __v36850 = y_v36845 in
    if __v36850 then
      let __v36851 = __v36850.-1 in 0
    else
      1

val eqnclo_i78 = fn x_v36852 y_v36853 ⇒ eqn_i9(x_v36852, y_v36853)

fun comparen_i10(n1_v36854, n2_v36855) =
  let __v36856 = n1_v36854 in
  if __v36856 then
    let n1_v36857 = __v36856.-1 in
    let __v36858 = n2_v36855 in
    if __v36858 then
      let n2_v36859 = __v36858.-1 in comparen_i10(n1_v36857, n2_v36859)
    else
      GT_c2
  else
    let __v36860 = n2_v36855 in
    if __v36860 then
      let __v36861 = __v36860.-1 in LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v36862 n2_v36863 ⇒ comparen_i10(n1_v36862, n2_v36863)

fun pred_i11(x_v36864) =
  let __v36865 = x_v36864 in
  if __v36865 then
    let x_v36866 = __v36865.-1 in x_v36866
  else
    0

val predclo_i80 = fn x_v36867 ⇒ pred_i11(x_v36867)

fun addn_i12(x_v36868, y_v36869) =
  let __v36870 = x_v36868 in
  if __v36870 then
    let x_v36871 = __v36870.-1 in addn_i12(x_v36871, y_v36869).+1
  else
    y_v36869

val addnclo_i81 = fn x_v36872 y_v36873 ⇒ addn_i12(x_v36872, y_v36873)

fun subn_i13(x_v36874, y_v36875) =
  let __v36876 = y_v36875 in
  if __v36876 then
    let y_v36877 = __v36876.-1 in subn_i13(pred_i11(x_v36874), y_v36877)
  else
    x_v36874

val subnclo_i82 = fn x_v36878 y_v36879 ⇒ subn_i13(x_v36878, y_v36879)

fun muln_i14(x_v36880, y_v36881) =
  let __v36882 = x_v36880 in
  if __v36882 then
    let x_v36883 = __v36882.-1 in
    addn_i12(y_v36881, muln_i14(x_v36883, y_v36881))
  else
    0

val mulnclo_i83 = fn x_v36884 y_v36885 ⇒ muln_i14(x_v36884, y_v36885)

fun divn_i15(x_v36886, y_v36887) =
  if ltn_i7(x_v36886, y_v36887) then
    0
  else
    divn_i15(subn_i13(x_v36886, y_v36887), y_v36887).+1

val divnclo_i84 = fn x_v36888 y_v36889 ⇒ divn_i15(x_v36888, y_v36889)

fun modn_i16(x_v36890, y_v36891) =
  subn_i13(x_v36890, muln_i14(divn_i15(x_v36890, y_v36891), y_v36891))

val modnclo_i85 = fn x_v36892 y_v36893 ⇒ modn_i16(x_v36892, y_v36893)

fun eqc_i17(c1_v36894, c2_v36895) =
  match c1_v36894 with
  | Char_c5 n1_v36896 ⇒
    match c2_v36895 with
    | Char_c5 n2_v36897 ⇒ eqn_i9(n1_v36896, n2_v36897)
    end
  end

val eqcclo_i86 = fn c1_v36898 c2_v36899 ⇒ eqc_i17(c1_v36898, c2_v36899)

fun comparec_i18(c1_v36900, c2_v36901) =
  match c1_v36900 with
  | Char_c5 n1_v36902 ⇒
    match c2_v36901 with
    | Char_c5 n2_v36903 ⇒ comparen_i10(n1_v36902, n2_v36903)
    end
  end

val comparecclo_i87 =
  fn c1_v36904 c2_v36905 ⇒ comparec_i18(c1_v36904, c2_v36905)

fun cats_i19(s1_v36906, s2_v36907) =
  match s1_v36906 with
  | EmptyString_c6  ⇒ s2_v36907
  | String_c7 c_v36908 s1_v36909 ⇒
    (String_c7 c_v36908 cats_i19(s1_v36909, s2_v36907))
  end

val catsclo_i88 = fn s1_v36910 s2_v36911 ⇒ cats_i19(s1_v36910, s2_v36911)

fun strlen_i20(s_v36912) =
  match s_v36912 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v36913 s_v36914 ⇒ strlen_i20(s_v36914).+1
  end

val strlenclo_i89 = fn s_v36915 ⇒ strlen_i20(s_v36915)

fun eqs_i21(s1_v36916, s2_v36917) =
  match s1_v36916 with
  | EmptyString_c6  ⇒
    match s2_v36917 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v36918 __v36919 ⇒ 0
    end
  | String_c7 c1_v36920 s1_v36921 ⇒
    match s2_v36917 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v36922 s2_v36923 ⇒
      andb_i1(eqc_i17(c1_v36920, c2_v36922), eqs_i21(s1_v36921, s2_v36923))
    end
  end

val eqsclo_i90 = fn s1_v36924 s2_v36925 ⇒ eqs_i21(s1_v36924, s2_v36925)

fun compares_i22(s1_v36926, s2_v36927) =
  match s1_v36926 with
  | EmptyString_c6  ⇒
    match s2_v36927 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v36928 __v36929 ⇒ LT_c1
    end
  | String_c7 c1_v36930 s1_v36931 ⇒
    match s2_v36927 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v36932 s2_v36933 ⇒
      match comparec_i18(c1_v36930, c2_v36932) with
      | EQ_c3  ⇒ compares_i22(s1_v36931, s2_v36933) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v36934 s2_v36935 ⇒ compares_i22(s1_v36934, s2_v36935)

fun and_thenUUU_i61(A_v36936, B_v36937, opt_v36938, f_v36939) =
  match opt_v36938 with
  | NoneUU_c18  ⇒ NoneUU_c18 | SomeUU_c19 x_v36940 ⇒ (f_v36939) x_v36940
  end

val and_thenUUUclo_i92 =
  fn A_v36941 B_v36942 opt_v36943 ⇒
    ln f_v36944 ⇒ and_thenUUU_i61(A_v36941, B_v36942, opt_v36943, f_v36944)

fun and_thenUUL_i60(A_v36945, B_v36946, opt_v36947, f_v36948) =
  match opt_v36947 with
  | NoneUL_c16  ⇒ NoneUL_c16 | SomeUL_c17 x_v36949 ⇒ (f_v36948) x_v36949
  end

val and_thenUULclo_i93 =
  fn A_v36950 B_v36951 opt_v36952 ⇒
    ln f_v36953 ⇒ and_thenUUL_i60(A_v36950, B_v36951, opt_v36952, f_v36953)

fun and_thenULU_i59(A_v36954, B_v36955, opt_v36956, f_v36957) =
  match opt_v36956 with
  | NoneUU_c18  ⇒ NoneLU_c14 | SomeUU_c19 x_v36958 ⇒ (f_v36957) x_v36958
  end

val and_thenULUclo_i94 =
  fn A_v36959 B_v36960 opt_v36961 ⇒
    ln f_v36962 ⇒ and_thenULU_i59(A_v36959, B_v36960, opt_v36961, f_v36962)

fun and_thenULL_i58(A_v36963, B_v36964, opt_v36965, f_v36966) =
  match opt_v36965 with
  | NoneUL_c16  ⇒ NoneLL_c12 | SomeUL_c17 x_v36967 ⇒ (f_v36966) x_v36967
  end

val and_thenULLclo_i95 =
  fn A_v36968 B_v36969 opt_v36970 ⇒
    ln f_v36971 ⇒ and_thenULL_i58(A_v36968, B_v36969, opt_v36970, f_v36971)

fun and_thenLUL_i56(A_v36972, B_v36973, opt_v36974, f_v36975) =
  match opt_v36974 with
  | NoneLL_c12  ⇒ NoneUL_c16 | SomeLL_c13 x_v36976 ⇒ (f_v36975) x_v36976
  end

val and_thenLULclo_i96 =
  fn A_v36977 B_v36978 opt_v36979 ⇒
    ln f_v36980 ⇒ and_thenLUL_i56(A_v36977, B_v36978, opt_v36979, f_v36980)

fun and_thenLLL_i54(A_v36981, B_v36982, opt_v36983, f_v36984) =
  match opt_v36983 with
  | NoneLL_c12  ⇒ NoneLL_c12 | SomeLL_c13 x_v36985 ⇒ (f_v36984) x_v36985
  end

val and_thenLLLclo_i97 =
  fn A_v36986 B_v36987 opt_v36988 ⇒
    ln f_v36989 ⇒ and_thenLLL_i54(A_v36986, B_v36987, opt_v36988, f_v36989)

fun lenUU_i65(A_v36990, xs_v36991) =
  match xs_v36991 with
  | nilUU_c26  ⇒ (0, nilUU_c26)
  | consUU_c27 x_v36992 xs_v36993 ⇒
    match lenUU_i65(NULL, xs_v36993) with
    | (n_v36994, xs_v36995) ⇒
      (n_v36994.+1, (consUU_c27 x_v36992 xs_v36995))
    end
  end

val lenUUclo_i98 = fn A_v36996 xs_v36997 ⇒ lenUU_i65(A_v36996, xs_v36997)

fun lenUL_i64(A_v36998, xs_v36999) =
  match xs_v36999 with
  | nilUL_c24  ⇒ (0, nilUL_c24)
  | consUL_c25 x_v37000 xs_v37001 ⇒
    match lenUL_i64(NULL, xs_v37001) with
    | (n_v37002, xs_v37003) ⇒
      (n_v37002.+1, (consUL_c25 x_v37000 xs_v37003))
    end
  end

val lenULclo_i99 = fn A_v37004 xs_v37005 ⇒ lenUL_i64(A_v37004, xs_v37005)

fun lenLL_i62(A_v37006, xs_v37007) =
  match xs_v37007 with
  | nilLL_c20  ⇒ (0, nilLL_c20)
  | consLL_c21 x_v37008 xs_v37009 ⇒
    match lenLL_i62(NULL, xs_v37009) with
    | (n_v37010, xs_v37011) ⇒
      (n_v37010.+1, (consLL_c21 x_v37008 xs_v37011))
    end
  end

val lenLLclo_i100 = fn A_v37012 xs_v37013 ⇒ lenLL_i62(A_v37012, xs_v37013)

fun appendUU_i69(A_v37014, xs_v37015, ys_v37016) =
  match xs_v37015 with
  | nilUU_c26  ⇒ ys_v37016
  | consUU_c27 x_v37017 xs_v37018 ⇒
    (consUU_c27 x_v37017 appendUU_i69(NULL, xs_v37018, ys_v37016))
  end

val appendUUclo_i101 =
  fn A_v37019 xs_v37020 ⇒
    ln ys_v37021 ⇒ appendUU_i69(A_v37019, xs_v37020, ys_v37021)

fun appendUL_i68(A_v37022, xs_v37023, ys_v37024) =
  match xs_v37023 with
  | nilUL_c24  ⇒ ys_v37024
  | consUL_c25 x_v37025 xs_v37026 ⇒
    (consUL_c25 x_v37025 appendUL_i68(NULL, xs_v37026, ys_v37024))
  end

val appendULclo_i102 =
  fn A_v37027 xs_v37028 ⇒
    ln ys_v37029 ⇒ appendUL_i68(A_v37027, xs_v37028, ys_v37029)

fun appendLL_i66(A_v37030, xs_v37031, ys_v37032) =
  match xs_v37031 with
  | nilLL_c20  ⇒ ys_v37032
  | consLL_c21 x_v37033 xs_v37034 ⇒
    (consLL_c21 x_v37033 appendLL_i66(NULL, xs_v37034, ys_v37032))
  end

val appendLLclo_i103 =
  fn A_v37035 xs_v37036 ⇒
    ln ys_v37037 ⇒ appendLL_i66(A_v37035, xs_v37036, ys_v37037)

fun readline_i32(__v37038) =
  ln __v37039 ⇒
    let ch_v37040 = (ln __v37041 ⇒ open stdin) NULL in
    let ch_v37042 =
      ((fn x_v37043 ⇒ ln __v37044 ⇒ send(ch_v37040, x_v37043)) 1) NULL
    in
    let __v37045 = (ln __v37046 ⇒ recv(ch_v37042)) NULL in
    (match __v37045 with
     | (s_v37047, ch_v37048) ⇒
       ln __v37049 ⇒
         let ch_v37050 =
           ((fn x_v37051 ⇒ ln __v37052 ⇒ send(ch_v37048, x_v37051)) 0)
             NULL
         in
         let __v37053 =
           (ln __v37054 ⇒ let __v37055 = ch_v37050 in NULL) NULL
         in (ln __v37056 ⇒ s_v37047) NULL
     end) NULL

val readlineclo_i104 = fn __v37057 ⇒ readline_i32(__v37057)

fun print_i33(s_v37058) =
  ln __v37059 ⇒
    let ch_v37060 = (ln __v37061 ⇒ open stdout) NULL in
    let ch_v37062 =
      ((fn x_v37063 ⇒ ln __v37064 ⇒ send(ch_v37060, x_v37063)) 1) NULL
    in
    let ch_v37065 =
      ((fn x_v37066 ⇒ ln __v37067 ⇒ send(ch_v37062, x_v37066)) s_v37058)
        NULL
    in
    let ch_v37068 =
      ((fn x_v37069 ⇒ ln __v37070 ⇒ send(ch_v37065, x_v37069)) 0) NULL
    in (ln __v37071 ⇒ let __v37072 = ch_v37068 in NULL) NULL

val printclo_i105 = fn s_v37073 ⇒ print_i33(s_v37073)

fun prerr_i34(s_v37074) =
  ln __v37075 ⇒
    let ch_v37076 = (ln __v37077 ⇒ open stderr) NULL in
    let ch_v37078 =
      ((fn x_v37079 ⇒ ln __v37080 ⇒ send(ch_v37076, x_v37079)) 1) NULL
    in
    let ch_v37081 =
      ((fn x_v37082 ⇒ ln __v37083 ⇒ send(ch_v37078, x_v37082)) s_v37074)
        NULL
    in
    let ch_v37084 =
      ((fn x_v37085 ⇒ ln __v37086 ⇒ send(ch_v37081, x_v37085)) 0) NULL
    in (ln __v37087 ⇒ let __v37088 = ch_v37084 in NULL) NULL

val prerrclo_i106 = fn s_v37089 ⇒ prerr_i34(s_v37089)

val digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

fun get_at_i36(A_v37090, n_v37091, xs_v37092, a_v37093) =
  let __v37094 = n_v37091 in
  if __v37094 then
    let n_v37095 = __v37094.-1 in
    match xs_v37092 with
    | nilUU_c26  ⇒ a_v37093
    | consUU_c27 __v37096 xs_v37097 ⇒
      get_at_i36(NULL, n_v37095, xs_v37097, a_v37093)
    end
  else
    match xs_v37092 with
    | nilUU_c26  ⇒ a_v37093 | consUU_c27 x_v37098 __v37099 ⇒ x_v37098
    end

val get_atclo_i107 =
  fn A_v37100 n_v37101 xs_v37102 a_v37103 ⇒
    get_at_i36(A_v37100, n_v37101, xs_v37102, a_v37103)

fun string_of_digit_i37(n_v37104) =
  get_at_i36(NULL, n_v37104, digits_i35, EmptyString_c6)

val string_of_digitclo_i108 = fn n_v37105 ⇒ string_of_digit_i37(n_v37105)

fun string_of_nat_i38(n_v37106) =
  let s_v37107 = string_of_digit_i37(modn_i16(n_v37106, 10)) in
  let n_v37108 = divn_i15(n_v37106, 10) in
  if ltn_i7(0, n_v37108) then
    cats_i19(string_of_nat_i38(n_v37108), s_v37107)
  else
    s_v37107

val string_of_natclo_i109 = fn n_v37109 ⇒ string_of_nat_i38(n_v37109)

fun digit_of_char_i39(c_v37110) =
  if eqc_i17(c_v37110, '0') then
    (SomeUL_c17 0)
  else
    if eqc_i17(c_v37110, '1') then
      (SomeUL_c17 1)
    else
      if eqc_i17(c_v37110, '2') then
        (SomeUL_c17 2)
      else
        if eqc_i17(c_v37110, '3') then
          (SomeUL_c17 3)
        else
          if eqc_i17(c_v37110, '4') then
            (SomeUL_c17 4)
          else
            if eqc_i17(c_v37110, '5') then
              (SomeUL_c17 5)
            else
              if eqc_i17(c_v37110, '6') then
                (SomeUL_c17 6)
              else
                if eqc_i17(c_v37110, '7') then
                  (SomeUL_c17 7)
                else
                  if eqc_i17(c_v37110, '8') then
                    (SomeUL_c17 8)
                  else
                    if eqc_i17(c_v37110, '9') then
                      (SomeUL_c17 9)
                    else
                      NoneUL_c16

val digit_of_charclo_i110 = fn c_v37111 ⇒ digit_of_char_i39(c_v37111)

fun nat_of_string_loop_i40(s_v37112, acc_v37113) =
  match s_v37112 with
  | EmptyString_c6  ⇒ (SomeUL_c17 acc_v37113)
  | String_c7 c_v37114 s_v37115 ⇒
    match digit_of_char_i39(c_v37114) with
    | NoneUL_c16  ⇒ NoneUL_c16
    | SomeUL_c17 n_v37116 ⇒
      nat_of_string_loop_i40(s_v37115,
                             addn_i12(muln_i14(acc_v37113, 10), n_v37116))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v37117 acc_v37118 ⇒ nat_of_string_loop_i40(s_v37117, acc_v37118)

fun nat_of_string_i41(s_v37119) = nat_of_string_loop_i40(s_v37119, 0)

val nat_of_stringclo_i112 = fn s_v37120 ⇒ nat_of_string_i41(s_v37120)

fun read_nat_i48(__v37121) =
  ln __v37122 ⇒
    let s_v37123 = (readline_i32(NULL)) NULL in
    (match nat_of_string_i41(s_v37123) with
     | SomeUL_c17 n_v37124 ⇒ ln __v37125 ⇒ n_v37124
     | NoneUL_c16  ⇒
       ln __v37126 ⇒
         let __v37127 = (print_i33("please input a natural number\n")) NULL
         in (read_nat_i48(NULL)) NULL
     end) NULL

val read_natclo_i113 = fn __v37128 ⇒ read_nat_i48(__v37128)

fun player_loop_i49(ans_v37129, repeat_v37130, c_v37131) =
  (let __v37132 = repeat_v37130 in
   if __v37132 then
     let repeat_v37133 = __v37132.-1 in
     fn c_v37134 ⇒
       ln __v37135 ⇒
         let guess_v37136 = (read_nat_i48(NULL)) NULL in
         let c_v37137 =
           ((fn x_v37138 ⇒ ln __v37139 ⇒ send(c_v37134, x_v37138))
              guess_v37136)
             NULL
         in
         let __v37140 = (ln __v37141 ⇒ recv(c_v37137)) NULL in
         (match __v37140 with
          | (ord_v37142, c_v37143) ⇒
            ln __v37144 ⇒
              let __v37145 = (ln __v37146 ⇒ (NULL, c_v37143)) NULL in
              (match __v37145 with
               | (pf_v37147, c_v37148) ⇒
                 (match ord_v37142 with
                  | EQ_c3  ⇒
                    fn c_v37149 ⇒
                      ln __v37150 ⇒
                        let __v37151 = (print_i33("You Win!\n")) NULL in
                        (ln __v37152 ⇒ close(c_v37149)) NULL
                  | LT_c1  ⇒
                    fn c_v37153 ⇒
                      ln __v37154 ⇒
                        let __v37155 =
                          (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v37133)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v37133, c_v37153)) NULL
                  | GT_c2  ⇒
                    fn c_v37156 ⇒
                      ln __v37157 ⇒
                        let __v37158 =
                          (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                                       string_of_nat_i38(
                                                       repeat_v37133)),
                                              " more tries.\n")))
                            NULL
                        in
                        (player_loop_i49(NULL, repeat_v37133, c_v37156)) NULL
                  end) c_v37148
               end) NULL
          end) NULL
   else
     fn c_v37159 ⇒
       ln __v37160 ⇒
         let __v37161 = (ln __v37162 ⇒ recv(c_v37159)) NULL in
         (match __v37161 with
          | (ans_v37163, c_v37164) ⇒
            ln __v37165 ⇒
              let __v37166 = (ln __v37167 ⇒ (NULL, c_v37164)) NULL in
              (match __v37166 with
               | (pf_v37168, c_v37169) ⇒
                 ln __v37170 ⇒
                   let __v37171 =
                     (print_i33(cats_i19(cats_i19("You Lose! The answer is ",
                                                  string_of_nat_i38(ans_v37163)),
                                         ".\n")))
                       NULL
                   in (ln __v37172 ⇒ close(c_v37169)) NULL
               end) NULL
          end) NULL)
    c_v37131

val player_loopclo_i114 =
  fn ans_v37173 repeat_v37174 c_v37175 ⇒
    player_loop_i49(ans_v37173, repeat_v37174, c_v37175)

fun player_i50(c_v37176) =
  ln __v37177 ⇒
    let __v37178 = (ln __v37179 ⇒ recv(c_v37176)) NULL in
    (match __v37178 with
     | (lower_v37180, c_v37181) ⇒
       ln __v37182 ⇒
         let __v37183 = (ln __v37184 ⇒ recv(c_v37181)) NULL in
         (match __v37183 with
          | (upper_v37185, c_v37186) ⇒
            ln __v37187 ⇒
              let __v37188 = (ln __v37189 ⇒ (NULL, c_v37186)) NULL in
              (match __v37188 with
               | (ans_v37190, c_v37191) ⇒
                 ln __v37192 ⇒
                   let __v37193 = (ln __v37194 ⇒ (NULL, c_v37191)) NULL in
                   (match __v37193 with
                    | (pf1_v37195, c_v37196) ⇒
                      ln __v37197 ⇒
                        let __v37198 =
                          (ln __v37199 ⇒ (NULL, c_v37196)) NULL
                        in
                        (match __v37198 with
                         | (pf2_v37200, c_v37201) ⇒
                           ln __v37202 ⇒
                             let __v37203 =
                               (ln __v37204 ⇒ recv(c_v37201)) NULL
                             in
                             (match __v37203 with
                              | (repeat_v37205, c_v37206) ⇒
                                ln __v37207 ⇒
                                  let __v37208 =
                                    (print_i33(cats_i19(cats_i19(cats_i19(
                                                                 cats_i19(
                                                                 "Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v37180)),
                                                                 " and "),
                                                                 string_of_nat_i38(
                                                                 upper_v37185)),
                                                        ".\n")))
                                      NULL
                                  in
                                  let __v37209 =
                                    (print_i33(cats_i19(cats_i19("You have ",
                                                                 string_of_nat_i38(
                                                                 repeat_v37205)),
                                                        " tries.\n")))
                                      NULL
                                  in
                                  (player_loop_i49(NULL, repeat_v37205,
                                                   c_v37206))
                                    NULL
                              end) NULL
                         end) NULL
                    end) NULL
               end) NULL
          end) NULL
     end) NULL

val playerclo_i115 = fn c_v37210 ⇒ player_i50(c_v37210)

fun server_loop_i51(ans_v37211, repeat_v37212, c_v37213) =
  (let __v37214 = repeat_v37212 in
   if __v37214 then
     let repeat_v37215 = __v37214.-1 in
     fn c_v37216 ⇒
       ln __v37217 ⇒
         let __v37218 = (ln __v37219 ⇒ recv(c_v37216)) NULL in
         (match __v37218 with
          | (n_v37220, c_v37221) ⇒
            let ord_v37222 = comparen_i10(ans_v37211, n_v37220) in
            ln __v37223 ⇒
              let c_v37224 =
                ((fn x_v37225 ⇒ ln __v37226 ⇒ send(c_v37221, x_v37225))
                   ord_v37222)
                  NULL
              in
              let c_v37227 =
                ((fn x_v37228 ⇒ ln __v37229 ⇒ c_v37224) NULL) NULL
              in
              ((match ord_v37222 with
                | EQ_c3  ⇒
                  fn c_v37230 ⇒
                    ln __v37231 ⇒ let __v37232 = c_v37230 in NULL
                | LT_c1  ⇒
                  fn c_v37233 ⇒
                    server_loop_i51(ans_v37211, repeat_v37215, c_v37233)
                | GT_c2  ⇒
                  fn c_v37234 ⇒
                    server_loop_i51(ans_v37211, repeat_v37215, c_v37234)
                end) c_v37227) NULL
          end) NULL
   else
     fn c_v37235 ⇒
       ln __v37236 ⇒
         let c_v37237 =
           ((fn x_v37238 ⇒ ln __v37239 ⇒ send(c_v37235, x_v37238))
              ans_v37211)
             NULL
         in
         let c_v37240 =
           ((fn x_v37241 ⇒ ln __v37242 ⇒ c_v37237) NULL) NULL
         in (ln __v37243 ⇒ let __v37244 = c_v37240 in NULL) NULL)
    c_v37213

val server_loopclo_i116 =
  fn ans_v37245 repeat_v37246 c_v37247 ⇒
    server_loop_i51(ans_v37245, repeat_v37246, c_v37247)

fun server_i52(c_v37248) =
  let lower_v37249 = 0 in
  let offset_v37250 = 128 in
  ln __v37251 ⇒
    let res_v37252 = (ln __v37253 ⇒ rand(lower_v37249, offset_v37250)) NULL
    in
    (match res_v37252 with
     | Between_c4 ans_v37254 pf1_v37255 pf2_v37256 ⇒
       let repeat_v37257 = 6 in
       ln __v37258 ⇒
         let c_v37259 =
           ((fn x_v37260 ⇒ ln __v37261 ⇒ send(c_v37248, x_v37260))
              lower_v37249)
             NULL
         in
         let c_v37262 =
           ((fn x_v37263 ⇒ ln __v37264 ⇒ send(c_v37259, x_v37263))
              addn_i12(lower_v37249, offset_v37250))
             NULL
         in
         let c_v37265 =
           ((fn x_v37266 ⇒ ln __v37267 ⇒ c_v37262) NULL) NULL
         in
         let c_v37268 =
           ((fn x_v37269 ⇒ ln __v37270 ⇒ c_v37265) NULL) NULL
         in
         let c_v37271 =
           ((fn x_v37272 ⇒ ln __v37273 ⇒ c_v37268) NULL) NULL
         in
         let c_v37274 =
           ((fn x_v37275 ⇒ ln __v37276 ⇒ send(c_v37271, x_v37275))
              repeat_v37257)
             NULL
         in (server_loop_i51(ans_v37254, repeat_v37257, c_v37274)) NULL
     end) NULL

val serverclo_i117 = fn c_v37277 ⇒ server_i52(c_v37277)

main =
  (ln __v37278 ⇒
     let c_v37279 =
       (ln __v37280 ⇒ fork c_v37281 in (server_i52(c_v37281)) NULL) NULL
     in
     let c0_v37282 =
       (ln __v37283 ⇒
          fork c0_v37284 in
            (ln __v37285 ⇒
               let __v37286 = (ln __v37287 ⇒ recv(c0_v37284)) NULL in
               (match __v37286 with
                | (c_v37288, c0_v37289) ⇒
                  ln __v37290 ⇒
                    let __v37291 = (player_i50(c_v37288)) NULL in
                    let c0_v37292 =
                      ((fn x_v37293 ⇒
                          ln __v37294 ⇒ send(c0_v37289, x_v37293))
                         NULL)
                        NULL
                    in
                    (ln __v37295 ⇒ let __v37296 = c0_v37292 in NULL) NULL
                end) NULL)
              NULL)
         NULL
     in
     let c0_v37297 =
       ((ln x_v37298 __v37299 ⇒ send(c0_v37282, x_v37298)) c_v37279) NULL
     in
     let __v37300 = (ln __v37301 ⇒ recv(c0_v37297)) NULL in
     (match __v37300 with
      | (__v37302, c0_v37303) ⇒ ln __v37304 ⇒ close(c0_v37303)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v38463, b2_v38464) = if b1_v38463 then
                                      b2_v38464
                                    else
                                      0

val andbclo_i70 = fn b1_v38465 b2_v38466 ⇒ andb_i1(b1_v38465, b2_v38466)

fun orb_i2(b1_v38467, b2_v38468) = if b1_v38467 then
                                     1
                                   else
                                     b2_v38468

val orbclo_i71 = fn b1_v38469 b2_v38470 ⇒ orb_i2(b1_v38469, b2_v38470)

fun notb_i3(b_v38471) = if b_v38471 then
                          0
                        else
                          1

val notbclo_i72 = fn b_v38472 ⇒ notb_i3(b_v38472)

fun compareb_i4(b1_v38473, b2_v38474) =
  if b1_v38473 then
    if b2_v38474 then
      EQ_c3
    else
      GT_c2
  else
    if b2_v38474 then
      LT_c1
    else
      EQ_c3

val comparebclo_i73 =
  fn b1_v38475 b2_v38476 ⇒ compareb_i4(b1_v38475, b2_v38476)

fun lten_i5(x_v38477, y_v38478) =
  if x_v38477 then
    if y_v38478 then
      lten_i5(x_v38477.-1, y_v38478.-1)
    else
      0
  else
    1

val ltenclo_i74 = fn x_v38479 y_v38480 ⇒ lten_i5(x_v38479, y_v38480)

fun gten_i6(x_v38481, y_v38482) =
  if x_v38481 then
    if y_v38482 then
      gten_i6(x_v38481.-1, y_v38482.-1)
    else
      1
  else
    if y_v38482 then
      0
    else
      1

val gtenclo_i75 = fn x_v38483 y_v38484 ⇒ gten_i6(x_v38483, y_v38484)

fun ltn_i7(x_v38485, y_v38486) =
  if x_v38485 then
    if y_v38486 then
      ltn_i7(x_v38485.-1, y_v38486.-1)
    else
      0
  else
    if y_v38486 then
      1
    else
      0

val ltnclo_i76 = fn x_v38487 y_v38488 ⇒ ltn_i7(x_v38487, y_v38488)

fun gtn_i8(x_v38489, y_v38490) =
  if x_v38489 then
    if y_v38490 then
      gtn_i8(x_v38489.-1, y_v38490.-1)
    else
      1
  else
    0

val gtnclo_i77 = fn x_v38491 y_v38492 ⇒ gtn_i8(x_v38491, y_v38492)

fun eqn_i9(x_v38493, y_v38494) =
  if x_v38493 then
    if y_v38494 then
      eqn_i9(x_v38493.-1, y_v38494.-1)
    else
      0
  else
    if y_v38494 then
      0
    else
      1

val eqnclo_i78 = fn x_v38495 y_v38496 ⇒ eqn_i9(x_v38495, y_v38496)

fun comparen_i10(n1_v38497, n2_v38498) =
  if n1_v38497 then
    if n2_v38498 then
      comparen_i10(n1_v38497.-1, n2_v38498.-1)
    else
      GT_c2
  else
    if n2_v38498 then
      LT_c1
    else
      EQ_c3

val comparenclo_i79 =
  fn n1_v38499 n2_v38500 ⇒ comparen_i10(n1_v38499, n2_v38500)

fun pred_i11(x_v38501) = if x_v38501 then
                           x_v38501.-1
                         else
                           0

val predclo_i80 = fn x_v38502 ⇒ pred_i11(x_v38502)

fun addn_i12(x_v38503, y_v38504) =
  if x_v38503 then
    addn_i12(x_v38503.-1, y_v38504).+1
  else
    y_v38504

val addnclo_i81 = fn x_v38505 y_v38506 ⇒ addn_i12(x_v38505, y_v38506)

fun subn_i13(x_v38507, y_v38508) =
  if y_v38508 then
    subn_i13(pred_i11(x_v38507), y_v38508.-1)
  else
    x_v38507

val subnclo_i82 = fn x_v38509 y_v38510 ⇒ subn_i13(x_v38509, y_v38510)

fun muln_i14(x_v38511, y_v38512) =
  if x_v38511 then
    addn_i12(y_v38512, muln_i14(x_v38511.-1, y_v38512))
  else
    0

val mulnclo_i83 = fn x_v38513 y_v38514 ⇒ muln_i14(x_v38513, y_v38514)

fun divn_i15(x_v38515, y_v38516) =
  if ltn_i7(x_v38515, y_v38516) then
    0
  else
    divn_i15(subn_i13(x_v38515, y_v38516), y_v38516).+1

val divnclo_i84 = fn x_v38517 y_v38518 ⇒ divn_i15(x_v38517, y_v38518)

fun modn_i16(x_v38519, y_v38520) =
  subn_i13(x_v38519, muln_i14(divn_i15(x_v38519, y_v38520), y_v38520))

val modnclo_i85 = fn x_v38521 y_v38522 ⇒ modn_i16(x_v38521, y_v38522)

fun eqc_i17(c1_v38523, c2_v38524) =
  match c1_v38523 with
  | Char_c5 n1_v38525 ⇒
    match c2_v38524 with
    | Char_c5 n2_v38526 ⇒ eqn_i9(n1_v38525, n2_v38526)
    end
  end

val eqcclo_i86 = fn c1_v38527 c2_v38528 ⇒ eqc_i17(c1_v38527, c2_v38528)

fun comparec_i18(c1_v38529, c2_v38530) =
  match c1_v38529 with
  | Char_c5 n1_v38531 ⇒
    match c2_v38530 with
    | Char_c5 n2_v38532 ⇒ comparen_i10(n1_v38531, n2_v38532)
    end
  end

val comparecclo_i87 =
  fn c1_v38533 c2_v38534 ⇒ comparec_i18(c1_v38533, c2_v38534)

fun cats_i19(s1_v38535, s2_v38536) =
  match s1_v38535 with
  | EmptyString_c6  ⇒ s2_v38536
  | String_c7 c_v38537 s1_v38538 ⇒
    (String_c7 c_v38537 cats_i19(s1_v38538, s2_v38536))
  end

val catsclo_i88 = fn s1_v38539 s2_v38540 ⇒ cats_i19(s1_v38539, s2_v38540)

fun strlen_i20(s_v38541) =
  match s_v38541 with
  | EmptyString_c6  ⇒ 0
  | String_c7 __v38542 s_v38543 ⇒ strlen_i20(s_v38543).+1
  end

val strlenclo_i89 = fn s_v38544 ⇒ strlen_i20(s_v38544)

fun eqs_i21(s1_v38545, s2_v38546) =
  match s1_v38545 with
  | EmptyString_c6  ⇒
    match s2_v38546 with
    | EmptyString_c6  ⇒ 1 | String_c7 __v38547 __v38548 ⇒ 0
    end
  | String_c7 c1_v38549 s1_v38550 ⇒
    match s2_v38546 with
    | EmptyString_c6  ⇒ 0
    | String_c7 c2_v38551 s2_v38552 ⇒
      andb_i1(eqc_i17(c1_v38549, c2_v38551), eqs_i21(s1_v38550, s2_v38552))
    end
  end

val eqsclo_i90 = fn s1_v38553 s2_v38554 ⇒ eqs_i21(s1_v38553, s2_v38554)

fun compares_i22(s1_v38555, s2_v38556) =
  match s1_v38555 with
  | EmptyString_c6  ⇒
    match s2_v38556 with
    | EmptyString_c6  ⇒ EQ_c3 | String_c7 __v38557 __v38558 ⇒ LT_c1
    end
  | String_c7 c1_v38559 s1_v38560 ⇒
    match s2_v38556 with
    | EmptyString_c6  ⇒ GT_c2
    | String_c7 c2_v38561 s2_v38562 ⇒
      match comparec_i18(c1_v38559, c2_v38561) with
      | EQ_c3  ⇒ compares_i22(s1_v38560, s2_v38562) | LT_c1  ⇒ LT_c1
      | GT_c2  ⇒ GT_c2
      end
    end
  end

val comparesclo_i91 =
  fn s1_v38563 s2_v38564 ⇒ compares_i22(s1_v38563, s2_v38564)

fun and_thenUUU_i61(A_v38565, B_v38566, opt_v38567, f_v38568) =
  match opt_v38567 with
  | NoneUU_c18  ⇒ NoneUU_c18 | SomeUU_c19 x_v38569 ⇒ (f_v38568) x_v38569
  end

val and_thenUUUclo_i92 =
  fn A_v38570 B_v38571 opt_v38572 ⇒
    ln f_v38573 ⇒ and_thenUUU_i61(A_v38570, B_v38571, opt_v38572, f_v38573)

fun and_thenUUL_i60(A_v38574, B_v38575, opt_v38576, f_v38577) =
  match opt_v38576 with
  | NoneUL_c16  ⇒ NoneUL_c16 | SomeUL_c17 x_v38578 ⇒ (f_v38577) x_v38578
  end

val and_thenUULclo_i93 =
  fn A_v38579 B_v38580 opt_v38581 ⇒
    ln f_v38582 ⇒ and_thenUUL_i60(A_v38579, B_v38580, opt_v38581, f_v38582)

fun and_thenULU_i59(A_v38583, B_v38584, opt_v38585, f_v38586) =
  match opt_v38585 with
  | NoneUU_c18  ⇒ NoneLU_c14 | SomeUU_c19 x_v38587 ⇒ (f_v38586) x_v38587
  end

val and_thenULUclo_i94 =
  fn A_v38588 B_v38589 opt_v38590 ⇒
    ln f_v38591 ⇒ and_thenULU_i59(A_v38588, B_v38589, opt_v38590, f_v38591)

fun and_thenULL_i58(A_v38592, B_v38593, opt_v38594, f_v38595) =
  match opt_v38594 with
  | NoneUL_c16  ⇒ NoneLL_c12 | SomeUL_c17 x_v38596 ⇒ (f_v38595) x_v38596
  end

val and_thenULLclo_i95 =
  fn A_v38597 B_v38598 opt_v38599 ⇒
    ln f_v38600 ⇒ and_thenULL_i58(A_v38597, B_v38598, opt_v38599, f_v38600)

fun and_thenLUL_i56(A_v38601, B_v38602, opt_v38603, f_v38604) =
  match opt_v38603 with
  | NoneLL_c12  ⇒ NoneUL_c16 | SomeLL_c13 x_v38605 ⇒ (f_v38604) x_v38605
  end

val and_thenLULclo_i96 =
  fn A_v38606 B_v38607 opt_v38608 ⇒
    ln f_v38609 ⇒ and_thenLUL_i56(A_v38606, B_v38607, opt_v38608, f_v38609)

fun and_thenLLL_i54(A_v38610, B_v38611, opt_v38612, f_v38613) =
  match opt_v38612 with
  | NoneLL_c12  ⇒ NoneLL_c12 | SomeLL_c13 x_v38614 ⇒ (f_v38613) x_v38614
  end

val and_thenLLLclo_i97 =
  fn A_v38615 B_v38616 opt_v38617 ⇒
    ln f_v38618 ⇒ and_thenLLL_i54(A_v38615, B_v38616, opt_v38617, f_v38618)

fun lenUU_i65(A_v38619, xs_v38620) =
  match xs_v38620 with
  | nilUU_c26  ⇒ (0, nilUU_c26)
  | consUU_c27 x_v38621 xs_v38622 ⇒
    match lenUU_i65(NULL, xs_v38622) with
    | (n_v38623, xs_v38624) ⇒
      (n_v38623.+1, (consUU_c27 x_v38621 xs_v38624))
    end
  end

val lenUUclo_i98 = fn A_v38625 xs_v38626 ⇒ lenUU_i65(A_v38625, xs_v38626)

fun lenUL_i64(A_v38627, xs_v38628) =
  match xs_v38628 with
  | nilUL_c24  ⇒ (0, nilUL_c24)
  | consUL_c25 x_v38629 xs_v38630 ⇒
    match lenUL_i64(NULL, xs_v38630) with
    | (n_v38631, xs_v38632) ⇒
      (n_v38631.+1, (consUL_c25 x_v38629 xs_v38632))
    end
  end

val lenULclo_i99 = fn A_v38633 xs_v38634 ⇒ lenUL_i64(A_v38633, xs_v38634)

fun lenLL_i62(A_v38635, xs_v38636) =
  match xs_v38636 with
  | nilLL_c20  ⇒ (0, nilLL_c20)
  | consLL_c21 x_v38637 xs_v38638 ⇒
    match lenLL_i62(NULL, xs_v38638) with
    | (n_v38639, xs_v38640) ⇒
      (n_v38639.+1, (consLL_c21 x_v38637 xs_v38640))
    end
  end

val lenLLclo_i100 = fn A_v38641 xs_v38642 ⇒ lenLL_i62(A_v38641, xs_v38642)

fun appendUU_i69(A_v38643, xs_v38644, ys_v38645) =
  match xs_v38644 with
  | nilUU_c26  ⇒ ys_v38645
  | consUU_c27 x_v38646 xs_v38647 ⇒
    (consUU_c27 x_v38646 appendUU_i69(NULL, xs_v38647, ys_v38645))
  end

val appendUUclo_i101 =
  fn A_v38648 xs_v38649 ⇒
    ln ys_v38650 ⇒ appendUU_i69(A_v38648, xs_v38649, ys_v38650)

fun appendUL_i68(A_v38651, xs_v38652, ys_v38653) =
  match xs_v38652 with
  | nilUL_c24  ⇒ ys_v38653
  | consUL_c25 x_v38654 xs_v38655 ⇒
    (consUL_c25 x_v38654 appendUL_i68(NULL, xs_v38655, ys_v38653))
  end

val appendULclo_i102 =
  fn A_v38656 xs_v38657 ⇒
    ln ys_v38658 ⇒ appendUL_i68(A_v38656, xs_v38657, ys_v38658)

fun appendLL_i66(A_v38659, xs_v38660, ys_v38661) =
  match xs_v38660 with
  | nilLL_c20  ⇒ ys_v38661
  | consLL_c21 x_v38662 xs_v38663 ⇒
    (consLL_c21 x_v38662 appendLL_i66(NULL, xs_v38663, ys_v38661))
  end

val appendLLclo_i103 =
  fn A_v38664 xs_v38665 ⇒
    ln ys_v38666 ⇒ appendLL_i66(A_v38664, xs_v38665, ys_v38666)

fun readline_i32(__v38667) =
  ln __v38668 ⇒
    let ch_v38669 = open stdin in
    let ch_v38670 = send(ch_v38669, 1) in
    let __v38671 = recv(ch_v38670) in
    match __v38671 with
    | (s_v38672, ch_v38673) ⇒
      let ch_v38674 = send(ch_v38673, 0) in s_v38672
    end

val readlineclo_i104 = fn __v38675 ⇒ readline_i32(__v38675)

fun print_i33(s_v38676) =
  ln __v38677 ⇒
    let ch_v38678 = open stdout in
    let ch_v38679 = send(ch_v38678, 1) in
    let ch_v38680 = send(ch_v38679, s_v38676) in
    let ch_v38681 = send(ch_v38680, 0) in NULL

val printclo_i105 = fn s_v38682 ⇒ print_i33(s_v38682)

fun prerr_i34(s_v38683) =
  ln __v38684 ⇒
    let ch_v38685 = open stderr in
    let ch_v38686 = send(ch_v38685, 1) in
    let ch_v38687 = send(ch_v38686, s_v38683) in
    let ch_v38688 = send(ch_v38687, 0) in NULL

val prerrclo_i106 = fn s_v38689 ⇒ prerr_i34(s_v38689)

val digits_i35 =
  (consUU_c27
    "0"
    (consUU_c27
      "1"
      (consUU_c27
        "2"
        (consUU_c27
          "3"
          (consUU_c27
            "4"
            (consUU_c27
              "5"
              (consUU_c27
                "6"
                (consUU_c27 "7" (consUU_c27 "8" (consUU_c27 "9" nilUU_c26))))))))))

fun get_at_i36(A_v38690, n_v38691, xs_v38692, a_v38693) =
  if n_v38691 then
    match xs_v38692 with
    | nilUU_c26  ⇒ a_v38693
    | consUU_c27 __v38694 xs_v38695 ⇒
      get_at_i36(NULL, n_v38691.-1, xs_v38695, a_v38693)
    end
  else
    match xs_v38692 with
    | nilUU_c26  ⇒ a_v38693 | consUU_c27 x_v38696 __v38697 ⇒ x_v38696
    end

val get_atclo_i107 =
  fn A_v38698 n_v38699 xs_v38700 a_v38701 ⇒
    get_at_i36(A_v38698, n_v38699, xs_v38700, a_v38701)

fun string_of_digit_i37(n_v38702) =
  get_at_i36(NULL, n_v38702, digits_i35, EmptyString_c6)

val string_of_digitclo_i108 = fn n_v38703 ⇒ string_of_digit_i37(n_v38703)

fun string_of_nat_i38(n_v38704) =
  let s_v38705 = string_of_digit_i37(modn_i16(n_v38704, 10)) in
  let n_v38706 = divn_i15(n_v38704, 10) in
  if ltn_i7(0, n_v38706) then
    cats_i19(string_of_nat_i38(n_v38706), s_v38705)
  else
    s_v38705

val string_of_natclo_i109 = fn n_v38707 ⇒ string_of_nat_i38(n_v38707)

fun digit_of_char_i39(c_v38708) =
  if eqc_i17(c_v38708, '0') then
    (SomeUL_c17 0)
  else
    if eqc_i17(c_v38708, '1') then
      (SomeUL_c17 1)
    else
      if eqc_i17(c_v38708, '2') then
        (SomeUL_c17 2)
      else
        if eqc_i17(c_v38708, '3') then
          (SomeUL_c17 3)
        else
          if eqc_i17(c_v38708, '4') then
            (SomeUL_c17 4)
          else
            if eqc_i17(c_v38708, '5') then
              (SomeUL_c17 5)
            else
              if eqc_i17(c_v38708, '6') then
                (SomeUL_c17 6)
              else
                if eqc_i17(c_v38708, '7') then
                  (SomeUL_c17 7)
                else
                  if eqc_i17(c_v38708, '8') then
                    (SomeUL_c17 8)
                  else
                    if eqc_i17(c_v38708, '9') then
                      (SomeUL_c17 9)
                    else
                      NoneUL_c16

val digit_of_charclo_i110 = fn c_v38709 ⇒ digit_of_char_i39(c_v38709)

fun nat_of_string_loop_i40(s_v38710, acc_v38711) =
  match s_v38710 with
  | EmptyString_c6  ⇒ (SomeUL_c17 acc_v38711)
  | String_c7 c_v38712 s_v38713 ⇒
    match digit_of_char_i39(c_v38712) with
    | NoneUL_c16  ⇒ NoneUL_c16
    | SomeUL_c17 n_v38714 ⇒
      nat_of_string_loop_i40(s_v38713,
                             addn_i12(muln_i14(acc_v38711, 10), n_v38714))
    end
  end

val nat_of_string_loopclo_i111 =
  fn s_v38715 acc_v38716 ⇒ nat_of_string_loop_i40(s_v38715, acc_v38716)

fun nat_of_string_i41(s_v38717) = nat_of_string_loop_i40(s_v38717, 0)

val nat_of_stringclo_i112 = fn s_v38718 ⇒ nat_of_string_i41(s_v38718)

fun read_nat_i48(__v38719) =
  ln __v38720 ⇒
    let s_v38721 = (readline_i32(NULL)) NULL in
    match nat_of_string_i41(s_v38721) with
    | SomeUL_c17 n_v38722 ⇒ n_v38722
    | NoneUL_c16  ⇒
      let __v38723 = (print_i33("please input a natural number\n")) NULL in
      (read_nat_i48(NULL)) NULL
    end

val read_natclo_i113 = fn __v38724 ⇒ read_nat_i48(__v38724)

fun player_loop_i49(ans_v38725, repeat_v38726, c_v38727) =
  (if repeat_v38726 then
     fn c_v38728 ⇒
       ln __v38729 ⇒
         let guess_v38730 = (read_nat_i48(NULL)) NULL in
         let c_v38731 = send(c_v38728, guess_v38730) in
         let __v38732 = recv(c_v38731) in
         match __v38732 with
         | (ord_v38733, c_v38734) ⇒
           match (NULL, c_v38734) with
           | (pf_v38735, c_v38736) ⇒
             match ord_v38733 with
             | EQ_c3  ⇒
               let __v38737 = (print_i33("You Win!\n")) NULL in
               close(c_v38736)
             | LT_c1  ⇒
               let __v38738 =
                 (print_i33(cats_i19(cats_i19("The answer is lesser, you have ",
                                              string_of_nat_i38(repeat_v38726.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v38726.-1, c_v38736)) NULL
             | GT_c2  ⇒
               let __v38739 =
                 (print_i33(cats_i19(cats_i19("The answer is greater, you have ",
                                              string_of_nat_i38(repeat_v38726.-1)),
                                     " more tries.\n")))
                   NULL
               in (player_loop_i49(NULL, repeat_v38726.-1, c_v38736)) NULL
             end
           end
         end
   else
     fn c_v38740 ⇒
       ln __v38741 ⇒
         let __v38742 = recv(c_v38740) in
         match __v38742 with
         | (ans_v38743, c_v38744) ⇒
           match (NULL, c_v38744) with
           | (pf_v38745, c_v38746) ⇒
             let __v38747 =
               (print_i33(cats_i19(cats_i19("You Lose! The answer is ",
                                            string_of_nat_i38(ans_v38743)),
                                   ".\n")))
                 NULL
             in close(c_v38746)
           end
         end)
    c_v38727

val player_loopclo_i114 =
  fn ans_v38748 repeat_v38749 c_v38750 ⇒
    player_loop_i49(ans_v38748, repeat_v38749, c_v38750)

fun player_i50(c_v38751) =
  ln __v38752 ⇒
    let __v38753 = recv(c_v38751) in
    match __v38753 with
    | (lower_v38754, c_v38755) ⇒
      let __v38756 = recv(c_v38755) in
      match __v38756 with
      | (upper_v38757, c_v38758) ⇒
        match (NULL, c_v38758) with
        | (ans_v38759, c_v38760) ⇒
          match (NULL, c_v38760) with
          | (pf1_v38761, c_v38762) ⇒
            match (NULL, c_v38762) with
            | (pf2_v38763, c_v38764) ⇒
              let __v38765 = recv(c_v38764) in
              match __v38765 with
              | (repeat_v38766, c_v38767) ⇒
                let __v38768 =
                  (print_i33(cats_i19(cats_i19(cats_i19(cats_i19("Please make a guess between ",
                                                                 string_of_nat_i38(
                                                                 lower_v38754)),
                                                        " and "),
                                               string_of_nat_i38(upper_v38757)),
                                      ".\n")))
                    NULL
                in
                let __v38769 =
                  (print_i33(cats_i19(cats_i19("You have ",
                                               string_of_nat_i38(repeat_v38766)),
                                      " tries.\n")))
                    NULL
                in (player_loop_i49(NULL, repeat_v38766, c_v38767)) NULL
              end
            end
          end
        end
      end
    end

val playerclo_i115 = fn c_v38770 ⇒ player_i50(c_v38770)

fun server_loop_i51(ans_v38771, repeat_v38772, c_v38773) =
  (if repeat_v38772 then
     fn c_v38774 ⇒
       ln __v38775 ⇒
         let __v38776 = recv(c_v38774) in
         match __v38776 with
         | (n_v38777, c_v38778) ⇒
           let ord_v38779 = comparen_i10(ans_v38771, n_v38777) in
           let c_v38780 = send(c_v38778, ord_v38779) in
           match ord_v38779 with
           | EQ_c3  ⇒ NULL
           | LT_c1  ⇒
             (server_loop_i51(ans_v38771, repeat_v38772.-1, c_v38780)) NULL
           | GT_c2  ⇒
             (server_loop_i51(ans_v38771, repeat_v38772.-1, c_v38780)) NULL
           end
         end
   else
     fn c_v38781 ⇒
       ln __v38782 ⇒ let c_v38783 = send(c_v38781, ans_v38771) in NULL)
    c_v38773

val server_loopclo_i116 =
  fn ans_v38784 repeat_v38785 c_v38786 ⇒
    server_loop_i51(ans_v38784, repeat_v38785, c_v38786)

fun server_i52(c_v38787) =
  ln __v38788 ⇒
    let res_v38789 = rand(0, 128) in
    match res_v38789 with
    | Between_c4 ans_v38790 pf1_v38791 pf2_v38792 ⇒
      let c_v38793 = send(c_v38787, 0) in
      let c_v38794 =
        let x_v38795 = addn_i12(0, 128) in send(c_v38793, x_v38795)
      in
      let c_v38796 = send(c_v38794, 6) in
      (server_loop_i51(ans_v38790, 6, c_v38796)) NULL
    end

val serverclo_i117 = fn c_v38797 ⇒ server_i52(c_v38797)

main =
  let c_v38798 = fork c_v38799 in (server_i52(c_v38799)) NULL in
  let c0_v38800 =
    fork c0_v38801 in
      let __v38802 = recv(c0_v38801) in
      match __v38802 with
      | (c_v38803, c0_v38804) ⇒
        let __v38805 = (player_i50(c_v38803)) NULL in
        let c0_v38806 = send(c0_v38804, NULL) in NULL
      end
  in
  let c0_v38807 = send(c0_v38800, c_v38798) in
  let __v38808 = recv(c0_v38807) in
  match __v38808 with
  | (__v38809, c0_v38810) ⇒ close(c0_v38810)
  end

trans3e success--------------------------

trans34 success--------------------------

