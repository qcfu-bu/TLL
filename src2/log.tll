parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v143 : bool_d2) (b2_v144 : bool_d2) ⇒
    match b1_v143 as __v145 in ??1 with
    | true_c2  ⇒ b2_v144 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v148 : bool_d2) (b2_v149 : bool_d2) ⇒
    match b1_v148 as __v150 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v149
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v152 : bool_d2) ⇒
    match b_v152 as __v153 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v154 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v157 : nat_d3) (y_v158 : nat_d3) ⇒
    match x_v157 as __v159 in ??4 with
    | O_c4  ⇒ y_v158 | S_c5 x_v160 ⇒ (S_c5‹› (addn_i4 x_v160 y_v158))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v163 : nat_d3) (y_v164 : nat_d3) ⇒
    match x_v163 as __v165 in ??5 with
    | O_c4  ⇒ y_v164
    | S_c5 x_v166 ⇒ (addn_i4 y_v164 (muln_i5 x_v166 y_v164))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v169 : nat_d3) (y_v170 : nat_d3) ⇒
    match x_v169 as __v171 in ??6 with
    | O_c4  ⇒
      match y_v170 as __v172 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v173 ⇒ false_c3‹›
      end
    | S_c5 x_v174 ⇒
      match y_v170 as __v175 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v176 ⇒ (eqn_i6 x_v174 y_v176)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v179 : nat_d3) (y_v180 : nat_d3) ⇒
    match x_v179 as __v181 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v182 ⇒
      match y_v180 as __v183 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v184 ⇒ (lten_i7 x_v182 y_v184)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v187 : nat_d3) (y_v188 : nat_d3) ⇒
    match x_v187 as __v189 in ??11 with
    | O_c4  ⇒
      match y_v188 as __v190 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v191 ⇒ false_c3‹›
      end
    | S_c5 x_v192 ⇒
      match y_v188 as __v193 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v194 ⇒ (gten_i8 x_v192 y_v194)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v197 : nat_d3) (y_v198 : nat_d3) ⇒
    match x_v197 as __v199 in ??14 with
    | O_c4  ⇒
      match y_v198 as __v200 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v201 ⇒ true_c2‹›
      end
    | S_c5 x_v202 ⇒
      match y_v198 as __v203 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v204 ⇒ (ltn_i9 x_v202 y_v204)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v207 : nat_d3) (y_v208 : nat_d3) ⇒
    match x_v207 as __v209 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v210 ⇒
      match y_v208 as __v211 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v212 ⇒ (gtn_i10 x_v210 y_v212)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v213 : bool_d2) (b1_v214 : bool_d2) (b2_v215 : bool_d2)
    (b3_v216 : bool_d2) (b4_v217 : bool_d2) (b5_v218 : bool_d2)
    (b6_v219 : bool_d2) (b7_v220 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v221 : ascii_d4) (s_v222 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v225 : string_d5) (s2_v226 : string_d5) ⇒
    match s1_v225 as __v227 in ??19 with
    | EmptyString_c7  ⇒ s2_v226
    | String_c8 c_v228 s1_v229 ⇒
      (String_c8‹› c_v228 (cats_i11 s1_v229 s2_v226))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v231 : string_d5) ⇒
    match s_v231 as __v232 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v233 s_v234 ⇒ (S_c5‹› (strlen_i12 s_v234))
    end

inductive list_d6 ‹s_s235, t_s236›
  (A_v237 : Type‹s_s235›) : Type‹t_s236›
=
| nil_c9 of
    ‹s_s238, t_s239› (A_v240 : Type‹s_s238›)
    : (list_d6‹s_s238, t_s239› A_v240)
| cons_c10 of
    ‹s_s241, t_s242› (A_v243 : Type‹s_s241›) (hd_v244 : A_v243)
    (tl_v245 : (list_d6‹s_s241, t_s242› A_v243))
    : (list_d6‹s_s241, t_s242› A_v243)

program len_i13 ‹s_s246, t_s247› :
  ∀ {A_v248 : Type‹s_s246›} →
    (list_d6‹??21, t_s247› A_v248) →
      nat_d3 ⊗ (list_d6‹??22, t_s247› A_v248)
=
  fn {A_v251 : Type‹s_s246›}
     (xs_v252 : (list_d6‹??21, t_s247› A_v251)) ⇒
    match xs_v252 as __v253 in ??23 with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹??33, ??32›⟩
    | cons_c10 x_v254 xs_v255 ⇒
      match (len_i13‹??26, ??25› ??24 xs_v255) as __v256 in ??27 with
      | ⟨n_v257, xs_v258⟩ ⇒
        ⟨(S_c5‹› n_v257), (cons_c10‹??30, ??29› x_v254 xs_v258)⟩
      end
    end

program append_i14 ‹s_s259, t_s260› :
  ∀ {A_v261 : Type‹s_s259›} →
    (list_d6‹??34, t_s260› A_v261) →
      (list_d6‹??35, t_s260› A_v261) ⊸ (list_d6‹??37, ??36› A_v261)
=
  fn {A_v264 : Type‹s_s259›}
     (xs_v265 : (list_d6‹??34, t_s260› A_v264)) ⇒
    ln (ys_v266 : ??38) ⇒
      match xs_v265 as __v267 in ??39 with
      | nil_c9  ⇒ ys_v266
      | cons_c10 x_v268 xs_v269 ⇒
        (cons_c10‹??45, ??44›
          x_v268 (append_i14‹??42, ??41› ??40 xs_v269 ys_v266))
      end

logical stdin_rec_i15 : unit_d1 → proto =
  fn (__v271 : unit_d1) ⇒
    ⇑(b_v272 : bool_d2) ⇒
      match b_v272 as __v273 in ??46 with
      | true_c2  ⇒ ⇓(__v274 : string_d5) ⇒ (stdin_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i16 : unit_d1 → proto =
  fn (__v276 : unit_d1) ⇒
    ⇑(b_v277 : bool_d2) ⇒
      match b_v277 as __v278 in ??47 with
      | true_c2  ⇒ ⇑(__v279 : string_d5) ⇒ (stdout_rec_i16 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i17 : unit_d1 → proto =
  fn (__v281 : unit_d1) ⇒
    ⇑(b_v282 : bool_d2) ⇒
      match b_v282 as __v283 in ??48 with
      | true_c2  ⇒ ⇑(__v284 : string_d5) ⇒ (stderr_rec_i17 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i18 : proto = (stdin_rec_i15 tt_c1‹›)

logical stdout_t_i19 : proto = (stdout_rec_i16 tt_c1‹›)

logical stderr_t_i20 : proto = (stderr_rec_i17 tt_c1‹›)

program readline_i21 : unit_d1 → IO string_d5 =
  fn (__v286 : unit_d1) ⇒
    let ch_v287 ⇐ open stdin in
    let ch_v288 ⇐ (send ch_v287 true_c2‹›) in
    let __v289 ⇐ recv ch_v288 in
    match __v289 as __v290 in ??49 with
    | ⟨s_v291, ch_v292⟩ ⇒
      let ch_v293 ⇐ (send ch_v292 false_c3‹›) in
      let __v294 ⇐ close ch_v293 in return s_v291
    end

program print_i22 : string_d5 → IO unit_d1 =
  fn (s_v296 : string_d5) ⇒
    let ch_v297 ⇐ open stdout in
    let ch_v298 ⇐ (send ch_v297 true_c2‹›) in
    let ch_v299 ⇐ (send ch_v298 s_v296) in
    let ch_v300 ⇐ (send ch_v299 false_c3‹›) in close ch_v300

program prerr_i23 : string_d5 → IO unit_d1 =
  fn (s_v302 : string_d5) ⇒
    let ch_v303 ⇐ open stderr in
    let ch_v304 ⇐ (send ch_v303 true_c2‹›) in
    let ch_v305 ⇐ (send ch_v304 s_v302) in
    let ch_v306 ⇐ (send ch_v305 false_c3‹›) in close ch_v306

program main_i24 : IO unit_d1 =
  let c_v307 ⇐
    fork (c_v308 : ch⟨⇑{__v309 : string_d5} ⇒ end⟩) in
      let s_v310 ⇐ (readline_i21 tt_c1‹›) in
      let c_v311 ⇐ (send c_v308 s_v310) in close c_v311
  in
  let __v312 ⇐ recv c_v307 in
  match __v312 as __v313 in ??50 with
  | ⟨{msg_v314}, c_v315⟩ ⇒ close c_v315
  end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1254 : bool_d2) (b2_v1255 : bool_d2) ⇒
    match b1_v1254 as __v1256 in bool_d2 with
    | true_c2  ⇒ b2_v1255 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1259 : bool_d2) (b2_v1260 : bool_d2) ⇒
    match b1_v1259 as __v1261 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v1260
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v1263 : bool_d2) ⇒
    match b_v1263 as __v1264 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v1265 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1268 : nat_d3) (y_v1269 : nat_d3) ⇒
    match x_v1268 as __v1270 in nat_d3 with
    | O_c4  ⇒ y_v1269
    | S_c5 x_v1271 ⇒ (S_c5‹› (addn_i4 x_v1271 y_v1269))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1274 : nat_d3) (y_v1275 : nat_d3) ⇒
    match x_v1274 as __v1276 in nat_d3 with
    | O_c4  ⇒ y_v1275
    | S_c5 x_v1277 ⇒ (addn_i4 y_v1275 (muln_i5 x_v1277 y_v1275))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1280 : nat_d3) (y_v1281 : nat_d3) ⇒
    match x_v1280 as __v1282 in bool_d2 with
    | O_c4  ⇒
      match y_v1281 as __v1283 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1284 ⇒ false_c3‹›
      end
    | S_c5 x_v1285 ⇒
      match y_v1281 as __v1286 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1287 ⇒ (eqn_i6 x_v1285 y_v1287)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1290 : nat_d3) (y_v1291 : nat_d3) ⇒
    match x_v1290 as __v1292 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v1293 ⇒
      match y_v1291 as __v1294 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1295 ⇒ (lten_i7 x_v1293 y_v1295)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1298 : nat_d3) (y_v1299 : nat_d3) ⇒
    match x_v1298 as __v1300 in bool_d2 with
    | O_c4  ⇒
      match y_v1299 as __v1301 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1302 ⇒ false_c3‹›
      end
    | S_c5 x_v1303 ⇒
      match y_v1299 as __v1304 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1305 ⇒ (gten_i8 x_v1303 y_v1305)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1308 : nat_d3) (y_v1309 : nat_d3) ⇒
    match x_v1308 as __v1310 in bool_d2 with
    | O_c4  ⇒
      match y_v1309 as __v1311 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1312 ⇒ true_c2‹›
      end
    | S_c5 x_v1313 ⇒
      match y_v1309 as __v1314 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1315 ⇒ (ltn_i9 x_v1313 y_v1315)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1318 : nat_d3) (y_v1319 : nat_d3) ⇒
    match x_v1318 as __v1320 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v1321 ⇒
      match y_v1319 as __v1322 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1323 ⇒ (gtn_i10 x_v1321 y_v1323)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v1324 : bool_d2) (b1_v1325 : bool_d2) (b2_v1326 : bool_d2)
    (b3_v1327 : bool_d2) (b4_v1328 : bool_d2) (b5_v1329 : bool_d2)
    (b6_v1330 : bool_d2) (b7_v1331 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v1332 : ascii_d4) (s_v1333 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v1336 : string_d5) (s2_v1337 : string_d5) ⇒
    match s1_v1336 as __v1338 in string_d5 with
    | EmptyString_c7  ⇒ s2_v1337
    | String_c8 c_v1339 s1_v1340 ⇒
      (String_c8‹› c_v1339 (cats_i11 s1_v1340 s2_v1337))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v1342 : string_d5) ⇒
    match s_v1342 as __v1343 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v1344 s_v1345 ⇒ (S_c5‹› (strlen_i12 s_v1345))
    end

inductive list_d6 ‹s_s1346, t_s1347›
  (A_v1348 : Type‹s_s1346›) : Type‹t_s1347›
=
| nil_c9 of
    ‹s_s1349, t_s1350› (A_v1351 : Type‹s_s1349›)
    : (list_d6‹s_s1349, t_s1350› A_v1351)
| cons_c10 of
    ‹s_s1352, t_s1353› (A_v1354 : Type‹s_s1352›) (hd_v1355 : A_v1354)
    (tl_v1356 : (list_d6‹s_s1352, t_s1353› A_v1354))
    : (list_d6‹s_s1352, t_s1353› A_v1354)

program len_i13 ‹s_s1357, t_s1358› :
  ∀ {A_v1359 : Type‹s_s1357›} →
    (list_d6‹s_s1357, t_s1358› A_v1359) →
      nat_d3 ⊗ (list_d6‹s_s1357, t_s1358› A_v1359)
=
  fn {A_v1362 : Type‹s_s1357›}
     (xs_v1363 : (list_d6‹s_s1357, t_s1358› A_v1362)) ⇒
    match xs_v1363 as __v1364 in
      nat_d3 ⊗ (list_d6‹s_s1357, t_s1358› A_v1362) with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹s_s1357, t_s1358›⟩
    | cons_c10 x_v1366 xs_v1367 ⇒
      match (len_i13‹s_s1357, t_s1358› A_v1362 xs_v1367) as __v1368 in
        nat_d3 ⊗ (list_d6‹s_s1357, t_s1358› A_v1362) with
      | ⟨n_v1370, xs_v1371⟩ ⇒
        ⟨(S_c5‹› n_v1370), (cons_c10‹s_s1357, t_s1358›
                                   x_v1366 xs_v1371)⟩
      end
    end

program append_i14 ‹s_s1372, t_s1373› :
  ∀ {A_v1374 : Type‹s_s1372›} →
    (list_d6‹s_s1372, t_s1373› A_v1374) →
      (list_d6‹s_s1372, t_s1373› A_v1374) ⊸
        (list_d6‹s_s1372, t_s1373› A_v1374)
=
  fn {A_v1377 : Type‹s_s1372›}
     (xs_v1378 : (list_d6‹s_s1372, t_s1373› A_v1377)) ⇒
    ln (ys_v1379 : (list_d6‹s_s1372, t_s1373› A_v1377)) ⇒
      match xs_v1378 as __v1380 in
        (list_d6‹s_s1372, t_s1373› A_v1377) with
      | nil_c9  ⇒ ys_v1379
      | cons_c10 x_v1381 xs_v1382 ⇒
        (cons_c10‹s_s1372, t_s1373›
          x_v1381
          (append_i14‹s_s1372, t_s1373› A_v1377 xs_v1382 ys_v1379))
      end

logical stdin_rec_i15 : unit_d1 → proto =
  fn (__v1384 : unit_d1) ⇒
    ⇑(b_v1385 : bool_d2) ⇒
      match b_v1385 as __v1386 in proto with
      | true_c2  ⇒ ⇓(__v1387 : string_d5) ⇒ (stdin_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i16 : unit_d1 → proto =
  fn (__v1389 : unit_d1) ⇒
    ⇑(b_v1390 : bool_d2) ⇒
      match b_v1390 as __v1391 in proto with
      | true_c2  ⇒
        ⇑(__v1392 : string_d5) ⇒ (stdout_rec_i16 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i17 : unit_d1 → proto =
  fn (__v1394 : unit_d1) ⇒
    ⇑(b_v1395 : bool_d2) ⇒
      match b_v1395 as __v1396 in proto with
      | true_c2  ⇒
        ⇑(__v1397 : string_d5) ⇒ (stderr_rec_i17 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i18 : proto = (stdin_rec_i15 tt_c1‹›)

logical stdout_t_i19 : proto = (stdout_rec_i16 tt_c1‹›)

logical stderr_t_i20 : proto = (stderr_rec_i17 tt_c1‹›)

program readline_i21 : unit_d1 → IO string_d5 =
  fn (__v1399 : unit_d1) ⇒
    let ch_v1400 ⇐ open stdin in
    let ch_v1401 ⇐ (send ch_v1400 true_c2‹›) in
    let __v1402 ⇐ recv ch_v1401 in
    match __v1402 as __v1403 in IO string_d5 with
    | ⟨s_v1404, ch_v1405⟩ ⇒
      let ch_v1406 ⇐ (send ch_v1405 false_c3‹›) in
      let __v1407 ⇐ close ch_v1406 in return s_v1404
    end

program print_i22 : string_d5 → IO unit_d1 =
  fn (s_v1409 : string_d5) ⇒
    let ch_v1410 ⇐ open stdout in
    let ch_v1411 ⇐ (send ch_v1410 true_c2‹›) in
    let ch_v1412 ⇐ (send ch_v1411 s_v1409) in
    let ch_v1413 ⇐ (send ch_v1412 false_c3‹›) in close ch_v1413

program prerr_i23 : string_d5 → IO unit_d1 =
  fn (s_v1415 : string_d5) ⇒
    let ch_v1416 ⇐ open stderr in
    let ch_v1417 ⇐ (send ch_v1416 true_c2‹›) in
    let ch_v1418 ⇐ (send ch_v1417 s_v1415) in
    let ch_v1419 ⇐ (send ch_v1418 false_c3‹›) in close ch_v1419

program main_i24 : IO unit_d1 =
  let c_v1420 ⇐
    fork (c_v1421 : ch⟨⇑{__v1422 : string_d5} ⇒ end⟩) in
      let s_v1423 ⇐ (readline_i21 tt_c1‹›) in
      let c_v1424 ⇐ (send c_v1421 s_v1423) in close c_v1424
  in
  let __v1425 ⇐ recv c_v1420 in
  match __v1425 as __v1426 in IO unit_d1 with
  | ⟨{msg_v1427}, c_v1428⟩ ⇒ close c_v1428
  end

trans1e success--------------------------

data unit_d7 =
| tt_c11 of size(0)

data bool_d8 =
| true_c12 of size(0) | false_c13 of size(0)

def andb_i25 =
  fn b1_v1681 b2_v1682 ⇒
    match b1_v1681 with
    | true_c12  ⇒ b2_v1682 | false_c13  ⇒ false_c13
    end

def orb_i26 =
  fn b1_v1683 b2_v1684 ⇒
    match b1_v1683 with
    | true_c12  ⇒ true_c12 | false_c13  ⇒ b2_v1684
    end

def notb_i27 =
  fn b_v1685 ⇒
    match b_v1685 with
    | true_c12  ⇒ false_c13 | false_c13  ⇒ true_c12
    end

data nat_d9 =
| O_c14 of size(0) | S_c15 of size(1)

def addn_i28 =
  fn x_v1686 y_v1687 ⇒
    match x_v1686 with
    | O_c14  ⇒ y_v1687
    | S_c15 x_v1688 ⇒ (S_c15 ((addn_i28 x_v1688) y_v1687))
    end

def muln_i29 =
  fn x_v1689 y_v1690 ⇒
    match x_v1689 with
    | O_c14  ⇒ y_v1690
    | S_c15 x_v1691 ⇒ ((addn_i28 y_v1690) ((muln_i29 x_v1691) y_v1690))
    end

def eqn_i30 =
  fn x_v1692 y_v1693 ⇒
    match x_v1692 with
    | O_c14  ⇒
      match y_v1693 with
      | O_c14  ⇒ true_c12 | S_c15 __v1694 ⇒ false_c13
      end
    | S_c15 x_v1695 ⇒
      match y_v1693 with
      | O_c14  ⇒ false_c13 | S_c15 y_v1696 ⇒ ((eqn_i30 x_v1695) y_v1696)
      end
    end

def lten_i31 =
  fn x_v1697 y_v1698 ⇒
    match x_v1697 with
    | O_c14  ⇒ true_c12
    | S_c15 x_v1699 ⇒
      match y_v1698 with
      | O_c14  ⇒ false_c13 | S_c15 y_v1700 ⇒ ((lten_i31 x_v1699) y_v1700)
      end
    end

def gten_i32 =
  fn x_v1701 y_v1702 ⇒
    match x_v1701 with
    | O_c14  ⇒
      match y_v1702 with
      | O_c14  ⇒ true_c12 | S_c15 __v1703 ⇒ false_c13
      end
    | S_c15 x_v1704 ⇒
      match y_v1702 with
      | O_c14  ⇒ true_c12 | S_c15 y_v1705 ⇒ ((gten_i32 x_v1704) y_v1705)
      end
    end

data ascii_d10 =
| Ascii_c16 of size(8)

data string_d11 =
| EmptyString_c17 of size(0) | String_c18 of size(2)

def cats_i35 =
  fn s1_v1706 s2_v1707 ⇒
    match s1_v1706 with
    | EmptyString_c17  ⇒ s2_v1707
    | String_c18 c_v1708 s1_v1709 ⇒
      (String_c18 c_v1708 ((cats_i35 s1_v1709) s2_v1707))
    end

def strlen_i36 =
  fn s_v1710 ⇒
    match s_v1710 with
    | EmptyString_c17  ⇒ O_c14
    | String_c18 __v1711 s_v1712 ⇒ (S_c15 (strlen_i36 s_v1712))
    end

data listUU_d15 =
| nilUU_c25 of size(0) | consUU_c26 of size(2)

data listUL_d14 =
| nilUL_c23 of size(0) | consUL_c24 of size(2)

data listLU_d13 =
| nilLU_c21 of size(0)

data listLL_d12 =
| nilLL_c19 of size(0) | consLL_c20 of size(2)

def lenUU_i40 =
  fn A_v1713 xs_v1714 ⇒
    match xs_v1714 with
    | nilUU_c25  ⇒ (O_c14, nilUU_c25)
    | consUU_c26 x_v1715 xs_v1716 ⇒
      match ((lenUU_i40 NULL) xs_v1716) with
      | (n_v1717, xs_v1718) ⇒
        ((S_c15 n_v1717), (consUU_c26 x_v1715 xs_v1718))
      end
    end

def lenUL_i39 =
  fn A_v1719 xs_v1720 ⇒
    match xs_v1720 with
    | nilUL_c23  ⇒ (O_c14, nilUL_c23)
    | consUL_c24 x_v1721 xs_v1722 ⇒
      match ((lenUL_i39 NULL) xs_v1722) with
      | (n_v1723, xs_v1724) ⇒
        ((S_c15 n_v1723), (consUL_c24 x_v1721 xs_v1724))
      end
    end

def lenLL_i37 =
  fn A_v1725 xs_v1726 ⇒
    match xs_v1726 with
    | nilLL_c19  ⇒ (O_c14, nilLL_c19)
    | consLL_c20 x_v1727 xs_v1728 ⇒
      match ((lenLL_i37 NULL) xs_v1728) with
      | (n_v1729, xs_v1730) ⇒
        ((S_c15 n_v1729), (consLL_c20 x_v1727 xs_v1730))
      end
    end

def appendUU_i44 =
  fn A_v1731 xs_v1732 ⇒
    ln ys_v1733 ⇒
      match xs_v1732 with
      | nilUU_c25  ⇒ ys_v1733
      | consUU_c26 x_v1734 xs_v1735 ⇒
        (consUU_c26 x_v1734 (((appendUU_i44 NULL) xs_v1735) ys_v1733))
      end

def appendUL_i43 =
  fn A_v1736 xs_v1737 ⇒
    ln ys_v1738 ⇒
      match xs_v1737 with
      | nilUL_c23  ⇒ ys_v1738
      | consUL_c24 x_v1739 xs_v1740 ⇒
        (consUL_c24 x_v1739 (((appendUL_i43 NULL) xs_v1740) ys_v1738))
      end

def appendLL_i41 =
  fn A_v1741 xs_v1742 ⇒
    ln ys_v1743 ⇒
      match xs_v1742 with
      | nilLL_c19  ⇒ ys_v1743
      | consLL_c20 x_v1744 xs_v1745 ⇒
        (consLL_c20 x_v1744 (((appendLL_i41 NULL) xs_v1745) ys_v1743))
      end

def readline_i51 =
  fn __v1746 ⇒
    let ch_v1747 ⇐ open stdin in
    let ch_v1748 ⇐ (send ch_v1747 true_c12) in
    let __v1749 ⇐ recv ch_v1748 in
    match __v1749 with
    | (s_v1750, ch_v1751) ⇒
      let ch_v1752 ⇐ (send ch_v1751 false_c13) in
      let __v1753 ⇐ close⇑ ch_v1752 in return s_v1750
    end

def print_i52 =
  fn s_v1754 ⇒
    let ch_v1755 ⇐ open stdout in
    let ch_v1756 ⇐ (send ch_v1755 true_c12) in
    let ch_v1757 ⇐ (send ch_v1756 s_v1754) in
    let ch_v1758 ⇐ (send ch_v1757 false_c13) in close⇑ ch_v1758

def prerr_i53 =
  fn s_v1759 ⇒
    let ch_v1760 ⇐ open stderr in
    let ch_v1761 ⇐ (send ch_v1760 true_c12) in
    let ch_v1762 ⇐ (send ch_v1761 s_v1759) in
    let ch_v1763 ⇐ (send ch_v1762 false_c13) in close⇑ ch_v1763

main =
  let c_v1764 ⇐
    fork c_v1765 in
      let s_v1766 ⇐ (readline_i51 tt_c11) in
      let c_v1767 ⇐ ({send} c_v1765 NULL) in close⇑ c_v1767
  in
  let __v1768 ⇐ {recv} c_v1764 in
  match __v1768 with
  | (msg_v1769, c_v1770) ⇒ close⇓ c_v1770
  end

trans12 success--------------------------

fun andb_i25(b1_v1897, b2_v1898) =
  match b1_v1897 with
  | true_c12  ⇒ b2_v1898 | false_c13  ⇒ false_c13
  end

val andbclo_i54 = fn b1_v1899 b2_v1900 ⇒ andb_i25(b1_v1899, b2_v1900)

fun orb_i26(b1_v1901, b2_v1902) =
  match b1_v1901 with
  | true_c12  ⇒ true_c12 | false_c13  ⇒ b2_v1902
  end

val orbclo_i55 = fn b1_v1903 b2_v1904 ⇒ orb_i26(b1_v1903, b2_v1904)

fun notb_i27(b_v1905) =
  match b_v1905 with
  | true_c12  ⇒ false_c13 | false_c13  ⇒ true_c12
  end

val notbclo_i56 = fn b_v1906 ⇒ notb_i27(b_v1906)

fun addn_i28(x_v1907, y_v1908) =
  match x_v1907 with
  | O_c14  ⇒ y_v1908 | S_c15 x_v1909 ⇒ (S_c15 addn_i28(x_v1909, y_v1908))
  end

val addnclo_i57 = fn x_v1910 y_v1911 ⇒ addn_i28(x_v1910, y_v1911)

fun muln_i29(x_v1912, y_v1913) =
  match x_v1912 with
  | O_c14  ⇒ y_v1913
  | S_c15 x_v1914 ⇒ addn_i28(y_v1913, muln_i29(x_v1914, y_v1913))
  end

val mulnclo_i58 = fn x_v1915 y_v1916 ⇒ muln_i29(x_v1915, y_v1916)

fun eqn_i30(x_v1917, y_v1918) =
  match x_v1917 with
  | O_c14  ⇒
    match y_v1918 with
    | O_c14  ⇒ true_c12 | S_c15 __v1919 ⇒ false_c13
    end
  | S_c15 x_v1920 ⇒
    match y_v1918 with
    | O_c14  ⇒ false_c13 | S_c15 y_v1921 ⇒ eqn_i30(x_v1920, y_v1921)
    end
  end

val eqnclo_i59 = fn x_v1922 y_v1923 ⇒ eqn_i30(x_v1922, y_v1923)

fun lten_i31(x_v1924, y_v1925) =
  match x_v1924 with
  | O_c14  ⇒ true_c12
  | S_c15 x_v1926 ⇒
    match y_v1925 with
    | O_c14  ⇒ false_c13 | S_c15 y_v1927 ⇒ lten_i31(x_v1926, y_v1927)
    end
  end

val ltenclo_i60 = fn x_v1928 y_v1929 ⇒ lten_i31(x_v1928, y_v1929)

fun gten_i32(x_v1930, y_v1931) =
  match x_v1930 with
  | O_c14  ⇒
    match y_v1931 with
    | O_c14  ⇒ true_c12 | S_c15 __v1932 ⇒ false_c13
    end
  | S_c15 x_v1933 ⇒
    match y_v1931 with
    | O_c14  ⇒ true_c12 | S_c15 y_v1934 ⇒ gten_i32(x_v1933, y_v1934)
    end
  end

val gtenclo_i61 = fn x_v1935 y_v1936 ⇒ gten_i32(x_v1935, y_v1936)

fun cats_i35(s1_v1937, s2_v1938) =
  match s1_v1937 with
  | EmptyString_c17  ⇒ s2_v1938
  | String_c18 c_v1939 s1_v1940 ⇒
    (String_c18 c_v1939 cats_i35(s1_v1940, s2_v1938))
  end

val catsclo_i62 = fn s1_v1941 s2_v1942 ⇒ cats_i35(s1_v1941, s2_v1942)

fun strlen_i36(s_v1943) =
  match s_v1943 with
  | EmptyString_c17  ⇒ O_c14
  | String_c18 __v1944 s_v1945 ⇒ (S_c15 strlen_i36(s_v1945))
  end

val strlenclo_i63 = fn s_v1946 ⇒ strlen_i36(s_v1946)

fun lenUU_i40(A_v1947, xs_v1948) =
  match xs_v1948 with
  | nilUU_c25  ⇒ (O_c14, nilUU_c25)
  | consUU_c26 x_v1949 xs_v1950 ⇒
    match lenUU_i40(NULL, xs_v1950) with
    | (n_v1951, xs_v1952) ⇒
      ((S_c15 n_v1951), (consUU_c26 x_v1949 xs_v1952))
    end
  end

val lenUUclo_i64 = fn A_v1953 xs_v1954 ⇒ lenUU_i40(A_v1953, xs_v1954)

fun lenUL_i39(A_v1955, xs_v1956) =
  match xs_v1956 with
  | nilUL_c23  ⇒ (O_c14, nilUL_c23)
  | consUL_c24 x_v1957 xs_v1958 ⇒
    match lenUL_i39(NULL, xs_v1958) with
    | (n_v1959, xs_v1960) ⇒
      ((S_c15 n_v1959), (consUL_c24 x_v1957 xs_v1960))
    end
  end

val lenULclo_i65 = fn A_v1961 xs_v1962 ⇒ lenUL_i39(A_v1961, xs_v1962)

fun lenLL_i37(A_v1963, xs_v1964) =
  match xs_v1964 with
  | nilLL_c19  ⇒ (O_c14, nilLL_c19)
  | consLL_c20 x_v1965 xs_v1966 ⇒
    match lenLL_i37(NULL, xs_v1966) with
    | (n_v1967, xs_v1968) ⇒
      ((S_c15 n_v1967), (consLL_c20 x_v1965 xs_v1968))
    end
  end

val lenLLclo_i66 = fn A_v1969 xs_v1970 ⇒ lenLL_i37(A_v1969, xs_v1970)

fun appendUU_i44(A_v1971, xs_v1972, ys_v1973) =
  match xs_v1972 with
  | nilUU_c25  ⇒ ys_v1973
  | consUU_c26 x_v1974 xs_v1975 ⇒
    (consUU_c26 x_v1974 appendUU_i44(NULL, xs_v1975, ys_v1973))
  end

val appendUUclo_i67 =
  fn A_v1976 xs_v1977 ⇒
    ln ys_v1978 ⇒ appendUU_i44(A_v1976, xs_v1977, ys_v1978)

fun appendUL_i43(A_v1979, xs_v1980, ys_v1981) =
  match xs_v1980 with
  | nilUL_c23  ⇒ ys_v1981
  | consUL_c24 x_v1982 xs_v1983 ⇒
    (consUL_c24 x_v1982 appendUL_i43(NULL, xs_v1983, ys_v1981))
  end

val appendULclo_i68 =
  fn A_v1984 xs_v1985 ⇒
    ln ys_v1986 ⇒ appendUL_i43(A_v1984, xs_v1985, ys_v1986)

fun appendLL_i41(A_v1987, xs_v1988, ys_v1989) =
  match xs_v1988 with
  | nilLL_c19  ⇒ ys_v1989
  | consLL_c20 x_v1990 xs_v1991 ⇒
    (consLL_c20 x_v1990 appendLL_i41(NULL, xs_v1991, ys_v1989))
  end

val appendLLclo_i69 =
  fn A_v1992 xs_v1993 ⇒
    ln ys_v1994 ⇒ appendLL_i41(A_v1992, xs_v1993, ys_v1994)

fun readline_i51(__v1995) =
  ln __v1996 ⇒
    let ch_v1997 = (ln __v1998 ⇒ open stdin) NULL in
    let ch_v1999 =
      ((fn x_v2000 ⇒ ln __v2001 ⇒ send(ch_v1997, x_v2000)) true_c12) NULL
    in
    let __v2002 = (ln __v2003 ⇒ recv(ch_v1999)) NULL in
    (match __v2002 with
     | (s_v2004, ch_v2005) ⇒
       ln __v2006 ⇒
         let ch_v2007 =
           ((fn x_v2008 ⇒ ln __v2009 ⇒ send(ch_v2005, x_v2008)) false_c13)
             NULL
         in
         let __v2010 = (ln __v2011 ⇒ let __v2012 = ch_v2007 in tt_c11) NULL
         in (ln __v2013 ⇒ s_v2004) NULL
     end) NULL

val readlineclo_i70 = fn __v2014 ⇒ readline_i51(__v2014)

fun print_i52(s_v2015) =
  ln __v2016 ⇒
    let ch_v2017 = (ln __v2018 ⇒ open stdout) NULL in
    let ch_v2019 =
      ((fn x_v2020 ⇒ ln __v2021 ⇒ send(ch_v2017, x_v2020)) true_c12) NULL
    in
    let ch_v2022 =
      ((fn x_v2023 ⇒ ln __v2024 ⇒ send(ch_v2019, x_v2023)) s_v2015) NULL
    in
    let ch_v2025 =
      ((fn x_v2026 ⇒ ln __v2027 ⇒ send(ch_v2022, x_v2026)) false_c13)
        NULL
    in (ln __v2028 ⇒ let __v2029 = ch_v2025 in tt_c11) NULL

val printclo_i71 = fn s_v2030 ⇒ print_i52(s_v2030)

fun prerr_i53(s_v2031) =
  ln __v2032 ⇒
    let ch_v2033 = (ln __v2034 ⇒ open stderr) NULL in
    let ch_v2035 =
      ((fn x_v2036 ⇒ ln __v2037 ⇒ send(ch_v2033, x_v2036)) true_c12) NULL
    in
    let ch_v2038 =
      ((fn x_v2039 ⇒ ln __v2040 ⇒ send(ch_v2035, x_v2039)) s_v2031) NULL
    in
    let ch_v2041 =
      ((fn x_v2042 ⇒ ln __v2043 ⇒ send(ch_v2038, x_v2042)) false_c13)
        NULL
    in (ln __v2044 ⇒ let __v2045 = ch_v2041 in tt_c11) NULL

val prerrclo_i72 = fn s_v2046 ⇒ prerr_i53(s_v2046)

main =
  (ln __v2047 ⇒
     let c_v2048 =
       (ln __v2049 ⇒
          fork c_v2050 in
            (ln __v2051 ⇒
               let s_v2052 = (readline_i51(tt_c11)) NULL in
               let c_v2053 =
                 ((fn x_v2054 ⇒ ln __v2055 ⇒ c_v2050) NULL) NULL
               in (ln __v2056 ⇒ let __v2057 = c_v2053 in tt_c11) NULL)
              NULL)
         NULL
     in
     let __v2058 = (ln __v2059 ⇒ (NULL, c_v2048)) NULL in
     (match __v2058 with
      | (msg_v2060, c_v2061) ⇒ ln __v2062 ⇒ close(c_v2061)
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i25(b1_v2239, b2_v2240) =
  match b1_v2239 with
  | true_c12  ⇒ b2_v2240 | false_c13  ⇒ false_c13
  end

val andbclo_i54 = fn b1_v2241 b2_v2242 ⇒ andb_i25(b1_v2241, b2_v2242)

fun orb_i26(b1_v2243, b2_v2244) =
  match b1_v2243 with
  | true_c12  ⇒ true_c12 | false_c13  ⇒ b2_v2244
  end

val orbclo_i55 = fn b1_v2245 b2_v2246 ⇒ orb_i26(b1_v2245, b2_v2246)

fun notb_i27(b_v2247) =
  match b_v2247 with
  | true_c12  ⇒ false_c13 | false_c13  ⇒ true_c12
  end

val notbclo_i56 = fn b_v2248 ⇒ notb_i27(b_v2248)

fun addn_i28(x_v2249, y_v2250) =
  match x_v2249 with
  | O_c14  ⇒ y_v2250 | S_c15 x_v2251 ⇒ (S_c15 addn_i28(x_v2251, y_v2250))
  end

val addnclo_i57 = fn x_v2252 y_v2253 ⇒ addn_i28(x_v2252, y_v2253)

fun muln_i29(x_v2254, y_v2255) =
  match x_v2254 with
  | O_c14  ⇒ y_v2255
  | S_c15 x_v2256 ⇒ addn_i28(y_v2255, muln_i29(x_v2256, y_v2255))
  end

val mulnclo_i58 = fn x_v2257 y_v2258 ⇒ muln_i29(x_v2257, y_v2258)

fun eqn_i30(x_v2259, y_v2260) =
  match x_v2259 with
  | O_c14  ⇒
    match y_v2260 with
    | O_c14  ⇒ true_c12 | S_c15 __v2261 ⇒ false_c13
    end
  | S_c15 x_v2262 ⇒
    match y_v2260 with
    | O_c14  ⇒ false_c13 | S_c15 y_v2263 ⇒ eqn_i30(x_v2262, y_v2263)
    end
  end

val eqnclo_i59 = fn x_v2264 y_v2265 ⇒ eqn_i30(x_v2264, y_v2265)

fun lten_i31(x_v2266, y_v2267) =
  match x_v2266 with
  | O_c14  ⇒ true_c12
  | S_c15 x_v2268 ⇒
    match y_v2267 with
    | O_c14  ⇒ false_c13 | S_c15 y_v2269 ⇒ lten_i31(x_v2268, y_v2269)
    end
  end

val ltenclo_i60 = fn x_v2270 y_v2271 ⇒ lten_i31(x_v2270, y_v2271)

fun gten_i32(x_v2272, y_v2273) =
  match x_v2272 with
  | O_c14  ⇒
    match y_v2273 with
    | O_c14  ⇒ true_c12 | S_c15 __v2274 ⇒ false_c13
    end
  | S_c15 x_v2275 ⇒
    match y_v2273 with
    | O_c14  ⇒ true_c12 | S_c15 y_v2276 ⇒ gten_i32(x_v2275, y_v2276)
    end
  end

val gtenclo_i61 = fn x_v2277 y_v2278 ⇒ gten_i32(x_v2277, y_v2278)

fun cats_i35(s1_v2279, s2_v2280) =
  match s1_v2279 with
  | EmptyString_c17  ⇒ s2_v2280
  | String_c18 c_v2281 s1_v2282 ⇒
    (String_c18 c_v2281 cats_i35(s1_v2282, s2_v2280))
  end

val catsclo_i62 = fn s1_v2283 s2_v2284 ⇒ cats_i35(s1_v2283, s2_v2284)

fun strlen_i36(s_v2285) =
  match s_v2285 with
  | EmptyString_c17  ⇒ O_c14
  | String_c18 __v2286 s_v2287 ⇒ (S_c15 strlen_i36(s_v2287))
  end

val strlenclo_i63 = fn s_v2288 ⇒ strlen_i36(s_v2288)

fun lenUU_i40(A_v2289, xs_v2290) =
  match xs_v2290 with
  | nilUU_c25  ⇒ (O_c14, nilUU_c25)
  | consUU_c26 x_v2291 xs_v2292 ⇒
    match lenUU_i40(NULL, xs_v2292) with
    | (n_v2293, xs_v2294) ⇒
      ((S_c15 n_v2293), (consUU_c26 x_v2291 xs_v2294))
    end
  end

val lenUUclo_i64 = fn A_v2295 xs_v2296 ⇒ lenUU_i40(A_v2295, xs_v2296)

fun lenUL_i39(A_v2297, xs_v2298) =
  match xs_v2298 with
  | nilUL_c23  ⇒ (O_c14, nilUL_c23)
  | consUL_c24 x_v2299 xs_v2300 ⇒
    match lenUL_i39(NULL, xs_v2300) with
    | (n_v2301, xs_v2302) ⇒
      ((S_c15 n_v2301), (consUL_c24 x_v2299 xs_v2302))
    end
  end

val lenULclo_i65 = fn A_v2303 xs_v2304 ⇒ lenUL_i39(A_v2303, xs_v2304)

fun lenLL_i37(A_v2305, xs_v2306) =
  match xs_v2306 with
  | nilLL_c19  ⇒ (O_c14, nilLL_c19)
  | consLL_c20 x_v2307 xs_v2308 ⇒
    match lenLL_i37(NULL, xs_v2308) with
    | (n_v2309, xs_v2310) ⇒
      ((S_c15 n_v2309), (consLL_c20 x_v2307 xs_v2310))
    end
  end

val lenLLclo_i66 = fn A_v2311 xs_v2312 ⇒ lenLL_i37(A_v2311, xs_v2312)

fun appendUU_i44(A_v2313, xs_v2314, ys_v2315) =
  match xs_v2314 with
  | nilUU_c25  ⇒ ys_v2315
  | consUU_c26 x_v2316 xs_v2317 ⇒
    (consUU_c26 x_v2316 appendUU_i44(NULL, xs_v2317, ys_v2315))
  end

val appendUUclo_i67 =
  fn A_v2318 xs_v2319 ⇒
    ln ys_v2320 ⇒ appendUU_i44(A_v2318, xs_v2319, ys_v2320)

fun appendUL_i43(A_v2321, xs_v2322, ys_v2323) =
  match xs_v2322 with
  | nilUL_c23  ⇒ ys_v2323
  | consUL_c24 x_v2324 xs_v2325 ⇒
    (consUL_c24 x_v2324 appendUL_i43(NULL, xs_v2325, ys_v2323))
  end

val appendULclo_i68 =
  fn A_v2326 xs_v2327 ⇒
    ln ys_v2328 ⇒ appendUL_i43(A_v2326, xs_v2327, ys_v2328)

fun appendLL_i41(A_v2329, xs_v2330, ys_v2331) =
  match xs_v2330 with
  | nilLL_c19  ⇒ ys_v2331
  | consLL_c20 x_v2332 xs_v2333 ⇒
    (consLL_c20 x_v2332 appendLL_i41(NULL, xs_v2333, ys_v2331))
  end

val appendLLclo_i69 =
  fn A_v2334 xs_v2335 ⇒
    ln ys_v2336 ⇒ appendLL_i41(A_v2334, xs_v2335, ys_v2336)

fun readline_i51(__v2337) =
  ln __v2338 ⇒
    let ch_v2339 = open stdin in
    let ch_v2340 = send(ch_v2339, true_c12) in
    let __v2341 = recv(ch_v2340) in
    (match __v2341 with
     | (s_v2342, ch_v2343) ⇒
       ln __v2344 ⇒
         let ch_v2345 = send(ch_v2343, false_c13) in
         let __v2346 = let __v2347 = ch_v2345 in tt_c11 in s_v2342
     end) NULL

val readlineclo_i70 = fn __v2348 ⇒ readline_i51(__v2348)

fun print_i52(s_v2349) =
  ln __v2350 ⇒
    let ch_v2351 = open stdout in
    let ch_v2352 = send(ch_v2351, true_c12) in
    let ch_v2353 = send(ch_v2352, s_v2349) in
    let ch_v2354 = send(ch_v2353, false_c13) in
    let __v2355 = ch_v2354 in tt_c11

val printclo_i71 = fn s_v2356 ⇒ print_i52(s_v2356)

fun prerr_i53(s_v2357) =
  ln __v2358 ⇒
    let ch_v2359 = open stderr in
    let ch_v2360 = send(ch_v2359, true_c12) in
    let ch_v2361 = send(ch_v2360, s_v2357) in
    let ch_v2362 = send(ch_v2361, false_c13) in
    let __v2363 = ch_v2362 in tt_c11

val prerrclo_i72 = fn s_v2364 ⇒ prerr_i53(s_v2364)

main =
  let c_v2365 =
    fork c_v2366 in
      let s_v2367 = (readline_i51(tt_c11)) NULL in
      let c_v2368 = c_v2366 in let __v2369 = c_v2368 in tt_c11
  in
  let __v2370 = (NULL, c_v2365) in
  (match __v2370 with
   | (msg_v2371, c_v2372) ⇒ ln __v2373 ⇒ close(c_v2372)
   end) NULL

trans3e success--------------------------

trans34 success--------------------------

