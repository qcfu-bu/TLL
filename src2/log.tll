parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v199 : bool_d2) (b2_v200 : bool_d2) ⇒
    match b1_v199 as __v201 in ??1 with
    | true_c2  ⇒ b2_v200 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v204 : bool_d2) (b2_v205 : bool_d2) ⇒
    match b1_v204 as __v206 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v205
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v208 : bool_d2) ⇒
    match b_v208 as __v209 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v210 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v213 : nat_d3) (y_v214 : nat_d3) ⇒
    match x_v213 as __v215 in ??4 with
    | O_c4  ⇒ y_v214 | S_c5 x_v216 ⇒ (S_c5‹› (addn_i4 x_v216 y_v214))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v219 : nat_d3) (y_v220 : nat_d3) ⇒
    match x_v219 as __v221 in ??5 with
    | O_c4  ⇒ y_v220
    | S_c5 x_v222 ⇒ (addn_i4 y_v220 (muln_i5 x_v222 y_v220))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v225 : nat_d3) (y_v226 : nat_d3) ⇒
    match x_v225 as __v227 in ??6 with
    | O_c4  ⇒
      match y_v226 as __v228 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v229 ⇒ false_c3‹›
      end
    | S_c5 x_v230 ⇒
      match y_v226 as __v231 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v232 ⇒ (eqn_i6 x_v230 y_v232)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v235 : nat_d3) (y_v236 : nat_d3) ⇒
    match x_v235 as __v237 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v238 ⇒
      match y_v236 as __v239 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v240 ⇒ (lten_i7 x_v238 y_v240)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v243 : nat_d3) (y_v244 : nat_d3) ⇒
    match x_v243 as __v245 in ??11 with
    | O_c4  ⇒
      match y_v244 as __v246 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v247 ⇒ false_c3‹›
      end
    | S_c5 x_v248 ⇒
      match y_v244 as __v249 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v250 ⇒ (gten_i8 x_v248 y_v250)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v253 : nat_d3) (y_v254 : nat_d3) ⇒
    match x_v253 as __v255 in ??14 with
    | O_c4  ⇒
      match y_v254 as __v256 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v257 ⇒ true_c2‹›
      end
    | S_c5 x_v258 ⇒
      match y_v254 as __v259 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v260 ⇒ (ltn_i9 x_v258 y_v260)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v263 : nat_d3) (y_v264 : nat_d3) ⇒
    match x_v263 as __v265 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v266 ⇒
      match y_v264 as __v267 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v268 ⇒ (gtn_i10 x_v266 y_v268)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v269 : bool_d2) (b1_v270 : bool_d2) (b2_v271 : bool_d2)
    (b3_v272 : bool_d2) (b4_v273 : bool_d2) (b5_v274 : bool_d2)
    (b6_v275 : bool_d2) (b7_v276 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v277 : ascii_d4) (s_v278 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v281 : string_d5) (s2_v282 : string_d5) ⇒
    match s1_v281 as __v283 in ??19 with
    | EmptyString_c7  ⇒ s2_v282
    | String_c8 c_v284 s1_v285 ⇒
      (String_c8‹› c_v284 (cats_i11 s1_v285 s2_v282))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v287 : string_d5) ⇒
    match s_v287 as __v288 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v289 s_v290 ⇒ (S_c5‹› (strlen_i12 s_v290))
    end

inductive list_d6 (A_v291 : U) : U =
| nil_c9 of (A_v292 : U) : (list_d6 A_v292)
| cons_c10 of
    (A_v293 : U) (hd_v294 : A_v293) (tl_v295 : (list_d6 A_v293))
    : (list_d6 A_v293)

inductive llist_d7 (A_v296 : L) : L =
| lnil_c11 of (A_v297 : L) : (llist_d7 A_v297)
| lcons_c12 of
    (A_v298 : L) (hd_v299 : A_v298) (tl_v300 : (llist_d7 A_v298))
    : (llist_d7 A_v298)

program len_i13 : ∀ {A_v301 : U} → (list_d6 A_v301) → nat_d3 =
  fn {A_v303 : U} (xs_v304 : (list_d6 A_v303)) ⇒
    match xs_v304 as __v305 in ??21 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v306 xs_v307 ⇒ (S_c5‹› (len_i13 ??22 xs_v307))
    end

program llen_i14 :
  ∀ {A_v308 : L} → (llist_d7 A_v308) → nat_d3 ⊗ (llist_d7 A_v308)
=
  fn {A_v311 : L} (xs_v312 : (llist_d7 A_v311)) ⇒
    match xs_v312 as __v313 in ??23 with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v314 xs_v315 ⇒
      match (llen_i14 A_v311 xs_v315) as __v316 in ??24 with
      | ⟨n_v317, xs_v318⟩ ⇒
        ⟨(S_c5‹› n_v317), (lcons_c12‹› x_v314 xs_v318)⟩
      end
    end

program append_i15 :
  ∀ {A_v319 : U} →
    (list_d6 A_v319) → (list_d6 A_v319) → (list_d6 A_v319)
=
  fn {A_v322 : U} (xs_v323 : (list_d6 A_v322)) (ys_v324 : (list_d6 A_v322)) ⇒
    match xs_v323 as __v325 in ??27 with
    | nil_c9  ⇒ ys_v324
    | cons_c10 x_v326 xs_v327 ⇒
      (cons_c10‹› x_v326 (append_i15 ??28 xs_v327 ys_v324))
    end

program lappend_i16 :
  ∀ {A_v328 : L} →
    (llist_d7 A_v328) → (llist_d7 A_v328) ⊸ (llist_d7 A_v328)
=
  fn {A_v331 : L} (xs_v332 : (llist_d7 A_v331)) ⇒
    ln (ys_v333 : ??30) ⇒
      match xs_v332 as __v334 in ??31 with
      | lnil_c11  ⇒ ys_v333
      | lcons_c12 x_v335 xs_v336 ⇒
        (lcons_c12‹› x_v335 (lappend_i16 ??32 xs_v336 ys_v333))
      end

inductive box_d8 (A_v337 : U) : L =
| Box_c13 of (A_v338 : U) (a_v339 : A_v338) : (box_d8 A_v338)

program map_box_i17 :
  ∀ {A_v340 : U} →
    ∀ {B_v341 : U} →
      A_v340 → B_v341 → (box_d8 A_v340) → (box_d8 B_v341)
=
  fn {A_v345 : U} {B_v346 : U} (f_v347 : A_v345 → B_v346)
     (m_v348 : (box_d8 A_v345)) ⇒
    match m_v348 as __v350 in ??34 with
    | Box_c13 a_v351 ⇒ (Box_c13‹› (f_v347 a_v351))
    end

program unbox_i18 : ∀ {A_v352 : U} → (box_d8 A_v352) → A_v352 =
  fn {A_v354 : U} (m_v355 : (box_d8 A_v354)) ⇒
    match m_v355 as __v356 in ??36 with
    | Box_c13 a_v357 ⇒ a_v357
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v359 : unit_d1) ⇒
    ⇑(b_v360 : bool_d2) ⇒
      match b_v360 as __v361 in ??37 with
      | true_c2  ⇒ ⇓(__v362 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v364 : unit_d1) ⇒
    ⇑(b_v365 : bool_d2) ⇒
      match b_v365 as __v366 in ??38 with
      | true_c2  ⇒ ⇑(__v367 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v369 : unit_d1) ⇒
    ⇑(b_v370 : bool_d2) ⇒
      match b_v370 as __v371 in ??39 with
      | true_c2  ⇒ ⇑(__v372 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v374 : unit_d1) ⇒
    let ch_v375 ⇐ open stdin in
    let ch_v376 ⇐ (send ch_v375 true_c2‹›) in
    let __v377 ⇐ recv ch_v376 in
    match __v377 as __v378 in ??40 with
    | ⟨s_v379, ch_v380⟩ ⇒
      let ch_v381 ⇐ (send ch_v380 false_c3‹›) in
      let __v382 ⇐ close ch_v381 in return s_v379
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v384 : string_d5) ⇒
    let ch_v385 ⇐ open stdout in
    let ch_v386 ⇐ (send ch_v385 true_c2‹›) in
    let ch_v387 ⇐ (send ch_v386 s_v384) in
    let ch_v388 ⇐ (send ch_v387 false_c3‹›) in close ch_v388

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v390 : string_d5) ⇒
    let ch_v391 ⇐ open stderr in
    let ch_v392 ⇐ (send ch_v391 true_c2‹›) in
    let ch_v393 ⇐ (send ch_v392 s_v390) in
    let ch_v394 ⇐ (send ch_v393 false_c3‹›) in close ch_v394

inductive List_d9 ‹s_s395, t_s396›
  (A_v397 : Type‹s_s395›) : Type‹t_s396›
=
| Nil_c14 of
    ‹s_s398, t_s399› (A_v400 : Type‹s_s398›)
    : (List_d9‹s_s398, t_s399› A_v400)
| Cons_c15 of
    ‹s_s401, t_s402› (A_v403 : Type‹s_s401›) (hd_v404 : A_v403)
    (tl_v405 : (List_d9‹s_s401, t_s402› A_v403))
    : (List_d9‹s_s401, t_s402› A_v403)

logical len_i28 ‹s_s406, t_s407› :
  ∀ {A_v408 : Type‹s_s406›} →
    (List_d9‹s_s406, t_s407› A_v408) → nat_d3
=
  fn {A_v410 : Type‹s_s406›}
     (xs_v411 : (List_d9‹s_s406, t_s407› A_v410)) ⇒
    match xs_v411 as __v412 in ??41 with
    | Nil_c14  ⇒ O_c4‹›
    | Cons_c15 hd_v413 tl_v414 ⇒
      (addn_i4 1 (len_i28‹??44, ??43› ??42 tl_v414))
    end

program append_i29 ‹s_s415, t_s416› :
  ∀ {A_v417 : Type‹s_s415›} →
    (List_d9‹??45, t_s416› A_v417) →
      (List_d9‹??47, ??46› A_v417) ⊸ (List_d9‹??49, ??48› A_v417)
=
  fn {A_v420 : Type‹s_s415›}
     (xs_v421 : (List_d9‹??45, t_s416› A_v420)) ⇒
    ln (ys_v422 : ??50) ⇒
      match xs_v421 as __v423 in ??51 with
      | Nil_c14  ⇒ ys_v422
      | Cons_c15 x_v424 xs_v425 ⇒
        (Cons_c15‹??57, ??56›
          x_v424 (append_i29‹??54, ??53› ??52 xs_v425 ys_v422))
      end

logical append_len_i30 ‹s_s426, t_s427› :
  ∀ (A_v428 : Type‹s_s426›) →
    ∀ (xs_v429 : (List_d9‹??58, t_s427› A_v428)) →
      ∀ (ys_v430 : (List_d9‹??59, t_s427› A_v428)) →
        (len_i28‹??65, ??64›
          ??63 (append_i29‹??62, ??61› ??60 xs_v429 ys_v430)) ≡
          (addn_i4
            (len_i28‹??71, ??70› ??69 xs_v429)
            (len_i28‹??68, ??67› ??66 ys_v430))
=
  fn (A_v431 : Type‹s_s426›)
     (xs_v432 : (List_d9‹??58, t_s427› A_v431))
     (ys_v433 : (List_d9‹??59, t_s427› A_v431)) ⇒
    match xs_v432 as xs0_v434 in
      (len_i28‹??78, ??77›
        ??76 (append_i29‹??75, ??74› ??73 xs0_v434 ys_v433)) ≡
        (addn_i4
          (len_i28‹??84, ??83› ??82 xs0_v434)
          (len_i28‹??81, ??80› ??79 ys_v433)) with
    | Nil_c14  ⇒ refl ??97
    | Cons_c15 x_v435 xs0_v436 ⇒
      rew [n_v437, __v438 ⇒
        (S_c5‹›
          (len_i28‹??95, ??94›
            ??93 (append_i29‹??92, ??91› ??90 xs0_v436 ys_v433))) ≡
          (S_c5‹› n_v437)]
        (append_len_i30‹??88, ??87› ??86 xs0_v436 ys_v433) in
      refl ??89
    end

logical list_i31 ‹s_s439› : {Type‹s_s439›} → U =
  fn {A_v441 : Type‹s_s439›} ⇒ (List_d9‹??98, U› A_v441)

program ls0_i32 : (list_i31‹??100› ??99) =
  (Cons_c15‹??106, ??105› O_c4‹› Nil_c14‹??103, ??102›)

program ls1_i33 : (list_i31‹??108› ??107) =
  (Cons_c15‹??114, ??113› O_c4‹› Nil_c14‹??111, ??110›)

program ls2_i34 : ??115 =
  (append_i29‹??118, ??117› ??116 ls0_i32 ls1_i33)

program id_i35 ‹s_s442› :
  ∀ {A_v443 : Type‹s_s442›} → A_v443 → A_v443
= fn {A_v445 : Type‹s_s442›} (x_v446 : A_v445) ⇒ x_v446

program main_i36 : unit_d1 → IO unit_d1 =
  fn (__v448 : unit_d1) ⇒
    let s_v449 ⇐ (readline_i25 tt_c1‹›) in
    (id_i35‹??122› ??121 (print_i26 (id_i35‹??120› ??119 s_v449)))

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2200 : bool_d2) (b2_v2201 : bool_d2) ⇒
    match b1_v2200 as __v2202 in bool_d2 with
    | true_c2  ⇒ b2_v2201 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2205 : bool_d2) (b2_v2206 : bool_d2) ⇒
    match b1_v2205 as __v2207 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v2206
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v2209 : bool_d2) ⇒
    match b_v2209 as __v2210 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v2211 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2214 : nat_d3) (y_v2215 : nat_d3) ⇒
    match x_v2214 as __v2216 in nat_d3 with
    | O_c4  ⇒ y_v2215
    | S_c5 x_v2217 ⇒ (S_c5‹› (addn_i4 x_v2217 y_v2215))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2220 : nat_d3) (y_v2221 : nat_d3) ⇒
    match x_v2220 as __v2222 in nat_d3 with
    | O_c4  ⇒ y_v2221
    | S_c5 x_v2223 ⇒ (addn_i4 y_v2221 (muln_i5 x_v2223 y_v2221))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2226 : nat_d3) (y_v2227 : nat_d3) ⇒
    match x_v2226 as __v2228 in bool_d2 with
    | O_c4  ⇒
      match y_v2227 as __v2229 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2230 ⇒ false_c3‹›
      end
    | S_c5 x_v2231 ⇒
      match y_v2227 as __v2232 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2233 ⇒ (eqn_i6 x_v2231 y_v2233)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2236 : nat_d3) (y_v2237 : nat_d3) ⇒
    match x_v2236 as __v2238 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v2239 ⇒
      match y_v2237 as __v2240 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2241 ⇒ (lten_i7 x_v2239 y_v2241)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2244 : nat_d3) (y_v2245 : nat_d3) ⇒
    match x_v2244 as __v2246 in bool_d2 with
    | O_c4  ⇒
      match y_v2245 as __v2247 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2248 ⇒ false_c3‹›
      end
    | S_c5 x_v2249 ⇒
      match y_v2245 as __v2250 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2251 ⇒ (gten_i8 x_v2249 y_v2251)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2254 : nat_d3) (y_v2255 : nat_d3) ⇒
    match x_v2254 as __v2256 in bool_d2 with
    | O_c4  ⇒
      match y_v2255 as __v2257 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2258 ⇒ true_c2‹›
      end
    | S_c5 x_v2259 ⇒
      match y_v2255 as __v2260 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2261 ⇒ (ltn_i9 x_v2259 y_v2261)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2264 : nat_d3) (y_v2265 : nat_d3) ⇒
    match x_v2264 as __v2266 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v2267 ⇒
      match y_v2265 as __v2268 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2269 ⇒ (gtn_i10 x_v2267 y_v2269)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v2270 : bool_d2) (b1_v2271 : bool_d2) (b2_v2272 : bool_d2)
    (b3_v2273 : bool_d2) (b4_v2274 : bool_d2) (b5_v2275 : bool_d2)
    (b6_v2276 : bool_d2) (b7_v2277 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v2278 : ascii_d4) (s_v2279 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2282 : string_d5) (s2_v2283 : string_d5) ⇒
    match s1_v2282 as __v2284 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2283
    | String_c8 c_v2285 s1_v2286 ⇒
      (String_c8‹› c_v2285 (cats_i11 s1_v2286 s2_v2283))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v2288 : string_d5) ⇒
    match s_v2288 as __v2289 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2290 s_v2291 ⇒ (S_c5‹› (strlen_i12 s_v2291))
    end

inductive list_d6 (A_v2292 : U) : U =
| nil_c9 of (A_v2293 : U) : (list_d6 A_v2293)
| cons_c10 of
    (A_v2294 : U) (hd_v2295 : A_v2294) (tl_v2296 : (list_d6 A_v2294))
    : (list_d6 A_v2294)

inductive llist_d7 (A_v2297 : L) : L =
| lnil_c11 of (A_v2298 : L) : (llist_d7 A_v2298)
| lcons_c12 of
    (A_v2299 : L) (hd_v2300 : A_v2299) (tl_v2301 : (llist_d7 A_v2299))
    : (llist_d7 A_v2299)

program len_i13 : ∀ {A_v2302 : U} → (list_d6 A_v2302) → nat_d3 =
  fn {A_v2304 : U} (xs_v2305 : (list_d6 A_v2304)) ⇒
    match xs_v2305 as __v2306 in nat_d3 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v2307 xs_v2308 ⇒ (S_c5‹› (len_i13 A_v2304 xs_v2308))
    end

program llen_i14 :
  ∀ {A_v2309 : L} → (llist_d7 A_v2309) → nat_d3 ⊗ (llist_d7 A_v2309)
=
  fn {A_v2312 : L} (xs_v2313 : (llist_d7 A_v2312)) ⇒
    match xs_v2313 as __v2314 in nat_d3 ⊗ (llist_d7 A_v2312) with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v2316 xs_v2317 ⇒
      match (llen_i14 A_v2312 xs_v2317) as __v2318 in
        nat_d3 ⊗ (llist_d7 A_v2312) with
      | ⟨n_v2320, xs_v2321⟩ ⇒
        ⟨(S_c5‹› n_v2320), (lcons_c12‹› x_v2316 xs_v2321)⟩
      end
    end

program append_i15 :
  ∀ {A_v2322 : U} →
    (list_d6 A_v2322) → (list_d6 A_v2322) → (list_d6 A_v2322)
=
  fn {A_v2325 : U} (xs_v2326 : (list_d6 A_v2325))
     (ys_v2327 : (list_d6 A_v2325)) ⇒
    match xs_v2326 as __v2328 in (list_d6 A_v2325) with
    | nil_c9  ⇒ ys_v2327
    | cons_c10 x_v2329 xs_v2330 ⇒
      (cons_c10‹› x_v2329 (append_i15 A_v2325 xs_v2330 ys_v2327))
    end

program lappend_i16 :
  ∀ {A_v2331 : L} →
    (llist_d7 A_v2331) → (llist_d7 A_v2331) ⊸ (llist_d7 A_v2331)
=
  fn {A_v2334 : L} (xs_v2335 : (llist_d7 A_v2334)) ⇒
    ln (ys_v2336 : (llist_d7 A_v2334)) ⇒
      match xs_v2335 as __v2337 in (llist_d7 A_v2334) with
      | lnil_c11  ⇒ ys_v2336
      | lcons_c12 x_v2338 xs_v2339 ⇒
        (lcons_c12‹› x_v2338 (lappend_i16 A_v2334 xs_v2339 ys_v2336))
      end

inductive box_d8 (A_v2340 : U) : L =
| Box_c13 of (A_v2341 : U) (a_v2342 : A_v2341) : (box_d8 A_v2341)

program map_box_i17 :
  ∀ {A_v2343 : U} →
    ∀ {B_v2344 : U} →
      A_v2343 → B_v2344 → (box_d8 A_v2343) → (box_d8 B_v2344)
=
  fn {A_v2348 : U} {B_v2349 : U} (f_v2350 : A_v2348 → B_v2349)
     (m_v2351 : (box_d8 A_v2348)) ⇒
    match m_v2351 as __v2353 in (box_d8 B_v2349) with
    | Box_c13 a_v2354 ⇒ (Box_c13‹› (f_v2350 a_v2354))
    end

program unbox_i18 : ∀ {A_v2355 : U} → (box_d8 A_v2355) → A_v2355 =
  fn {A_v2357 : U} (m_v2358 : (box_d8 A_v2357)) ⇒
    match m_v2358 as __v2359 in A_v2357 with
    | Box_c13 a_v2360 ⇒ a_v2360
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v2362 : unit_d1) ⇒
    ⇑(b_v2363 : bool_d2) ⇒
      match b_v2363 as __v2364 in proto with
      | true_c2  ⇒ ⇓(__v2365 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v2367 : unit_d1) ⇒
    ⇑(b_v2368 : bool_d2) ⇒
      match b_v2368 as __v2369 in proto with
      | true_c2  ⇒
        ⇑(__v2370 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v2372 : unit_d1) ⇒
    ⇑(b_v2373 : bool_d2) ⇒
      match b_v2373 as __v2374 in proto with
      | true_c2  ⇒
        ⇑(__v2375 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v2377 : unit_d1) ⇒
    let ch_v2378 ⇐ open stdin in
    let ch_v2379 ⇐ (send ch_v2378 true_c2‹›) in
    let __v2380 ⇐ recv ch_v2379 in
    match __v2380 as __v2381 in IO string_d5 with
    | ⟨s_v2382, ch_v2383⟩ ⇒
      let ch_v2384 ⇐ (send ch_v2383 false_c3‹›) in
      let __v2385 ⇐ close ch_v2384 in return s_v2382
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v2387 : string_d5) ⇒
    let ch_v2388 ⇐ open stdout in
    let ch_v2389 ⇐ (send ch_v2388 true_c2‹›) in
    let ch_v2390 ⇐ (send ch_v2389 s_v2387) in
    let ch_v2391 ⇐ (send ch_v2390 false_c3‹›) in close ch_v2391

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v2393 : string_d5) ⇒
    let ch_v2394 ⇐ open stderr in
    let ch_v2395 ⇐ (send ch_v2394 true_c2‹›) in
    let ch_v2396 ⇐ (send ch_v2395 s_v2393) in
    let ch_v2397 ⇐ (send ch_v2396 false_c3‹›) in close ch_v2397

inductive List_d9 ‹s_s2398, t_s2399›
  (A_v2400 : Type‹s_s2398›) : Type‹t_s2399›
=
| Nil_c14 of
    ‹s_s2401, t_s2402› (A_v2403 : Type‹s_s2401›)
    : (List_d9‹s_s2401, t_s2402› A_v2403)
| Cons_c15 of
    ‹s_s2404, t_s2405› (A_v2406 : Type‹s_s2404›) (hd_v2407 : A_v2406)
    (tl_v2408 : (List_d9‹s_s2404, t_s2405› A_v2406))
    : (List_d9‹s_s2404, t_s2405› A_v2406)

logical len_i28 ‹s_s2409, t_s2410› :
  ∀ {A_v2411 : Type‹s_s2409›} →
    (List_d9‹s_s2409, t_s2410› A_v2411) → nat_d3
=
  fn {A_v2413 : Type‹s_s2409›}
     (xs_v2414 : (List_d9‹s_s2409, t_s2410› A_v2413)) ⇒
    match xs_v2414 as __v2415 in nat_d3 with
    | Nil_c14  ⇒ O_c4‹›
    | Cons_c15 hd_v2416 tl_v2417 ⇒
      (addn_i4 1 (len_i28‹s_s2409, t_s2410› A_v2413 tl_v2417))
    end

program append_i29 ‹s_s2418, t_s2419› :
  ∀ {A_v2420 : Type‹s_s2418›} →
    (List_d9‹s_s2418, t_s2419› A_v2420) →
      (List_d9‹s_s2418, t_s2419› A_v2420) ⊸
        (List_d9‹s_s2418, t_s2419› A_v2420)
=
  fn {A_v2423 : Type‹s_s2418›}
     (xs_v2424 : (List_d9‹s_s2418, t_s2419› A_v2423)) ⇒
    ln (ys_v2425 : (List_d9‹s_s2418, t_s2419› A_v2423)) ⇒
      match xs_v2424 as __v2426 in
        (List_d9‹s_s2418, t_s2419› A_v2423) with
      | Nil_c14  ⇒ ys_v2425
      | Cons_c15 x_v2427 xs_v2428 ⇒
        (Cons_c15‹s_s2418, t_s2419›
          x_v2427
          (append_i29‹s_s2418, t_s2419› A_v2423 xs_v2428 ys_v2425))
      end

logical append_len_i30 ‹s_s2429, t_s2430› :
  ∀ (A_v2431 : Type‹s_s2429›) →
    ∀ (xs_v2432 : (List_d9‹s_s2429, t_s2430› A_v2431)) →
      ∀ (ys_v2433 : (List_d9‹s_s2429, t_s2430› A_v2431)) →
        (len_i28‹s_s2429, t_s2430›
          A_v2431
          (append_i29‹s_s2429, t_s2430› A_v2431 xs_v2432 ys_v2433)) ≡
          (addn_i4
            (len_i28‹s_s2429, t_s2430› A_v2431 xs_v2432)
            (len_i28‹s_s2429, t_s2430› A_v2431 ys_v2433))
=
  fn (A_v2434 : Type‹s_s2429›)
     (xs_v2435 : (List_d9‹s_s2429, t_s2430› A_v2434))
     (ys_v2436 : (List_d9‹s_s2429, t_s2430› A_v2434)) ⇒
    match xs_v2435 as xs0_v2437 in
      (len_i28‹s_s2429, t_s2430›
        A_v2434 (append_i29‹s_s2429, t_s2430› A_v2434 xs0_v2437 ys_v2436)) ≡
        (addn_i4
          (len_i28‹s_s2429, t_s2430› A_v2434 xs0_v2437)
          (len_i28‹s_s2429, t_s2430› A_v2434 ys_v2436)) with
    | Nil_c14  ⇒
      refl (len_i28‹s_s2429, t_s2430›
             A_v2434
             (append_i29‹s_s2429, t_s2430›
               A_v2434 Nil_c14‹s_s2429, t_s2430› ys_v2436))
    | Cons_c15 x_v2438 xs0_v2439 ⇒
      rew [n_v2440, __v2441 ⇒
        (S_c5‹›
          (len_i28‹s_s2429, t_s2430›
            A_v2434
            (append_i29‹s_s2429, t_s2430› A_v2434 xs0_v2439 ys_v2436))) ≡
          (S_c5‹› n_v2440)]
        (append_len_i30‹s_s2429, t_s2430› A_v2434 xs0_v2439 ys_v2436) in
      refl (S_c5‹›
             (len_i28‹s_s2429, t_s2430›
               A_v2434
               (append_i29‹s_s2429, t_s2430› A_v2434 xs0_v2439 ys_v2436)))
    end

logical list_i31 ‹s_s2442› : {Type‹s_s2442›} → U =
  fn {A_v2444 : Type‹s_s2442›} ⇒ (List_d9‹s_s2442, U› A_v2444)

program ls0_i32 : (list_i31‹U› nat_d3) =
  (Cons_c15‹U, U› O_c4‹› Nil_c14‹U, U›)

program ls1_i33 : (list_i31‹U› nat_d3) =
  (Cons_c15‹U, U› O_c4‹› Nil_c14‹U, U›)

program ls2_i34 : (List_d9‹U, U› nat_d3) =
  (append_i29‹U, U› nat_d3 ls0_i32 ls1_i33)

program id_i35 ‹s_s2445› :
  ∀ {A_v2446 : Type‹s_s2445›} → A_v2446 → A_v2446
= fn {A_v2448 : Type‹s_s2445›} (x_v2449 : A_v2448) ⇒ x_v2449

program main_i36 : unit_d1 → IO unit_d1 =
  fn (__v2451 : unit_d1) ⇒
    let s_v2452 ⇐ (readline_i25 tt_c1‹›) in
    (id_i35‹L› IO unit_d1 (print_i26 (id_i35‹U› string_d5 s_v2452)))

trans1e success--------------------------

data unit_d10 =
| tt_c16 of size(0)

data bool_d11 =
| true_c17 of size(0) | false_c18 of size(0)

def andb_i37 =
  fn b1_v2776 b2_v2777 ⇒
    match b1_v2776 with
    | true_c17  ⇒ b2_v2777 | false_c18  ⇒ false_c18
    end

def orb_i38 =
  fn b1_v2778 b2_v2779 ⇒
    match b1_v2778 with
    | true_c17  ⇒ true_c17 | false_c18  ⇒ b2_v2779
    end

def notb_i39 =
  fn b_v2780 ⇒
    match b_v2780 with
    | true_c17  ⇒ false_c18 | false_c18  ⇒ true_c17
    end

data nat_d12 =
| O_c19 of size(0) | S_c20 of size(1)

def addn_i40 =
  fn x_v2781 y_v2782 ⇒
    match x_v2781 with
    | O_c19  ⇒ y_v2782
    | S_c20 x_v2783 ⇒ (S_c20 ((addn_i40 x_v2783) y_v2782))
    end

def muln_i41 =
  fn x_v2784 y_v2785 ⇒
    match x_v2784 with
    | O_c19  ⇒ y_v2785
    | S_c20 x_v2786 ⇒ ((addn_i40 y_v2785) ((muln_i41 x_v2786) y_v2785))
    end

def eqn_i42 =
  fn x_v2787 y_v2788 ⇒
    match x_v2787 with
    | O_c19  ⇒
      match y_v2788 with
      | O_c19  ⇒ true_c17 | S_c20 __v2789 ⇒ false_c18
      end
    | S_c20 x_v2790 ⇒
      match y_v2788 with
      | O_c19  ⇒ false_c18 | S_c20 y_v2791 ⇒ ((eqn_i42 x_v2790) y_v2791)
      end
    end

def lten_i43 =
  fn x_v2792 y_v2793 ⇒
    match x_v2792 with
    | O_c19  ⇒ true_c17
    | S_c20 x_v2794 ⇒
      match y_v2793 with
      | O_c19  ⇒ false_c18 | S_c20 y_v2795 ⇒ ((lten_i43 x_v2794) y_v2795)
      end
    end

def gten_i44 =
  fn x_v2796 y_v2797 ⇒
    match x_v2796 with
    | O_c19  ⇒
      match y_v2797 with
      | O_c19  ⇒ true_c17 | S_c20 __v2798 ⇒ false_c18
      end
    | S_c20 x_v2799 ⇒
      match y_v2797 with
      | O_c19  ⇒ true_c17 | S_c20 y_v2800 ⇒ ((gten_i44 x_v2799) y_v2800)
      end
    end

data ascii_d13 =
| Ascii_c21 of size(8)

data string_d14 =
| EmptyString_c22 of size(0) | String_c23 of size(2)

def cats_i47 =
  fn s1_v2801 s2_v2802 ⇒
    match s1_v2801 with
    | EmptyString_c22  ⇒ s2_v2802
    | String_c23 c_v2803 s1_v2804 ⇒
      (String_c23 c_v2803 ((cats_i47 s1_v2804) s2_v2802))
    end

def strlen_i48 =
  fn s_v2805 ⇒
    match s_v2805 with
    | EmptyString_c22  ⇒ O_c19
    | String_c23 __v2806 s_v2807 ⇒ (S_c20 (strlen_i48 s_v2807))
    end

data list_d15 =
| nil_c24 of size(0) | cons_c25 of size(2)

data llist_d16 =
| lnil_c26 of size(0) | lcons_c27 of size(2)

def len_i49 =
  fn A_v2808 xs_v2809 ⇒
    match xs_v2809 with
    | nil_c24  ⇒ O_c19
    | cons_c25 __v2810 xs_v2811 ⇒ (S_c20 ((len_i49 NULL) xs_v2811))
    end

def llen_i50 =
  fn A_v2812 xs_v2813 ⇒
    match xs_v2813 with
    | lnil_c26  ⇒ (O_c19, lnil_c26)
    | lcons_c27 x_v2814 xs_v2815 ⇒
      match ((llen_i50 NULL) xs_v2815) with
      | (n_v2816, xs_v2817) ⇒
        ((S_c20 n_v2816), (lcons_c27 x_v2814 xs_v2817))
      end
    end

def append_i51 =
  fn A_v2818 xs_v2819 ys_v2820 ⇒
    match xs_v2819 with
    | nil_c24  ⇒ ys_v2820
    | cons_c25 x_v2821 xs_v2822 ⇒
      (cons_c25 x_v2821 (((append_i51 NULL) xs_v2822) ys_v2820))
    end

def lappend_i52 =
  fn A_v2823 xs_v2824 ys_v2825 ⇒
    match xs_v2824 with
    | lnil_c26  ⇒ ys_v2825
    | lcons_c27 x_v2826 xs_v2827 ⇒
      (lcons_c27 x_v2826 (((lappend_i52 NULL) xs_v2827) ys_v2825))
    end

data box_d17 =
| Box_c28 of size(1)

def map_box_i53 =
  fn A_v2828 B_v2829 f_v2830 m_v2831 ⇒
    match m_v2831 with
    | Box_c28 a_v2832 ⇒ (Box_c28 (f_v2830 a_v2832))
    end

def unbox_i54 =
  fn A_v2833 m_v2834 ⇒ match m_v2834 with
                         | Box_c28 a_v2835 ⇒ a_v2835
                         end

def readline_i61 =
  fn __v2836 ⇒
    let ch_v2837 ⇐ open stdin in
    let ch_v2838 ⇐ (send ch_v2837 true_c17) in
    let __v2839 ⇐ recv ch_v2838 in
    match __v2839 with
    | (s_v2840, ch_v2841) ⇒
      let ch_v2842 ⇐ (send ch_v2841 false_c18) in
      let __v2843 ⇐ close⇑ ch_v2842 in return s_v2840
    end

def print_i62 =
  fn s_v2844 ⇒
    let ch_v2845 ⇐ open stdout in
    let ch_v2846 ⇐ (send ch_v2845 true_c17) in
    let ch_v2847 ⇐ (send ch_v2846 s_v2844) in
    let ch_v2848 ⇐ (send ch_v2847 false_c18) in close⇑ ch_v2848

def prerr_i63 =
  fn s_v2849 ⇒
    let ch_v2850 ⇐ open stderr in
    let ch_v2851 ⇐ (send ch_v2850 true_c17) in
    let ch_v2852 ⇐ (send ch_v2851 s_v2849) in
    let ch_v2853 ⇐ (send ch_v2852 false_c18) in close⇑ ch_v2853

data ListUU_d21 =
| NilUU_c35 of size(0) | ConsUU_c36 of size(2)

data ListUL_d20 =
| NilUL_c33 of size(0) | ConsUL_c34 of size(2)

data ListLU_d19 =
| NilLU_c31 of size(0)

data ListLL_d18 =
| NilLL_c29 of size(0) | ConsLL_c30 of size(2)

def appendUU_i71 =
  fn A_v2854 xs_v2855 ys_v2856 ⇒
    match xs_v2855 with
    | NilUU_c35  ⇒ ys_v2856
    | ConsUU_c36 x_v2857 xs_v2858 ⇒
      (ConsUU_c36 x_v2857 (((appendUU_i71 NULL) xs_v2858) ys_v2856))
    end

def appendUL_i70 =
  fn A_v2859 xs_v2860 ys_v2861 ⇒
    match xs_v2860 with
    | NilUL_c33  ⇒ ys_v2861
    | ConsUL_c34 x_v2862 xs_v2863 ⇒
      (ConsUL_c34 x_v2862 (((appendUL_i70 NULL) xs_v2863) ys_v2861))
    end

def appendLL_i68 =
  fn A_v2864 xs_v2865 ys_v2866 ⇒
    match xs_v2865 with
    | NilLL_c29  ⇒ ys_v2866
    | ConsLL_c30 x_v2867 xs_v2868 ⇒
      (ConsLL_c30 x_v2867 (((appendLL_i68 NULL) xs_v2868) ys_v2866))
    end

def ls0_i78 = (ConsUU_c36 O_c19 NilUU_c35)

def ls1_i79 = (ConsUU_c36 O_c19 NilUU_c35)

def ls2_i80 = (((appendUU_i71 NULL) ls0_i78) ls1_i79)

def idU_i82 = fn A_v2869 x_v2870 ⇒ x_v2870

def idL_i81 = fn A_v2871 x_v2872 ⇒ x_v2872

def main_i83 =
  fn __v2873 ⇒
    let s_v2874 ⇐ (readline_i61 tt_c16) in
    ((idL_i81 NULL) (print_i62 ((idU_i82 NULL) s_v2874)))

trans12 success--------------------------

