parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v109 : bool_d2) (b2_v110 : bool_d2) ⇒
    match b1_v109 as __v111 in ??1 with
    | true_c2  ⇒ b2_v110 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v114 : bool_d2) (b2_v115 : bool_d2) ⇒
    match b1_v114 as __v116 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v115
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v118 : bool_d2) ⇒
    match b_v118 as __v119 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v120 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v123 : nat_d3) (y_v124 : nat_d3) ⇒
    match x_v123 as __v125 in ??4 with
    | O_c4  ⇒ y_v124 | S_c5 x_v126 ⇒ (S_c5‹› (addn_i4 x_v126 y_v124))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v129 : nat_d3) (y_v130 : nat_d3) ⇒
    match x_v129 as __v131 in ??5 with
    | O_c4  ⇒ y_v130
    | S_c5 x_v132 ⇒ (addn_i4 y_v130 (muln_i5 x_v132 y_v130))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v135 : nat_d3) (y_v136 : nat_d3) ⇒
    match x_v135 as __v137 in ??6 with
    | O_c4  ⇒
      match y_v136 as __v138 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v139 ⇒ false_c3‹›
      end
    | S_c5 x_v140 ⇒
      match y_v136 as __v141 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v142 ⇒ (eqn_i6 x_v140 y_v142)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v145 : nat_d3) (y_v146 : nat_d3) ⇒
    match x_v145 as __v147 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v148 ⇒
      match y_v146 as __v149 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v150 ⇒ (lten_i7 x_v148 y_v150)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v153 : nat_d3) (y_v154 : nat_d3) ⇒
    match x_v153 as __v155 in ??11 with
    | O_c4  ⇒
      match y_v154 as __v156 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v157 ⇒ false_c3‹›
      end
    | S_c5 x_v158 ⇒
      match y_v154 as __v159 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v160 ⇒ (gten_i8 x_v158 y_v160)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v163 : nat_d3) (y_v164 : nat_d3) ⇒
    match x_v163 as __v165 in ??14 with
    | O_c4  ⇒
      match y_v164 as __v166 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v167 ⇒ true_c2‹›
      end
    | S_c5 x_v168 ⇒
      match y_v164 as __v169 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v170 ⇒ (ltn_i9 x_v168 y_v170)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v173 : nat_d3) (y_v174 : nat_d3) ⇒
    match x_v173 as __v175 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v176 ⇒
      match y_v174 as __v177 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v178 ⇒ (gtn_i10 x_v176 y_v178)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v179 : bool_d2) (b1_v180 : bool_d2) (b2_v181 : bool_d2)
    (b3_v182 : bool_d2) (b4_v183 : bool_d2) (b5_v184 : bool_d2)
    (b6_v185 : bool_d2) (b7_v186 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v187 : ascii_d4) (s_v188 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v191 : string_d5) (s2_v192 : string_d5) ⇒
    match s1_v191 as __v193 in ??19 with
    | EmptyString_c7  ⇒ s2_v192
    | String_c8 c_v194 s1_v195 ⇒
      (String_c8‹› c_v194 (cats_i11 s1_v195 s2_v192))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v197 : string_d5) ⇒
    match s_v197 as __v198 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v199 s_v200 ⇒ (S_c5‹› (strlen_i12 s_v200))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v202 : unit_d1) ⇒
    ⇑(b_v203 : bool_d2) ⇒
      match b_v203 as __v204 in ??21 with
      | true_c2  ⇒ ⇓(__v205 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v207 : unit_d1) ⇒
    ⇑(b_v208 : bool_d2) ⇒
      match b_v208 as __v209 in ??22 with
      | true_c2  ⇒ ⇑(__v210 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v212 : unit_d1) ⇒
    ⇑(b_v213 : bool_d2) ⇒
      match b_v213 as __v214 in ??23 with
      | true_c2  ⇒ ⇑(__v215 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v217 : unit_d1) ⇒
    let ch_v218 ⇐ open stdin in
    let ch_v219 ⇐ (send ch_v218 true_c2‹›) in
    let __v220 ⇐ recv ch_v219 in
    match __v220 as __v221 in ??24 with
    | ⟨s_v222, ch_v223⟩ ⇒
      let ch_v224 ⇐ (send ch_v223 false_c3‹›) in
      let __v225 ⇐ close ch_v224 in return s_v222
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v227 : string_d5) ⇒
    let ch_v228 ⇐ open stdout in
    let ch_v229 ⇐ (send ch_v228 true_c2‹›) in
    let ch_v230 ⇐ (send ch_v229 s_v227) in
    let ch_v231 ⇐ (send ch_v230 false_c3‹›) in close ch_v231

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v233 : string_d5) ⇒
    let ch_v234 ⇐ open stderr in
    let ch_v235 ⇐ (send ch_v234 true_c2‹›) in
    let ch_v236 ⇐ (send ch_v235 s_v233) in
    let ch_v237 ⇐ (send ch_v236 false_c3‹›) in close ch_v237

program test_i22 : unit_d1 → unit_d1 → unit_d1 =
  fn (x_v240 : unit_d1) (y_v241 : unit_d1) ⇒
    let test1_v242 = (test_i22 tt_c1‹›) in (test1_v242 tt_c1‹›)

program main_i23 : IO unit_d1 =
  let x_v243 = return tt_c1‹› in let v_v244 ⇐ x_v243 in return v_v244

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v875 : bool_d2) (b2_v876 : bool_d2) ⇒
    match b1_v875 as __v877 in bool_d2 with
    | true_c2  ⇒ b2_v876 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v880 : bool_d2) (b2_v881 : bool_d2) ⇒
    match b1_v880 as __v882 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v881
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v884 : bool_d2) ⇒
    match b_v884 as __v885 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v886 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v889 : nat_d3) (y_v890 : nat_d3) ⇒
    match x_v889 as __v891 in nat_d3 with
    | O_c4  ⇒ y_v890 | S_c5 x_v892 ⇒ (S_c5‹› (addn_i4 x_v892 y_v890))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v895 : nat_d3) (y_v896 : nat_d3) ⇒
    match x_v895 as __v897 in nat_d3 with
    | O_c4  ⇒ y_v896
    | S_c5 x_v898 ⇒ (addn_i4 y_v896 (muln_i5 x_v898 y_v896))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v901 : nat_d3) (y_v902 : nat_d3) ⇒
    match x_v901 as __v903 in bool_d2 with
    | O_c4  ⇒
      match y_v902 as __v904 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v905 ⇒ false_c3‹›
      end
    | S_c5 x_v906 ⇒
      match y_v902 as __v907 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v908 ⇒ (eqn_i6 x_v906 y_v908)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v911 : nat_d3) (y_v912 : nat_d3) ⇒
    match x_v911 as __v913 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v914 ⇒
      match y_v912 as __v915 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v916 ⇒ (lten_i7 x_v914 y_v916)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v919 : nat_d3) (y_v920 : nat_d3) ⇒
    match x_v919 as __v921 in bool_d2 with
    | O_c4  ⇒
      match y_v920 as __v922 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v923 ⇒ false_c3‹›
      end
    | S_c5 x_v924 ⇒
      match y_v920 as __v925 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v926 ⇒ (gten_i8 x_v924 y_v926)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v929 : nat_d3) (y_v930 : nat_d3) ⇒
    match x_v929 as __v931 in bool_d2 with
    | O_c4  ⇒
      match y_v930 as __v932 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v933 ⇒ true_c2‹›
      end
    | S_c5 x_v934 ⇒
      match y_v930 as __v935 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v936 ⇒ (ltn_i9 x_v934 y_v936)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v939 : nat_d3) (y_v940 : nat_d3) ⇒
    match x_v939 as __v941 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v942 ⇒
      match y_v940 as __v943 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v944 ⇒ (gtn_i10 x_v942 y_v944)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v945 : bool_d2) (b1_v946 : bool_d2) (b2_v947 : bool_d2)
    (b3_v948 : bool_d2) (b4_v949 : bool_d2) (b5_v950 : bool_d2)
    (b6_v951 : bool_d2) (b7_v952 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v953 : ascii_d4) (s_v954 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v957 : string_d5) (s2_v958 : string_d5) ⇒
    match s1_v957 as __v959 in string_d5 with
    | EmptyString_c7  ⇒ s2_v958
    | String_c8 c_v960 s1_v961 ⇒
      (String_c8‹› c_v960 (cats_i11 s1_v961 s2_v958))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v963 : string_d5) ⇒
    match s_v963 as __v964 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v965 s_v966 ⇒ (S_c5‹› (strlen_i12 s_v966))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v968 : unit_d1) ⇒
    ⇑(b_v969 : bool_d2) ⇒
      match b_v969 as __v970 in proto with
      | true_c2  ⇒ ⇓(__v971 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v973 : unit_d1) ⇒
    ⇑(b_v974 : bool_d2) ⇒
      match b_v974 as __v975 in proto with
      | true_c2  ⇒ ⇑(__v976 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v978 : unit_d1) ⇒
    ⇑(b_v979 : bool_d2) ⇒
      match b_v979 as __v980 in proto with
      | true_c2  ⇒ ⇑(__v981 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v983 : unit_d1) ⇒
    let ch_v984 ⇐ open stdin in
    let ch_v985 ⇐ (send ch_v984 true_c2‹›) in
    let __v986 ⇐ recv ch_v985 in
    match __v986 as __v987 in IO string_d5 with
    | ⟨s_v988, ch_v989⟩ ⇒
      let ch_v990 ⇐ (send ch_v989 false_c3‹›) in
      let __v991 ⇐ close ch_v990 in return s_v988
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v993 : string_d5) ⇒
    let ch_v994 ⇐ open stdout in
    let ch_v995 ⇐ (send ch_v994 true_c2‹›) in
    let ch_v996 ⇐ (send ch_v995 s_v993) in
    let ch_v997 ⇐ (send ch_v996 false_c3‹›) in close ch_v997

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v999 : string_d5) ⇒
    let ch_v1000 ⇐ open stderr in
    let ch_v1001 ⇐ (send ch_v1000 true_c2‹›) in
    let ch_v1002 ⇐ (send ch_v1001 s_v999) in
    let ch_v1003 ⇐ (send ch_v1002 false_c3‹›) in close ch_v1003

program test_i22 : unit_d1 → unit_d1 → unit_d1 =
  fn (x_v1006 : unit_d1) (y_v1007 : unit_d1) ⇒
    let test1_v1008 = (test_i22 tt_c1‹›) in (test1_v1008 tt_c1‹›)

program main_i23 : IO unit_d1 =
  let x_v1009 = return tt_c1‹› in
  let v_v1010 ⇐ x_v1009 in return v_v1010

trans1e success--------------------------

data unit_d6 =
| tt_c9 of size(0)

data bool_d7 =
| true_c10 of size(0) | false_c11 of size(0)

def andb_i24 =
  fn b1_v1143 b2_v1144 ⇒
    match b1_v1143 with
    | true_c10  ⇒ b2_v1144 | false_c11  ⇒ false_c11
    end

def orb_i25 =
  fn b1_v1145 b2_v1146 ⇒
    match b1_v1145 with
    | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1146
    end

def notb_i26 =
  fn b_v1147 ⇒
    match b_v1147 with
    | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
    end

data nat_d8 =
| O_c12 of size(0) | S_c13 of size(1)

def addn_i27 =
  fn x_v1148 y_v1149 ⇒
    match x_v1148 with
    | O_c12  ⇒ y_v1149
    | S_c13 x_v1150 ⇒ (S_c13 ((addn_i27 x_v1150) y_v1149))
    end

def muln_i28 =
  fn x_v1151 y_v1152 ⇒
    match x_v1151 with
    | O_c12  ⇒ y_v1152
    | S_c13 x_v1153 ⇒ ((addn_i27 y_v1152) ((muln_i28 x_v1153) y_v1152))
    end

def eqn_i29 =
  fn x_v1154 y_v1155 ⇒
    match x_v1154 with
    | O_c12  ⇒
      match y_v1155 with
      | O_c12  ⇒ true_c10 | S_c13 __v1156 ⇒ false_c11
      end
    | S_c13 x_v1157 ⇒
      match y_v1155 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1158 ⇒ ((eqn_i29 x_v1157) y_v1158)
      end
    end

def lten_i30 =
  fn x_v1159 y_v1160 ⇒
    match x_v1159 with
    | O_c12  ⇒ true_c10
    | S_c13 x_v1161 ⇒
      match y_v1160 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1162 ⇒ ((lten_i30 x_v1161) y_v1162)
      end
    end

def gten_i31 =
  fn x_v1163 y_v1164 ⇒
    match x_v1163 with
    | O_c12  ⇒
      match y_v1164 with
      | O_c12  ⇒ true_c10 | S_c13 __v1165 ⇒ false_c11
      end
    | S_c13 x_v1166 ⇒
      match y_v1164 with
      | O_c12  ⇒ true_c10 | S_c13 y_v1167 ⇒ ((gten_i31 x_v1166) y_v1167)
      end
    end

data ascii_d9 =
| Ascii_c14 of size(8)

data string_d10 =
| EmptyString_c15 of size(0) | String_c16 of size(2)

def cats_i34 =
  fn s1_v1168 s2_v1169 ⇒
    match s1_v1168 with
    | EmptyString_c15  ⇒ s2_v1169
    | String_c16 c_v1170 s1_v1171 ⇒
      (String_c16 c_v1170 ((cats_i34 s1_v1171) s2_v1169))
    end

def strlen_i35 =
  fn s_v1172 ⇒
    match s_v1172 with
    | EmptyString_c15  ⇒ O_c12
    | String_c16 __v1173 s_v1174 ⇒ (S_c13 (strlen_i35 s_v1174))
    end

def readline_i42 =
  fn __v1175 ⇒
    let ch_v1176 ⇐ open stdin in
    let ch_v1177 ⇐ (send ch_v1176 true_c10) in
    let __v1178 ⇐ recv ch_v1177 in
    match __v1178 with
    | (s_v1179, ch_v1180) ⇒
      let ch_v1181 ⇐ (send ch_v1180 false_c11) in
      let __v1182 ⇐ close⇑ ch_v1181 in return s_v1179
    end

def print_i43 =
  fn s_v1183 ⇒
    let ch_v1184 ⇐ open stdout in
    let ch_v1185 ⇐ (send ch_v1184 true_c10) in
    let ch_v1186 ⇐ (send ch_v1185 s_v1183) in
    let ch_v1187 ⇐ (send ch_v1186 false_c11) in close⇑ ch_v1187

def prerr_i44 =
  fn s_v1188 ⇒
    let ch_v1189 ⇐ open stderr in
    let ch_v1190 ⇐ (send ch_v1189 true_c10) in
    let ch_v1191 ⇐ (send ch_v1190 s_v1188) in
    let ch_v1192 ⇐ (send ch_v1191 false_c11) in close⇑ ch_v1192

def test_i45 =
  fn x_v1193 y_v1194 ⇒
    let test1_v1195 = (test_i45 tt_c9) in (test1_v1195 tt_c9)

main =
  let x_v1196 = return tt_c9 in let v_v1197 ⇐ x_v1196 in return v_v1197

trans12 success--------------------------

fun andb_i24(b1_v1287, b2_v1288) =
  match b1_v1287 with
  | true_c10  ⇒ b2_v1288 | false_c11  ⇒ false_c11
  end

val andbclo_i46 = fn b1_v1289 b2_v1290 ⇒ andb_i24(b1_v1289, b2_v1290)

fun orb_i25(b1_v1291, b2_v1292) =
  match b1_v1291 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1292
  end

val orbclo_i47 = fn b1_v1293 b2_v1294 ⇒ orb_i25(b1_v1293, b2_v1294)

fun notb_i26(b_v1295) =
  match b_v1295 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i48 = fn b_v1296 ⇒ notb_i26(b_v1296)

fun addn_i27(x_v1297, y_v1298) =
  match x_v1297 with
  | O_c12  ⇒ y_v1298 | S_c13 x_v1299 ⇒ (S_c13 addn_i27(x_v1299, y_v1298))
  end

val addnclo_i49 = fn x_v1300 y_v1301 ⇒ addn_i27(x_v1300, y_v1301)

fun muln_i28(x_v1302, y_v1303) =
  match x_v1302 with
  | O_c12  ⇒ y_v1303
  | S_c13 x_v1304 ⇒ addn_i27(y_v1303, muln_i28(x_v1304, y_v1303))
  end

val mulnclo_i50 = fn x_v1305 y_v1306 ⇒ muln_i28(x_v1305, y_v1306)

fun eqn_i29(x_v1307, y_v1308) =
  match x_v1307 with
  | O_c12  ⇒
    match y_v1308 with
    | O_c12  ⇒ true_c10 | S_c13 __v1309 ⇒ false_c11
    end
  | S_c13 x_v1310 ⇒
    match y_v1308 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1311 ⇒ eqn_i29(x_v1310, y_v1311)
    end
  end

val eqnclo_i51 = fn x_v1312 y_v1313 ⇒ eqn_i29(x_v1312, y_v1313)

fun lten_i30(x_v1314, y_v1315) =
  match x_v1314 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1316 ⇒
    match y_v1315 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1317 ⇒ lten_i30(x_v1316, y_v1317)
    end
  end

val ltenclo_i52 = fn x_v1318 y_v1319 ⇒ lten_i30(x_v1318, y_v1319)

fun gten_i31(x_v1320, y_v1321) =
  match x_v1320 with
  | O_c12  ⇒
    match y_v1321 with
    | O_c12  ⇒ true_c10 | S_c13 __v1322 ⇒ false_c11
    end
  | S_c13 x_v1323 ⇒
    match y_v1321 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1324 ⇒ gten_i31(x_v1323, y_v1324)
    end
  end

val gtenclo_i53 = fn x_v1325 y_v1326 ⇒ gten_i31(x_v1325, y_v1326)

fun cats_i34(s1_v1327, s2_v1328) =
  match s1_v1327 with
  | EmptyString_c15  ⇒ s2_v1328
  | String_c16 c_v1329 s1_v1330 ⇒
    (String_c16 c_v1329 cats_i34(s1_v1330, s2_v1328))
  end

val catsclo_i54 = fn s1_v1331 s2_v1332 ⇒ cats_i34(s1_v1331, s2_v1332)

fun strlen_i35(s_v1333) =
  match s_v1333 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1334 s_v1335 ⇒ (S_c13 strlen_i35(s_v1335))
  end

val strlenclo_i55 = fn s_v1336 ⇒ strlen_i35(s_v1336)

fun readline_i42(__v1337) =
  ln __v1338 ⇒
    let ch_v1339 = (ln __v1340 ⇒ open stdin) NULL in
    let ch_v1341 =
      ((fn x_v1342 ⇒ ln __v1343 ⇒ send(ch_v1339, x_v1342)) true_c10) NULL
    in
    let __v1344 = (ln __v1345 ⇒ recv(ch_v1341)) NULL in
    (match __v1344 with
     | (s_v1346, ch_v1347) ⇒
       ln __v1348 ⇒
         let ch_v1349 =
           ((fn x_v1350 ⇒ ln __v1351 ⇒ send(ch_v1347, x_v1350)) false_c11)
             NULL
         in
         let __v1352 = (ln __v1353 ⇒ let x_v1354 = ch_v1349 in tt_c9) NULL
         in (ln __v1355 ⇒ s_v1346) NULL
     end) NULL

val readlineclo_i56 = fn __v1356 ⇒ readline_i42(__v1356)

fun print_i43(s_v1357) =
  ln __v1358 ⇒
    let ch_v1359 = (ln __v1360 ⇒ open stdout) NULL in
    let ch_v1361 =
      ((fn x_v1362 ⇒ ln __v1363 ⇒ send(ch_v1359, x_v1362)) true_c10) NULL
    in
    let ch_v1364 =
      ((fn x_v1365 ⇒ ln __v1366 ⇒ send(ch_v1361, x_v1365)) s_v1357) NULL
    in
    let ch_v1367 =
      ((fn x_v1368 ⇒ ln __v1369 ⇒ send(ch_v1364, x_v1368)) false_c11)
        NULL
    in (ln __v1370 ⇒ let x_v1371 = ch_v1367 in tt_c9) NULL

val printclo_i57 = fn s_v1372 ⇒ print_i43(s_v1372)

fun prerr_i44(s_v1373) =
  ln __v1374 ⇒
    let ch_v1375 = (ln __v1376 ⇒ open stderr) NULL in
    let ch_v1377 =
      ((fn x_v1378 ⇒ ln __v1379 ⇒ send(ch_v1375, x_v1378)) true_c10) NULL
    in
    let ch_v1380 =
      ((fn x_v1381 ⇒ ln __v1382 ⇒ send(ch_v1377, x_v1381)) s_v1373) NULL
    in
    let ch_v1383 =
      ((fn x_v1384 ⇒ ln __v1385 ⇒ send(ch_v1380, x_v1384)) false_c11)
        NULL
    in (ln __v1386 ⇒ let x_v1387 = ch_v1383 in tt_c9) NULL

val prerrclo_i58 = fn s_v1388 ⇒ prerr_i44(s_v1388)

fun test_i45(x_v1389, y_v1390) =
  let test1_v1391 = (testclo_i59) tt_c9 in (test1_v1391) tt_c9

val testclo_i59 = fn x_v1392 y_v1393 ⇒ test_i45(x_v1392, y_v1393)

main =
  (let x_v1394 = ln __v1395 ⇒ tt_c9 in
   ln __v1396 ⇒
     let v_v1397 = (x_v1394) NULL in (ln __v1398 ⇒ v_v1397) NULL)
    NULL

trans23 success--------------------------

fun andb_i24(b1_v1519, b2_v1520) =
  match b1_v1519 with
  | true_c10  ⇒ b2_v1520 | false_c11  ⇒ false_c11
  end

val andbclo_i46 = fn b1_v1521 b2_v1522 ⇒ andb_i24(b1_v1521, b2_v1522)

fun orb_i25(b1_v1523, b2_v1524) =
  match b1_v1523 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1524
  end

val orbclo_i47 = fn b1_v1525 b2_v1526 ⇒ orb_i25(b1_v1525, b2_v1526)

fun notb_i26(b_v1527) =
  match b_v1527 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i48 = fn b_v1528 ⇒ notb_i26(b_v1528)

fun addn_i27(x_v1529, y_v1530) =
  match x_v1529 with
  | O_c12  ⇒ y_v1530 | S_c13 x_v1531 ⇒ (S_c13 addn_i27(x_v1531, y_v1530))
  end

val addnclo_i49 = fn x_v1532 y_v1533 ⇒ addn_i27(x_v1532, y_v1533)

fun muln_i28(x_v1534, y_v1535) =
  match x_v1534 with
  | O_c12  ⇒ y_v1535
  | S_c13 x_v1536 ⇒ addn_i27(y_v1535, muln_i28(x_v1536, y_v1535))
  end

val mulnclo_i50 = fn x_v1537 y_v1538 ⇒ muln_i28(x_v1537, y_v1538)

fun eqn_i29(x_v1539, y_v1540) =
  match x_v1539 with
  | O_c12  ⇒
    match y_v1540 with
    | O_c12  ⇒ true_c10 | S_c13 __v1541 ⇒ false_c11
    end
  | S_c13 x_v1542 ⇒
    match y_v1540 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1543 ⇒ eqn_i29(x_v1542, y_v1543)
    end
  end

val eqnclo_i51 = fn x_v1544 y_v1545 ⇒ eqn_i29(x_v1544, y_v1545)

fun lten_i30(x_v1546, y_v1547) =
  match x_v1546 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1548 ⇒
    match y_v1547 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1549 ⇒ lten_i30(x_v1548, y_v1549)
    end
  end

val ltenclo_i52 = fn x_v1550 y_v1551 ⇒ lten_i30(x_v1550, y_v1551)

fun gten_i31(x_v1552, y_v1553) =
  match x_v1552 with
  | O_c12  ⇒
    match y_v1553 with
    | O_c12  ⇒ true_c10 | S_c13 __v1554 ⇒ false_c11
    end
  | S_c13 x_v1555 ⇒
    match y_v1553 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1556 ⇒ gten_i31(x_v1555, y_v1556)
    end
  end

val gtenclo_i53 = fn x_v1557 y_v1558 ⇒ gten_i31(x_v1557, y_v1558)

fun cats_i34(s1_v1559, s2_v1560) =
  match s1_v1559 with
  | EmptyString_c15  ⇒ s2_v1560
  | String_c16 c_v1561 s1_v1562 ⇒
    (String_c16 c_v1561 cats_i34(s1_v1562, s2_v1560))
  end

val catsclo_i54 = fn s1_v1563 s2_v1564 ⇒ cats_i34(s1_v1563, s2_v1564)

fun strlen_i35(s_v1565) =
  match s_v1565 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1566 s_v1567 ⇒ (S_c13 strlen_i35(s_v1567))
  end

val strlenclo_i55 = fn s_v1568 ⇒ strlen_i35(s_v1568)

fun readline_i42(__v1569) =
  ln __v1570 ⇒
    let ch_v1571 = open stdin in
    let ch_v1572 = send(ch_v1571, true_c10) in
    let __v1573 = recv(ch_v1572) in
    (match __v1573 with
     | (s_v1574, ch_v1575) ⇒
       ln __v1576 ⇒
         let ch_v1577 = send(ch_v1575, false_c11) in
         let __v1578 = let x_v1579 = ch_v1577 in tt_c9 in s_v1574
     end) NULL

val readlineclo_i56 = fn __v1580 ⇒ readline_i42(__v1580)

fun print_i43(s_v1581) =
  ln __v1582 ⇒
    let ch_v1583 = open stdout in
    let ch_v1584 = send(ch_v1583, true_c10) in
    let ch_v1585 = send(ch_v1584, s_v1581) in
    let ch_v1586 = send(ch_v1585, false_c11) in
    let x_v1587 = ch_v1586 in tt_c9

val printclo_i57 = fn s_v1588 ⇒ print_i43(s_v1588)

fun prerr_i44(s_v1589) =
  ln __v1590 ⇒
    let ch_v1591 = open stderr in
    let ch_v1592 = send(ch_v1591, true_c10) in
    let ch_v1593 = send(ch_v1592, s_v1589) in
    let ch_v1594 = send(ch_v1593, false_c11) in
    let x_v1595 = ch_v1594 in tt_c9

val prerrclo_i58 = fn s_v1596 ⇒ prerr_i44(s_v1596)

fun test_i45(x_v1597, y_v1598) =
  let test1_v1599 = (testclo_i59) tt_c9 in (test1_v1599) tt_c9

val testclo_i59 = fn x_v1600 y_v1601 ⇒ test_i45(x_v1600, y_v1601)

main =
  (let x_v1602 = ln __v1603 ⇒ tt_c9 in
   ln __v1604 ⇒ let v_v1605 = (x_v1602) NULL in v_v1605) NULL

trans3e success--------------------------

[LFun {fname = "lam_fun_t139"; param = (Some "__v1722");
   body =
   [App {lhs = "app_ret_t138"; fptr = (Env 0); aptr = NULL};
     (FreeClo (Env 0)); Mov {lhs = "v_v1724"; rhs = (LVar "app_ret_t138")}];
   return = (LVar "v_v1724")};
  LFun {fname = "lam_fun_t136"; param = (Some "__v1721");
    body = [Struct {lhs = "tt_t135"; ctag = 9; size = 0; data = []}];
    return = (LVar "tt_t135")};
  LFun {fname = "lam_fun_t133"; param = (Some "x_v1717");
    body =
    [Clo {lhs = "lam_clo_t132"; fname = "lam_fun_t131";
       env = [(LVar "x_v1717")]}
      ];
    return = (LVar "lam_clo_t132")};
  LFun {fname = "lam_fun_t131"; param = (Some "y_v1719");
    body =
    [Call {lhs = "call_ret_t130"; fname = "test_i45";
       aptrs = [(Env 0); (LVar "y_v1719")]}
      ];
    return = (LVar "call_ret_t130")};
  LFun {fname = "lam_fun_t124"; param = (Some "s_v1713");
    body =
    [Call {lhs = "call_ret_t123"; fname = "prerr_i44";
       aptrs = [(LVar "s_v1713")]}
      ];
    return = (LVar "call_ret_t123")};
  LFun {fname = "lam_fun_t121"; param = (Some "__v1702");
    body =
    [Open {lhs = "prim_ch_t114"; mode = Stderr};
      Mov {lhs = "ch_v1708"; rhs = (LVar "prim_ch_t114")};
      Struct {lhs = "true_t116"; ctag = 10; size = 0; data = []};
      Send {lhs = "send_ch_t115"; ch = (LVar "ch_v1708");
        msg = (LVar "true_t116")};
      Mov {lhs = "ch_v1709"; rhs = (LVar "send_ch_t115")};
      Send {lhs = "send_ch_t117"; ch = (LVar "ch_v1709"); msg = (Env 0)};
      Mov {lhs = "ch_v1710"; rhs = (LVar "send_ch_t117")};
      Struct {lhs = "false_t119"; ctag = 11; size = 0; data = []};
      Send {lhs = "send_ch_t118"; ch = (LVar "ch_v1710");
        msg = (LVar "false_t119")};
      Mov {lhs = "ch_v1711"; rhs = (LVar "send_ch_t118")};
      Mov {lhs = "x_v1712"; rhs = (LVar "ch_v1711")};
      Struct {lhs = "tt_t120"; ctag = 9; size = 0; data = []}];
    return = (LVar "tt_t120")};
  LFun {fname = "lam_fun_t112"; param = (Some "s_v1700");
    body =
    [Call {lhs = "call_ret_t111"; fname = "print_i43";
       aptrs = [(LVar "s_v1700")]}
      ];
    return = (LVar "call_ret_t111")};
  LFun {fname = "lam_fun_t109"; param = (Some "__v1689");
    body =
    [Open {lhs = "prim_ch_t102"; mode = Stdout};
      Mov {lhs = "ch_v1695"; rhs = (LVar "prim_ch_t102")};
      Struct {lhs = "true_t104"; ctag = 10; size = 0; data = []};
      Send {lhs = "send_ch_t103"; ch = (LVar "ch_v1695");
        msg = (LVar "true_t104")};
      Mov {lhs = "ch_v1696"; rhs = (LVar "send_ch_t103")};
      Send {lhs = "send_ch_t105"; ch = (LVar "ch_v1696"); msg = (Env 0)};
      Mov {lhs = "ch_v1697"; rhs = (LVar "send_ch_t105")};
      Struct {lhs = "false_t107"; ctag = 11; size = 0; data = []};
      Send {lhs = "send_ch_t106"; ch = (LVar "ch_v1697");
        msg = (LVar "false_t107")};
      Mov {lhs = "ch_v1698"; rhs = (LVar "send_ch_t106")};
      Mov {lhs = "x_v1699"; rhs = (LVar "ch_v1698")};
      Struct {lhs = "tt_t108"; ctag = 9; size = 0; data = []}];
    return = (LVar "tt_t108")};
  LFun {fname = "lam_fun_t100"; param = (Some "__v1687");
    body =
    [Call {lhs = "call_ret_t99"; fname = "readline_i42";
       aptrs = [(LVar "__v1687")]}
      ];
    return = (LVar "call_ret_t99")};
  LFun {fname = "lam_fun_t97"; param = (Some "__v1665");
    body =
    [Open {lhs = "prim_ch_t86"; mode = Stdin};
      Mov {lhs = "ch_v1675"; rhs = (LVar "prim_ch_t86")};
      Struct {lhs = "true_t88"; ctag = 10; size = 0; data = []};
      Send {lhs = "send_ch_t87"; ch = (LVar "ch_v1675");
        msg = (LVar "true_t88")};
      Mov {lhs = "ch_v1676"; rhs = (LVar "send_ch_t87")};
      Recv {lhs = "recv_msg_t89"; ch = (LVar "ch_v1676")};
      Mov {lhs = "__v1677"; rhs = (LVar "recv_msg_t89")};
      Switch {cond = (LVar "__v1677");
        cases =
        [(0,
          [Mov {lhs = "s_v1678"; rhs = (Idx ((LVar "__v1677"), 0))};
            Mov {lhs = "ch_v1679"; rhs = (Idx ((LVar "__v1677"), 1))};
            (FreeStruct (LVar "__v1677"));
            Clo {lhs = "lam_clo_t95"; fname = "lam_fun_t94";
              env = [(LVar "ch_v1679"); (LVar "s_v1678")]};
            Mov {lhs = "switch_tmp_t90"; rhs = (LVar "lam_clo_t95")}; Break])
          ]};
      App {lhs = "app_ret_t96"; fptr = (LVar "switch_tmp_t90"); aptr = NULL};
      (FreeClo (LVar "switch_tmp_t90"))];
    return = (LVar "app_ret_t96")};
  LFun {fname = "lam_fun_t94"; param = (Some "__v1680");
    body =
    [Struct {lhs = "false_t92"; ctag = 11; size = 0; data = []};
      Send {lhs = "send_ch_t91"; ch = (Env 0); msg = (LVar "false_t92")};
      Mov {lhs = "ch_v1684"; rhs = (LVar "send_ch_t91")};
      Mov {lhs = "x_v1686"; rhs = (LVar "ch_v1684")};
      Struct {lhs = "tt_t93"; ctag = 9; size = 0; data = []};
      Mov {lhs = "__v1685"; rhs = (LVar "tt_t93")}];
    return = (Env 1)};
  LFun {fname = "lam_fun_t84"; param = (Some "s_v1663");
    body =
    [Call {lhs = "call_ret_t83"; fname = "strlen_i35";
       aptrs = [(LVar "s_v1663")]}
      ];
    return = (LVar "call_ret_t83")};
  LFun {fname = "lam_fun_t77"; param = (Some "s1_v1657");
    body =
    [Clo {lhs = "lam_clo_t76"; fname = "lam_fun_t75";
       env = [(LVar "s1_v1657")]}
      ];
    return = (LVar "lam_clo_t76")};
  LFun {fname = "lam_fun_t75"; param = (Some "s2_v1659");
    body =
    [Call {lhs = "call_ret_t74"; fname = "cats_i34";
       aptrs = [(Env 0); (LVar "s2_v1659")]}
      ];
    return = (LVar "call_ret_t74")};
  LFun {fname = "lam_fun_t69"; param = (Some "x_v1650");
    body =
    [Clo {lhs = "lam_clo_t68"; fname = "lam_fun_t67";
       env = [(LVar "x_v1650")]}
      ];
    return = (LVar "lam_clo_t68")};
  LFun {fname = "lam_fun_t67"; param = (Some "y_v1652");
    body =
    [Call {lhs = "call_ret_t66"; fname = "gten_i31";
       aptrs = [(Env 0); (LVar "y_v1652")]}
      ];
    return = (LVar "call_ret_t66")};
  LFun {fname = "lam_fun_t57"; param = (Some "x_v1642");
    body =
    [Clo {lhs = "lam_clo_t56"; fname = "lam_fun_t55";
       env = [(LVar "x_v1642")]}
      ];
    return = (LVar "lam_clo_t56")};
  LFun {fname = "lam_fun_t55"; param = (Some "y_v1644");
    body =
    [Call {lhs = "call_ret_t54"; fname = "lten_i30";
       aptrs = [(Env 0); (LVar "y_v1644")]}
      ];
    return = (LVar "call_ret_t54")};
  LFun {fname = "lam_fun_t47"; param = (Some "x_v1635");
    body =
    [Clo {lhs = "lam_clo_t46"; fname = "lam_fun_t45";
       env = [(LVar "x_v1635")]}
      ];
    return = (LVar "lam_clo_t46")};
  LFun {fname = "lam_fun_t45"; param = (Some "y_v1637");
    body =
    [Call {lhs = "call_ret_t44"; fname = "eqn_i29";
       aptrs = [(Env 0); (LVar "y_v1637")]}
      ];
    return = (LVar "call_ret_t44")};
  LFun {fname = "lam_fun_t35"; param = (Some "x_v1627");
    body =
    [Clo {lhs = "lam_clo_t34"; fname = "lam_fun_t33";
       env = [(LVar "x_v1627")]}
      ];
    return = (LVar "lam_clo_t34")};
  LFun {fname = "lam_fun_t33"; param = (Some "y_v1629");
    body =
    [Call {lhs = "call_ret_t32"; fname = "muln_i28";
       aptrs = [(Env 0); (LVar "y_v1629")]}
      ];
    return = (LVar "call_ret_t32")};
  LFun {fname = "lam_fun_t27"; param = (Some "x_v1621");
    body =
    [Clo {lhs = "lam_clo_t26"; fname = "lam_fun_t25";
       env = [(LVar "x_v1621")]}
      ];
    return = (LVar "lam_clo_t26")};
  LFun {fname = "lam_fun_t25"; param = (Some "y_v1623");
    body =
    [Call {lhs = "call_ret_t24"; fname = "addn_i27";
       aptrs = [(Env 0); (LVar "y_v1623")]}
      ];
    return = (LVar "call_ret_t24")};
  LFun {fname = "lam_fun_t19"; param = (Some "b_v1617");
    body =
    [Call {lhs = "call_ret_t18"; fname = "notb_i26";
       aptrs = [(LVar "b_v1617")]}
      ];
    return = (LVar "call_ret_t18")};
  LFun {fname = "lam_fun_t13"; param = (Some "b1_v1613");
    body =
    [Clo {lhs = "lam_clo_t12"; fname = "lam_fun_t11";
       env = [(LVar "b1_v1613")]}
      ];
    return = (LVar "lam_clo_t12")};
  LFun {fname = "lam_fun_t11"; param = (Some "b2_v1615");
    body =
    [Call {lhs = "call_ret_t10"; fname = "orb_i25";
       aptrs = [(Env 0); (LVar "b2_v1615")]}
      ];
    return = (LVar "call_ret_t10")};
  LFun {fname = "lam_fun_t6"; param = (Some "b1_v1608");
    body =
    [Clo {lhs = "lam_clo_t5"; fname = "lam_fun_t4"; env = [(LVar "b1_v1608")]}
      ];
    return = (LVar "lam_clo_t5")};
  LFun {fname = "lam_fun_t4"; param = (Some "b2_v1610");
    body =
    [Call {lhs = "call_ret_t3"; fname = "andb_i24";
       aptrs = [(Env 0); (LVar "b2_v1610")]}
      ];
    return = (LVar "call_ret_t3")};
  GFun {fname = "andb_i24"; param = ["b1_v1606"; "b2_v1607"];
    body =
    [Switch {cond = (LVar "b1_v1606");
       cases =
       [(10, [Mov {lhs = "switch_tmp_t1"; rhs = (LVar "b2_v1607")}; Break]);
         (11,
          [Struct {lhs = "false_t2"; ctag = 11; size = 0; data = []};
            Mov {lhs = "switch_tmp_t1"; rhs = (LVar "false_t2")}; Break])
         ]}
      ];
    return = (LVar "switch_tmp_t1")};
  GFun {fname = "orb_i25"; param = ["b1_v1611"; "b2_v1612"];
    body =
    [Switch {cond = (LVar "b1_v1611");
       cases =
       [(10,
         [Struct {lhs = "true_t9"; ctag = 10; size = 0; data = []};
           Mov {lhs = "switch_tmp_t8"; rhs = (LVar "true_t9")}; Break]);
         (11, [Mov {lhs = "switch_tmp_t8"; rhs = (LVar "b2_v1612")}; Break])]}
      ];
    return = (LVar "switch_tmp_t8")};
  GFun {fname = "notb_i26"; param = ["b_v1616"];
    body =
    [Switch {cond = (LVar "b_v1616");
       cases =
       [(10,
         [Struct {lhs = "false_t16"; ctag = 11; size = 0; data = []};
           Mov {lhs = "switch_tmp_t15"; rhs = (LVar "false_t16")}; Break]);
         (11,
          [Struct {lhs = "true_t17"; ctag = 10; size = 0; data = []};
            Mov {lhs = "switch_tmp_t15"; rhs = (LVar "true_t17")}; Break])
         ]}
      ];
    return = (LVar "switch_tmp_t15")};
  GFun {fname = "addn_i27"; param = ["x_v1618"; "y_v1619"];
    body =
    [Switch {cond = (LVar "x_v1618");
       cases =
       [(12, [Mov {lhs = "switch_tmp_t21"; rhs = (LVar "y_v1619")}; Break]);
         (13,
          [Mov {lhs = "x_v1620"; rhs = (Idx ((LVar "x_v1618"), 0))};
            Call {lhs = "call_ret_t22"; fname = "addn_i27";
              aptrs = [(LVar "x_v1620"); (LVar "y_v1619")]};
            Struct {lhs = "S_t23"; ctag = 13; size = 1;
              data = [(LVar "call_ret_t22")]};
            Mov {lhs = "switch_tmp_t21"; rhs = (LVar "S_t23")}; Break])
         ]}
      ];
    return = (LVar "switch_tmp_t21")};
  GFun {fname = "muln_i28"; param = ["x_v1624"; "y_v1625"];
    body =
    [Switch {cond = (LVar "x_v1624");
       cases =
       [(12, [Mov {lhs = "switch_tmp_t29"; rhs = (LVar "y_v1625")}; Break]);
         (13,
          [Mov {lhs = "x_v1626"; rhs = (Idx ((LVar "x_v1624"), 0))};
            Call {lhs = "call_ret_t31"; fname = "muln_i28";
              aptrs = [(LVar "x_v1626"); (LVar "y_v1625")]};
            Call {lhs = "call_ret_t30"; fname = "addn_i27";
              aptrs = [(LVar "y_v1625"); (LVar "call_ret_t31")]};
            Mov {lhs = "switch_tmp_t29"; rhs = (LVar "call_ret_t30")}; Break])
         ]}
      ];
    return = (LVar "switch_tmp_t29")};
  GFun {fname = "eqn_i29"; param = ["x_v1630"; "y_v1631"];
    body =
    [Switch {cond = (LVar "x_v1630");
       cases =
       [(12,
         [Switch {cond = (LVar "y_v1631");
            cases =
            [(12,
              [Struct {lhs = "true_t39"; ctag = 10; size = 0; data = []};
                Mov {lhs = "switch_tmp_t38"; rhs = (LVar "true_t39")}; Break]);
              (13,
               [Mov {lhs = "__v1632"; rhs = (Idx ((LVar "y_v1631"), 0))};
                 Struct {lhs = "false_t40"; ctag = 11; size = 0; data = []};
                 Mov {lhs = "switch_tmp_t38"; rhs = (LVar "false_t40")};
                 Break])
              ]};
           Mov {lhs = "switch_tmp_t37"; rhs = (LVar "switch_tmp_t38")}; Break
           ]);
         (13,
          [Mov {lhs = "x_v1633"; rhs = (Idx ((LVar "x_v1630"), 0))};
            Switch {cond = (LVar "y_v1631");
              cases =
              [(12,
                [Struct {lhs = "false_t42"; ctag = 11; size = 0; data = []};
                  Mov {lhs = "switch_tmp_t41"; rhs = (LVar "false_t42")};
                  Break]);
                (13,
                 [Mov {lhs = "y_v1634"; rhs = (Idx ((LVar "y_v1631"), 0))};
                   Call {lhs = "call_ret_t43"; fname = "eqn_i29";
                     aptrs = [(LVar "x_v1633"); (LVar "y_v1634")]};
                   Mov {lhs = "switch_tmp_t41"; rhs = (LVar "call_ret_t43")};
                   Break])
                ]};
            Mov {lhs = "switch_tmp_t37"; rhs = (LVar "switch_tmp_t41")};
            Break])
         ]}
      ];
    return = (LVar "switch_tmp_t37")};
  GFun {fname = "lten_i30"; param = ["x_v1638"; "y_v1639"];
    body =
    [Switch {cond = (LVar "x_v1638");
       cases =
       [(12,
         [Struct {lhs = "true_t50"; ctag = 10; size = 0; data = []};
           Mov {lhs = "switch_tmp_t49"; rhs = (LVar "true_t50")}; Break]);
         (13,
          [Mov {lhs = "x_v1640"; rhs = (Idx ((LVar "x_v1638"), 0))};
            Switch {cond = (LVar "y_v1639");
              cases =
              [(12,
                [Struct {lhs = "false_t52"; ctag = 11; size = 0; data = []};
                  Mov {lhs = "switch_tmp_t51"; rhs = (LVar "false_t52")};
                  Break]);
                (13,
                 [Mov {lhs = "y_v1641"; rhs = (Idx ((LVar "y_v1639"), 0))};
                   Call {lhs = "call_ret_t53"; fname = "lten_i30";
                     aptrs = [(LVar "x_v1640"); (LVar "y_v1641")]};
                   Mov {lhs = "switch_tmp_t51"; rhs = (LVar "call_ret_t53")};
                   Break])
                ]};
            Mov {lhs = "switch_tmp_t49"; rhs = (LVar "switch_tmp_t51")};
            Break])
         ]}
      ];
    return = (LVar "switch_tmp_t49")};
  GFun {fname = "gten_i31"; param = ["x_v1645"; "y_v1646"];
    body =
    [Switch {cond = (LVar "x_v1645");
       cases =
       [(12,
         [Switch {cond = (LVar "y_v1646");
            cases =
            [(12,
              [Struct {lhs = "true_t61"; ctag = 10; size = 0; data = []};
                Mov {lhs = "switch_tmp_t60"; rhs = (LVar "true_t61")}; Break]);
              (13,
               [Mov {lhs = "__v1647"; rhs = (Idx ((LVar "y_v1646"), 0))};
                 Struct {lhs = "false_t62"; ctag = 11; size = 0; data = []};
                 Mov {lhs = "switch_tmp_t60"; rhs = (LVar "false_t62")};
                 Break])
              ]};
           Mov {lhs = "switch_tmp_t59"; rhs = (LVar "switch_tmp_t60")}; Break
           ]);
         (13,
          [Mov {lhs = "x_v1648"; rhs = (Idx ((LVar "x_v1645"), 0))};
            Switch {cond = (LVar "y_v1646");
              cases =
              [(12,
                [Struct {lhs = "true_t64"; ctag = 10; size = 0; data = []};
                  Mov {lhs = "switch_tmp_t63"; rhs = (LVar "true_t64")};
                  Break]);
                (13,
                 [Mov {lhs = "y_v1649"; rhs = (Idx ((LVar "y_v1646"), 0))};
                   Call {lhs = "call_ret_t65"; fname = "gten_i31";
                     aptrs = [(LVar "x_v1648"); (LVar "y_v1649")]};
                   Mov {lhs = "switch_tmp_t63"; rhs = (LVar "call_ret_t65")};
                   Break])
                ]};
            Mov {lhs = "switch_tmp_t59"; rhs = (LVar "switch_tmp_t63")};
            Break])
         ]}
      ];
    return = (LVar "switch_tmp_t59")};
  GFun {fname = "cats_i34"; param = ["s1_v1653"; "s2_v1654"];
    body =
    [Switch {cond = (LVar "s1_v1653");
       cases =
       [(15, [Mov {lhs = "switch_tmp_t71"; rhs = (LVar "s2_v1654")}; Break]);
         (16,
          [Mov {lhs = "c_v1655"; rhs = (Idx ((LVar "s1_v1653"), 0))};
            Mov {lhs = "s1_v1656"; rhs = (Idx ((LVar "s1_v1653"), 1))};
            Call {lhs = "call_ret_t72"; fname = "cats_i34";
              aptrs = [(LVar "s1_v1656"); (LVar "s2_v1654")]};
            Struct {lhs = "String_t73"; ctag = 16; size = 2;
              data = [(LVar "c_v1655"); (LVar "call_ret_t72")]};
            Mov {lhs = "switch_tmp_t71"; rhs = (LVar "String_t73")}; Break])
         ]}
      ];
    return = (LVar "switch_tmp_t71")};
  GFun {fname = "strlen_i35"; param = ["s_v1660"];
    body =
    [Switch {cond = (LVar "s_v1660");
       cases =
       [(15,
         [Struct {lhs = "O_t80"; ctag = 12; size = 0; data = []};
           Mov {lhs = "switch_tmp_t79"; rhs = (LVar "O_t80")}; Break]);
         (16,
          [Mov {lhs = "__v1661"; rhs = (Idx ((LVar "s_v1660"), 0))};
            Mov {lhs = "s_v1662"; rhs = (Idx ((LVar "s_v1660"), 1))};
            Call {lhs = "call_ret_t81"; fname = "strlen_i35";
              aptrs = [(LVar "s_v1662")]};
            Struct {lhs = "S_t82"; ctag = 13; size = 1;
              data = [(LVar "call_ret_t81")]};
            Mov {lhs = "switch_tmp_t79"; rhs = (LVar "S_t82")}; Break])
         ]}
      ];
    return = (LVar "switch_tmp_t79")};
  GFun {fname = "readline_i42"; param = ["__v1664"];
    body = [Clo {lhs = "lam_clo_t98"; fname = "lam_fun_t97"; env = []}];
    return = (LVar "lam_clo_t98")};
  GFun {fname = "print_i43"; param = ["s_v1688"];
    body =
    [Clo {lhs = "lam_clo_t110"; fname = "lam_fun_t109";
       env = [(LVar "s_v1688")]}
      ];
    return = (LVar "lam_clo_t110")};
  GFun {fname = "prerr_i44"; param = ["s_v1701"];
    body =
    [Clo {lhs = "lam_clo_t122"; fname = "lam_fun_t121";
       env = [(LVar "s_v1701")]}
      ];
    return = (LVar "lam_clo_t122")};
  GFun {fname = "test_i45"; param = ["x_v1714"; "y_v1715"];
    body =
    [Struct {lhs = "tt_t126"; ctag = 9; size = 0; data = []};
      App {lhs = "app_ret_t127"; fptr = (GVar "testclo_i59");
        aptr = (LVar "tt_t126")};
      Mov {lhs = "test1_v1716"; rhs = (LVar "app_ret_t127")};
      Struct {lhs = "tt_t128"; ctag = 9; size = 0; data = []};
      App {lhs = "app_ret_t129"; fptr = (LVar "test1_v1716");
        aptr = (LVar "tt_t128")}
      ];
    return = (LVar "app_ret_t129")}
  ]

[Clo {lhs = "lam_clo_t7"; fname = "lam_fun_t6"; env = []};
  Mov {lhs = "andbclo_i46"; rhs = (LVar "lam_clo_t7")};
  Clo {lhs = "lam_clo_t14"; fname = "lam_fun_t13"; env = []};
  Mov {lhs = "orbclo_i47"; rhs = (LVar "lam_clo_t14")};
  Clo {lhs = "lam_clo_t20"; fname = "lam_fun_t19"; env = []};
  Mov {lhs = "notbclo_i48"; rhs = (LVar "lam_clo_t20")};
  Clo {lhs = "lam_clo_t28"; fname = "lam_fun_t27"; env = []};
  Mov {lhs = "addnclo_i49"; rhs = (LVar "lam_clo_t28")};
  Clo {lhs = "lam_clo_t36"; fname = "lam_fun_t35"; env = []};
  Mov {lhs = "mulnclo_i50"; rhs = (LVar "lam_clo_t36")};
  Clo {lhs = "lam_clo_t48"; fname = "lam_fun_t47"; env = []};
  Mov {lhs = "eqnclo_i51"; rhs = (LVar "lam_clo_t48")};
  Clo {lhs = "lam_clo_t58"; fname = "lam_fun_t57"; env = []};
  Mov {lhs = "ltenclo_i52"; rhs = (LVar "lam_clo_t58")};
  Clo {lhs = "lam_clo_t70"; fname = "lam_fun_t69"; env = []};
  Mov {lhs = "gtenclo_i53"; rhs = (LVar "lam_clo_t70")};
  Clo {lhs = "lam_clo_t78"; fname = "lam_fun_t77"; env = []};
  Mov {lhs = "catsclo_i54"; rhs = (LVar "lam_clo_t78")};
  Clo {lhs = "lam_clo_t85"; fname = "lam_fun_t84"; env = []};
  Mov {lhs = "strlenclo_i55"; rhs = (LVar "lam_clo_t85")};
  Clo {lhs = "lam_clo_t101"; fname = "lam_fun_t100"; env = []};
  Mov {lhs = "readlineclo_i56"; rhs = (LVar "lam_clo_t101")};
  Clo {lhs = "lam_clo_t113"; fname = "lam_fun_t112"; env = []};
  Mov {lhs = "printclo_i57"; rhs = (LVar "lam_clo_t113")};
  Clo {lhs = "lam_clo_t125"; fname = "lam_fun_t124"; env = []};
  Mov {lhs = "prerrclo_i58"; rhs = (LVar "lam_clo_t125")};
  Clo {lhs = "lam_clo_t134"; fname = "lam_fun_t133"; env = []};
  Mov {lhs = "testclo_i59"; rhs = (LVar "lam_clo_t134")};
  Clo {lhs = "lam_clo_t137"; fname = "lam_fun_t136"; env = []};
  Mov {lhs = "x_v1720"; rhs = (LVar "lam_clo_t137")};
  Clo {lhs = "lam_clo_t140"; fname = "lam_fun_t139"; env = [(LVar "x_v1720")]};
  App {lhs = "app_ret_t141"; fptr = (LVar "lam_clo_t140"); aptr = NULL};
  (FreeClo (LVar "lam_clo_t140")); (FreeStruct (LVar "app_ret_t141"))]

NULL

trans34 success--------------------------

