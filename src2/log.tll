parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v171 : bool_d2) (b2_v172 : bool_d2) ⇒
    match b1_v171 as __v173 in ??1 with
    | true_c2  ⇒ b2_v172 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v176 : bool_d2) (b2_v177 : bool_d2) ⇒
    match b1_v176 as __v178 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v177
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v180 : bool_d2) ⇒
    match b_v180 as __v181 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v182 : nat_d3) : nat_d3

program lten_i4 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v185 : nat_d3) (y_v186 : nat_d3) ⇒
    match x_v185 as __v187 in ??4 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v188 ⇒
      match y_v186 as __v189 in ??5 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v190 ⇒ (lten_i4 x_v188 y_v190)
      end
    end

program gten_i5 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v193 : nat_d3) (y_v194 : nat_d3) ⇒
    match x_v193 as __v195 in ??6 with
    | O_c4  ⇒
      match y_v194 as __v196 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v197 ⇒ false_c3‹›
      end
    | S_c5 x_v198 ⇒
      match y_v194 as __v199 in ??7 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v200 ⇒ (gten_i5 x_v198 y_v200)
      end
    end

program ltn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v203 : nat_d3) (y_v204 : nat_d3) ⇒
    match x_v203 as __v205 in ??9 with
    | O_c4  ⇒
      match y_v204 as __v206 in ??11 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v207 ⇒ true_c2‹›
      end
    | S_c5 x_v208 ⇒
      match y_v204 as __v209 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v210 ⇒ (ltn_i6 x_v208 y_v210)
      end
    end

program gtn_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v213 : nat_d3) (y_v214 : nat_d3) ⇒
    match x_v213 as __v215 in ??12 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v216 ⇒
      match y_v214 as __v217 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v218 ⇒ (gtn_i7 x_v216 y_v218)
      end
    end

program eqn_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v221 : nat_d3) (y_v222 : nat_d3) ⇒
    match x_v221 as __v223 in ??14 with
    | O_c4  ⇒
      match y_v222 as __v224 in ??16 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v225 ⇒ false_c3‹›
      end
    | S_c5 x_v226 ⇒
      match y_v222 as __v227 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v228 ⇒ (eqn_i8 x_v226 y_v228)
      end
    end

program pred_i9 : nat_d3 → nat_d3 =
  fn (x_v230 : nat_d3) ⇒
    match x_v230 as __v231 in ??17 with
    | O_c4  ⇒ O_c4‹› | S_c5 x_v232 ⇒ x_v232
    end

program addn_i10 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v235 : nat_d3) (y_v236 : nat_d3) ⇒
    match x_v235 as __v237 in ??18 with
    | O_c4  ⇒ y_v236
    | S_c5 x_v238 ⇒ (S_c5‹› (addn_i10 x_v238 y_v236))
    end

program subn_i11 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v241 : nat_d3) (y_v242 : nat_d3) ⇒
    match y_v242 as __v243 in ??19 with
    | O_c4  ⇒ x_v241 | S_c5 y_v244 ⇒ (subn_i11 (pred_i9 x_v241) y_v244)
    end

program muln_i12 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v247 : nat_d3) (y_v248 : nat_d3) ⇒
    match x_v247 as __v249 in ??20 with
    | O_c4  ⇒ O_c4‹›
    | S_c5 x_v250 ⇒ (addn_i10 y_v248 (muln_i12 x_v250 y_v248))
    end

program divn_i13 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v253 : nat_d3) (y_v254 : nat_d3) ⇒
    match (ltn_i6 x_v253 y_v254) as __v255 in ??21 with
    | true_c2  ⇒ O_c4‹›
    | false_c3  ⇒ (S_c5‹› (divn_i13 (subn_i11 x_v253 y_v254) y_v254))
    end

program modn_i14 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v258 : nat_d3) (y_v259 : nat_d3) ⇒
    (subn_i11 x_v258 (muln_i12 (divn_i13 x_v258 y_v259) y_v259))

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v260 : bool_d2) (b1_v261 : bool_d2) (b2_v262 : bool_d2)
    (b3_v263 : bool_d2) (b4_v264 : bool_d2) (b5_v265 : bool_d2)
    (b6_v266 : bool_d2) (b7_v267 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v268 : ascii_d4) (s_v269 : string_d5) : string_d5

program cats_i15 : string_d5 → string_d5 → string_d5 =
  fn (s1_v272 : string_d5) (s2_v273 : string_d5) ⇒
    match s1_v272 as __v274 in ??22 with
    | EmptyString_c7  ⇒ s2_v273
    | String_c8 c_v275 s1_v276 ⇒
      (String_c8‹› c_v275 (cats_i15 s1_v276 s2_v273))
    end

program strlen_i16 : string_d5 → nat_d3 =
  fn (s_v278 : string_d5) ⇒
    match s_v278 as __v279 in ??23 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v280 s_v281 ⇒ (S_c5‹› (strlen_i16 s_v281))
    end

inductive list_d6 ‹s_s282, t_s283›
  (A_v284 : Type‹s_s282›) : Type‹t_s283›
=
| nil_c9 of
    ‹s_s285, t_s286› (A_v287 : Type‹s_s285›)
    : (list_d6‹s_s285, t_s286› A_v287)
| cons_c10 of
    ‹s_s288, t_s289› (A_v290 : Type‹s_s288›) (hd_v291 : A_v290)
    (tl_v292 : (list_d6‹s_s288, t_s289› A_v290))
    : (list_d6‹s_s288, t_s289› A_v290)

program len_i17 ‹s_s293, t_s294› :
  ∀ {A_v295 : Type‹s_s293›} →
    (list_d6‹??24, t_s294› A_v295) →
      nat_d3 ⊗ (list_d6‹??25, t_s294› A_v295)
=
  fn {A_v298 : Type‹s_s293›}
     (xs_v299 : (list_d6‹??24, t_s294› A_v298)) ⇒
    match xs_v299 as __v300 in ??26 with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹??36, ??35›⟩
    | cons_c10 x_v301 xs_v302 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v302) as __v303 in ??30 with
      | ⟨n_v304, xs_v305⟩ ⇒
        ⟨(S_c5‹› n_v304), (cons_c10‹??33, ??32› x_v301 xs_v305)⟩
      end
    end

program append_i18 ‹s_s306, t_s307› :
  ∀ {A_v308 : Type‹s_s306›} →
    (list_d6‹??37, t_s307› A_v308) →
      (list_d6‹??38, t_s307› A_v308) ⊸ (list_d6‹??40, ??39› A_v308)
=
  fn {A_v311 : Type‹s_s306›}
     (xs_v312 : (list_d6‹??37, t_s307› A_v311)) ⇒
    ln (ys_v313 : ??41) ⇒
      match xs_v312 as __v314 in ??42 with
      | nil_c9  ⇒ ys_v313
      | cons_c10 x_v315 xs_v316 ⇒
        (cons_c10‹??48, ??47›
          x_v315 (append_i18‹??45, ??44› ??43 xs_v316 ys_v313))
      end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v318 : unit_d1) ⇒
    ⇑(b_v319 : bool_d2) ⇒
      match b_v319 as __v320 in ??49 with
      | true_c2  ⇒ ⇓(__v321 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v323 : unit_d1) ⇒
    ⇑(b_v324 : bool_d2) ⇒
      match b_v324 as __v325 in ??50 with
      | true_c2  ⇒ ⇑(__v326 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v328 : unit_d1) ⇒
    ⇑(b_v329 : bool_d2) ⇒
      match b_v329 as __v330 in ??51 with
      | true_c2  ⇒ ⇑(__v331 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v333 : unit_d1) ⇒
    let ch_v334 ⇐ open stdin in
    let ch_v335 ⇐ (send ch_v334 true_c2‹›) in
    let __v336 ⇐ recv ch_v335 in
    match __v336 as __v337 in ??52 with
    | ⟨s_v338, ch_v339⟩ ⇒
      let ch_v340 ⇐ (send ch_v339 false_c3‹›) in
      let __v341 ⇐ close ch_v340 in return s_v338
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v343 : string_d5) ⇒
    let ch_v344 ⇐ open stdout in
    let ch_v345 ⇐ (send ch_v344 true_c2‹›) in
    let ch_v346 ⇐ (send ch_v345 s_v343) in
    let ch_v347 ⇐ (send ch_v346 false_c3‹›) in close ch_v347

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v349 : string_d5) ⇒
    let ch_v350 ⇐ open stderr in
    let ch_v351 ⇐ (send ch_v350 true_c2‹›) in
    let ch_v352 ⇐ (send ch_v351 s_v349) in
    let ch_v353 ⇐ (send ch_v352 false_c3‹›) in close ch_v353

inductive ref_msg_d7 : U =
| GET_c11 of : ref_msg_d7 | SET_c12 of : ref_msg_d7
| FREE_c13 of : ref_msg_d7

logical ref_t_i28 : U → unit_d1 → proto =
  fn (A_v356 : U) (x_v357 : unit_d1) ⇒
    ⇓(msg_v358 : ref_msg_d7) ⇒
      match msg_v358 as __v359 in ??53 with
      | GET_c11  ⇒ ⇑(__v360 : A_v356) ⇒ (ref_t_i28 A_v356 x_v357)
      | SET_c12  ⇒ ⇓(__v361 : A_v356) ⇒ (ref_t_i28 A_v356 x_v357)
      | FREE_c13  ⇒ end
      end

program ref_handler_i29 :
  ∀ {A_v362 : U} →
    A_v362 → ch⟨(ref_t_i28 A_v362 tt_c1‹›)⟩ → IO unit_d1
=
  fn {A_v365 : U} (m_v366 : A_v365)
     (c0_v367 : ch⟨(ref_t_i28 A_v365 tt_c1‹›)⟩) ⇒
    let __v368 ⇐ recv c0_v367 in
    match __v368 as __v369 in ??61 with
    | ⟨msg_v370, c0_v371⟩ ⇒
      (match msg_v370 as msg0_v372 in
         ch⟨match msg0_v372 as __v374 in ??54 with
              | GET_c11  ⇒
                ⇑(__v375 : A_v365) ⇒ (ref_t_i28 A_v365 tt_c1‹›)
              | SET_c12  ⇒
                ⇓(__v376 : A_v365) ⇒ (ref_t_i28 A_v365 tt_c1‹›)
              | FREE_c13  ⇒ end
              end⟩ ⊸
           IO unit_d1 with
       | GET_c11  ⇒
         ln (c_v377 : ??59) ⇒
           let c_v378 ⇐ (send c_v377 m_v366) in
           (ref_handler_i29 ??60 m_v366 c_v378)
       | SET_c12  ⇒
         ln (c_v379 : ??56) ⇒
           let __v380 ⇐ recv c_v379 in
           match __v380 as __v381 in ??58 with
           | ⟨m_v382, c_v383⟩ ⇒ (ref_handler_i29 ??57 m_v382 c_v383)
           end
       | FREE_c13  ⇒ ln (c_v384 : ??55) ⇒ close c_v384
       end c0_v371)
    end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1899 : bool_d2) (b2_v1900 : bool_d2) ⇒
    match b1_v1899 as __v1901 in bool_d2 with
    | true_c2  ⇒ b2_v1900 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1904 : bool_d2) (b2_v1905 : bool_d2) ⇒
    match b1_v1904 as __v1906 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v1905
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v1908 : bool_d2) ⇒
    match b_v1908 as __v1909 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v1910 : nat_d3) : nat_d3

program lten_i4 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1913 : nat_d3) (y_v1914 : nat_d3) ⇒
    match x_v1913 as __v1915 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v1916 ⇒
      match y_v1914 as __v1917 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1918 ⇒ (lten_i4 x_v1916 y_v1918)
      end
    end

program gten_i5 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1921 : nat_d3) (y_v1922 : nat_d3) ⇒
    match x_v1921 as __v1923 in bool_d2 with
    | O_c4  ⇒
      match y_v1922 as __v1924 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1925 ⇒ false_c3‹›
      end
    | S_c5 x_v1926 ⇒
      match y_v1922 as __v1927 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1928 ⇒ (gten_i5 x_v1926 y_v1928)
      end
    end

program ltn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1931 : nat_d3) (y_v1932 : nat_d3) ⇒
    match x_v1931 as __v1933 in bool_d2 with
    | O_c4  ⇒
      match y_v1932 as __v1934 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1935 ⇒ true_c2‹›
      end
    | S_c5 x_v1936 ⇒
      match y_v1932 as __v1937 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1938 ⇒ (ltn_i6 x_v1936 y_v1938)
      end
    end

program gtn_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1941 : nat_d3) (y_v1942 : nat_d3) ⇒
    match x_v1941 as __v1943 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v1944 ⇒
      match y_v1942 as __v1945 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1946 ⇒ (gtn_i7 x_v1944 y_v1946)
      end
    end

program eqn_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1949 : nat_d3) (y_v1950 : nat_d3) ⇒
    match x_v1949 as __v1951 in bool_d2 with
    | O_c4  ⇒
      match y_v1950 as __v1952 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1953 ⇒ false_c3‹›
      end
    | S_c5 x_v1954 ⇒
      match y_v1950 as __v1955 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1956 ⇒ (eqn_i8 x_v1954 y_v1956)
      end
    end

program pred_i9 : nat_d3 → nat_d3 =
  fn (x_v1958 : nat_d3) ⇒
    match x_v1958 as __v1959 in nat_d3 with
    | O_c4  ⇒ O_c4‹› | S_c5 x_v1960 ⇒ x_v1960
    end

program addn_i10 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1963 : nat_d3) (y_v1964 : nat_d3) ⇒
    match x_v1963 as __v1965 in nat_d3 with
    | O_c4  ⇒ y_v1964
    | S_c5 x_v1966 ⇒ (S_c5‹› (addn_i10 x_v1966 y_v1964))
    end

program subn_i11 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1969 : nat_d3) (y_v1970 : nat_d3) ⇒
    match y_v1970 as __v1971 in nat_d3 with
    | O_c4  ⇒ x_v1969
    | S_c5 y_v1972 ⇒ (subn_i11 (pred_i9 x_v1969) y_v1972)
    end

program muln_i12 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1975 : nat_d3) (y_v1976 : nat_d3) ⇒
    match x_v1975 as __v1977 in nat_d3 with
    | O_c4  ⇒ O_c4‹›
    | S_c5 x_v1978 ⇒ (addn_i10 y_v1976 (muln_i12 x_v1978 y_v1976))
    end

program divn_i13 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1981 : nat_d3) (y_v1982 : nat_d3) ⇒
    match (ltn_i6 x_v1981 y_v1982) as __v1983 in nat_d3 with
    | true_c2  ⇒ O_c4‹›
    | false_c3  ⇒
      (S_c5‹› (divn_i13 (subn_i11 x_v1981 y_v1982) y_v1982))
    end

program modn_i14 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1986 : nat_d3) (y_v1987 : nat_d3) ⇒
    (subn_i11 x_v1986 (muln_i12 (divn_i13 x_v1986 y_v1987) y_v1987))

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v1988 : bool_d2) (b1_v1989 : bool_d2) (b2_v1990 : bool_d2)
    (b3_v1991 : bool_d2) (b4_v1992 : bool_d2) (b5_v1993 : bool_d2)
    (b6_v1994 : bool_d2) (b7_v1995 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v1996 : ascii_d4) (s_v1997 : string_d5) : string_d5

program cats_i15 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2000 : string_d5) (s2_v2001 : string_d5) ⇒
    match s1_v2000 as __v2002 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2001
    | String_c8 c_v2003 s1_v2004 ⇒
      (String_c8‹› c_v2003 (cats_i15 s1_v2004 s2_v2001))
    end

program strlen_i16 : string_d5 → nat_d3 =
  fn (s_v2006 : string_d5) ⇒
    match s_v2006 as __v2007 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2008 s_v2009 ⇒ (S_c5‹› (strlen_i16 s_v2009))
    end

inductive list_d6 ‹s_s2010, t_s2011›
  (A_v2012 : Type‹s_s2010›) : Type‹t_s2011›
=
| nil_c9 of
    ‹s_s2013, t_s2014› (A_v2015 : Type‹s_s2013›)
    : (list_d6‹s_s2013, t_s2014› A_v2015)
| cons_c10 of
    ‹s_s2016, t_s2017› (A_v2018 : Type‹s_s2016›) (hd_v2019 : A_v2018)
    (tl_v2020 : (list_d6‹s_s2016, t_s2017› A_v2018))
    : (list_d6‹s_s2016, t_s2017› A_v2018)

program len_i17 ‹s_s2021, t_s2022› :
  ∀ {A_v2023 : Type‹s_s2021›} →
    (list_d6‹s_s2021, t_s2022› A_v2023) →
      nat_d3 ⊗ (list_d6‹s_s2021, t_s2022› A_v2023)
=
  fn {A_v2026 : Type‹s_s2021›}
     (xs_v2027 : (list_d6‹s_s2021, t_s2022› A_v2026)) ⇒
    match xs_v2027 as __v2028 in
      nat_d3 ⊗ (list_d6‹s_s2021, t_s2022› A_v2026) with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹s_s2021, t_s2022›⟩
    | cons_c10 x_v2030 xs_v2031 ⇒
      match (len_i17‹s_s2021, t_s2022› A_v2026 xs_v2031) as __v2032 in
        nat_d3 ⊗ (list_d6‹s_s2021, t_s2022› A_v2026) with
      | ⟨n_v2034, xs_v2035⟩ ⇒
        ⟨(S_c5‹› n_v2034), (cons_c10‹s_s2021, t_s2022›
                                   x_v2030 xs_v2035)⟩
      end
    end

program append_i18 ‹s_s2036, t_s2037› :
  ∀ {A_v2038 : Type‹s_s2036›} →
    (list_d6‹s_s2036, t_s2037› A_v2038) →
      (list_d6‹s_s2036, t_s2037› A_v2038) ⊸
        (list_d6‹s_s2036, t_s2037› A_v2038)
=
  fn {A_v2041 : Type‹s_s2036›}
     (xs_v2042 : (list_d6‹s_s2036, t_s2037› A_v2041)) ⇒
    ln (ys_v2043 : (list_d6‹s_s2036, t_s2037› A_v2041)) ⇒
      match xs_v2042 as __v2044 in
        (list_d6‹s_s2036, t_s2037› A_v2041) with
      | nil_c9  ⇒ ys_v2043
      | cons_c10 x_v2045 xs_v2046 ⇒
        (cons_c10‹s_s2036, t_s2037›
          x_v2045
          (append_i18‹s_s2036, t_s2037› A_v2041 xs_v2046 ys_v2043))
      end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v2048 : unit_d1) ⇒
    ⇑(b_v2049 : bool_d2) ⇒
      match b_v2049 as __v2050 in proto with
      | true_c2  ⇒ ⇓(__v2051 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v2053 : unit_d1) ⇒
    ⇑(b_v2054 : bool_d2) ⇒
      match b_v2054 as __v2055 in proto with
      | true_c2  ⇒
        ⇑(__v2056 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v2058 : unit_d1) ⇒
    ⇑(b_v2059 : bool_d2) ⇒
      match b_v2059 as __v2060 in proto with
      | true_c2  ⇒
        ⇑(__v2061 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v2063 : unit_d1) ⇒
    let ch_v2064 ⇐ open stdin in
    let ch_v2065 ⇐ (send ch_v2064 true_c2‹›) in
    let __v2066 ⇐ recv ch_v2065 in
    match __v2066 as __v2067 in IO string_d5 with
    | ⟨s_v2068, ch_v2069⟩ ⇒
      let ch_v2070 ⇐ (send ch_v2069 false_c3‹›) in
      let __v2071 ⇐ close ch_v2070 in return s_v2068
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v2073 : string_d5) ⇒
    let ch_v2074 ⇐ open stdout in
    let ch_v2075 ⇐ (send ch_v2074 true_c2‹›) in
    let ch_v2076 ⇐ (send ch_v2075 s_v2073) in
    let ch_v2077 ⇐ (send ch_v2076 false_c3‹›) in close ch_v2077

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v2079 : string_d5) ⇒
    let ch_v2080 ⇐ open stderr in
    let ch_v2081 ⇐ (send ch_v2080 true_c2‹›) in
    let ch_v2082 ⇐ (send ch_v2081 s_v2079) in
    let ch_v2083 ⇐ (send ch_v2082 false_c3‹›) in close ch_v2083

inductive ref_msg_d7 : U =
| GET_c11 of : ref_msg_d7 | SET_c12 of : ref_msg_d7
| FREE_c13 of : ref_msg_d7

logical ref_t_i28 : U → unit_d1 → proto =
  fn (A_v2086 : U) (x_v2087 : unit_d1) ⇒
    ⇓(msg_v2088 : ref_msg_d7) ⇒
      match msg_v2088 as __v2089 in proto with
      | GET_c11  ⇒ ⇑(__v2090 : A_v2086) ⇒ (ref_t_i28 A_v2086 x_v2087)
      | SET_c12  ⇒ ⇓(__v2091 : A_v2086) ⇒ (ref_t_i28 A_v2086 x_v2087)
      | FREE_c13  ⇒ end
      end

program ref_handler_i29 :
  ∀ {A_v2092 : U} →
    A_v2092 → ch⟨(ref_t_i28 A_v2092 tt_c1‹›)⟩ → IO unit_d1
=
  fn {A_v2095 : U} (m_v2096 : A_v2095)
     (c0_v2097 : ch⟨(ref_t_i28 A_v2095 tt_c1‹›)⟩) ⇒
    let __v2098 ⇐ recv c0_v2097 in
    match __v2098 as __v2099 in IO unit_d1 with
    | ⟨msg_v2100, c0_v2101⟩ ⇒
      (match msg_v2100 as msg0_v2102 in
         ch⟨match msg0_v2102 as __v2104 in proto with
              | GET_c11  ⇒
                ⇑(__v2105 : A_v2095) ⇒ (ref_t_i28 A_v2095 tt_c1‹›)
              | SET_c12  ⇒
                ⇓(__v2106 : A_v2095) ⇒ (ref_t_i28 A_v2095 tt_c1‹›)
              | FREE_c13  ⇒ end
              end⟩ ⊸
           IO unit_d1 with
       | GET_c11  ⇒
         ln (c_v2107 : ch⟨⇑(__v2108 : A_v2095) ⇒
                              (ref_t_i28 A_v2095 tt_c1‹›)⟩) ⇒
           let c_v2109 ⇐ (send c_v2107 m_v2096) in
           (ref_handler_i29 A_v2095 m_v2096 c_v2109)
       | SET_c12  ⇒
         ln (c_v2110 : ch⟨⇓(__v2111 : A_v2095) ⇒
                              (ref_t_i28 A_v2095 tt_c1‹›)⟩) ⇒
           let __v2112 ⇐ recv c_v2110 in
           match __v2112 as __v2113 in IO unit_d1 with
           | ⟨m_v2114, c_v2115⟩ ⇒
             (ref_handler_i29 A_v2095 m_v2114 c_v2115)
           end
       | FREE_c13  ⇒ ln (c_v2116 : ch⟨end⟩) ⇒ close c_v2116
       end c0_v2101)
    end

trans1e success--------------------------

data unit_d1 =
| tt_c1 of size(0)

data bool_d2 =
| true_c2 of size(0) | false_c3 of size(0)

def andb_i1 =
  fn b1_v2432 b2_v2433 ⇒
    match b1_v2432 with
    | true_c2  ⇒ b2_v2433 | false_c3  ⇒ false_c3
    end

def orb_i2 =
  fn b1_v2434 b2_v2435 ⇒
    match b1_v2434 with
    | true_c2  ⇒ true_c2 | false_c3  ⇒ b2_v2435
    end

def notb_i3 =
  fn b_v2436 ⇒
    match b_v2436 with
    | true_c2  ⇒ false_c3 | false_c3  ⇒ true_c2
    end

data nat_d3 =
| O_c4 of size(0) | S_c5 of size(1)

def lten_i4 =
  fn x_v2437 y_v2438 ⇒
    match x_v2437 with
    | O_c4  ⇒ true_c2
    | S_c5 x_v2439 ⇒
      match y_v2438 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2440 ⇒ ((lten_i4 x_v2439) y_v2440)
      end
    end

def gten_i5 =
  fn x_v2441 y_v2442 ⇒
    match x_v2441 with
    | O_c4  ⇒
      match y_v2442 with
      | O_c4  ⇒ true_c2 | S_c5 __v2443 ⇒ false_c3
      end
    | S_c5 x_v2444 ⇒
      match y_v2442 with
      | O_c4  ⇒ true_c2 | S_c5 y_v2445 ⇒ ((gten_i5 x_v2444) y_v2445)
      end
    end

def ltn_i6 =
  fn x_v2446 y_v2447 ⇒
    match x_v2446 with
    | O_c4  ⇒
      match y_v2447 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2448 ⇒ true_c2
      end
    | S_c5 x_v2449 ⇒
      match y_v2447 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2450 ⇒ ((ltn_i6 x_v2449) y_v2450)
      end
    end

def gtn_i7 =
  fn x_v2451 y_v2452 ⇒
    match x_v2451 with
    | O_c4  ⇒ false_c3
    | S_c5 x_v2453 ⇒
      match y_v2452 with
      | O_c4  ⇒ true_c2 | S_c5 y_v2454 ⇒ ((gtn_i7 x_v2453) y_v2454)
      end
    end

def eqn_i8 =
  fn x_v2455 y_v2456 ⇒
    match x_v2455 with
    | O_c4  ⇒
      match y_v2456 with
      | O_c4  ⇒ true_c2 | S_c5 __v2457 ⇒ false_c3
      end
    | S_c5 x_v2458 ⇒
      match y_v2456 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2459 ⇒ ((eqn_i8 x_v2458) y_v2459)
      end
    end

def pred_i9 =
  fn x_v2460 ⇒
    match x_v2460 with
    | O_c4  ⇒ O_c4 | S_c5 x_v2461 ⇒ x_v2461
    end

def addn_i10 =
  fn x_v2462 y_v2463 ⇒
    match x_v2462 with
    | O_c4  ⇒ y_v2463
    | S_c5 x_v2464 ⇒ (S_c5 ((addn_i10 x_v2464) y_v2463))
    end

def subn_i11 =
  fn x_v2465 y_v2466 ⇒
    match y_v2466 with
    | O_c4  ⇒ x_v2465
    | S_c5 y_v2467 ⇒ ((subn_i11 (pred_i9 x_v2465)) y_v2467)
    end

def muln_i12 =
  fn x_v2468 y_v2469 ⇒
    match x_v2468 with
    | O_c4  ⇒ O_c4
    | S_c5 x_v2470 ⇒ ((addn_i10 y_v2469) ((muln_i12 x_v2470) y_v2469))
    end

def divn_i13 =
  fn x_v2471 y_v2472 ⇒
    match ((ltn_i6 x_v2471) y_v2472) with
    | true_c2  ⇒ O_c4
    | false_c3  ⇒ (S_c5 ((divn_i13 ((subn_i11 x_v2471) y_v2472)) y_v2472))
    end

def modn_i14 =
  fn x_v2473 y_v2474 ⇒
    ((subn_i11 x_v2473) ((muln_i12 ((divn_i13 x_v2473) y_v2474)) y_v2474))

data ascii_d4 =
| Ascii_c6 of size(8)

data string_d5 =
| EmptyString_c7 of size(0) | String_c8 of size(2)

def cats_i15 =
  fn s1_v2475 s2_v2476 ⇒
    match s1_v2475 with
    | EmptyString_c7  ⇒ s2_v2476
    | String_c8 c_v2477 s1_v2478 ⇒
      (String_c8 c_v2477 ((cats_i15 s1_v2478) s2_v2476))
    end

def strlen_i16 =
  fn s_v2479 ⇒
    match s_v2479 with
    | EmptyString_c7  ⇒ O_c4
    | String_c8 __v2480 s_v2481 ⇒ (S_c5 (strlen_i16 s_v2481))
    end

data listUU_d11 =
| nilUU_c20 of size(0) | consUU_c21 of size(2)

data listUL_d10 =
| nilUL_c18 of size(0) | consUL_c19 of size(2)

data listLU_d9 =
| nilLU_c16 of size(0)

data listLL_d8 =
| nilLL_c14 of size(0) | consLL_c15 of size(2)

def lenUU_i33 =
  fn A_v2482 xs_v2483 ⇒
    match xs_v2483 with
    | nilUU_c20  ⇒ (O_c4, nilUU_c20)
    | consUU_c21 x_v2484 xs_v2485 ⇒
      match ((lenUU_i33 NULL) xs_v2485) with
      | (n_v2486, xs_v2487) ⇒
        ((S_c5 n_v2486), (consUU_c21 x_v2484 xs_v2487))
      end
    end

def lenUL_i32 =
  fn A_v2488 xs_v2489 ⇒
    match xs_v2489 with
    | nilUL_c18  ⇒ (O_c4, nilUL_c18)
    | consUL_c19 x_v2490 xs_v2491 ⇒
      match ((lenUL_i32 NULL) xs_v2491) with
      | (n_v2492, xs_v2493) ⇒
        ((S_c5 n_v2492), (consUL_c19 x_v2490 xs_v2493))
      end
    end

def lenLL_i30 =
  fn A_v2494 xs_v2495 ⇒
    match xs_v2495 with
    | nilLL_c14  ⇒ (O_c4, nilLL_c14)
    | consLL_c15 x_v2496 xs_v2497 ⇒
      match ((lenLL_i30 NULL) xs_v2497) with
      | (n_v2498, xs_v2499) ⇒
        ((S_c5 n_v2498), (consLL_c15 x_v2496 xs_v2499))
      end
    end

def appendUU_i37 =
  fn A_v2500 xs_v2501 ⇒
    ln ys_v2502 ⇒
      match xs_v2501 with
      | nilUU_c20  ⇒ ys_v2502
      | consUU_c21 x_v2503 xs_v2504 ⇒
        (consUU_c21 x_v2503 (((appendUU_i37 NULL) xs_v2504) ys_v2502))
      end

def appendUL_i36 =
  fn A_v2505 xs_v2506 ⇒
    ln ys_v2507 ⇒
      match xs_v2506 with
      | nilUL_c18  ⇒ ys_v2507
      | consUL_c19 x_v2508 xs_v2509 ⇒
        (consUL_c19 x_v2508 (((appendUL_i36 NULL) xs_v2509) ys_v2507))
      end

def appendLL_i34 =
  fn A_v2510 xs_v2511 ⇒
    ln ys_v2512 ⇒
      match xs_v2511 with
      | nilLL_c14  ⇒ ys_v2512
      | consLL_c15 x_v2513 xs_v2514 ⇒
        (consLL_c15 x_v2513 (((appendLL_i34 NULL) xs_v2514) ys_v2512))
      end

def readline_i25 =
  fn __v2515 ⇒
    let ch_v2516 ⇐ open stdin in
    let ch_v2517 ⇐ (send ch_v2516 true_c2) in
    let __v2518 ⇐ recv ch_v2517 in
    match __v2518 with
    | (s_v2519, ch_v2520) ⇒
      let ch_v2521 ⇐ (send ch_v2520 false_c3) in
      let __v2522 ⇐ close⇑ ch_v2521 in return s_v2519
    end

def print_i26 =
  fn s_v2523 ⇒
    let ch_v2524 ⇐ open stdout in
    let ch_v2525 ⇐ (send ch_v2524 true_c2) in
    let ch_v2526 ⇐ (send ch_v2525 s_v2523) in
    let ch_v2527 ⇐ (send ch_v2526 false_c3) in close⇑ ch_v2527

def prerr_i27 =
  fn s_v2528 ⇒
    let ch_v2529 ⇐ open stderr in
    let ch_v2530 ⇐ (send ch_v2529 true_c2) in
    let ch_v2531 ⇐ (send ch_v2530 s_v2528) in
    let ch_v2532 ⇐ (send ch_v2531 false_c3) in close⇑ ch_v2532

data ref_msg_d7 =
| GET_c11 of size(0) | SET_c12 of size(0) | FREE_c13 of size(0)

def ref_handler_i29 =
  fn A_v2533 m_v2534 c0_v2535 ⇒
    let __v2536 ⇐ recv c0_v2535 in
    match __v2536 with
    | (msg_v2537, c0_v2538) ⇒
      (match msg_v2537 with
       | GET_c11  ⇒
         ln c_v2539 ⇒
           let c_v2540 ⇐ (send c_v2539 m_v2534) in
           (((ref_handler_i29 NULL) m_v2534) c_v2540)
       | SET_c12  ⇒
         ln c_v2541 ⇒
           let __v2542 ⇐ recv c_v2541 in
           match __v2542 with
           | (m_v2543, c_v2544) ⇒
             (((ref_handler_i29 NULL) m_v2543) c_v2544)
           end
       | FREE_c13  ⇒ ln c_v2545 ⇒ close⇑ c_v2545
       end c0_v2538)
    end

trans12 success--------------------------

fun andb_i1(b1_v2696, b2_v2697) =
  match b1_v2696 with
  | true_c2  ⇒ b2_v2697 | false_c3  ⇒ false_c3
  end

val andbclo_i38 = fn b1_v2698 b2_v2699 ⇒ andb_i1(b1_v2698, b2_v2699)

fun orb_i2(b1_v2700, b2_v2701) =
  match b1_v2700 with
  | true_c2  ⇒ true_c2 | false_c3  ⇒ b2_v2701
  end

val orbclo_i39 = fn b1_v2702 b2_v2703 ⇒ orb_i2(b1_v2702, b2_v2703)

fun notb_i3(b_v2704) =
  match b_v2704 with
  | true_c2  ⇒ false_c3 | false_c3  ⇒ true_c2
  end

val notbclo_i40 = fn b_v2705 ⇒ notb_i3(b_v2705)

fun lten_i4(x_v2706, y_v2707) =
  match x_v2706 with
  | O_c4  ⇒ true_c2
  | S_c5 x_v2708 ⇒
    match y_v2707 with
    | O_c4  ⇒ false_c3 | S_c5 y_v2709 ⇒ lten_i4(x_v2708, y_v2709)
    end
  end

val ltenclo_i41 = fn x_v2710 y_v2711 ⇒ lten_i4(x_v2710, y_v2711)

fun gten_i5(x_v2712, y_v2713) =
  match x_v2712 with
  | O_c4  ⇒
    match y_v2713 with
    | O_c4  ⇒ true_c2 | S_c5 __v2714 ⇒ false_c3
    end
  | S_c5 x_v2715 ⇒
    match y_v2713 with
    | O_c4  ⇒ true_c2 | S_c5 y_v2716 ⇒ gten_i5(x_v2715, y_v2716)
    end
  end

val gtenclo_i42 = fn x_v2717 y_v2718 ⇒ gten_i5(x_v2717, y_v2718)

fun ltn_i6(x_v2719, y_v2720) =
  match x_v2719 with
  | O_c4  ⇒
    match y_v2720 with
    | O_c4  ⇒ false_c3 | S_c5 y_v2721 ⇒ true_c2
    end
  | S_c5 x_v2722 ⇒
    match y_v2720 with
    | O_c4  ⇒ false_c3 | S_c5 y_v2723 ⇒ ltn_i6(x_v2722, y_v2723)
    end
  end

val ltnclo_i43 = fn x_v2724 y_v2725 ⇒ ltn_i6(x_v2724, y_v2725)

fun gtn_i7(x_v2726, y_v2727) =
  match x_v2726 with
  | O_c4  ⇒ false_c3
  | S_c5 x_v2728 ⇒
    match y_v2727 with
    | O_c4  ⇒ true_c2 | S_c5 y_v2729 ⇒ gtn_i7(x_v2728, y_v2729)
    end
  end

val gtnclo_i44 = fn x_v2730 y_v2731 ⇒ gtn_i7(x_v2730, y_v2731)

fun eqn_i8(x_v2732, y_v2733) =
  match x_v2732 with
  | O_c4  ⇒
    match y_v2733 with
    | O_c4  ⇒ true_c2 | S_c5 __v2734 ⇒ false_c3
    end
  | S_c5 x_v2735 ⇒
    match y_v2733 with
    | O_c4  ⇒ false_c3 | S_c5 y_v2736 ⇒ eqn_i8(x_v2735, y_v2736)
    end
  end

val eqnclo_i45 = fn x_v2737 y_v2738 ⇒ eqn_i8(x_v2737, y_v2738)

fun pred_i9(x_v2739) =
  match x_v2739 with
  | O_c4  ⇒ O_c4 | S_c5 x_v2740 ⇒ x_v2740
  end

val predclo_i46 = fn x_v2741 ⇒ pred_i9(x_v2741)

fun addn_i10(x_v2742, y_v2743) =
  match x_v2742 with
  | O_c4  ⇒ y_v2743 | S_c5 x_v2744 ⇒ (S_c5 addn_i10(x_v2744, y_v2743))
  end

val addnclo_i47 = fn x_v2745 y_v2746 ⇒ addn_i10(x_v2745, y_v2746)

fun subn_i11(x_v2747, y_v2748) =
  match y_v2748 with
  | O_c4  ⇒ x_v2747 | S_c5 y_v2749 ⇒ subn_i11(pred_i9(x_v2747), y_v2749)
  end

val subnclo_i48 = fn x_v2750 y_v2751 ⇒ subn_i11(x_v2750, y_v2751)

fun muln_i12(x_v2752, y_v2753) =
  match x_v2752 with
  | O_c4  ⇒ O_c4
  | S_c5 x_v2754 ⇒ addn_i10(y_v2753, muln_i12(x_v2754, y_v2753))
  end

val mulnclo_i49 = fn x_v2755 y_v2756 ⇒ muln_i12(x_v2755, y_v2756)

fun divn_i13(x_v2757, y_v2758) =
  match ltn_i6(x_v2757, y_v2758) with
  | true_c2  ⇒ O_c4
  | false_c3  ⇒ (S_c5 divn_i13(subn_i11(x_v2757, y_v2758), y_v2758))
  end

val divnclo_i50 = fn x_v2759 y_v2760 ⇒ divn_i13(x_v2759, y_v2760)

fun modn_i14(x_v2761, y_v2762) =
  subn_i11(x_v2761, muln_i12(divn_i13(x_v2761, y_v2762), y_v2762))

val modnclo_i51 = fn x_v2763 y_v2764 ⇒ modn_i14(x_v2763, y_v2764)

fun cats_i15(s1_v2765, s2_v2766) =
  match s1_v2765 with
  | EmptyString_c7  ⇒ s2_v2766
  | String_c8 c_v2767 s1_v2768 ⇒
    (String_c8 c_v2767 cats_i15(s1_v2768, s2_v2766))
  end

val catsclo_i52 = fn s1_v2769 s2_v2770 ⇒ cats_i15(s1_v2769, s2_v2770)

fun strlen_i16(s_v2771) =
  match s_v2771 with
  | EmptyString_c7  ⇒ O_c4
  | String_c8 __v2772 s_v2773 ⇒ (S_c5 strlen_i16(s_v2773))
  end

val strlenclo_i53 = fn s_v2774 ⇒ strlen_i16(s_v2774)

fun lenUU_i33(A_v2775, xs_v2776) =
  match xs_v2776 with
  | nilUU_c20  ⇒ (O_c4, nilUU_c20)
  | consUU_c21 x_v2777 xs_v2778 ⇒
    match lenUU_i33(NULL, xs_v2778) with
    | (n_v2779, xs_v2780) ⇒ ((S_c5 n_v2779), (consUU_c21 x_v2777 xs_v2780))
    end
  end

val lenUUclo_i54 = fn A_v2781 xs_v2782 ⇒ lenUU_i33(A_v2781, xs_v2782)

fun lenUL_i32(A_v2783, xs_v2784) =
  match xs_v2784 with
  | nilUL_c18  ⇒ (O_c4, nilUL_c18)
  | consUL_c19 x_v2785 xs_v2786 ⇒
    match lenUL_i32(NULL, xs_v2786) with
    | (n_v2787, xs_v2788) ⇒ ((S_c5 n_v2787), (consUL_c19 x_v2785 xs_v2788))
    end
  end

val lenULclo_i55 = fn A_v2789 xs_v2790 ⇒ lenUL_i32(A_v2789, xs_v2790)

fun lenLL_i30(A_v2791, xs_v2792) =
  match xs_v2792 with
  | nilLL_c14  ⇒ (O_c4, nilLL_c14)
  | consLL_c15 x_v2793 xs_v2794 ⇒
    match lenLL_i30(NULL, xs_v2794) with
    | (n_v2795, xs_v2796) ⇒ ((S_c5 n_v2795), (consLL_c15 x_v2793 xs_v2796))
    end
  end

val lenLLclo_i56 = fn A_v2797 xs_v2798 ⇒ lenLL_i30(A_v2797, xs_v2798)

fun appendUU_i37(A_v2799, xs_v2800, ys_v2801) =
  match xs_v2800 with
  | nilUU_c20  ⇒ ys_v2801
  | consUU_c21 x_v2802 xs_v2803 ⇒
    (consUU_c21 x_v2802 appendUU_i37(NULL, xs_v2803, ys_v2801))
  end

val appendUUclo_i57 =
  fn A_v2804 xs_v2805 ⇒
    ln ys_v2806 ⇒ appendUU_i37(A_v2804, xs_v2805, ys_v2806)

fun appendUL_i36(A_v2807, xs_v2808, ys_v2809) =
  match xs_v2808 with
  | nilUL_c18  ⇒ ys_v2809
  | consUL_c19 x_v2810 xs_v2811 ⇒
    (consUL_c19 x_v2810 appendUL_i36(NULL, xs_v2811, ys_v2809))
  end

val appendULclo_i58 =
  fn A_v2812 xs_v2813 ⇒
    ln ys_v2814 ⇒ appendUL_i36(A_v2812, xs_v2813, ys_v2814)

fun appendLL_i34(A_v2815, xs_v2816, ys_v2817) =
  match xs_v2816 with
  | nilLL_c14  ⇒ ys_v2817
  | consLL_c15 x_v2818 xs_v2819 ⇒
    (consLL_c15 x_v2818 appendLL_i34(NULL, xs_v2819, ys_v2817))
  end

val appendLLclo_i59 =
  fn A_v2820 xs_v2821 ⇒
    ln ys_v2822 ⇒ appendLL_i34(A_v2820, xs_v2821, ys_v2822)

fun readline_i25(__v2823) =
  ln __v2824 ⇒
    let ch_v2825 = (ln __v2826 ⇒ open stdin) NULL in
    let ch_v2827 =
      ((fn x_v2828 ⇒ ln __v2829 ⇒ send(ch_v2825, x_v2828)) true_c2) NULL
    in
    let __v2830 = (ln __v2831 ⇒ recv(ch_v2827)) NULL in
    (match __v2830 with
     | (s_v2832, ch_v2833) ⇒
       ln __v2834 ⇒
         let ch_v2835 =
           ((fn x_v2836 ⇒ ln __v2837 ⇒ send(ch_v2833, x_v2836)) false_c3)
             NULL
         in
         let __v2838 = (ln __v2839 ⇒ let __v2840 = ch_v2835 in tt_c1) NULL
         in (ln __v2841 ⇒ s_v2832) NULL
     end) NULL

val readlineclo_i60 = fn __v2842 ⇒ readline_i25(__v2842)

fun print_i26(s_v2843) =
  ln __v2844 ⇒
    let ch_v2845 = (ln __v2846 ⇒ open stdout) NULL in
    let ch_v2847 =
      ((fn x_v2848 ⇒ ln __v2849 ⇒ send(ch_v2845, x_v2848)) true_c2) NULL
    in
    let ch_v2850 =
      ((fn x_v2851 ⇒ ln __v2852 ⇒ send(ch_v2847, x_v2851)) s_v2843) NULL
    in
    let ch_v2853 =
      ((fn x_v2854 ⇒ ln __v2855 ⇒ send(ch_v2850, x_v2854)) false_c3) NULL
    in (ln __v2856 ⇒ let __v2857 = ch_v2853 in tt_c1) NULL

val printclo_i61 = fn s_v2858 ⇒ print_i26(s_v2858)

fun prerr_i27(s_v2859) =
  ln __v2860 ⇒
    let ch_v2861 = (ln __v2862 ⇒ open stderr) NULL in
    let ch_v2863 =
      ((fn x_v2864 ⇒ ln __v2865 ⇒ send(ch_v2861, x_v2864)) true_c2) NULL
    in
    let ch_v2866 =
      ((fn x_v2867 ⇒ ln __v2868 ⇒ send(ch_v2863, x_v2867)) s_v2859) NULL
    in
    let ch_v2869 =
      ((fn x_v2870 ⇒ ln __v2871 ⇒ send(ch_v2866, x_v2870)) false_c3) NULL
    in (ln __v2872 ⇒ let __v2873 = ch_v2869 in tt_c1) NULL

val prerrclo_i62 = fn s_v2874 ⇒ prerr_i27(s_v2874)

fun ref_handler_i29(A_v2875, m_v2876, c0_v2877) =
  ln __v2878 ⇒
    let __v2879 = (ln __v2880 ⇒ recv(c0_v2877)) NULL in
    (match __v2879 with
     | (msg_v2881, c0_v2882) ⇒
       (match msg_v2881 with
        | GET_c11  ⇒
          ln c_v2883 __v2884 ⇒
            let c_v2885 =
              ((fn x_v2886 ⇒ ln __v2887 ⇒ send(c_v2883, x_v2886)) m_v2876)
                NULL
            in (ref_handler_i29(NULL, m_v2876, c_v2885)) NULL
        | SET_c12  ⇒
          ln c_v2888 __v2889 ⇒
            let __v2890 = (ln __v2891 ⇒ recv(c_v2888)) NULL in
            (match __v2890 with
             | (m_v2892, c_v2893) ⇒ ref_handler_i29(NULL, m_v2892, c_v2893)
             end) NULL
        | FREE_c13  ⇒ ln c_v2894 __v2895 ⇒ let __v2896 = c_v2894 in tt_c1
        end) c0_v2882
     end) NULL

val ref_handlerclo_i63 =
  fn A_v2897 m_v2898 c0_v2899 ⇒ ref_handler_i29(A_v2897, m_v2898, c0_v2899)

trans23 success--------------------------

fun andb_i1(b1_v3121, b2_v3122) =
  match b1_v3121 with
  | true_c2  ⇒ b2_v3122 | false_c3  ⇒ false_c3
  end

val andbclo_i38 = fn b1_v3123 b2_v3124 ⇒ andb_i1(b1_v3123, b2_v3124)

fun orb_i2(b1_v3125, b2_v3126) =
  match b1_v3125 with
  | true_c2  ⇒ true_c2 | false_c3  ⇒ b2_v3126
  end

val orbclo_i39 = fn b1_v3127 b2_v3128 ⇒ orb_i2(b1_v3127, b2_v3128)

fun notb_i3(b_v3129) =
  match b_v3129 with
  | true_c2  ⇒ false_c3 | false_c3  ⇒ true_c2
  end

val notbclo_i40 = fn b_v3130 ⇒ notb_i3(b_v3130)

fun lten_i4(x_v3131, y_v3132) =
  match x_v3131 with
  | O_c4  ⇒ true_c2
  | S_c5 x_v3133 ⇒
    match y_v3132 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3134 ⇒ lten_i4(x_v3133, y_v3134)
    end
  end

val ltenclo_i41 = fn x_v3135 y_v3136 ⇒ lten_i4(x_v3135, y_v3136)

fun gten_i5(x_v3137, y_v3138) =
  match x_v3137 with
  | O_c4  ⇒
    match y_v3138 with
    | O_c4  ⇒ true_c2 | S_c5 __v3139 ⇒ false_c3
    end
  | S_c5 x_v3140 ⇒
    match y_v3138 with
    | O_c4  ⇒ true_c2 | S_c5 y_v3141 ⇒ gten_i5(x_v3140, y_v3141)
    end
  end

val gtenclo_i42 = fn x_v3142 y_v3143 ⇒ gten_i5(x_v3142, y_v3143)

fun ltn_i6(x_v3144, y_v3145) =
  match x_v3144 with
  | O_c4  ⇒
    match y_v3145 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3146 ⇒ true_c2
    end
  | S_c5 x_v3147 ⇒
    match y_v3145 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3148 ⇒ ltn_i6(x_v3147, y_v3148)
    end
  end

val ltnclo_i43 = fn x_v3149 y_v3150 ⇒ ltn_i6(x_v3149, y_v3150)

fun gtn_i7(x_v3151, y_v3152) =
  match x_v3151 with
  | O_c4  ⇒ false_c3
  | S_c5 x_v3153 ⇒
    match y_v3152 with
    | O_c4  ⇒ true_c2 | S_c5 y_v3154 ⇒ gtn_i7(x_v3153, y_v3154)
    end
  end

val gtnclo_i44 = fn x_v3155 y_v3156 ⇒ gtn_i7(x_v3155, y_v3156)

fun eqn_i8(x_v3157, y_v3158) =
  match x_v3157 with
  | O_c4  ⇒
    match y_v3158 with
    | O_c4  ⇒ true_c2 | S_c5 __v3159 ⇒ false_c3
    end
  | S_c5 x_v3160 ⇒
    match y_v3158 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3161 ⇒ eqn_i8(x_v3160, y_v3161)
    end
  end

val eqnclo_i45 = fn x_v3162 y_v3163 ⇒ eqn_i8(x_v3162, y_v3163)

fun pred_i9(x_v3164) =
  match x_v3164 with
  | O_c4  ⇒ O_c4 | S_c5 x_v3165 ⇒ x_v3165
  end

val predclo_i46 = fn x_v3166 ⇒ pred_i9(x_v3166)

fun addn_i10(x_v3167, y_v3168) =
  match x_v3167 with
  | O_c4  ⇒ y_v3168 | S_c5 x_v3169 ⇒ (S_c5 addn_i10(x_v3169, y_v3168))
  end

val addnclo_i47 = fn x_v3170 y_v3171 ⇒ addn_i10(x_v3170, y_v3171)

fun subn_i11(x_v3172, y_v3173) =
  match y_v3173 with
  | O_c4  ⇒ x_v3172 | S_c5 y_v3174 ⇒ subn_i11(pred_i9(x_v3172), y_v3174)
  end

val subnclo_i48 = fn x_v3175 y_v3176 ⇒ subn_i11(x_v3175, y_v3176)

fun muln_i12(x_v3177, y_v3178) =
  match x_v3177 with
  | O_c4  ⇒ O_c4
  | S_c5 x_v3179 ⇒ addn_i10(y_v3178, muln_i12(x_v3179, y_v3178))
  end

val mulnclo_i49 = fn x_v3180 y_v3181 ⇒ muln_i12(x_v3180, y_v3181)

fun divn_i13(x_v3182, y_v3183) =
  match ltn_i6(x_v3182, y_v3183) with
  | true_c2  ⇒ O_c4
  | false_c3  ⇒ (S_c5 divn_i13(subn_i11(x_v3182, y_v3183), y_v3183))
  end

val divnclo_i50 = fn x_v3184 y_v3185 ⇒ divn_i13(x_v3184, y_v3185)

fun modn_i14(x_v3186, y_v3187) =
  subn_i11(x_v3186, muln_i12(divn_i13(x_v3186, y_v3187), y_v3187))

val modnclo_i51 = fn x_v3188 y_v3189 ⇒ modn_i14(x_v3188, y_v3189)

fun cats_i15(s1_v3190, s2_v3191) =
  match s1_v3190 with
  | EmptyString_c7  ⇒ s2_v3191
  | String_c8 c_v3192 s1_v3193 ⇒
    (String_c8 c_v3192 cats_i15(s1_v3193, s2_v3191))
  end

val catsclo_i52 = fn s1_v3194 s2_v3195 ⇒ cats_i15(s1_v3194, s2_v3195)

fun strlen_i16(s_v3196) =
  match s_v3196 with
  | EmptyString_c7  ⇒ O_c4
  | String_c8 __v3197 s_v3198 ⇒ (S_c5 strlen_i16(s_v3198))
  end

val strlenclo_i53 = fn s_v3199 ⇒ strlen_i16(s_v3199)

fun lenUU_i33(A_v3200, xs_v3201) =
  match xs_v3201 with
  | nilUU_c20  ⇒ (O_c4, nilUU_c20)
  | consUU_c21 x_v3202 xs_v3203 ⇒
    match lenUU_i33(NULL, xs_v3203) with
    | (n_v3204, xs_v3205) ⇒ ((S_c5 n_v3204), (consUU_c21 x_v3202 xs_v3205))
    end
  end

val lenUUclo_i54 = fn A_v3206 xs_v3207 ⇒ lenUU_i33(A_v3206, xs_v3207)

fun lenUL_i32(A_v3208, xs_v3209) =
  match xs_v3209 with
  | nilUL_c18  ⇒ (O_c4, nilUL_c18)
  | consUL_c19 x_v3210 xs_v3211 ⇒
    match lenUL_i32(NULL, xs_v3211) with
    | (n_v3212, xs_v3213) ⇒ ((S_c5 n_v3212), (consUL_c19 x_v3210 xs_v3213))
    end
  end

val lenULclo_i55 = fn A_v3214 xs_v3215 ⇒ lenUL_i32(A_v3214, xs_v3215)

fun lenLL_i30(A_v3216, xs_v3217) =
  match xs_v3217 with
  | nilLL_c14  ⇒ (O_c4, nilLL_c14)
  | consLL_c15 x_v3218 xs_v3219 ⇒
    match lenLL_i30(NULL, xs_v3219) with
    | (n_v3220, xs_v3221) ⇒ ((S_c5 n_v3220), (consLL_c15 x_v3218 xs_v3221))
    end
  end

val lenLLclo_i56 = fn A_v3222 xs_v3223 ⇒ lenLL_i30(A_v3222, xs_v3223)

fun appendUU_i37(A_v3224, xs_v3225, ys_v3226) =
  match xs_v3225 with
  | nilUU_c20  ⇒ ys_v3226
  | consUU_c21 x_v3227 xs_v3228 ⇒
    (consUU_c21 x_v3227 appendUU_i37(NULL, xs_v3228, ys_v3226))
  end

val appendUUclo_i57 =
  fn A_v3229 xs_v3230 ⇒
    ln ys_v3231 ⇒ appendUU_i37(A_v3229, xs_v3230, ys_v3231)

fun appendUL_i36(A_v3232, xs_v3233, ys_v3234) =
  match xs_v3233 with
  | nilUL_c18  ⇒ ys_v3234
  | consUL_c19 x_v3235 xs_v3236 ⇒
    (consUL_c19 x_v3235 appendUL_i36(NULL, xs_v3236, ys_v3234))
  end

val appendULclo_i58 =
  fn A_v3237 xs_v3238 ⇒
    ln ys_v3239 ⇒ appendUL_i36(A_v3237, xs_v3238, ys_v3239)

fun appendLL_i34(A_v3240, xs_v3241, ys_v3242) =
  match xs_v3241 with
  | nilLL_c14  ⇒ ys_v3242
  | consLL_c15 x_v3243 xs_v3244 ⇒
    (consLL_c15 x_v3243 appendLL_i34(NULL, xs_v3244, ys_v3242))
  end

val appendLLclo_i59 =
  fn A_v3245 xs_v3246 ⇒
    ln ys_v3247 ⇒ appendLL_i34(A_v3245, xs_v3246, ys_v3247)

fun readline_i25(__v3248) =
  ln __v3249 ⇒
    let ch_v3250 = open stdin in
    let ch_v3251 = send(ch_v3250, true_c2) in
    let __v3252 = recv(ch_v3251) in
    (match __v3252 with
     | (s_v3253, ch_v3254) ⇒
       ln __v3255 ⇒
         let ch_v3256 = send(ch_v3254, false_c3) in
         let __v3257 = let __v3258 = ch_v3256 in tt_c1 in s_v3253
     end) NULL

val readlineclo_i60 = fn __v3259 ⇒ readline_i25(__v3259)

fun print_i26(s_v3260) =
  ln __v3261 ⇒
    let ch_v3262 = open stdout in
    let ch_v3263 = send(ch_v3262, true_c2) in
    let ch_v3264 = send(ch_v3263, s_v3260) in
    let ch_v3265 = send(ch_v3264, false_c3) in
    let __v3266 = ch_v3265 in tt_c1

val printclo_i61 = fn s_v3267 ⇒ print_i26(s_v3267)

fun prerr_i27(s_v3268) =
  ln __v3269 ⇒
    let ch_v3270 = open stderr in
    let ch_v3271 = send(ch_v3270, true_c2) in
    let ch_v3272 = send(ch_v3271, s_v3268) in
    let ch_v3273 = send(ch_v3272, false_c3) in
    let __v3274 = ch_v3273 in tt_c1

val prerrclo_i62 = fn s_v3275 ⇒ prerr_i27(s_v3275)

fun ref_handler_i29(A_v3276, m_v3277, c0_v3278) =
  ln __v3279 ⇒
    let __v3280 = recv(c0_v3278) in
    (match __v3280 with
     | (msg_v3281, c0_v3282) ⇒
       (match msg_v3281 with
        | GET_c11  ⇒
          ln c_v3283 __v3284 ⇒
            let c_v3285 = send(c_v3283, m_v3277) in
            (ref_handler_i29(NULL, m_v3277, c_v3285)) NULL
        | SET_c12  ⇒
          ln c_v3286 __v3287 ⇒
            let __v3288 = recv(c_v3286) in
            (match __v3288 with
             | (m_v3289, c_v3290) ⇒ ref_handler_i29(NULL, m_v3289, c_v3290)
             end) NULL
        | FREE_c13  ⇒ ln c_v3291 __v3292 ⇒ let __v3293 = c_v3291 in tt_c1
        end) c0_v3282
     end) NULL

val ref_handlerclo_i63 =
  fn A_v3294 m_v3295 c0_v3296 ⇒ ref_handler_i29(A_v3294, m_v3295, c0_v3296)

trans3e success--------------------------

trans34 success--------------------------

