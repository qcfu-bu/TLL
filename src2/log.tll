parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v216 : bool_d2) (b2_v217 : bool_d2) ⇒
    match b1_v216 as __v218 in ??1 with
    | true_c2  ⇒ b2_v217 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v221 : bool_d2) (b2_v222 : bool_d2) ⇒
    match b1_v221 as __v223 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v222
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v225 : bool_d2) ⇒
    match b_v225 as __v226 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v227 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v230 : nat_d3) (y_v231 : nat_d3) ⇒
    match x_v230 as __v232 in ??4 with
    | O_c4  ⇒ y_v231 | S_c5 x_v233 ⇒ (S_c5‹› (addn_i4 x_v233 y_v231))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v236 : nat_d3) (y_v237 : nat_d3) ⇒
    match x_v236 as __v238 in ??5 with
    | O_c4  ⇒ y_v237
    | S_c5 x_v239 ⇒ (addn_i4 y_v237 (muln_i5 x_v239 y_v237))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v242 : nat_d3) (y_v243 : nat_d3) ⇒
    match x_v242 as __v244 in ??6 with
    | O_c4  ⇒
      match y_v243 as __v245 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v246 ⇒ false_c3‹›
      end
    | S_c5 x_v247 ⇒
      match y_v243 as __v248 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v249 ⇒ (eqn_i6 x_v247 y_v249)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v252 : nat_d3) (y_v253 : nat_d3) ⇒
    match x_v252 as __v254 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v255 ⇒
      match y_v253 as __v256 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v257 ⇒ (lten_i7 x_v255 y_v257)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v260 : nat_d3) (y_v261 : nat_d3) ⇒
    match x_v260 as __v262 in ??11 with
    | O_c4  ⇒
      match y_v261 as __v263 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v264 ⇒ false_c3‹›
      end
    | S_c5 x_v265 ⇒
      match y_v261 as __v266 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v267 ⇒ (gten_i8 x_v265 y_v267)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v270 : nat_d3) (y_v271 : nat_d3) ⇒
    match x_v270 as __v272 in ??14 with
    | O_c4  ⇒
      match y_v271 as __v273 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v274 ⇒ true_c2‹›
      end
    | S_c5 x_v275 ⇒
      match y_v271 as __v276 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v277 ⇒ (ltn_i9 x_v275 y_v277)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v280 : nat_d3) (y_v281 : nat_d3) ⇒
    match x_v280 as __v282 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v283 ⇒
      match y_v281 as __v284 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v285 ⇒ (gtn_i10 x_v283 y_v285)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v286 : bool_d2) (b1_v287 : bool_d2) (b2_v288 : bool_d2)
    (b3_v289 : bool_d2) (b4_v290 : bool_d2) (b5_v291 : bool_d2)
    (b6_v292 : bool_d2) (b7_v293 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v294 : ascii_d4) (s_v295 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v298 : string_d5) (s2_v299 : string_d5) ⇒
    match s1_v298 as __v300 in ??19 with
    | EmptyString_c7  ⇒ s2_v299
    | String_c8 c_v301 s1_v302 ⇒
      (String_c8‹› c_v301 (cats_i11 s1_v302 s2_v299))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v304 : string_d5) ⇒
    match s_v304 as __v305 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v306 s_v307 ⇒ (S_c5‹› (strlen_i12 s_v307))
    end

inductive list_d6 (A_v308 : U) : U =
| nil_c9 of (A_v309 : U) : (list_d6 A_v309)
| cons_c10 of
    (A_v310 : U) (hd_v311 : A_v310) (tl_v312 : (list_d6 A_v310))
    : (list_d6 A_v310)

inductive llist_d7 (A_v313 : L) : L =
| lnil_c11 of (A_v314 : L) : (llist_d7 A_v314)
| lcons_c12 of
    (A_v315 : L) (hd_v316 : A_v315) (tl_v317 : (llist_d7 A_v315))
    : (llist_d7 A_v315)

program len_i13 : ∀ {A_v318 : U} → (list_d6 A_v318) → nat_d3 =
  fn {A_v320 : U} (xs_v321 : (list_d6 A_v320)) ⇒
    match xs_v321 as __v322 in ??21 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v323 xs_v324 ⇒ (S_c5‹› (len_i13 ??22 xs_v324))
    end

program llen_i14 :
  ∀ {A_v325 : L} → (llist_d7 A_v325) → nat_d3 ⊗ (llist_d7 A_v325)
=
  fn {A_v328 : L} (xs_v329 : (llist_d7 A_v328)) ⇒
    match xs_v329 as __v330 in ??23 with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v331 xs_v332 ⇒
      match (llen_i14 A_v328 xs_v332) as __v333 in ??24 with
      | ⟨n_v334, xs_v335⟩ ⇒
        ⟨(S_c5‹› n_v334), (lcons_c12‹› x_v331 xs_v335)⟩
      end
    end

program append_i15 :
  ∀ {A_v336 : U} →
    (list_d6 A_v336) → (list_d6 A_v336) → (list_d6 A_v336)
=
  fn {A_v339 : U} (xs_v340 : (list_d6 A_v339)) (ys_v341 : (list_d6 A_v339)) ⇒
    match xs_v340 as __v342 in ??27 with
    | nil_c9  ⇒ ys_v341
    | cons_c10 x_v343 xs_v344 ⇒
      (cons_c10‹› x_v343 (append_i15 ??28 xs_v344 ys_v341))
    end

program lappend_i16 :
  ∀ {A_v345 : L} →
    (llist_d7 A_v345) → (llist_d7 A_v345) ⊸ (llist_d7 A_v345)
=
  fn {A_v348 : L} (xs_v349 : (llist_d7 A_v348)) ⇒
    ln (ys_v350 : ??30) ⇒
      match xs_v349 as __v351 in ??31 with
      | lnil_c11  ⇒ ys_v350
      | lcons_c12 x_v352 xs_v353 ⇒
        (lcons_c12‹› x_v352 (lappend_i16 ??32 xs_v353 ys_v350))
      end

inductive box_d8 (A_v354 : U) : L =
| Box_c13 of (A_v355 : U) (a_v356 : A_v355) : (box_d8 A_v355)

program map_box_i17 :
  ∀ {A_v357 : U} →
    ∀ {B_v358 : U} →
      A_v357 → B_v358 → (box_d8 A_v357) → (box_d8 B_v358)
=
  fn {A_v362 : U} {B_v363 : U} (f_v364 : A_v362 → B_v363) (m_v365 : 
  (box_d8 A_v362)) ⇒
    match m_v365 as __v367 in ??34 with
    | Box_c13 a_v368 ⇒ (Box_c13‹› (f_v364 a_v368))
    end

program unbox_i18 : ∀ {A_v369 : U} → (box_d8 A_v369) → A_v369 =
  fn {A_v371 : U} (m_v372 : (box_d8 A_v371)) ⇒
    match m_v372 as __v373 in ??36 with
    | Box_c13 a_v374 ⇒ a_v374
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v376 : unit_d1) ⇒
    ⇑(b_v377 : bool_d2) ⇒
      match b_v377 as __v378 in ??37 with
      | true_c2  ⇒ ⇓(__v379 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v381 : unit_d1) ⇒
    ⇑(b_v382 : bool_d2) ⇒
      match b_v382 as __v383 in ??38 with
      | true_c2  ⇒ ⇑(__v384 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v386 : unit_d1) ⇒
    ⇑(b_v387 : bool_d2) ⇒
      match b_v387 as __v388 in ??39 with
      | true_c2  ⇒ ⇑(__v389 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v391 : unit_d1) ⇒
    let ch_v392 ⇐ open stdin in
    let ch_v393 ⇐ (send ch_v392 true_c2‹›) in
    let __v394 ⇐ recv ch_v393 in
    match __v394 as __v395 in ??40 with
    | ⟨s_v396, ch_v397⟩ ⇒
      let ch_v398 ⇐ (send ch_v397 false_c3‹›) in
      let __v399 ⇐ close ch_v398 in return s_v396
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v401 : string_d5) ⇒
    let ch_v402 ⇐ open stdout in
    let ch_v403 ⇐ (send ch_v402 true_c2‹›) in
    let ch_v404 ⇐ (send ch_v403 s_v401) in
    let ch_v405 ⇐ (send ch_v404 false_c3‹›) in close ch_v405

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v407 : string_d5) ⇒
    let ch_v408 ⇐ open stderr in
    let ch_v409 ⇐ (send ch_v408 true_c2‹›) in
    let ch_v410 ⇐ (send ch_v409 s_v407) in
    let ch_v411 ⇐ (send ch_v410 false_c3‹›) in close ch_v411

inductive List_d9 ‹s_s412, t_s413›
  (A_v414 : Type‹s_s412›) : Type‹t_s413›
=
| Nil_c14 of
    ‹s_s415, t_s416› (A_v417 : Type‹s_s415›)
    : (List_d9‹s_s415, t_s416› A_v417)
| Cons_c15 of
    ‹s_s418, t_s419› (A_v420 : Type‹s_s418›) (hd_v421 : A_v420)
    (tl_v422 : (List_d9‹s_s418, t_s419› A_v420))
    : (List_d9‹s_s418, t_s419› A_v420)

program Len_i28 ‹s_s423, t_s424› :
  ∀ {A_v425 : Type‹s_s423›} →
    (List_d9‹??41, t_s424› A_v425) →
      nat_d3 ⊗ (List_d9‹??42, t_s424› A_v425)
=
  fn {A_v428 : Type‹s_s423›} (xs_v429 : (List_d9‹??41, t_s424›
                                              A_v428)) ⇒
    match xs_v429 as __v430 in ??43 with
    | Nil_c14  ⇒ ⟨O_c4‹›, Nil_c14‹??52, ??51›⟩
    | Cons_c15 x_v431 xs_v432 ⇒
      match (Len_i28‹??45, ??44› A_v428 xs_v432) as __v433 in ??46 with
      | ⟨n_v434, xs_v435⟩ ⇒
        ⟨(S_c5‹› n_v434), (Cons_c15‹??49, ??48› x_v431 xs_v435)⟩
      end
    end

program Append_i29 ‹s_s436, t_s437› :
  ∀ {A_v438 : Type‹s_s436›} →
    (List_d9‹??53, t_s437› A_v438) →
      (List_d9‹??54, t_s437› A_v438) ⊸ (List_d9‹??56, ??55› A_v438)
=
  fn {A_v441 : Type‹s_s436›} (xs_v442 : (List_d9‹??53, t_s437›
                                              A_v441)) ⇒
    ln (ys_v443 : ??57) ⇒
      match xs_v442 as __v444 in ??58 with
      | Nil_c14  ⇒ ys_v443
      | Cons_c15 x_v445 xs_v446 ⇒
        (Cons_c15‹??64, ??63›
          x_v445 (Append_i29‹??61, ??60› ??59 xs_v446 ys_v443))
      end

logical Snd_i30 ‹s_s447, t_s448› :
  ∀ {A_v449 : Type‹s_s447›} →
    ∀ {B_v450 : Type‹t_s448›} → A_v449 ⊗ B_v450 → B_v450
=
  fn {A_v453 : Type‹s_s447›} {B_v454 : Type‹t_s448›} (m_v455 : 
  A_v453 ⊗ B_v454) ⇒
    let __v457 = m_v455 in
    match __v457 as __v458 in ??65 with
    | ⟨__v459, b_v460⟩ ⇒ b_v460
    end

logical Len_id_i31 ‹s_s461, t_s462› :
  ∀ (A_v463 : Type‹s_s461›) →
    ∀ (ls_v464 : (List_d9‹??66, t_s462› A_v463)) →
      ls_v464 ≡
        (Snd_i30‹??73, ??72›
          ??71 ??70 (Len_i28‹??69, ??68› ??67 ls_v464))
=
  fn (A_v465 : Type‹s_s461›) (ls_v466 : (List_d9‹??66, t_s462›
                                              A_v465)) ⇒
    match ls_v466 as ls0_v467 in
      ls0_v467 ≡
        (Snd_i30‹??81, ??80›
          ??79 ??78 (Len_i28‹??77, ??76› ??75 ls0_v467)) with
    | Nil_c14  ⇒ refl ??119
    | Cons_c15 x_v468 xs_v469 ⇒
      let p_v470 = (Len_i28‹??85, ??84› ??83 xs_v469) in
      (match p_v470 as p0_v471 in
         ∀ (__v472 :
           (Len_i28‹??88, ??87› ??86 xs_v469) ≡ p0_v471) →
           (Cons_c15‹??92, ??91› x_v468 xs_v469) ≡
             (Snd_i30‹??100, ??99›
               ??98 ??97
               match p0_v471 as __v473 in ??93 with
               | ⟨n_v474, xs0_v475⟩ ⇒
                 ⟨(S_c5‹› n_v474), (Cons_c15‹??96, ??95›
                                           x_v468 xs0_v475)⟩
               end) with
       | ⟨a_v476, b_v477⟩ ⇒
         fn (e0_v478 : ??102) ⇒
           let H_v479 =
             rew [p0_v480, __v481 ⇒
               xs_v469 ≡ (Snd_i30‹??108, ??107› ??106 ??105 p0_v480)]
               e0_v478 in
             (Len_id_i31‹??104, ??103› A_v465 xs_v469)
           in
           rew [l_v482, __v483 ⇒
             (Cons_c15‹??113, ??112› x_v468 xs_v469) ≡
               (Cons_c15‹??116, ??115› x_v468 l_v482)]
             H_v479 in
           refl ??110
       end refl ??118)
    end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2349 : bool_d2) (b2_v2350 : bool_d2) ⇒
    match b1_v2349 as __v2351 in bool_d2 with
    | true_c2  ⇒ b2_v2350 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2354 : bool_d2) (b2_v2355 : bool_d2) ⇒
    match b1_v2354 as __v2356 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v2355
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v2358 : bool_d2) ⇒
    match b_v2358 as __v2359 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v2360 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2363 : nat_d3) (y_v2364 : nat_d3) ⇒
    match x_v2363 as __v2365 in nat_d3 with
    | O_c4  ⇒ y_v2364
    | S_c5 x_v2366 ⇒ (S_c5‹› (addn_i4 x_v2366 y_v2364))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2369 : nat_d3) (y_v2370 : nat_d3) ⇒
    match x_v2369 as __v2371 in nat_d3 with
    | O_c4  ⇒ y_v2370
    | S_c5 x_v2372 ⇒ (addn_i4 y_v2370 (muln_i5 x_v2372 y_v2370))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2375 : nat_d3) (y_v2376 : nat_d3) ⇒
    match x_v2375 as __v2377 in bool_d2 with
    | O_c4  ⇒
      match y_v2376 as __v2378 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2379 ⇒ false_c3‹›
      end
    | S_c5 x_v2380 ⇒
      match y_v2376 as __v2381 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2382 ⇒ (eqn_i6 x_v2380 y_v2382)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2385 : nat_d3) (y_v2386 : nat_d3) ⇒
    match x_v2385 as __v2387 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v2388 ⇒
      match y_v2386 as __v2389 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2390 ⇒ (lten_i7 x_v2388 y_v2390)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2393 : nat_d3) (y_v2394 : nat_d3) ⇒
    match x_v2393 as __v2395 in bool_d2 with
    | O_c4  ⇒
      match y_v2394 as __v2396 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2397 ⇒ false_c3‹›
      end
    | S_c5 x_v2398 ⇒
      match y_v2394 as __v2399 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2400 ⇒ (gten_i8 x_v2398 y_v2400)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2403 : nat_d3) (y_v2404 : nat_d3) ⇒
    match x_v2403 as __v2405 in bool_d2 with
    | O_c4  ⇒
      match y_v2404 as __v2406 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2407 ⇒ true_c2‹›
      end
    | S_c5 x_v2408 ⇒
      match y_v2404 as __v2409 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2410 ⇒ (ltn_i9 x_v2408 y_v2410)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2413 : nat_d3) (y_v2414 : nat_d3) ⇒
    match x_v2413 as __v2415 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v2416 ⇒
      match y_v2414 as __v2417 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2418 ⇒ (gtn_i10 x_v2416 y_v2418)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v2419 : bool_d2) (b1_v2420 : bool_d2) (b2_v2421 : bool_d2)
    (b3_v2422 : bool_d2) (b4_v2423 : bool_d2) (b5_v2424 : bool_d2)
    (b6_v2425 : bool_d2) (b7_v2426 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v2427 : ascii_d4) (s_v2428 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2431 : string_d5) (s2_v2432 : string_d5) ⇒
    match s1_v2431 as __v2433 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2432
    | String_c8 c_v2434 s1_v2435 ⇒
      (String_c8‹› c_v2434 (cats_i11 s1_v2435 s2_v2432))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v2437 : string_d5) ⇒
    match s_v2437 as __v2438 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2439 s_v2440 ⇒ (S_c5‹› (strlen_i12 s_v2440))
    end

inductive list_d6 (A_v2441 : U) : U =
| nil_c9 of (A_v2442 : U) : (list_d6 A_v2442)
| cons_c10 of
    (A_v2443 : U) (hd_v2444 : A_v2443) (tl_v2445 : (list_d6 A_v2443))
    : (list_d6 A_v2443)

inductive llist_d7 (A_v2446 : L) : L =
| lnil_c11 of (A_v2447 : L) : (llist_d7 A_v2447)
| lcons_c12 of
    (A_v2448 : L) (hd_v2449 : A_v2448) (tl_v2450 : (llist_d7 A_v2448))
    : (llist_d7 A_v2448)

program len_i13 : ∀ {A_v2451 : U} → (list_d6 A_v2451) → nat_d3 =
  fn {A_v2453 : U} (xs_v2454 : (list_d6 A_v2453)) ⇒
    match xs_v2454 as __v2455 in nat_d3 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v2456 xs_v2457 ⇒ (S_c5‹› (len_i13 A_v2453 xs_v2457))
    end

program llen_i14 :
  ∀ {A_v2458 : L} → (llist_d7 A_v2458) → nat_d3 ⊗ (llist_d7 A_v2458)
=
  fn {A_v2461 : L} (xs_v2462 : (llist_d7 A_v2461)) ⇒
    match xs_v2462 as __v2463 in nat_d3 ⊗ (llist_d7 A_v2461) with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v2465 xs_v2466 ⇒
      match (llen_i14 A_v2461 xs_v2466) as __v2467 in
        nat_d3 ⊗ (llist_d7 A_v2461) with
      | ⟨n_v2469, xs_v2470⟩ ⇒
        ⟨(S_c5‹› n_v2469), (lcons_c12‹› x_v2465 xs_v2470)⟩
      end
    end

program append_i15 :
  ∀ {A_v2471 : U} →
    (list_d6 A_v2471) → (list_d6 A_v2471) → (list_d6 A_v2471)
=
  fn {A_v2474 : U} (xs_v2475 : (list_d6 A_v2474)) (ys_v2476 : (list_d6
                                                                A_v2474)) ⇒
    match xs_v2475 as __v2477 in (list_d6 A_v2474) with
    | nil_c9  ⇒ ys_v2476
    | cons_c10 x_v2478 xs_v2479 ⇒
      (cons_c10‹› x_v2478 (append_i15 A_v2474 xs_v2479 ys_v2476))
    end

program lappend_i16 :
  ∀ {A_v2480 : L} →
    (llist_d7 A_v2480) → (llist_d7 A_v2480) ⊸ (llist_d7 A_v2480)
=
  fn {A_v2483 : L} (xs_v2484 : (llist_d7 A_v2483)) ⇒
    ln (ys_v2485 : (llist_d7 A_v2483)) ⇒
      match xs_v2484 as __v2486 in (llist_d7 A_v2483) with
      | lnil_c11  ⇒ ys_v2485
      | lcons_c12 x_v2487 xs_v2488 ⇒
        (lcons_c12‹› x_v2487 (lappend_i16 A_v2483 xs_v2488 ys_v2485))
      end

inductive box_d8 (A_v2489 : U) : L =
| Box_c13 of (A_v2490 : U) (a_v2491 : A_v2490) : (box_d8 A_v2490)

program map_box_i17 :
  ∀ {A_v2492 : U} →
    ∀ {B_v2493 : U} →
      A_v2492 → B_v2493 → (box_d8 A_v2492) → (box_d8 B_v2493)
=
  fn {A_v2497 : U} {B_v2498 : U} (f_v2499 : A_v2497 → B_v2498) (m_v2500 : 
  (box_d8 A_v2497)) ⇒
    match m_v2500 as __v2502 in (box_d8 B_v2498) with
    | Box_c13 a_v2503 ⇒ (Box_c13‹› (f_v2499 a_v2503))
    end

program unbox_i18 : ∀ {A_v2504 : U} → (box_d8 A_v2504) → A_v2504 =
  fn {A_v2506 : U} (m_v2507 : (box_d8 A_v2506)) ⇒
    match m_v2507 as __v2508 in A_v2506 with
    | Box_c13 a_v2509 ⇒ a_v2509
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v2511 : unit_d1) ⇒
    ⇑(b_v2512 : bool_d2) ⇒
      match b_v2512 as __v2513 in proto with
      | true_c2  ⇒ ⇓(__v2514 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v2516 : unit_d1) ⇒
    ⇑(b_v2517 : bool_d2) ⇒
      match b_v2517 as __v2518 in proto with
      | true_c2  ⇒
        ⇑(__v2519 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v2521 : unit_d1) ⇒
    ⇑(b_v2522 : bool_d2) ⇒
      match b_v2522 as __v2523 in proto with
      | true_c2  ⇒
        ⇑(__v2524 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v2526 : unit_d1) ⇒
    let ch_v2527 ⇐ open stdin in
    let ch_v2528 ⇐ (send ch_v2527 true_c2‹›) in
    let __v2529 ⇐ recv ch_v2528 in
    match __v2529 as __v2530 in IO string_d5 with
    | ⟨s_v2531, ch_v2532⟩ ⇒
      let ch_v2533 ⇐ (send ch_v2532 false_c3‹›) in
      let __v2534 ⇐ close ch_v2533 in return s_v2531
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v2536 : string_d5) ⇒
    let ch_v2537 ⇐ open stdout in
    let ch_v2538 ⇐ (send ch_v2537 true_c2‹›) in
    let ch_v2539 ⇐ (send ch_v2538 s_v2536) in
    let ch_v2540 ⇐ (send ch_v2539 false_c3‹›) in close ch_v2540

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v2542 : string_d5) ⇒
    let ch_v2543 ⇐ open stderr in
    let ch_v2544 ⇐ (send ch_v2543 true_c2‹›) in
    let ch_v2545 ⇐ (send ch_v2544 s_v2542) in
    let ch_v2546 ⇐ (send ch_v2545 false_c3‹›) in close ch_v2546

inductive List_d9 ‹s_s2547, t_s2548›
  (A_v2549 : Type‹s_s2547›) : Type‹t_s2548›
=
| Nil_c14 of
    ‹s_s2550, t_s2551› (A_v2552 : Type‹s_s2550›)
    : (List_d9‹s_s2550, t_s2551› A_v2552)
| Cons_c15 of
    ‹s_s2553, t_s2554› (A_v2555 : Type‹s_s2553›) (hd_v2556 : A_v2555)
    (tl_v2557 : (List_d9‹s_s2553, t_s2554› A_v2555))
    : (List_d9‹s_s2553, t_s2554› A_v2555)

program Len_i28 ‹s_s2558, t_s2559› :
  ∀ {A_v2560 : Type‹s_s2558›} →
    (List_d9‹s_s2558, t_s2559› A_v2560) →
      nat_d3 ⊗ (List_d9‹s_s2558, t_s2559› A_v2560)
=
  fn {A_v2563 : Type‹s_s2558›} (xs_v2564 : (List_d9‹s_s2558, t_s2559›
                                                 A_v2563)) ⇒
    match xs_v2564 as __v2565 in
      nat_d3 ⊗ (List_d9‹s_s2558, t_s2559› A_v2563) with
    | Nil_c14  ⇒ ⟨O_c4‹›, Nil_c14‹s_s2558, t_s2559›⟩
    | Cons_c15 x_v2567 xs_v2568 ⇒
      match (Len_i28‹s_s2558, t_s2559› A_v2563 xs_v2568) as __v2569 in
        nat_d3 ⊗ (List_d9‹s_s2558, t_s2559› A_v2563) with
      | ⟨n_v2571, xs_v2572⟩ ⇒
        ⟨(S_c5‹› n_v2571), (Cons_c15‹s_s2558, t_s2559›
                                   x_v2567 xs_v2572)⟩
      end
    end

program Append_i29 ‹s_s2573, t_s2574› :
  ∀ {A_v2575 : Type‹s_s2573›} →
    (List_d9‹s_s2573, t_s2574› A_v2575) →
      (List_d9‹s_s2573, t_s2574› A_v2575) ⊸
        (List_d9‹s_s2573, t_s2574› A_v2575)
=
  fn {A_v2578 : Type‹s_s2573›} (xs_v2579 : (List_d9‹s_s2573, t_s2574›
                                                 A_v2578)) ⇒
    ln (ys_v2580 : (List_d9‹s_s2573, t_s2574› A_v2578)) ⇒
      match xs_v2579 as __v2581 in
        (List_d9‹s_s2573, t_s2574› A_v2578) with
      | Nil_c14  ⇒ ys_v2580
      | Cons_c15 x_v2582 xs_v2583 ⇒
        (Cons_c15‹s_s2573, t_s2574›
          x_v2582
          (Append_i29‹s_s2573, t_s2574› A_v2578 xs_v2583 ys_v2580))
      end

logical Snd_i30 ‹s_s2584, t_s2585› :
  ∀ {A_v2586 : Type‹s_s2584›} →
    ∀ {B_v2587 : Type‹t_s2585›} → A_v2586 ⊗ B_v2587 → B_v2587
=
  fn {A_v2590 : Type‹s_s2584›} {B_v2591 : Type‹t_s2585›} (m_v2592 : 
  A_v2590 ⊗ B_v2591) ⇒
    let __v2594 = m_v2592 in
    match __v2594 as __v2595 in B_v2591 with
    | ⟨__v2596, b_v2597⟩ ⇒ b_v2597
    end

logical Len_id_i31 ‹s_s2598, t_s2599› :
  ∀ (A_v2600 : Type‹s_s2598›) →
    ∀ (ls_v2601 : (List_d9‹s_s2598, t_s2599› A_v2600)) →
      ls_v2601 ≡
        (Snd_i30‹U, t_s2599›
          nat_d3 (List_d9‹s_s2598, t_s2599› A_v2600)
          (Len_i28‹s_s2598, t_s2599› A_v2600 ls_v2601))
=
  fn (A_v2602 : Type‹s_s2598›) (ls_v2603 : (List_d9‹s_s2598, t_s2599›
                                                 A_v2602)) ⇒
    match ls_v2603 as ls0_v2604 in
      ls0_v2604 ≡
        (Snd_i30‹U, t_s2599›
          nat_d3 (List_d9‹s_s2598, t_s2599› A_v2602)
          (Len_i28‹s_s2598, t_s2599› A_v2602 ls0_v2604)) with
    | Nil_c14  ⇒ refl Nil_c14‹s_s2598, t_s2599›
    | Cons_c15 x_v2605 xs_v2606 ⇒
      let p_v2607 = (Len_i28‹s_s2598, t_s2599› A_v2602 xs_v2606) in
      (match p_v2607 as p0_v2608 in
         (Len_i28‹s_s2598, t_s2599› A_v2602 xs_v2606) ≡ p0_v2608 →
           (Cons_c15‹s_s2598, t_s2599› x_v2605 xs_v2606) ≡
             (Snd_i30‹U, t_s2599›
               nat_d3 (List_d9‹s_s2598, t_s2599› A_v2602)
               match p0_v2608 as __v2610 in
                 nat_d3 ⊗ (List_d9‹s_s2598, t_s2599› A_v2602) with
               | ⟨n_v2612, xs0_v2613⟩ ⇒
                 ⟨(S_c5‹› n_v2612), (Cons_c15‹s_s2598, t_s2599›
                                            x_v2605 xs0_v2613)⟩
               end) with
       | ⟨a_v2614, b_v2615⟩ ⇒
         fn (e0_v2616 : (Len_i28‹s_s2598, t_s2599› A_v2602 xs_v2606) ≡
                          (⟨a_v2614, b_v2615⟩
                            : nat_d3 ⊗
                                (List_d9‹s_s2598, t_s2599› A_v2602))) ⇒
           let H_v2618 =
             rew [p0_v2619, __v2620 ⇒
               xs_v2606 ≡
                 (Snd_i30‹U, t_s2599›
                   nat_d3 (List_d9‹s_s2598, t_s2599› A_v2602) p0_v2619)]
               e0_v2616 in
             (Len_id_i31‹s_s2598, t_s2599› A_v2602 xs_v2606)
           in
           rew [l_v2621, __v2622 ⇒
             (Cons_c15‹s_s2598, t_s2599› x_v2605 xs_v2606) ≡
               (Cons_c15‹s_s2598, t_s2599› x_v2605 l_v2621)]
             H_v2618 in
           refl (Cons_c15‹s_s2598, t_s2599› x_v2605 xs_v2606)
       end refl (Len_i28‹s_s2598, t_s2599› A_v2602 xs_v2606))
    end

trans1e success--------------------------

data unit_d10 =
| tt_c16 of size(0)

data bool_d11 =
| true_c17 of size(0) | false_c18 of size(0)

def andb_i32 =
  fn b1_v3133 b2_v3134 ⇒
    match b1_v3133 with
    | true_c17  ⇒ b2_v3134 | false_c18  ⇒ false_c18
    end

def orb_i33 =
  fn b1_v3135 b2_v3136 ⇒
    match b1_v3135 with
    | true_c17  ⇒ true_c17 | false_c18  ⇒ b2_v3136
    end

def notb_i34 =
  fn b_v3137 ⇒
    match b_v3137 with
    | true_c17  ⇒ false_c18 | false_c18  ⇒ true_c17
    end

data nat_d12 =
| O_c19 of size(0) | S_c20 of size(1)

def addn_i35 =
  fn x_v3138 y_v3139 ⇒
    match x_v3138 with
    | O_c19  ⇒ y_v3139
    | S_c20 x_v3140 ⇒ (S_c20 ((addn_i35 x_v3140) y_v3139))
    end

def muln_i36 =
  fn x_v3141 y_v3142 ⇒
    match x_v3141 with
    | O_c19  ⇒ y_v3142
    | S_c20 x_v3143 ⇒ ((addn_i35 y_v3142) ((muln_i36 x_v3143) y_v3142))
    end

def eqn_i37 =
  fn x_v3144 y_v3145 ⇒
    match x_v3144 with
    | O_c19  ⇒
      match y_v3145 with
      | O_c19  ⇒ true_c17 | S_c20 __v3146 ⇒ false_c18
      end
    | S_c20 x_v3147 ⇒
      match y_v3145 with
      | O_c19  ⇒ false_c18 | S_c20 y_v3148 ⇒ ((eqn_i37 x_v3147) y_v3148)
      end
    end

def lten_i38 =
  fn x_v3149 y_v3150 ⇒
    match x_v3149 with
    | O_c19  ⇒ true_c17
    | S_c20 x_v3151 ⇒
      match y_v3150 with
      | O_c19  ⇒ false_c18 | S_c20 y_v3152 ⇒ ((lten_i38 x_v3151) y_v3152)
      end
    end

def gten_i39 =
  fn x_v3153 y_v3154 ⇒
    match x_v3153 with
    | O_c19  ⇒
      match y_v3154 with
      | O_c19  ⇒ true_c17 | S_c20 __v3155 ⇒ false_c18
      end
    | S_c20 x_v3156 ⇒
      match y_v3154 with
      | O_c19  ⇒ true_c17 | S_c20 y_v3157 ⇒ ((gten_i39 x_v3156) y_v3157)
      end
    end

data ascii_d13 =
| Ascii_c21 of size(8)

data string_d14 =
| EmptyString_c22 of size(0) | String_c23 of size(2)

def cats_i42 =
  fn s1_v3158 s2_v3159 ⇒
    match s1_v3158 with
    | EmptyString_c22  ⇒ s2_v3159
    | String_c23 c_v3160 s1_v3161 ⇒
      (String_c23 c_v3160 ((cats_i42 s1_v3161) s2_v3159))
    end

def strlen_i43 =
  fn s_v3162 ⇒
    match s_v3162 with
    | EmptyString_c22  ⇒ O_c19
    | String_c23 __v3163 s_v3164 ⇒ (S_c20 (strlen_i43 s_v3164))
    end

data list_d15 =
| nil_c24 of size(0) | cons_c25 of size(2)

data llist_d16 =
| lnil_c26 of size(0) | lcons_c27 of size(2)

def len_i44 =
  fn A_v3165 xs_v3166 ⇒
    match xs_v3166 with
    | nil_c24  ⇒ O_c19
    | cons_c25 __v3167 xs_v3168 ⇒ (S_c20 ((len_i44 NULL) xs_v3168))
    end

def llen_i45 =
  fn A_v3169 xs_v3170 ⇒
    match xs_v3170 with
    | lnil_c26  ⇒ (O_c19, lnil_c26)
    | lcons_c27 x_v3171 xs_v3172 ⇒
      match ((llen_i45 NULL) xs_v3172) with
      | (n_v3173, xs_v3174) ⇒
        ((S_c20 n_v3173), (lcons_c27 x_v3171 xs_v3174))
      end
    end

def append_i46 =
  fn A_v3175 xs_v3176 ys_v3177 ⇒
    match xs_v3176 with
    | nil_c24  ⇒ ys_v3177
    | cons_c25 x_v3178 xs_v3179 ⇒
      (cons_c25 x_v3178 (((append_i46 NULL) xs_v3179) ys_v3177))
    end

def lappend_i47 =
  fn A_v3180 xs_v3181 ys_v3182 ⇒
    match xs_v3181 with
    | lnil_c26  ⇒ ys_v3182
    | lcons_c27 x_v3183 xs_v3184 ⇒
      (lcons_c27 x_v3183 (((lappend_i47 NULL) xs_v3184) ys_v3182))
    end

data box_d17 =
| Box_c28 of size(1)

def map_box_i48 =
  fn A_v3185 B_v3186 f_v3187 m_v3188 ⇒
    match m_v3188 with
    | Box_c28 a_v3189 ⇒ (Box_c28 (f_v3187 a_v3189))
    end

def unbox_i49 =
  fn A_v3190 m_v3191 ⇒ match m_v3191 with
                         | Box_c28 a_v3192 ⇒ a_v3192
                         end

def readline_i56 =
  fn __v3193 ⇒
    let ch_v3194 ⇐ open stdin in
    let ch_v3195 ⇐ (send ch_v3194 true_c17) in
    let __v3196 ⇐ recv ch_v3195 in
    match __v3196 with
    | (s_v3197, ch_v3198) ⇒
      let ch_v3199 ⇐ (send ch_v3198 false_c18) in
      let __v3200 ⇐ close⇑ ch_v3199 in return s_v3197
    end

def print_i57 =
  fn s_v3201 ⇒
    let ch_v3202 ⇐ open stdout in
    let ch_v3203 ⇐ (send ch_v3202 true_c17) in
    let ch_v3204 ⇐ (send ch_v3203 s_v3201) in
    let ch_v3205 ⇐ (send ch_v3204 false_c18) in close⇑ ch_v3205

def prerr_i58 =
  fn s_v3206 ⇒
    let ch_v3207 ⇐ open stderr in
    let ch_v3208 ⇐ (send ch_v3207 true_c17) in
    let ch_v3209 ⇐ (send ch_v3208 s_v3206) in
    let ch_v3210 ⇐ (send ch_v3209 false_c18) in close⇑ ch_v3210

data ListUU_d21 =
| NilUU_c35 of size(0) | ConsUU_c36 of size(2)

data ListUL_d20 =
| NilUL_c33 of size(0) | ConsUL_c34 of size(2)

data ListLU_d19 =
| NilLU_c31 of size(0)

data ListLL_d18 =
| NilLL_c29 of size(0) | ConsLL_c30 of size(2)

def LenUU_i62 =
  fn A_v3211 xs_v3212 ⇒
    match xs_v3212 with
    | NilUU_c35  ⇒ (O_c19, NilUU_c35)
    | ConsUU_c36 x_v3213 xs_v3214 ⇒
      match ((LenUU_i62 NULL) xs_v3214) with
      | (n_v3215, xs_v3216) ⇒
        ((S_c20 n_v3215), (ConsUU_c36 x_v3213 xs_v3216))
      end
    end

def LenUL_i61 =
  fn A_v3217 xs_v3218 ⇒
    match xs_v3218 with
    | NilUL_c33  ⇒ (O_c19, NilUL_c33)
    | ConsUL_c34 x_v3219 xs_v3220 ⇒
      match ((LenUL_i61 NULL) xs_v3220) with
      | (n_v3221, xs_v3222) ⇒
        ((S_c20 n_v3221), (ConsUL_c34 x_v3219 xs_v3222))
      end
    end

def LenLL_i59 =
  fn A_v3223 xs_v3224 ⇒
    match xs_v3224 with
    | NilLL_c29  ⇒ (O_c19, NilLL_c29)
    | ConsLL_c30 x_v3225 xs_v3226 ⇒
      match ((LenLL_i59 NULL) xs_v3226) with
      | (n_v3227, xs_v3228) ⇒
        ((S_c20 n_v3227), (ConsLL_c30 x_v3225 xs_v3228))
      end
    end

def AppendUU_i66 =
  fn A_v3229 xs_v3230 ys_v3231 ⇒
    match xs_v3230 with
    | NilUU_c35  ⇒ ys_v3231
    | ConsUU_c36 x_v3232 xs_v3233 ⇒
      (ConsUU_c36 x_v3232 (((AppendUU_i66 NULL) xs_v3233) ys_v3231))
    end

def AppendUL_i65 =
  fn A_v3234 xs_v3235 ys_v3236 ⇒
    match xs_v3235 with
    | NilUL_c33  ⇒ ys_v3236
    | ConsUL_c34 x_v3237 xs_v3238 ⇒
      (ConsUL_c34 x_v3237 (((AppendUL_i65 NULL) xs_v3238) ys_v3236))
    end

def AppendLL_i63 =
  fn A_v3239 xs_v3240 ys_v3241 ⇒
    match xs_v3240 with
    | NilLL_c29  ⇒ ys_v3241
    | ConsLL_c30 x_v3242 xs_v3243 ⇒
      (ConsLL_c30 x_v3242 (((AppendLL_i63 NULL) xs_v3243) ys_v3241))
    end

trans12 success--------------------------

