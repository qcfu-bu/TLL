parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v144 : bool_d2) (b2_v145 : bool_d2) ⇒
    match b1_v144 as __v146 in ??1 with
    | true_c2  ⇒ b2_v145 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v149 : bool_d2) (b2_v150 : bool_d2) ⇒
    match b1_v149 as __v151 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v150
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v153 : bool_d2) ⇒
    match b_v153 as __v154 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v155 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v158 : nat_d3) (y_v159 : nat_d3) ⇒
    match x_v158 as __v160 in ??4 with
    | O_c4  ⇒ y_v159 | S_c5 x_v161 ⇒ (S_c5‹› (addn_i4 x_v161 y_v159))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v164 : nat_d3) (y_v165 : nat_d3) ⇒
    match x_v164 as __v166 in ??5 with
    | O_c4  ⇒ y_v165
    | S_c5 x_v167 ⇒ (addn_i4 y_v165 (muln_i5 x_v167 y_v165))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v170 : nat_d3) (y_v171 : nat_d3) ⇒
    match x_v170 as __v172 in ??6 with
    | O_c4  ⇒
      match y_v171 as __v173 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v174 ⇒ false_c3‹›
      end
    | S_c5 x_v175 ⇒
      match y_v171 as __v176 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v177 ⇒ (eqn_i6 x_v175 y_v177)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v180 : nat_d3) (y_v181 : nat_d3) ⇒
    match x_v180 as __v182 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v183 ⇒
      match y_v181 as __v184 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v185 ⇒ (lten_i7 x_v183 y_v185)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v188 : nat_d3) (y_v189 : nat_d3) ⇒
    match x_v188 as __v190 in ??11 with
    | O_c4  ⇒
      match y_v189 as __v191 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v192 ⇒ false_c3‹›
      end
    | S_c5 x_v193 ⇒
      match y_v189 as __v194 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v195 ⇒ (gten_i8 x_v193 y_v195)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v198 : nat_d3) (y_v199 : nat_d3) ⇒
    match x_v198 as __v200 in ??14 with
    | O_c4  ⇒
      match y_v199 as __v201 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v202 ⇒ true_c2‹›
      end
    | S_c5 x_v203 ⇒
      match y_v199 as __v204 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v205 ⇒ (ltn_i9 x_v203 y_v205)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v208 : nat_d3) (y_v209 : nat_d3) ⇒
    match x_v208 as __v210 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v211 ⇒
      match y_v209 as __v212 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v213 ⇒ (gtn_i10 x_v211 y_v213)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v214 : bool_d2) (b1_v215 : bool_d2) (b2_v216 : bool_d2)
    (b3_v217 : bool_d2) (b4_v218 : bool_d2) (b5_v219 : bool_d2)
    (b6_v220 : bool_d2) (b7_v221 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v222 : ascii_d4) (s_v223 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v226 : string_d5) (s2_v227 : string_d5) ⇒
    match s1_v226 as __v228 in ??19 with
    | EmptyString_c7  ⇒ s2_v227
    | String_c8 c_v229 s1_v230 ⇒
      (String_c8‹› c_v229 (cats_i11 s1_v230 s2_v227))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v232 : string_d5) ⇒
    match s_v232 as __v233 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v234 s_v235 ⇒ (S_c5‹› (strlen_i12 s_v235))
    end

inductive list_d6 ‹s_s236, t_s237›
  (A_v238 : Type‹s_s236›) : Type‹t_s237›
=
| nil_c9 of
    ‹s_s239, t_s240› (A_v241 : Type‹s_s239›)
    : (list_d6‹s_s239, t_s240› A_v241)
| cons_c10 of
    ‹s_s242, t_s243› (A_v244 : Type‹s_s242›) (hd_v245 : A_v244)
    (tl_v246 : (list_d6‹s_s242, t_s243› A_v244))
    : (list_d6‹s_s242, t_s243› A_v244)

program len_i13 ‹s_s247, t_s248› :
  ∀ {A_v249 : Type‹s_s247›} →
    (list_d6‹??21, t_s248› A_v249) →
      nat_d3 ⊗ (list_d6‹??22, t_s248› A_v249)
=
  fn {A_v252 : Type‹s_s247›}
     (xs_v253 : (list_d6‹??21, t_s248› A_v252)) ⇒
    match xs_v253 as __v254 in ??23 with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹??33, ??32›⟩
    | cons_c10 x_v255 xs_v256 ⇒
      match (len_i13‹??26, ??25› ??24 xs_v256) as __v257 in ??27 with
      | ⟨n_v258, xs_v259⟩ ⇒
        ⟨(S_c5‹› n_v258), (cons_c10‹??30, ??29› x_v255 xs_v259)⟩
      end
    end

program append_i14 ‹s_s260, t_s261› :
  ∀ {A_v262 : Type‹s_s260›} →
    (list_d6‹??34, t_s261› A_v262) →
      (list_d6‹??35, t_s261› A_v262) ⊸ (list_d6‹??37, ??36› A_v262)
=
  fn {A_v265 : Type‹s_s260›}
     (xs_v266 : (list_d6‹??34, t_s261› A_v265)) ⇒
    ln (ys_v267 : ??38) ⇒
      match xs_v266 as __v268 in ??39 with
      | nil_c9  ⇒ ys_v267
      | cons_c10 x_v269 xs_v270 ⇒
        (cons_c10‹??45, ??44›
          x_v269 (append_i14‹??42, ??41› ??40 xs_v270 ys_v267))
      end

logical stdin_rec_i15 : unit_d1 → proto =
  fn (__v272 : unit_d1) ⇒
    ⇑(b_v273 : bool_d2) ⇒
      match b_v273 as __v274 in ??46 with
      | true_c2  ⇒ ⇓(__v275 : string_d5) ⇒ (stdin_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i16 : unit_d1 → proto =
  fn (__v277 : unit_d1) ⇒
    ⇑(b_v278 : bool_d2) ⇒
      match b_v278 as __v279 in ??47 with
      | true_c2  ⇒ ⇑(__v280 : string_d5) ⇒ (stdout_rec_i16 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i17 : unit_d1 → proto =
  fn (__v282 : unit_d1) ⇒
    ⇑(b_v283 : bool_d2) ⇒
      match b_v283 as __v284 in ??48 with
      | true_c2  ⇒ ⇑(__v285 : string_d5) ⇒ (stderr_rec_i17 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i18 : proto = (stdin_rec_i15 tt_c1‹›)

logical stdout_t_i19 : proto = (stdout_rec_i16 tt_c1‹›)

logical stderr_t_i20 : proto = (stderr_rec_i17 tt_c1‹›)

program readline_i21 : unit_d1 → IO string_d5 =
  fn (__v287 : unit_d1) ⇒
    let ch_v288 ⇐ open stdin in
    let ch_v289 ⇐ (send ch_v288 true_c2‹›) in
    let __v290 ⇐ recv ch_v289 in
    match __v290 as __v291 in ??49 with
    | ⟨s_v292, ch_v293⟩ ⇒
      let ch_v294 ⇐ (send ch_v293 false_c3‹›) in
      let __v295 ⇐ close ch_v294 in return s_v292
    end

program print_i22 : string_d5 → IO unit_d1 =
  fn (s_v297 : string_d5) ⇒
    let ch_v298 ⇐ open stdout in
    let ch_v299 ⇐ (send ch_v298 true_c2‹›) in
    let ch_v300 ⇐ (send ch_v299 s_v297) in
    let ch_v301 ⇐ (send ch_v300 false_c3‹›) in close ch_v301

program prerr_i23 : string_d5 → IO unit_d1 =
  fn (s_v303 : string_d5) ⇒
    let ch_v304 ⇐ open stderr in
    let ch_v305 ⇐ (send ch_v304 true_c2‹›) in
    let ch_v306 ⇐ (send ch_v305 s_v303) in
    let ch_v307 ⇐ (send ch_v306 false_c3‹›) in close ch_v307

program main_i24 : IO unit_d1 =
  let c_v308 ⇐
    fork (c_v309 : ch⟨⇑(__v310 : string_d5) ⇒ end⟩) in
      let s_v311 ⇐ (readline_i21 tt_c1‹›) in
      let c_v312 ⇐ (send c_v309 s_v311) in close c_v312
  in
  let __v313 ⇐ recv c_v308 in
  match __v313 as __v314 in ??50 with
  | ⟨msg_v315, c_v316⟩ ⇒
    let __v317 ⇐ close c_v316 in (print_i22 msg_v315)
  end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1262 : bool_d2) (b2_v1263 : bool_d2) ⇒
    match b1_v1262 as __v1264 in bool_d2 with
    | true_c2  ⇒ b2_v1263 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1267 : bool_d2) (b2_v1268 : bool_d2) ⇒
    match b1_v1267 as __v1269 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v1268
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v1271 : bool_d2) ⇒
    match b_v1271 as __v1272 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v1273 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1276 : nat_d3) (y_v1277 : nat_d3) ⇒
    match x_v1276 as __v1278 in nat_d3 with
    | O_c4  ⇒ y_v1277
    | S_c5 x_v1279 ⇒ (S_c5‹› (addn_i4 x_v1279 y_v1277))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1282 : nat_d3) (y_v1283 : nat_d3) ⇒
    match x_v1282 as __v1284 in nat_d3 with
    | O_c4  ⇒ y_v1283
    | S_c5 x_v1285 ⇒ (addn_i4 y_v1283 (muln_i5 x_v1285 y_v1283))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1288 : nat_d3) (y_v1289 : nat_d3) ⇒
    match x_v1288 as __v1290 in bool_d2 with
    | O_c4  ⇒
      match y_v1289 as __v1291 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1292 ⇒ false_c3‹›
      end
    | S_c5 x_v1293 ⇒
      match y_v1289 as __v1294 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1295 ⇒ (eqn_i6 x_v1293 y_v1295)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1298 : nat_d3) (y_v1299 : nat_d3) ⇒
    match x_v1298 as __v1300 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v1301 ⇒
      match y_v1299 as __v1302 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1303 ⇒ (lten_i7 x_v1301 y_v1303)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1306 : nat_d3) (y_v1307 : nat_d3) ⇒
    match x_v1306 as __v1308 in bool_d2 with
    | O_c4  ⇒
      match y_v1307 as __v1309 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1310 ⇒ false_c3‹›
      end
    | S_c5 x_v1311 ⇒
      match y_v1307 as __v1312 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1313 ⇒ (gten_i8 x_v1311 y_v1313)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1316 : nat_d3) (y_v1317 : nat_d3) ⇒
    match x_v1316 as __v1318 in bool_d2 with
    | O_c4  ⇒
      match y_v1317 as __v1319 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1320 ⇒ true_c2‹›
      end
    | S_c5 x_v1321 ⇒
      match y_v1317 as __v1322 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1323 ⇒ (ltn_i9 x_v1321 y_v1323)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1326 : nat_d3) (y_v1327 : nat_d3) ⇒
    match x_v1326 as __v1328 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v1329 ⇒
      match y_v1327 as __v1330 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1331 ⇒ (gtn_i10 x_v1329 y_v1331)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v1332 : bool_d2) (b1_v1333 : bool_d2) (b2_v1334 : bool_d2)
    (b3_v1335 : bool_d2) (b4_v1336 : bool_d2) (b5_v1337 : bool_d2)
    (b6_v1338 : bool_d2) (b7_v1339 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v1340 : ascii_d4) (s_v1341 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v1344 : string_d5) (s2_v1345 : string_d5) ⇒
    match s1_v1344 as __v1346 in string_d5 with
    | EmptyString_c7  ⇒ s2_v1345
    | String_c8 c_v1347 s1_v1348 ⇒
      (String_c8‹› c_v1347 (cats_i11 s1_v1348 s2_v1345))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v1350 : string_d5) ⇒
    match s_v1350 as __v1351 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v1352 s_v1353 ⇒ (S_c5‹› (strlen_i12 s_v1353))
    end

inductive list_d6 ‹s_s1354, t_s1355›
  (A_v1356 : Type‹s_s1354›) : Type‹t_s1355›
=
| nil_c9 of
    ‹s_s1357, t_s1358› (A_v1359 : Type‹s_s1357›)
    : (list_d6‹s_s1357, t_s1358› A_v1359)
| cons_c10 of
    ‹s_s1360, t_s1361› (A_v1362 : Type‹s_s1360›) (hd_v1363 : A_v1362)
    (tl_v1364 : (list_d6‹s_s1360, t_s1361› A_v1362))
    : (list_d6‹s_s1360, t_s1361› A_v1362)

program len_i13 ‹s_s1365, t_s1366› :
  ∀ {A_v1367 : Type‹s_s1365›} →
    (list_d6‹s_s1365, t_s1366› A_v1367) →
      nat_d3 ⊗ (list_d6‹s_s1365, t_s1366› A_v1367)
=
  fn {A_v1370 : Type‹s_s1365›}
     (xs_v1371 : (list_d6‹s_s1365, t_s1366› A_v1370)) ⇒
    match xs_v1371 as __v1372 in
      nat_d3 ⊗ (list_d6‹s_s1365, t_s1366› A_v1370) with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹s_s1365, t_s1366›⟩
    | cons_c10 x_v1374 xs_v1375 ⇒
      match (len_i13‹s_s1365, t_s1366› A_v1370 xs_v1375) as __v1376 in
        nat_d3 ⊗ (list_d6‹s_s1365, t_s1366› A_v1370) with
      | ⟨n_v1378, xs_v1379⟩ ⇒
        ⟨(S_c5‹› n_v1378), (cons_c10‹s_s1365, t_s1366›
                                   x_v1374 xs_v1379)⟩
      end
    end

program append_i14 ‹s_s1380, t_s1381› :
  ∀ {A_v1382 : Type‹s_s1380›} →
    (list_d6‹s_s1380, t_s1381› A_v1382) →
      (list_d6‹s_s1380, t_s1381› A_v1382) ⊸
        (list_d6‹s_s1380, t_s1381› A_v1382)
=
  fn {A_v1385 : Type‹s_s1380›}
     (xs_v1386 : (list_d6‹s_s1380, t_s1381› A_v1385)) ⇒
    ln (ys_v1387 : (list_d6‹s_s1380, t_s1381› A_v1385)) ⇒
      match xs_v1386 as __v1388 in
        (list_d6‹s_s1380, t_s1381› A_v1385) with
      | nil_c9  ⇒ ys_v1387
      | cons_c10 x_v1389 xs_v1390 ⇒
        (cons_c10‹s_s1380, t_s1381›
          x_v1389
          (append_i14‹s_s1380, t_s1381› A_v1385 xs_v1390 ys_v1387))
      end

logical stdin_rec_i15 : unit_d1 → proto =
  fn (__v1392 : unit_d1) ⇒
    ⇑(b_v1393 : bool_d2) ⇒
      match b_v1393 as __v1394 in proto with
      | true_c2  ⇒ ⇓(__v1395 : string_d5) ⇒ (stdin_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i16 : unit_d1 → proto =
  fn (__v1397 : unit_d1) ⇒
    ⇑(b_v1398 : bool_d2) ⇒
      match b_v1398 as __v1399 in proto with
      | true_c2  ⇒
        ⇑(__v1400 : string_d5) ⇒ (stdout_rec_i16 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i17 : unit_d1 → proto =
  fn (__v1402 : unit_d1) ⇒
    ⇑(b_v1403 : bool_d2) ⇒
      match b_v1403 as __v1404 in proto with
      | true_c2  ⇒
        ⇑(__v1405 : string_d5) ⇒ (stderr_rec_i17 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i18 : proto = (stdin_rec_i15 tt_c1‹›)

logical stdout_t_i19 : proto = (stdout_rec_i16 tt_c1‹›)

logical stderr_t_i20 : proto = (stderr_rec_i17 tt_c1‹›)

program readline_i21 : unit_d1 → IO string_d5 =
  fn (__v1407 : unit_d1) ⇒
    let ch_v1408 ⇐ open stdin in
    let ch_v1409 ⇐ (send ch_v1408 true_c2‹›) in
    let __v1410 ⇐ recv ch_v1409 in
    match __v1410 as __v1411 in IO string_d5 with
    | ⟨s_v1412, ch_v1413⟩ ⇒
      let ch_v1414 ⇐ (send ch_v1413 false_c3‹›) in
      let __v1415 ⇐ close ch_v1414 in return s_v1412
    end

program print_i22 : string_d5 → IO unit_d1 =
  fn (s_v1417 : string_d5) ⇒
    let ch_v1418 ⇐ open stdout in
    let ch_v1419 ⇐ (send ch_v1418 true_c2‹›) in
    let ch_v1420 ⇐ (send ch_v1419 s_v1417) in
    let ch_v1421 ⇐ (send ch_v1420 false_c3‹›) in close ch_v1421

program prerr_i23 : string_d5 → IO unit_d1 =
  fn (s_v1423 : string_d5) ⇒
    let ch_v1424 ⇐ open stderr in
    let ch_v1425 ⇐ (send ch_v1424 true_c2‹›) in
    let ch_v1426 ⇐ (send ch_v1425 s_v1423) in
    let ch_v1427 ⇐ (send ch_v1426 false_c3‹›) in close ch_v1427

program main_i24 : IO unit_d1 =
  let c_v1428 ⇐
    fork (c_v1429 : ch⟨⇑(__v1430 : string_d5) ⇒ end⟩) in
      let s_v1431 ⇐ (readline_i21 tt_c1‹›) in
      let c_v1432 ⇐ (send c_v1429 s_v1431) in close c_v1432
  in
  let __v1433 ⇐ recv c_v1428 in
  match __v1433 as __v1434 in IO unit_d1 with
  | ⟨msg_v1435, c_v1436⟩ ⇒
    let __v1437 ⇐ close c_v1436 in (print_i22 msg_v1435)
  end

trans1e success--------------------------

data unit_d7 =
| tt_c11 of size(0)

data bool_d8 =
| true_c12 of size(0) | false_c13 of size(0)

def andb_i25 =
  fn b1_v1691 b2_v1692 ⇒
    match b1_v1691 with
    | true_c12  ⇒ b2_v1692 | false_c13  ⇒ false_c13
    end

def orb_i26 =
  fn b1_v1693 b2_v1694 ⇒
    match b1_v1693 with
    | true_c12  ⇒ true_c12 | false_c13  ⇒ b2_v1694
    end

def notb_i27 =
  fn b_v1695 ⇒
    match b_v1695 with
    | true_c12  ⇒ false_c13 | false_c13  ⇒ true_c12
    end

data nat_d9 =
| O_c14 of size(0) | S_c15 of size(1)

def addn_i28 =
  fn x_v1696 y_v1697 ⇒
    match x_v1696 with
    | O_c14  ⇒ y_v1697
    | S_c15 x_v1698 ⇒ (S_c15 ((addn_i28 x_v1698) y_v1697))
    end

def muln_i29 =
  fn x_v1699 y_v1700 ⇒
    match x_v1699 with
    | O_c14  ⇒ y_v1700
    | S_c15 x_v1701 ⇒ ((addn_i28 y_v1700) ((muln_i29 x_v1701) y_v1700))
    end

def eqn_i30 =
  fn x_v1702 y_v1703 ⇒
    match x_v1702 with
    | O_c14  ⇒
      match y_v1703 with
      | O_c14  ⇒ true_c12 | S_c15 __v1704 ⇒ false_c13
      end
    | S_c15 x_v1705 ⇒
      match y_v1703 with
      | O_c14  ⇒ false_c13 | S_c15 y_v1706 ⇒ ((eqn_i30 x_v1705) y_v1706)
      end
    end

def lten_i31 =
  fn x_v1707 y_v1708 ⇒
    match x_v1707 with
    | O_c14  ⇒ true_c12
    | S_c15 x_v1709 ⇒
      match y_v1708 with
      | O_c14  ⇒ false_c13 | S_c15 y_v1710 ⇒ ((lten_i31 x_v1709) y_v1710)
      end
    end

def gten_i32 =
  fn x_v1711 y_v1712 ⇒
    match x_v1711 with
    | O_c14  ⇒
      match y_v1712 with
      | O_c14  ⇒ true_c12 | S_c15 __v1713 ⇒ false_c13
      end
    | S_c15 x_v1714 ⇒
      match y_v1712 with
      | O_c14  ⇒ true_c12 | S_c15 y_v1715 ⇒ ((gten_i32 x_v1714) y_v1715)
      end
    end

data ascii_d10 =
| Ascii_c16 of size(8)

data string_d11 =
| EmptyString_c17 of size(0) | String_c18 of size(2)

def cats_i35 =
  fn s1_v1716 s2_v1717 ⇒
    match s1_v1716 with
    | EmptyString_c17  ⇒ s2_v1717
    | String_c18 c_v1718 s1_v1719 ⇒
      (String_c18 c_v1718 ((cats_i35 s1_v1719) s2_v1717))
    end

def strlen_i36 =
  fn s_v1720 ⇒
    match s_v1720 with
    | EmptyString_c17  ⇒ O_c14
    | String_c18 __v1721 s_v1722 ⇒ (S_c15 (strlen_i36 s_v1722))
    end

data listUU_d15 =
| nilUU_c25 of size(0) | consUU_c26 of size(2)

data listUL_d14 =
| nilUL_c23 of size(0) | consUL_c24 of size(2)

data listLU_d13 =
| nilLU_c21 of size(0)

data listLL_d12 =
| nilLL_c19 of size(0) | consLL_c20 of size(2)

def lenUU_i40 =
  fn A_v1723 xs_v1724 ⇒
    match xs_v1724 with
    | nilUU_c25  ⇒ (O_c14, nilUU_c25)
    | consUU_c26 x_v1725 xs_v1726 ⇒
      match ((lenUU_i40 NULL) xs_v1726) with
      | (n_v1727, xs_v1728) ⇒
        ((S_c15 n_v1727), (consUU_c26 x_v1725 xs_v1728))
      end
    end

def lenUL_i39 =
  fn A_v1729 xs_v1730 ⇒
    match xs_v1730 with
    | nilUL_c23  ⇒ (O_c14, nilUL_c23)
    | consUL_c24 x_v1731 xs_v1732 ⇒
      match ((lenUL_i39 NULL) xs_v1732) with
      | (n_v1733, xs_v1734) ⇒
        ((S_c15 n_v1733), (consUL_c24 x_v1731 xs_v1734))
      end
    end

def lenLL_i37 =
  fn A_v1735 xs_v1736 ⇒
    match xs_v1736 with
    | nilLL_c19  ⇒ (O_c14, nilLL_c19)
    | consLL_c20 x_v1737 xs_v1738 ⇒
      match ((lenLL_i37 NULL) xs_v1738) with
      | (n_v1739, xs_v1740) ⇒
        ((S_c15 n_v1739), (consLL_c20 x_v1737 xs_v1740))
      end
    end

def appendUU_i44 =
  fn A_v1741 xs_v1742 ⇒
    ln ys_v1743 ⇒
      match xs_v1742 with
      | nilUU_c25  ⇒ ys_v1743
      | consUU_c26 x_v1744 xs_v1745 ⇒
        (consUU_c26 x_v1744 (((appendUU_i44 NULL) xs_v1745) ys_v1743))
      end

def appendUL_i43 =
  fn A_v1746 xs_v1747 ⇒
    ln ys_v1748 ⇒
      match xs_v1747 with
      | nilUL_c23  ⇒ ys_v1748
      | consUL_c24 x_v1749 xs_v1750 ⇒
        (consUL_c24 x_v1749 (((appendUL_i43 NULL) xs_v1750) ys_v1748))
      end

def appendLL_i41 =
  fn A_v1751 xs_v1752 ⇒
    ln ys_v1753 ⇒
      match xs_v1752 with
      | nilLL_c19  ⇒ ys_v1753
      | consLL_c20 x_v1754 xs_v1755 ⇒
        (consLL_c20 x_v1754 (((appendLL_i41 NULL) xs_v1755) ys_v1753))
      end

def readline_i51 =
  fn __v1756 ⇒
    let ch_v1757 ⇐ open stdin in
    let ch_v1758 ⇐ (send ch_v1757 true_c12) in
    let __v1759 ⇐ recv ch_v1758 in
    match __v1759 with
    | (s_v1760, ch_v1761) ⇒
      let ch_v1762 ⇐ (send ch_v1761 false_c13) in
      let __v1763 ⇐ close⇑ ch_v1762 in return s_v1760
    end

def print_i52 =
  fn s_v1764 ⇒
    let ch_v1765 ⇐ open stdout in
    let ch_v1766 ⇐ (send ch_v1765 true_c12) in
    let ch_v1767 ⇐ (send ch_v1766 s_v1764) in
    let ch_v1768 ⇐ (send ch_v1767 false_c13) in close⇑ ch_v1768

def prerr_i53 =
  fn s_v1769 ⇒
    let ch_v1770 ⇐ open stderr in
    let ch_v1771 ⇐ (send ch_v1770 true_c12) in
    let ch_v1772 ⇐ (send ch_v1771 s_v1769) in
    let ch_v1773 ⇐ (send ch_v1772 false_c13) in close⇑ ch_v1773

main =
  let c_v1774 ⇐
    fork c_v1775 in
      let s_v1776 ⇐ (readline_i51 tt_c11) in
      let c_v1777 ⇐ (send c_v1775 s_v1776) in close⇑ c_v1777
  in
  let __v1778 ⇐ recv c_v1774 in
  match __v1778 with
  | (msg_v1779, c_v1780) ⇒
    let __v1781 ⇐ close⇓ c_v1780 in (print_i52 msg_v1779)
  end

trans12 success--------------------------

fun andb_i25(b1_v1910, b2_v1911) =
  match b1_v1910 with
  | true_c12  ⇒ b2_v1911 | false_c13  ⇒ false_c13
  end

val andbclo_i54 = fn b1_v1912 b2_v1913 ⇒ andb_i25(b1_v1912, b2_v1913)

fun orb_i26(b1_v1914, b2_v1915) =
  match b1_v1914 with
  | true_c12  ⇒ true_c12 | false_c13  ⇒ b2_v1915
  end

val orbclo_i55 = fn b1_v1916 b2_v1917 ⇒ orb_i26(b1_v1916, b2_v1917)

fun notb_i27(b_v1918) =
  match b_v1918 with
  | true_c12  ⇒ false_c13 | false_c13  ⇒ true_c12
  end

val notbclo_i56 = fn b_v1919 ⇒ notb_i27(b_v1919)

fun addn_i28(x_v1920, y_v1921) =
  match x_v1920 with
  | O_c14  ⇒ y_v1921 | S_c15 x_v1922 ⇒ (S_c15 addn_i28(x_v1922, y_v1921))
  end

val addnclo_i57 = fn x_v1923 y_v1924 ⇒ addn_i28(x_v1923, y_v1924)

fun muln_i29(x_v1925, y_v1926) =
  match x_v1925 with
  | O_c14  ⇒ y_v1926
  | S_c15 x_v1927 ⇒ addn_i28(y_v1926, muln_i29(x_v1927, y_v1926))
  end

val mulnclo_i58 = fn x_v1928 y_v1929 ⇒ muln_i29(x_v1928, y_v1929)

fun eqn_i30(x_v1930, y_v1931) =
  match x_v1930 with
  | O_c14  ⇒
    match y_v1931 with
    | O_c14  ⇒ true_c12 | S_c15 __v1932 ⇒ false_c13
    end
  | S_c15 x_v1933 ⇒
    match y_v1931 with
    | O_c14  ⇒ false_c13 | S_c15 y_v1934 ⇒ eqn_i30(x_v1933, y_v1934)
    end
  end

val eqnclo_i59 = fn x_v1935 y_v1936 ⇒ eqn_i30(x_v1935, y_v1936)

fun lten_i31(x_v1937, y_v1938) =
  match x_v1937 with
  | O_c14  ⇒ true_c12
  | S_c15 x_v1939 ⇒
    match y_v1938 with
    | O_c14  ⇒ false_c13 | S_c15 y_v1940 ⇒ lten_i31(x_v1939, y_v1940)
    end
  end

val ltenclo_i60 = fn x_v1941 y_v1942 ⇒ lten_i31(x_v1941, y_v1942)

fun gten_i32(x_v1943, y_v1944) =
  match x_v1943 with
  | O_c14  ⇒
    match y_v1944 with
    | O_c14  ⇒ true_c12 | S_c15 __v1945 ⇒ false_c13
    end
  | S_c15 x_v1946 ⇒
    match y_v1944 with
    | O_c14  ⇒ true_c12 | S_c15 y_v1947 ⇒ gten_i32(x_v1946, y_v1947)
    end
  end

val gtenclo_i61 = fn x_v1948 y_v1949 ⇒ gten_i32(x_v1948, y_v1949)

fun cats_i35(s1_v1950, s2_v1951) =
  match s1_v1950 with
  | EmptyString_c17  ⇒ s2_v1951
  | String_c18 c_v1952 s1_v1953 ⇒
    (String_c18 c_v1952 cats_i35(s1_v1953, s2_v1951))
  end

val catsclo_i62 = fn s1_v1954 s2_v1955 ⇒ cats_i35(s1_v1954, s2_v1955)

fun strlen_i36(s_v1956) =
  match s_v1956 with
  | EmptyString_c17  ⇒ O_c14
  | String_c18 __v1957 s_v1958 ⇒ (S_c15 strlen_i36(s_v1958))
  end

val strlenclo_i63 = fn s_v1959 ⇒ strlen_i36(s_v1959)

fun lenUU_i40(A_v1960, xs_v1961) =
  match xs_v1961 with
  | nilUU_c25  ⇒ (O_c14, nilUU_c25)
  | consUU_c26 x_v1962 xs_v1963 ⇒
    match lenUU_i40(NULL, xs_v1963) with
    | (n_v1964, xs_v1965) ⇒
      ((S_c15 n_v1964), (consUU_c26 x_v1962 xs_v1965))
    end
  end

val lenUUclo_i64 = fn A_v1966 xs_v1967 ⇒ lenUU_i40(A_v1966, xs_v1967)

fun lenUL_i39(A_v1968, xs_v1969) =
  match xs_v1969 with
  | nilUL_c23  ⇒ (O_c14, nilUL_c23)
  | consUL_c24 x_v1970 xs_v1971 ⇒
    match lenUL_i39(NULL, xs_v1971) with
    | (n_v1972, xs_v1973) ⇒
      ((S_c15 n_v1972), (consUL_c24 x_v1970 xs_v1973))
    end
  end

val lenULclo_i65 = fn A_v1974 xs_v1975 ⇒ lenUL_i39(A_v1974, xs_v1975)

fun lenLL_i37(A_v1976, xs_v1977) =
  match xs_v1977 with
  | nilLL_c19  ⇒ (O_c14, nilLL_c19)
  | consLL_c20 x_v1978 xs_v1979 ⇒
    match lenLL_i37(NULL, xs_v1979) with
    | (n_v1980, xs_v1981) ⇒
      ((S_c15 n_v1980), (consLL_c20 x_v1978 xs_v1981))
    end
  end

val lenLLclo_i66 = fn A_v1982 xs_v1983 ⇒ lenLL_i37(A_v1982, xs_v1983)

fun appendUU_i44(A_v1984, xs_v1985, ys_v1986) =
  match xs_v1985 with
  | nilUU_c25  ⇒ ys_v1986
  | consUU_c26 x_v1987 xs_v1988 ⇒
    (consUU_c26 x_v1987 appendUU_i44(NULL, xs_v1988, ys_v1986))
  end

val appendUUclo_i67 =
  fn A_v1989 xs_v1990 ⇒
    ln ys_v1991 ⇒ appendUU_i44(A_v1989, xs_v1990, ys_v1991)

fun appendUL_i43(A_v1992, xs_v1993, ys_v1994) =
  match xs_v1993 with
  | nilUL_c23  ⇒ ys_v1994
  | consUL_c24 x_v1995 xs_v1996 ⇒
    (consUL_c24 x_v1995 appendUL_i43(NULL, xs_v1996, ys_v1994))
  end

val appendULclo_i68 =
  fn A_v1997 xs_v1998 ⇒
    ln ys_v1999 ⇒ appendUL_i43(A_v1997, xs_v1998, ys_v1999)

fun appendLL_i41(A_v2000, xs_v2001, ys_v2002) =
  match xs_v2001 with
  | nilLL_c19  ⇒ ys_v2002
  | consLL_c20 x_v2003 xs_v2004 ⇒
    (consLL_c20 x_v2003 appendLL_i41(NULL, xs_v2004, ys_v2002))
  end

val appendLLclo_i69 =
  fn A_v2005 xs_v2006 ⇒
    ln ys_v2007 ⇒ appendLL_i41(A_v2005, xs_v2006, ys_v2007)

fun readline_i51(__v2008) =
  ln __v2009 ⇒
    let ch_v2010 = (ln __v2011 ⇒ open stdin) NULL in
    let ch_v2012 =
      ((fn x_v2013 ⇒ ln __v2014 ⇒ send(ch_v2010, x_v2013)) true_c12) NULL
    in
    let __v2015 = (ln __v2016 ⇒ recv(ch_v2012)) NULL in
    (match __v2015 with
     | (s_v2017, ch_v2018) ⇒
       ln __v2019 ⇒
         let ch_v2020 =
           ((fn x_v2021 ⇒ ln __v2022 ⇒ send(ch_v2018, x_v2021)) false_c13)
             NULL
         in
         let __v2023 = (ln __v2024 ⇒ let __v2025 = ch_v2020 in tt_c11) NULL
         in (ln __v2026 ⇒ s_v2017) NULL
     end) NULL

val readlineclo_i70 = fn __v2027 ⇒ readline_i51(__v2027)

fun print_i52(s_v2028) =
  ln __v2029 ⇒
    let ch_v2030 = (ln __v2031 ⇒ open stdout) NULL in
    let ch_v2032 =
      ((fn x_v2033 ⇒ ln __v2034 ⇒ send(ch_v2030, x_v2033)) true_c12) NULL
    in
    let ch_v2035 =
      ((fn x_v2036 ⇒ ln __v2037 ⇒ send(ch_v2032, x_v2036)) s_v2028) NULL
    in
    let ch_v2038 =
      ((fn x_v2039 ⇒ ln __v2040 ⇒ send(ch_v2035, x_v2039)) false_c13)
        NULL
    in (ln __v2041 ⇒ let __v2042 = ch_v2038 in tt_c11) NULL

val printclo_i71 = fn s_v2043 ⇒ print_i52(s_v2043)

fun prerr_i53(s_v2044) =
  ln __v2045 ⇒
    let ch_v2046 = (ln __v2047 ⇒ open stderr) NULL in
    let ch_v2048 =
      ((fn x_v2049 ⇒ ln __v2050 ⇒ send(ch_v2046, x_v2049)) true_c12) NULL
    in
    let ch_v2051 =
      ((fn x_v2052 ⇒ ln __v2053 ⇒ send(ch_v2048, x_v2052)) s_v2044) NULL
    in
    let ch_v2054 =
      ((fn x_v2055 ⇒ ln __v2056 ⇒ send(ch_v2051, x_v2055)) false_c13)
        NULL
    in (ln __v2057 ⇒ let __v2058 = ch_v2054 in tt_c11) NULL

val prerrclo_i72 = fn s_v2059 ⇒ prerr_i53(s_v2059)

main =
  (ln __v2060 ⇒
     let c_v2061 =
       (ln __v2062 ⇒
          fork c_v2063 in
            (ln __v2064 ⇒
               let s_v2065 = (readline_i51(tt_c11)) NULL in
               let c_v2066 =
                 ((fn x_v2067 ⇒ ln __v2068 ⇒ send(c_v2063, x_v2067))
                    s_v2065)
                   NULL
               in (ln __v2069 ⇒ let __v2070 = c_v2066 in tt_c11) NULL)
              NULL)
         NULL
     in
     let __v2071 = (ln __v2072 ⇒ recv(c_v2061)) NULL in
     (match __v2071 with
      | (msg_v2073, c_v2074) ⇒
        ln __v2075 ⇒
          let __v2076 = (ln __v2077 ⇒ close(c_v2074)) NULL in
          (print_i52(msg_v2073)) NULL
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i25(b1_v2256, b2_v2257) =
  match b1_v2256 with
  | true_c12  ⇒ b2_v2257 | false_c13  ⇒ false_c13
  end

val andbclo_i54 = fn b1_v2258 b2_v2259 ⇒ andb_i25(b1_v2258, b2_v2259)

fun orb_i26(b1_v2260, b2_v2261) =
  match b1_v2260 with
  | true_c12  ⇒ true_c12 | false_c13  ⇒ b2_v2261
  end

val orbclo_i55 = fn b1_v2262 b2_v2263 ⇒ orb_i26(b1_v2262, b2_v2263)

fun notb_i27(b_v2264) =
  match b_v2264 with
  | true_c12  ⇒ false_c13 | false_c13  ⇒ true_c12
  end

val notbclo_i56 = fn b_v2265 ⇒ notb_i27(b_v2265)

fun addn_i28(x_v2266, y_v2267) =
  match x_v2266 with
  | O_c14  ⇒ y_v2267 | S_c15 x_v2268 ⇒ (S_c15 addn_i28(x_v2268, y_v2267))
  end

val addnclo_i57 = fn x_v2269 y_v2270 ⇒ addn_i28(x_v2269, y_v2270)

fun muln_i29(x_v2271, y_v2272) =
  match x_v2271 with
  | O_c14  ⇒ y_v2272
  | S_c15 x_v2273 ⇒ addn_i28(y_v2272, muln_i29(x_v2273, y_v2272))
  end

val mulnclo_i58 = fn x_v2274 y_v2275 ⇒ muln_i29(x_v2274, y_v2275)

fun eqn_i30(x_v2276, y_v2277) =
  match x_v2276 with
  | O_c14  ⇒
    match y_v2277 with
    | O_c14  ⇒ true_c12 | S_c15 __v2278 ⇒ false_c13
    end
  | S_c15 x_v2279 ⇒
    match y_v2277 with
    | O_c14  ⇒ false_c13 | S_c15 y_v2280 ⇒ eqn_i30(x_v2279, y_v2280)
    end
  end

val eqnclo_i59 = fn x_v2281 y_v2282 ⇒ eqn_i30(x_v2281, y_v2282)

fun lten_i31(x_v2283, y_v2284) =
  match x_v2283 with
  | O_c14  ⇒ true_c12
  | S_c15 x_v2285 ⇒
    match y_v2284 with
    | O_c14  ⇒ false_c13 | S_c15 y_v2286 ⇒ lten_i31(x_v2285, y_v2286)
    end
  end

val ltenclo_i60 = fn x_v2287 y_v2288 ⇒ lten_i31(x_v2287, y_v2288)

fun gten_i32(x_v2289, y_v2290) =
  match x_v2289 with
  | O_c14  ⇒
    match y_v2290 with
    | O_c14  ⇒ true_c12 | S_c15 __v2291 ⇒ false_c13
    end
  | S_c15 x_v2292 ⇒
    match y_v2290 with
    | O_c14  ⇒ true_c12 | S_c15 y_v2293 ⇒ gten_i32(x_v2292, y_v2293)
    end
  end

val gtenclo_i61 = fn x_v2294 y_v2295 ⇒ gten_i32(x_v2294, y_v2295)

fun cats_i35(s1_v2296, s2_v2297) =
  match s1_v2296 with
  | EmptyString_c17  ⇒ s2_v2297
  | String_c18 c_v2298 s1_v2299 ⇒
    (String_c18 c_v2298 cats_i35(s1_v2299, s2_v2297))
  end

val catsclo_i62 = fn s1_v2300 s2_v2301 ⇒ cats_i35(s1_v2300, s2_v2301)

fun strlen_i36(s_v2302) =
  match s_v2302 with
  | EmptyString_c17  ⇒ O_c14
  | String_c18 __v2303 s_v2304 ⇒ (S_c15 strlen_i36(s_v2304))
  end

val strlenclo_i63 = fn s_v2305 ⇒ strlen_i36(s_v2305)

fun lenUU_i40(A_v2306, xs_v2307) =
  match xs_v2307 with
  | nilUU_c25  ⇒ (O_c14, nilUU_c25)
  | consUU_c26 x_v2308 xs_v2309 ⇒
    match lenUU_i40(NULL, xs_v2309) with
    | (n_v2310, xs_v2311) ⇒
      ((S_c15 n_v2310), (consUU_c26 x_v2308 xs_v2311))
    end
  end

val lenUUclo_i64 = fn A_v2312 xs_v2313 ⇒ lenUU_i40(A_v2312, xs_v2313)

fun lenUL_i39(A_v2314, xs_v2315) =
  match xs_v2315 with
  | nilUL_c23  ⇒ (O_c14, nilUL_c23)
  | consUL_c24 x_v2316 xs_v2317 ⇒
    match lenUL_i39(NULL, xs_v2317) with
    | (n_v2318, xs_v2319) ⇒
      ((S_c15 n_v2318), (consUL_c24 x_v2316 xs_v2319))
    end
  end

val lenULclo_i65 = fn A_v2320 xs_v2321 ⇒ lenUL_i39(A_v2320, xs_v2321)

fun lenLL_i37(A_v2322, xs_v2323) =
  match xs_v2323 with
  | nilLL_c19  ⇒ (O_c14, nilLL_c19)
  | consLL_c20 x_v2324 xs_v2325 ⇒
    match lenLL_i37(NULL, xs_v2325) with
    | (n_v2326, xs_v2327) ⇒
      ((S_c15 n_v2326), (consLL_c20 x_v2324 xs_v2327))
    end
  end

val lenLLclo_i66 = fn A_v2328 xs_v2329 ⇒ lenLL_i37(A_v2328, xs_v2329)

fun appendUU_i44(A_v2330, xs_v2331, ys_v2332) =
  match xs_v2331 with
  | nilUU_c25  ⇒ ys_v2332
  | consUU_c26 x_v2333 xs_v2334 ⇒
    (consUU_c26 x_v2333 appendUU_i44(NULL, xs_v2334, ys_v2332))
  end

val appendUUclo_i67 =
  fn A_v2335 xs_v2336 ⇒
    ln ys_v2337 ⇒ appendUU_i44(A_v2335, xs_v2336, ys_v2337)

fun appendUL_i43(A_v2338, xs_v2339, ys_v2340) =
  match xs_v2339 with
  | nilUL_c23  ⇒ ys_v2340
  | consUL_c24 x_v2341 xs_v2342 ⇒
    (consUL_c24 x_v2341 appendUL_i43(NULL, xs_v2342, ys_v2340))
  end

val appendULclo_i68 =
  fn A_v2343 xs_v2344 ⇒
    ln ys_v2345 ⇒ appendUL_i43(A_v2343, xs_v2344, ys_v2345)

fun appendLL_i41(A_v2346, xs_v2347, ys_v2348) =
  match xs_v2347 with
  | nilLL_c19  ⇒ ys_v2348
  | consLL_c20 x_v2349 xs_v2350 ⇒
    (consLL_c20 x_v2349 appendLL_i41(NULL, xs_v2350, ys_v2348))
  end

val appendLLclo_i69 =
  fn A_v2351 xs_v2352 ⇒
    ln ys_v2353 ⇒ appendLL_i41(A_v2351, xs_v2352, ys_v2353)

fun readline_i51(__v2354) =
  ln __v2355 ⇒
    let ch_v2356 = open stdin in
    let ch_v2357 = send(ch_v2356, true_c12) in
    let __v2358 = recv(ch_v2357) in
    (match __v2358 with
     | (s_v2359, ch_v2360) ⇒
       ln __v2361 ⇒
         let ch_v2362 = send(ch_v2360, false_c13) in
         let __v2363 = let __v2364 = ch_v2362 in tt_c11 in s_v2359
     end) NULL

val readlineclo_i70 = fn __v2365 ⇒ readline_i51(__v2365)

fun print_i52(s_v2366) =
  ln __v2367 ⇒
    let ch_v2368 = open stdout in
    let ch_v2369 = send(ch_v2368, true_c12) in
    let ch_v2370 = send(ch_v2369, s_v2366) in
    let ch_v2371 = send(ch_v2370, false_c13) in
    let __v2372 = ch_v2371 in tt_c11

val printclo_i71 = fn s_v2373 ⇒ print_i52(s_v2373)

fun prerr_i53(s_v2374) =
  ln __v2375 ⇒
    let ch_v2376 = open stderr in
    let ch_v2377 = send(ch_v2376, true_c12) in
    let ch_v2378 = send(ch_v2377, s_v2374) in
    let ch_v2379 = send(ch_v2378, false_c13) in
    let __v2380 = ch_v2379 in tt_c11

val prerrclo_i72 = fn s_v2381 ⇒ prerr_i53(s_v2381)

main =
  let c_v2382 =
    fork c_v2383 in
      let s_v2384 = (readline_i51(tt_c11)) NULL in
      let c_v2385 = send(c_v2383, s_v2384) in let __v2386 = c_v2385 in tt_c11
  in
  let __v2387 = recv(c_v2382) in
  (match __v2387 with
   | (msg_v2388, c_v2389) ⇒
     ln __v2390 ⇒
       let __v2391 = close(c_v2389) in (print_i52(msg_v2388)) NULL
   end) NULL

trans3e success--------------------------

trans34 success--------------------------

