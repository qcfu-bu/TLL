parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v109 : bool_d2) (b2_v110 : bool_d2) ⇒
    match b1_v109 as __v111 in ??1 with
    | true_c2  ⇒ b2_v110 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v114 : bool_d2) (b2_v115 : bool_d2) ⇒
    match b1_v114 as __v116 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v115
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v118 : bool_d2) ⇒
    match b_v118 as __v119 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v120 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v123 : nat_d3) (y_v124 : nat_d3) ⇒
    match x_v123 as __v125 in ??4 with
    | O_c4  ⇒ y_v124 | S_c5 x_v126 ⇒ (S_c5‹› (addn_i4 x_v126 y_v124))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v129 : nat_d3) (y_v130 : nat_d3) ⇒
    match x_v129 as __v131 in ??5 with
    | O_c4  ⇒ y_v130
    | S_c5 x_v132 ⇒ (addn_i4 y_v130 (muln_i5 x_v132 y_v130))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v135 : nat_d3) (y_v136 : nat_d3) ⇒
    match x_v135 as __v137 in ??6 with
    | O_c4  ⇒
      match y_v136 as __v138 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v139 ⇒ false_c3‹›
      end
    | S_c5 x_v140 ⇒
      match y_v136 as __v141 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v142 ⇒ (eqn_i6 x_v140 y_v142)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v145 : nat_d3) (y_v146 : nat_d3) ⇒
    match x_v145 as __v147 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v148 ⇒
      match y_v146 as __v149 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v150 ⇒ (lten_i7 x_v148 y_v150)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v153 : nat_d3) (y_v154 : nat_d3) ⇒
    match x_v153 as __v155 in ??11 with
    | O_c4  ⇒
      match y_v154 as __v156 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v157 ⇒ false_c3‹›
      end
    | S_c5 x_v158 ⇒
      match y_v154 as __v159 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v160 ⇒ (gten_i8 x_v158 y_v160)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v163 : nat_d3) (y_v164 : nat_d3) ⇒
    match x_v163 as __v165 in ??14 with
    | O_c4  ⇒
      match y_v164 as __v166 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v167 ⇒ true_c2‹›
      end
    | S_c5 x_v168 ⇒
      match y_v164 as __v169 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v170 ⇒ (ltn_i9 x_v168 y_v170)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v173 : nat_d3) (y_v174 : nat_d3) ⇒
    match x_v173 as __v175 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v176 ⇒
      match y_v174 as __v177 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v178 ⇒ (gtn_i10 x_v176 y_v178)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v179 : bool_d2) (b1_v180 : bool_d2) (b2_v181 : bool_d2)
    (b3_v182 : bool_d2) (b4_v183 : bool_d2) (b5_v184 : bool_d2)
    (b6_v185 : bool_d2) (b7_v186 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v187 : ascii_d4) (s_v188 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v191 : string_d5) (s2_v192 : string_d5) ⇒
    match s1_v191 as __v193 in ??19 with
    | EmptyString_c7  ⇒ s2_v192
    | String_c8 c_v194 s1_v195 ⇒
      (String_c8‹› c_v194 (cats_i11 s1_v195 s2_v192))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v197 : string_d5) ⇒
    match s_v197 as __v198 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v199 s_v200 ⇒ (S_c5‹› (strlen_i12 s_v200))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v202 : unit_d1) ⇒
    ⇑(b_v203 : bool_d2) ⇒
      match b_v203 as __v204 in ??21 with
      | true_c2  ⇒ ⇓(__v205 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v207 : unit_d1) ⇒
    ⇑(b_v208 : bool_d2) ⇒
      match b_v208 as __v209 in ??22 with
      | true_c2  ⇒ ⇑(__v210 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v212 : unit_d1) ⇒
    ⇑(b_v213 : bool_d2) ⇒
      match b_v213 as __v214 in ??23 with
      | true_c2  ⇒ ⇑(__v215 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v217 : unit_d1) ⇒
    let ch_v218 ⇐ open stdin in
    let ch_v219 ⇐ (send ch_v218 true_c2‹›) in
    let __v220 ⇐ recv ch_v219 in
    match __v220 as __v221 in ??24 with
    | ⟨s_v222, ch_v223⟩ ⇒
      let ch_v224 ⇐ (send ch_v223 false_c3‹›) in
      let __v225 ⇐ close ch_v224 in return s_v222
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v227 : string_d5) ⇒
    let ch_v228 ⇐ open stdout in
    let ch_v229 ⇐ (send ch_v228 true_c2‹›) in
    let ch_v230 ⇐ (send ch_v229 s_v227) in
    let ch_v231 ⇐ (send ch_v230 false_c3‹›) in close ch_v231

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v233 : string_d5) ⇒
    let ch_v234 ⇐ open stderr in
    let ch_v235 ⇐ (send ch_v234 true_c2‹›) in
    let ch_v236 ⇐ (send ch_v235 s_v233) in
    let ch_v237 ⇐ (send ch_v236 false_c3‹›) in close ch_v237

program test_i22 : unit_d1 → unit_d1 → unit_d1 =
  fn (x_v240 : unit_d1) (y_v241 : unit_d1) ⇒
    let test1_v242 = (test_i22 tt_c1‹›) in (test1_v242 tt_c1‹›)

program main_i23 : IO unit_d1 =
  let x_v243 = return tt_c1‹› in let v_v244 ⇐ x_v243 in return v_v244

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v875 : bool_d2) (b2_v876 : bool_d2) ⇒
    match b1_v875 as __v877 in bool_d2 with
    | true_c2  ⇒ b2_v876 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v880 : bool_d2) (b2_v881 : bool_d2) ⇒
    match b1_v880 as __v882 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v881
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v884 : bool_d2) ⇒
    match b_v884 as __v885 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v886 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v889 : nat_d3) (y_v890 : nat_d3) ⇒
    match x_v889 as __v891 in nat_d3 with
    | O_c4  ⇒ y_v890 | S_c5 x_v892 ⇒ (S_c5‹› (addn_i4 x_v892 y_v890))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v895 : nat_d3) (y_v896 : nat_d3) ⇒
    match x_v895 as __v897 in nat_d3 with
    | O_c4  ⇒ y_v896
    | S_c5 x_v898 ⇒ (addn_i4 y_v896 (muln_i5 x_v898 y_v896))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v901 : nat_d3) (y_v902 : nat_d3) ⇒
    match x_v901 as __v903 in bool_d2 with
    | O_c4  ⇒
      match y_v902 as __v904 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v905 ⇒ false_c3‹›
      end
    | S_c5 x_v906 ⇒
      match y_v902 as __v907 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v908 ⇒ (eqn_i6 x_v906 y_v908)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v911 : nat_d3) (y_v912 : nat_d3) ⇒
    match x_v911 as __v913 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v914 ⇒
      match y_v912 as __v915 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v916 ⇒ (lten_i7 x_v914 y_v916)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v919 : nat_d3) (y_v920 : nat_d3) ⇒
    match x_v919 as __v921 in bool_d2 with
    | O_c4  ⇒
      match y_v920 as __v922 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v923 ⇒ false_c3‹›
      end
    | S_c5 x_v924 ⇒
      match y_v920 as __v925 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v926 ⇒ (gten_i8 x_v924 y_v926)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v929 : nat_d3) (y_v930 : nat_d3) ⇒
    match x_v929 as __v931 in bool_d2 with
    | O_c4  ⇒
      match y_v930 as __v932 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v933 ⇒ true_c2‹›
      end
    | S_c5 x_v934 ⇒
      match y_v930 as __v935 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v936 ⇒ (ltn_i9 x_v934 y_v936)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v939 : nat_d3) (y_v940 : nat_d3) ⇒
    match x_v939 as __v941 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v942 ⇒
      match y_v940 as __v943 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v944 ⇒ (gtn_i10 x_v942 y_v944)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v945 : bool_d2) (b1_v946 : bool_d2) (b2_v947 : bool_d2)
    (b3_v948 : bool_d2) (b4_v949 : bool_d2) (b5_v950 : bool_d2)
    (b6_v951 : bool_d2) (b7_v952 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v953 : ascii_d4) (s_v954 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v957 : string_d5) (s2_v958 : string_d5) ⇒
    match s1_v957 as __v959 in string_d5 with
    | EmptyString_c7  ⇒ s2_v958
    | String_c8 c_v960 s1_v961 ⇒
      (String_c8‹› c_v960 (cats_i11 s1_v961 s2_v958))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v963 : string_d5) ⇒
    match s_v963 as __v964 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v965 s_v966 ⇒ (S_c5‹› (strlen_i12 s_v966))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v968 : unit_d1) ⇒
    ⇑(b_v969 : bool_d2) ⇒
      match b_v969 as __v970 in proto with
      | true_c2  ⇒ ⇓(__v971 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v973 : unit_d1) ⇒
    ⇑(b_v974 : bool_d2) ⇒
      match b_v974 as __v975 in proto with
      | true_c2  ⇒ ⇑(__v976 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v978 : unit_d1) ⇒
    ⇑(b_v979 : bool_d2) ⇒
      match b_v979 as __v980 in proto with
      | true_c2  ⇒ ⇑(__v981 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v983 : unit_d1) ⇒
    let ch_v984 ⇐ open stdin in
    let ch_v985 ⇐ (send ch_v984 true_c2‹›) in
    let __v986 ⇐ recv ch_v985 in
    match __v986 as __v987 in IO string_d5 with
    | ⟨s_v988, ch_v989⟩ ⇒
      let ch_v990 ⇐ (send ch_v989 false_c3‹›) in
      let __v991 ⇐ close ch_v990 in return s_v988
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v993 : string_d5) ⇒
    let ch_v994 ⇐ open stdout in
    let ch_v995 ⇐ (send ch_v994 true_c2‹›) in
    let ch_v996 ⇐ (send ch_v995 s_v993) in
    let ch_v997 ⇐ (send ch_v996 false_c3‹›) in close ch_v997

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v999 : string_d5) ⇒
    let ch_v1000 ⇐ open stderr in
    let ch_v1001 ⇐ (send ch_v1000 true_c2‹›) in
    let ch_v1002 ⇐ (send ch_v1001 s_v999) in
    let ch_v1003 ⇐ (send ch_v1002 false_c3‹›) in close ch_v1003

program test_i22 : unit_d1 → unit_d1 → unit_d1 =
  fn (x_v1006 : unit_d1) (y_v1007 : unit_d1) ⇒
    let test1_v1008 = (test_i22 tt_c1‹›) in (test1_v1008 tt_c1‹›)

program main_i23 : IO unit_d1 =
  let x_v1009 = return tt_c1‹› in
  let v_v1010 ⇐ x_v1009 in return v_v1010

trans1e success--------------------------

data unit_d6 =
| tt_c9 of size(0)

data bool_d7 =
| true_c10 of size(0) | false_c11 of size(0)

def andb_i24 =
  fn b1_v1143 b2_v1144 ⇒
    match b1_v1143 with
    | true_c10  ⇒ b2_v1144 | false_c11  ⇒ false_c11
    end

def orb_i25 =
  fn b1_v1145 b2_v1146 ⇒
    match b1_v1145 with
    | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1146
    end

def notb_i26 =
  fn b_v1147 ⇒
    match b_v1147 with
    | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
    end

data nat_d8 =
| O_c12 of size(0) | S_c13 of size(1)

def addn_i27 =
  fn x_v1148 y_v1149 ⇒
    match x_v1148 with
    | O_c12  ⇒ y_v1149
    | S_c13 x_v1150 ⇒ (S_c13 ((addn_i27 x_v1150) y_v1149))
    end

def muln_i28 =
  fn x_v1151 y_v1152 ⇒
    match x_v1151 with
    | O_c12  ⇒ y_v1152
    | S_c13 x_v1153 ⇒ ((addn_i27 y_v1152) ((muln_i28 x_v1153) y_v1152))
    end

def eqn_i29 =
  fn x_v1154 y_v1155 ⇒
    match x_v1154 with
    | O_c12  ⇒
      match y_v1155 with
      | O_c12  ⇒ true_c10 | S_c13 __v1156 ⇒ false_c11
      end
    | S_c13 x_v1157 ⇒
      match y_v1155 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1158 ⇒ ((eqn_i29 x_v1157) y_v1158)
      end
    end

def lten_i30 =
  fn x_v1159 y_v1160 ⇒
    match x_v1159 with
    | O_c12  ⇒ true_c10
    | S_c13 x_v1161 ⇒
      match y_v1160 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1162 ⇒ ((lten_i30 x_v1161) y_v1162)
      end
    end

def gten_i31 =
  fn x_v1163 y_v1164 ⇒
    match x_v1163 with
    | O_c12  ⇒
      match y_v1164 with
      | O_c12  ⇒ true_c10 | S_c13 __v1165 ⇒ false_c11
      end
    | S_c13 x_v1166 ⇒
      match y_v1164 with
      | O_c12  ⇒ true_c10 | S_c13 y_v1167 ⇒ ((gten_i31 x_v1166) y_v1167)
      end
    end

data ascii_d9 =
| Ascii_c14 of size(8)

data string_d10 =
| EmptyString_c15 of size(0) | String_c16 of size(2)

def cats_i34 =
  fn s1_v1168 s2_v1169 ⇒
    match s1_v1168 with
    | EmptyString_c15  ⇒ s2_v1169
    | String_c16 c_v1170 s1_v1171 ⇒
      (String_c16 c_v1170 ((cats_i34 s1_v1171) s2_v1169))
    end

def strlen_i35 =
  fn s_v1172 ⇒
    match s_v1172 with
    | EmptyString_c15  ⇒ O_c12
    | String_c16 __v1173 s_v1174 ⇒ (S_c13 (strlen_i35 s_v1174))
    end

def readline_i42 =
  fn __v1175 ⇒
    let ch_v1176 ⇐ open stdin in
    let ch_v1177 ⇐ (send ch_v1176 true_c10) in
    let __v1178 ⇐ recv ch_v1177 in
    match __v1178 with
    | (s_v1179, ch_v1180) ⇒
      let ch_v1181 ⇐ (send ch_v1180 false_c11) in
      let __v1182 ⇐ close⇑ ch_v1181 in return s_v1179
    end

def print_i43 =
  fn s_v1183 ⇒
    let ch_v1184 ⇐ open stdout in
    let ch_v1185 ⇐ (send ch_v1184 true_c10) in
    let ch_v1186 ⇐ (send ch_v1185 s_v1183) in
    let ch_v1187 ⇐ (send ch_v1186 false_c11) in close⇑ ch_v1187

def prerr_i44 =
  fn s_v1188 ⇒
    let ch_v1189 ⇐ open stderr in
    let ch_v1190 ⇐ (send ch_v1189 true_c10) in
    let ch_v1191 ⇐ (send ch_v1190 s_v1188) in
    let ch_v1192 ⇐ (send ch_v1191 false_c11) in close⇑ ch_v1192

def test_i45 =
  fn x_v1193 y_v1194 ⇒
    let test1_v1195 = (test_i45 tt_c9) in (test1_v1195 tt_c9)

main =
  let x_v1196 = return tt_c9 in let v_v1197 ⇐ x_v1196 in return v_v1197

trans12 success--------------------------

fun andb_i24(b1_v1287, b2_v1288) =
  match b1_v1287 with
  | true_c10  ⇒ b2_v1288 | false_c11  ⇒ false_c11
  end

val andbclo_i46 = fn b1_v1289 b2_v1290 ⇒ andb_i24(b1_v1289, b2_v1290)

fun orb_i25(b1_v1291, b2_v1292) =
  match b1_v1291 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1292
  end

val orbclo_i47 = fn b1_v1293 b2_v1294 ⇒ orb_i25(b1_v1293, b2_v1294)

fun notb_i26(b_v1295) =
  match b_v1295 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i48 = fn b_v1296 ⇒ notb_i26(b_v1296)

fun addn_i27(x_v1297, y_v1298) =
  match x_v1297 with
  | O_c12  ⇒ y_v1298 | S_c13 x_v1299 ⇒ (S_c13 addn_i27(x_v1299, y_v1298))
  end

val addnclo_i49 = fn x_v1300 y_v1301 ⇒ addn_i27(x_v1300, y_v1301)

fun muln_i28(x_v1302, y_v1303) =
  match x_v1302 with
  | O_c12  ⇒ y_v1303
  | S_c13 x_v1304 ⇒ addn_i27(y_v1303, muln_i28(x_v1304, y_v1303))
  end

val mulnclo_i50 = fn x_v1305 y_v1306 ⇒ muln_i28(x_v1305, y_v1306)

fun eqn_i29(x_v1307, y_v1308) =
  match x_v1307 with
  | O_c12  ⇒
    match y_v1308 with
    | O_c12  ⇒ true_c10 | S_c13 __v1309 ⇒ false_c11
    end
  | S_c13 x_v1310 ⇒
    match y_v1308 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1311 ⇒ eqn_i29(x_v1310, y_v1311)
    end
  end

val eqnclo_i51 = fn x_v1312 y_v1313 ⇒ eqn_i29(x_v1312, y_v1313)

fun lten_i30(x_v1314, y_v1315) =
  match x_v1314 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1316 ⇒
    match y_v1315 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1317 ⇒ lten_i30(x_v1316, y_v1317)
    end
  end

val ltenclo_i52 = fn x_v1318 y_v1319 ⇒ lten_i30(x_v1318, y_v1319)

fun gten_i31(x_v1320, y_v1321) =
  match x_v1320 with
  | O_c12  ⇒
    match y_v1321 with
    | O_c12  ⇒ true_c10 | S_c13 __v1322 ⇒ false_c11
    end
  | S_c13 x_v1323 ⇒
    match y_v1321 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1324 ⇒ gten_i31(x_v1323, y_v1324)
    end
  end

val gtenclo_i53 = fn x_v1325 y_v1326 ⇒ gten_i31(x_v1325, y_v1326)

fun cats_i34(s1_v1327, s2_v1328) =
  match s1_v1327 with
  | EmptyString_c15  ⇒ s2_v1328
  | String_c16 c_v1329 s1_v1330 ⇒
    (String_c16 c_v1329 cats_i34(s1_v1330, s2_v1328))
  end

val catsclo_i54 = fn s1_v1331 s2_v1332 ⇒ cats_i34(s1_v1331, s2_v1332)

fun strlen_i35(s_v1333) =
  match s_v1333 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1334 s_v1335 ⇒ (S_c13 strlen_i35(s_v1335))
  end

val strlenclo_i55 = fn s_v1336 ⇒ strlen_i35(s_v1336)

fun readline_i42(__v1337) =
  ln __v1338 ⇒
    let ch_v1339 = (ln __v1340 ⇒ open stdin) NULL in
    let ch_v1341 =
      ((fn x_v1342 ⇒ ln __v1343 ⇒ send(ch_v1339, x_v1342)) true_c10) NULL
    in
    let __v1344 = (ln __v1345 ⇒ recv(ch_v1341)) NULL in
    (match __v1344 with
     | (s_v1346, ch_v1347) ⇒
       ln __v1348 ⇒
         let ch_v1349 =
           ((fn x_v1350 ⇒ ln __v1351 ⇒ send(ch_v1347, x_v1350)) false_c11)
             NULL
         in
         let __v1352 = (ln __v1353 ⇒ let x_v1354 = ch_v1349 in tt_c9) NULL
         in (ln __v1355 ⇒ s_v1346) NULL
     end) NULL

val readlineclo_i56 = fn __v1356 ⇒ readline_i42(__v1356)

fun print_i43(s_v1357) =
  ln __v1358 ⇒
    let ch_v1359 = (ln __v1360 ⇒ open stdout) NULL in
    let ch_v1361 =
      ((fn x_v1362 ⇒ ln __v1363 ⇒ send(ch_v1359, x_v1362)) true_c10) NULL
    in
    let ch_v1364 =
      ((fn x_v1365 ⇒ ln __v1366 ⇒ send(ch_v1361, x_v1365)) s_v1357) NULL
    in
    let ch_v1367 =
      ((fn x_v1368 ⇒ ln __v1369 ⇒ send(ch_v1364, x_v1368)) false_c11)
        NULL
    in (ln __v1370 ⇒ let x_v1371 = ch_v1367 in tt_c9) NULL

val printclo_i57 = fn s_v1372 ⇒ print_i43(s_v1372)

fun prerr_i44(s_v1373) =
  ln __v1374 ⇒
    let ch_v1375 = (ln __v1376 ⇒ open stderr) NULL in
    let ch_v1377 =
      ((fn x_v1378 ⇒ ln __v1379 ⇒ send(ch_v1375, x_v1378)) true_c10) NULL
    in
    let ch_v1380 =
      ((fn x_v1381 ⇒ ln __v1382 ⇒ send(ch_v1377, x_v1381)) s_v1373) NULL
    in
    let ch_v1383 =
      ((fn x_v1384 ⇒ ln __v1385 ⇒ send(ch_v1380, x_v1384)) false_c11)
        NULL
    in (ln __v1386 ⇒ let x_v1387 = ch_v1383 in tt_c9) NULL

val prerrclo_i58 = fn s_v1388 ⇒ prerr_i44(s_v1388)

fun test_i45(x_v1389, y_v1390) =
  let test1_v1391 = (testclo_i59) tt_c9 in (test1_v1391) tt_c9

val testclo_i59 = fn x_v1392 y_v1393 ⇒ test_i45(x_v1392, y_v1393)

main =
  (let x_v1394 = ln __v1395 ⇒ tt_c9 in
   ln __v1396 ⇒
     let v_v1397 = (x_v1394) NULL in (ln __v1398 ⇒ v_v1397) NULL)
    NULL

trans23 success--------------------------

fun andb_i24(b1_v1519, b2_v1520) =
  match b1_v1519 with
  | true_c10  ⇒ b2_v1520 | false_c11  ⇒ false_c11
  end

val andbclo_i46 = fn b1_v1521 b2_v1522 ⇒ andb_i24(b1_v1521, b2_v1522)

fun orb_i25(b1_v1523, b2_v1524) =
  match b1_v1523 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1524
  end

val orbclo_i47 = fn b1_v1525 b2_v1526 ⇒ orb_i25(b1_v1525, b2_v1526)

fun notb_i26(b_v1527) =
  match b_v1527 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i48 = fn b_v1528 ⇒ notb_i26(b_v1528)

fun addn_i27(x_v1529, y_v1530) =
  match x_v1529 with
  | O_c12  ⇒ y_v1530 | S_c13 x_v1531 ⇒ (S_c13 addn_i27(x_v1531, y_v1530))
  end

val addnclo_i49 = fn x_v1532 y_v1533 ⇒ addn_i27(x_v1532, y_v1533)

fun muln_i28(x_v1534, y_v1535) =
  match x_v1534 with
  | O_c12  ⇒ y_v1535
  | S_c13 x_v1536 ⇒ addn_i27(y_v1535, muln_i28(x_v1536, y_v1535))
  end

val mulnclo_i50 = fn x_v1537 y_v1538 ⇒ muln_i28(x_v1537, y_v1538)

fun eqn_i29(x_v1539, y_v1540) =
  match x_v1539 with
  | O_c12  ⇒
    match y_v1540 with
    | O_c12  ⇒ true_c10 | S_c13 __v1541 ⇒ false_c11
    end
  | S_c13 x_v1542 ⇒
    match y_v1540 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1543 ⇒ eqn_i29(x_v1542, y_v1543)
    end
  end

val eqnclo_i51 = fn x_v1544 y_v1545 ⇒ eqn_i29(x_v1544, y_v1545)

fun lten_i30(x_v1546, y_v1547) =
  match x_v1546 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1548 ⇒
    match y_v1547 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1549 ⇒ lten_i30(x_v1548, y_v1549)
    end
  end

val ltenclo_i52 = fn x_v1550 y_v1551 ⇒ lten_i30(x_v1550, y_v1551)

fun gten_i31(x_v1552, y_v1553) =
  match x_v1552 with
  | O_c12  ⇒
    match y_v1553 with
    | O_c12  ⇒ true_c10 | S_c13 __v1554 ⇒ false_c11
    end
  | S_c13 x_v1555 ⇒
    match y_v1553 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1556 ⇒ gten_i31(x_v1555, y_v1556)
    end
  end

val gtenclo_i53 = fn x_v1557 y_v1558 ⇒ gten_i31(x_v1557, y_v1558)

fun cats_i34(s1_v1559, s2_v1560) =
  match s1_v1559 with
  | EmptyString_c15  ⇒ s2_v1560
  | String_c16 c_v1561 s1_v1562 ⇒
    (String_c16 c_v1561 cats_i34(s1_v1562, s2_v1560))
  end

val catsclo_i54 = fn s1_v1563 s2_v1564 ⇒ cats_i34(s1_v1563, s2_v1564)

fun strlen_i35(s_v1565) =
  match s_v1565 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1566 s_v1567 ⇒ (S_c13 strlen_i35(s_v1567))
  end

val strlenclo_i55 = fn s_v1568 ⇒ strlen_i35(s_v1568)

fun readline_i42(__v1569) =
  ln __v1570 ⇒
    let ch_v1571 = open stdin in
    let ch_v1572 = send(ch_v1571, true_c10) in
    let __v1573 = recv(ch_v1572) in
    (match __v1573 with
     | (s_v1574, ch_v1575) ⇒
       ln __v1576 ⇒
         let ch_v1577 = send(ch_v1575, false_c11) in
         let __v1578 = let x_v1579 = ch_v1577 in tt_c9 in s_v1574
     end) NULL

val readlineclo_i56 = fn __v1580 ⇒ readline_i42(__v1580)

fun print_i43(s_v1581) =
  ln __v1582 ⇒
    let ch_v1583 = open stdout in
    let ch_v1584 = send(ch_v1583, true_c10) in
    let ch_v1585 = send(ch_v1584, s_v1581) in
    let ch_v1586 = send(ch_v1585, false_c11) in
    let x_v1587 = ch_v1586 in tt_c9

val printclo_i57 = fn s_v1588 ⇒ print_i43(s_v1588)

fun prerr_i44(s_v1589) =
  ln __v1590 ⇒
    let ch_v1591 = open stderr in
    let ch_v1592 = send(ch_v1591, true_c10) in
    let ch_v1593 = send(ch_v1592, s_v1589) in
    let ch_v1594 = send(ch_v1593, false_c11) in
    let x_v1595 = ch_v1594 in tt_c9

val prerrclo_i58 = fn s_v1596 ⇒ prerr_i44(s_v1596)

fun test_i45(x_v1597, y_v1598) =
  let test1_v1599 = (testclo_i59) tt_c9 in (test1_v1599) tt_c9

val testclo_i59 = fn x_v1600 y_v1601 ⇒ test_i45(x_v1600, y_v1601)

main =
  (let x_v1602 = ln __v1603 ⇒ tt_c9 in
   ln __v1604 ⇒ let v_v1605 = (x_v1602) NULL in v_v1605) NULL

trans3e success--------------------------

#ifndef prelude_h
#define prelude_h

#define tt_c 9
#define true_c 10
#define false_c 11
#define O_c 12
#define S_c 13
#define Ascii_c 14
#define EmptyString_c 15
#define String_c 16

#endif

#include "runtime.h"

tll_ptr addnclo_i49;
tll_ptr andbclo_i46;
tll_ptr app_ret_t141;
tll_ptr catsclo_i54;
tll_ptr eqnclo_i51;
tll_ptr gtenclo_i53;
tll_ptr lam_clo_t101;
tll_ptr lam_clo_t113;
tll_ptr lam_clo_t125;
tll_ptr lam_clo_t134;
tll_ptr lam_clo_t137;
tll_ptr lam_clo_t14;
tll_ptr lam_clo_t140;
tll_ptr lam_clo_t20;
tll_ptr lam_clo_t28;
tll_ptr lam_clo_t36;
tll_ptr lam_clo_t48;
tll_ptr lam_clo_t58;
tll_ptr lam_clo_t7;
tll_ptr lam_clo_t70;
tll_ptr lam_clo_t78;
tll_ptr lam_clo_t85;
tll_ptr ltenclo_i52;
tll_ptr mulnclo_i50;
tll_ptr notbclo_i48;
tll_ptr orbclo_i47;
tll_ptr prerrclo_i58;
tll_ptr printclo_i57;
tll_ptr readlineclo_i56;
tll_ptr strlenclo_i55;
tll_ptr testclo_i59;
tll_ptr x_v1720;

tll_ptr andb_i24(tll_ptr b1_v1606, tll_ptr b2_v1607)
{
  tll_ptr false_t2; tll_ptr switch_ret_t1;
  switch(((tll_node)b1_v1606)->tag) {
    case 10:
      switch_ret_t1 = b2_v1607;
      break;
    case 11:
      instr_struct(&false_t2, 11, 0);
      switch_ret_t1 = false_t2;
      break;
  }
  return switch_ret_t1;
}

tll_ptr lam_fun_t4(tll_ptr b2_v1610, tll_env env)
{
  tll_ptr call_ret_t3;
  call_ret_t3 = andb_i24(env[0], b2_v1610);
  return call_ret_t3;
}

tll_ptr lam_fun_t6(tll_ptr b1_v1608, tll_env env)
{
  tll_ptr lam_clo_t5;
  instr_clo(&lam_clo_t5, &lam_fun_t4, 1, b1_v1608);
  return lam_clo_t5;
}

tll_ptr orb_i25(tll_ptr b1_v1611, tll_ptr b2_v1612)
{
  tll_ptr switch_ret_t8; tll_ptr true_t9;
  switch(((tll_node)b1_v1611)->tag) {
    case 10:
      instr_struct(&true_t9, 10, 0);
      switch_ret_t8 = true_t9;
      break;
    case 11:
      switch_ret_t8 = b2_v1612;
      break;
  }
  return switch_ret_t8;
}

tll_ptr lam_fun_t11(tll_ptr b2_v1615, tll_env env)
{
  tll_ptr call_ret_t10;
  call_ret_t10 = orb_i25(env[0], b2_v1615);
  return call_ret_t10;
}

tll_ptr lam_fun_t13(tll_ptr b1_v1613, tll_env env)
{
  tll_ptr lam_clo_t12;
  instr_clo(&lam_clo_t12, &lam_fun_t11, 1, b1_v1613);
  return lam_clo_t12;
}

tll_ptr notb_i26(tll_ptr b_v1616)
{
  tll_ptr false_t16; tll_ptr switch_ret_t15; tll_ptr true_t17;
  switch(((tll_node)b_v1616)->tag) {
    case 10:
      instr_struct(&false_t16, 11, 0);
      switch_ret_t15 = false_t16;
      break;
    case 11:
      instr_struct(&true_t17, 10, 0);
      switch_ret_t15 = true_t17;
      break;
  }
  return switch_ret_t15;
}

tll_ptr lam_fun_t19(tll_ptr b_v1617, tll_env env)
{
  tll_ptr call_ret_t18;
  call_ret_t18 = notb_i26(b_v1617);
  return call_ret_t18;
}

tll_ptr addn_i27(tll_ptr x_v1618, tll_ptr y_v1619)
{
  tll_ptr S_t23; tll_ptr call_ret_t22; tll_ptr switch_ret_t21;
  tll_ptr x_v1620;
  switch(((tll_node)x_v1618)->tag) {
    case 12:
      switch_ret_t21 = y_v1619;
      break;
    case 13:
      x_v1620 = ((tll_node)x_v1618)->data[0];
      call_ret_t22 = addn_i27(x_v1620, y_v1619);
      instr_struct(&S_t23, 13, 1, call_ret_t22);
      switch_ret_t21 = S_t23;
      break;
  }
  return switch_ret_t21;
}

tll_ptr lam_fun_t25(tll_ptr y_v1623, tll_env env)
{
  tll_ptr call_ret_t24;
  call_ret_t24 = addn_i27(env[0], y_v1623);
  return call_ret_t24;
}

tll_ptr lam_fun_t27(tll_ptr x_v1621, tll_env env)
{
  tll_ptr lam_clo_t26;
  instr_clo(&lam_clo_t26, &lam_fun_t25, 1, x_v1621);
  return lam_clo_t26;
}

tll_ptr muln_i28(tll_ptr x_v1624, tll_ptr y_v1625)
{
  tll_ptr call_ret_t30; tll_ptr call_ret_t31; tll_ptr switch_ret_t29;
  tll_ptr x_v1626;
  switch(((tll_node)x_v1624)->tag) {
    case 12:
      switch_ret_t29 = y_v1625;
      break;
    case 13:
      x_v1626 = ((tll_node)x_v1624)->data[0];
      call_ret_t31 = muln_i28(x_v1626, y_v1625);
      call_ret_t30 = addn_i27(y_v1625, call_ret_t31);
      switch_ret_t29 = call_ret_t30;
      break;
  }
  return switch_ret_t29;
}

tll_ptr lam_fun_t33(tll_ptr y_v1629, tll_env env)
{
  tll_ptr call_ret_t32;
  call_ret_t32 = muln_i28(env[0], y_v1629);
  return call_ret_t32;
}

tll_ptr lam_fun_t35(tll_ptr x_v1627, tll_env env)
{
  tll_ptr lam_clo_t34;
  instr_clo(&lam_clo_t34, &lam_fun_t33, 1, x_v1627);
  return lam_clo_t34;
}

tll_ptr eqn_i29(tll_ptr x_v1630, tll_ptr y_v1631)
{
  tll_ptr __v1632; tll_ptr call_ret_t43; tll_ptr false_t40;
  tll_ptr false_t42; tll_ptr switch_ret_t37; tll_ptr switch_ret_t38;
  tll_ptr switch_ret_t41; tll_ptr true_t39; tll_ptr x_v1633; tll_ptr y_v1634;
  switch(((tll_node)x_v1630)->tag) {
    case 12:
      switch(((tll_node)y_v1631)->tag) {
        case 12:
          instr_struct(&true_t39, 10, 0);
          switch_ret_t38 = true_t39;
          break;
        case 13:
          __v1632 = ((tll_node)y_v1631)->data[0];
          instr_struct(&false_t40, 11, 0);
          switch_ret_t38 = false_t40;
          break;
      }
      switch_ret_t37 = switch_ret_t38;
      break;
    case 13:
      x_v1633 = ((tll_node)x_v1630)->data[0];
      switch(((tll_node)y_v1631)->tag) {
        case 12:
          instr_struct(&false_t42, 11, 0);
          switch_ret_t41 = false_t42;
          break;
        case 13:
          y_v1634 = ((tll_node)y_v1631)->data[0];
          call_ret_t43 = eqn_i29(x_v1633, y_v1634);
          switch_ret_t41 = call_ret_t43;
          break;
      }
      switch_ret_t37 = switch_ret_t41;
      break;
  }
  return switch_ret_t37;
}

tll_ptr lam_fun_t45(tll_ptr y_v1637, tll_env env)
{
  tll_ptr call_ret_t44;
  call_ret_t44 = eqn_i29(env[0], y_v1637);
  return call_ret_t44;
}

tll_ptr lam_fun_t47(tll_ptr x_v1635, tll_env env)
{
  tll_ptr lam_clo_t46;
  instr_clo(&lam_clo_t46, &lam_fun_t45, 1, x_v1635);
  return lam_clo_t46;
}

tll_ptr lten_i30(tll_ptr x_v1638, tll_ptr y_v1639)
{
  tll_ptr call_ret_t53; tll_ptr false_t52; tll_ptr switch_ret_t49;
  tll_ptr switch_ret_t51; tll_ptr true_t50; tll_ptr x_v1640; tll_ptr y_v1641;
  switch(((tll_node)x_v1638)->tag) {
    case 12:
      instr_struct(&true_t50, 10, 0);
      switch_ret_t49 = true_t50;
      break;
    case 13:
      x_v1640 = ((tll_node)x_v1638)->data[0];
      switch(((tll_node)y_v1639)->tag) {
        case 12:
          instr_struct(&false_t52, 11, 0);
          switch_ret_t51 = false_t52;
          break;
        case 13:
          y_v1641 = ((tll_node)y_v1639)->data[0];
          call_ret_t53 = lten_i30(x_v1640, y_v1641);
          switch_ret_t51 = call_ret_t53;
          break;
      }
      switch_ret_t49 = switch_ret_t51;
      break;
  }
  return switch_ret_t49;
}

tll_ptr lam_fun_t55(tll_ptr y_v1644, tll_env env)
{
  tll_ptr call_ret_t54;
  call_ret_t54 = lten_i30(env[0], y_v1644);
  return call_ret_t54;
}

tll_ptr lam_fun_t57(tll_ptr x_v1642, tll_env env)
{
  tll_ptr lam_clo_t56;
  instr_clo(&lam_clo_t56, &lam_fun_t55, 1, x_v1642);
  return lam_clo_t56;
}

tll_ptr gten_i31(tll_ptr x_v1645, tll_ptr y_v1646)
{
  tll_ptr __v1647; tll_ptr call_ret_t65; tll_ptr false_t62;
  tll_ptr switch_ret_t59; tll_ptr switch_ret_t60; tll_ptr switch_ret_t63;
  tll_ptr true_t61; tll_ptr true_t64; tll_ptr x_v1648; tll_ptr y_v1649;
  switch(((tll_node)x_v1645)->tag) {
    case 12:
      switch(((tll_node)y_v1646)->tag) {
        case 12:
          instr_struct(&true_t61, 10, 0);
          switch_ret_t60 = true_t61;
          break;
        case 13:
          __v1647 = ((tll_node)y_v1646)->data[0];
          instr_struct(&false_t62, 11, 0);
          switch_ret_t60 = false_t62;
          break;
      }
      switch_ret_t59 = switch_ret_t60;
      break;
    case 13:
      x_v1648 = ((tll_node)x_v1645)->data[0];
      switch(((tll_node)y_v1646)->tag) {
        case 12:
          instr_struct(&true_t64, 10, 0);
          switch_ret_t63 = true_t64;
          break;
        case 13:
          y_v1649 = ((tll_node)y_v1646)->data[0];
          call_ret_t65 = gten_i31(x_v1648, y_v1649);
          switch_ret_t63 = call_ret_t65;
          break;
      }
      switch_ret_t59 = switch_ret_t63;
      break;
  }
  return switch_ret_t59;
}

tll_ptr lam_fun_t67(tll_ptr y_v1652, tll_env env)
{
  tll_ptr call_ret_t66;
  call_ret_t66 = gten_i31(env[0], y_v1652);
  return call_ret_t66;
}

tll_ptr lam_fun_t69(tll_ptr x_v1650, tll_env env)
{
  tll_ptr lam_clo_t68;
  instr_clo(&lam_clo_t68, &lam_fun_t67, 1, x_v1650);
  return lam_clo_t68;
}

tll_ptr cats_i34(tll_ptr s1_v1653, tll_ptr s2_v1654)
{
  tll_ptr String_t73; tll_ptr c_v1655; tll_ptr call_ret_t72;
  tll_ptr s1_v1656; tll_ptr switch_ret_t71;
  switch(((tll_node)s1_v1653)->tag) {
    case 15:
      switch_ret_t71 = s2_v1654;
      break;
    case 16:
      c_v1655 = ((tll_node)s1_v1653)->data[0];
      s1_v1656 = ((tll_node)s1_v1653)->data[1];
      call_ret_t72 = cats_i34(s1_v1656, s2_v1654);
      instr_struct(&String_t73, 16, 2, c_v1655, call_ret_t72);
      switch_ret_t71 = String_t73;
      break;
  }
  return switch_ret_t71;
}

tll_ptr lam_fun_t75(tll_ptr s2_v1659, tll_env env)
{
  tll_ptr call_ret_t74;
  call_ret_t74 = cats_i34(env[0], s2_v1659);
  return call_ret_t74;
}

tll_ptr lam_fun_t77(tll_ptr s1_v1657, tll_env env)
{
  tll_ptr lam_clo_t76;
  instr_clo(&lam_clo_t76, &lam_fun_t75, 1, s1_v1657);
  return lam_clo_t76;
}

tll_ptr strlen_i35(tll_ptr s_v1660)
{
  tll_ptr O_t80; tll_ptr S_t82; tll_ptr __v1661; tll_ptr call_ret_t81;
  tll_ptr s_v1662; tll_ptr switch_ret_t79;
  switch(((tll_node)s_v1660)->tag) {
    case 15:
      instr_struct(&O_t80, 12, 0);
      switch_ret_t79 = O_t80;
      break;
    case 16:
      __v1661 = ((tll_node)s_v1660)->data[0];
      s_v1662 = ((tll_node)s_v1660)->data[1];
      call_ret_t81 = strlen_i35(s_v1662);
      instr_struct(&S_t82, 13, 1, call_ret_t81);
      switch_ret_t79 = S_t82;
      break;
  }
  return switch_ret_t79;
}

tll_ptr lam_fun_t84(tll_ptr s_v1663, tll_env env)
{
  tll_ptr call_ret_t83;
  call_ret_t83 = strlen_i35(s_v1663);
  return call_ret_t83;
}

tll_ptr lam_fun_t94(tll_ptr __v1680, tll_env env)
{
  tll_ptr __v1685; tll_ptr ch_v1684; tll_ptr false_t92; tll_ptr send_ch_t91;
  tll_ptr tt_t93; tll_ptr x_v1686;
  instr_struct(&false_t92, 11, 0);
  instr_send(&send_ch_t91, env[0], false_t92);
  ch_v1684 = send_ch_t91;
  x_v1686 = ch_v1684;
  instr_struct(&tt_t93, 9, 0);
  __v1685 = tt_t93;
  return env[1];
}

tll_ptr lam_fun_t97(tll_ptr __v1665, tll_env env)
{
  tll_ptr __v1677; tll_ptr app_ret_t96; tll_ptr ch_v1675; tll_ptr ch_v1676;
  tll_ptr ch_v1679; tll_ptr lam_clo_t95; tll_ptr prim_ch_t86;
  tll_ptr recv_msg_t89; tll_ptr s_v1678; tll_ptr send_ch_t87;
  tll_ptr switch_ret_t90; tll_ptr true_t88;
  instr_open(&prim_ch_t86, &proc_stdin);
  ch_v1675 = prim_ch_t86;
  instr_struct(&true_t88, 10, 0);
  instr_send(&send_ch_t87, ch_v1675, true_t88);
  ch_v1676 = send_ch_t87;
  instr_recv(&recv_msg_t89, ch_v1676);
  __v1677 = recv_msg_t89;
  switch(((tll_node)__v1677)->tag) {
    case 0:
      s_v1678 = ((tll_node)__v1677)->data[0];
      ch_v1679 = ((tll_node)__v1677)->data[1];
      instr_free_struct(__v1677);
      instr_clo(&lam_clo_t95, &lam_fun_t94, 2, ch_v1679, s_v1678);
      switch_ret_t90 = lam_clo_t95;
      break;
  }
  instr_app(&app_ret_t96, switch_ret_t90, 0);
  instr_free_clo(switch_ret_t90);
  return app_ret_t96;
}

tll_ptr readline_i42(tll_ptr __v1664)
{
  tll_ptr lam_clo_t98;
  instr_clo(&lam_clo_t98, &lam_fun_t97, 0);
  return lam_clo_t98;
}

tll_ptr lam_fun_t100(tll_ptr __v1687, tll_env env)
{
  tll_ptr call_ret_t99;
  call_ret_t99 = readline_i42(__v1687);
  return call_ret_t99;
}

tll_ptr lam_fun_t109(tll_ptr __v1689, tll_env env)
{
  tll_ptr ch_v1695; tll_ptr ch_v1696; tll_ptr ch_v1697; tll_ptr ch_v1698;
  tll_ptr false_t107; tll_ptr prim_ch_t102; tll_ptr send_ch_t103;
  tll_ptr send_ch_t105; tll_ptr send_ch_t106; tll_ptr true_t104;
  tll_ptr tt_t108; tll_ptr x_v1699;
  instr_open(&prim_ch_t102, &proc_stdout);
  ch_v1695 = prim_ch_t102;
  instr_struct(&true_t104, 10, 0);
  instr_send(&send_ch_t103, ch_v1695, true_t104);
  ch_v1696 = send_ch_t103;
  instr_send(&send_ch_t105, ch_v1696, env[0]);
  ch_v1697 = send_ch_t105;
  instr_struct(&false_t107, 11, 0);
  instr_send(&send_ch_t106, ch_v1697, false_t107);
  ch_v1698 = send_ch_t106;
  x_v1699 = ch_v1698;
  instr_struct(&tt_t108, 9, 0);
  return tt_t108;
}

tll_ptr print_i43(tll_ptr s_v1688)
{
  tll_ptr lam_clo_t110;
  instr_clo(&lam_clo_t110, &lam_fun_t109, 1, s_v1688);
  return lam_clo_t110;
}

tll_ptr lam_fun_t112(tll_ptr s_v1700, tll_env env)
{
  tll_ptr call_ret_t111;
  call_ret_t111 = print_i43(s_v1700);
  return call_ret_t111;
}

tll_ptr lam_fun_t121(tll_ptr __v1702, tll_env env)
{
  tll_ptr ch_v1708; tll_ptr ch_v1709; tll_ptr ch_v1710; tll_ptr ch_v1711;
  tll_ptr false_t119; tll_ptr prim_ch_t114; tll_ptr send_ch_t115;
  tll_ptr send_ch_t117; tll_ptr send_ch_t118; tll_ptr true_t116;
  tll_ptr tt_t120; tll_ptr x_v1712;
  instr_open(&prim_ch_t114, &proc_stderr);
  ch_v1708 = prim_ch_t114;
  instr_struct(&true_t116, 10, 0);
  instr_send(&send_ch_t115, ch_v1708, true_t116);
  ch_v1709 = send_ch_t115;
  instr_send(&send_ch_t117, ch_v1709, env[0]);
  ch_v1710 = send_ch_t117;
  instr_struct(&false_t119, 11, 0);
  instr_send(&send_ch_t118, ch_v1710, false_t119);
  ch_v1711 = send_ch_t118;
  x_v1712 = ch_v1711;
  instr_struct(&tt_t120, 9, 0);
  return tt_t120;
}

tll_ptr prerr_i44(tll_ptr s_v1701)
{
  tll_ptr lam_clo_t122;
  instr_clo(&lam_clo_t122, &lam_fun_t121, 1, s_v1701);
  return lam_clo_t122;
}

tll_ptr lam_fun_t124(tll_ptr s_v1713, tll_env env)
{
  tll_ptr call_ret_t123;
  call_ret_t123 = prerr_i44(s_v1713);
  return call_ret_t123;
}

tll_ptr test_i45(tll_ptr x_v1714, tll_ptr y_v1715)
{
  tll_ptr app_ret_t127; tll_ptr app_ret_t129; tll_ptr test1_v1716;
  tll_ptr tt_t126; tll_ptr tt_t128;
  instr_struct(&tt_t126, 9, 0);
  instr_app(&app_ret_t127, testclo_i59, tt_t126);
  test1_v1716 = app_ret_t127;
  instr_struct(&tt_t128, 9, 0);
  instr_app(&app_ret_t129, test1_v1716, tt_t128);
  return app_ret_t129;
}

tll_ptr lam_fun_t131(tll_ptr y_v1719, tll_env env)
{
  tll_ptr call_ret_t130;
  call_ret_t130 = test_i45(env[0], y_v1719);
  return call_ret_t130;
}

tll_ptr lam_fun_t133(tll_ptr x_v1717, tll_env env)
{
  tll_ptr lam_clo_t132;
  instr_clo(&lam_clo_t132, &lam_fun_t131, 1, x_v1717);
  return lam_clo_t132;
}

tll_ptr lam_fun_t136(tll_ptr __v1721, tll_env env)
{
  tll_ptr tt_t135;
  instr_struct(&tt_t135, 9, 0);
  return tt_t135;
}

tll_ptr lam_fun_t139(tll_ptr __v1722, tll_env env)
{
  tll_ptr app_ret_t138; tll_ptr v_v1724;
  instr_app(&app_ret_t138, env[0], 0);
  instr_free_clo(env[0]);
  v_v1724 = app_ret_t138;
  return v_v1724;
}

int main()
{
  instr_init();
  instr_clo(&lam_clo_t7, &lam_fun_t6, 0);
  andbclo_i46 = lam_clo_t7;
  instr_clo(&lam_clo_t14, &lam_fun_t13, 0);
  orbclo_i47 = lam_clo_t14;
  instr_clo(&lam_clo_t20, &lam_fun_t19, 0);
  notbclo_i48 = lam_clo_t20;
  instr_clo(&lam_clo_t28, &lam_fun_t27, 0);
  addnclo_i49 = lam_clo_t28;
  instr_clo(&lam_clo_t36, &lam_fun_t35, 0);
  mulnclo_i50 = lam_clo_t36;
  instr_clo(&lam_clo_t48, &lam_fun_t47, 0);
  eqnclo_i51 = lam_clo_t48;
  instr_clo(&lam_clo_t58, &lam_fun_t57, 0);
  ltenclo_i52 = lam_clo_t58;
  instr_clo(&lam_clo_t70, &lam_fun_t69, 0);
  gtenclo_i53 = lam_clo_t70;
  instr_clo(&lam_clo_t78, &lam_fun_t77, 0);
  catsclo_i54 = lam_clo_t78;
  instr_clo(&lam_clo_t85, &lam_fun_t84, 0);
  strlenclo_i55 = lam_clo_t85;
  instr_clo(&lam_clo_t101, &lam_fun_t100, 0);
  readlineclo_i56 = lam_clo_t101;
  instr_clo(&lam_clo_t113, &lam_fun_t112, 0);
  printclo_i57 = lam_clo_t113;
  instr_clo(&lam_clo_t125, &lam_fun_t124, 0);
  prerrclo_i58 = lam_clo_t125;
  instr_clo(&lam_clo_t134, &lam_fun_t133, 0);
  testclo_i59 = lam_clo_t134;
  instr_clo(&lam_clo_t137, &lam_fun_t136, 0);
  x_v1720 = lam_clo_t137;
  instr_clo(&lam_clo_t140, &lam_fun_t139, 1, x_v1720);
  instr_app(&app_ret_t141, lam_clo_t140, 0);
  instr_free_clo(lam_clo_t140);
  instr_free_struct(app_ret_t141);
  return 0;
}

trans34 success--------------------------

