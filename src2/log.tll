parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v198 : bool_d2) (b2_v199 : bool_d2) ⇒
    match b1_v198 as __v200 in ??1 with
    | true_c2  ⇒ b2_v199 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v203 : bool_d2) (b2_v204 : bool_d2) ⇒
    match b1_v203 as __v205 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v204
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v207 : bool_d2) ⇒
    match b_v207 as __v208 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v209 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v212 : nat_d3) (y_v213 : nat_d3) ⇒
    match x_v212 as __v214 in ??4 with
    | O_c4  ⇒ y_v213 | S_c5 x_v215 ⇒ (S_c5‹› (addn_i4 x_v215 y_v213))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v218 : nat_d3) (y_v219 : nat_d3) ⇒
    match x_v218 as __v220 in ??5 with
    | O_c4  ⇒ y_v219
    | S_c5 x_v221 ⇒ (addn_i4 y_v219 (muln_i5 x_v221 y_v219))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v224 : nat_d3) (y_v225 : nat_d3) ⇒
    match x_v224 as __v226 in ??6 with
    | O_c4  ⇒
      match y_v225 as __v227 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v228 ⇒ false_c3‹›
      end
    | S_c5 x_v229 ⇒
      match y_v225 as __v230 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v231 ⇒ (eqn_i6 x_v229 y_v231)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v234 : nat_d3) (y_v235 : nat_d3) ⇒
    match x_v234 as __v236 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v237 ⇒
      match y_v235 as __v238 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v239 ⇒ (lten_i7 x_v237 y_v239)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v242 : nat_d3) (y_v243 : nat_d3) ⇒
    match x_v242 as __v244 in ??11 with
    | O_c4  ⇒
      match y_v243 as __v245 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v246 ⇒ false_c3‹›
      end
    | S_c5 x_v247 ⇒
      match y_v243 as __v248 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v249 ⇒ (gten_i8 x_v247 y_v249)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v252 : nat_d3) (y_v253 : nat_d3) ⇒
    match x_v252 as __v254 in ??14 with
    | O_c4  ⇒
      match y_v253 as __v255 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v256 ⇒ true_c2‹›
      end
    | S_c5 x_v257 ⇒
      match y_v253 as __v258 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v259 ⇒ (ltn_i9 x_v257 y_v259)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v262 : nat_d3) (y_v263 : nat_d3) ⇒
    match x_v262 as __v264 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v265 ⇒
      match y_v263 as __v266 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v267 ⇒ (gtn_i10 x_v265 y_v267)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v268 : bool_d2) (b1_v269 : bool_d2) (b2_v270 : bool_d2)
    (b3_v271 : bool_d2) (b4_v272 : bool_d2) (b5_v273 : bool_d2)
    (b6_v274 : bool_d2) (b7_v275 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v276 : ascii_d4) (s_v277 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v280 : string_d5) (s2_v281 : string_d5) ⇒
    match s1_v280 as __v282 in ??19 with
    | EmptyString_c7  ⇒ s2_v281
    | String_c8 c_v283 s1_v284 ⇒
      (String_c8‹› c_v283 (cats_i11 s1_v284 s2_v281))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v286 : string_d5) ⇒
    match s_v286 as __v287 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v288 s_v289 ⇒ (S_c5‹› (strlen_i12 s_v289))
    end

inductive list_d6 (A_v290 : U) : U =
| nil_c9 of (A_v291 : U) : (list_d6 A_v291)
| cons_c10 of
    (A_v292 : U) (hd_v293 : A_v292) (tl_v294 : (list_d6 A_v292))
    : (list_d6 A_v292)

inductive llist_d7 (A_v295 : L) : L =
| lnil_c11 of (A_v296 : L) : (llist_d7 A_v296)
| lcons_c12 of
    (A_v297 : L) (hd_v298 : A_v297) (tl_v299 : (llist_d7 A_v297))
    : (llist_d7 A_v297)

program len_i13 : ∀ {A_v300 : U} → (list_d6 A_v300) → nat_d3 =
  fn {A_v302 : U} (xs_v303 : (list_d6 A_v302)) ⇒
    match xs_v303 as __v304 in ??21 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v305 xs_v306 ⇒ (S_c5‹› (len_i13 ??22 xs_v306))
    end

program llen_i14 :
  ∀ {A_v307 : L} → (llist_d7 A_v307) → nat_d3 ⊗ (llist_d7 A_v307)
=
  fn {A_v310 : L} (xs_v311 : (llist_d7 A_v310)) ⇒
    match xs_v311 as __v312 in ??23 with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v313 xs_v314 ⇒
      match (llen_i14 A_v310 xs_v314) as __v315 in ??24 with
      | ⟨n_v316, xs_v317⟩ ⇒
        ⟨(S_c5‹› n_v316), (lcons_c12‹› x_v313 xs_v317)⟩
      end
    end

program append_i15 :
  ∀ {A_v318 : U} →
    (list_d6 A_v318) → (list_d6 A_v318) → (list_d6 A_v318)
=
  fn {A_v321 : U} (xs_v322 : (list_d6 A_v321)) (ys_v323 : (list_d6 A_v321)) ⇒
    match xs_v322 as __v324 in ??27 with
    | nil_c9  ⇒ ys_v323
    | cons_c10 x_v325 xs_v326 ⇒
      (cons_c10‹› x_v325 (append_i15 ??28 xs_v326 ys_v323))
    end

program lappend_i16 :
  ∀ {A_v327 : L} →
    (llist_d7 A_v327) → (llist_d7 A_v327) ⊸ (llist_d7 A_v327)
=
  fn {A_v330 : L} (xs_v331 : (llist_d7 A_v330)) ⇒
    ln (ys_v332 : ??30) ⇒
      match xs_v331 as __v333 in ??31 with
      | lnil_c11  ⇒ ys_v332
      | lcons_c12 x_v334 xs_v335 ⇒
        (lcons_c12‹› x_v334 (lappend_i16 ??32 xs_v335 ys_v332))
      end

inductive box_d8 (A_v336 : U) : L =
| Box_c13 of (A_v337 : U) (a_v338 : A_v337) : (box_d8 A_v337)

program map_box_i17 :
  ∀ {A_v339 : U} →
    ∀ {B_v340 : U} →
      A_v339 → B_v340 → (box_d8 A_v339) → (box_d8 B_v340)
=
  fn {A_v344 : U} {B_v345 : U} (f_v346 : A_v344 → B_v345)
     (m_v347 : (box_d8 A_v344)) ⇒
    match m_v347 as __v349 in ??34 with
    | Box_c13 a_v350 ⇒ (Box_c13‹› (f_v346 a_v350))
    end

program unbox_i18 : ∀ {A_v351 : U} → (box_d8 A_v351) → A_v351 =
  fn {A_v353 : U} (m_v354 : (box_d8 A_v353)) ⇒
    match m_v354 as __v355 in ??36 with
    | Box_c13 a_v356 ⇒ a_v356
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v358 : unit_d1) ⇒
    ⇑(b_v359 : bool_d2) ⇒
      match b_v359 as __v360 in ??37 with
      | true_c2  ⇒ ⇓(__v361 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v363 : unit_d1) ⇒
    ⇑(b_v364 : bool_d2) ⇒
      match b_v364 as __v365 in ??38 with
      | true_c2  ⇒ ⇑(__v366 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v368 : unit_d1) ⇒
    ⇑(b_v369 : bool_d2) ⇒
      match b_v369 as __v370 in ??39 with
      | true_c2  ⇒ ⇑(__v371 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v373 : unit_d1) ⇒
    let ch_v374 ⇐ open stdin in
    let ch_v375 ⇐ (send ch_v374 true_c2‹›) in
    let __v376 ⇐ recv ch_v375 in
    match __v376 as __v377 in ??40 with
    | ⟨s_v378, ch_v379⟩ ⇒
      let ch_v380 ⇐ (send ch_v379 false_c3‹›) in
      let __v381 ⇐ close ch_v380 in return s_v378
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v383 : string_d5) ⇒
    let ch_v384 ⇐ open stdout in
    let ch_v385 ⇐ (send ch_v384 true_c2‹›) in
    let ch_v386 ⇐ (send ch_v385 s_v383) in
    let ch_v387 ⇐ (send ch_v386 false_c3‹›) in close ch_v387

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v389 : string_d5) ⇒
    let ch_v390 ⇐ open stderr in
    let ch_v391 ⇐ (send ch_v390 true_c2‹›) in
    let ch_v392 ⇐ (send ch_v391 s_v389) in
    let ch_v393 ⇐ (send ch_v392 false_c3‹›) in close ch_v393

inductive List_d9 ‹s_s394, t_s395›
  (A_v396 : Type‹s_s394›) : Type‹t_s395›
=
| Nil_c14 of
    ‹s_s397, t_s398› (A_v399 : Type‹s_s397›)
    : (List_d9‹s_s397, t_s398› A_v399)
| Cons_c15 of
    ‹s_s400, t_s401› (A_v402 : Type‹s_s400›) (hd_v403 : A_v402)
    (tl_v404 : (List_d9‹s_s400, t_s401› A_v402))
    : (List_d9‹s_s400, t_s401› A_v402)

logical len_i28 ‹s_s405, t_s406› :
  ∀ {A_v407 : Type‹s_s405›} →
    (List_d9‹s_s405, t_s406› A_v407) → nat_d3
=
  fn {A_v409 : Type‹s_s405›}
     (xs_v410 : (List_d9‹s_s405, t_s406› A_v409)) ⇒
    match xs_v410 as __v411 in ??41 with
    | Nil_c14  ⇒ O_c4‹›
    | Cons_c15 hd_v412 tl_v413 ⇒
      (addn_i4 1 (len_i28‹??44, ??43› ??42 tl_v413))
    end

program append_i29 ‹s_s414, t_s415› :
  ∀ {A_v416 : Type‹s_s414›} →
    (List_d9‹??45, t_s415› A_v416) →
      (List_d9‹??47, ??46› A_v416) ⊸ (List_d9‹??49, ??48› A_v416)
=
  fn {A_v419 : Type‹s_s414›}
     (xs_v420 : (List_d9‹??45, t_s415› A_v419)) ⇒
    ln (ys_v421 : ??50) ⇒
      match xs_v420 as __v422 in ??51 with
      | Nil_c14  ⇒ ys_v421
      | Cons_c15 x_v423 xs_v424 ⇒
        (Cons_c15‹??57, ??56›
          x_v423 (append_i29‹??54, ??53› ??52 xs_v424 ys_v421))
      end

logical append_len_i30 ‹s_s425, t_s426› :
  ∀ (A_v427 : Type‹s_s425›) →
    ∀ (xs_v428 : (List_d9‹??58, t_s426› A_v427)) →
      ∀ (ys_v429 : (List_d9‹??59, t_s426› A_v427)) →
        (len_i28‹??65, ??64›
          ??63 (append_i29‹??62, ??61› ??60 xs_v428 ys_v429)) ≡
          (addn_i4
            (len_i28‹??71, ??70› ??69 xs_v428)
            (len_i28‹??68, ??67› ??66 ys_v429))
=
  fn (A_v430 : Type‹s_s425›)
     (xs_v431 : (List_d9‹??58, t_s426› A_v430))
     (ys_v432 : (List_d9‹??59, t_s426› A_v430)) ⇒
    match xs_v431 as xs0_v433 in
      (len_i28‹??78, ??77›
        ??76 (append_i29‹??75, ??74› ??73 xs0_v433 ys_v432)) ≡
        (addn_i4
          (len_i28‹??84, ??83› ??82 xs0_v433)
          (len_i28‹??81, ??80› ??79 ys_v432)) with
    | Nil_c14  ⇒ refl ??97
    | Cons_c15 x_v434 xs0_v435 ⇒
      rew [n_v436, __v437 ⇒
        (S_c5‹›
          (len_i28‹??95, ??94›
            ??93 (append_i29‹??92, ??91› ??90 xs0_v435 ys_v432))) ≡
          (S_c5‹› n_v436)]
        (append_len_i30‹??88, ??87› ??86 xs0_v435 ys_v432) in
      refl ??89
    end

logical list_i31 ‹s_s438› : {Type‹s_s438›} → U =
  fn {A_v440 : Type‹s_s438›} ⇒ (List_d9‹??98, U› A_v440)

program ls0_i32 : (list_i31‹??100› ??99) =
  (Cons_c15‹??106, ??105› O_c4‹› Nil_c14‹??103, ??102›)

program ls1_i33 : (list_i31‹??108› ??107) =
  (Cons_c15‹??114, ??113› O_c4‹› Nil_c14‹??111, ??110›)

program ls2_i34 : ??115 =
  (append_i29‹??118, ??117› ??116 ls0_i32 ls1_i33)

program id_i35 ‹s_s441› :
  ∀ {A_v442 : Type‹s_s441›} → A_v442 → A_v442
= fn {A_v444 : Type‹s_s441›} (x_v445 : A_v444) ⇒ x_v445

program main_i36 : IO unit_d1 =
  let s_v446 ⇐ (readline_i25 tt_c1‹›) in
  (id_i35‹??122› ??121 (print_i26 (id_i35‹??120› ??119 s_v446)))

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2190 : bool_d2) (b2_v2191 : bool_d2) ⇒
    match b1_v2190 as __v2192 in bool_d2 with
    | true_c2  ⇒ b2_v2191 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2195 : bool_d2) (b2_v2196 : bool_d2) ⇒
    match b1_v2195 as __v2197 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v2196
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v2199 : bool_d2) ⇒
    match b_v2199 as __v2200 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v2201 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2204 : nat_d3) (y_v2205 : nat_d3) ⇒
    match x_v2204 as __v2206 in nat_d3 with
    | O_c4  ⇒ y_v2205
    | S_c5 x_v2207 ⇒ (S_c5‹› (addn_i4 x_v2207 y_v2205))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2210 : nat_d3) (y_v2211 : nat_d3) ⇒
    match x_v2210 as __v2212 in nat_d3 with
    | O_c4  ⇒ y_v2211
    | S_c5 x_v2213 ⇒ (addn_i4 y_v2211 (muln_i5 x_v2213 y_v2211))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2216 : nat_d3) (y_v2217 : nat_d3) ⇒
    match x_v2216 as __v2218 in bool_d2 with
    | O_c4  ⇒
      match y_v2217 as __v2219 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2220 ⇒ false_c3‹›
      end
    | S_c5 x_v2221 ⇒
      match y_v2217 as __v2222 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2223 ⇒ (eqn_i6 x_v2221 y_v2223)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2226 : nat_d3) (y_v2227 : nat_d3) ⇒
    match x_v2226 as __v2228 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v2229 ⇒
      match y_v2227 as __v2230 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2231 ⇒ (lten_i7 x_v2229 y_v2231)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2234 : nat_d3) (y_v2235 : nat_d3) ⇒
    match x_v2234 as __v2236 in bool_d2 with
    | O_c4  ⇒
      match y_v2235 as __v2237 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2238 ⇒ false_c3‹›
      end
    | S_c5 x_v2239 ⇒
      match y_v2235 as __v2240 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2241 ⇒ (gten_i8 x_v2239 y_v2241)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2244 : nat_d3) (y_v2245 : nat_d3) ⇒
    match x_v2244 as __v2246 in bool_d2 with
    | O_c4  ⇒
      match y_v2245 as __v2247 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2248 ⇒ true_c2‹›
      end
    | S_c5 x_v2249 ⇒
      match y_v2245 as __v2250 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2251 ⇒ (ltn_i9 x_v2249 y_v2251)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2254 : nat_d3) (y_v2255 : nat_d3) ⇒
    match x_v2254 as __v2256 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v2257 ⇒
      match y_v2255 as __v2258 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2259 ⇒ (gtn_i10 x_v2257 y_v2259)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v2260 : bool_d2) (b1_v2261 : bool_d2) (b2_v2262 : bool_d2)
    (b3_v2263 : bool_d2) (b4_v2264 : bool_d2) (b5_v2265 : bool_d2)
    (b6_v2266 : bool_d2) (b7_v2267 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v2268 : ascii_d4) (s_v2269 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2272 : string_d5) (s2_v2273 : string_d5) ⇒
    match s1_v2272 as __v2274 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2273
    | String_c8 c_v2275 s1_v2276 ⇒
      (String_c8‹› c_v2275 (cats_i11 s1_v2276 s2_v2273))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v2278 : string_d5) ⇒
    match s_v2278 as __v2279 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2280 s_v2281 ⇒ (S_c5‹› (strlen_i12 s_v2281))
    end

inductive list_d6 (A_v2282 : U) : U =
| nil_c9 of (A_v2283 : U) : (list_d6 A_v2283)
| cons_c10 of
    (A_v2284 : U) (hd_v2285 : A_v2284) (tl_v2286 : (list_d6 A_v2284))
    : (list_d6 A_v2284)

inductive llist_d7 (A_v2287 : L) : L =
| lnil_c11 of (A_v2288 : L) : (llist_d7 A_v2288)
| lcons_c12 of
    (A_v2289 : L) (hd_v2290 : A_v2289) (tl_v2291 : (llist_d7 A_v2289))
    : (llist_d7 A_v2289)

program len_i13 : ∀ {A_v2292 : U} → (list_d6 A_v2292) → nat_d3 =
  fn {A_v2294 : U} (xs_v2295 : (list_d6 A_v2294)) ⇒
    match xs_v2295 as __v2296 in nat_d3 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v2297 xs_v2298 ⇒ (S_c5‹› (len_i13 A_v2294 xs_v2298))
    end

program llen_i14 :
  ∀ {A_v2299 : L} → (llist_d7 A_v2299) → nat_d3 ⊗ (llist_d7 A_v2299)
=
  fn {A_v2302 : L} (xs_v2303 : (llist_d7 A_v2302)) ⇒
    match xs_v2303 as __v2304 in nat_d3 ⊗ (llist_d7 A_v2302) with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v2306 xs_v2307 ⇒
      match (llen_i14 A_v2302 xs_v2307) as __v2308 in
        nat_d3 ⊗ (llist_d7 A_v2302) with
      | ⟨n_v2310, xs_v2311⟩ ⇒
        ⟨(S_c5‹› n_v2310), (lcons_c12‹› x_v2306 xs_v2311)⟩
      end
    end

program append_i15 :
  ∀ {A_v2312 : U} →
    (list_d6 A_v2312) → (list_d6 A_v2312) → (list_d6 A_v2312)
=
  fn {A_v2315 : U} (xs_v2316 : (list_d6 A_v2315))
     (ys_v2317 : (list_d6 A_v2315)) ⇒
    match xs_v2316 as __v2318 in (list_d6 A_v2315) with
    | nil_c9  ⇒ ys_v2317
    | cons_c10 x_v2319 xs_v2320 ⇒
      (cons_c10‹› x_v2319 (append_i15 A_v2315 xs_v2320 ys_v2317))
    end

program lappend_i16 :
  ∀ {A_v2321 : L} →
    (llist_d7 A_v2321) → (llist_d7 A_v2321) ⊸ (llist_d7 A_v2321)
=
  fn {A_v2324 : L} (xs_v2325 : (llist_d7 A_v2324)) ⇒
    ln (ys_v2326 : (llist_d7 A_v2324)) ⇒
      match xs_v2325 as __v2327 in (llist_d7 A_v2324) with
      | lnil_c11  ⇒ ys_v2326
      | lcons_c12 x_v2328 xs_v2329 ⇒
        (lcons_c12‹› x_v2328 (lappend_i16 A_v2324 xs_v2329 ys_v2326))
      end

inductive box_d8 (A_v2330 : U) : L =
| Box_c13 of (A_v2331 : U) (a_v2332 : A_v2331) : (box_d8 A_v2331)

program map_box_i17 :
  ∀ {A_v2333 : U} →
    ∀ {B_v2334 : U} →
      A_v2333 → B_v2334 → (box_d8 A_v2333) → (box_d8 B_v2334)
=
  fn {A_v2338 : U} {B_v2339 : U} (f_v2340 : A_v2338 → B_v2339)
     (m_v2341 : (box_d8 A_v2338)) ⇒
    match m_v2341 as __v2343 in (box_d8 B_v2339) with
    | Box_c13 a_v2344 ⇒ (Box_c13‹› (f_v2340 a_v2344))
    end

program unbox_i18 : ∀ {A_v2345 : U} → (box_d8 A_v2345) → A_v2345 =
  fn {A_v2347 : U} (m_v2348 : (box_d8 A_v2347)) ⇒
    match m_v2348 as __v2349 in A_v2347 with
    | Box_c13 a_v2350 ⇒ a_v2350
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v2352 : unit_d1) ⇒
    ⇑(b_v2353 : bool_d2) ⇒
      match b_v2353 as __v2354 in proto with
      | true_c2  ⇒ ⇓(__v2355 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v2357 : unit_d1) ⇒
    ⇑(b_v2358 : bool_d2) ⇒
      match b_v2358 as __v2359 in proto with
      | true_c2  ⇒
        ⇑(__v2360 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v2362 : unit_d1) ⇒
    ⇑(b_v2363 : bool_d2) ⇒
      match b_v2363 as __v2364 in proto with
      | true_c2  ⇒
        ⇑(__v2365 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v2367 : unit_d1) ⇒
    let ch_v2368 ⇐ open stdin in
    let ch_v2369 ⇐ (send ch_v2368 true_c2‹›) in
    let __v2370 ⇐ recv ch_v2369 in
    match __v2370 as __v2371 in IO string_d5 with
    | ⟨s_v2372, ch_v2373⟩ ⇒
      let ch_v2374 ⇐ (send ch_v2373 false_c3‹›) in
      let __v2375 ⇐ close ch_v2374 in return s_v2372
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v2377 : string_d5) ⇒
    let ch_v2378 ⇐ open stdout in
    let ch_v2379 ⇐ (send ch_v2378 true_c2‹›) in
    let ch_v2380 ⇐ (send ch_v2379 s_v2377) in
    let ch_v2381 ⇐ (send ch_v2380 false_c3‹›) in close ch_v2381

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v2383 : string_d5) ⇒
    let ch_v2384 ⇐ open stderr in
    let ch_v2385 ⇐ (send ch_v2384 true_c2‹›) in
    let ch_v2386 ⇐ (send ch_v2385 s_v2383) in
    let ch_v2387 ⇐ (send ch_v2386 false_c3‹›) in close ch_v2387

inductive List_d9 ‹s_s2388, t_s2389›
  (A_v2390 : Type‹s_s2388›) : Type‹t_s2389›
=
| Nil_c14 of
    ‹s_s2391, t_s2392› (A_v2393 : Type‹s_s2391›)
    : (List_d9‹s_s2391, t_s2392› A_v2393)
| Cons_c15 of
    ‹s_s2394, t_s2395› (A_v2396 : Type‹s_s2394›) (hd_v2397 : A_v2396)
    (tl_v2398 : (List_d9‹s_s2394, t_s2395› A_v2396))
    : (List_d9‹s_s2394, t_s2395› A_v2396)

logical len_i28 ‹s_s2399, t_s2400› :
  ∀ {A_v2401 : Type‹s_s2399›} →
    (List_d9‹s_s2399, t_s2400› A_v2401) → nat_d3
=
  fn {A_v2403 : Type‹s_s2399›}
     (xs_v2404 : (List_d9‹s_s2399, t_s2400› A_v2403)) ⇒
    match xs_v2404 as __v2405 in nat_d3 with
    | Nil_c14  ⇒ O_c4‹›
    | Cons_c15 hd_v2406 tl_v2407 ⇒
      (addn_i4 1 (len_i28‹s_s2399, t_s2400› A_v2403 tl_v2407))
    end

program append_i29 ‹s_s2408, t_s2409› :
  ∀ {A_v2410 : Type‹s_s2408›} →
    (List_d9‹s_s2408, t_s2409› A_v2410) →
      (List_d9‹s_s2408, t_s2409› A_v2410) ⊸
        (List_d9‹s_s2408, t_s2409› A_v2410)
=
  fn {A_v2413 : Type‹s_s2408›}
     (xs_v2414 : (List_d9‹s_s2408, t_s2409› A_v2413)) ⇒
    ln (ys_v2415 : (List_d9‹s_s2408, t_s2409› A_v2413)) ⇒
      match xs_v2414 as __v2416 in
        (List_d9‹s_s2408, t_s2409› A_v2413) with
      | Nil_c14  ⇒ ys_v2415
      | Cons_c15 x_v2417 xs_v2418 ⇒
        (Cons_c15‹s_s2408, t_s2409›
          x_v2417
          (append_i29‹s_s2408, t_s2409› A_v2413 xs_v2418 ys_v2415))
      end

logical append_len_i30 ‹s_s2419, t_s2420› :
  ∀ (A_v2421 : Type‹s_s2419›) →
    ∀ (xs_v2422 : (List_d9‹s_s2419, t_s2420› A_v2421)) →
      ∀ (ys_v2423 : (List_d9‹s_s2419, t_s2420› A_v2421)) →
        (len_i28‹s_s2419, t_s2420›
          A_v2421
          (append_i29‹s_s2419, t_s2420› A_v2421 xs_v2422 ys_v2423)) ≡
          (addn_i4
            (len_i28‹s_s2419, t_s2420› A_v2421 xs_v2422)
            (len_i28‹s_s2419, t_s2420› A_v2421 ys_v2423))
=
  fn (A_v2424 : Type‹s_s2419›)
     (xs_v2425 : (List_d9‹s_s2419, t_s2420› A_v2424))
     (ys_v2426 : (List_d9‹s_s2419, t_s2420› A_v2424)) ⇒
    match xs_v2425 as xs0_v2427 in
      (len_i28‹s_s2419, t_s2420›
        A_v2424 (append_i29‹s_s2419, t_s2420› A_v2424 xs0_v2427 ys_v2426)) ≡
        (addn_i4
          (len_i28‹s_s2419, t_s2420› A_v2424 xs0_v2427)
          (len_i28‹s_s2419, t_s2420› A_v2424 ys_v2426)) with
    | Nil_c14  ⇒
      refl (len_i28‹s_s2419, t_s2420›
             A_v2424
             (append_i29‹s_s2419, t_s2420›
               A_v2424 Nil_c14‹s_s2419, t_s2420› ys_v2426))
    | Cons_c15 x_v2428 xs0_v2429 ⇒
      rew [n_v2430, __v2431 ⇒
        (S_c5‹›
          (len_i28‹s_s2419, t_s2420›
            A_v2424
            (append_i29‹s_s2419, t_s2420› A_v2424 xs0_v2429 ys_v2426))) ≡
          (S_c5‹› n_v2430)]
        (append_len_i30‹s_s2419, t_s2420› A_v2424 xs0_v2429 ys_v2426) in
      refl (S_c5‹›
             (len_i28‹s_s2419, t_s2420›
               A_v2424
               (append_i29‹s_s2419, t_s2420› A_v2424 xs0_v2429 ys_v2426)))
    end

logical list_i31 ‹s_s2432› : {Type‹s_s2432›} → U =
  fn {A_v2434 : Type‹s_s2432›} ⇒ (List_d9‹s_s2432, U› A_v2434)

program ls0_i32 : (list_i31‹U› nat_d3) =
  (Cons_c15‹U, U› O_c4‹› Nil_c14‹U, U›)

program ls1_i33 : (list_i31‹U› nat_d3) =
  (Cons_c15‹U, U› O_c4‹› Nil_c14‹U, U›)

program ls2_i34 : (List_d9‹U, U› nat_d3) =
  (append_i29‹U, U› nat_d3 ls0_i32 ls1_i33)

program id_i35 ‹s_s2435› :
  ∀ {A_v2436 : Type‹s_s2435›} → A_v2436 → A_v2436
= fn {A_v2438 : Type‹s_s2435›} (x_v2439 : A_v2438) ⇒ x_v2439

program main_i36 : IO unit_d1 =
  let s_v2440 ⇐ (readline_i25 tt_c1‹›) in
  (id_i35‹L› IO unit_d1 (print_i26 (id_i35‹U› string_d5 s_v2440)))

trans1e success--------------------------

data unit_d10 =
| tt_c16 of size(0)

data bool_d11 =
| true_c17 of size(0) | false_c18 of size(0)

def andb_i37 =
  fn b1_v2762 b2_v2763 ⇒
    match b1_v2762 with
    | true_c17  ⇒ b2_v2763 | false_c18  ⇒ false_c18
    end

def orb_i38 =
  fn b1_v2764 b2_v2765 ⇒
    match b1_v2764 with
    | true_c17  ⇒ true_c17 | false_c18  ⇒ b2_v2765
    end

def notb_i39 =
  fn b_v2766 ⇒
    match b_v2766 with
    | true_c17  ⇒ false_c18 | false_c18  ⇒ true_c17
    end

data nat_d12 =
| O_c19 of size(0) | S_c20 of size(1)

def addn_i40 =
  fn x_v2767 y_v2768 ⇒
    match x_v2767 with
    | O_c19  ⇒ y_v2768
    | S_c20 x_v2769 ⇒ (S_c20 ((addn_i40 x_v2769) y_v2768))
    end

def muln_i41 =
  fn x_v2770 y_v2771 ⇒
    match x_v2770 with
    | O_c19  ⇒ y_v2771
    | S_c20 x_v2772 ⇒ ((addn_i40 y_v2771) ((muln_i41 x_v2772) y_v2771))
    end

def eqn_i42 =
  fn x_v2773 y_v2774 ⇒
    match x_v2773 with
    | O_c19  ⇒
      match y_v2774 with
      | O_c19  ⇒ true_c17 | S_c20 __v2775 ⇒ false_c18
      end
    | S_c20 x_v2776 ⇒
      match y_v2774 with
      | O_c19  ⇒ false_c18 | S_c20 y_v2777 ⇒ ((eqn_i42 x_v2776) y_v2777)
      end
    end

def lten_i43 =
  fn x_v2778 y_v2779 ⇒
    match x_v2778 with
    | O_c19  ⇒ true_c17
    | S_c20 x_v2780 ⇒
      match y_v2779 with
      | O_c19  ⇒ false_c18 | S_c20 y_v2781 ⇒ ((lten_i43 x_v2780) y_v2781)
      end
    end

def gten_i44 =
  fn x_v2782 y_v2783 ⇒
    match x_v2782 with
    | O_c19  ⇒
      match y_v2783 with
      | O_c19  ⇒ true_c17 | S_c20 __v2784 ⇒ false_c18
      end
    | S_c20 x_v2785 ⇒
      match y_v2783 with
      | O_c19  ⇒ true_c17 | S_c20 y_v2786 ⇒ ((gten_i44 x_v2785) y_v2786)
      end
    end

data ascii_d13 =
| Ascii_c21 of size(8)

data string_d14 =
| EmptyString_c22 of size(0) | String_c23 of size(2)

def cats_i47 =
  fn s1_v2787 s2_v2788 ⇒
    match s1_v2787 with
    | EmptyString_c22  ⇒ s2_v2788
    | String_c23 c_v2789 s1_v2790 ⇒
      (String_c23 c_v2789 ((cats_i47 s1_v2790) s2_v2788))
    end

def strlen_i48 =
  fn s_v2791 ⇒
    match s_v2791 with
    | EmptyString_c22  ⇒ O_c19
    | String_c23 __v2792 s_v2793 ⇒ (S_c20 (strlen_i48 s_v2793))
    end

data list_d15 =
| nil_c24 of size(0) | cons_c25 of size(2)

data llist_d16 =
| lnil_c26 of size(0) | lcons_c27 of size(2)

def len_i49 =
  fn A_v2794 xs_v2795 ⇒
    match xs_v2795 with
    | nil_c24  ⇒ O_c19
    | cons_c25 __v2796 xs_v2797 ⇒ (S_c20 ((len_i49 NULL) xs_v2797))
    end

def llen_i50 =
  fn A_v2798 xs_v2799 ⇒
    match xs_v2799 with
    | lnil_c26  ⇒ (O_c19, lnil_c26)
    | lcons_c27 x_v2800 xs_v2801 ⇒
      match ((llen_i50 NULL) xs_v2801) with
      | (n_v2802, xs_v2803) ⇒
        ((S_c20 n_v2802), (lcons_c27 x_v2800 xs_v2803))
      end
    end

def append_i51 =
  fn A_v2804 xs_v2805 ys_v2806 ⇒
    match xs_v2805 with
    | nil_c24  ⇒ ys_v2806
    | cons_c25 x_v2807 xs_v2808 ⇒
      (cons_c25 x_v2807 (((append_i51 NULL) xs_v2808) ys_v2806))
    end

def lappend_i52 =
  fn A_v2809 xs_v2810 ⇒
    ln ys_v2811 ⇒
      match xs_v2810 with
      | lnil_c26  ⇒ ys_v2811
      | lcons_c27 x_v2812 xs_v2813 ⇒
        (lcons_c27 x_v2812 (((lappend_i52 NULL) xs_v2813) ys_v2811))
      end

data box_d17 =
| Box_c28 of size(1)

def map_box_i53 =
  fn A_v2814 B_v2815 f_v2816 m_v2817 ⇒
    match m_v2817 with
    | Box_c28 a_v2818 ⇒ (Box_c28 (f_v2816 a_v2818))
    end

def unbox_i54 =
  fn A_v2819 m_v2820 ⇒ match m_v2820 with
                         | Box_c28 a_v2821 ⇒ a_v2821
                         end

def readline_i61 =
  fn __v2822 ⇒
    let ch_v2823 ⇐ open stdin in
    let ch_v2824 ⇐ (send ch_v2823 true_c17) in
    let __v2825 ⇐ recv ch_v2824 in
    match __v2825 with
    | (s_v2826, ch_v2827) ⇒
      let ch_v2828 ⇐ (send ch_v2827 false_c18) in
      let __v2829 ⇐ close⇑ ch_v2828 in return s_v2826
    end

def print_i62 =
  fn s_v2830 ⇒
    let ch_v2831 ⇐ open stdout in
    let ch_v2832 ⇐ (send ch_v2831 true_c17) in
    let ch_v2833 ⇐ (send ch_v2832 s_v2830) in
    let ch_v2834 ⇐ (send ch_v2833 false_c18) in close⇑ ch_v2834

def prerr_i63 =
  fn s_v2835 ⇒
    let ch_v2836 ⇐ open stderr in
    let ch_v2837 ⇐ (send ch_v2836 true_c17) in
    let ch_v2838 ⇐ (send ch_v2837 s_v2835) in
    let ch_v2839 ⇐ (send ch_v2838 false_c18) in close⇑ ch_v2839

data ListUU_d21 =
| NilUU_c35 of size(0) | ConsUU_c36 of size(2)

data ListUL_d20 =
| NilUL_c33 of size(0) | ConsUL_c34 of size(2)

data ListLU_d19 =
| NilLU_c31 of size(0)

data ListLL_d18 =
| NilLL_c29 of size(0) | ConsLL_c30 of size(2)

def appendUU_i71 =
  fn A_v2840 xs_v2841 ⇒
    ln ys_v2842 ⇒
      match xs_v2841 with
      | NilUU_c35  ⇒ ys_v2842
      | ConsUU_c36 x_v2843 xs_v2844 ⇒
        (ConsUU_c36 x_v2843 (((appendUU_i71 NULL) xs_v2844) ys_v2842))
      end

def appendUL_i70 =
  fn A_v2845 xs_v2846 ⇒
    ln ys_v2847 ⇒
      match xs_v2846 with
      | NilUL_c33  ⇒ ys_v2847
      | ConsUL_c34 x_v2848 xs_v2849 ⇒
        (ConsUL_c34 x_v2848 (((appendUL_i70 NULL) xs_v2849) ys_v2847))
      end

def appendLL_i68 =
  fn A_v2850 xs_v2851 ⇒
    ln ys_v2852 ⇒
      match xs_v2851 with
      | NilLL_c29  ⇒ ys_v2852
      | ConsLL_c30 x_v2853 xs_v2854 ⇒
        (ConsLL_c30 x_v2853 (((appendLL_i68 NULL) xs_v2854) ys_v2852))
      end

def ls0_i78 = (ConsUU_c36 O_c19 NilUU_c35)

def ls1_i79 = (ConsUU_c36 O_c19 NilUU_c35)

def ls2_i80 = (((appendUU_i71 NULL) ls0_i78) ls1_i79)

def idU_i82 = fn A_v2855 x_v2856 ⇒ x_v2856

def idL_i81 = fn A_v2857 x_v2858 ⇒ x_v2858

main =
  let s_v2859 ⇐ (readline_i61 tt_c16) in
  ((idL_i81 NULL) (print_i62 ((idU_i82 NULL) s_v2859)))

trans12 success--------------------------

fun andb_i37(b1_v2990, b2_v2991) =
  match b1_v2990 with
  | true_c17  ⇒ b2_v2991 | false_c18  ⇒ false_c18
  end

val andbclo_i83 = fn b1_v2992 b2_v2993 ⇒ andb_i37(b1_v2992, b2_v2993)

fun orb_i38(b1_v2994, b2_v2995) =
  match b1_v2994 with
  | true_c17  ⇒ true_c17 | false_c18  ⇒ b2_v2995
  end

val orbclo_i84 = fn b1_v2996 b2_v2997 ⇒ orb_i38(b1_v2996, b2_v2997)

fun notb_i39(b_v2998) =
  match b_v2998 with
  | true_c17  ⇒ false_c18 | false_c18  ⇒ true_c17
  end

val notbclo_i85 = fn b_v2999 ⇒ notb_i39(b_v2999)

fun addn_i40(x_v3000, y_v3001) =
  match x_v3000 with
  | O_c19  ⇒ y_v3001 | S_c20 x_v3002 ⇒ (S_c20 addn_i40(x_v3002, y_v3001))
  end

val addnclo_i86 = fn x_v3003 y_v3004 ⇒ addn_i40(x_v3003, y_v3004)

fun muln_i41(x_v3005, y_v3006) =
  match x_v3005 with
  | O_c19  ⇒ y_v3006
  | S_c20 x_v3007 ⇒ addn_i40(y_v3006, muln_i41(x_v3007, y_v3006))
  end

val mulnclo_i87 = fn x_v3008 y_v3009 ⇒ muln_i41(x_v3008, y_v3009)

fun eqn_i42(x_v3010, y_v3011) =
  match x_v3010 with
  | O_c19  ⇒
    match y_v3011 with
    | O_c19  ⇒ true_c17 | S_c20 __v3012 ⇒ false_c18
    end
  | S_c20 x_v3013 ⇒
    match y_v3011 with
    | O_c19  ⇒ false_c18 | S_c20 y_v3014 ⇒ eqn_i42(x_v3013, y_v3014)
    end
  end

val eqnclo_i88 = fn x_v3015 y_v3016 ⇒ eqn_i42(x_v3015, y_v3016)

fun lten_i43(x_v3017, y_v3018) =
  match x_v3017 with
  | O_c19  ⇒ true_c17
  | S_c20 x_v3019 ⇒
    match y_v3018 with
    | O_c19  ⇒ false_c18 | S_c20 y_v3020 ⇒ lten_i43(x_v3019, y_v3020)
    end
  end

val ltenclo_i89 = fn x_v3021 y_v3022 ⇒ lten_i43(x_v3021, y_v3022)

fun gten_i44(x_v3023, y_v3024) =
  match x_v3023 with
  | O_c19  ⇒
    match y_v3024 with
    | O_c19  ⇒ true_c17 | S_c20 __v3025 ⇒ false_c18
    end
  | S_c20 x_v3026 ⇒
    match y_v3024 with
    | O_c19  ⇒ true_c17 | S_c20 y_v3027 ⇒ gten_i44(x_v3026, y_v3027)
    end
  end

val gtenclo_i90 = fn x_v3028 y_v3029 ⇒ gten_i44(x_v3028, y_v3029)

fun cats_i47(s1_v3030, s2_v3031) =
  match s1_v3030 with
  | EmptyString_c22  ⇒ s2_v3031
  | String_c23 c_v3032 s1_v3033 ⇒
    (String_c23 c_v3032 cats_i47(s1_v3033, s2_v3031))
  end

val catsclo_i91 = fn s1_v3034 s2_v3035 ⇒ cats_i47(s1_v3034, s2_v3035)

fun strlen_i48(s_v3036) =
  match s_v3036 with
  | EmptyString_c22  ⇒ O_c19
  | String_c23 __v3037 s_v3038 ⇒ (S_c20 strlen_i48(s_v3038))
  end

val strlenclo_i92 = fn s_v3039 ⇒ strlen_i48(s_v3039)

fun len_i49(A_v3040, xs_v3041) =
  match xs_v3041 with
  | nil_c24  ⇒ O_c19
  | cons_c25 __v3042 xs_v3043 ⇒ (S_c20 len_i49(NULL, xs_v3043))
  end

val lenclo_i93 = fn A_v3044 xs_v3045 ⇒ len_i49(A_v3044, xs_v3045)

fun llen_i50(A_v3046, xs_v3047) =
  match xs_v3047 with
  | lnil_c26  ⇒ (O_c19, lnil_c26)
  | lcons_c27 x_v3048 xs_v3049 ⇒
    match llen_i50(NULL, xs_v3049) with
    | (n_v3050, xs_v3051) ⇒ ((S_c20 n_v3050), (lcons_c27 x_v3048 xs_v3051))
    end
  end

val llenclo_i94 = fn A_v3052 xs_v3053 ⇒ llen_i50(A_v3052, xs_v3053)

fun append_i51(A_v3054, xs_v3055, ys_v3056) =
  match xs_v3055 with
  | nil_c24  ⇒ ys_v3056
  | cons_c25 x_v3057 xs_v3058 ⇒
    (cons_c25 x_v3057 append_i51(NULL, xs_v3058, ys_v3056))
  end

val appendclo_i95 =
  fn A_v3059 xs_v3060 ys_v3061 ⇒ append_i51(A_v3059, xs_v3060, ys_v3061)

fun lappend_i52(A_v3062, xs_v3063, ys_v3064) =
  match xs_v3063 with
  | lnil_c26  ⇒ ys_v3064
  | lcons_c27 x_v3065 xs_v3066 ⇒
    (lcons_c27 x_v3065 lappend_i52(NULL, xs_v3066, ys_v3064))
  end

val lappendclo_i96 =
  fn A_v3067 xs_v3068 ⇒
    ln ys_v3069 ⇒ lappend_i52(A_v3067, xs_v3068, ys_v3069)

fun map_box_i53(A_v3070, B_v3071, f_v3072, m_v3073) =
  match m_v3073 with
  | Box_c28 a_v3074 ⇒ (Box_c28 (f_v3072) a_v3074)
  end

val map_boxclo_i97 =
  fn A_v3075 B_v3076 f_v3077 m_v3078 ⇒
    map_box_i53(A_v3075, B_v3076, f_v3077, m_v3078)

fun unbox_i54(A_v3079, m_v3080) =
  match m_v3080 with
  | Box_c28 a_v3081 ⇒ a_v3081
  end

val unboxclo_i98 = fn A_v3082 m_v3083 ⇒ unbox_i54(A_v3082, m_v3083)

fun readline_i61(__v3084) =
  ln __v3085 ⇒
    let ch_v3086 = (ln __v3087 ⇒ open stdin) NULL in
    let ch_v3088 =
      ((fn x_v3089 ⇒ ln __v3090 ⇒ send(ch_v3086, x_v3089)) true_c17) NULL
    in
    let __v3091 = (ln __v3092 ⇒ recv(ch_v3088)) NULL in
    (match __v3091 with
     | (s_v3093, ch_v3094) ⇒
       ln __v3095 ⇒
         let ch_v3096 =
           ((fn x_v3097 ⇒ ln __v3098 ⇒ send(ch_v3094, x_v3097)) false_c18)
             NULL
         in
         let __v3099 = (ln __v3100 ⇒ let x_v3101 = ch_v3096 in tt_c16) NULL
         in (ln __v3102 ⇒ s_v3093) NULL
     end) NULL

val readlineclo_i99 = fn __v3103 ⇒ readline_i61(__v3103)

fun print_i62(s_v3104) =
  ln __v3105 ⇒
    let ch_v3106 = (ln __v3107 ⇒ open stdout) NULL in
    let ch_v3108 =
      ((fn x_v3109 ⇒ ln __v3110 ⇒ send(ch_v3106, x_v3109)) true_c17) NULL
    in
    let ch_v3111 =
      ((fn x_v3112 ⇒ ln __v3113 ⇒ send(ch_v3108, x_v3112)) s_v3104) NULL
    in
    let ch_v3114 =
      ((fn x_v3115 ⇒ ln __v3116 ⇒ send(ch_v3111, x_v3115)) false_c18)
        NULL
    in (ln __v3117 ⇒ let x_v3118 = ch_v3114 in tt_c16) NULL

val printclo_i100 = fn s_v3119 ⇒ print_i62(s_v3119)

fun prerr_i63(s_v3120) =
  ln __v3121 ⇒
    let ch_v3122 = (ln __v3123 ⇒ open stderr) NULL in
    let ch_v3124 =
      ((fn x_v3125 ⇒ ln __v3126 ⇒ send(ch_v3122, x_v3125)) true_c17) NULL
    in
    let ch_v3127 =
      ((fn x_v3128 ⇒ ln __v3129 ⇒ send(ch_v3124, x_v3128)) s_v3120) NULL
    in
    let ch_v3130 =
      ((fn x_v3131 ⇒ ln __v3132 ⇒ send(ch_v3127, x_v3131)) false_c18)
        NULL
    in (ln __v3133 ⇒ let x_v3134 = ch_v3130 in tt_c16) NULL

val prerrclo_i101 = fn s_v3135 ⇒ prerr_i63(s_v3135)

fun appendUU_i71(A_v3136, xs_v3137, ys_v3138) =
  match xs_v3137 with
  | NilUU_c35  ⇒ ys_v3138
  | ConsUU_c36 x_v3139 xs_v3140 ⇒
    (ConsUU_c36 x_v3139 appendUU_i71(NULL, xs_v3140, ys_v3138))
  end

val appendUUclo_i102 =
  fn A_v3141 xs_v3142 ⇒
    ln ys_v3143 ⇒ appendUU_i71(A_v3141, xs_v3142, ys_v3143)

fun appendUL_i70(A_v3144, xs_v3145, ys_v3146) =
  match xs_v3145 with
  | NilUL_c33  ⇒ ys_v3146
  | ConsUL_c34 x_v3147 xs_v3148 ⇒
    (ConsUL_c34 x_v3147 appendUL_i70(NULL, xs_v3148, ys_v3146))
  end

val appendULclo_i103 =
  fn A_v3149 xs_v3150 ⇒
    ln ys_v3151 ⇒ appendUL_i70(A_v3149, xs_v3150, ys_v3151)

fun appendLL_i68(A_v3152, xs_v3153, ys_v3154) =
  match xs_v3153 with
  | NilLL_c29  ⇒ ys_v3154
  | ConsLL_c30 x_v3155 xs_v3156 ⇒
    (ConsLL_c30 x_v3155 appendLL_i68(NULL, xs_v3156, ys_v3154))
  end

val appendLLclo_i104 =
  fn A_v3157 xs_v3158 ⇒
    ln ys_v3159 ⇒ appendLL_i68(A_v3157, xs_v3158, ys_v3159)

val ls0_i78 = (ConsUU_c36 O_c19 NilUU_c35)

val ls1_i79 = (ConsUU_c36 O_c19 NilUU_c35)

val ls2_i80 = appendUU_i71(NULL, ls0_i78, ls1_i79)

fun idU_i82(A_v3160, x_v3161) = x_v3161

val idUclo_i105 = fn A_v3162 x_v3163 ⇒ idU_i82(A_v3162, x_v3163)

fun idL_i81(A_v3164, x_v3165) = x_v3165

val idLclo_i106 = fn A_v3166 x_v3167 ⇒ idL_i81(A_v3166, x_v3167)

main =
  (ln __v3168 ⇒
     let s_v3169 = (readline_i61(tt_c16)) NULL in
     (idL_i81(NULL, print_i62(idU_i82(NULL, s_v3169)))) NULL)
    NULL

trans23 success--------------------------

fun andb_i37(b1_v3358, b2_v3359) =
  match b1_v3358 with
  | true_c17  ⇒ b2_v3359 | false_c18  ⇒ false_c18
  end

val andbclo_i83 = fn b1_v3360 b2_v3361 ⇒ andb_i37(b1_v3360, b2_v3361)

fun orb_i38(b1_v3362, b2_v3363) =
  match b1_v3362 with
  | true_c17  ⇒ true_c17 | false_c18  ⇒ b2_v3363
  end

val orbclo_i84 = fn b1_v3364 b2_v3365 ⇒ orb_i38(b1_v3364, b2_v3365)

fun notb_i39(b_v3366) =
  match b_v3366 with
  | true_c17  ⇒ false_c18 | false_c18  ⇒ true_c17
  end

val notbclo_i85 = fn b_v3367 ⇒ notb_i39(b_v3367)

fun addn_i40(x_v3368, y_v3369) =
  match x_v3368 with
  | O_c19  ⇒ y_v3369 | S_c20 x_v3370 ⇒ (S_c20 addn_i40(x_v3370, y_v3369))
  end

val addnclo_i86 = fn x_v3371 y_v3372 ⇒ addn_i40(x_v3371, y_v3372)

fun muln_i41(x_v3373, y_v3374) =
  match x_v3373 with
  | O_c19  ⇒ y_v3374
  | S_c20 x_v3375 ⇒ addn_i40(y_v3374, muln_i41(x_v3375, y_v3374))
  end

val mulnclo_i87 = fn x_v3376 y_v3377 ⇒ muln_i41(x_v3376, y_v3377)

fun eqn_i42(x_v3378, y_v3379) =
  match x_v3378 with
  | O_c19  ⇒
    match y_v3379 with
    | O_c19  ⇒ true_c17 | S_c20 __v3380 ⇒ false_c18
    end
  | S_c20 x_v3381 ⇒
    match y_v3379 with
    | O_c19  ⇒ false_c18 | S_c20 y_v3382 ⇒ eqn_i42(x_v3381, y_v3382)
    end
  end

val eqnclo_i88 = fn x_v3383 y_v3384 ⇒ eqn_i42(x_v3383, y_v3384)

fun lten_i43(x_v3385, y_v3386) =
  match x_v3385 with
  | O_c19  ⇒ true_c17
  | S_c20 x_v3387 ⇒
    match y_v3386 with
    | O_c19  ⇒ false_c18 | S_c20 y_v3388 ⇒ lten_i43(x_v3387, y_v3388)
    end
  end

val ltenclo_i89 = fn x_v3389 y_v3390 ⇒ lten_i43(x_v3389, y_v3390)

fun gten_i44(x_v3391, y_v3392) =
  match x_v3391 with
  | O_c19  ⇒
    match y_v3392 with
    | O_c19  ⇒ true_c17 | S_c20 __v3393 ⇒ false_c18
    end
  | S_c20 x_v3394 ⇒
    match y_v3392 with
    | O_c19  ⇒ true_c17 | S_c20 y_v3395 ⇒ gten_i44(x_v3394, y_v3395)
    end
  end

val gtenclo_i90 = fn x_v3396 y_v3397 ⇒ gten_i44(x_v3396, y_v3397)

fun cats_i47(s1_v3398, s2_v3399) =
  match s1_v3398 with
  | EmptyString_c22  ⇒ s2_v3399
  | String_c23 c_v3400 s1_v3401 ⇒
    (String_c23 c_v3400 cats_i47(s1_v3401, s2_v3399))
  end

val catsclo_i91 = fn s1_v3402 s2_v3403 ⇒ cats_i47(s1_v3402, s2_v3403)

fun strlen_i48(s_v3404) =
  match s_v3404 with
  | EmptyString_c22  ⇒ O_c19
  | String_c23 __v3405 s_v3406 ⇒ (S_c20 strlen_i48(s_v3406))
  end

val strlenclo_i92 = fn s_v3407 ⇒ strlen_i48(s_v3407)

fun len_i49(A_v3408, xs_v3409) =
  match xs_v3409 with
  | nil_c24  ⇒ O_c19
  | cons_c25 __v3410 xs_v3411 ⇒ (S_c20 len_i49(NULL, xs_v3411))
  end

val lenclo_i93 = fn A_v3412 xs_v3413 ⇒ len_i49(A_v3412, xs_v3413)

fun llen_i50(A_v3414, xs_v3415) =
  match xs_v3415 with
  | lnil_c26  ⇒ (O_c19, lnil_c26)
  | lcons_c27 x_v3416 xs_v3417 ⇒
    match llen_i50(NULL, xs_v3417) with
    | (n_v3418, xs_v3419) ⇒ ((S_c20 n_v3418), (lcons_c27 x_v3416 xs_v3419))
    end
  end

val llenclo_i94 = fn A_v3420 xs_v3421 ⇒ llen_i50(A_v3420, xs_v3421)

fun append_i51(A_v3422, xs_v3423, ys_v3424) =
  match xs_v3423 with
  | nil_c24  ⇒ ys_v3424
  | cons_c25 x_v3425 xs_v3426 ⇒
    (cons_c25 x_v3425 append_i51(NULL, xs_v3426, ys_v3424))
  end

val appendclo_i95 =
  fn A_v3427 xs_v3428 ys_v3429 ⇒ append_i51(A_v3427, xs_v3428, ys_v3429)

fun lappend_i52(A_v3430, xs_v3431, ys_v3432) =
  match xs_v3431 with
  | lnil_c26  ⇒ ys_v3432
  | lcons_c27 x_v3433 xs_v3434 ⇒
    (lcons_c27 x_v3433 lappend_i52(NULL, xs_v3434, ys_v3432))
  end

val lappendclo_i96 =
  fn A_v3435 xs_v3436 ⇒
    ln ys_v3437 ⇒ lappend_i52(A_v3435, xs_v3436, ys_v3437)

fun map_box_i53(A_v3438, B_v3439, f_v3440, m_v3441) =
  match m_v3441 with
  | Box_c28 a_v3442 ⇒ (Box_c28 (f_v3440) a_v3442)
  end

val map_boxclo_i97 =
  fn A_v3443 B_v3444 f_v3445 m_v3446 ⇒
    map_box_i53(A_v3443, B_v3444, f_v3445, m_v3446)

fun unbox_i54(A_v3447, m_v3448) =
  match m_v3448 with
  | Box_c28 a_v3449 ⇒ a_v3449
  end

val unboxclo_i98 = fn A_v3450 m_v3451 ⇒ unbox_i54(A_v3450, m_v3451)

fun readline_i61(__v3452) =
  ln __v3453 ⇒
    let ch_v3454 = open stdin in
    let ch_v3455 = send(ch_v3454, true_c17) in
    let __v3456 = recv(ch_v3455) in
    (match __v3456 with
     | (s_v3457, ch_v3458) ⇒
       ln __v3459 ⇒
         let ch_v3460 = send(ch_v3458, false_c18) in
         let __v3461 = let x_v3462 = ch_v3460 in tt_c16 in s_v3457
     end) NULL

val readlineclo_i99 = fn __v3463 ⇒ readline_i61(__v3463)

fun print_i62(s_v3464) =
  ln __v3465 ⇒
    let ch_v3466 = open stdout in
    let ch_v3467 = send(ch_v3466, true_c17) in
    let ch_v3468 = send(ch_v3467, s_v3464) in
    let ch_v3469 = send(ch_v3468, false_c18) in
    let x_v3470 = ch_v3469 in tt_c16

val printclo_i100 = fn s_v3471 ⇒ print_i62(s_v3471)

fun prerr_i63(s_v3472) =
  ln __v3473 ⇒
    let ch_v3474 = open stderr in
    let ch_v3475 = send(ch_v3474, true_c17) in
    let ch_v3476 = send(ch_v3475, s_v3472) in
    let ch_v3477 = send(ch_v3476, false_c18) in
    let x_v3478 = ch_v3477 in tt_c16

val prerrclo_i101 = fn s_v3479 ⇒ prerr_i63(s_v3479)

fun appendUU_i71(A_v3480, xs_v3481, ys_v3482) =
  match xs_v3481 with
  | NilUU_c35  ⇒ ys_v3482
  | ConsUU_c36 x_v3483 xs_v3484 ⇒
    (ConsUU_c36 x_v3483 appendUU_i71(NULL, xs_v3484, ys_v3482))
  end

val appendUUclo_i102 =
  fn A_v3485 xs_v3486 ⇒
    ln ys_v3487 ⇒ appendUU_i71(A_v3485, xs_v3486, ys_v3487)

fun appendUL_i70(A_v3488, xs_v3489, ys_v3490) =
  match xs_v3489 with
  | NilUL_c33  ⇒ ys_v3490
  | ConsUL_c34 x_v3491 xs_v3492 ⇒
    (ConsUL_c34 x_v3491 appendUL_i70(NULL, xs_v3492, ys_v3490))
  end

val appendULclo_i103 =
  fn A_v3493 xs_v3494 ⇒
    ln ys_v3495 ⇒ appendUL_i70(A_v3493, xs_v3494, ys_v3495)

fun appendLL_i68(A_v3496, xs_v3497, ys_v3498) =
  match xs_v3497 with
  | NilLL_c29  ⇒ ys_v3498
  | ConsLL_c30 x_v3499 xs_v3500 ⇒
    (ConsLL_c30 x_v3499 appendLL_i68(NULL, xs_v3500, ys_v3498))
  end

val appendLLclo_i104 =
  fn A_v3501 xs_v3502 ⇒
    ln ys_v3503 ⇒ appendLL_i68(A_v3501, xs_v3502, ys_v3503)

val ls0_i78 = (ConsUU_c36 O_c19 NilUU_c35)

val ls1_i79 = (ConsUU_c36 O_c19 NilUU_c35)

val ls2_i80 = appendUU_i71(NULL, ls0_i78, ls1_i79)

fun idU_i82(A_v3504, x_v3505) = x_v3505

val idUclo_i105 = fn A_v3506 x_v3507 ⇒ idU_i82(A_v3506, x_v3507)

fun idL_i81(A_v3508, x_v3509) = x_v3509

val idLclo_i106 = fn A_v3510 x_v3511 ⇒ idL_i81(A_v3510, x_v3511)

main =
  let s_v3512 = (readline_i61(tt_c16)) NULL in
  (idL_i81(NULL, print_i62(idU_i82(NULL, s_v3512)))) NULL

trans3e success--------------------------

