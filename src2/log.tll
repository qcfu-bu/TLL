parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v108 : bool_d2) (b2_v109 : bool_d2) ⇒
    match b1_v108 as __v110 in ??1 with
    | true_c2  ⇒ b2_v109 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v113 : bool_d2) (b2_v114 : bool_d2) ⇒
    match b1_v113 as __v115 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v114
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v117 : bool_d2) ⇒
    match b_v117 as __v118 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v119 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v122 : nat_d3) (y_v123 : nat_d3) ⇒
    match x_v122 as __v124 in ??4 with
    | O_c4  ⇒ y_v123 | S_c5 x_v125 ⇒ (S_c5‹› (addn_i4 x_v125 y_v123))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v128 : nat_d3) (y_v129 : nat_d3) ⇒
    match x_v128 as __v130 in ??5 with
    | O_c4  ⇒ y_v129
    | S_c5 x_v131 ⇒ (addn_i4 y_v129 (muln_i5 x_v131 y_v129))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v134 : nat_d3) (y_v135 : nat_d3) ⇒
    match x_v134 as __v136 in ??6 with
    | O_c4  ⇒
      match y_v135 as __v137 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v138 ⇒ false_c3‹›
      end
    | S_c5 x_v139 ⇒
      match y_v135 as __v140 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v141 ⇒ (eqn_i6 x_v139 y_v141)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v144 : nat_d3) (y_v145 : nat_d3) ⇒
    match x_v144 as __v146 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v147 ⇒
      match y_v145 as __v148 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v149 ⇒ (lten_i7 x_v147 y_v149)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v152 : nat_d3) (y_v153 : nat_d3) ⇒
    match x_v152 as __v154 in ??11 with
    | O_c4  ⇒
      match y_v153 as __v155 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v156 ⇒ false_c3‹›
      end
    | S_c5 x_v157 ⇒
      match y_v153 as __v158 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v159 ⇒ (gten_i8 x_v157 y_v159)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v162 : nat_d3) (y_v163 : nat_d3) ⇒
    match x_v162 as __v164 in ??14 with
    | O_c4  ⇒
      match y_v163 as __v165 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v166 ⇒ true_c2‹›
      end
    | S_c5 x_v167 ⇒
      match y_v163 as __v168 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v169 ⇒ (ltn_i9 x_v167 y_v169)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v172 : nat_d3) (y_v173 : nat_d3) ⇒
    match x_v172 as __v174 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v175 ⇒
      match y_v173 as __v176 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v177 ⇒ (gtn_i10 x_v175 y_v177)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v178 : bool_d2) (b1_v179 : bool_d2) (b2_v180 : bool_d2)
    (b3_v181 : bool_d2) (b4_v182 : bool_d2) (b5_v183 : bool_d2)
    (b6_v184 : bool_d2) (b7_v185 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v186 : ascii_d4) (s_v187 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v190 : string_d5) (s2_v191 : string_d5) ⇒
    match s1_v190 as __v192 in ??19 with
    | EmptyString_c7  ⇒ s2_v191
    | String_c8 c_v193 s1_v194 ⇒
      (String_c8‹› c_v193 (cats_i11 s1_v194 s2_v191))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v196 : string_d5) ⇒
    match s_v196 as __v197 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v198 s_v199 ⇒ (S_c5‹› (strlen_i12 s_v199))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v201 : unit_d1) ⇒
    ⇑(b_v202 : bool_d2) ⇒
      match b_v202 as __v203 in ??21 with
      | true_c2  ⇒ ⇓(__v204 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v206 : unit_d1) ⇒
    ⇑(b_v207 : bool_d2) ⇒
      match b_v207 as __v208 in ??22 with
      | true_c2  ⇒ ⇑(__v209 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v211 : unit_d1) ⇒
    ⇑(b_v212 : bool_d2) ⇒
      match b_v212 as __v213 in ??23 with
      | true_c2  ⇒ ⇑(__v214 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v216 : unit_d1) ⇒
    let ch_v217 ⇐ open stdin in
    let ch_v218 ⇐ (send ch_v217 true_c2‹›) in
    let __v219 ⇐ recv ch_v218 in
    match __v219 as __v220 in ??24 with
    | ⟨s_v221, ch_v222⟩ ⇒
      let ch_v223 ⇐ (send ch_v222 false_c3‹›) in
      let __v224 ⇐ close ch_v223 in return s_v221
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v226 : string_d5) ⇒
    let ch_v227 ⇐ open stdout in
    let ch_v228 ⇐ (send ch_v227 true_c2‹›) in
    let ch_v229 ⇐ (send ch_v228 s_v226) in
    let ch_v230 ⇐ (send ch_v229 false_c3‹›) in close ch_v230

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v232 : string_d5) ⇒
    let ch_v233 ⇐ open stderr in
    let ch_v234 ⇐ (send ch_v233 true_c2‹›) in
    let ch_v235 ⇐ (send ch_v234 s_v232) in
    let ch_v236 ⇐ (send ch_v235 false_c3‹›) in close ch_v236

program main_i22 : IO unit_d1 =
  let x_v237 = O_c4‹› in
  let ch_v238 ⇐
    fork (ch_v239 : ch⟨end⟩) in let y_v240 = x_v237 in close ch_v239
  in close ch_v238

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v861 : bool_d2) (b2_v862 : bool_d2) ⇒
    match b1_v861 as __v863 in bool_d2 with
    | true_c2  ⇒ b2_v862 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v866 : bool_d2) (b2_v867 : bool_d2) ⇒
    match b1_v866 as __v868 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v867
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v870 : bool_d2) ⇒
    match b_v870 as __v871 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v872 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v875 : nat_d3) (y_v876 : nat_d3) ⇒
    match x_v875 as __v877 in nat_d3 with
    | O_c4  ⇒ y_v876 | S_c5 x_v878 ⇒ (S_c5‹› (addn_i4 x_v878 y_v876))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v881 : nat_d3) (y_v882 : nat_d3) ⇒
    match x_v881 as __v883 in nat_d3 with
    | O_c4  ⇒ y_v882
    | S_c5 x_v884 ⇒ (addn_i4 y_v882 (muln_i5 x_v884 y_v882))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v887 : nat_d3) (y_v888 : nat_d3) ⇒
    match x_v887 as __v889 in bool_d2 with
    | O_c4  ⇒
      match y_v888 as __v890 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v891 ⇒ false_c3‹›
      end
    | S_c5 x_v892 ⇒
      match y_v888 as __v893 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v894 ⇒ (eqn_i6 x_v892 y_v894)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v897 : nat_d3) (y_v898 : nat_d3) ⇒
    match x_v897 as __v899 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v900 ⇒
      match y_v898 as __v901 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v902 ⇒ (lten_i7 x_v900 y_v902)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v905 : nat_d3) (y_v906 : nat_d3) ⇒
    match x_v905 as __v907 in bool_d2 with
    | O_c4  ⇒
      match y_v906 as __v908 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v909 ⇒ false_c3‹›
      end
    | S_c5 x_v910 ⇒
      match y_v906 as __v911 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v912 ⇒ (gten_i8 x_v910 y_v912)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v915 : nat_d3) (y_v916 : nat_d3) ⇒
    match x_v915 as __v917 in bool_d2 with
    | O_c4  ⇒
      match y_v916 as __v918 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v919 ⇒ true_c2‹›
      end
    | S_c5 x_v920 ⇒
      match y_v916 as __v921 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v922 ⇒ (ltn_i9 x_v920 y_v922)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v925 : nat_d3) (y_v926 : nat_d3) ⇒
    match x_v925 as __v927 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v928 ⇒
      match y_v926 as __v929 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v930 ⇒ (gtn_i10 x_v928 y_v930)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v931 : bool_d2) (b1_v932 : bool_d2) (b2_v933 : bool_d2)
    (b3_v934 : bool_d2) (b4_v935 : bool_d2) (b5_v936 : bool_d2)
    (b6_v937 : bool_d2) (b7_v938 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v939 : ascii_d4) (s_v940 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v943 : string_d5) (s2_v944 : string_d5) ⇒
    match s1_v943 as __v945 in string_d5 with
    | EmptyString_c7  ⇒ s2_v944
    | String_c8 c_v946 s1_v947 ⇒
      (String_c8‹› c_v946 (cats_i11 s1_v947 s2_v944))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v949 : string_d5) ⇒
    match s_v949 as __v950 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v951 s_v952 ⇒ (S_c5‹› (strlen_i12 s_v952))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v954 : unit_d1) ⇒
    ⇑(b_v955 : bool_d2) ⇒
      match b_v955 as __v956 in proto with
      | true_c2  ⇒ ⇓(__v957 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v959 : unit_d1) ⇒
    ⇑(b_v960 : bool_d2) ⇒
      match b_v960 as __v961 in proto with
      | true_c2  ⇒ ⇑(__v962 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v964 : unit_d1) ⇒
    ⇑(b_v965 : bool_d2) ⇒
      match b_v965 as __v966 in proto with
      | true_c2  ⇒ ⇑(__v967 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v969 : unit_d1) ⇒
    let ch_v970 ⇐ open stdin in
    let ch_v971 ⇐ (send ch_v970 true_c2‹›) in
    let __v972 ⇐ recv ch_v971 in
    match __v972 as __v973 in IO string_d5 with
    | ⟨s_v974, ch_v975⟩ ⇒
      let ch_v976 ⇐ (send ch_v975 false_c3‹›) in
      let __v977 ⇐ close ch_v976 in return s_v974
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v979 : string_d5) ⇒
    let ch_v980 ⇐ open stdout in
    let ch_v981 ⇐ (send ch_v980 true_c2‹›) in
    let ch_v982 ⇐ (send ch_v981 s_v979) in
    let ch_v983 ⇐ (send ch_v982 false_c3‹›) in close ch_v983

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v985 : string_d5) ⇒
    let ch_v986 ⇐ open stderr in
    let ch_v987 ⇐ (send ch_v986 true_c2‹›) in
    let ch_v988 ⇐ (send ch_v987 s_v985) in
    let ch_v989 ⇐ (send ch_v988 false_c3‹›) in close ch_v989

program main_i22 : IO unit_d1 =
  let x_v990 = O_c4‹› in
  let ch_v991 ⇐
    fork (ch_v992 : ch⟨end⟩) in let y_v993 = x_v990 in close ch_v992
  in close ch_v991

trans1e success--------------------------

data unit_d6 =
| tt_c9 of size(0)

data bool_d7 =
| true_c10 of size(0) | false_c11 of size(0)

def andb_i23 =
  fn b1_v1122 b2_v1123 ⇒
    match b1_v1122 with
    | true_c10  ⇒ b2_v1123 | false_c11  ⇒ false_c11
    end

def orb_i24 =
  fn b1_v1124 b2_v1125 ⇒
    match b1_v1124 with
    | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1125
    end

def notb_i25 =
  fn b_v1126 ⇒
    match b_v1126 with
    | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
    end

data nat_d8 =
| O_c12 of size(0) | S_c13 of size(1)

def addn_i26 =
  fn x_v1127 y_v1128 ⇒
    match x_v1127 with
    | O_c12  ⇒ y_v1128
    | S_c13 x_v1129 ⇒ (S_c13 ((addn_i26 x_v1129) y_v1128))
    end

def muln_i27 =
  fn x_v1130 y_v1131 ⇒
    match x_v1130 with
    | O_c12  ⇒ y_v1131
    | S_c13 x_v1132 ⇒ ((addn_i26 y_v1131) ((muln_i27 x_v1132) y_v1131))
    end

def eqn_i28 =
  fn x_v1133 y_v1134 ⇒
    match x_v1133 with
    | O_c12  ⇒
      match y_v1134 with
      | O_c12  ⇒ true_c10 | S_c13 __v1135 ⇒ false_c11
      end
    | S_c13 x_v1136 ⇒
      match y_v1134 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1137 ⇒ ((eqn_i28 x_v1136) y_v1137)
      end
    end

def lten_i29 =
  fn x_v1138 y_v1139 ⇒
    match x_v1138 with
    | O_c12  ⇒ true_c10
    | S_c13 x_v1140 ⇒
      match y_v1139 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1141 ⇒ ((lten_i29 x_v1140) y_v1141)
      end
    end

def gten_i30 =
  fn x_v1142 y_v1143 ⇒
    match x_v1142 with
    | O_c12  ⇒
      match y_v1143 with
      | O_c12  ⇒ true_c10 | S_c13 __v1144 ⇒ false_c11
      end
    | S_c13 x_v1145 ⇒
      match y_v1143 with
      | O_c12  ⇒ true_c10 | S_c13 y_v1146 ⇒ ((gten_i30 x_v1145) y_v1146)
      end
    end

data ascii_d9 =
| Ascii_c14 of size(8)

data string_d10 =
| EmptyString_c15 of size(0) | String_c16 of size(2)

def cats_i33 =
  fn s1_v1147 s2_v1148 ⇒
    match s1_v1147 with
    | EmptyString_c15  ⇒ s2_v1148
    | String_c16 c_v1149 s1_v1150 ⇒
      (String_c16 c_v1149 ((cats_i33 s1_v1150) s2_v1148))
    end

def strlen_i34 =
  fn s_v1151 ⇒
    match s_v1151 with
    | EmptyString_c15  ⇒ O_c12
    | String_c16 __v1152 s_v1153 ⇒ (S_c13 (strlen_i34 s_v1153))
    end

def readline_i41 =
  fn __v1154 ⇒
    let ch_v1155 ⇐ open stdin in
    let ch_v1156 ⇐ (send ch_v1155 true_c10) in
    let __v1157 ⇐ recv ch_v1156 in
    match __v1157 with
    | (s_v1158, ch_v1159) ⇒
      let ch_v1160 ⇐ (send ch_v1159 false_c11) in
      let __v1161 ⇐ close⇑ ch_v1160 in return s_v1158
    end

def print_i42 =
  fn s_v1162 ⇒
    let ch_v1163 ⇐ open stdout in
    let ch_v1164 ⇐ (send ch_v1163 true_c10) in
    let ch_v1165 ⇐ (send ch_v1164 s_v1162) in
    let ch_v1166 ⇐ (send ch_v1165 false_c11) in close⇑ ch_v1166

def prerr_i43 =
  fn s_v1167 ⇒
    let ch_v1168 ⇐ open stderr in
    let ch_v1169 ⇐ (send ch_v1168 true_c10) in
    let ch_v1170 ⇐ (send ch_v1169 s_v1167) in
    let ch_v1171 ⇐ (send ch_v1170 false_c11) in close⇑ ch_v1171

main =
  let x_v1172 = O_c12 in
  let ch_v1173 ⇐
    fork ch_v1174 in let y_v1175 = x_v1172 in close⇑ ch_v1174
  in close⇓ ch_v1173

trans12 success--------------------------

fun andb_i23(b1_v1262, b2_v1263) =
  match b1_v1262 with
  | true_c10  ⇒ b2_v1263 | false_c11  ⇒ false_c11
  end

val andbclo_i44 = fn b1_v1264 b2_v1265 ⇒ andb_i23(b1_v1264, b2_v1265)

fun orb_i24(b1_v1266, b2_v1267) =
  match b1_v1266 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1267
  end

val orbclo_i45 = fn b1_v1268 b2_v1269 ⇒ orb_i24(b1_v1268, b2_v1269)

fun notb_i25(b_v1270) =
  match b_v1270 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i46 = fn b_v1271 ⇒ notb_i25(b_v1271)

fun addn_i26(x_v1272, y_v1273) =
  match x_v1272 with
  | O_c12  ⇒ y_v1273 | S_c13 x_v1274 ⇒ (S_c13 addn_i26(x_v1274, y_v1273))
  end

val addnclo_i47 = fn x_v1275 y_v1276 ⇒ addn_i26(x_v1275, y_v1276)

fun muln_i27(x_v1277, y_v1278) =
  match x_v1277 with
  | O_c12  ⇒ y_v1278
  | S_c13 x_v1279 ⇒ addn_i26(y_v1278, muln_i27(x_v1279, y_v1278))
  end

val mulnclo_i48 = fn x_v1280 y_v1281 ⇒ muln_i27(x_v1280, y_v1281)

fun eqn_i28(x_v1282, y_v1283) =
  match x_v1282 with
  | O_c12  ⇒
    match y_v1283 with
    | O_c12  ⇒ true_c10 | S_c13 __v1284 ⇒ false_c11
    end
  | S_c13 x_v1285 ⇒
    match y_v1283 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1286 ⇒ eqn_i28(x_v1285, y_v1286)
    end
  end

val eqnclo_i49 = fn x_v1287 y_v1288 ⇒ eqn_i28(x_v1287, y_v1288)

fun lten_i29(x_v1289, y_v1290) =
  match x_v1289 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1291 ⇒
    match y_v1290 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1292 ⇒ lten_i29(x_v1291, y_v1292)
    end
  end

val ltenclo_i50 = fn x_v1293 y_v1294 ⇒ lten_i29(x_v1293, y_v1294)

fun gten_i30(x_v1295, y_v1296) =
  match x_v1295 with
  | O_c12  ⇒
    match y_v1296 with
    | O_c12  ⇒ true_c10 | S_c13 __v1297 ⇒ false_c11
    end
  | S_c13 x_v1298 ⇒
    match y_v1296 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1299 ⇒ gten_i30(x_v1298, y_v1299)
    end
  end

val gtenclo_i51 = fn x_v1300 y_v1301 ⇒ gten_i30(x_v1300, y_v1301)

fun cats_i33(s1_v1302, s2_v1303) =
  match s1_v1302 with
  | EmptyString_c15  ⇒ s2_v1303
  | String_c16 c_v1304 s1_v1305 ⇒
    (String_c16 c_v1304 cats_i33(s1_v1305, s2_v1303))
  end

val catsclo_i52 = fn s1_v1306 s2_v1307 ⇒ cats_i33(s1_v1306, s2_v1307)

fun strlen_i34(s_v1308) =
  match s_v1308 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1309 s_v1310 ⇒ (S_c13 strlen_i34(s_v1310))
  end

val strlenclo_i53 = fn s_v1311 ⇒ strlen_i34(s_v1311)

fun readline_i41(__v1312) =
  ln __v1313 ⇒
    let ch_v1314 = (ln __v1315 ⇒ open stdin) NULL in
    let ch_v1316 =
      ((fn x_v1317 ⇒ ln __v1318 ⇒ send(ch_v1314, x_v1317)) true_c10) NULL
    in
    let __v1319 = (ln __v1320 ⇒ recv(ch_v1316)) NULL in
    (match __v1319 with
     | (s_v1321, ch_v1322) ⇒
       ln __v1323 ⇒
         let ch_v1324 =
           ((fn x_v1325 ⇒ ln __v1326 ⇒ send(ch_v1322, x_v1325)) false_c11)
             NULL
         in
         let __v1327 = (ln __v1328 ⇒ let __v1329 = ch_v1324 in tt_c9) NULL
         in (ln __v1330 ⇒ s_v1321) NULL
     end) NULL

val readlineclo_i54 = fn __v1331 ⇒ readline_i41(__v1331)

fun print_i42(s_v1332) =
  ln __v1333 ⇒
    let ch_v1334 = (ln __v1335 ⇒ open stdout) NULL in
    let ch_v1336 =
      ((fn x_v1337 ⇒ ln __v1338 ⇒ send(ch_v1334, x_v1337)) true_c10) NULL
    in
    let ch_v1339 =
      ((fn x_v1340 ⇒ ln __v1341 ⇒ send(ch_v1336, x_v1340)) s_v1332) NULL
    in
    let ch_v1342 =
      ((fn x_v1343 ⇒ ln __v1344 ⇒ send(ch_v1339, x_v1343)) false_c11)
        NULL
    in (ln __v1345 ⇒ let __v1346 = ch_v1342 in tt_c9) NULL

val printclo_i55 = fn s_v1347 ⇒ print_i42(s_v1347)

fun prerr_i43(s_v1348) =
  ln __v1349 ⇒
    let ch_v1350 = (ln __v1351 ⇒ open stderr) NULL in
    let ch_v1352 =
      ((fn x_v1353 ⇒ ln __v1354 ⇒ send(ch_v1350, x_v1353)) true_c10) NULL
    in
    let ch_v1355 =
      ((fn x_v1356 ⇒ ln __v1357 ⇒ send(ch_v1352, x_v1356)) s_v1348) NULL
    in
    let ch_v1358 =
      ((fn x_v1359 ⇒ ln __v1360 ⇒ send(ch_v1355, x_v1359)) false_c11)
        NULL
    in (ln __v1361 ⇒ let __v1362 = ch_v1358 in tt_c9) NULL

val prerrclo_i56 = fn s_v1363 ⇒ prerr_i43(s_v1363)

main =
  (let x_v1364 = O_c12 in
   ln __v1365 ⇒
     let ch_v1366 =
       (ln __v1367 ⇒
          fork ch_v1368 in
            (let y_v1369 = x_v1364 in
             ln __v1370 ⇒ let __v1371 = ch_v1368 in tt_c9) NULL)
         NULL
     in (ln __v1372 ⇒ close(ch_v1366)) NULL)
    NULL

trans23 success--------------------------

fun andb_i23(b1_v1497, b2_v1498) =
  match b1_v1497 with
  | true_c10  ⇒ b2_v1498 | false_c11  ⇒ false_c11
  end

val andbclo_i44 = fn b1_v1499 b2_v1500 ⇒ andb_i23(b1_v1499, b2_v1500)

fun orb_i24(b1_v1501, b2_v1502) =
  match b1_v1501 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1502
  end

val orbclo_i45 = fn b1_v1503 b2_v1504 ⇒ orb_i24(b1_v1503, b2_v1504)

fun notb_i25(b_v1505) =
  match b_v1505 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i46 = fn b_v1506 ⇒ notb_i25(b_v1506)

fun addn_i26(x_v1507, y_v1508) =
  match x_v1507 with
  | O_c12  ⇒ y_v1508 | S_c13 x_v1509 ⇒ (S_c13 addn_i26(x_v1509, y_v1508))
  end

val addnclo_i47 = fn x_v1510 y_v1511 ⇒ addn_i26(x_v1510, y_v1511)

fun muln_i27(x_v1512, y_v1513) =
  match x_v1512 with
  | O_c12  ⇒ y_v1513
  | S_c13 x_v1514 ⇒ addn_i26(y_v1513, muln_i27(x_v1514, y_v1513))
  end

val mulnclo_i48 = fn x_v1515 y_v1516 ⇒ muln_i27(x_v1515, y_v1516)

fun eqn_i28(x_v1517, y_v1518) =
  match x_v1517 with
  | O_c12  ⇒
    match y_v1518 with
    | O_c12  ⇒ true_c10 | S_c13 __v1519 ⇒ false_c11
    end
  | S_c13 x_v1520 ⇒
    match y_v1518 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1521 ⇒ eqn_i28(x_v1520, y_v1521)
    end
  end

val eqnclo_i49 = fn x_v1522 y_v1523 ⇒ eqn_i28(x_v1522, y_v1523)

fun lten_i29(x_v1524, y_v1525) =
  match x_v1524 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1526 ⇒
    match y_v1525 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1527 ⇒ lten_i29(x_v1526, y_v1527)
    end
  end

val ltenclo_i50 = fn x_v1528 y_v1529 ⇒ lten_i29(x_v1528, y_v1529)

fun gten_i30(x_v1530, y_v1531) =
  match x_v1530 with
  | O_c12  ⇒
    match y_v1531 with
    | O_c12  ⇒ true_c10 | S_c13 __v1532 ⇒ false_c11
    end
  | S_c13 x_v1533 ⇒
    match y_v1531 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1534 ⇒ gten_i30(x_v1533, y_v1534)
    end
  end

val gtenclo_i51 = fn x_v1535 y_v1536 ⇒ gten_i30(x_v1535, y_v1536)

fun cats_i33(s1_v1537, s2_v1538) =
  match s1_v1537 with
  | EmptyString_c15  ⇒ s2_v1538
  | String_c16 c_v1539 s1_v1540 ⇒
    (String_c16 c_v1539 cats_i33(s1_v1540, s2_v1538))
  end

val catsclo_i52 = fn s1_v1541 s2_v1542 ⇒ cats_i33(s1_v1541, s2_v1542)

fun strlen_i34(s_v1543) =
  match s_v1543 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1544 s_v1545 ⇒ (S_c13 strlen_i34(s_v1545))
  end

val strlenclo_i53 = fn s_v1546 ⇒ strlen_i34(s_v1546)

fun readline_i41(__v1547) =
  ln __v1548 ⇒
    let ch_v1549 = open stdin in
    let ch_v1550 = send(ch_v1549, true_c10) in
    let __v1551 = recv(ch_v1550) in
    (match __v1551 with
     | (s_v1552, ch_v1553) ⇒
       ln __v1554 ⇒
         let ch_v1555 = send(ch_v1553, false_c11) in
         let __v1556 = let __v1557 = ch_v1555 in tt_c9 in s_v1552
     end) NULL

val readlineclo_i54 = fn __v1558 ⇒ readline_i41(__v1558)

fun print_i42(s_v1559) =
  ln __v1560 ⇒
    let ch_v1561 = open stdout in
    let ch_v1562 = send(ch_v1561, true_c10) in
    let ch_v1563 = send(ch_v1562, s_v1559) in
    let ch_v1564 = send(ch_v1563, false_c11) in
    let __v1565 = ch_v1564 in tt_c9

val printclo_i55 = fn s_v1566 ⇒ print_i42(s_v1566)

fun prerr_i43(s_v1567) =
  ln __v1568 ⇒
    let ch_v1569 = open stderr in
    let ch_v1570 = send(ch_v1569, true_c10) in
    let ch_v1571 = send(ch_v1570, s_v1567) in
    let ch_v1572 = send(ch_v1571, false_c11) in
    let __v1573 = ch_v1572 in tt_c9

val prerrclo_i56 = fn s_v1574 ⇒ prerr_i43(s_v1574)

main =
  (let x_v1575 = O_c12 in
   ln __v1576 ⇒
     let ch_v1577 =
       fork ch_v1578 in
         (let y_v1579 = x_v1575 in
          ln __v1580 ⇒ let __v1581 = ch_v1578 in tt_c9) NULL
     in close(ch_v1577))
    NULL

trans3e success--------------------------

#ifndef prelude_h
#define prelude_h

#define tt_c 9
#define true_c 10
#define false_c 11
#define O_c 12
#define S_c 13
#define Ascii_c 14
#define EmptyString_c 15
#define String_c 16

#endif

#include "runtime.h"

tll_ptr O_t126;
tll_ptr addnclo_i47;
tll_ptr andbclo_i44;
tll_ptr app_ret_t137;
tll_ptr catsclo_i52;
tll_ptr eqnclo_i49;
tll_ptr gtenclo_i51;
tll_ptr lam_clo_t101;
tll_ptr lam_clo_t113;
tll_ptr lam_clo_t125;
tll_ptr lam_clo_t136;
tll_ptr lam_clo_t14;
tll_ptr lam_clo_t20;
tll_ptr lam_clo_t28;
tll_ptr lam_clo_t36;
tll_ptr lam_clo_t48;
tll_ptr lam_clo_t58;
tll_ptr lam_clo_t7;
tll_ptr lam_clo_t70;
tll_ptr lam_clo_t78;
tll_ptr lam_clo_t85;
tll_ptr ltenclo_i50;
tll_ptr mulnclo_i48;
tll_ptr notbclo_i46;
tll_ptr orbclo_i45;
tll_ptr prerrclo_i56;
tll_ptr printclo_i55;
tll_ptr readlineclo_i54;
tll_ptr strlenclo_i53;
tll_ptr x_v1690;

tll_ptr andb_i23(tll_ptr b1_v1582, tll_ptr b2_v1583)
{
  tll_ptr false_t2; tll_ptr switch_ret_t1;
  switch(((tll_node)b1_v1582)->tag) {
    case 10:
      switch_ret_t1 = b2_v1583;
      break;
    case 11:
      instr_struct(&false_t2, 11, 0);
      switch_ret_t1 = false_t2;
      break;
  }
  return switch_ret_t1;
}

tll_ptr lam_fun_t4(tll_ptr b2_v1586, tll_env env)
{
  tll_ptr call_ret_t3;
  call_ret_t3 = andb_i23(env[0], b2_v1586);
  return call_ret_t3;
}

tll_ptr lam_fun_t6(tll_ptr b1_v1584, tll_env env)
{
  tll_ptr lam_clo_t5;
  instr_clo(&lam_clo_t5, &lam_fun_t4, 1, b1_v1584);
  return lam_clo_t5;
}

tll_ptr orb_i24(tll_ptr b1_v1587, tll_ptr b2_v1588)
{
  tll_ptr switch_ret_t8; tll_ptr true_t9;
  switch(((tll_node)b1_v1587)->tag) {
    case 10:
      instr_struct(&true_t9, 10, 0);
      switch_ret_t8 = true_t9;
      break;
    case 11:
      switch_ret_t8 = b2_v1588;
      break;
  }
  return switch_ret_t8;
}

tll_ptr lam_fun_t11(tll_ptr b2_v1591, tll_env env)
{
  tll_ptr call_ret_t10;
  call_ret_t10 = orb_i24(env[0], b2_v1591);
  return call_ret_t10;
}

tll_ptr lam_fun_t13(tll_ptr b1_v1589, tll_env env)
{
  tll_ptr lam_clo_t12;
  instr_clo(&lam_clo_t12, &lam_fun_t11, 1, b1_v1589);
  return lam_clo_t12;
}

tll_ptr notb_i25(tll_ptr b_v1592)
{
  tll_ptr false_t16; tll_ptr switch_ret_t15; tll_ptr true_t17;
  switch(((tll_node)b_v1592)->tag) {
    case 10:
      instr_struct(&false_t16, 11, 0);
      switch_ret_t15 = false_t16;
      break;
    case 11:
      instr_struct(&true_t17, 10, 0);
      switch_ret_t15 = true_t17;
      break;
  }
  return switch_ret_t15;
}

tll_ptr lam_fun_t19(tll_ptr b_v1593, tll_env env)
{
  tll_ptr call_ret_t18;
  call_ret_t18 = notb_i25(b_v1593);
  return call_ret_t18;
}

tll_ptr addn_i26(tll_ptr x_v1594, tll_ptr y_v1595)
{
  tll_ptr S_t23; tll_ptr call_ret_t22; tll_ptr switch_ret_t21;
  tll_ptr x_v1596;
  switch(((tll_node)x_v1594)->tag) {
    case 12:
      switch_ret_t21 = y_v1595;
      break;
    case 13:
      x_v1596 = ((tll_node)x_v1594)->data[0];
      call_ret_t22 = addn_i26(x_v1596, y_v1595);
      instr_struct(&S_t23, 13, 1, call_ret_t22);
      switch_ret_t21 = S_t23;
      break;
  }
  return switch_ret_t21;
}

tll_ptr lam_fun_t25(tll_ptr y_v1599, tll_env env)
{
  tll_ptr call_ret_t24;
  call_ret_t24 = addn_i26(env[0], y_v1599);
  return call_ret_t24;
}

tll_ptr lam_fun_t27(tll_ptr x_v1597, tll_env env)
{
  tll_ptr lam_clo_t26;
  instr_clo(&lam_clo_t26, &lam_fun_t25, 1, x_v1597);
  return lam_clo_t26;
}

tll_ptr muln_i27(tll_ptr x_v1600, tll_ptr y_v1601)
{
  tll_ptr call_ret_t30; tll_ptr call_ret_t31; tll_ptr switch_ret_t29;
  tll_ptr x_v1602;
  switch(((tll_node)x_v1600)->tag) {
    case 12:
      switch_ret_t29 = y_v1601;
      break;
    case 13:
      x_v1602 = ((tll_node)x_v1600)->data[0];
      call_ret_t31 = muln_i27(x_v1602, y_v1601);
      call_ret_t30 = addn_i26(y_v1601, call_ret_t31);
      switch_ret_t29 = call_ret_t30;
      break;
  }
  return switch_ret_t29;
}

tll_ptr lam_fun_t33(tll_ptr y_v1605, tll_env env)
{
  tll_ptr call_ret_t32;
  call_ret_t32 = muln_i27(env[0], y_v1605);
  return call_ret_t32;
}

tll_ptr lam_fun_t35(tll_ptr x_v1603, tll_env env)
{
  tll_ptr lam_clo_t34;
  instr_clo(&lam_clo_t34, &lam_fun_t33, 1, x_v1603);
  return lam_clo_t34;
}

tll_ptr eqn_i28(tll_ptr x_v1606, tll_ptr y_v1607)
{
  tll_ptr __v1608; tll_ptr call_ret_t43; tll_ptr false_t40;
  tll_ptr false_t42; tll_ptr switch_ret_t37; tll_ptr switch_ret_t38;
  tll_ptr switch_ret_t41; tll_ptr true_t39; tll_ptr x_v1609; tll_ptr y_v1610;
  switch(((tll_node)x_v1606)->tag) {
    case 12:
      switch(((tll_node)y_v1607)->tag) {
        case 12:
          instr_struct(&true_t39, 10, 0);
          switch_ret_t38 = true_t39;
          break;
        case 13:
          __v1608 = ((tll_node)y_v1607)->data[0];
          instr_struct(&false_t40, 11, 0);
          switch_ret_t38 = false_t40;
          break;
      }
      switch_ret_t37 = switch_ret_t38;
      break;
    case 13:
      x_v1609 = ((tll_node)x_v1606)->data[0];
      switch(((tll_node)y_v1607)->tag) {
        case 12:
          instr_struct(&false_t42, 11, 0);
          switch_ret_t41 = false_t42;
          break;
        case 13:
          y_v1610 = ((tll_node)y_v1607)->data[0];
          call_ret_t43 = eqn_i28(x_v1609, y_v1610);
          switch_ret_t41 = call_ret_t43;
          break;
      }
      switch_ret_t37 = switch_ret_t41;
      break;
  }
  return switch_ret_t37;
}

tll_ptr lam_fun_t45(tll_ptr y_v1613, tll_env env)
{
  tll_ptr call_ret_t44;
  call_ret_t44 = eqn_i28(env[0], y_v1613);
  return call_ret_t44;
}

tll_ptr lam_fun_t47(tll_ptr x_v1611, tll_env env)
{
  tll_ptr lam_clo_t46;
  instr_clo(&lam_clo_t46, &lam_fun_t45, 1, x_v1611);
  return lam_clo_t46;
}

tll_ptr lten_i29(tll_ptr x_v1614, tll_ptr y_v1615)
{
  tll_ptr call_ret_t53; tll_ptr false_t52; tll_ptr switch_ret_t49;
  tll_ptr switch_ret_t51; tll_ptr true_t50; tll_ptr x_v1616; tll_ptr y_v1617;
  switch(((tll_node)x_v1614)->tag) {
    case 12:
      instr_struct(&true_t50, 10, 0);
      switch_ret_t49 = true_t50;
      break;
    case 13:
      x_v1616 = ((tll_node)x_v1614)->data[0];
      switch(((tll_node)y_v1615)->tag) {
        case 12:
          instr_struct(&false_t52, 11, 0);
          switch_ret_t51 = false_t52;
          break;
        case 13:
          y_v1617 = ((tll_node)y_v1615)->data[0];
          call_ret_t53 = lten_i29(x_v1616, y_v1617);
          switch_ret_t51 = call_ret_t53;
          break;
      }
      switch_ret_t49 = switch_ret_t51;
      break;
  }
  return switch_ret_t49;
}

tll_ptr lam_fun_t55(tll_ptr y_v1620, tll_env env)
{
  tll_ptr call_ret_t54;
  call_ret_t54 = lten_i29(env[0], y_v1620);
  return call_ret_t54;
}

tll_ptr lam_fun_t57(tll_ptr x_v1618, tll_env env)
{
  tll_ptr lam_clo_t56;
  instr_clo(&lam_clo_t56, &lam_fun_t55, 1, x_v1618);
  return lam_clo_t56;
}

tll_ptr gten_i30(tll_ptr x_v1621, tll_ptr y_v1622)
{
  tll_ptr __v1623; tll_ptr call_ret_t65; tll_ptr false_t62;
  tll_ptr switch_ret_t59; tll_ptr switch_ret_t60; tll_ptr switch_ret_t63;
  tll_ptr true_t61; tll_ptr true_t64; tll_ptr x_v1624; tll_ptr y_v1625;
  switch(((tll_node)x_v1621)->tag) {
    case 12:
      switch(((tll_node)y_v1622)->tag) {
        case 12:
          instr_struct(&true_t61, 10, 0);
          switch_ret_t60 = true_t61;
          break;
        case 13:
          __v1623 = ((tll_node)y_v1622)->data[0];
          instr_struct(&false_t62, 11, 0);
          switch_ret_t60 = false_t62;
          break;
      }
      switch_ret_t59 = switch_ret_t60;
      break;
    case 13:
      x_v1624 = ((tll_node)x_v1621)->data[0];
      switch(((tll_node)y_v1622)->tag) {
        case 12:
          instr_struct(&true_t64, 10, 0);
          switch_ret_t63 = true_t64;
          break;
        case 13:
          y_v1625 = ((tll_node)y_v1622)->data[0];
          call_ret_t65 = gten_i30(x_v1624, y_v1625);
          switch_ret_t63 = call_ret_t65;
          break;
      }
      switch_ret_t59 = switch_ret_t63;
      break;
  }
  return switch_ret_t59;
}

tll_ptr lam_fun_t67(tll_ptr y_v1628, tll_env env)
{
  tll_ptr call_ret_t66;
  call_ret_t66 = gten_i30(env[0], y_v1628);
  return call_ret_t66;
}

tll_ptr lam_fun_t69(tll_ptr x_v1626, tll_env env)
{
  tll_ptr lam_clo_t68;
  instr_clo(&lam_clo_t68, &lam_fun_t67, 1, x_v1626);
  return lam_clo_t68;
}

tll_ptr cats_i33(tll_ptr s1_v1629, tll_ptr s2_v1630)
{
  tll_ptr String_t73; tll_ptr c_v1631; tll_ptr call_ret_t72;
  tll_ptr s1_v1632; tll_ptr switch_ret_t71;
  switch(((tll_node)s1_v1629)->tag) {
    case 15:
      switch_ret_t71 = s2_v1630;
      break;
    case 16:
      c_v1631 = ((tll_node)s1_v1629)->data[0];
      s1_v1632 = ((tll_node)s1_v1629)->data[1];
      call_ret_t72 = cats_i33(s1_v1632, s2_v1630);
      instr_struct(&String_t73, 16, 2, c_v1631, call_ret_t72);
      switch_ret_t71 = String_t73;
      break;
  }
  return switch_ret_t71;
}

tll_ptr lam_fun_t75(tll_ptr s2_v1635, tll_env env)
{
  tll_ptr call_ret_t74;
  call_ret_t74 = cats_i33(env[0], s2_v1635);
  return call_ret_t74;
}

tll_ptr lam_fun_t77(tll_ptr s1_v1633, tll_env env)
{
  tll_ptr lam_clo_t76;
  instr_clo(&lam_clo_t76, &lam_fun_t75, 1, s1_v1633);
  return lam_clo_t76;
}

tll_ptr strlen_i34(tll_ptr s_v1636)
{
  tll_ptr O_t80; tll_ptr S_t82; tll_ptr __v1637; tll_ptr call_ret_t81;
  tll_ptr s_v1638; tll_ptr switch_ret_t79;
  switch(((tll_node)s_v1636)->tag) {
    case 15:
      instr_struct(&O_t80, 12, 0);
      switch_ret_t79 = O_t80;
      break;
    case 16:
      __v1637 = ((tll_node)s_v1636)->data[0];
      s_v1638 = ((tll_node)s_v1636)->data[1];
      call_ret_t81 = strlen_i34(s_v1638);
      instr_struct(&S_t82, 13, 1, call_ret_t81);
      switch_ret_t79 = S_t82;
      break;
  }
  return switch_ret_t79;
}

tll_ptr lam_fun_t84(tll_ptr s_v1639, tll_env env)
{
  tll_ptr call_ret_t83;
  call_ret_t83 = strlen_i34(s_v1639);
  return call_ret_t83;
}

tll_ptr lam_fun_t94(tll_ptr __v1656, tll_env env)
{
  tll_ptr __v1661; tll_ptr __v1662; tll_ptr ch_v1660; tll_ptr false_t92;
  tll_ptr send_ch_t91; tll_ptr tt_t93;
  instr_struct(&false_t92, 11, 0);
  instr_send(&send_ch_t91, env[0], false_t92);
  ch_v1660 = send_ch_t91;
  __v1662 = ch_v1660;
  instr_struct(&tt_t93, 9, 0);
  __v1661 = tt_t93;
  return env[1];
}

tll_ptr lam_fun_t97(tll_ptr __v1641, tll_env env)
{
  tll_ptr __v1653; tll_ptr app_ret_t96; tll_ptr ch_v1651; tll_ptr ch_v1652;
  tll_ptr ch_v1655; tll_ptr lam_clo_t95; tll_ptr prim_ch_t86;
  tll_ptr recv_msg_t89; tll_ptr s_v1654; tll_ptr send_ch_t87;
  tll_ptr switch_ret_t90; tll_ptr true_t88;
  instr_open(&prim_ch_t86, &proc_stdin);
  ch_v1651 = prim_ch_t86;
  instr_struct(&true_t88, 10, 0);
  instr_send(&send_ch_t87, ch_v1651, true_t88);
  ch_v1652 = send_ch_t87;
  instr_recv(&recv_msg_t89, ch_v1652);
  __v1653 = recv_msg_t89;
  switch(((tll_node)__v1653)->tag) {
    case 0:
      s_v1654 = ((tll_node)__v1653)->data[0];
      ch_v1655 = ((tll_node)__v1653)->data[1];
      instr_free_struct(__v1653);
      instr_clo(&lam_clo_t95, &lam_fun_t94, 2, ch_v1655, s_v1654);
      switch_ret_t90 = lam_clo_t95;
      break;
  }
  instr_app(&app_ret_t96, switch_ret_t90, 0);
  instr_free_clo(switch_ret_t90);
  return app_ret_t96;
}

tll_ptr readline_i41(tll_ptr __v1640)
{
  tll_ptr lam_clo_t98;
  instr_clo(&lam_clo_t98, &lam_fun_t97, 0);
  return lam_clo_t98;
}

tll_ptr lam_fun_t100(tll_ptr __v1663, tll_env env)
{
  tll_ptr call_ret_t99;
  call_ret_t99 = readline_i41(__v1663);
  return call_ret_t99;
}

tll_ptr lam_fun_t109(tll_ptr __v1665, tll_env env)
{
  tll_ptr __v1675; tll_ptr ch_v1671; tll_ptr ch_v1672; tll_ptr ch_v1673;
  tll_ptr ch_v1674; tll_ptr false_t107; tll_ptr prim_ch_t102;
  tll_ptr send_ch_t103; tll_ptr send_ch_t105; tll_ptr send_ch_t106;
  tll_ptr true_t104; tll_ptr tt_t108;
  instr_open(&prim_ch_t102, &proc_stdout);
  ch_v1671 = prim_ch_t102;
  instr_struct(&true_t104, 10, 0);
  instr_send(&send_ch_t103, ch_v1671, true_t104);
  ch_v1672 = send_ch_t103;
  instr_send(&send_ch_t105, ch_v1672, env[0]);
  ch_v1673 = send_ch_t105;
  instr_struct(&false_t107, 11, 0);
  instr_send(&send_ch_t106, ch_v1673, false_t107);
  ch_v1674 = send_ch_t106;
  __v1675 = ch_v1674;
  instr_struct(&tt_t108, 9, 0);
  return tt_t108;
}

tll_ptr print_i42(tll_ptr s_v1664)
{
  tll_ptr lam_clo_t110;
  instr_clo(&lam_clo_t110, &lam_fun_t109, 1, s_v1664);
  return lam_clo_t110;
}

tll_ptr lam_fun_t112(tll_ptr s_v1676, tll_env env)
{
  tll_ptr call_ret_t111;
  call_ret_t111 = print_i42(s_v1676);
  return call_ret_t111;
}

tll_ptr lam_fun_t121(tll_ptr __v1678, tll_env env)
{
  tll_ptr __v1688; tll_ptr ch_v1684; tll_ptr ch_v1685; tll_ptr ch_v1686;
  tll_ptr ch_v1687; tll_ptr false_t119; tll_ptr prim_ch_t114;
  tll_ptr send_ch_t115; tll_ptr send_ch_t117; tll_ptr send_ch_t118;
  tll_ptr true_t116; tll_ptr tt_t120;
  instr_open(&prim_ch_t114, &proc_stderr);
  ch_v1684 = prim_ch_t114;
  instr_struct(&true_t116, 10, 0);
  instr_send(&send_ch_t115, ch_v1684, true_t116);
  ch_v1685 = send_ch_t115;
  instr_send(&send_ch_t117, ch_v1685, env[0]);
  ch_v1686 = send_ch_t117;
  instr_struct(&false_t119, 11, 0);
  instr_send(&send_ch_t118, ch_v1686, false_t119);
  ch_v1687 = send_ch_t118;
  __v1688 = ch_v1687;
  instr_struct(&tt_t120, 9, 0);
  return tt_t120;
}

tll_ptr prerr_i43(tll_ptr s_v1677)
{
  tll_ptr lam_clo_t122;
  instr_clo(&lam_clo_t122, &lam_fun_t121, 1, s_v1677);
  return lam_clo_t122;
}

tll_ptr lam_fun_t124(tll_ptr s_v1689, tll_env env)
{
  tll_ptr call_ret_t123;
  call_ret_t123 = prerr_i43(s_v1689);
  return call_ret_t123;
}

tll_ptr lam_fun_t128(tll_ptr __v1703, tll_env env)
{
  tll_ptr __v1705; tll_ptr tt_t127;
  __v1705 = env[0];
  instr_struct(&tt_t127, 9, 0);
  return tt_t127;
}

tll_ptr fork_fun_t131(tll_env env)
{
  tll_ptr app_ret_t130; tll_ptr fork_ret_t133; tll_ptr lam_clo_t129;
  tll_ptr y_v1702;
  y_v1702 = env[1];
  instr_clo(&lam_clo_t129, &lam_fun_t128, 1, env[0]);
  instr_app(&app_ret_t130, lam_clo_t129, 0);
  instr_free_clo(lam_clo_t129);
  fork_ret_t133 = app_ret_t130;
  instr_free_thread(env);
  return fork_ret_t133;
}

tll_ptr lam_fun_t135(tll_ptr __v1691, tll_env env)
{
  tll_ptr ch_v1697; tll_ptr close_tmp_t134; tll_ptr fork_ch_t132;
  instr_fork(&fork_ch_t132, &fork_fun_t131, 1, env[0])
  ch_v1697 = fork_ch_t132;
  instr_close(&close_tmp_t134, ch_v1697);
  return close_tmp_t134;
}

int main()
{
  instr_init();
  instr_clo(&lam_clo_t7, &lam_fun_t6, 0);
  andbclo_i44 = lam_clo_t7;
  instr_clo(&lam_clo_t14, &lam_fun_t13, 0);
  orbclo_i45 = lam_clo_t14;
  instr_clo(&lam_clo_t20, &lam_fun_t19, 0);
  notbclo_i46 = lam_clo_t20;
  instr_clo(&lam_clo_t28, &lam_fun_t27, 0);
  addnclo_i47 = lam_clo_t28;
  instr_clo(&lam_clo_t36, &lam_fun_t35, 0);
  mulnclo_i48 = lam_clo_t36;
  instr_clo(&lam_clo_t48, &lam_fun_t47, 0);
  eqnclo_i49 = lam_clo_t48;
  instr_clo(&lam_clo_t58, &lam_fun_t57, 0);
  ltenclo_i50 = lam_clo_t58;
  instr_clo(&lam_clo_t70, &lam_fun_t69, 0);
  gtenclo_i51 = lam_clo_t70;
  instr_clo(&lam_clo_t78, &lam_fun_t77, 0);
  catsclo_i52 = lam_clo_t78;
  instr_clo(&lam_clo_t85, &lam_fun_t84, 0);
  strlenclo_i53 = lam_clo_t85;
  instr_clo(&lam_clo_t101, &lam_fun_t100, 0);
  readlineclo_i54 = lam_clo_t101;
  instr_clo(&lam_clo_t113, &lam_fun_t112, 0);
  printclo_i55 = lam_clo_t113;
  instr_clo(&lam_clo_t125, &lam_fun_t124, 0);
  prerrclo_i56 = lam_clo_t125;
  instr_struct(&O_t126, 12, 0);
  x_v1690 = O_t126;
  instr_clo(&lam_clo_t136, &lam_fun_t135, 1, x_v1690);
  instr_app(&app_ret_t137, lam_clo_t136, 0);
  instr_free_clo(lam_clo_t136);
  instr_free_struct(app_ret_t137);
  return 0;
}

trans34 success--------------------------

