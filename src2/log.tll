parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v113 : bool_d2) (b2_v114 : bool_d2) ⇒
    match b1_v113 as __v115 in ??1 with
    | true_c2  ⇒ b2_v114 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v118 : bool_d2) (b2_v119 : bool_d2) ⇒
    match b1_v118 as __v120 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v119
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v122 : bool_d2) ⇒
    match b_v122 as __v123 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v124 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v127 : nat_d3) (y_v128 : nat_d3) ⇒
    match x_v127 as __v129 in ??4 with
    | O_c4  ⇒ y_v128 | S_c5 x_v130 ⇒ (S_c5‹› (addn_i4 x_v130 y_v128))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v133 : nat_d3) (y_v134 : nat_d3) ⇒
    match x_v133 as __v135 in ??5 with
    | O_c4  ⇒ y_v134
    | S_c5 x_v136 ⇒ (addn_i4 y_v134 (muln_i5 x_v136 y_v134))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v139 : nat_d3) (y_v140 : nat_d3) ⇒
    match x_v139 as __v141 in ??6 with
    | O_c4  ⇒
      match y_v140 as __v142 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v143 ⇒ false_c3‹›
      end
    | S_c5 x_v144 ⇒
      match y_v140 as __v145 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v146 ⇒ (eqn_i6 x_v144 y_v146)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v149 : nat_d3) (y_v150 : nat_d3) ⇒
    match x_v149 as __v151 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v152 ⇒
      match y_v150 as __v153 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v154 ⇒ (lten_i7 x_v152 y_v154)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v157 : nat_d3) (y_v158 : nat_d3) ⇒
    match x_v157 as __v159 in ??11 with
    | O_c4  ⇒
      match y_v158 as __v160 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v161 ⇒ false_c3‹›
      end
    | S_c5 x_v162 ⇒
      match y_v158 as __v163 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v164 ⇒ (gten_i8 x_v162 y_v164)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v167 : nat_d3) (y_v168 : nat_d3) ⇒
    match x_v167 as __v169 in ??14 with
    | O_c4  ⇒
      match y_v168 as __v170 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v171 ⇒ true_c2‹›
      end
    | S_c5 x_v172 ⇒
      match y_v168 as __v173 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v174 ⇒ (ltn_i9 x_v172 y_v174)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v177 : nat_d3) (y_v178 : nat_d3) ⇒
    match x_v177 as __v179 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v180 ⇒
      match y_v178 as __v181 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v182 ⇒ (gtn_i10 x_v180 y_v182)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v183 : bool_d2) (b1_v184 : bool_d2) (b2_v185 : bool_d2)
    (b3_v186 : bool_d2) (b4_v187 : bool_d2) (b5_v188 : bool_d2)
    (b6_v189 : bool_d2) (b7_v190 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v191 : ascii_d4) (s_v192 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v195 : string_d5) (s2_v196 : string_d5) ⇒
    match s1_v195 as __v197 in ??19 with
    | EmptyString_c7  ⇒ s2_v196
    | String_c8 c_v198 s1_v199 ⇒
      (String_c8‹› c_v198 (cats_i11 s1_v199 s2_v196))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v201 : string_d5) ⇒
    match s_v201 as __v202 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v203 s_v204 ⇒ (S_c5‹› (strlen_i12 s_v204))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v206 : unit_d1) ⇒
    ⇑(b_v207 : bool_d2) ⇒
      match b_v207 as __v208 in ??21 with
      | true_c2  ⇒ ⇓(__v209 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v211 : unit_d1) ⇒
    ⇑(b_v212 : bool_d2) ⇒
      match b_v212 as __v213 in ??22 with
      | true_c2  ⇒ ⇑(__v214 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v216 : unit_d1) ⇒
    ⇑(b_v217 : bool_d2) ⇒
      match b_v217 as __v218 in ??23 with
      | true_c2  ⇒ ⇑(__v219 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v221 : unit_d1) ⇒
    let ch_v222 ⇐ open stdin in
    let ch_v223 ⇐ (send ch_v222 true_c2‹›) in
    let __v224 ⇐ recv ch_v223 in
    match __v224 as __v225 in ??24 with
    | ⟨s_v226, ch_v227⟩ ⇒
      let ch_v228 ⇐ (send ch_v227 false_c3‹›) in
      let __v229 ⇐ close ch_v228 in return s_v226
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v231 : string_d5) ⇒
    let ch_v232 ⇐ open stdout in
    let ch_v233 ⇐ (send ch_v232 true_c2‹›) in
    let ch_v234 ⇐ (send ch_v233 s_v231) in
    let ch_v235 ⇐ (send ch_v234 false_c3‹›) in close ch_v235

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v237 : string_d5) ⇒
    let ch_v238 ⇐ open stderr in
    let ch_v239 ⇐ (send ch_v238 true_c2‹›) in
    let ch_v240 ⇐ (send ch_v239 s_v237) in
    let ch_v241 ⇐ (send ch_v240 false_c3‹›) in close ch_v241

program main_i22 : IO unit_d1 =
  let c_v242 ⇐
    fork (c_v243 : ch⟨⇑(__v244 : string_d5) ⇒ end⟩) in
      let s_v245 ⇐ (readline_i19 tt_c1‹›) in
      let c_v246 ⇐ (send c_v243 s_v245) in close c_v246
  in
  let __v247 ⇐ recv c_v242 in
  match __v247 as __v248 in ??25 with
  | ⟨msg_v249, c_v250⟩ ⇒
    let __v251 ⇐ close c_v250 in (print_i20 msg_v249)
  end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v898 : bool_d2) (b2_v899 : bool_d2) ⇒
    match b1_v898 as __v900 in bool_d2 with
    | true_c2  ⇒ b2_v899 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v903 : bool_d2) (b2_v904 : bool_d2) ⇒
    match b1_v903 as __v905 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v904
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v907 : bool_d2) ⇒
    match b_v907 as __v908 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v909 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v912 : nat_d3) (y_v913 : nat_d3) ⇒
    match x_v912 as __v914 in nat_d3 with
    | O_c4  ⇒ y_v913 | S_c5 x_v915 ⇒ (S_c5‹› (addn_i4 x_v915 y_v913))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v918 : nat_d3) (y_v919 : nat_d3) ⇒
    match x_v918 as __v920 in nat_d3 with
    | O_c4  ⇒ y_v919
    | S_c5 x_v921 ⇒ (addn_i4 y_v919 (muln_i5 x_v921 y_v919))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v924 : nat_d3) (y_v925 : nat_d3) ⇒
    match x_v924 as __v926 in bool_d2 with
    | O_c4  ⇒
      match y_v925 as __v927 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v928 ⇒ false_c3‹›
      end
    | S_c5 x_v929 ⇒
      match y_v925 as __v930 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v931 ⇒ (eqn_i6 x_v929 y_v931)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v934 : nat_d3) (y_v935 : nat_d3) ⇒
    match x_v934 as __v936 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v937 ⇒
      match y_v935 as __v938 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v939 ⇒ (lten_i7 x_v937 y_v939)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v942 : nat_d3) (y_v943 : nat_d3) ⇒
    match x_v942 as __v944 in bool_d2 with
    | O_c4  ⇒
      match y_v943 as __v945 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v946 ⇒ false_c3‹›
      end
    | S_c5 x_v947 ⇒
      match y_v943 as __v948 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v949 ⇒ (gten_i8 x_v947 y_v949)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v952 : nat_d3) (y_v953 : nat_d3) ⇒
    match x_v952 as __v954 in bool_d2 with
    | O_c4  ⇒
      match y_v953 as __v955 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v956 ⇒ true_c2‹›
      end
    | S_c5 x_v957 ⇒
      match y_v953 as __v958 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v959 ⇒ (ltn_i9 x_v957 y_v959)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v962 : nat_d3) (y_v963 : nat_d3) ⇒
    match x_v962 as __v964 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v965 ⇒
      match y_v963 as __v966 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v967 ⇒ (gtn_i10 x_v965 y_v967)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v968 : bool_d2) (b1_v969 : bool_d2) (b2_v970 : bool_d2)
    (b3_v971 : bool_d2) (b4_v972 : bool_d2) (b5_v973 : bool_d2)
    (b6_v974 : bool_d2) (b7_v975 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v976 : ascii_d4) (s_v977 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v980 : string_d5) (s2_v981 : string_d5) ⇒
    match s1_v980 as __v982 in string_d5 with
    | EmptyString_c7  ⇒ s2_v981
    | String_c8 c_v983 s1_v984 ⇒
      (String_c8‹› c_v983 (cats_i11 s1_v984 s2_v981))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v986 : string_d5) ⇒
    match s_v986 as __v987 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v988 s_v989 ⇒ (S_c5‹› (strlen_i12 s_v989))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v991 : unit_d1) ⇒
    ⇑(b_v992 : bool_d2) ⇒
      match b_v992 as __v993 in proto with
      | true_c2  ⇒ ⇓(__v994 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v996 : unit_d1) ⇒
    ⇑(b_v997 : bool_d2) ⇒
      match b_v997 as __v998 in proto with
      | true_c2  ⇒ ⇑(__v999 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v1001 : unit_d1) ⇒
    ⇑(b_v1002 : bool_d2) ⇒
      match b_v1002 as __v1003 in proto with
      | true_c2  ⇒
        ⇑(__v1004 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v1006 : unit_d1) ⇒
    let ch_v1007 ⇐ open stdin in
    let ch_v1008 ⇐ (send ch_v1007 true_c2‹›) in
    let __v1009 ⇐ recv ch_v1008 in
    match __v1009 as __v1010 in IO string_d5 with
    | ⟨s_v1011, ch_v1012⟩ ⇒
      let ch_v1013 ⇐ (send ch_v1012 false_c3‹›) in
      let __v1014 ⇐ close ch_v1013 in return s_v1011
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v1016 : string_d5) ⇒
    let ch_v1017 ⇐ open stdout in
    let ch_v1018 ⇐ (send ch_v1017 true_c2‹›) in
    let ch_v1019 ⇐ (send ch_v1018 s_v1016) in
    let ch_v1020 ⇐ (send ch_v1019 false_c3‹›) in close ch_v1020

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v1022 : string_d5) ⇒
    let ch_v1023 ⇐ open stderr in
    let ch_v1024 ⇐ (send ch_v1023 true_c2‹›) in
    let ch_v1025 ⇐ (send ch_v1024 s_v1022) in
    let ch_v1026 ⇐ (send ch_v1025 false_c3‹›) in close ch_v1026

program main_i22 : IO unit_d1 =
  let c_v1027 ⇐
    fork (c_v1028 : ch⟨⇑(__v1029 : string_d5) ⇒ end⟩) in
      let s_v1030 ⇐ (readline_i19 tt_c1‹›) in
      let c_v1031 ⇐ (send c_v1028 s_v1030) in close c_v1031
  in
  let __v1032 ⇐ recv c_v1027 in
  match __v1032 as __v1033 in IO unit_d1 with
  | ⟨msg_v1034, c_v1035⟩ ⇒
    let __v1036 ⇐ close c_v1035 in (print_i20 msg_v1034)
  end

trans1e success--------------------------

data unit_d6 =
| tt_c9 of size(0)

data bool_d7 =
| true_c10 of size(0) | false_c11 of size(0)

def andb_i23 =
  fn b1_v1175 b2_v1176 ⇒
    match b1_v1175 with
    | true_c10  ⇒ b2_v1176 | false_c11  ⇒ false_c11
    end

def orb_i24 =
  fn b1_v1177 b2_v1178 ⇒
    match b1_v1177 with
    | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1178
    end

def notb_i25 =
  fn b_v1179 ⇒
    match b_v1179 with
    | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
    end

data nat_d8 =
| O_c12 of size(0) | S_c13 of size(1)

def addn_i26 =
  fn x_v1180 y_v1181 ⇒
    match x_v1180 with
    | O_c12  ⇒ y_v1181
    | S_c13 x_v1182 ⇒ (S_c13 ((addn_i26 x_v1182) y_v1181))
    end

def muln_i27 =
  fn x_v1183 y_v1184 ⇒
    match x_v1183 with
    | O_c12  ⇒ y_v1184
    | S_c13 x_v1185 ⇒ ((addn_i26 y_v1184) ((muln_i27 x_v1185) y_v1184))
    end

def eqn_i28 =
  fn x_v1186 y_v1187 ⇒
    match x_v1186 with
    | O_c12  ⇒
      match y_v1187 with
      | O_c12  ⇒ true_c10 | S_c13 __v1188 ⇒ false_c11
      end
    | S_c13 x_v1189 ⇒
      match y_v1187 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1190 ⇒ ((eqn_i28 x_v1189) y_v1190)
      end
    end

def lten_i29 =
  fn x_v1191 y_v1192 ⇒
    match x_v1191 with
    | O_c12  ⇒ true_c10
    | S_c13 x_v1193 ⇒
      match y_v1192 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1194 ⇒ ((lten_i29 x_v1193) y_v1194)
      end
    end

def gten_i30 =
  fn x_v1195 y_v1196 ⇒
    match x_v1195 with
    | O_c12  ⇒
      match y_v1196 with
      | O_c12  ⇒ true_c10 | S_c13 __v1197 ⇒ false_c11
      end
    | S_c13 x_v1198 ⇒
      match y_v1196 with
      | O_c12  ⇒ true_c10 | S_c13 y_v1199 ⇒ ((gten_i30 x_v1198) y_v1199)
      end
    end

data ascii_d9 =
| Ascii_c14 of size(8)

data string_d10 =
| EmptyString_c15 of size(0) | String_c16 of size(2)

def cats_i33 =
  fn s1_v1200 s2_v1201 ⇒
    match s1_v1200 with
    | EmptyString_c15  ⇒ s2_v1201
    | String_c16 c_v1202 s1_v1203 ⇒
      (String_c16 c_v1202 ((cats_i33 s1_v1203) s2_v1201))
    end

def strlen_i34 =
  fn s_v1204 ⇒
    match s_v1204 with
    | EmptyString_c15  ⇒ O_c12
    | String_c16 __v1205 s_v1206 ⇒ (S_c13 (strlen_i34 s_v1206))
    end

def readline_i41 =
  fn __v1207 ⇒
    let ch_v1208 ⇐ open stdin in
    let ch_v1209 ⇐ (send ch_v1208 true_c10) in
    let __v1210 ⇐ recv ch_v1209 in
    match __v1210 with
    | (s_v1211, ch_v1212) ⇒
      let ch_v1213 ⇐ (send ch_v1212 false_c11) in
      let __v1214 ⇐ close⇑ ch_v1213 in return s_v1211
    end

def print_i42 =
  fn s_v1215 ⇒
    let ch_v1216 ⇐ open stdout in
    let ch_v1217 ⇐ (send ch_v1216 true_c10) in
    let ch_v1218 ⇐ (send ch_v1217 s_v1215) in
    let ch_v1219 ⇐ (send ch_v1218 false_c11) in close⇑ ch_v1219

def prerr_i43 =
  fn s_v1220 ⇒
    let ch_v1221 ⇐ open stderr in
    let ch_v1222 ⇐ (send ch_v1221 true_c10) in
    let ch_v1223 ⇐ (send ch_v1222 s_v1220) in
    let ch_v1224 ⇐ (send ch_v1223 false_c11) in close⇑ ch_v1224

main =
  let c_v1225 ⇐
    fork c_v1226 in
      let s_v1227 ⇐ (readline_i41 tt_c9) in
      let c_v1228 ⇐ (send c_v1226 s_v1227) in close⇑ c_v1228
  in
  let __v1229 ⇐ recv c_v1225 in
  match __v1229 with
  | (msg_v1230, c_v1231) ⇒
    let __v1232 ⇐ close⇓ c_v1231 in (print_i42 msg_v1230)
  end

trans12 success--------------------------

fun andb_i23(b1_v1328, b2_v1329) =
  match b1_v1328 with
  | true_c10  ⇒ b2_v1329 | false_c11  ⇒ false_c11
  end

val andbclo_i44 = fn b1_v1330 b2_v1331 ⇒ andb_i23(b1_v1330, b2_v1331)

fun orb_i24(b1_v1332, b2_v1333) =
  match b1_v1332 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1333
  end

val orbclo_i45 = fn b1_v1334 b2_v1335 ⇒ orb_i24(b1_v1334, b2_v1335)

fun notb_i25(b_v1336) =
  match b_v1336 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i46 = fn b_v1337 ⇒ notb_i25(b_v1337)

fun addn_i26(x_v1338, y_v1339) =
  match x_v1338 with
  | O_c12  ⇒ y_v1339 | S_c13 x_v1340 ⇒ (S_c13 addn_i26(x_v1340, y_v1339))
  end

val addnclo_i47 = fn x_v1341 y_v1342 ⇒ addn_i26(x_v1341, y_v1342)

fun muln_i27(x_v1343, y_v1344) =
  match x_v1343 with
  | O_c12  ⇒ y_v1344
  | S_c13 x_v1345 ⇒ addn_i26(y_v1344, muln_i27(x_v1345, y_v1344))
  end

val mulnclo_i48 = fn x_v1346 y_v1347 ⇒ muln_i27(x_v1346, y_v1347)

fun eqn_i28(x_v1348, y_v1349) =
  match x_v1348 with
  | O_c12  ⇒
    match y_v1349 with
    | O_c12  ⇒ true_c10 | S_c13 __v1350 ⇒ false_c11
    end
  | S_c13 x_v1351 ⇒
    match y_v1349 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1352 ⇒ eqn_i28(x_v1351, y_v1352)
    end
  end

val eqnclo_i49 = fn x_v1353 y_v1354 ⇒ eqn_i28(x_v1353, y_v1354)

fun lten_i29(x_v1355, y_v1356) =
  match x_v1355 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1357 ⇒
    match y_v1356 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1358 ⇒ lten_i29(x_v1357, y_v1358)
    end
  end

val ltenclo_i50 = fn x_v1359 y_v1360 ⇒ lten_i29(x_v1359, y_v1360)

fun gten_i30(x_v1361, y_v1362) =
  match x_v1361 with
  | O_c12  ⇒
    match y_v1362 with
    | O_c12  ⇒ true_c10 | S_c13 __v1363 ⇒ false_c11
    end
  | S_c13 x_v1364 ⇒
    match y_v1362 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1365 ⇒ gten_i30(x_v1364, y_v1365)
    end
  end

val gtenclo_i51 = fn x_v1366 y_v1367 ⇒ gten_i30(x_v1366, y_v1367)

fun cats_i33(s1_v1368, s2_v1369) =
  match s1_v1368 with
  | EmptyString_c15  ⇒ s2_v1369
  | String_c16 c_v1370 s1_v1371 ⇒
    (String_c16 c_v1370 cats_i33(s1_v1371, s2_v1369))
  end

val catsclo_i52 = fn s1_v1372 s2_v1373 ⇒ cats_i33(s1_v1372, s2_v1373)

fun strlen_i34(s_v1374) =
  match s_v1374 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1375 s_v1376 ⇒ (S_c13 strlen_i34(s_v1376))
  end

val strlenclo_i53 = fn s_v1377 ⇒ strlen_i34(s_v1377)

fun readline_i41(__v1378) =
  ln __v1379 ⇒
    let ch_v1380 = (ln __v1381 ⇒ open stdin) NULL in
    let ch_v1382 =
      ((fn x_v1383 ⇒ ln __v1384 ⇒ send(ch_v1380, x_v1383)) true_c10) NULL
    in
    let __v1385 = (ln __v1386 ⇒ recv(ch_v1382)) NULL in
    (match __v1385 with
     | (s_v1387, ch_v1388) ⇒
       ln __v1389 ⇒
         let ch_v1390 =
           ((fn x_v1391 ⇒ ln __v1392 ⇒ send(ch_v1388, x_v1391)) false_c11)
             NULL
         in
         let __v1393 = (ln __v1394 ⇒ let __v1395 = ch_v1390 in tt_c9) NULL
         in (ln __v1396 ⇒ s_v1387) NULL
     end) NULL

val readlineclo_i54 = fn __v1397 ⇒ readline_i41(__v1397)

fun print_i42(s_v1398) =
  ln __v1399 ⇒
    let ch_v1400 = (ln __v1401 ⇒ open stdout) NULL in
    let ch_v1402 =
      ((fn x_v1403 ⇒ ln __v1404 ⇒ send(ch_v1400, x_v1403)) true_c10) NULL
    in
    let ch_v1405 =
      ((fn x_v1406 ⇒ ln __v1407 ⇒ send(ch_v1402, x_v1406)) s_v1398) NULL
    in
    let ch_v1408 =
      ((fn x_v1409 ⇒ ln __v1410 ⇒ send(ch_v1405, x_v1409)) false_c11)
        NULL
    in (ln __v1411 ⇒ let __v1412 = ch_v1408 in tt_c9) NULL

val printclo_i55 = fn s_v1413 ⇒ print_i42(s_v1413)

fun prerr_i43(s_v1414) =
  ln __v1415 ⇒
    let ch_v1416 = (ln __v1417 ⇒ open stderr) NULL in
    let ch_v1418 =
      ((fn x_v1419 ⇒ ln __v1420 ⇒ send(ch_v1416, x_v1419)) true_c10) NULL
    in
    let ch_v1421 =
      ((fn x_v1422 ⇒ ln __v1423 ⇒ send(ch_v1418, x_v1422)) s_v1414) NULL
    in
    let ch_v1424 =
      ((fn x_v1425 ⇒ ln __v1426 ⇒ send(ch_v1421, x_v1425)) false_c11)
        NULL
    in (ln __v1427 ⇒ let __v1428 = ch_v1424 in tt_c9) NULL

val prerrclo_i56 = fn s_v1429 ⇒ prerr_i43(s_v1429)

main =
  (ln __v1430 ⇒
     let c_v1431 =
       (ln __v1432 ⇒
          fork c_v1433 in
            (ln __v1434 ⇒
               let s_v1435 = (readline_i41(tt_c9)) NULL in
               let c_v1436 =
                 ((fn x_v1437 ⇒ ln __v1438 ⇒ send(c_v1433, x_v1437))
                    s_v1435)
                   NULL
               in (ln __v1439 ⇒ let __v1440 = c_v1436 in tt_c9) NULL)
              NULL)
         NULL
     in
     let __v1441 = (ln __v1442 ⇒ recv(c_v1431)) NULL in
     (match __v1441 with
      | (msg_v1443, c_v1444) ⇒
        ln __v1445 ⇒
          let __v1446 = (ln __v1447 ⇒ close(c_v1444)) NULL in
          (print_i42(msg_v1443)) NULL
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i23(b1_v1578, b2_v1579) =
  match b1_v1578 with
  | true_c10  ⇒ b2_v1579 | false_c11  ⇒ false_c11
  end

val andbclo_i44 = fn b1_v1580 b2_v1581 ⇒ andb_i23(b1_v1580, b2_v1581)

fun orb_i24(b1_v1582, b2_v1583) =
  match b1_v1582 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1583
  end

val orbclo_i45 = fn b1_v1584 b2_v1585 ⇒ orb_i24(b1_v1584, b2_v1585)

fun notb_i25(b_v1586) =
  match b_v1586 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i46 = fn b_v1587 ⇒ notb_i25(b_v1587)

fun addn_i26(x_v1588, y_v1589) =
  match x_v1588 with
  | O_c12  ⇒ y_v1589 | S_c13 x_v1590 ⇒ (S_c13 addn_i26(x_v1590, y_v1589))
  end

val addnclo_i47 = fn x_v1591 y_v1592 ⇒ addn_i26(x_v1591, y_v1592)

fun muln_i27(x_v1593, y_v1594) =
  match x_v1593 with
  | O_c12  ⇒ y_v1594
  | S_c13 x_v1595 ⇒ addn_i26(y_v1594, muln_i27(x_v1595, y_v1594))
  end

val mulnclo_i48 = fn x_v1596 y_v1597 ⇒ muln_i27(x_v1596, y_v1597)

fun eqn_i28(x_v1598, y_v1599) =
  match x_v1598 with
  | O_c12  ⇒
    match y_v1599 with
    | O_c12  ⇒ true_c10 | S_c13 __v1600 ⇒ false_c11
    end
  | S_c13 x_v1601 ⇒
    match y_v1599 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1602 ⇒ eqn_i28(x_v1601, y_v1602)
    end
  end

val eqnclo_i49 = fn x_v1603 y_v1604 ⇒ eqn_i28(x_v1603, y_v1604)

fun lten_i29(x_v1605, y_v1606) =
  match x_v1605 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1607 ⇒
    match y_v1606 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1608 ⇒ lten_i29(x_v1607, y_v1608)
    end
  end

val ltenclo_i50 = fn x_v1609 y_v1610 ⇒ lten_i29(x_v1609, y_v1610)

fun gten_i30(x_v1611, y_v1612) =
  match x_v1611 with
  | O_c12  ⇒
    match y_v1612 with
    | O_c12  ⇒ true_c10 | S_c13 __v1613 ⇒ false_c11
    end
  | S_c13 x_v1614 ⇒
    match y_v1612 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1615 ⇒ gten_i30(x_v1614, y_v1615)
    end
  end

val gtenclo_i51 = fn x_v1616 y_v1617 ⇒ gten_i30(x_v1616, y_v1617)

fun cats_i33(s1_v1618, s2_v1619) =
  match s1_v1618 with
  | EmptyString_c15  ⇒ s2_v1619
  | String_c16 c_v1620 s1_v1621 ⇒
    (String_c16 c_v1620 cats_i33(s1_v1621, s2_v1619))
  end

val catsclo_i52 = fn s1_v1622 s2_v1623 ⇒ cats_i33(s1_v1622, s2_v1623)

fun strlen_i34(s_v1624) =
  match s_v1624 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1625 s_v1626 ⇒ (S_c13 strlen_i34(s_v1626))
  end

val strlenclo_i53 = fn s_v1627 ⇒ strlen_i34(s_v1627)

fun readline_i41(__v1628) =
  ln __v1629 ⇒
    let ch_v1630 = open stdin in
    let ch_v1631 = send(ch_v1630, true_c10) in
    let __v1632 = recv(ch_v1631) in
    (match __v1632 with
     | (s_v1633, ch_v1634) ⇒
       ln __v1635 ⇒
         let ch_v1636 = send(ch_v1634, false_c11) in
         let __v1637 = let __v1638 = ch_v1636 in tt_c9 in s_v1633
     end) NULL

val readlineclo_i54 = fn __v1639 ⇒ readline_i41(__v1639)

fun print_i42(s_v1640) =
  ln __v1641 ⇒
    let ch_v1642 = open stdout in
    let ch_v1643 = send(ch_v1642, true_c10) in
    let ch_v1644 = send(ch_v1643, s_v1640) in
    let ch_v1645 = send(ch_v1644, false_c11) in
    let __v1646 = ch_v1645 in tt_c9

val printclo_i55 = fn s_v1647 ⇒ print_i42(s_v1647)

fun prerr_i43(s_v1648) =
  ln __v1649 ⇒
    let ch_v1650 = open stderr in
    let ch_v1651 = send(ch_v1650, true_c10) in
    let ch_v1652 = send(ch_v1651, s_v1648) in
    let ch_v1653 = send(ch_v1652, false_c11) in
    let __v1654 = ch_v1653 in tt_c9

val prerrclo_i56 = fn s_v1655 ⇒ prerr_i43(s_v1655)

main =
  let c_v1656 =
    fork c_v1657 in
      let s_v1658 = (readline_i41(tt_c9)) NULL in
      let c_v1659 = send(c_v1657, s_v1658) in let __v1660 = c_v1659 in tt_c9
  in
  let __v1661 = recv(c_v1656) in
  (match __v1661 with
   | (msg_v1662, c_v1663) ⇒
     ln __v1664 ⇒
       let __v1665 = close(c_v1663) in (print_i42(msg_v1662)) NULL
   end) NULL

trans3e success--------------------------

trans34 success--------------------------

