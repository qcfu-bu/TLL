parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v104 : bool_d2) (b2_v105 : bool_d2) ⇒
    match b1_v104 as __v106 in ??1 with
    | true_c2  ⇒ b2_v105 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v109 : bool_d2) (b2_v110 : bool_d2) ⇒
    match b1_v109 as __v111 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v110
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v113 : bool_d2) ⇒
    match b_v113 as __v114 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v115 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v118 : nat_d3) (y_v119 : nat_d3) ⇒
    match x_v118 as __v120 in ??4 with
    | O_c4  ⇒ y_v119 | S_c5 x_v121 ⇒ (S_c5‹› (addn_i4 x_v121 y_v119))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v124 : nat_d3) (y_v125 : nat_d3) ⇒
    match x_v124 as __v126 in ??5 with
    | O_c4  ⇒ y_v125
    | S_c5 x_v127 ⇒ (addn_i4 y_v125 (muln_i5 x_v127 y_v125))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v130 : nat_d3) (y_v131 : nat_d3) ⇒
    match x_v130 as __v132 in ??6 with
    | O_c4  ⇒
      match y_v131 as __v133 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v134 ⇒ false_c3‹›
      end
    | S_c5 x_v135 ⇒
      match y_v131 as __v136 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v137 ⇒ (eqn_i6 x_v135 y_v137)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v140 : nat_d3) (y_v141 : nat_d3) ⇒
    match x_v140 as __v142 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v143 ⇒
      match y_v141 as __v144 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v145 ⇒ (lten_i7 x_v143 y_v145)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v148 : nat_d3) (y_v149 : nat_d3) ⇒
    match x_v148 as __v150 in ??11 with
    | O_c4  ⇒
      match y_v149 as __v151 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v152 ⇒ false_c3‹›
      end
    | S_c5 x_v153 ⇒
      match y_v149 as __v154 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v155 ⇒ (gten_i8 x_v153 y_v155)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v158 : nat_d3) (y_v159 : nat_d3) ⇒
    match x_v158 as __v160 in ??14 with
    | O_c4  ⇒
      match y_v159 as __v161 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v162 ⇒ true_c2‹›
      end
    | S_c5 x_v163 ⇒
      match y_v159 as __v164 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v165 ⇒ (ltn_i9 x_v163 y_v165)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v168 : nat_d3) (y_v169 : nat_d3) ⇒
    match x_v168 as __v170 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v171 ⇒
      match y_v169 as __v172 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v173 ⇒ (gtn_i10 x_v171 y_v173)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v174 : bool_d2) (b1_v175 : bool_d2) (b2_v176 : bool_d2)
    (b3_v177 : bool_d2) (b4_v178 : bool_d2) (b5_v179 : bool_d2)
    (b6_v180 : bool_d2) (b7_v181 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v182 : ascii_d4) (s_v183 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v186 : string_d5) (s2_v187 : string_d5) ⇒
    match s1_v186 as __v188 in ??19 with
    | EmptyString_c7  ⇒ s2_v187
    | String_c8 c_v189 s1_v190 ⇒
      (String_c8‹› c_v189 (cats_i11 s1_v190 s2_v187))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v192 : string_d5) ⇒
    match s_v192 as __v193 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v194 s_v195 ⇒ (S_c5‹› (strlen_i12 s_v195))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v197 : unit_d1) ⇒
    ⇑(b_v198 : bool_d2) ⇒
      match b_v198 as __v199 in ??21 with
      | true_c2  ⇒ ⇓(__v200 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v202 : unit_d1) ⇒
    ⇑(b_v203 : bool_d2) ⇒
      match b_v203 as __v204 in ??22 with
      | true_c2  ⇒ ⇑(__v205 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v207 : unit_d1) ⇒
    ⇑(b_v208 : bool_d2) ⇒
      match b_v208 as __v209 in ??23 with
      | true_c2  ⇒ ⇑(__v210 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v212 : unit_d1) ⇒
    let ch_v213 ⇐ open stdin in
    let ch_v214 ⇐ (send ch_v213 true_c2‹›) in
    let __v215 ⇐ recv ch_v214 in
    match __v215 as __v216 in ??24 with
    | ⟨s_v217, ch_v218⟩ ⇒
      let ch_v219 ⇐ (send ch_v218 false_c3‹›) in
      let __v220 ⇐ close ch_v219 in return s_v217
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v222 : string_d5) ⇒
    let ch_v223 ⇐ open stdout in
    let ch_v224 ⇐ (send ch_v223 true_c2‹›) in
    let ch_v225 ⇐ (send ch_v224 s_v222) in
    let ch_v226 ⇐ (send ch_v225 false_c3‹›) in close ch_v226

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v228 : string_d5) ⇒
    let ch_v229 ⇐ open stderr in
    let ch_v230 ⇐ (send ch_v229 true_c2‹›) in
    let ch_v231 ⇐ (send ch_v230 s_v228) in
    let ch_v232 ⇐ (send ch_v231 false_c3‹›) in close ch_v232

program main_i22 : IO unit_d1 = (print_i20 "hello")

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v836 : bool_d2) (b2_v837 : bool_d2) ⇒
    match b1_v836 as __v838 in bool_d2 with
    | true_c2  ⇒ b2_v837 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v841 : bool_d2) (b2_v842 : bool_d2) ⇒
    match b1_v841 as __v843 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v842
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v845 : bool_d2) ⇒
    match b_v845 as __v846 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v847 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v850 : nat_d3) (y_v851 : nat_d3) ⇒
    match x_v850 as __v852 in nat_d3 with
    | O_c4  ⇒ y_v851 | S_c5 x_v853 ⇒ (S_c5‹› (addn_i4 x_v853 y_v851))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v856 : nat_d3) (y_v857 : nat_d3) ⇒
    match x_v856 as __v858 in nat_d3 with
    | O_c4  ⇒ y_v857
    | S_c5 x_v859 ⇒ (addn_i4 y_v857 (muln_i5 x_v859 y_v857))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v862 : nat_d3) (y_v863 : nat_d3) ⇒
    match x_v862 as __v864 in bool_d2 with
    | O_c4  ⇒
      match y_v863 as __v865 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v866 ⇒ false_c3‹›
      end
    | S_c5 x_v867 ⇒
      match y_v863 as __v868 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v869 ⇒ (eqn_i6 x_v867 y_v869)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v872 : nat_d3) (y_v873 : nat_d3) ⇒
    match x_v872 as __v874 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v875 ⇒
      match y_v873 as __v876 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v877 ⇒ (lten_i7 x_v875 y_v877)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v880 : nat_d3) (y_v881 : nat_d3) ⇒
    match x_v880 as __v882 in bool_d2 with
    | O_c4  ⇒
      match y_v881 as __v883 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v884 ⇒ false_c3‹›
      end
    | S_c5 x_v885 ⇒
      match y_v881 as __v886 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v887 ⇒ (gten_i8 x_v885 y_v887)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v890 : nat_d3) (y_v891 : nat_d3) ⇒
    match x_v890 as __v892 in bool_d2 with
    | O_c4  ⇒
      match y_v891 as __v893 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v894 ⇒ true_c2‹›
      end
    | S_c5 x_v895 ⇒
      match y_v891 as __v896 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v897 ⇒ (ltn_i9 x_v895 y_v897)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v900 : nat_d3) (y_v901 : nat_d3) ⇒
    match x_v900 as __v902 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v903 ⇒
      match y_v901 as __v904 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v905 ⇒ (gtn_i10 x_v903 y_v905)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v906 : bool_d2) (b1_v907 : bool_d2) (b2_v908 : bool_d2)
    (b3_v909 : bool_d2) (b4_v910 : bool_d2) (b5_v911 : bool_d2)
    (b6_v912 : bool_d2) (b7_v913 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v914 : ascii_d4) (s_v915 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v918 : string_d5) (s2_v919 : string_d5) ⇒
    match s1_v918 as __v920 in string_d5 with
    | EmptyString_c7  ⇒ s2_v919
    | String_c8 c_v921 s1_v922 ⇒
      (String_c8‹› c_v921 (cats_i11 s1_v922 s2_v919))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v924 : string_d5) ⇒
    match s_v924 as __v925 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v926 s_v927 ⇒ (S_c5‹› (strlen_i12 s_v927))
    end

logical stdin_rec_i13 : unit_d1 → proto =
  fn (__v929 : unit_d1) ⇒
    ⇑(b_v930 : bool_d2) ⇒
      match b_v930 as __v931 in proto with
      | true_c2  ⇒ ⇓(__v932 : string_d5) ⇒ (stdin_rec_i13 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i14 : unit_d1 → proto =
  fn (__v934 : unit_d1) ⇒
    ⇑(b_v935 : bool_d2) ⇒
      match b_v935 as __v936 in proto with
      | true_c2  ⇒ ⇑(__v937 : string_d5) ⇒ (stdout_rec_i14 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i15 : unit_d1 → proto =
  fn (__v939 : unit_d1) ⇒
    ⇑(b_v940 : bool_d2) ⇒
      match b_v940 as __v941 in proto with
      | true_c2  ⇒ ⇑(__v942 : string_d5) ⇒ (stderr_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i16 : proto = (stdin_rec_i13 tt_c1‹›)

logical stdout_t_i17 : proto = (stdout_rec_i14 tt_c1‹›)

logical stderr_t_i18 : proto = (stderr_rec_i15 tt_c1‹›)

program readline_i19 : unit_d1 → IO string_d5 =
  fn (__v944 : unit_d1) ⇒
    let ch_v945 ⇐ open stdin in
    let ch_v946 ⇐ (send ch_v945 true_c2‹›) in
    let __v947 ⇐ recv ch_v946 in
    match __v947 as __v948 in IO string_d5 with
    | ⟨s_v949, ch_v950⟩ ⇒
      let ch_v951 ⇐ (send ch_v950 false_c3‹›) in
      let __v952 ⇐ close ch_v951 in return s_v949
    end

program print_i20 : string_d5 → IO unit_d1 =
  fn (s_v954 : string_d5) ⇒
    let ch_v955 ⇐ open stdout in
    let ch_v956 ⇐ (send ch_v955 true_c2‹›) in
    let ch_v957 ⇐ (send ch_v956 s_v954) in
    let ch_v958 ⇐ (send ch_v957 false_c3‹›) in close ch_v958

program prerr_i21 : string_d5 → IO unit_d1 =
  fn (s_v960 : string_d5) ⇒
    let ch_v961 ⇐ open stderr in
    let ch_v962 ⇐ (send ch_v961 true_c2‹›) in
    let ch_v963 ⇐ (send ch_v962 s_v960) in
    let ch_v964 ⇐ (send ch_v963 false_c3‹›) in close ch_v964

program main_i22 : IO unit_d1 = (print_i20 "hello")

trans1e success--------------------------

data unit_d6 =
| tt_c9 of size(0)

data bool_d7 =
| true_c10 of size(0) | false_c11 of size(0)

def andb_i23 =
  fn b1_v1089 b2_v1090 ⇒
    match b1_v1089 with
    | true_c10  ⇒ b2_v1090 | false_c11  ⇒ false_c11
    end

def orb_i24 =
  fn b1_v1091 b2_v1092 ⇒
    match b1_v1091 with
    | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1092
    end

def notb_i25 =
  fn b_v1093 ⇒
    match b_v1093 with
    | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
    end

data nat_d8 =
| O_c12 of size(0) | S_c13 of size(1)

def addn_i26 =
  fn x_v1094 y_v1095 ⇒
    match x_v1094 with
    | O_c12  ⇒ y_v1095
    | S_c13 x_v1096 ⇒ (S_c13 ((addn_i26 x_v1096) y_v1095))
    end

def muln_i27 =
  fn x_v1097 y_v1098 ⇒
    match x_v1097 with
    | O_c12  ⇒ y_v1098
    | S_c13 x_v1099 ⇒ ((addn_i26 y_v1098) ((muln_i27 x_v1099) y_v1098))
    end

def eqn_i28 =
  fn x_v1100 y_v1101 ⇒
    match x_v1100 with
    | O_c12  ⇒
      match y_v1101 with
      | O_c12  ⇒ true_c10 | S_c13 __v1102 ⇒ false_c11
      end
    | S_c13 x_v1103 ⇒
      match y_v1101 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1104 ⇒ ((eqn_i28 x_v1103) y_v1104)
      end
    end

def lten_i29 =
  fn x_v1105 y_v1106 ⇒
    match x_v1105 with
    | O_c12  ⇒ true_c10
    | S_c13 x_v1107 ⇒
      match y_v1106 with
      | O_c12  ⇒ false_c11 | S_c13 y_v1108 ⇒ ((lten_i29 x_v1107) y_v1108)
      end
    end

def gten_i30 =
  fn x_v1109 y_v1110 ⇒
    match x_v1109 with
    | O_c12  ⇒
      match y_v1110 with
      | O_c12  ⇒ true_c10 | S_c13 __v1111 ⇒ false_c11
      end
    | S_c13 x_v1112 ⇒
      match y_v1110 with
      | O_c12  ⇒ true_c10 | S_c13 y_v1113 ⇒ ((gten_i30 x_v1112) y_v1113)
      end
    end

data ascii_d9 =
| Ascii_c14 of size(8)

data string_d10 =
| EmptyString_c15 of size(0) | String_c16 of size(2)

def cats_i33 =
  fn s1_v1114 s2_v1115 ⇒
    match s1_v1114 with
    | EmptyString_c15  ⇒ s2_v1115
    | String_c16 c_v1116 s1_v1117 ⇒
      (String_c16 c_v1116 ((cats_i33 s1_v1117) s2_v1115))
    end

def strlen_i34 =
  fn s_v1118 ⇒
    match s_v1118 with
    | EmptyString_c15  ⇒ O_c12
    | String_c16 __v1119 s_v1120 ⇒ (S_c13 (strlen_i34 s_v1120))
    end

def readline_i41 =
  fn __v1121 ⇒
    let ch_v1122 ⇐ open stdin in
    let ch_v1123 ⇐ (send ch_v1122 true_c10) in
    let __v1124 ⇐ recv ch_v1123 in
    match __v1124 with
    | (s_v1125, ch_v1126) ⇒
      let ch_v1127 ⇐ (send ch_v1126 false_c11) in
      let __v1128 ⇐ close⇑ ch_v1127 in return s_v1125
    end

def print_i42 =
  fn s_v1129 ⇒
    let ch_v1130 ⇐ open stdout in
    let ch_v1131 ⇐ (send ch_v1130 true_c10) in
    let ch_v1132 ⇐ (send ch_v1131 s_v1129) in
    let ch_v1133 ⇐ (send ch_v1132 false_c11) in close⇑ ch_v1133

def prerr_i43 =
  fn s_v1134 ⇒
    let ch_v1135 ⇐ open stderr in
    let ch_v1136 ⇐ (send ch_v1135 true_c10) in
    let ch_v1137 ⇐ (send ch_v1136 s_v1134) in
    let ch_v1138 ⇐ (send ch_v1137 false_c11) in close⇑ ch_v1138

main =
  (print_i42
    (String_c16
      (Ascii_c14
        false_c11 true_c10 true_c10 false_c11 true_c10 false_c11 false_c11
        false_c11)
      (String_c16
        (Ascii_c14
          false_c11 true_c10 true_c10 false_c11 false_c11 true_c10 false_c11
          true_c10)
        (String_c16
          (Ascii_c14
            false_c11 true_c10 true_c10 false_c11 true_c10 true_c10 false_c11
            false_c11)
          (String_c16
            (Ascii_c14
              false_c11 true_c10 true_c10 false_c11 true_c10 true_c10
              false_c11 false_c11)
            (String_c16
              (Ascii_c14
                false_c11 true_c10 true_c10 false_c11 true_c10 true_c10
                true_c10 true_c10)
              EmptyString_c15))))))

trans12 success--------------------------

fun andb_i23(b1_v1217, b2_v1218) =
  match b1_v1217 with
  | true_c10  ⇒ b2_v1218 | false_c11  ⇒ false_c11
  end

val andbclo_i44 = fn b1_v1219 b2_v1220 ⇒ andb_i23(b1_v1219, b2_v1220)

fun orb_i24(b1_v1221, b2_v1222) =
  match b1_v1221 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1222
  end

val orbclo_i45 = fn b1_v1223 b2_v1224 ⇒ orb_i24(b1_v1223, b2_v1224)

fun notb_i25(b_v1225) =
  match b_v1225 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i46 = fn b_v1226 ⇒ notb_i25(b_v1226)

fun addn_i26(x_v1227, y_v1228) =
  match x_v1227 with
  | O_c12  ⇒ y_v1228 | S_c13 x_v1229 ⇒ (S_c13 addn_i26(x_v1229, y_v1228))
  end

val addnclo_i47 = fn x_v1230 y_v1231 ⇒ addn_i26(x_v1230, y_v1231)

fun muln_i27(x_v1232, y_v1233) =
  match x_v1232 with
  | O_c12  ⇒ y_v1233
  | S_c13 x_v1234 ⇒ addn_i26(y_v1233, muln_i27(x_v1234, y_v1233))
  end

val mulnclo_i48 = fn x_v1235 y_v1236 ⇒ muln_i27(x_v1235, y_v1236)

fun eqn_i28(x_v1237, y_v1238) =
  match x_v1237 with
  | O_c12  ⇒
    match y_v1238 with
    | O_c12  ⇒ true_c10 | S_c13 __v1239 ⇒ false_c11
    end
  | S_c13 x_v1240 ⇒
    match y_v1238 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1241 ⇒ eqn_i28(x_v1240, y_v1241)
    end
  end

val eqnclo_i49 = fn x_v1242 y_v1243 ⇒ eqn_i28(x_v1242, y_v1243)

fun lten_i29(x_v1244, y_v1245) =
  match x_v1244 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1246 ⇒
    match y_v1245 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1247 ⇒ lten_i29(x_v1246, y_v1247)
    end
  end

val ltenclo_i50 = fn x_v1248 y_v1249 ⇒ lten_i29(x_v1248, y_v1249)

fun gten_i30(x_v1250, y_v1251) =
  match x_v1250 with
  | O_c12  ⇒
    match y_v1251 with
    | O_c12  ⇒ true_c10 | S_c13 __v1252 ⇒ false_c11
    end
  | S_c13 x_v1253 ⇒
    match y_v1251 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1254 ⇒ gten_i30(x_v1253, y_v1254)
    end
  end

val gtenclo_i51 = fn x_v1255 y_v1256 ⇒ gten_i30(x_v1255, y_v1256)

fun cats_i33(s1_v1257, s2_v1258) =
  match s1_v1257 with
  | EmptyString_c15  ⇒ s2_v1258
  | String_c16 c_v1259 s1_v1260 ⇒
    (String_c16 c_v1259 cats_i33(s1_v1260, s2_v1258))
  end

val catsclo_i52 = fn s1_v1261 s2_v1262 ⇒ cats_i33(s1_v1261, s2_v1262)

fun strlen_i34(s_v1263) =
  match s_v1263 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1264 s_v1265 ⇒ (S_c13 strlen_i34(s_v1265))
  end

val strlenclo_i53 = fn s_v1266 ⇒ strlen_i34(s_v1266)

fun readline_i41(__v1267) =
  ln __v1268 ⇒
    let ch_v1269 = (ln __v1270 ⇒ open stdin) NULL in
    let ch_v1271 =
      ((fn x_v1272 ⇒ ln __v1273 ⇒ send(ch_v1269, x_v1272)) true_c10) NULL
    in
    let __v1274 = (ln __v1275 ⇒ recv(ch_v1271)) NULL in
    (match __v1274 with
     | (s_v1276, ch_v1277) ⇒
       ln __v1278 ⇒
         let ch_v1279 =
           ((fn x_v1280 ⇒ ln __v1281 ⇒ send(ch_v1277, x_v1280)) false_c11)
             NULL
         in
         let __v1282 = (ln __v1283 ⇒ let __v1284 = ch_v1279 in tt_c9) NULL
         in (ln __v1285 ⇒ s_v1276) NULL
     end) NULL

val readlineclo_i54 = fn __v1286 ⇒ readline_i41(__v1286)

fun print_i42(s_v1287) =
  ln __v1288 ⇒
    let ch_v1289 = (ln __v1290 ⇒ open stdout) NULL in
    let ch_v1291 =
      ((fn x_v1292 ⇒ ln __v1293 ⇒ send(ch_v1289, x_v1292)) true_c10) NULL
    in
    let ch_v1294 =
      ((fn x_v1295 ⇒ ln __v1296 ⇒ send(ch_v1291, x_v1295)) s_v1287) NULL
    in
    let ch_v1297 =
      ((fn x_v1298 ⇒ ln __v1299 ⇒ send(ch_v1294, x_v1298)) false_c11)
        NULL
    in (ln __v1300 ⇒ let __v1301 = ch_v1297 in tt_c9) NULL

val printclo_i55 = fn s_v1302 ⇒ print_i42(s_v1302)

fun prerr_i43(s_v1303) =
  ln __v1304 ⇒
    let ch_v1305 = (ln __v1306 ⇒ open stderr) NULL in
    let ch_v1307 =
      ((fn x_v1308 ⇒ ln __v1309 ⇒ send(ch_v1305, x_v1308)) true_c10) NULL
    in
    let ch_v1310 =
      ((fn x_v1311 ⇒ ln __v1312 ⇒ send(ch_v1307, x_v1311)) s_v1303) NULL
    in
    let ch_v1313 =
      ((fn x_v1314 ⇒ ln __v1315 ⇒ send(ch_v1310, x_v1314)) false_c11)
        NULL
    in (ln __v1316 ⇒ let __v1317 = ch_v1313 in tt_c9) NULL

val prerrclo_i56 = fn s_v1318 ⇒ prerr_i43(s_v1318)

main =
  (print_i42((String_c16
               (Ascii_c14
                 false_c11 true_c10 true_c10 false_c11 true_c10 false_c11
                 false_c11 false_c11)
               (String_c16
                 (Ascii_c14
                   false_c11 true_c10 true_c10 false_c11 false_c11 true_c10
                   false_c11 true_c10)
                 (String_c16
                   (Ascii_c14
                     false_c11 true_c10 true_c10 false_c11 true_c10 true_c10
                     false_c11 false_c11)
                   (String_c16
                     (Ascii_c14
                       false_c11 true_c10 true_c10 false_c11 true_c10
                       true_c10 false_c11 false_c11)
                     (String_c16
                       (Ascii_c14
                         false_c11 true_c10 true_c10 false_c11 true_c10
                         true_c10 true_c10 true_c10)
                       EmptyString_c15)))))))
    NULL

trans23 success--------------------------

fun andb_i23(b1_v1429, b2_v1430) =
  match b1_v1429 with
  | true_c10  ⇒ b2_v1430 | false_c11  ⇒ false_c11
  end

val andbclo_i44 = fn b1_v1431 b2_v1432 ⇒ andb_i23(b1_v1431, b2_v1432)

fun orb_i24(b1_v1433, b2_v1434) =
  match b1_v1433 with
  | true_c10  ⇒ true_c10 | false_c11  ⇒ b2_v1434
  end

val orbclo_i45 = fn b1_v1435 b2_v1436 ⇒ orb_i24(b1_v1435, b2_v1436)

fun notb_i25(b_v1437) =
  match b_v1437 with
  | true_c10  ⇒ false_c11 | false_c11  ⇒ true_c10
  end

val notbclo_i46 = fn b_v1438 ⇒ notb_i25(b_v1438)

fun addn_i26(x_v1439, y_v1440) =
  match x_v1439 with
  | O_c12  ⇒ y_v1440 | S_c13 x_v1441 ⇒ (S_c13 addn_i26(x_v1441, y_v1440))
  end

val addnclo_i47 = fn x_v1442 y_v1443 ⇒ addn_i26(x_v1442, y_v1443)

fun muln_i27(x_v1444, y_v1445) =
  match x_v1444 with
  | O_c12  ⇒ y_v1445
  | S_c13 x_v1446 ⇒ addn_i26(y_v1445, muln_i27(x_v1446, y_v1445))
  end

val mulnclo_i48 = fn x_v1447 y_v1448 ⇒ muln_i27(x_v1447, y_v1448)

fun eqn_i28(x_v1449, y_v1450) =
  match x_v1449 with
  | O_c12  ⇒
    match y_v1450 with
    | O_c12  ⇒ true_c10 | S_c13 __v1451 ⇒ false_c11
    end
  | S_c13 x_v1452 ⇒
    match y_v1450 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1453 ⇒ eqn_i28(x_v1452, y_v1453)
    end
  end

val eqnclo_i49 = fn x_v1454 y_v1455 ⇒ eqn_i28(x_v1454, y_v1455)

fun lten_i29(x_v1456, y_v1457) =
  match x_v1456 with
  | O_c12  ⇒ true_c10
  | S_c13 x_v1458 ⇒
    match y_v1457 with
    | O_c12  ⇒ false_c11 | S_c13 y_v1459 ⇒ lten_i29(x_v1458, y_v1459)
    end
  end

val ltenclo_i50 = fn x_v1460 y_v1461 ⇒ lten_i29(x_v1460, y_v1461)

fun gten_i30(x_v1462, y_v1463) =
  match x_v1462 with
  | O_c12  ⇒
    match y_v1463 with
    | O_c12  ⇒ true_c10 | S_c13 __v1464 ⇒ false_c11
    end
  | S_c13 x_v1465 ⇒
    match y_v1463 with
    | O_c12  ⇒ true_c10 | S_c13 y_v1466 ⇒ gten_i30(x_v1465, y_v1466)
    end
  end

val gtenclo_i51 = fn x_v1467 y_v1468 ⇒ gten_i30(x_v1467, y_v1468)

fun cats_i33(s1_v1469, s2_v1470) =
  match s1_v1469 with
  | EmptyString_c15  ⇒ s2_v1470
  | String_c16 c_v1471 s1_v1472 ⇒
    (String_c16 c_v1471 cats_i33(s1_v1472, s2_v1470))
  end

val catsclo_i52 = fn s1_v1473 s2_v1474 ⇒ cats_i33(s1_v1473, s2_v1474)

fun strlen_i34(s_v1475) =
  match s_v1475 with
  | EmptyString_c15  ⇒ O_c12
  | String_c16 __v1476 s_v1477 ⇒ (S_c13 strlen_i34(s_v1477))
  end

val strlenclo_i53 = fn s_v1478 ⇒ strlen_i34(s_v1478)

fun readline_i41(__v1479) =
  ln __v1480 ⇒
    let ch_v1481 = open stdin in
    let ch_v1482 = send(ch_v1481, true_c10) in
    let __v1483 = recv(ch_v1482) in
    (match __v1483 with
     | (s_v1484, ch_v1485) ⇒
       ln __v1486 ⇒
         let ch_v1487 = send(ch_v1485, false_c11) in
         let __v1488 = let __v1489 = ch_v1487 in tt_c9 in s_v1484
     end) NULL

val readlineclo_i54 = fn __v1490 ⇒ readline_i41(__v1490)

fun print_i42(s_v1491) =
  ln __v1492 ⇒
    let ch_v1493 = open stdout in
    let ch_v1494 = send(ch_v1493, true_c10) in
    let ch_v1495 = send(ch_v1494, s_v1491) in
    let ch_v1496 = send(ch_v1495, false_c11) in
    let __v1497 = ch_v1496 in tt_c9

val printclo_i55 = fn s_v1498 ⇒ print_i42(s_v1498)

fun prerr_i43(s_v1499) =
  ln __v1500 ⇒
    let ch_v1501 = open stderr in
    let ch_v1502 = send(ch_v1501, true_c10) in
    let ch_v1503 = send(ch_v1502, s_v1499) in
    let ch_v1504 = send(ch_v1503, false_c11) in
    let __v1505 = ch_v1504 in tt_c9

val prerrclo_i56 = fn s_v1506 ⇒ prerr_i43(s_v1506)

main =
  (print_i42((String_c16
               (Ascii_c14
                 false_c11 true_c10 true_c10 false_c11 true_c10 false_c11
                 false_c11 false_c11)
               (String_c16
                 (Ascii_c14
                   false_c11 true_c10 true_c10 false_c11 false_c11 true_c10
                   false_c11 true_c10)
                 (String_c16
                   (Ascii_c14
                     false_c11 true_c10 true_c10 false_c11 true_c10 true_c10
                     false_c11 false_c11)
                   (String_c16
                     (Ascii_c14
                       false_c11 true_c10 true_c10 false_c11 true_c10
                       true_c10 false_c11 false_c11)
                     (String_c16
                       (Ascii_c14
                         false_c11 true_c10 true_c10 false_c11 true_c10
                         true_c10 true_c10 true_c10)
                       EmptyString_c15)))))))
    NULL

trans3e success--------------------------

#ifndef prelude_h
#define prelude_h

#define tt_c 9
#define true_c 10
#define false_c 11
#define O_c 12
#define S_c 13
#define Ascii_c 14
#define EmptyString_c 15
#define String_c 16

#endif

#include "runtime.h"

tll_ptr Ascii_t135;
tll_ptr Ascii_t144;
tll_ptr Ascii_t153;
tll_ptr Ascii_t162;
tll_ptr Ascii_t171;
tll_ptr EmptyString_t172;
tll_ptr String_t173;
tll_ptr String_t174;
tll_ptr String_t175;
tll_ptr String_t176;
tll_ptr String_t177;
tll_ptr addnclo_i47;
tll_ptr andbclo_i44;
tll_ptr app_ret_t178;
tll_ptr call_ret_t126;
tll_ptr catsclo_i52;
tll_ptr eqnclo_i49;
tll_ptr false_t127;
tll_ptr false_t130;
tll_ptr false_t132;
tll_ptr false_t133;
tll_ptr false_t134;
tll_ptr false_t136;
tll_ptr false_t139;
tll_ptr false_t140;
tll_ptr false_t142;
tll_ptr false_t145;
tll_ptr false_t148;
tll_ptr false_t151;
tll_ptr false_t152;
tll_ptr false_t154;
tll_ptr false_t157;
tll_ptr false_t160;
tll_ptr false_t161;
tll_ptr false_t163;
tll_ptr false_t166;
tll_ptr gtenclo_i51;
tll_ptr lam_clo_t101;
tll_ptr lam_clo_t113;
tll_ptr lam_clo_t125;
tll_ptr lam_clo_t14;
tll_ptr lam_clo_t20;
tll_ptr lam_clo_t28;
tll_ptr lam_clo_t36;
tll_ptr lam_clo_t48;
tll_ptr lam_clo_t58;
tll_ptr lam_clo_t7;
tll_ptr lam_clo_t70;
tll_ptr lam_clo_t78;
tll_ptr lam_clo_t85;
tll_ptr ltenclo_i50;
tll_ptr mulnclo_i48;
tll_ptr notbclo_i46;
tll_ptr orbclo_i45;
tll_ptr prerrclo_i56;
tll_ptr printclo_i55;
tll_ptr readlineclo_i54;
tll_ptr strlenclo_i53;
tll_ptr true_t128;
tll_ptr true_t129;
tll_ptr true_t131;
tll_ptr true_t137;
tll_ptr true_t138;
tll_ptr true_t141;
tll_ptr true_t143;
tll_ptr true_t146;
tll_ptr true_t147;
tll_ptr true_t149;
tll_ptr true_t150;
tll_ptr true_t155;
tll_ptr true_t156;
tll_ptr true_t158;
tll_ptr true_t159;
tll_ptr true_t164;
tll_ptr true_t165;
tll_ptr true_t167;
tll_ptr true_t168;
tll_ptr true_t169;
tll_ptr true_t170;

tll_ptr andb_i23(tll_ptr b1_v1507, tll_ptr b2_v1508)
{
  tll_ptr false_t2; tll_ptr switch_ret_t1;
  switch(((tll_node)b1_v1507)->tag) {
    case 10:
      switch_ret_t1 = b2_v1508;
      break;
    case 11:
      instr_struct(&false_t2, 11, 0);
      switch_ret_t1 = false_t2;
      break;
  }
  return switch_ret_t1;
}

tll_ptr lam_fun_t4(tll_ptr b2_v1511, tll_env env)
{
  tll_ptr call_ret_t3;
  call_ret_t3 = andb_i23(env[0], b2_v1511);
  return call_ret_t3;
}

tll_ptr lam_fun_t6(tll_ptr b1_v1509, tll_env env)
{
  tll_ptr lam_clo_t5;
  instr_clo(&lam_clo_t5, &lam_fun_t4, 1, b1_v1509);
  return lam_clo_t5;
}

tll_ptr orb_i24(tll_ptr b1_v1512, tll_ptr b2_v1513)
{
  tll_ptr switch_ret_t8; tll_ptr true_t9;
  switch(((tll_node)b1_v1512)->tag) {
    case 10:
      instr_struct(&true_t9, 10, 0);
      switch_ret_t8 = true_t9;
      break;
    case 11:
      switch_ret_t8 = b2_v1513;
      break;
  }
  return switch_ret_t8;
}

tll_ptr lam_fun_t11(tll_ptr b2_v1516, tll_env env)
{
  tll_ptr call_ret_t10;
  call_ret_t10 = orb_i24(env[0], b2_v1516);
  return call_ret_t10;
}

tll_ptr lam_fun_t13(tll_ptr b1_v1514, tll_env env)
{
  tll_ptr lam_clo_t12;
  instr_clo(&lam_clo_t12, &lam_fun_t11, 1, b1_v1514);
  return lam_clo_t12;
}

tll_ptr notb_i25(tll_ptr b_v1517)
{
  tll_ptr false_t16; tll_ptr switch_ret_t15; tll_ptr true_t17;
  switch(((tll_node)b_v1517)->tag) {
    case 10:
      instr_struct(&false_t16, 11, 0);
      switch_ret_t15 = false_t16;
      break;
    case 11:
      instr_struct(&true_t17, 10, 0);
      switch_ret_t15 = true_t17;
      break;
  }
  return switch_ret_t15;
}

tll_ptr lam_fun_t19(tll_ptr b_v1518, tll_env env)
{
  tll_ptr call_ret_t18;
  call_ret_t18 = notb_i25(b_v1518);
  return call_ret_t18;
}

tll_ptr addn_i26(tll_ptr x_v1519, tll_ptr y_v1520)
{
  tll_ptr S_t23; tll_ptr call_ret_t22; tll_ptr switch_ret_t21;
  tll_ptr x_v1521;
  switch(((tll_node)x_v1519)->tag) {
    case 12:
      switch_ret_t21 = y_v1520;
      break;
    case 13:
      x_v1521 = ((tll_node)x_v1519)->data[0];
      call_ret_t22 = addn_i26(x_v1521, y_v1520);
      instr_struct(&S_t23, 13, 1, call_ret_t22);
      switch_ret_t21 = S_t23;
      break;
  }
  return switch_ret_t21;
}

tll_ptr lam_fun_t25(tll_ptr y_v1524, tll_env env)
{
  tll_ptr call_ret_t24;
  call_ret_t24 = addn_i26(env[0], y_v1524);
  return call_ret_t24;
}

tll_ptr lam_fun_t27(tll_ptr x_v1522, tll_env env)
{
  tll_ptr lam_clo_t26;
  instr_clo(&lam_clo_t26, &lam_fun_t25, 1, x_v1522);
  return lam_clo_t26;
}

tll_ptr muln_i27(tll_ptr x_v1525, tll_ptr y_v1526)
{
  tll_ptr call_ret_t30; tll_ptr call_ret_t31; tll_ptr switch_ret_t29;
  tll_ptr x_v1527;
  switch(((tll_node)x_v1525)->tag) {
    case 12:
      switch_ret_t29 = y_v1526;
      break;
    case 13:
      x_v1527 = ((tll_node)x_v1525)->data[0];
      call_ret_t31 = muln_i27(x_v1527, y_v1526);
      call_ret_t30 = addn_i26(y_v1526, call_ret_t31);
      switch_ret_t29 = call_ret_t30;
      break;
  }
  return switch_ret_t29;
}

tll_ptr lam_fun_t33(tll_ptr y_v1530, tll_env env)
{
  tll_ptr call_ret_t32;
  call_ret_t32 = muln_i27(env[0], y_v1530);
  return call_ret_t32;
}

tll_ptr lam_fun_t35(tll_ptr x_v1528, tll_env env)
{
  tll_ptr lam_clo_t34;
  instr_clo(&lam_clo_t34, &lam_fun_t33, 1, x_v1528);
  return lam_clo_t34;
}

tll_ptr eqn_i28(tll_ptr x_v1531, tll_ptr y_v1532)
{
  tll_ptr __v1533; tll_ptr call_ret_t43; tll_ptr false_t40;
  tll_ptr false_t42; tll_ptr switch_ret_t37; tll_ptr switch_ret_t38;
  tll_ptr switch_ret_t41; tll_ptr true_t39; tll_ptr x_v1534; tll_ptr y_v1535;
  switch(((tll_node)x_v1531)->tag) {
    case 12:
      switch(((tll_node)y_v1532)->tag) {
        case 12:
          instr_struct(&true_t39, 10, 0);
          switch_ret_t38 = true_t39;
          break;
        case 13:
          __v1533 = ((tll_node)y_v1532)->data[0];
          instr_struct(&false_t40, 11, 0);
          switch_ret_t38 = false_t40;
          break;
      }
      switch_ret_t37 = switch_ret_t38;
      break;
    case 13:
      x_v1534 = ((tll_node)x_v1531)->data[0];
      switch(((tll_node)y_v1532)->tag) {
        case 12:
          instr_struct(&false_t42, 11, 0);
          switch_ret_t41 = false_t42;
          break;
        case 13:
          y_v1535 = ((tll_node)y_v1532)->data[0];
          call_ret_t43 = eqn_i28(x_v1534, y_v1535);
          switch_ret_t41 = call_ret_t43;
          break;
      }
      switch_ret_t37 = switch_ret_t41;
      break;
  }
  return switch_ret_t37;
}

tll_ptr lam_fun_t45(tll_ptr y_v1538, tll_env env)
{
  tll_ptr call_ret_t44;
  call_ret_t44 = eqn_i28(env[0], y_v1538);
  return call_ret_t44;
}

tll_ptr lam_fun_t47(tll_ptr x_v1536, tll_env env)
{
  tll_ptr lam_clo_t46;
  instr_clo(&lam_clo_t46, &lam_fun_t45, 1, x_v1536);
  return lam_clo_t46;
}

tll_ptr lten_i29(tll_ptr x_v1539, tll_ptr y_v1540)
{
  tll_ptr call_ret_t53; tll_ptr false_t52; tll_ptr switch_ret_t49;
  tll_ptr switch_ret_t51; tll_ptr true_t50; tll_ptr x_v1541; tll_ptr y_v1542;
  switch(((tll_node)x_v1539)->tag) {
    case 12:
      instr_struct(&true_t50, 10, 0);
      switch_ret_t49 = true_t50;
      break;
    case 13:
      x_v1541 = ((tll_node)x_v1539)->data[0];
      switch(((tll_node)y_v1540)->tag) {
        case 12:
          instr_struct(&false_t52, 11, 0);
          switch_ret_t51 = false_t52;
          break;
        case 13:
          y_v1542 = ((tll_node)y_v1540)->data[0];
          call_ret_t53 = lten_i29(x_v1541, y_v1542);
          switch_ret_t51 = call_ret_t53;
          break;
      }
      switch_ret_t49 = switch_ret_t51;
      break;
  }
  return switch_ret_t49;
}

tll_ptr lam_fun_t55(tll_ptr y_v1545, tll_env env)
{
  tll_ptr call_ret_t54;
  call_ret_t54 = lten_i29(env[0], y_v1545);
  return call_ret_t54;
}

tll_ptr lam_fun_t57(tll_ptr x_v1543, tll_env env)
{
  tll_ptr lam_clo_t56;
  instr_clo(&lam_clo_t56, &lam_fun_t55, 1, x_v1543);
  return lam_clo_t56;
}

tll_ptr gten_i30(tll_ptr x_v1546, tll_ptr y_v1547)
{
  tll_ptr __v1548; tll_ptr call_ret_t65; tll_ptr false_t62;
  tll_ptr switch_ret_t59; tll_ptr switch_ret_t60; tll_ptr switch_ret_t63;
  tll_ptr true_t61; tll_ptr true_t64; tll_ptr x_v1549; tll_ptr y_v1550;
  switch(((tll_node)x_v1546)->tag) {
    case 12:
      switch(((tll_node)y_v1547)->tag) {
        case 12:
          instr_struct(&true_t61, 10, 0);
          switch_ret_t60 = true_t61;
          break;
        case 13:
          __v1548 = ((tll_node)y_v1547)->data[0];
          instr_struct(&false_t62, 11, 0);
          switch_ret_t60 = false_t62;
          break;
      }
      switch_ret_t59 = switch_ret_t60;
      break;
    case 13:
      x_v1549 = ((tll_node)x_v1546)->data[0];
      switch(((tll_node)y_v1547)->tag) {
        case 12:
          instr_struct(&true_t64, 10, 0);
          switch_ret_t63 = true_t64;
          break;
        case 13:
          y_v1550 = ((tll_node)y_v1547)->data[0];
          call_ret_t65 = gten_i30(x_v1549, y_v1550);
          switch_ret_t63 = call_ret_t65;
          break;
      }
      switch_ret_t59 = switch_ret_t63;
      break;
  }
  return switch_ret_t59;
}

tll_ptr lam_fun_t67(tll_ptr y_v1553, tll_env env)
{
  tll_ptr call_ret_t66;
  call_ret_t66 = gten_i30(env[0], y_v1553);
  return call_ret_t66;
}

tll_ptr lam_fun_t69(tll_ptr x_v1551, tll_env env)
{
  tll_ptr lam_clo_t68;
  instr_clo(&lam_clo_t68, &lam_fun_t67, 1, x_v1551);
  return lam_clo_t68;
}

tll_ptr cats_i33(tll_ptr s1_v1554, tll_ptr s2_v1555)
{
  tll_ptr String_t73; tll_ptr c_v1556; tll_ptr call_ret_t72;
  tll_ptr s1_v1557; tll_ptr switch_ret_t71;
  switch(((tll_node)s1_v1554)->tag) {
    case 15:
      switch_ret_t71 = s2_v1555;
      break;
    case 16:
      c_v1556 = ((tll_node)s1_v1554)->data[0];
      s1_v1557 = ((tll_node)s1_v1554)->data[1];
      call_ret_t72 = cats_i33(s1_v1557, s2_v1555);
      instr_struct(&String_t73, 16, 2, c_v1556, call_ret_t72);
      switch_ret_t71 = String_t73;
      break;
  }
  return switch_ret_t71;
}

tll_ptr lam_fun_t75(tll_ptr s2_v1560, tll_env env)
{
  tll_ptr call_ret_t74;
  call_ret_t74 = cats_i33(env[0], s2_v1560);
  return call_ret_t74;
}

tll_ptr lam_fun_t77(tll_ptr s1_v1558, tll_env env)
{
  tll_ptr lam_clo_t76;
  instr_clo(&lam_clo_t76, &lam_fun_t75, 1, s1_v1558);
  return lam_clo_t76;
}

tll_ptr strlen_i34(tll_ptr s_v1561)
{
  tll_ptr O_t80; tll_ptr S_t82; tll_ptr __v1562; tll_ptr call_ret_t81;
  tll_ptr s_v1563; tll_ptr switch_ret_t79;
  switch(((tll_node)s_v1561)->tag) {
    case 15:
      instr_struct(&O_t80, 12, 0);
      switch_ret_t79 = O_t80;
      break;
    case 16:
      __v1562 = ((tll_node)s_v1561)->data[0];
      s_v1563 = ((tll_node)s_v1561)->data[1];
      call_ret_t81 = strlen_i34(s_v1563);
      instr_struct(&S_t82, 13, 1, call_ret_t81);
      switch_ret_t79 = S_t82;
      break;
  }
  return switch_ret_t79;
}

tll_ptr lam_fun_t84(tll_ptr s_v1564, tll_env env)
{
  tll_ptr call_ret_t83;
  call_ret_t83 = strlen_i34(s_v1564);
  return call_ret_t83;
}

tll_ptr lam_fun_t94(tll_ptr __v1581, tll_env env)
{
  tll_ptr __v1586; tll_ptr __v1587; tll_ptr ch_v1585; tll_ptr false_t92;
  tll_ptr send_ch_t91; tll_ptr tt_t93;
  instr_struct(&false_t92, 11, 0);
  instr_send(&send_ch_t91, env[0], false_t92);
  ch_v1585 = send_ch_t91;
  __v1587 = ch_v1585;
  instr_struct(&tt_t93, 9, 0);
  __v1586 = tt_t93;
  return env[1];
}

tll_ptr lam_fun_t97(tll_ptr __v1566, tll_env env)
{
  tll_ptr __v1578; tll_ptr app_ret_t96; tll_ptr ch_v1576; tll_ptr ch_v1577;
  tll_ptr ch_v1580; tll_ptr lam_clo_t95; tll_ptr prim_ch_t86;
  tll_ptr recv_msg_t89; tll_ptr s_v1579; tll_ptr send_ch_t87;
  tll_ptr switch_ret_t90; tll_ptr true_t88;
  instr_open(&prim_ch_t86, &proc_stdin);
  ch_v1576 = prim_ch_t86;
  instr_struct(&true_t88, 10, 0);
  instr_send(&send_ch_t87, ch_v1576, true_t88);
  ch_v1577 = send_ch_t87;
  instr_recv(&recv_msg_t89, ch_v1577);
  __v1578 = recv_msg_t89;
  switch(((tll_node)__v1578)->tag) {
    case 0:
      s_v1579 = ((tll_node)__v1578)->data[0];
      ch_v1580 = ((tll_node)__v1578)->data[1];
      instr_free_struct(__v1578);
      instr_clo(&lam_clo_t95, &lam_fun_t94, 2, ch_v1580, s_v1579);
      switch_ret_t90 = lam_clo_t95;
      break;
  }
  instr_app(&app_ret_t96, switch_ret_t90, 0);
  instr_free_clo(switch_ret_t90);
  return app_ret_t96;
}

tll_ptr readline_i41(tll_ptr __v1565)
{
  tll_ptr lam_clo_t98;
  instr_clo(&lam_clo_t98, &lam_fun_t97, 0);
  return lam_clo_t98;
}

tll_ptr lam_fun_t100(tll_ptr __v1588, tll_env env)
{
  tll_ptr call_ret_t99;
  call_ret_t99 = readline_i41(__v1588);
  return call_ret_t99;
}

tll_ptr lam_fun_t109(tll_ptr __v1590, tll_env env)
{
  tll_ptr __v1600; tll_ptr ch_v1596; tll_ptr ch_v1597; tll_ptr ch_v1598;
  tll_ptr ch_v1599; tll_ptr false_t107; tll_ptr prim_ch_t102;
  tll_ptr send_ch_t103; tll_ptr send_ch_t105; tll_ptr send_ch_t106;
  tll_ptr true_t104; tll_ptr tt_t108;
  instr_open(&prim_ch_t102, &proc_stdout);
  ch_v1596 = prim_ch_t102;
  instr_struct(&true_t104, 10, 0);
  instr_send(&send_ch_t103, ch_v1596, true_t104);
  ch_v1597 = send_ch_t103;
  instr_send(&send_ch_t105, ch_v1597, env[0]);
  ch_v1598 = send_ch_t105;
  instr_struct(&false_t107, 11, 0);
  instr_send(&send_ch_t106, ch_v1598, false_t107);
  ch_v1599 = send_ch_t106;
  __v1600 = ch_v1599;
  instr_struct(&tt_t108, 9, 0);
  return tt_t108;
}

tll_ptr print_i42(tll_ptr s_v1589)
{
  tll_ptr lam_clo_t110;
  instr_clo(&lam_clo_t110, &lam_fun_t109, 1, s_v1589);
  return lam_clo_t110;
}

tll_ptr lam_fun_t112(tll_ptr s_v1601, tll_env env)
{
  tll_ptr call_ret_t111;
  call_ret_t111 = print_i42(s_v1601);
  return call_ret_t111;
}

tll_ptr lam_fun_t121(tll_ptr __v1603, tll_env env)
{
  tll_ptr __v1613; tll_ptr ch_v1609; tll_ptr ch_v1610; tll_ptr ch_v1611;
  tll_ptr ch_v1612; tll_ptr false_t119; tll_ptr prim_ch_t114;
  tll_ptr send_ch_t115; tll_ptr send_ch_t117; tll_ptr send_ch_t118;
  tll_ptr true_t116; tll_ptr tt_t120;
  instr_open(&prim_ch_t114, &proc_stderr);
  ch_v1609 = prim_ch_t114;
  instr_struct(&true_t116, 10, 0);
  instr_send(&send_ch_t115, ch_v1609, true_t116);
  ch_v1610 = send_ch_t115;
  instr_send(&send_ch_t117, ch_v1610, env[0]);
  ch_v1611 = send_ch_t117;
  instr_struct(&false_t119, 11, 0);
  instr_send(&send_ch_t118, ch_v1611, false_t119);
  ch_v1612 = send_ch_t118;
  __v1613 = ch_v1612;
  instr_struct(&tt_t120, 9, 0);
  return tt_t120;
}

tll_ptr prerr_i43(tll_ptr s_v1602)
{
  tll_ptr lam_clo_t122;
  instr_clo(&lam_clo_t122, &lam_fun_t121, 1, s_v1602);
  return lam_clo_t122;
}

tll_ptr lam_fun_t124(tll_ptr s_v1614, tll_env env)
{
  tll_ptr call_ret_t123;
  call_ret_t123 = prerr_i43(s_v1614);
  return call_ret_t123;
}

int main()
{
  instr_init();
  instr_clo(&lam_clo_t7, &lam_fun_t6, 0);
  andbclo_i44 = lam_clo_t7;
  instr_clo(&lam_clo_t14, &lam_fun_t13, 0);
  orbclo_i45 = lam_clo_t14;
  instr_clo(&lam_clo_t20, &lam_fun_t19, 0);
  notbclo_i46 = lam_clo_t20;
  instr_clo(&lam_clo_t28, &lam_fun_t27, 0);
  addnclo_i47 = lam_clo_t28;
  instr_clo(&lam_clo_t36, &lam_fun_t35, 0);
  mulnclo_i48 = lam_clo_t36;
  instr_clo(&lam_clo_t48, &lam_fun_t47, 0);
  eqnclo_i49 = lam_clo_t48;
  instr_clo(&lam_clo_t58, &lam_fun_t57, 0);
  ltenclo_i50 = lam_clo_t58;
  instr_clo(&lam_clo_t70, &lam_fun_t69, 0);
  gtenclo_i51 = lam_clo_t70;
  instr_clo(&lam_clo_t78, &lam_fun_t77, 0);
  catsclo_i52 = lam_clo_t78;
  instr_clo(&lam_clo_t85, &lam_fun_t84, 0);
  strlenclo_i53 = lam_clo_t85;
  instr_clo(&lam_clo_t101, &lam_fun_t100, 0);
  readlineclo_i54 = lam_clo_t101;
  instr_clo(&lam_clo_t113, &lam_fun_t112, 0);
  printclo_i55 = lam_clo_t113;
  instr_clo(&lam_clo_t125, &lam_fun_t124, 0);
  prerrclo_i56 = lam_clo_t125;
  instr_struct(&false_t127, 11, 0);
  instr_struct(&true_t128, 10, 0);
  instr_struct(&true_t129, 10, 0);
  instr_struct(&false_t130, 11, 0);
  instr_struct(&true_t131, 10, 0);
  instr_struct(&false_t132, 11, 0);
  instr_struct(&false_t133, 11, 0);
  instr_struct(&false_t134, 11, 0);
  instr_struct(&Ascii_t135, 14, 8,
               false_t127, true_t128, true_t129, false_t130, true_t131,
               false_t132, false_t133, false_t134);
  instr_struct(&false_t136, 11, 0);
  instr_struct(&true_t137, 10, 0);
  instr_struct(&true_t138, 10, 0);
  instr_struct(&false_t139, 11, 0);
  instr_struct(&false_t140, 11, 0);
  instr_struct(&true_t141, 10, 0);
  instr_struct(&false_t142, 11, 0);
  instr_struct(&true_t143, 10, 0);
  instr_struct(&Ascii_t144, 14, 8,
               false_t136, true_t137, true_t138, false_t139, false_t140,
               true_t141, false_t142, true_t143);
  instr_struct(&false_t145, 11, 0);
  instr_struct(&true_t146, 10, 0);
  instr_struct(&true_t147, 10, 0);
  instr_struct(&false_t148, 11, 0);
  instr_struct(&true_t149, 10, 0);
  instr_struct(&true_t150, 10, 0);
  instr_struct(&false_t151, 11, 0);
  instr_struct(&false_t152, 11, 0);
  instr_struct(&Ascii_t153, 14, 8,
               false_t145, true_t146, true_t147, false_t148, true_t149,
               true_t150, false_t151, false_t152);
  instr_struct(&false_t154, 11, 0);
  instr_struct(&true_t155, 10, 0);
  instr_struct(&true_t156, 10, 0);
  instr_struct(&false_t157, 11, 0);
  instr_struct(&true_t158, 10, 0);
  instr_struct(&true_t159, 10, 0);
  instr_struct(&false_t160, 11, 0);
  instr_struct(&false_t161, 11, 0);
  instr_struct(&Ascii_t162, 14, 8,
               false_t154, true_t155, true_t156, false_t157, true_t158,
               true_t159, false_t160, false_t161);
  instr_struct(&false_t163, 11, 0);
  instr_struct(&true_t164, 10, 0);
  instr_struct(&true_t165, 10, 0);
  instr_struct(&false_t166, 11, 0);
  instr_struct(&true_t167, 10, 0);
  instr_struct(&true_t168, 10, 0);
  instr_struct(&true_t169, 10, 0);
  instr_struct(&true_t170, 10, 0);
  instr_struct(&Ascii_t171, 14, 8,
               false_t163, true_t164, true_t165, false_t166, true_t167,
               true_t168, true_t169, true_t170);
  instr_struct(&EmptyString_t172, 15, 0);
  instr_struct(&String_t173, 16, 2, Ascii_t171, EmptyString_t172);
  instr_struct(&String_t174, 16, 2, Ascii_t162, String_t173);
  instr_struct(&String_t175, 16, 2, Ascii_t153, String_t174);
  instr_struct(&String_t176, 16, 2, Ascii_t144, String_t175);
  instr_struct(&String_t177, 16, 2, Ascii_t135, String_t176);
  call_ret_t126 = print_i42(String_t177);
  instr_app(&app_ret_t178, call_ret_t126, 0);
  instr_free_clo(call_ret_t126);
  instr_free_struct(app_ret_t178);
  return 0;
}

trans34 success--------------------------

