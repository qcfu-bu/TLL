parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v178 : bool_d2) (b2_v179 : bool_d2) ⇒
    match b1_v178 as __v180 in ??1 with
    | true_c2  ⇒ b2_v179 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v183 : bool_d2) (b2_v184 : bool_d2) ⇒
    match b1_v183 as __v185 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v184
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v187 : bool_d2) ⇒
    match b_v187 as __v188 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v189 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v192 : nat_d3) (y_v193 : nat_d3) ⇒
    match x_v192 as __v194 in ??4 with
    | O_c4  ⇒ y_v193 | S_c5 x_v195 ⇒ (S_c5‹› (addn_i4 x_v195 y_v193))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v198 : nat_d3) (y_v199 : nat_d3) ⇒
    match x_v198 as __v200 in ??5 with
    | O_c4  ⇒ y_v199
    | S_c5 x_v201 ⇒ (addn_i4 y_v199 (muln_i5 x_v201 y_v199))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v204 : nat_d3) (y_v205 : nat_d3) ⇒
    match x_v204 as __v206 in ??6 with
    | O_c4  ⇒
      match y_v205 as __v207 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v208 ⇒ false_c3‹›
      end
    | S_c5 x_v209 ⇒
      match y_v205 as __v210 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v211 ⇒ (eqn_i6 x_v209 y_v211)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v214 : nat_d3) (y_v215 : nat_d3) ⇒
    match x_v214 as __v216 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v217 ⇒
      match y_v215 as __v218 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v219 ⇒ (lten_i7 x_v217 y_v219)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v222 : nat_d3) (y_v223 : nat_d3) ⇒
    match x_v222 as __v224 in ??11 with
    | O_c4  ⇒
      match y_v223 as __v225 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v226 ⇒ false_c3‹›
      end
    | S_c5 x_v227 ⇒
      match y_v223 as __v228 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v229 ⇒ (gten_i8 x_v227 y_v229)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v232 : nat_d3) (y_v233 : nat_d3) ⇒
    match x_v232 as __v234 in ??14 with
    | O_c4  ⇒
      match y_v233 as __v235 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v236 ⇒ true_c2‹›
      end
    | S_c5 x_v237 ⇒
      match y_v233 as __v238 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v239 ⇒ (ltn_i9 x_v237 y_v239)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v242 : nat_d3) (y_v243 : nat_d3) ⇒
    match x_v242 as __v244 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v245 ⇒
      match y_v243 as __v246 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v247 ⇒ (gtn_i10 x_v245 y_v247)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v248 : bool_d2) (b1_v249 : bool_d2) (b2_v250 : bool_d2)
    (b3_v251 : bool_d2) (b4_v252 : bool_d2) (b5_v253 : bool_d2)
    (b6_v254 : bool_d2) (b7_v255 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v256 : ascii_d4) (s_v257 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v260 : string_d5) (s2_v261 : string_d5) ⇒
    match s1_v260 as __v262 in ??19 with
    | EmptyString_c7  ⇒ s2_v261
    | String_c8 c_v263 s1_v264 ⇒
      (String_c8‹› c_v263 (cats_i11 s1_v264 s2_v261))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v266 : string_d5) ⇒
    match s_v266 as __v267 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v268 s_v269 ⇒ (S_c5‹› (strlen_i12 s_v269))
    end

inductive list_d6 ‹s_s270, t_s271›
  (A_v272 : Type‹s_s270›) : Type‹t_s271›
=
| nil_c9 of
    ‹s_s273, t_s274› (A_v275 : Type‹s_s273›)
    : (list_d6‹s_s273, t_s274› A_v275)
| cons_c10 of
    ‹s_s276, t_s277› (A_v278 : Type‹s_s276›) (hd_v279 : A_v278)
    (tl_v280 : (list_d6‹s_s276, t_s277› A_v278))
    : (list_d6‹s_s276, t_s277› A_v278)

program len_i13 ‹s_s281, t_s282› :
  ∀ {A_v283 : Type‹s_s281›} →
    (list_d6‹??21, t_s282› A_v283) →
      nat_d3 ⊗ (list_d6‹??22, t_s282› A_v283)
=
  fn {A_v286 : Type‹s_s281›}
     (xs_v287 : (list_d6‹??21, t_s282› A_v286)) ⇒
    match xs_v287 as __v288 in ??23 with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹??33, ??32›⟩
    | cons_c10 x_v289 xs_v290 ⇒
      match (len_i13‹??26, ??25› ??24 xs_v290) as __v291 in ??27 with
      | ⟨n_v292, xs_v293⟩ ⇒
        ⟨(S_c5‹› n_v292), (cons_c10‹??30, ??29› x_v289 xs_v293)⟩
      end
    end

program append_i14 ‹s_s294, t_s295› :
  ∀ {A_v296 : Type‹s_s294›} →
    (list_d6‹??34, t_s295› A_v296) →
      (list_d6‹??35, t_s295› A_v296) ⊸ (list_d6‹??37, ??36› A_v296)
=
  fn {A_v299 : Type‹s_s294›}
     (xs_v300 : (list_d6‹??34, t_s295› A_v299)) ⇒
    ln (ys_v301 : ??38) ⇒
      match xs_v300 as __v302 in ??39 with
      | nil_c9  ⇒ ys_v301
      | cons_c10 x_v303 xs_v304 ⇒
        (cons_c10‹??45, ??44›
          x_v303 (append_i14‹??42, ??41› ??40 xs_v304 ys_v301))
      end

logical stdin_rec_i15 : unit_d1 → proto =
  fn (__v306 : unit_d1) ⇒
    ⇑(b_v307 : bool_d2) ⇒
      match b_v307 as __v308 in ??46 with
      | true_c2  ⇒ ⇓(__v309 : string_d5) ⇒ (stdin_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i16 : unit_d1 → proto =
  fn (__v311 : unit_d1) ⇒
    ⇑(b_v312 : bool_d2) ⇒
      match b_v312 as __v313 in ??47 with
      | true_c2  ⇒ ⇑(__v314 : string_d5) ⇒ (stdout_rec_i16 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i17 : unit_d1 → proto =
  fn (__v316 : unit_d1) ⇒
    ⇑(b_v317 : bool_d2) ⇒
      match b_v317 as __v318 in ??48 with
      | true_c2  ⇒ ⇑(__v319 : string_d5) ⇒ (stderr_rec_i17 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i18 : proto = (stdin_rec_i15 tt_c1‹›)

logical stdout_t_i19 : proto = (stdout_rec_i16 tt_c1‹›)

logical stderr_t_i20 : proto = (stderr_rec_i17 tt_c1‹›)

program readline_i21 : unit_d1 → IO string_d5 =
  fn (__v321 : unit_d1) ⇒
    let ch_v322 ⇐ open stdin in
    let ch_v323 ⇐ (send ch_v322 true_c2‹›) in
    let __v324 ⇐ recv ch_v323 in
    match __v324 as __v325 in ??49 with
    | ⟨s_v326, ch_v327⟩ ⇒
      let ch_v328 ⇐ (send ch_v327 false_c3‹›) in
      let __v329 ⇐ close ch_v328 in return s_v326
    end

program print_i22 : string_d5 → IO unit_d1 =
  fn (s_v331 : string_d5) ⇒
    let ch_v332 ⇐ open stdout in
    let ch_v333 ⇐ (send ch_v332 true_c2‹›) in
    let ch_v334 ⇐ (send ch_v333 s_v331) in
    let ch_v335 ⇐ (send ch_v334 false_c3‹›) in close ch_v335

program prerr_i23 : string_d5 → IO unit_d1 =
  fn (s_v337 : string_d5) ⇒
    let ch_v338 ⇐ open stderr in
    let ch_v339 ⇐ (send ch_v338 true_c2‹›) in
    let ch_v340 ⇐ (send ch_v339 s_v337) in
    let ch_v341 ⇐ (send ch_v340 false_c3‹›) in close ch_v341

inductive List_d7 ‹s_s342, t_s343›
  (A_v344 : Type‹s_s342›) : Type‹t_s343›
=
| Nil_c11 of
    ‹s_s345, t_s346› (A_v347 : Type‹s_s345›)
    : (List_d7‹s_s345, t_s346› A_v347)
| Cons_c12 of
    ‹s_s348, t_s349› (A_v350 : Type‹s_s348›) (hd_v351 : A_v350)
    (tl_v352 : (List_d7‹s_s348, t_s349› A_v350))
    : (List_d7‹s_s348, t_s349› A_v350)

logical len_i24 ‹s_s353, t_s354› :
  ∀ {A_v355 : Type‹s_s353›} →
    (List_d7‹s_s353, t_s354› A_v355) → nat_d3
=
  fn {A_v357 : Type‹s_s353›}
     (xs_v358 : (List_d7‹s_s353, t_s354› A_v357)) ⇒
    match xs_v358 as __v359 in ??50 with
    | Nil_c11  ⇒ O_c4‹›
    | Cons_c12 hd_v360 tl_v361 ⇒
      (addn_i4 1 (len_i24‹??53, ??52› ??51 tl_v361))
    end

program append_i25 ‹s_s362, t_s363› :
  ∀ {A_v364 : Type‹s_s362›} →
    (List_d7‹??54, t_s363› A_v364) →
      (List_d7‹??56, ??55› A_v364) ⊸ (List_d7‹??58, ??57› A_v364)
=
  fn {A_v367 : Type‹s_s362›}
     (xs_v368 : (List_d7‹??54, t_s363› A_v367)) ⇒
    ln (ys_v369 : ??59) ⇒
      match xs_v368 as __v370 in ??60 with
      | Nil_c11  ⇒ ys_v369
      | Cons_c12 x_v371 xs_v372 ⇒
        (Cons_c12‹??66, ??65›
          x_v371 (append_i25‹??63, ??62› ??61 xs_v372 ys_v369))
      end

logical append_len_i26 ‹s_s373, t_s374› :
  ∀ (A_v375 : Type‹s_s373›) →
    ∀ (xs_v376 : (List_d7‹??67, t_s374› A_v375)) →
      ∀ (ys_v377 : (List_d7‹??68, t_s374› A_v375)) →
        (len_i24‹??74, ??73›
          ??72 (append_i25‹??71, ??70› ??69 xs_v376 ys_v377)) ≡
          (addn_i4
            (len_i24‹??80, ??79› ??78 xs_v376)
            (len_i24‹??77, ??76› ??75 ys_v377))
=
  fn (A_v378 : Type‹s_s373›)
     (xs_v379 : (List_d7‹??67, t_s374› A_v378))
     (ys_v380 : (List_d7‹??68, t_s374› A_v378)) ⇒
    match xs_v379 as xs0_v381 in
      (len_i24‹??87, ??86›
        ??85 (append_i25‹??84, ??83› ??82 xs0_v381 ys_v380)) ≡
        (addn_i4
          (len_i24‹??93, ??92› ??91 xs0_v381)
          (len_i24‹??90, ??89› ??88 ys_v380)) with
    | Nil_c11  ⇒ refl ??106
    | Cons_c12 x_v382 xs0_v383 ⇒
      rew [n_v384, __v385 ⇒
        (S_c5‹›
          (len_i24‹??104, ??103›
            ??102 (append_i25‹??101, ??100› ??99 xs0_v383 ys_v380))) ≡
          (S_c5‹› n_v384)]
        (append_len_i26‹??97, ??96› ??95 xs0_v383 ys_v380) in
      refl ??98
    end

logical list_i27 ‹s_s386› : {Type‹s_s386›} → U =
  fn {A_v388 : Type‹s_s386›} ⇒ (List_d7‹??107, U› A_v388)

program ls0_i28 : (list_i27‹??109› ??108) =
  (Cons_c12‹??115, ??114› O_c4‹› Nil_c11‹??112, ??111›)

program ls1_i29 : (list_i27‹??117› ??116) =
  (Cons_c12‹??123, ??122› O_c4‹› Nil_c11‹??120, ??119›)

program ls2_i30 : ??124 =
  (append_i25‹??127, ??126› ??125 ls0_i28 ls1_i29)

program id_i31 ‹s_s389› :
  ∀ {A_v390 : Type‹s_s389›} → A_v390 → A_v390
= fn {A_v392 : Type‹s_s389›} (x_v393 : A_v392) ⇒ x_v393

program main_i32 : IO unit_d1 =
  let s_v394 ⇐ (readline_i21 tt_c1‹›) in
  (id_i31‹??131› ??130 (print_i22 (id_i31‹??129› ??128 s_v394)))

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1933 : bool_d2) (b2_v1934 : bool_d2) ⇒
    match b1_v1933 as __v1935 in bool_d2 with
    | true_c2  ⇒ b2_v1934 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1938 : bool_d2) (b2_v1939 : bool_d2) ⇒
    match b1_v1938 as __v1940 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v1939
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v1942 : bool_d2) ⇒
    match b_v1942 as __v1943 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v1944 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1947 : nat_d3) (y_v1948 : nat_d3) ⇒
    match x_v1947 as __v1949 in nat_d3 with
    | O_c4  ⇒ y_v1948
    | S_c5 x_v1950 ⇒ (S_c5‹› (addn_i4 x_v1950 y_v1948))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1953 : nat_d3) (y_v1954 : nat_d3) ⇒
    match x_v1953 as __v1955 in nat_d3 with
    | O_c4  ⇒ y_v1954
    | S_c5 x_v1956 ⇒ (addn_i4 y_v1954 (muln_i5 x_v1956 y_v1954))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1959 : nat_d3) (y_v1960 : nat_d3) ⇒
    match x_v1959 as __v1961 in bool_d2 with
    | O_c4  ⇒
      match y_v1960 as __v1962 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1963 ⇒ false_c3‹›
      end
    | S_c5 x_v1964 ⇒
      match y_v1960 as __v1965 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1966 ⇒ (eqn_i6 x_v1964 y_v1966)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1969 : nat_d3) (y_v1970 : nat_d3) ⇒
    match x_v1969 as __v1971 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v1972 ⇒
      match y_v1970 as __v1973 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1974 ⇒ (lten_i7 x_v1972 y_v1974)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1977 : nat_d3) (y_v1978 : nat_d3) ⇒
    match x_v1977 as __v1979 in bool_d2 with
    | O_c4  ⇒
      match y_v1978 as __v1980 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1981 ⇒ false_c3‹›
      end
    | S_c5 x_v1982 ⇒
      match y_v1978 as __v1983 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1984 ⇒ (gten_i8 x_v1982 y_v1984)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1987 : nat_d3) (y_v1988 : nat_d3) ⇒
    match x_v1987 as __v1989 in bool_d2 with
    | O_c4  ⇒
      match y_v1988 as __v1990 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1991 ⇒ true_c2‹›
      end
    | S_c5 x_v1992 ⇒
      match y_v1988 as __v1993 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1994 ⇒ (ltn_i9 x_v1992 y_v1994)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1997 : nat_d3) (y_v1998 : nat_d3) ⇒
    match x_v1997 as __v1999 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v2000 ⇒
      match y_v1998 as __v2001 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2002 ⇒ (gtn_i10 x_v2000 y_v2002)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v2003 : bool_d2) (b1_v2004 : bool_d2) (b2_v2005 : bool_d2)
    (b3_v2006 : bool_d2) (b4_v2007 : bool_d2) (b5_v2008 : bool_d2)
    (b6_v2009 : bool_d2) (b7_v2010 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v2011 : ascii_d4) (s_v2012 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2015 : string_d5) (s2_v2016 : string_d5) ⇒
    match s1_v2015 as __v2017 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2016
    | String_c8 c_v2018 s1_v2019 ⇒
      (String_c8‹› c_v2018 (cats_i11 s1_v2019 s2_v2016))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v2021 : string_d5) ⇒
    match s_v2021 as __v2022 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2023 s_v2024 ⇒ (S_c5‹› (strlen_i12 s_v2024))
    end

inductive list_d6 ‹s_s2025, t_s2026›
  (A_v2027 : Type‹s_s2025›) : Type‹t_s2026›
=
| nil_c9 of
    ‹s_s2028, t_s2029› (A_v2030 : Type‹s_s2028›)
    : (list_d6‹s_s2028, t_s2029› A_v2030)
| cons_c10 of
    ‹s_s2031, t_s2032› (A_v2033 : Type‹s_s2031›) (hd_v2034 : A_v2033)
    (tl_v2035 : (list_d6‹s_s2031, t_s2032› A_v2033))
    : (list_d6‹s_s2031, t_s2032› A_v2033)

program len_i13 ‹s_s2036, t_s2037› :
  ∀ {A_v2038 : Type‹s_s2036›} →
    (list_d6‹s_s2036, t_s2037› A_v2038) →
      nat_d3 ⊗ (list_d6‹s_s2036, t_s2037› A_v2038)
=
  fn {A_v2041 : Type‹s_s2036›}
     (xs_v2042 : (list_d6‹s_s2036, t_s2037› A_v2041)) ⇒
    match xs_v2042 as __v2043 in
      nat_d3 ⊗ (list_d6‹s_s2036, t_s2037› A_v2041) with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹s_s2036, t_s2037›⟩
    | cons_c10 x_v2045 xs_v2046 ⇒
      match (len_i13‹s_s2036, t_s2037› A_v2041 xs_v2046) as __v2047 in
        nat_d3 ⊗ (list_d6‹s_s2036, t_s2037› A_v2041) with
      | ⟨n_v2049, xs_v2050⟩ ⇒
        ⟨(S_c5‹› n_v2049), (cons_c10‹s_s2036, t_s2037›
                                   x_v2045 xs_v2050)⟩
      end
    end

program append_i14 ‹s_s2051, t_s2052› :
  ∀ {A_v2053 : Type‹s_s2051›} →
    (list_d6‹s_s2051, t_s2052› A_v2053) →
      (list_d6‹s_s2051, t_s2052› A_v2053) ⊸
        (list_d6‹s_s2051, t_s2052› A_v2053)
=
  fn {A_v2056 : Type‹s_s2051›}
     (xs_v2057 : (list_d6‹s_s2051, t_s2052› A_v2056)) ⇒
    ln (ys_v2058 : (list_d6‹s_s2051, t_s2052› A_v2056)) ⇒
      match xs_v2057 as __v2059 in
        (list_d6‹s_s2051, t_s2052› A_v2056) with
      | nil_c9  ⇒ ys_v2058
      | cons_c10 x_v2060 xs_v2061 ⇒
        (cons_c10‹s_s2051, t_s2052›
          x_v2060
          (append_i14‹s_s2051, t_s2052› A_v2056 xs_v2061 ys_v2058))
      end

logical stdin_rec_i15 : unit_d1 → proto =
  fn (__v2063 : unit_d1) ⇒
    ⇑(b_v2064 : bool_d2) ⇒
      match b_v2064 as __v2065 in proto with
      | true_c2  ⇒ ⇓(__v2066 : string_d5) ⇒ (stdin_rec_i15 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i16 : unit_d1 → proto =
  fn (__v2068 : unit_d1) ⇒
    ⇑(b_v2069 : bool_d2) ⇒
      match b_v2069 as __v2070 in proto with
      | true_c2  ⇒
        ⇑(__v2071 : string_d5) ⇒ (stdout_rec_i16 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i17 : unit_d1 → proto =
  fn (__v2073 : unit_d1) ⇒
    ⇑(b_v2074 : bool_d2) ⇒
      match b_v2074 as __v2075 in proto with
      | true_c2  ⇒
        ⇑(__v2076 : string_d5) ⇒ (stderr_rec_i17 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i18 : proto = (stdin_rec_i15 tt_c1‹›)

logical stdout_t_i19 : proto = (stdout_rec_i16 tt_c1‹›)

logical stderr_t_i20 : proto = (stderr_rec_i17 tt_c1‹›)

program readline_i21 : unit_d1 → IO string_d5 =
  fn (__v2078 : unit_d1) ⇒
    let ch_v2079 ⇐ open stdin in
    let ch_v2080 ⇐ (send ch_v2079 true_c2‹›) in
    let __v2081 ⇐ recv ch_v2080 in
    match __v2081 as __v2082 in IO string_d5 with
    | ⟨s_v2083, ch_v2084⟩ ⇒
      let ch_v2085 ⇐ (send ch_v2084 false_c3‹›) in
      let __v2086 ⇐ close ch_v2085 in return s_v2083
    end

program print_i22 : string_d5 → IO unit_d1 =
  fn (s_v2088 : string_d5) ⇒
    let ch_v2089 ⇐ open stdout in
    let ch_v2090 ⇐ (send ch_v2089 true_c2‹›) in
    let ch_v2091 ⇐ (send ch_v2090 s_v2088) in
    let ch_v2092 ⇐ (send ch_v2091 false_c3‹›) in close ch_v2092

program prerr_i23 : string_d5 → IO unit_d1 =
  fn (s_v2094 : string_d5) ⇒
    let ch_v2095 ⇐ open stderr in
    let ch_v2096 ⇐ (send ch_v2095 true_c2‹›) in
    let ch_v2097 ⇐ (send ch_v2096 s_v2094) in
    let ch_v2098 ⇐ (send ch_v2097 false_c3‹›) in close ch_v2098

inductive List_d7 ‹s_s2099, t_s2100›
  (A_v2101 : Type‹s_s2099›) : Type‹t_s2100›
=
| Nil_c11 of
    ‹s_s2102, t_s2103› (A_v2104 : Type‹s_s2102›)
    : (List_d7‹s_s2102, t_s2103› A_v2104)
| Cons_c12 of
    ‹s_s2105, t_s2106› (A_v2107 : Type‹s_s2105›) (hd_v2108 : A_v2107)
    (tl_v2109 : (List_d7‹s_s2105, t_s2106› A_v2107))
    : (List_d7‹s_s2105, t_s2106› A_v2107)

logical len_i24 ‹s_s2110, t_s2111› :
  ∀ {A_v2112 : Type‹s_s2110›} →
    (List_d7‹s_s2110, t_s2111› A_v2112) → nat_d3
=
  fn {A_v2114 : Type‹s_s2110›}
     (xs_v2115 : (List_d7‹s_s2110, t_s2111› A_v2114)) ⇒
    match xs_v2115 as __v2116 in nat_d3 with
    | Nil_c11  ⇒ O_c4‹›
    | Cons_c12 hd_v2117 tl_v2118 ⇒
      (addn_i4 1 (len_i24‹s_s2110, t_s2111› A_v2114 tl_v2118))
    end

program append_i25 ‹s_s2119, t_s2120› :
  ∀ {A_v2121 : Type‹s_s2119›} →
    (List_d7‹s_s2119, t_s2120› A_v2121) →
      (List_d7‹s_s2119, t_s2120› A_v2121) ⊸
        (List_d7‹s_s2119, t_s2120› A_v2121)
=
  fn {A_v2124 : Type‹s_s2119›}
     (xs_v2125 : (List_d7‹s_s2119, t_s2120› A_v2124)) ⇒
    ln (ys_v2126 : (List_d7‹s_s2119, t_s2120› A_v2124)) ⇒
      match xs_v2125 as __v2127 in
        (List_d7‹s_s2119, t_s2120› A_v2124) with
      | Nil_c11  ⇒ ys_v2126
      | Cons_c12 x_v2128 xs_v2129 ⇒
        (Cons_c12‹s_s2119, t_s2120›
          x_v2128
          (append_i25‹s_s2119, t_s2120› A_v2124 xs_v2129 ys_v2126))
      end

logical append_len_i26 ‹s_s2130, t_s2131› :
  ∀ (A_v2132 : Type‹s_s2130›) →
    ∀ (xs_v2133 : (List_d7‹s_s2130, t_s2131› A_v2132)) →
      ∀ (ys_v2134 : (List_d7‹s_s2130, t_s2131› A_v2132)) →
        (len_i24‹s_s2130, t_s2131›
          A_v2132
          (append_i25‹s_s2130, t_s2131› A_v2132 xs_v2133 ys_v2134)) ≡
          (addn_i4
            (len_i24‹s_s2130, t_s2131› A_v2132 xs_v2133)
            (len_i24‹s_s2130, t_s2131› A_v2132 ys_v2134))
=
  fn (A_v2135 : Type‹s_s2130›)
     (xs_v2136 : (List_d7‹s_s2130, t_s2131› A_v2135))
     (ys_v2137 : (List_d7‹s_s2130, t_s2131› A_v2135)) ⇒
    match xs_v2136 as xs0_v2138 in
      (len_i24‹s_s2130, t_s2131›
        A_v2135 (append_i25‹s_s2130, t_s2131› A_v2135 xs0_v2138 ys_v2137)) ≡
        (addn_i4
          (len_i24‹s_s2130, t_s2131› A_v2135 xs0_v2138)
          (len_i24‹s_s2130, t_s2131› A_v2135 ys_v2137)) with
    | Nil_c11  ⇒
      refl (len_i24‹s_s2130, t_s2131›
             A_v2135
             (append_i25‹s_s2130, t_s2131›
               A_v2135 Nil_c11‹s_s2130, t_s2131› ys_v2137))
    | Cons_c12 x_v2139 xs0_v2140 ⇒
      rew [n_v2141, __v2142 ⇒
        (S_c5‹›
          (len_i24‹s_s2130, t_s2131›
            A_v2135
            (append_i25‹s_s2130, t_s2131› A_v2135 xs0_v2140 ys_v2137))) ≡
          (S_c5‹› n_v2141)]
        (append_len_i26‹s_s2130, t_s2131› A_v2135 xs0_v2140 ys_v2137) in
      refl (S_c5‹›
             (len_i24‹s_s2130, t_s2131›
               A_v2135
               (append_i25‹s_s2130, t_s2131› A_v2135 xs0_v2140 ys_v2137)))
    end

logical list_i27 ‹s_s2143› : {Type‹s_s2143›} → U =
  fn {A_v2145 : Type‹s_s2143›} ⇒ (List_d7‹s_s2143, U› A_v2145)

program ls0_i28 : (list_i27‹U› nat_d3) =
  (Cons_c12‹U, U› O_c4‹› Nil_c11‹U, U›)

program ls1_i29 : (list_i27‹U› nat_d3) =
  (Cons_c12‹U, U› O_c4‹› Nil_c11‹U, U›)

program ls2_i30 : (List_d7‹U, U› nat_d3) =
  (append_i25‹U, U› nat_d3 ls0_i28 ls1_i29)

program id_i31 ‹s_s2146› :
  ∀ {A_v2147 : Type‹s_s2146›} → A_v2147 → A_v2147
= fn {A_v2149 : Type‹s_s2146›} (x_v2150 : A_v2149) ⇒ x_v2150

program main_i32 : IO unit_d1 =
  let s_v2151 ⇐ (readline_i21 tt_c1‹›) in
  (id_i31‹L› IO unit_d1 (print_i22 (id_i31‹U› string_d5 s_v2151)))

trans1e success--------------------------

data unit_d8 =
| tt_c13 of size(0)

data bool_d9 =
| true_c14 of size(0) | false_c15 of size(0)

def andb_i33 =
  fn b1_v2519 b2_v2520 ⇒
    match b1_v2519 with
    | true_c14  ⇒ b2_v2520 | false_c15  ⇒ false_c15
    end

def orb_i34 =
  fn b1_v2521 b2_v2522 ⇒
    match b1_v2521 with
    | true_c14  ⇒ true_c14 | false_c15  ⇒ b2_v2522
    end

def notb_i35 =
  fn b_v2523 ⇒
    match b_v2523 with
    | true_c14  ⇒ false_c15 | false_c15  ⇒ true_c14
    end

data nat_d10 =
| O_c16 of size(0) | S_c17 of size(1)

def addn_i36 =
  fn x_v2524 y_v2525 ⇒
    match x_v2524 with
    | O_c16  ⇒ y_v2525
    | S_c17 x_v2526 ⇒ (S_c17 ((addn_i36 x_v2526) y_v2525))
    end

def muln_i37 =
  fn x_v2527 y_v2528 ⇒
    match x_v2527 with
    | O_c16  ⇒ y_v2528
    | S_c17 x_v2529 ⇒ ((addn_i36 y_v2528) ((muln_i37 x_v2529) y_v2528))
    end

def eqn_i38 =
  fn x_v2530 y_v2531 ⇒
    match x_v2530 with
    | O_c16  ⇒
      match y_v2531 with
      | O_c16  ⇒ true_c14 | S_c17 __v2532 ⇒ false_c15
      end
    | S_c17 x_v2533 ⇒
      match y_v2531 with
      | O_c16  ⇒ false_c15 | S_c17 y_v2534 ⇒ ((eqn_i38 x_v2533) y_v2534)
      end
    end

def lten_i39 =
  fn x_v2535 y_v2536 ⇒
    match x_v2535 with
    | O_c16  ⇒ true_c14
    | S_c17 x_v2537 ⇒
      match y_v2536 with
      | O_c16  ⇒ false_c15 | S_c17 y_v2538 ⇒ ((lten_i39 x_v2537) y_v2538)
      end
    end

def gten_i40 =
  fn x_v2539 y_v2540 ⇒
    match x_v2539 with
    | O_c16  ⇒
      match y_v2540 with
      | O_c16  ⇒ true_c14 | S_c17 __v2541 ⇒ false_c15
      end
    | S_c17 x_v2542 ⇒
      match y_v2540 with
      | O_c16  ⇒ true_c14 | S_c17 y_v2543 ⇒ ((gten_i40 x_v2542) y_v2543)
      end
    end

data ascii_d11 =
| Ascii_c18 of size(8)

data string_d12 =
| EmptyString_c19 of size(0) | String_c20 of size(2)

def cats_i43 =
  fn s1_v2544 s2_v2545 ⇒
    match s1_v2544 with
    | EmptyString_c19  ⇒ s2_v2545
    | String_c20 c_v2546 s1_v2547 ⇒
      (String_c20 c_v2546 ((cats_i43 s1_v2547) s2_v2545))
    end

def strlen_i44 =
  fn s_v2548 ⇒
    match s_v2548 with
    | EmptyString_c19  ⇒ O_c16
    | String_c20 __v2549 s_v2550 ⇒ (S_c17 (strlen_i44 s_v2550))
    end

data listUU_d16 =
| nilUU_c27 of size(0) | consUU_c28 of size(2)

data listUL_d15 =
| nilUL_c25 of size(0) | consUL_c26 of size(2)

data listLU_d14 =
| nilLU_c23 of size(0)

data listLL_d13 =
| nilLL_c21 of size(0) | consLL_c22 of size(2)

def lenUU_i48 =
  fn A_v2551 xs_v2552 ⇒
    match xs_v2552 with
    | nilUU_c27  ⇒ (O_c16, nilUU_c27)
    | consUU_c28 x_v2553 xs_v2554 ⇒
      match ((lenUU_i48 NULL) xs_v2554) with
      | (n_v2555, xs_v2556) ⇒
        ((S_c17 n_v2555), (consUU_c28 x_v2553 xs_v2556))
      end
    end

def lenUL_i47 =
  fn A_v2557 xs_v2558 ⇒
    match xs_v2558 with
    | nilUL_c25  ⇒ (O_c16, nilUL_c25)
    | consUL_c26 x_v2559 xs_v2560 ⇒
      match ((lenUL_i47 NULL) xs_v2560) with
      | (n_v2561, xs_v2562) ⇒
        ((S_c17 n_v2561), (consUL_c26 x_v2559 xs_v2562))
      end
    end

def lenLL_i45 =
  fn A_v2563 xs_v2564 ⇒
    match xs_v2564 with
    | nilLL_c21  ⇒ (O_c16, nilLL_c21)
    | consLL_c22 x_v2565 xs_v2566 ⇒
      match ((lenLL_i45 NULL) xs_v2566) with
      | (n_v2567, xs_v2568) ⇒
        ((S_c17 n_v2567), (consLL_c22 x_v2565 xs_v2568))
      end
    end

def appendUU_i52 =
  fn A_v2569 xs_v2570 ⇒
    ln ys_v2571 ⇒
      match xs_v2570 with
      | nilUU_c27  ⇒ ys_v2571
      | consUU_c28 x_v2572 xs_v2573 ⇒
        (consUU_c28 x_v2572 (((appendUU_i52 NULL) xs_v2573) ys_v2571))
      end

def appendUL_i51 =
  fn A_v2574 xs_v2575 ⇒
    ln ys_v2576 ⇒
      match xs_v2575 with
      | nilUL_c25  ⇒ ys_v2576
      | consUL_c26 x_v2577 xs_v2578 ⇒
        (consUL_c26 x_v2577 (((appendUL_i51 NULL) xs_v2578) ys_v2576))
      end

def appendLL_i49 =
  fn A_v2579 xs_v2580 ⇒
    ln ys_v2581 ⇒
      match xs_v2580 with
      | nilLL_c21  ⇒ ys_v2581
      | consLL_c22 x_v2582 xs_v2583 ⇒
        (consLL_c22 x_v2582 (((appendLL_i49 NULL) xs_v2583) ys_v2581))
      end

def readline_i59 =
  fn __v2584 ⇒
    let ch_v2585 ⇐ open stdin in
    let ch_v2586 ⇐ (send ch_v2585 true_c14) in
    let __v2587 ⇐ recv ch_v2586 in
    match __v2587 with
    | (s_v2588, ch_v2589) ⇒
      let ch_v2590 ⇐ (send ch_v2589 false_c15) in
      let __v2591 ⇐ close⇑ ch_v2590 in return s_v2588
    end

def print_i60 =
  fn s_v2592 ⇒
    let ch_v2593 ⇐ open stdout in
    let ch_v2594 ⇐ (send ch_v2593 true_c14) in
    let ch_v2595 ⇐ (send ch_v2594 s_v2592) in
    let ch_v2596 ⇐ (send ch_v2595 false_c15) in close⇑ ch_v2596

def prerr_i61 =
  fn s_v2597 ⇒
    let ch_v2598 ⇐ open stderr in
    let ch_v2599 ⇐ (send ch_v2598 true_c14) in
    let ch_v2600 ⇐ (send ch_v2599 s_v2597) in
    let ch_v2601 ⇐ (send ch_v2600 false_c15) in close⇑ ch_v2601

data ListUU_d20 =
| NilUU_c35 of size(0) | ConsUU_c36 of size(2)

data ListUL_d19 =
| NilUL_c33 of size(0) | ConsUL_c34 of size(2)

data ListLU_d18 =
| NilLU_c31 of size(0)

data ListLL_d17 =
| NilLL_c29 of size(0) | ConsLL_c30 of size(2)

def appendUU_i69 =
  fn A_v2602 xs_v2603 ⇒
    ln ys_v2604 ⇒
      match xs_v2603 with
      | NilUU_c35  ⇒ ys_v2604
      | ConsUU_c36 x_v2605 xs_v2606 ⇒
        (ConsUU_c36 x_v2605 (((appendUU_i69 NULL) xs_v2606) ys_v2604))
      end

def appendUL_i68 =
  fn A_v2607 xs_v2608 ⇒
    ln ys_v2609 ⇒
      match xs_v2608 with
      | NilUL_c33  ⇒ ys_v2609
      | ConsUL_c34 x_v2610 xs_v2611 ⇒
        (ConsUL_c34 x_v2610 (((appendUL_i68 NULL) xs_v2611) ys_v2609))
      end

def appendLL_i66 =
  fn A_v2612 xs_v2613 ⇒
    ln ys_v2614 ⇒
      match xs_v2613 with
      | NilLL_c29  ⇒ ys_v2614
      | ConsLL_c30 x_v2615 xs_v2616 ⇒
        (ConsLL_c30 x_v2615 (((appendLL_i66 NULL) xs_v2616) ys_v2614))
      end

def ls0_i76 = (ConsUU_c36 O_c16 NilUU_c35)

def ls1_i77 = (ConsUU_c36 O_c16 NilUU_c35)

def ls2_i78 = (((appendUU_i69 NULL) ls0_i76) ls1_i77)

def idU_i80 = fn A_v2617 x_v2618 ⇒ x_v2618

def idL_i79 = fn A_v2619 x_v2620 ⇒ x_v2620

main =
  let s_v2621 ⇐ (readline_i59 tt_c13) in
  ((idL_i79 NULL) (print_i60 ((idU_i80 NULL) s_v2621)))

trans12 success--------------------------

fun andb_i33(b1_v2754, b2_v2755) =
  match b1_v2754 with
  | true_c14  ⇒ b2_v2755 | false_c15  ⇒ false_c15
  end

val andbclo_i81 = fn b1_v2756 b2_v2757 ⇒ andb_i33(b1_v2756, b2_v2757)

fun orb_i34(b1_v2758, b2_v2759) =
  match b1_v2758 with
  | true_c14  ⇒ true_c14 | false_c15  ⇒ b2_v2759
  end

val orbclo_i82 = fn b1_v2760 b2_v2761 ⇒ orb_i34(b1_v2760, b2_v2761)

fun notb_i35(b_v2762) =
  match b_v2762 with
  | true_c14  ⇒ false_c15 | false_c15  ⇒ true_c14
  end

val notbclo_i83 = fn b_v2763 ⇒ notb_i35(b_v2763)

fun addn_i36(x_v2764, y_v2765) =
  match x_v2764 with
  | O_c16  ⇒ y_v2765 | S_c17 x_v2766 ⇒ (S_c17 addn_i36(x_v2766, y_v2765))
  end

val addnclo_i84 = fn x_v2767 y_v2768 ⇒ addn_i36(x_v2767, y_v2768)

fun muln_i37(x_v2769, y_v2770) =
  match x_v2769 with
  | O_c16  ⇒ y_v2770
  | S_c17 x_v2771 ⇒ addn_i36(y_v2770, muln_i37(x_v2771, y_v2770))
  end

val mulnclo_i85 = fn x_v2772 y_v2773 ⇒ muln_i37(x_v2772, y_v2773)

fun eqn_i38(x_v2774, y_v2775) =
  match x_v2774 with
  | O_c16  ⇒
    match y_v2775 with
    | O_c16  ⇒ true_c14 | S_c17 __v2776 ⇒ false_c15
    end
  | S_c17 x_v2777 ⇒
    match y_v2775 with
    | O_c16  ⇒ false_c15 | S_c17 y_v2778 ⇒ eqn_i38(x_v2777, y_v2778)
    end
  end

val eqnclo_i86 = fn x_v2779 y_v2780 ⇒ eqn_i38(x_v2779, y_v2780)

fun lten_i39(x_v2781, y_v2782) =
  match x_v2781 with
  | O_c16  ⇒ true_c14
  | S_c17 x_v2783 ⇒
    match y_v2782 with
    | O_c16  ⇒ false_c15 | S_c17 y_v2784 ⇒ lten_i39(x_v2783, y_v2784)
    end
  end

val ltenclo_i87 = fn x_v2785 y_v2786 ⇒ lten_i39(x_v2785, y_v2786)

fun gten_i40(x_v2787, y_v2788) =
  match x_v2787 with
  | O_c16  ⇒
    match y_v2788 with
    | O_c16  ⇒ true_c14 | S_c17 __v2789 ⇒ false_c15
    end
  | S_c17 x_v2790 ⇒
    match y_v2788 with
    | O_c16  ⇒ true_c14 | S_c17 y_v2791 ⇒ gten_i40(x_v2790, y_v2791)
    end
  end

val gtenclo_i88 = fn x_v2792 y_v2793 ⇒ gten_i40(x_v2792, y_v2793)

fun cats_i43(s1_v2794, s2_v2795) =
  match s1_v2794 with
  | EmptyString_c19  ⇒ s2_v2795
  | String_c20 c_v2796 s1_v2797 ⇒
    (String_c20 c_v2796 cats_i43(s1_v2797, s2_v2795))
  end

val catsclo_i89 = fn s1_v2798 s2_v2799 ⇒ cats_i43(s1_v2798, s2_v2799)

fun strlen_i44(s_v2800) =
  match s_v2800 with
  | EmptyString_c19  ⇒ O_c16
  | String_c20 __v2801 s_v2802 ⇒ (S_c17 strlen_i44(s_v2802))
  end

val strlenclo_i90 = fn s_v2803 ⇒ strlen_i44(s_v2803)

fun lenUU_i48(A_v2804, xs_v2805) =
  match xs_v2805 with
  | nilUU_c27  ⇒ (O_c16, nilUU_c27)
  | consUU_c28 x_v2806 xs_v2807 ⇒
    match lenUU_i48(NULL, xs_v2807) with
    | (n_v2808, xs_v2809) ⇒
      ((S_c17 n_v2808), (consUU_c28 x_v2806 xs_v2809))
    end
  end

val lenUUclo_i91 = fn A_v2810 xs_v2811 ⇒ lenUU_i48(A_v2810, xs_v2811)

fun lenUL_i47(A_v2812, xs_v2813) =
  match xs_v2813 with
  | nilUL_c25  ⇒ (O_c16, nilUL_c25)
  | consUL_c26 x_v2814 xs_v2815 ⇒
    match lenUL_i47(NULL, xs_v2815) with
    | (n_v2816, xs_v2817) ⇒
      ((S_c17 n_v2816), (consUL_c26 x_v2814 xs_v2817))
    end
  end

val lenULclo_i92 = fn A_v2818 xs_v2819 ⇒ lenUL_i47(A_v2818, xs_v2819)

fun lenLL_i45(A_v2820, xs_v2821) =
  match xs_v2821 with
  | nilLL_c21  ⇒ (O_c16, nilLL_c21)
  | consLL_c22 x_v2822 xs_v2823 ⇒
    match lenLL_i45(NULL, xs_v2823) with
    | (n_v2824, xs_v2825) ⇒
      ((S_c17 n_v2824), (consLL_c22 x_v2822 xs_v2825))
    end
  end

val lenLLclo_i93 = fn A_v2826 xs_v2827 ⇒ lenLL_i45(A_v2826, xs_v2827)

fun appendUU_i52(A_v2828, xs_v2829, ys_v2830) =
  match xs_v2829 with
  | nilUU_c27  ⇒ ys_v2830
  | consUU_c28 x_v2831 xs_v2832 ⇒
    (consUU_c28 x_v2831 appendUU_i52(NULL, xs_v2832, ys_v2830))
  end

val appendUUclo_i94 =
  fn A_v2833 xs_v2834 ⇒
    ln ys_v2835 ⇒ appendUU_i52(A_v2833, xs_v2834, ys_v2835)

fun appendUL_i51(A_v2836, xs_v2837, ys_v2838) =
  match xs_v2837 with
  | nilUL_c25  ⇒ ys_v2838
  | consUL_c26 x_v2839 xs_v2840 ⇒
    (consUL_c26 x_v2839 appendUL_i51(NULL, xs_v2840, ys_v2838))
  end

val appendULclo_i95 =
  fn A_v2841 xs_v2842 ⇒
    ln ys_v2843 ⇒ appendUL_i51(A_v2841, xs_v2842, ys_v2843)

fun appendLL_i49(A_v2844, xs_v2845, ys_v2846) =
  match xs_v2845 with
  | nilLL_c21  ⇒ ys_v2846
  | consLL_c22 x_v2847 xs_v2848 ⇒
    (consLL_c22 x_v2847 appendLL_i49(NULL, xs_v2848, ys_v2846))
  end

val appendLLclo_i96 =
  fn A_v2849 xs_v2850 ⇒
    ln ys_v2851 ⇒ appendLL_i49(A_v2849, xs_v2850, ys_v2851)

fun readline_i59(__v2852) =
  ln __v2853 ⇒
    let ch_v2854 = (ln __v2855 ⇒ open stdin) NULL in
    let ch_v2856 =
      ((fn x_v2857 ⇒ ln __v2858 ⇒ send(ch_v2854, x_v2857)) true_c14) NULL
    in
    let __v2859 = (ln __v2860 ⇒ recv(ch_v2856)) NULL in
    (match __v2859 with
     | (s_v2861, ch_v2862) ⇒
       ln __v2863 ⇒
         let ch_v2864 =
           ((fn x_v2865 ⇒ ln __v2866 ⇒ send(ch_v2862, x_v2865)) false_c15)
             NULL
         in
         let __v2867 = (ln __v2868 ⇒ let __v2869 = ch_v2864 in tt_c13) NULL
         in (ln __v2870 ⇒ s_v2861) NULL
     end) NULL

val readlineclo_i97 = fn __v2871 ⇒ readline_i59(__v2871)

fun print_i60(s_v2872) =
  ln __v2873 ⇒
    let ch_v2874 = (ln __v2875 ⇒ open stdout) NULL in
    let ch_v2876 =
      ((fn x_v2877 ⇒ ln __v2878 ⇒ send(ch_v2874, x_v2877)) true_c14) NULL
    in
    let ch_v2879 =
      ((fn x_v2880 ⇒ ln __v2881 ⇒ send(ch_v2876, x_v2880)) s_v2872) NULL
    in
    let ch_v2882 =
      ((fn x_v2883 ⇒ ln __v2884 ⇒ send(ch_v2879, x_v2883)) false_c15)
        NULL
    in (ln __v2885 ⇒ let __v2886 = ch_v2882 in tt_c13) NULL

val printclo_i98 = fn s_v2887 ⇒ print_i60(s_v2887)

fun prerr_i61(s_v2888) =
  ln __v2889 ⇒
    let ch_v2890 = (ln __v2891 ⇒ open stderr) NULL in
    let ch_v2892 =
      ((fn x_v2893 ⇒ ln __v2894 ⇒ send(ch_v2890, x_v2893)) true_c14) NULL
    in
    let ch_v2895 =
      ((fn x_v2896 ⇒ ln __v2897 ⇒ send(ch_v2892, x_v2896)) s_v2888) NULL
    in
    let ch_v2898 =
      ((fn x_v2899 ⇒ ln __v2900 ⇒ send(ch_v2895, x_v2899)) false_c15)
        NULL
    in (ln __v2901 ⇒ let __v2902 = ch_v2898 in tt_c13) NULL

val prerrclo_i99 = fn s_v2903 ⇒ prerr_i61(s_v2903)

fun appendUU_i69(A_v2904, xs_v2905, ys_v2906) =
  match xs_v2905 with
  | NilUU_c35  ⇒ ys_v2906
  | ConsUU_c36 x_v2907 xs_v2908 ⇒
    (ConsUU_c36 x_v2907 appendUU_i69(NULL, xs_v2908, ys_v2906))
  end

val appendUUclo_i100 =
  fn A_v2909 xs_v2910 ⇒
    ln ys_v2911 ⇒ appendUU_i69(A_v2909, xs_v2910, ys_v2911)

fun appendUL_i68(A_v2912, xs_v2913, ys_v2914) =
  match xs_v2913 with
  | NilUL_c33  ⇒ ys_v2914
  | ConsUL_c34 x_v2915 xs_v2916 ⇒
    (ConsUL_c34 x_v2915 appendUL_i68(NULL, xs_v2916, ys_v2914))
  end

val appendULclo_i101 =
  fn A_v2917 xs_v2918 ⇒
    ln ys_v2919 ⇒ appendUL_i68(A_v2917, xs_v2918, ys_v2919)

fun appendLL_i66(A_v2920, xs_v2921, ys_v2922) =
  match xs_v2921 with
  | NilLL_c29  ⇒ ys_v2922
  | ConsLL_c30 x_v2923 xs_v2924 ⇒
    (ConsLL_c30 x_v2923 appendLL_i66(NULL, xs_v2924, ys_v2922))
  end

val appendLLclo_i102 =
  fn A_v2925 xs_v2926 ⇒
    ln ys_v2927 ⇒ appendLL_i66(A_v2925, xs_v2926, ys_v2927)

val ls0_i76 = (ConsUU_c36 O_c16 NilUU_c35)

val ls1_i77 = (ConsUU_c36 O_c16 NilUU_c35)

val ls2_i78 = appendUU_i69(NULL, ls0_i76, ls1_i77)

fun idU_i80(A_v2928, x_v2929) = x_v2929

val idUclo_i103 = fn A_v2930 x_v2931 ⇒ idU_i80(A_v2930, x_v2931)

fun idL_i79(A_v2932, x_v2933) = x_v2933

val idLclo_i104 = fn A_v2934 x_v2935 ⇒ idL_i79(A_v2934, x_v2935)

main =
  (ln __v2936 ⇒
     let s_v2937 = (readline_i59(tt_c13)) NULL in
     (idL_i79(NULL, print_i60(idU_i80(NULL, s_v2937)))) NULL)
    NULL

trans23 success--------------------------

fun andb_i33(b1_v3130, b2_v3131) =
  match b1_v3130 with
  | true_c14  ⇒ b2_v3131 | false_c15  ⇒ false_c15
  end

val andbclo_i81 = fn b1_v3132 b2_v3133 ⇒ andb_i33(b1_v3132, b2_v3133)

fun orb_i34(b1_v3134, b2_v3135) =
  match b1_v3134 with
  | true_c14  ⇒ true_c14 | false_c15  ⇒ b2_v3135
  end

val orbclo_i82 = fn b1_v3136 b2_v3137 ⇒ orb_i34(b1_v3136, b2_v3137)

fun notb_i35(b_v3138) =
  match b_v3138 with
  | true_c14  ⇒ false_c15 | false_c15  ⇒ true_c14
  end

val notbclo_i83 = fn b_v3139 ⇒ notb_i35(b_v3139)

fun addn_i36(x_v3140, y_v3141) =
  match x_v3140 with
  | O_c16  ⇒ y_v3141 | S_c17 x_v3142 ⇒ (S_c17 addn_i36(x_v3142, y_v3141))
  end

val addnclo_i84 = fn x_v3143 y_v3144 ⇒ addn_i36(x_v3143, y_v3144)

fun muln_i37(x_v3145, y_v3146) =
  match x_v3145 with
  | O_c16  ⇒ y_v3146
  | S_c17 x_v3147 ⇒ addn_i36(y_v3146, muln_i37(x_v3147, y_v3146))
  end

val mulnclo_i85 = fn x_v3148 y_v3149 ⇒ muln_i37(x_v3148, y_v3149)

fun eqn_i38(x_v3150, y_v3151) =
  match x_v3150 with
  | O_c16  ⇒
    match y_v3151 with
    | O_c16  ⇒ true_c14 | S_c17 __v3152 ⇒ false_c15
    end
  | S_c17 x_v3153 ⇒
    match y_v3151 with
    | O_c16  ⇒ false_c15 | S_c17 y_v3154 ⇒ eqn_i38(x_v3153, y_v3154)
    end
  end

val eqnclo_i86 = fn x_v3155 y_v3156 ⇒ eqn_i38(x_v3155, y_v3156)

fun lten_i39(x_v3157, y_v3158) =
  match x_v3157 with
  | O_c16  ⇒ true_c14
  | S_c17 x_v3159 ⇒
    match y_v3158 with
    | O_c16  ⇒ false_c15 | S_c17 y_v3160 ⇒ lten_i39(x_v3159, y_v3160)
    end
  end

val ltenclo_i87 = fn x_v3161 y_v3162 ⇒ lten_i39(x_v3161, y_v3162)

fun gten_i40(x_v3163, y_v3164) =
  match x_v3163 with
  | O_c16  ⇒
    match y_v3164 with
    | O_c16  ⇒ true_c14 | S_c17 __v3165 ⇒ false_c15
    end
  | S_c17 x_v3166 ⇒
    match y_v3164 with
    | O_c16  ⇒ true_c14 | S_c17 y_v3167 ⇒ gten_i40(x_v3166, y_v3167)
    end
  end

val gtenclo_i88 = fn x_v3168 y_v3169 ⇒ gten_i40(x_v3168, y_v3169)

fun cats_i43(s1_v3170, s2_v3171) =
  match s1_v3170 with
  | EmptyString_c19  ⇒ s2_v3171
  | String_c20 c_v3172 s1_v3173 ⇒
    (String_c20 c_v3172 cats_i43(s1_v3173, s2_v3171))
  end

val catsclo_i89 = fn s1_v3174 s2_v3175 ⇒ cats_i43(s1_v3174, s2_v3175)

fun strlen_i44(s_v3176) =
  match s_v3176 with
  | EmptyString_c19  ⇒ O_c16
  | String_c20 __v3177 s_v3178 ⇒ (S_c17 strlen_i44(s_v3178))
  end

val strlenclo_i90 = fn s_v3179 ⇒ strlen_i44(s_v3179)

fun lenUU_i48(A_v3180, xs_v3181) =
  match xs_v3181 with
  | nilUU_c27  ⇒ (O_c16, nilUU_c27)
  | consUU_c28 x_v3182 xs_v3183 ⇒
    match lenUU_i48(NULL, xs_v3183) with
    | (n_v3184, xs_v3185) ⇒
      ((S_c17 n_v3184), (consUU_c28 x_v3182 xs_v3185))
    end
  end

val lenUUclo_i91 = fn A_v3186 xs_v3187 ⇒ lenUU_i48(A_v3186, xs_v3187)

fun lenUL_i47(A_v3188, xs_v3189) =
  match xs_v3189 with
  | nilUL_c25  ⇒ (O_c16, nilUL_c25)
  | consUL_c26 x_v3190 xs_v3191 ⇒
    match lenUL_i47(NULL, xs_v3191) with
    | (n_v3192, xs_v3193) ⇒
      ((S_c17 n_v3192), (consUL_c26 x_v3190 xs_v3193))
    end
  end

val lenULclo_i92 = fn A_v3194 xs_v3195 ⇒ lenUL_i47(A_v3194, xs_v3195)

fun lenLL_i45(A_v3196, xs_v3197) =
  match xs_v3197 with
  | nilLL_c21  ⇒ (O_c16, nilLL_c21)
  | consLL_c22 x_v3198 xs_v3199 ⇒
    match lenLL_i45(NULL, xs_v3199) with
    | (n_v3200, xs_v3201) ⇒
      ((S_c17 n_v3200), (consLL_c22 x_v3198 xs_v3201))
    end
  end

val lenLLclo_i93 = fn A_v3202 xs_v3203 ⇒ lenLL_i45(A_v3202, xs_v3203)

fun appendUU_i52(A_v3204, xs_v3205, ys_v3206) =
  match xs_v3205 with
  | nilUU_c27  ⇒ ys_v3206
  | consUU_c28 x_v3207 xs_v3208 ⇒
    (consUU_c28 x_v3207 appendUU_i52(NULL, xs_v3208, ys_v3206))
  end

val appendUUclo_i94 =
  fn A_v3209 xs_v3210 ⇒
    ln ys_v3211 ⇒ appendUU_i52(A_v3209, xs_v3210, ys_v3211)

fun appendUL_i51(A_v3212, xs_v3213, ys_v3214) =
  match xs_v3213 with
  | nilUL_c25  ⇒ ys_v3214
  | consUL_c26 x_v3215 xs_v3216 ⇒
    (consUL_c26 x_v3215 appendUL_i51(NULL, xs_v3216, ys_v3214))
  end

val appendULclo_i95 =
  fn A_v3217 xs_v3218 ⇒
    ln ys_v3219 ⇒ appendUL_i51(A_v3217, xs_v3218, ys_v3219)

fun appendLL_i49(A_v3220, xs_v3221, ys_v3222) =
  match xs_v3221 with
  | nilLL_c21  ⇒ ys_v3222
  | consLL_c22 x_v3223 xs_v3224 ⇒
    (consLL_c22 x_v3223 appendLL_i49(NULL, xs_v3224, ys_v3222))
  end

val appendLLclo_i96 =
  fn A_v3225 xs_v3226 ⇒
    ln ys_v3227 ⇒ appendLL_i49(A_v3225, xs_v3226, ys_v3227)

fun readline_i59(__v3228) =
  ln __v3229 ⇒
    let ch_v3230 = open stdin in
    let ch_v3231 = send(ch_v3230, true_c14) in
    let __v3232 = recv(ch_v3231) in
    (match __v3232 with
     | (s_v3233, ch_v3234) ⇒
       ln __v3235 ⇒
         let ch_v3236 = send(ch_v3234, false_c15) in
         let __v3237 = let __v3238 = ch_v3236 in tt_c13 in s_v3233
     end) NULL

val readlineclo_i97 = fn __v3239 ⇒ readline_i59(__v3239)

fun print_i60(s_v3240) =
  ln __v3241 ⇒
    let ch_v3242 = open stdout in
    let ch_v3243 = send(ch_v3242, true_c14) in
    let ch_v3244 = send(ch_v3243, s_v3240) in
    let ch_v3245 = send(ch_v3244, false_c15) in
    let __v3246 = ch_v3245 in tt_c13

val printclo_i98 = fn s_v3247 ⇒ print_i60(s_v3247)

fun prerr_i61(s_v3248) =
  ln __v3249 ⇒
    let ch_v3250 = open stderr in
    let ch_v3251 = send(ch_v3250, true_c14) in
    let ch_v3252 = send(ch_v3251, s_v3248) in
    let ch_v3253 = send(ch_v3252, false_c15) in
    let __v3254 = ch_v3253 in tt_c13

val prerrclo_i99 = fn s_v3255 ⇒ prerr_i61(s_v3255)

fun appendUU_i69(A_v3256, xs_v3257, ys_v3258) =
  match xs_v3257 with
  | NilUU_c35  ⇒ ys_v3258
  | ConsUU_c36 x_v3259 xs_v3260 ⇒
    (ConsUU_c36 x_v3259 appendUU_i69(NULL, xs_v3260, ys_v3258))
  end

val appendUUclo_i100 =
  fn A_v3261 xs_v3262 ⇒
    ln ys_v3263 ⇒ appendUU_i69(A_v3261, xs_v3262, ys_v3263)

fun appendUL_i68(A_v3264, xs_v3265, ys_v3266) =
  match xs_v3265 with
  | NilUL_c33  ⇒ ys_v3266
  | ConsUL_c34 x_v3267 xs_v3268 ⇒
    (ConsUL_c34 x_v3267 appendUL_i68(NULL, xs_v3268, ys_v3266))
  end

val appendULclo_i101 =
  fn A_v3269 xs_v3270 ⇒
    ln ys_v3271 ⇒ appendUL_i68(A_v3269, xs_v3270, ys_v3271)

fun appendLL_i66(A_v3272, xs_v3273, ys_v3274) =
  match xs_v3273 with
  | NilLL_c29  ⇒ ys_v3274
  | ConsLL_c30 x_v3275 xs_v3276 ⇒
    (ConsLL_c30 x_v3275 appendLL_i66(NULL, xs_v3276, ys_v3274))
  end

val appendLLclo_i102 =
  fn A_v3277 xs_v3278 ⇒
    ln ys_v3279 ⇒ appendLL_i66(A_v3277, xs_v3278, ys_v3279)

val ls0_i76 = (ConsUU_c36 O_c16 NilUU_c35)

val ls1_i77 = (ConsUU_c36 O_c16 NilUU_c35)

val ls2_i78 = appendUU_i69(NULL, ls0_i76, ls1_i77)

fun idU_i80(A_v3280, x_v3281) = x_v3281

val idUclo_i103 = fn A_v3282 x_v3283 ⇒ idU_i80(A_v3282, x_v3283)

fun idL_i79(A_v3284, x_v3285) = x_v3285

val idLclo_i104 = fn A_v3286 x_v3287 ⇒ idL_i79(A_v3286, x_v3287)

main =
  let s_v3288 = (readline_i59(tt_c13)) NULL in
  (idL_i79(NULL, print_i60(idU_i80(NULL, s_v3288)))) NULL

trans3e success--------------------------

trans34 success--------------------------

