parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v194 : bool_d2) (b2_v195 : bool_d2) ⇒
    match b1_v194 as __v196 in ??1 with
    | true_c2  ⇒ b2_v195 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v199 : bool_d2) (b2_v200 : bool_d2) ⇒
    match b1_v199 as __v201 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v200
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v203 : bool_d2) ⇒
    match b_v203 as __v204 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v205 : nat_d3) : nat_d3

program lten_i4 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v208 : nat_d3) (y_v209 : nat_d3) ⇒
    match x_v208 as __v210 in ??4 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v211 ⇒
      match y_v209 as __v212 in ??5 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v213 ⇒ (lten_i4 x_v211 y_v213)
      end
    end

program gten_i5 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v216 : nat_d3) (y_v217 : nat_d3) ⇒
    match x_v216 as __v218 in ??6 with
    | O_c4  ⇒
      match y_v217 as __v219 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v220 ⇒ false_c3‹›
      end
    | S_c5 x_v221 ⇒
      match y_v217 as __v222 in ??7 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v223 ⇒ (gten_i5 x_v221 y_v223)
      end
    end

program ltn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v226 : nat_d3) (y_v227 : nat_d3) ⇒
    match x_v226 as __v228 in ??9 with
    | O_c4  ⇒
      match y_v227 as __v229 in ??11 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v230 ⇒ true_c2‹›
      end
    | S_c5 x_v231 ⇒
      match y_v227 as __v232 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v233 ⇒ (ltn_i6 x_v231 y_v233)
      end
    end

program gtn_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v236 : nat_d3) (y_v237 : nat_d3) ⇒
    match x_v236 as __v238 in ??12 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v239 ⇒
      match y_v237 as __v240 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v241 ⇒ (gtn_i7 x_v239 y_v241)
      end
    end

program eqn_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v244 : nat_d3) (y_v245 : nat_d3) ⇒
    match x_v244 as __v246 in ??14 with
    | O_c4  ⇒
      match y_v245 as __v247 in ??16 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v248 ⇒ false_c3‹›
      end
    | S_c5 x_v249 ⇒
      match y_v245 as __v250 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v251 ⇒ (eqn_i8 x_v249 y_v251)
      end
    end

program pred_i9 : nat_d3 → nat_d3 =
  fn (x_v253 : nat_d3) ⇒
    match x_v253 as __v254 in ??17 with
    | O_c4  ⇒ O_c4‹› | S_c5 x_v255 ⇒ x_v255
    end

program addn_i10 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v258 : nat_d3) (y_v259 : nat_d3) ⇒
    match x_v258 as __v260 in ??18 with
    | O_c4  ⇒ y_v259
    | S_c5 x_v261 ⇒ (S_c5‹› (addn_i10 x_v261 y_v259))
    end

program subn_i11 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v264 : nat_d3) (y_v265 : nat_d3) ⇒
    match y_v265 as __v266 in ??19 with
    | O_c4  ⇒ x_v264 | S_c5 y_v267 ⇒ (subn_i11 (pred_i9 x_v264) y_v267)
    end

program muln_i12 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v270 : nat_d3) (y_v271 : nat_d3) ⇒
    match x_v270 as __v272 in ??20 with
    | O_c4  ⇒ O_c4‹›
    | S_c5 x_v273 ⇒ (addn_i10 y_v271 (muln_i12 x_v273 y_v271))
    end

program divn_i13 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v276 : nat_d3) (y_v277 : nat_d3) ⇒
    match (ltn_i6 x_v276 y_v277) as __v278 in ??21 with
    | true_c2  ⇒ O_c4‹›
    | false_c3  ⇒ (S_c5‹› (divn_i13 (subn_i11 x_v276 y_v277) y_v277))
    end

program modn_i14 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v281 : nat_d3) (y_v282 : nat_d3) ⇒
    (subn_i11 x_v281 (muln_i12 (divn_i13 x_v281 y_v282) y_v282))

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v283 : bool_d2) (b1_v284 : bool_d2) (b2_v285 : bool_d2)
    (b3_v286 : bool_d2) (b4_v287 : bool_d2) (b5_v288 : bool_d2)
    (b6_v289 : bool_d2) (b7_v290 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v291 : ascii_d4) (s_v292 : string_d5) : string_d5

program cats_i15 : string_d5 → string_d5 → string_d5 =
  fn (s1_v295 : string_d5) (s2_v296 : string_d5) ⇒
    match s1_v295 as __v297 in ??22 with
    | EmptyString_c7  ⇒ s2_v296
    | String_c8 c_v298 s1_v299 ⇒
      (String_c8‹› c_v298 (cats_i15 s1_v299 s2_v296))
    end

program strlen_i16 : string_d5 → nat_d3 =
  fn (s_v301 : string_d5) ⇒
    match s_v301 as __v302 in ??23 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v303 s_v304 ⇒ (S_c5‹› (strlen_i16 s_v304))
    end

inductive list_d6 ‹s_s305, t_s306›
  (A_v307 : Type‹s_s305›) : Type‹t_s306›
=
| nil_c9 of
    ‹s_s308, t_s309› (A_v310 : Type‹s_s308›)
    : (list_d6‹s_s308, t_s309› A_v310)
| cons_c10 of
    ‹s_s311, t_s312› (A_v313 : Type‹s_s311›) (hd_v314 : A_v313)
    (tl_v315 : (list_d6‹s_s311, t_s312› A_v313))
    : (list_d6‹s_s311, t_s312› A_v313)

program len_i17 ‹s_s316, t_s317› :
  ∀ {A_v318 : Type‹s_s316›} →
    (list_d6‹??24, t_s317› A_v318) →
      nat_d3 ⊗ (list_d6‹??25, t_s317› A_v318)
=
  fn {A_v321 : Type‹s_s316›}
     (xs_v322 : (list_d6‹??24, t_s317› A_v321)) ⇒
    match xs_v322 as __v323 in ??26 with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹??36, ??35›⟩
    | cons_c10 x_v324 xs_v325 ⇒
      match (len_i17‹??29, ??28› ??27 xs_v325) as __v326 in ??30 with
      | ⟨n_v327, xs_v328⟩ ⇒
        ⟨(S_c5‹› n_v327), (cons_c10‹??33, ??32› x_v324 xs_v328)⟩
      end
    end

program append_i18 ‹s_s329, t_s330› :
  ∀ {A_v331 : Type‹s_s329›} →
    (list_d6‹??37, t_s330› A_v331) →
      (list_d6‹??38, t_s330› A_v331) ⊸ (list_d6‹??40, ??39› A_v331)
=
  fn {A_v334 : Type‹s_s329›}
     (xs_v335 : (list_d6‹??37, t_s330› A_v334)) ⇒
    ln (ys_v336 : ??41) ⇒
      match xs_v335 as __v337 in ??42 with
      | nil_c9  ⇒ ys_v336
      | cons_c10 x_v338 xs_v339 ⇒
        (cons_c10‹??48, ??47›
          x_v338 (append_i18‹??45, ??44› ??43 xs_v339 ys_v336))
      end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v341 : unit_d1) ⇒
    ⇑(b_v342 : bool_d2) ⇒
      match b_v342 as __v343 in ??49 with
      | true_c2  ⇒ ⇓(__v344 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v346 : unit_d1) ⇒
    ⇑(b_v347 : bool_d2) ⇒
      match b_v347 as __v348 in ??50 with
      | true_c2  ⇒ ⇑(__v349 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v351 : unit_d1) ⇒
    ⇑(b_v352 : bool_d2) ⇒
      match b_v352 as __v353 in ??51 with
      | true_c2  ⇒ ⇑(__v354 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v356 : unit_d1) ⇒
    let ch_v357 ⇐ open stdin in
    let ch_v358 ⇐ (send ch_v357 true_c2‹›) in
    let __v359 ⇐ recv ch_v358 in
    match __v359 as __v360 in ??52 with
    | ⟨s_v361, ch_v362⟩ ⇒
      let ch_v363 ⇐ (send ch_v362 false_c3‹›) in
      let __v364 ⇐ close ch_v363 in return s_v361
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v366 : string_d5) ⇒
    let ch_v367 ⇐ open stdout in
    let ch_v368 ⇐ (send ch_v367 true_c2‹›) in
    let ch_v369 ⇐ (send ch_v368 s_v366) in
    let ch_v370 ⇐ (send ch_v369 false_c3‹›) in close ch_v370

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v372 : string_d5) ⇒
    let ch_v373 ⇐ open stderr in
    let ch_v374 ⇐ (send ch_v373 true_c2‹›) in
    let ch_v375 ⇐ (send ch_v374 s_v372) in
    let ch_v376 ⇐ (send ch_v375 false_c3‹›) in close ch_v376

inductive ref_msg_d7 : U =
| GET_c11 of : ref_msg_d7 | SET_c12 of : ref_msg_d7
| FREE_c13 of : ref_msg_d7

logical ref_t_i28 : U → proto =
  fn (A_v378 : U) ⇒
    ⇓(msg_v379 : ref_msg_d7) ⇒
      match msg_v379 as __v380 in ??53 with
      | GET_c11  ⇒ ⇑(__v381 : A_v378) ⇒ (ref_t_i28 A_v378)
      | SET_c12  ⇒ ⇓(__v382 : A_v378) ⇒ (ref_t_i28 A_v378)
      | FREE_c13  ⇒ end
      end

logical ref_i29 : U → L = fn (A_v384 : U) ⇒ hc⟨(ref_t_i28 A_v384)⟩

program ref_handler_i30 :
  ∀ {A_v385 : U} → A_v385 → ch⟨(ref_t_i28 A_v385)⟩ → IO unit_d1
=
  fn {A_v388 : U} (m_v389 : A_v388) (c0_v390 : ch⟨(ref_t_i28 A_v388)⟩) ⇒
    let __v391 ⇐ recv c0_v390 in
    match __v391 as __v392 in ??61 with
    | ⟨msg_v393, c0_v394⟩ ⇒
      (match msg_v393 as msg0_v395 in
         ch⟨match msg0_v395 as __v397 in ??54 with
              | GET_c11  ⇒ ⇑(__v398 : A_v388) ⇒ (ref_t_i28 A_v388)
              | SET_c12  ⇒ ⇓(__v399 : A_v388) ⇒ (ref_t_i28 A_v388)
              | FREE_c13  ⇒ end
              end⟩ ⊸
           IO unit_d1 with
       | GET_c11  ⇒
         ln (c_v400 : ??59) ⇒
           let c_v401 ⇐ (send c_v400 m_v389) in
           (ref_handler_i30 ??60 m_v389 c_v401)
       | SET_c12  ⇒
         ln (c_v402 : ??56) ⇒
           let __v403 ⇐ recv c_v402 in
           match __v403 as __v404 in ??58 with
           | ⟨m_v405, c_v406⟩ ⇒ (ref_handler_i30 ??57 m_v405 c_v406)
           end
       | FREE_c13  ⇒ ln (c_v407 : ??55) ⇒ close c_v407
       end c0_v394)
    end

program mk_ref_i31 : ∀ {A_v408 : U} → A_v408 → IO (ref_i29 A_v408) =
  fn {A_v410 : U} (m_v411 : A_v410) ⇒
    fork (c0_v412 : ch⟨(ref_t_i28 A_v410)⟩) in
      (ref_handler_i30 ??62 m_v411 c0_v412)

program set_ref_i32 :
  ∀ {A_v413 : U} → A_v413 → (ref_i29 A_v413) → IO (ref_i29 A_v413)
=
  fn {A_v416 : U} (m_v417 : A_v416) (r_v418 : (ref_i29 A_v416)) ⇒
    let r_v419 ⇐ (send r_v418 SET_c12‹›) in (send r_v419 m_v417)

program get_ref_i33 :
  ∀ {A_v420 : U} → (ref_i29 A_v420) → IO A_v420 ⊗ (ref_i29 A_v420)
=
  fn {A_v423 : U} (r_v424 : (ref_i29 A_v423)) ⇒
    let r_v425 ⇐ (send r_v424 GET_c11‹›) in recv r_v425

program free_ref_i34 : ∀ {A_v426 : U} → (ref_i29 A_v426) → IO unit_d1 =
  fn {A_v428 : U} (r_v429 : (ref_i29 A_v428)) ⇒
    let r_v430 ⇐ (send r_v429 FREE_c13‹›) in close r_v430

program main_i35 : IO unit_d1 =
  let r_v431 ⇐ (mk_ref_i31 ??63 "hello ") in
  let __v432 ⇐ (get_ref_i33 ??64 r_v431) in
  match __v432 as __v433 in ??69 with
  | ⟨s0_v434, r_v435⟩ ⇒
    let r_v436 ⇐ (set_ref_i32 ??65 "world\n" r_v435) in
    let __v437 ⇐ (get_ref_i33 ??66 r_v436) in
    match __v437 as __v438 in ??68 with
    | ⟨s1_v439, r_v440⟩ ⇒
      let __v441 ⇐ (free_ref_i34 ??67 r_v440) in
      (print_i26 (cats_i15 s0_v434 s1_v439))
    end
  end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2326 : bool_d2) (b2_v2327 : bool_d2) ⇒
    match b1_v2326 as __v2328 in bool_d2 with
    | true_c2  ⇒ b2_v2327 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2331 : bool_d2) (b2_v2332 : bool_d2) ⇒
    match b1_v2331 as __v2333 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v2332
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v2335 : bool_d2) ⇒
    match b_v2335 as __v2336 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v2337 : nat_d3) : nat_d3

program lten_i4 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2340 : nat_d3) (y_v2341 : nat_d3) ⇒
    match x_v2340 as __v2342 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v2343 ⇒
      match y_v2341 as __v2344 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2345 ⇒ (lten_i4 x_v2343 y_v2345)
      end
    end

program gten_i5 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2348 : nat_d3) (y_v2349 : nat_d3) ⇒
    match x_v2348 as __v2350 in bool_d2 with
    | O_c4  ⇒
      match y_v2349 as __v2351 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2352 ⇒ false_c3‹›
      end
    | S_c5 x_v2353 ⇒
      match y_v2349 as __v2354 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2355 ⇒ (gten_i5 x_v2353 y_v2355)
      end
    end

program ltn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2358 : nat_d3) (y_v2359 : nat_d3) ⇒
    match x_v2358 as __v2360 in bool_d2 with
    | O_c4  ⇒
      match y_v2359 as __v2361 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2362 ⇒ true_c2‹›
      end
    | S_c5 x_v2363 ⇒
      match y_v2359 as __v2364 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2365 ⇒ (ltn_i6 x_v2363 y_v2365)
      end
    end

program gtn_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2368 : nat_d3) (y_v2369 : nat_d3) ⇒
    match x_v2368 as __v2370 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v2371 ⇒
      match y_v2369 as __v2372 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2373 ⇒ (gtn_i7 x_v2371 y_v2373)
      end
    end

program eqn_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2376 : nat_d3) (y_v2377 : nat_d3) ⇒
    match x_v2376 as __v2378 in bool_d2 with
    | O_c4  ⇒
      match y_v2377 as __v2379 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2380 ⇒ false_c3‹›
      end
    | S_c5 x_v2381 ⇒
      match y_v2377 as __v2382 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2383 ⇒ (eqn_i8 x_v2381 y_v2383)
      end
    end

program pred_i9 : nat_d3 → nat_d3 =
  fn (x_v2385 : nat_d3) ⇒
    match x_v2385 as __v2386 in nat_d3 with
    | O_c4  ⇒ O_c4‹› | S_c5 x_v2387 ⇒ x_v2387
    end

program addn_i10 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2390 : nat_d3) (y_v2391 : nat_d3) ⇒
    match x_v2390 as __v2392 in nat_d3 with
    | O_c4  ⇒ y_v2391
    | S_c5 x_v2393 ⇒ (S_c5‹› (addn_i10 x_v2393 y_v2391))
    end

program subn_i11 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2396 : nat_d3) (y_v2397 : nat_d3) ⇒
    match y_v2397 as __v2398 in nat_d3 with
    | O_c4  ⇒ x_v2396
    | S_c5 y_v2399 ⇒ (subn_i11 (pred_i9 x_v2396) y_v2399)
    end

program muln_i12 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2402 : nat_d3) (y_v2403 : nat_d3) ⇒
    match x_v2402 as __v2404 in nat_d3 with
    | O_c4  ⇒ O_c4‹›
    | S_c5 x_v2405 ⇒ (addn_i10 y_v2403 (muln_i12 x_v2405 y_v2403))
    end

program divn_i13 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2408 : nat_d3) (y_v2409 : nat_d3) ⇒
    match (ltn_i6 x_v2408 y_v2409) as __v2410 in nat_d3 with
    | true_c2  ⇒ O_c4‹›
    | false_c3  ⇒
      (S_c5‹› (divn_i13 (subn_i11 x_v2408 y_v2409) y_v2409))
    end

program modn_i14 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2413 : nat_d3) (y_v2414 : nat_d3) ⇒
    (subn_i11 x_v2413 (muln_i12 (divn_i13 x_v2413 y_v2414) y_v2414))

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v2415 : bool_d2) (b1_v2416 : bool_d2) (b2_v2417 : bool_d2)
    (b3_v2418 : bool_d2) (b4_v2419 : bool_d2) (b5_v2420 : bool_d2)
    (b6_v2421 : bool_d2) (b7_v2422 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v2423 : ascii_d4) (s_v2424 : string_d5) : string_d5

program cats_i15 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2427 : string_d5) (s2_v2428 : string_d5) ⇒
    match s1_v2427 as __v2429 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2428
    | String_c8 c_v2430 s1_v2431 ⇒
      (String_c8‹› c_v2430 (cats_i15 s1_v2431 s2_v2428))
    end

program strlen_i16 : string_d5 → nat_d3 =
  fn (s_v2433 : string_d5) ⇒
    match s_v2433 as __v2434 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2435 s_v2436 ⇒ (S_c5‹› (strlen_i16 s_v2436))
    end

inductive list_d6 ‹s_s2437, t_s2438›
  (A_v2439 : Type‹s_s2437›) : Type‹t_s2438›
=
| nil_c9 of
    ‹s_s2440, t_s2441› (A_v2442 : Type‹s_s2440›)
    : (list_d6‹s_s2440, t_s2441› A_v2442)
| cons_c10 of
    ‹s_s2443, t_s2444› (A_v2445 : Type‹s_s2443›) (hd_v2446 : A_v2445)
    (tl_v2447 : (list_d6‹s_s2443, t_s2444› A_v2445))
    : (list_d6‹s_s2443, t_s2444› A_v2445)

program len_i17 ‹s_s2448, t_s2449› :
  ∀ {A_v2450 : Type‹s_s2448›} →
    (list_d6‹s_s2448, t_s2449› A_v2450) →
      nat_d3 ⊗ (list_d6‹s_s2448, t_s2449› A_v2450)
=
  fn {A_v2453 : Type‹s_s2448›}
     (xs_v2454 : (list_d6‹s_s2448, t_s2449› A_v2453)) ⇒
    match xs_v2454 as __v2455 in
      nat_d3 ⊗ (list_d6‹s_s2448, t_s2449› A_v2453) with
    | nil_c9  ⇒ ⟨O_c4‹›, nil_c9‹s_s2448, t_s2449›⟩
    | cons_c10 x_v2457 xs_v2458 ⇒
      match (len_i17‹s_s2448, t_s2449› A_v2453 xs_v2458) as __v2459 in
        nat_d3 ⊗ (list_d6‹s_s2448, t_s2449› A_v2453) with
      | ⟨n_v2461, xs_v2462⟩ ⇒
        ⟨(S_c5‹› n_v2461), (cons_c10‹s_s2448, t_s2449›
                                   x_v2457 xs_v2462)⟩
      end
    end

program append_i18 ‹s_s2463, t_s2464› :
  ∀ {A_v2465 : Type‹s_s2463›} →
    (list_d6‹s_s2463, t_s2464› A_v2465) →
      (list_d6‹s_s2463, t_s2464› A_v2465) ⊸
        (list_d6‹s_s2463, t_s2464› A_v2465)
=
  fn {A_v2468 : Type‹s_s2463›}
     (xs_v2469 : (list_d6‹s_s2463, t_s2464› A_v2468)) ⇒
    ln (ys_v2470 : (list_d6‹s_s2463, t_s2464› A_v2468)) ⇒
      match xs_v2469 as __v2471 in
        (list_d6‹s_s2463, t_s2464› A_v2468) with
      | nil_c9  ⇒ ys_v2470
      | cons_c10 x_v2472 xs_v2473 ⇒
        (cons_c10‹s_s2463, t_s2464›
          x_v2472
          (append_i18‹s_s2463, t_s2464› A_v2468 xs_v2473 ys_v2470))
      end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v2475 : unit_d1) ⇒
    ⇑(b_v2476 : bool_d2) ⇒
      match b_v2476 as __v2477 in proto with
      | true_c2  ⇒ ⇓(__v2478 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v2480 : unit_d1) ⇒
    ⇑(b_v2481 : bool_d2) ⇒
      match b_v2481 as __v2482 in proto with
      | true_c2  ⇒
        ⇑(__v2483 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v2485 : unit_d1) ⇒
    ⇑(b_v2486 : bool_d2) ⇒
      match b_v2486 as __v2487 in proto with
      | true_c2  ⇒
        ⇑(__v2488 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v2490 : unit_d1) ⇒
    let ch_v2491 ⇐ open stdin in
    let ch_v2492 ⇐ (send ch_v2491 true_c2‹›) in
    let __v2493 ⇐ recv ch_v2492 in
    match __v2493 as __v2494 in IO string_d5 with
    | ⟨s_v2495, ch_v2496⟩ ⇒
      let ch_v2497 ⇐ (send ch_v2496 false_c3‹›) in
      let __v2498 ⇐ close ch_v2497 in return s_v2495
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v2500 : string_d5) ⇒
    let ch_v2501 ⇐ open stdout in
    let ch_v2502 ⇐ (send ch_v2501 true_c2‹›) in
    let ch_v2503 ⇐ (send ch_v2502 s_v2500) in
    let ch_v2504 ⇐ (send ch_v2503 false_c3‹›) in close ch_v2504

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v2506 : string_d5) ⇒
    let ch_v2507 ⇐ open stderr in
    let ch_v2508 ⇐ (send ch_v2507 true_c2‹›) in
    let ch_v2509 ⇐ (send ch_v2508 s_v2506) in
    let ch_v2510 ⇐ (send ch_v2509 false_c3‹›) in close ch_v2510

inductive ref_msg_d7 : U =
| GET_c11 of : ref_msg_d7 | SET_c12 of : ref_msg_d7
| FREE_c13 of : ref_msg_d7

logical ref_t_i28 : U → proto =
  fn (A_v2512 : U) ⇒
    ⇓(msg_v2513 : ref_msg_d7) ⇒
      match msg_v2513 as __v2514 in proto with
      | GET_c11  ⇒ ⇑(__v2515 : A_v2512) ⇒ (ref_t_i28 A_v2512)
      | SET_c12  ⇒ ⇓(__v2516 : A_v2512) ⇒ (ref_t_i28 A_v2512)
      | FREE_c13  ⇒ end
      end

logical ref_i29 : U → L = fn (A_v2518 : U) ⇒ hc⟨(ref_t_i28 A_v2518)⟩

program ref_handler_i30 :
  ∀ {A_v2519 : U} →
    A_v2519 → ch⟨(ref_t_i28 A_v2519)⟩ → IO unit_d1
=
  fn {A_v2522 : U} (m_v2523 : A_v2522)
     (c0_v2524 : ch⟨(ref_t_i28 A_v2522)⟩) ⇒
    let __v2525 ⇐ recv c0_v2524 in
    match __v2525 as __v2526 in IO unit_d1 with
    | ⟨msg_v2527, c0_v2528⟩ ⇒
      (match msg_v2527 as msg0_v2529 in
         ch⟨match msg0_v2529 as __v2531 in proto with
              | GET_c11  ⇒ ⇑(__v2532 : A_v2522) ⇒ (ref_t_i28 A_v2522)
              | SET_c12  ⇒ ⇓(__v2533 : A_v2522) ⇒ (ref_t_i28 A_v2522)
              | FREE_c13  ⇒ end
              end⟩ ⊸
           IO unit_d1 with
       | GET_c11  ⇒
         ln (c_v2534 : ch⟨⇑(__v2535 : A_v2522) ⇒ (ref_t_i28 A_v2522)⟩) ⇒
           let c_v2536 ⇐ (send c_v2534 m_v2523) in
           (ref_handler_i30 A_v2522 m_v2523 c_v2536)
       | SET_c12  ⇒
         ln (c_v2537 : ch⟨⇓(__v2538 : A_v2522) ⇒ (ref_t_i28 A_v2522)⟩) ⇒
           let __v2539 ⇐ recv c_v2537 in
           match __v2539 as __v2540 in IO unit_d1 with
           | ⟨m_v2541, c_v2542⟩ ⇒
             (ref_handler_i30 A_v2522 m_v2541 c_v2542)
           end
       | FREE_c13  ⇒ ln (c_v2543 : ch⟨end⟩) ⇒ close c_v2543
       end c0_v2528)
    end

program mk_ref_i31 : ∀ {A_v2544 : U} → A_v2544 → IO (ref_i29 A_v2544) =
  fn {A_v2546 : U} (m_v2547 : A_v2546) ⇒
    fork (c0_v2548 : ch⟨(ref_t_i28 A_v2546)⟩) in
      (ref_handler_i30 A_v2546 m_v2547 c0_v2548)

program set_ref_i32 :
  ∀ {A_v2549 : U} →
    A_v2549 → (ref_i29 A_v2549) → IO (ref_i29 A_v2549)
=
  fn {A_v2552 : U} (m_v2553 : A_v2552) (r_v2554 : (ref_i29 A_v2552)) ⇒
    let r_v2555 ⇐ (send r_v2554 SET_c12‹›) in (send r_v2555 m_v2553)

program get_ref_i33 :
  ∀ {A_v2556 : U} →
    (ref_i29 A_v2556) → IO A_v2556 ⊗ (ref_i29 A_v2556)
=
  fn {A_v2559 : U} (r_v2560 : (ref_i29 A_v2559)) ⇒
    let r_v2561 ⇐ (send r_v2560 GET_c11‹›) in recv r_v2561

program free_ref_i34 : ∀ {A_v2562 : U} → (ref_i29 A_v2562) → IO unit_d1
=
  fn {A_v2564 : U} (r_v2565 : (ref_i29 A_v2564)) ⇒
    let r_v2566 ⇐ (send r_v2565 FREE_c13‹›) in close r_v2566

program main_i35 : IO unit_d1 =
  let r_v2567 ⇐ (mk_ref_i31 string_d5 "hello ") in
  let __v2568 ⇐ (get_ref_i33 string_d5 r_v2567) in
  match __v2568 as __v2569 in IO unit_d1 with
  | ⟨s0_v2570, r_v2571⟩ ⇒
    let r_v2572 ⇐ (set_ref_i32 string_d5 "world\n" r_v2571) in
    let __v2573 ⇐ (get_ref_i33 string_d5 r_v2572) in
    match __v2573 as __v2574 in IO unit_d1 with
    | ⟨s1_v2575, r_v2576⟩ ⇒
      let __v2577 ⇐ (free_ref_i34 string_d5 r_v2576) in
      (print_i26 (cats_i15 s0_v2570 s1_v2575))
    end
  end

trans1e success--------------------------

data unit_d1 =
| tt_c1 of size(0)

data bool_d2 =
| true_c2 of size(0) | false_c3 of size(0)

def andb_i1 =
  fn b1_v2973 b2_v2974 ⇒
    match b1_v2973 with
    | true_c2  ⇒ b2_v2974 | false_c3  ⇒ false_c3
    end

def orb_i2 =
  fn b1_v2975 b2_v2976 ⇒
    match b1_v2975 with
    | true_c2  ⇒ true_c2 | false_c3  ⇒ b2_v2976
    end

def notb_i3 =
  fn b_v2977 ⇒
    match b_v2977 with
    | true_c2  ⇒ false_c3 | false_c3  ⇒ true_c2
    end

data nat_d3 =
| O_c4 of size(0) | S_c5 of size(1)

def lten_i4 =
  fn x_v2978 y_v2979 ⇒
    match x_v2978 with
    | O_c4  ⇒ true_c2
    | S_c5 x_v2980 ⇒
      match y_v2979 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2981 ⇒ ((lten_i4 x_v2980) y_v2981)
      end
    end

def gten_i5 =
  fn x_v2982 y_v2983 ⇒
    match x_v2982 with
    | O_c4  ⇒
      match y_v2983 with
      | O_c4  ⇒ true_c2 | S_c5 __v2984 ⇒ false_c3
      end
    | S_c5 x_v2985 ⇒
      match y_v2983 with
      | O_c4  ⇒ true_c2 | S_c5 y_v2986 ⇒ ((gten_i5 x_v2985) y_v2986)
      end
    end

def ltn_i6 =
  fn x_v2987 y_v2988 ⇒
    match x_v2987 with
    | O_c4  ⇒
      match y_v2988 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2989 ⇒ true_c2
      end
    | S_c5 x_v2990 ⇒
      match y_v2988 with
      | O_c4  ⇒ false_c3 | S_c5 y_v2991 ⇒ ((ltn_i6 x_v2990) y_v2991)
      end
    end

def gtn_i7 =
  fn x_v2992 y_v2993 ⇒
    match x_v2992 with
    | O_c4  ⇒ false_c3
    | S_c5 x_v2994 ⇒
      match y_v2993 with
      | O_c4  ⇒ true_c2 | S_c5 y_v2995 ⇒ ((gtn_i7 x_v2994) y_v2995)
      end
    end

def eqn_i8 =
  fn x_v2996 y_v2997 ⇒
    match x_v2996 with
    | O_c4  ⇒
      match y_v2997 with
      | O_c4  ⇒ true_c2 | S_c5 __v2998 ⇒ false_c3
      end
    | S_c5 x_v2999 ⇒
      match y_v2997 with
      | O_c4  ⇒ false_c3 | S_c5 y_v3000 ⇒ ((eqn_i8 x_v2999) y_v3000)
      end
    end

def pred_i9 =
  fn x_v3001 ⇒
    match x_v3001 with
    | O_c4  ⇒ O_c4 | S_c5 x_v3002 ⇒ x_v3002
    end

def addn_i10 =
  fn x_v3003 y_v3004 ⇒
    match x_v3003 with
    | O_c4  ⇒ y_v3004
    | S_c5 x_v3005 ⇒ (S_c5 ((addn_i10 x_v3005) y_v3004))
    end

def subn_i11 =
  fn x_v3006 y_v3007 ⇒
    match y_v3007 with
    | O_c4  ⇒ x_v3006
    | S_c5 y_v3008 ⇒ ((subn_i11 (pred_i9 x_v3006)) y_v3008)
    end

def muln_i12 =
  fn x_v3009 y_v3010 ⇒
    match x_v3009 with
    | O_c4  ⇒ O_c4
    | S_c5 x_v3011 ⇒ ((addn_i10 y_v3010) ((muln_i12 x_v3011) y_v3010))
    end

def divn_i13 =
  fn x_v3012 y_v3013 ⇒
    match ((ltn_i6 x_v3012) y_v3013) with
    | true_c2  ⇒ O_c4
    | false_c3  ⇒ (S_c5 ((divn_i13 ((subn_i11 x_v3012) y_v3013)) y_v3013))
    end

def modn_i14 =
  fn x_v3014 y_v3015 ⇒
    ((subn_i11 x_v3014) ((muln_i12 ((divn_i13 x_v3014) y_v3015)) y_v3015))

data ascii_d4 =
| Ascii_c6 of size(8)

data string_d5 =
| EmptyString_c7 of size(0) | String_c8 of size(2)

def cats_i15 =
  fn s1_v3016 s2_v3017 ⇒
    match s1_v3016 with
    | EmptyString_c7  ⇒ s2_v3017
    | String_c8 c_v3018 s1_v3019 ⇒
      (String_c8 c_v3018 ((cats_i15 s1_v3019) s2_v3017))
    end

def strlen_i16 =
  fn s_v3020 ⇒
    match s_v3020 with
    | EmptyString_c7  ⇒ O_c4
    | String_c8 __v3021 s_v3022 ⇒ (S_c5 (strlen_i16 s_v3022))
    end

data listUU_d11 =
| nilUU_c20 of size(0) | consUU_c21 of size(2)

data listUL_d10 =
| nilUL_c18 of size(0) | consUL_c19 of size(2)

data listLU_d9 =
| nilLU_c16 of size(0)

data listLL_d8 =
| nilLL_c14 of size(0) | consLL_c15 of size(2)

def lenUU_i39 =
  fn A_v3023 xs_v3024 ⇒
    match xs_v3024 with
    | nilUU_c20  ⇒ (O_c4, nilUU_c20)
    | consUU_c21 x_v3025 xs_v3026 ⇒
      match ((lenUU_i39 NULL) xs_v3026) with
      | (n_v3027, xs_v3028) ⇒
        ((S_c5 n_v3027), (consUU_c21 x_v3025 xs_v3028))
      end
    end

def lenUL_i38 =
  fn A_v3029 xs_v3030 ⇒
    match xs_v3030 with
    | nilUL_c18  ⇒ (O_c4, nilUL_c18)
    | consUL_c19 x_v3031 xs_v3032 ⇒
      match ((lenUL_i38 NULL) xs_v3032) with
      | (n_v3033, xs_v3034) ⇒
        ((S_c5 n_v3033), (consUL_c19 x_v3031 xs_v3034))
      end
    end

def lenLL_i36 =
  fn A_v3035 xs_v3036 ⇒
    match xs_v3036 with
    | nilLL_c14  ⇒ (O_c4, nilLL_c14)
    | consLL_c15 x_v3037 xs_v3038 ⇒
      match ((lenLL_i36 NULL) xs_v3038) with
      | (n_v3039, xs_v3040) ⇒
        ((S_c5 n_v3039), (consLL_c15 x_v3037 xs_v3040))
      end
    end

def appendUU_i43 =
  fn A_v3041 xs_v3042 ⇒
    ln ys_v3043 ⇒
      match xs_v3042 with
      | nilUU_c20  ⇒ ys_v3043
      | consUU_c21 x_v3044 xs_v3045 ⇒
        (consUU_c21 x_v3044 (((appendUU_i43 NULL) xs_v3045) ys_v3043))
      end

def appendUL_i42 =
  fn A_v3046 xs_v3047 ⇒
    ln ys_v3048 ⇒
      match xs_v3047 with
      | nilUL_c18  ⇒ ys_v3048
      | consUL_c19 x_v3049 xs_v3050 ⇒
        (consUL_c19 x_v3049 (((appendUL_i42 NULL) xs_v3050) ys_v3048))
      end

def appendLL_i40 =
  fn A_v3051 xs_v3052 ⇒
    ln ys_v3053 ⇒
      match xs_v3052 with
      | nilLL_c14  ⇒ ys_v3053
      | consLL_c15 x_v3054 xs_v3055 ⇒
        (consLL_c15 x_v3054 (((appendLL_i40 NULL) xs_v3055) ys_v3053))
      end

def readline_i25 =
  fn __v3056 ⇒
    let ch_v3057 ⇐ open stdin in
    let ch_v3058 ⇐ (send ch_v3057 true_c2) in
    let __v3059 ⇐ recv ch_v3058 in
    match __v3059 with
    | (s_v3060, ch_v3061) ⇒
      let ch_v3062 ⇐ (send ch_v3061 false_c3) in
      let __v3063 ⇐ close⇑ ch_v3062 in return s_v3060
    end

def print_i26 =
  fn s_v3064 ⇒
    let ch_v3065 ⇐ open stdout in
    let ch_v3066 ⇐ (send ch_v3065 true_c2) in
    let ch_v3067 ⇐ (send ch_v3066 s_v3064) in
    let ch_v3068 ⇐ (send ch_v3067 false_c3) in close⇑ ch_v3068

def prerr_i27 =
  fn s_v3069 ⇒
    let ch_v3070 ⇐ open stderr in
    let ch_v3071 ⇐ (send ch_v3070 true_c2) in
    let ch_v3072 ⇐ (send ch_v3071 s_v3069) in
    let ch_v3073 ⇐ (send ch_v3072 false_c3) in close⇑ ch_v3073

data ref_msg_d7 =
| GET_c11 of size(0) | SET_c12 of size(0) | FREE_c13 of size(0)

def ref_handler_i30 =
  fn A_v3074 m_v3075 c0_v3076 ⇒
    let __v3077 ⇐ recv c0_v3076 in
    match __v3077 with
    | (msg_v3078, c0_v3079) ⇒
      (match msg_v3078 with
       | GET_c11  ⇒
         ln c_v3080 ⇒
           let c_v3081 ⇐ (send c_v3080 m_v3075) in
           (((ref_handler_i30 NULL) m_v3075) c_v3081)
       | SET_c12  ⇒
         ln c_v3082 ⇒
           let __v3083 ⇐ recv c_v3082 in
           match __v3083 with
           | (m_v3084, c_v3085) ⇒
             (((ref_handler_i30 NULL) m_v3084) c_v3085)
           end
       | FREE_c13  ⇒ ln c_v3086 ⇒ close⇑ c_v3086
       end c0_v3079)
    end

def mk_ref_i31 =
  fn A_v3087 m_v3088 ⇒
    fork c0_v3089 in (((ref_handler_i30 NULL) m_v3088) c0_v3089)

def set_ref_i32 =
  fn A_v3090 m_v3091 r_v3092 ⇒
    let r_v3093 ⇐ (send r_v3092 SET_c12) in (send r_v3093 m_v3091)

def get_ref_i33 =
  fn A_v3094 r_v3095 ⇒
    let r_v3096 ⇐ (send r_v3095 GET_c11) in recv r_v3096

def free_ref_i34 =
  fn A_v3097 r_v3098 ⇒
    let r_v3099 ⇐ (send r_v3098 FREE_c13) in close⇓ r_v3099

main =
  let r_v3100 ⇐ ((mk_ref_i31 NULL) "hello ") in
  let __v3101 ⇐ ((get_ref_i33 NULL) r_v3100) in
  match __v3101 with
  | (s0_v3102, r_v3103) ⇒
    let r_v3104 ⇐ (((set_ref_i32 NULL) "world\n") r_v3103) in
    let __v3105 ⇐ ((get_ref_i33 NULL) r_v3104) in
    match __v3105 with
    | (s1_v3106, r_v3107) ⇒
      let __v3108 ⇐ ((free_ref_i34 NULL) r_v3107) in
      (print_i26 ((cats_i15 s0_v3102) s1_v3106))
    end
  end

trans12 success--------------------------

fun andb_i1(b1_v3298, b2_v3299) =
  match b1_v3298 with
  | true_c2  ⇒ b2_v3299 | false_c3  ⇒ false_c3
  end

val andbclo_i44 = fn b1_v3300 b2_v3301 ⇒ andb_i1(b1_v3300, b2_v3301)

fun orb_i2(b1_v3302, b2_v3303) =
  match b1_v3302 with
  | true_c2  ⇒ true_c2 | false_c3  ⇒ b2_v3303
  end

val orbclo_i45 = fn b1_v3304 b2_v3305 ⇒ orb_i2(b1_v3304, b2_v3305)

fun notb_i3(b_v3306) =
  match b_v3306 with
  | true_c2  ⇒ false_c3 | false_c3  ⇒ true_c2
  end

val notbclo_i46 = fn b_v3307 ⇒ notb_i3(b_v3307)

fun lten_i4(x_v3308, y_v3309) =
  match x_v3308 with
  | O_c4  ⇒ true_c2
  | S_c5 x_v3310 ⇒
    match y_v3309 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3311 ⇒ lten_i4(x_v3310, y_v3311)
    end
  end

val ltenclo_i47 = fn x_v3312 y_v3313 ⇒ lten_i4(x_v3312, y_v3313)

fun gten_i5(x_v3314, y_v3315) =
  match x_v3314 with
  | O_c4  ⇒
    match y_v3315 with
    | O_c4  ⇒ true_c2 | S_c5 __v3316 ⇒ false_c3
    end
  | S_c5 x_v3317 ⇒
    match y_v3315 with
    | O_c4  ⇒ true_c2 | S_c5 y_v3318 ⇒ gten_i5(x_v3317, y_v3318)
    end
  end

val gtenclo_i48 = fn x_v3319 y_v3320 ⇒ gten_i5(x_v3319, y_v3320)

fun ltn_i6(x_v3321, y_v3322) =
  match x_v3321 with
  | O_c4  ⇒
    match y_v3322 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3323 ⇒ true_c2
    end
  | S_c5 x_v3324 ⇒
    match y_v3322 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3325 ⇒ ltn_i6(x_v3324, y_v3325)
    end
  end

val ltnclo_i49 = fn x_v3326 y_v3327 ⇒ ltn_i6(x_v3326, y_v3327)

fun gtn_i7(x_v3328, y_v3329) =
  match x_v3328 with
  | O_c4  ⇒ false_c3
  | S_c5 x_v3330 ⇒
    match y_v3329 with
    | O_c4  ⇒ true_c2 | S_c5 y_v3331 ⇒ gtn_i7(x_v3330, y_v3331)
    end
  end

val gtnclo_i50 = fn x_v3332 y_v3333 ⇒ gtn_i7(x_v3332, y_v3333)

fun eqn_i8(x_v3334, y_v3335) =
  match x_v3334 with
  | O_c4  ⇒
    match y_v3335 with
    | O_c4  ⇒ true_c2 | S_c5 __v3336 ⇒ false_c3
    end
  | S_c5 x_v3337 ⇒
    match y_v3335 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3338 ⇒ eqn_i8(x_v3337, y_v3338)
    end
  end

val eqnclo_i51 = fn x_v3339 y_v3340 ⇒ eqn_i8(x_v3339, y_v3340)

fun pred_i9(x_v3341) =
  match x_v3341 with
  | O_c4  ⇒ O_c4 | S_c5 x_v3342 ⇒ x_v3342
  end

val predclo_i52 = fn x_v3343 ⇒ pred_i9(x_v3343)

fun addn_i10(x_v3344, y_v3345) =
  match x_v3344 with
  | O_c4  ⇒ y_v3345 | S_c5 x_v3346 ⇒ (S_c5 addn_i10(x_v3346, y_v3345))
  end

val addnclo_i53 = fn x_v3347 y_v3348 ⇒ addn_i10(x_v3347, y_v3348)

fun subn_i11(x_v3349, y_v3350) =
  match y_v3350 with
  | O_c4  ⇒ x_v3349 | S_c5 y_v3351 ⇒ subn_i11(pred_i9(x_v3349), y_v3351)
  end

val subnclo_i54 = fn x_v3352 y_v3353 ⇒ subn_i11(x_v3352, y_v3353)

fun muln_i12(x_v3354, y_v3355) =
  match x_v3354 with
  | O_c4  ⇒ O_c4
  | S_c5 x_v3356 ⇒ addn_i10(y_v3355, muln_i12(x_v3356, y_v3355))
  end

val mulnclo_i55 = fn x_v3357 y_v3358 ⇒ muln_i12(x_v3357, y_v3358)

fun divn_i13(x_v3359, y_v3360) =
  match ltn_i6(x_v3359, y_v3360) with
  | true_c2  ⇒ O_c4
  | false_c3  ⇒ (S_c5 divn_i13(subn_i11(x_v3359, y_v3360), y_v3360))
  end

val divnclo_i56 = fn x_v3361 y_v3362 ⇒ divn_i13(x_v3361, y_v3362)

fun modn_i14(x_v3363, y_v3364) =
  subn_i11(x_v3363, muln_i12(divn_i13(x_v3363, y_v3364), y_v3364))

val modnclo_i57 = fn x_v3365 y_v3366 ⇒ modn_i14(x_v3365, y_v3366)

fun cats_i15(s1_v3367, s2_v3368) =
  match s1_v3367 with
  | EmptyString_c7  ⇒ s2_v3368
  | String_c8 c_v3369 s1_v3370 ⇒
    (String_c8 c_v3369 cats_i15(s1_v3370, s2_v3368))
  end

val catsclo_i58 = fn s1_v3371 s2_v3372 ⇒ cats_i15(s1_v3371, s2_v3372)

fun strlen_i16(s_v3373) =
  match s_v3373 with
  | EmptyString_c7  ⇒ O_c4
  | String_c8 __v3374 s_v3375 ⇒ (S_c5 strlen_i16(s_v3375))
  end

val strlenclo_i59 = fn s_v3376 ⇒ strlen_i16(s_v3376)

fun lenUU_i39(A_v3377, xs_v3378) =
  match xs_v3378 with
  | nilUU_c20  ⇒ (O_c4, nilUU_c20)
  | consUU_c21 x_v3379 xs_v3380 ⇒
    match lenUU_i39(NULL, xs_v3380) with
    | (n_v3381, xs_v3382) ⇒ ((S_c5 n_v3381), (consUU_c21 x_v3379 xs_v3382))
    end
  end

val lenUUclo_i60 = fn A_v3383 xs_v3384 ⇒ lenUU_i39(A_v3383, xs_v3384)

fun lenUL_i38(A_v3385, xs_v3386) =
  match xs_v3386 with
  | nilUL_c18  ⇒ (O_c4, nilUL_c18)
  | consUL_c19 x_v3387 xs_v3388 ⇒
    match lenUL_i38(NULL, xs_v3388) with
    | (n_v3389, xs_v3390) ⇒ ((S_c5 n_v3389), (consUL_c19 x_v3387 xs_v3390))
    end
  end

val lenULclo_i61 = fn A_v3391 xs_v3392 ⇒ lenUL_i38(A_v3391, xs_v3392)

fun lenLL_i36(A_v3393, xs_v3394) =
  match xs_v3394 with
  | nilLL_c14  ⇒ (O_c4, nilLL_c14)
  | consLL_c15 x_v3395 xs_v3396 ⇒
    match lenLL_i36(NULL, xs_v3396) with
    | (n_v3397, xs_v3398) ⇒ ((S_c5 n_v3397), (consLL_c15 x_v3395 xs_v3398))
    end
  end

val lenLLclo_i62 = fn A_v3399 xs_v3400 ⇒ lenLL_i36(A_v3399, xs_v3400)

fun appendUU_i43(A_v3401, xs_v3402, ys_v3403) =
  match xs_v3402 with
  | nilUU_c20  ⇒ ys_v3403
  | consUU_c21 x_v3404 xs_v3405 ⇒
    (consUU_c21 x_v3404 appendUU_i43(NULL, xs_v3405, ys_v3403))
  end

val appendUUclo_i63 =
  fn A_v3406 xs_v3407 ⇒
    ln ys_v3408 ⇒ appendUU_i43(A_v3406, xs_v3407, ys_v3408)

fun appendUL_i42(A_v3409, xs_v3410, ys_v3411) =
  match xs_v3410 with
  | nilUL_c18  ⇒ ys_v3411
  | consUL_c19 x_v3412 xs_v3413 ⇒
    (consUL_c19 x_v3412 appendUL_i42(NULL, xs_v3413, ys_v3411))
  end

val appendULclo_i64 =
  fn A_v3414 xs_v3415 ⇒
    ln ys_v3416 ⇒ appendUL_i42(A_v3414, xs_v3415, ys_v3416)

fun appendLL_i40(A_v3417, xs_v3418, ys_v3419) =
  match xs_v3418 with
  | nilLL_c14  ⇒ ys_v3419
  | consLL_c15 x_v3420 xs_v3421 ⇒
    (consLL_c15 x_v3420 appendLL_i40(NULL, xs_v3421, ys_v3419))
  end

val appendLLclo_i65 =
  fn A_v3422 xs_v3423 ⇒
    ln ys_v3424 ⇒ appendLL_i40(A_v3422, xs_v3423, ys_v3424)

fun readline_i25(__v3425) =
  ln __v3426 ⇒
    let ch_v3427 = (ln __v3428 ⇒ open stdin) NULL in
    let ch_v3429 =
      ((fn x_v3430 ⇒ ln __v3431 ⇒ send(ch_v3427, x_v3430)) true_c2) NULL
    in
    let __v3432 = (ln __v3433 ⇒ recv(ch_v3429)) NULL in
    (match __v3432 with
     | (s_v3434, ch_v3435) ⇒
       ln __v3436 ⇒
         let ch_v3437 =
           ((fn x_v3438 ⇒ ln __v3439 ⇒ send(ch_v3435, x_v3438)) false_c3)
             NULL
         in
         let __v3440 = (ln __v3441 ⇒ let __v3442 = ch_v3437 in tt_c1) NULL
         in (ln __v3443 ⇒ s_v3434) NULL
     end) NULL

val readlineclo_i66 = fn __v3444 ⇒ readline_i25(__v3444)

fun print_i26(s_v3445) =
  ln __v3446 ⇒
    let ch_v3447 = (ln __v3448 ⇒ open stdout) NULL in
    let ch_v3449 =
      ((fn x_v3450 ⇒ ln __v3451 ⇒ send(ch_v3447, x_v3450)) true_c2) NULL
    in
    let ch_v3452 =
      ((fn x_v3453 ⇒ ln __v3454 ⇒ send(ch_v3449, x_v3453)) s_v3445) NULL
    in
    let ch_v3455 =
      ((fn x_v3456 ⇒ ln __v3457 ⇒ send(ch_v3452, x_v3456)) false_c3) NULL
    in (ln __v3458 ⇒ let __v3459 = ch_v3455 in tt_c1) NULL

val printclo_i67 = fn s_v3460 ⇒ print_i26(s_v3460)

fun prerr_i27(s_v3461) =
  ln __v3462 ⇒
    let ch_v3463 = (ln __v3464 ⇒ open stderr) NULL in
    let ch_v3465 =
      ((fn x_v3466 ⇒ ln __v3467 ⇒ send(ch_v3463, x_v3466)) true_c2) NULL
    in
    let ch_v3468 =
      ((fn x_v3469 ⇒ ln __v3470 ⇒ send(ch_v3465, x_v3469)) s_v3461) NULL
    in
    let ch_v3471 =
      ((fn x_v3472 ⇒ ln __v3473 ⇒ send(ch_v3468, x_v3472)) false_c3) NULL
    in (ln __v3474 ⇒ let __v3475 = ch_v3471 in tt_c1) NULL

val prerrclo_i68 = fn s_v3476 ⇒ prerr_i27(s_v3476)

fun ref_handler_i30(A_v3477, m_v3478, c0_v3479) =
  ln __v3480 ⇒
    let __v3481 = (ln __v3482 ⇒ recv(c0_v3479)) NULL in
    (match __v3481 with
     | (msg_v3483, c0_v3484) ⇒
       (match msg_v3483 with
        | GET_c11  ⇒
          ln c_v3485 __v3486 ⇒
            let c_v3487 =
              ((fn x_v3488 ⇒ ln __v3489 ⇒ send(c_v3485, x_v3488)) m_v3478)
                NULL
            in (ref_handler_i30(NULL, m_v3478, c_v3487)) NULL
        | SET_c12  ⇒
          ln c_v3490 __v3491 ⇒
            let __v3492 = (ln __v3493 ⇒ recv(c_v3490)) NULL in
            (match __v3492 with
             | (m_v3494, c_v3495) ⇒ ref_handler_i30(NULL, m_v3494, c_v3495)
             end) NULL
        | FREE_c13  ⇒ ln c_v3496 __v3497 ⇒ let __v3498 = c_v3496 in tt_c1
        end) c0_v3484
     end) NULL

val ref_handlerclo_i69 =
  fn A_v3499 m_v3500 c0_v3501 ⇒ ref_handler_i30(A_v3499, m_v3500, c0_v3501)

fun mk_ref_i31(A_v3502, m_v3503) =
  ln __v3504 ⇒
    fork c0_v3505 in (ref_handler_i30(NULL, m_v3503, c0_v3505)) NULL

val mk_refclo_i70 = fn A_v3506 m_v3507 ⇒ mk_ref_i31(A_v3506, m_v3507)

fun set_ref_i32(A_v3508, m_v3509, r_v3510) =
  ln __v3511 ⇒
    let r_v3512 =
      ((fn x_v3513 ⇒ ln __v3514 ⇒ send(r_v3510, x_v3513)) SET_c12) NULL
    in ((fn x_v3515 ⇒ ln __v3516 ⇒ send(r_v3512, x_v3515)) m_v3509) NULL

val set_refclo_i71 =
  fn A_v3517 m_v3518 r_v3519 ⇒ set_ref_i32(A_v3517, m_v3518, r_v3519)

fun get_ref_i33(A_v3520, r_v3521) =
  ln __v3522 ⇒
    let r_v3523 =
      ((fn x_v3524 ⇒ ln __v3525 ⇒ send(r_v3521, x_v3524)) GET_c11) NULL
    in (ln __v3526 ⇒ recv(r_v3523)) NULL

val get_refclo_i72 = fn A_v3527 r_v3528 ⇒ get_ref_i33(A_v3527, r_v3528)

fun free_ref_i34(A_v3529, r_v3530) =
  ln __v3531 ⇒
    let r_v3532 =
      ((fn x_v3533 ⇒ ln __v3534 ⇒ send(r_v3530, x_v3533)) FREE_c13) NULL
    in (ln __v3535 ⇒ close(r_v3532)) NULL

val free_refclo_i73 = fn A_v3536 r_v3537 ⇒ free_ref_i34(A_v3536, r_v3537)

main =
  (ln __v3538 ⇒
     let r_v3539 = (mk_ref_i31(NULL, "hello ")) NULL in
     let __v3540 = (get_ref_i33(NULL, r_v3539)) NULL in
     (match __v3540 with
      | (s0_v3541, r_v3542) ⇒
        ln __v3543 ⇒
          let r_v3544 = (set_ref_i32(NULL, "world\n", r_v3542)) NULL in
          let __v3545 = (get_ref_i33(NULL, r_v3544)) NULL in
          (match __v3545 with
           | (s1_v3546, r_v3547) ⇒
             ln __v3548 ⇒
               let __v3549 = (free_ref_i34(NULL, r_v3547)) NULL in
               (print_i26(cats_i15(s0_v3541, s1_v3546))) NULL
           end) NULL
      end) NULL)
    NULL

trans23 success--------------------------

fun andb_i1(b1_v3827, b2_v3828) =
  match b1_v3827 with
  | true_c2  ⇒ b2_v3828 | false_c3  ⇒ false_c3
  end

val andbclo_i44 = fn b1_v3829 b2_v3830 ⇒ andb_i1(b1_v3829, b2_v3830)

fun orb_i2(b1_v3831, b2_v3832) =
  match b1_v3831 with
  | true_c2  ⇒ true_c2 | false_c3  ⇒ b2_v3832
  end

val orbclo_i45 = fn b1_v3833 b2_v3834 ⇒ orb_i2(b1_v3833, b2_v3834)

fun notb_i3(b_v3835) =
  match b_v3835 with
  | true_c2  ⇒ false_c3 | false_c3  ⇒ true_c2
  end

val notbclo_i46 = fn b_v3836 ⇒ notb_i3(b_v3836)

fun lten_i4(x_v3837, y_v3838) =
  match x_v3837 with
  | O_c4  ⇒ true_c2
  | S_c5 x_v3839 ⇒
    match y_v3838 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3840 ⇒ lten_i4(x_v3839, y_v3840)
    end
  end

val ltenclo_i47 = fn x_v3841 y_v3842 ⇒ lten_i4(x_v3841, y_v3842)

fun gten_i5(x_v3843, y_v3844) =
  match x_v3843 with
  | O_c4  ⇒
    match y_v3844 with
    | O_c4  ⇒ true_c2 | S_c5 __v3845 ⇒ false_c3
    end
  | S_c5 x_v3846 ⇒
    match y_v3844 with
    | O_c4  ⇒ true_c2 | S_c5 y_v3847 ⇒ gten_i5(x_v3846, y_v3847)
    end
  end

val gtenclo_i48 = fn x_v3848 y_v3849 ⇒ gten_i5(x_v3848, y_v3849)

fun ltn_i6(x_v3850, y_v3851) =
  match x_v3850 with
  | O_c4  ⇒
    match y_v3851 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3852 ⇒ true_c2
    end
  | S_c5 x_v3853 ⇒
    match y_v3851 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3854 ⇒ ltn_i6(x_v3853, y_v3854)
    end
  end

val ltnclo_i49 = fn x_v3855 y_v3856 ⇒ ltn_i6(x_v3855, y_v3856)

fun gtn_i7(x_v3857, y_v3858) =
  match x_v3857 with
  | O_c4  ⇒ false_c3
  | S_c5 x_v3859 ⇒
    match y_v3858 with
    | O_c4  ⇒ true_c2 | S_c5 y_v3860 ⇒ gtn_i7(x_v3859, y_v3860)
    end
  end

val gtnclo_i50 = fn x_v3861 y_v3862 ⇒ gtn_i7(x_v3861, y_v3862)

fun eqn_i8(x_v3863, y_v3864) =
  match x_v3863 with
  | O_c4  ⇒
    match y_v3864 with
    | O_c4  ⇒ true_c2 | S_c5 __v3865 ⇒ false_c3
    end
  | S_c5 x_v3866 ⇒
    match y_v3864 with
    | O_c4  ⇒ false_c3 | S_c5 y_v3867 ⇒ eqn_i8(x_v3866, y_v3867)
    end
  end

val eqnclo_i51 = fn x_v3868 y_v3869 ⇒ eqn_i8(x_v3868, y_v3869)

fun pred_i9(x_v3870) =
  match x_v3870 with
  | O_c4  ⇒ O_c4 | S_c5 x_v3871 ⇒ x_v3871
  end

val predclo_i52 = fn x_v3872 ⇒ pred_i9(x_v3872)

fun addn_i10(x_v3873, y_v3874) =
  match x_v3873 with
  | O_c4  ⇒ y_v3874 | S_c5 x_v3875 ⇒ (S_c5 addn_i10(x_v3875, y_v3874))
  end

val addnclo_i53 = fn x_v3876 y_v3877 ⇒ addn_i10(x_v3876, y_v3877)

fun subn_i11(x_v3878, y_v3879) =
  match y_v3879 with
  | O_c4  ⇒ x_v3878 | S_c5 y_v3880 ⇒ subn_i11(pred_i9(x_v3878), y_v3880)
  end

val subnclo_i54 = fn x_v3881 y_v3882 ⇒ subn_i11(x_v3881, y_v3882)

fun muln_i12(x_v3883, y_v3884) =
  match x_v3883 with
  | O_c4  ⇒ O_c4
  | S_c5 x_v3885 ⇒ addn_i10(y_v3884, muln_i12(x_v3885, y_v3884))
  end

val mulnclo_i55 = fn x_v3886 y_v3887 ⇒ muln_i12(x_v3886, y_v3887)

fun divn_i13(x_v3888, y_v3889) =
  match ltn_i6(x_v3888, y_v3889) with
  | true_c2  ⇒ O_c4
  | false_c3  ⇒ (S_c5 divn_i13(subn_i11(x_v3888, y_v3889), y_v3889))
  end

val divnclo_i56 = fn x_v3890 y_v3891 ⇒ divn_i13(x_v3890, y_v3891)

fun modn_i14(x_v3892, y_v3893) =
  subn_i11(x_v3892, muln_i12(divn_i13(x_v3892, y_v3893), y_v3893))

val modnclo_i57 = fn x_v3894 y_v3895 ⇒ modn_i14(x_v3894, y_v3895)

fun cats_i15(s1_v3896, s2_v3897) =
  match s1_v3896 with
  | EmptyString_c7  ⇒ s2_v3897
  | String_c8 c_v3898 s1_v3899 ⇒
    (String_c8 c_v3898 cats_i15(s1_v3899, s2_v3897))
  end

val catsclo_i58 = fn s1_v3900 s2_v3901 ⇒ cats_i15(s1_v3900, s2_v3901)

fun strlen_i16(s_v3902) =
  match s_v3902 with
  | EmptyString_c7  ⇒ O_c4
  | String_c8 __v3903 s_v3904 ⇒ (S_c5 strlen_i16(s_v3904))
  end

val strlenclo_i59 = fn s_v3905 ⇒ strlen_i16(s_v3905)

fun lenUU_i39(A_v3906, xs_v3907) =
  match xs_v3907 with
  | nilUU_c20  ⇒ (O_c4, nilUU_c20)
  | consUU_c21 x_v3908 xs_v3909 ⇒
    match lenUU_i39(NULL, xs_v3909) with
    | (n_v3910, xs_v3911) ⇒ ((S_c5 n_v3910), (consUU_c21 x_v3908 xs_v3911))
    end
  end

val lenUUclo_i60 = fn A_v3912 xs_v3913 ⇒ lenUU_i39(A_v3912, xs_v3913)

fun lenUL_i38(A_v3914, xs_v3915) =
  match xs_v3915 with
  | nilUL_c18  ⇒ (O_c4, nilUL_c18)
  | consUL_c19 x_v3916 xs_v3917 ⇒
    match lenUL_i38(NULL, xs_v3917) with
    | (n_v3918, xs_v3919) ⇒ ((S_c5 n_v3918), (consUL_c19 x_v3916 xs_v3919))
    end
  end

val lenULclo_i61 = fn A_v3920 xs_v3921 ⇒ lenUL_i38(A_v3920, xs_v3921)

fun lenLL_i36(A_v3922, xs_v3923) =
  match xs_v3923 with
  | nilLL_c14  ⇒ (O_c4, nilLL_c14)
  | consLL_c15 x_v3924 xs_v3925 ⇒
    match lenLL_i36(NULL, xs_v3925) with
    | (n_v3926, xs_v3927) ⇒ ((S_c5 n_v3926), (consLL_c15 x_v3924 xs_v3927))
    end
  end

val lenLLclo_i62 = fn A_v3928 xs_v3929 ⇒ lenLL_i36(A_v3928, xs_v3929)

fun appendUU_i43(A_v3930, xs_v3931, ys_v3932) =
  match xs_v3931 with
  | nilUU_c20  ⇒ ys_v3932
  | consUU_c21 x_v3933 xs_v3934 ⇒
    (consUU_c21 x_v3933 appendUU_i43(NULL, xs_v3934, ys_v3932))
  end

val appendUUclo_i63 =
  fn A_v3935 xs_v3936 ⇒
    ln ys_v3937 ⇒ appendUU_i43(A_v3935, xs_v3936, ys_v3937)

fun appendUL_i42(A_v3938, xs_v3939, ys_v3940) =
  match xs_v3939 with
  | nilUL_c18  ⇒ ys_v3940
  | consUL_c19 x_v3941 xs_v3942 ⇒
    (consUL_c19 x_v3941 appendUL_i42(NULL, xs_v3942, ys_v3940))
  end

val appendULclo_i64 =
  fn A_v3943 xs_v3944 ⇒
    ln ys_v3945 ⇒ appendUL_i42(A_v3943, xs_v3944, ys_v3945)

fun appendLL_i40(A_v3946, xs_v3947, ys_v3948) =
  match xs_v3947 with
  | nilLL_c14  ⇒ ys_v3948
  | consLL_c15 x_v3949 xs_v3950 ⇒
    (consLL_c15 x_v3949 appendLL_i40(NULL, xs_v3950, ys_v3948))
  end

val appendLLclo_i65 =
  fn A_v3951 xs_v3952 ⇒
    ln ys_v3953 ⇒ appendLL_i40(A_v3951, xs_v3952, ys_v3953)

fun readline_i25(__v3954) =
  ln __v3955 ⇒
    let ch_v3956 = open stdin in
    let ch_v3957 = send(ch_v3956, true_c2) in
    let __v3958 = recv(ch_v3957) in
    (match __v3958 with
     | (s_v3959, ch_v3960) ⇒
       ln __v3961 ⇒
         let ch_v3962 = send(ch_v3960, false_c3) in
         let __v3963 = let __v3964 = ch_v3962 in tt_c1 in s_v3959
     end) NULL

val readlineclo_i66 = fn __v3965 ⇒ readline_i25(__v3965)

fun print_i26(s_v3966) =
  ln __v3967 ⇒
    let ch_v3968 = open stdout in
    let ch_v3969 = send(ch_v3968, true_c2) in
    let ch_v3970 = send(ch_v3969, s_v3966) in
    let ch_v3971 = send(ch_v3970, false_c3) in
    let __v3972 = ch_v3971 in tt_c1

val printclo_i67 = fn s_v3973 ⇒ print_i26(s_v3973)

fun prerr_i27(s_v3974) =
  ln __v3975 ⇒
    let ch_v3976 = open stderr in
    let ch_v3977 = send(ch_v3976, true_c2) in
    let ch_v3978 = send(ch_v3977, s_v3974) in
    let ch_v3979 = send(ch_v3978, false_c3) in
    let __v3980 = ch_v3979 in tt_c1

val prerrclo_i68 = fn s_v3981 ⇒ prerr_i27(s_v3981)

fun ref_handler_i30(A_v3982, m_v3983, c0_v3984) =
  ln __v3985 ⇒
    let __v3986 = recv(c0_v3984) in
    (match __v3986 with
     | (msg_v3987, c0_v3988) ⇒
       (match msg_v3987 with
        | GET_c11  ⇒
          ln c_v3989 __v3990 ⇒
            let c_v3991 = send(c_v3989, m_v3983) in
            (ref_handler_i30(NULL, m_v3983, c_v3991)) NULL
        | SET_c12  ⇒
          ln c_v3992 __v3993 ⇒
            let __v3994 = recv(c_v3992) in
            (match __v3994 with
             | (m_v3995, c_v3996) ⇒ ref_handler_i30(NULL, m_v3995, c_v3996)
             end) NULL
        | FREE_c13  ⇒ ln c_v3997 __v3998 ⇒ let __v3999 = c_v3997 in tt_c1
        end) c0_v3988
     end) NULL

val ref_handlerclo_i69 =
  fn A_v4000 m_v4001 c0_v4002 ⇒ ref_handler_i30(A_v4000, m_v4001, c0_v4002)

fun mk_ref_i31(A_v4003, m_v4004) =
  ln __v4005 ⇒
    fork c0_v4006 in (ref_handler_i30(NULL, m_v4004, c0_v4006)) NULL

val mk_refclo_i70 = fn A_v4007 m_v4008 ⇒ mk_ref_i31(A_v4007, m_v4008)

fun set_ref_i32(A_v4009, m_v4010, r_v4011) =
  ln __v4012 ⇒
    let r_v4013 = send(r_v4011, SET_c12) in send(r_v4013, m_v4010)

val set_refclo_i71 =
  fn A_v4014 m_v4015 r_v4016 ⇒ set_ref_i32(A_v4014, m_v4015, r_v4016)

fun get_ref_i33(A_v4017, r_v4018) =
  ln __v4019 ⇒ let r_v4020 = send(r_v4018, GET_c11) in recv(r_v4020)

val get_refclo_i72 = fn A_v4021 r_v4022 ⇒ get_ref_i33(A_v4021, r_v4022)

fun free_ref_i34(A_v4023, r_v4024) =
  ln __v4025 ⇒ let r_v4026 = send(r_v4024, FREE_c13) in close(r_v4026)

val free_refclo_i73 = fn A_v4027 r_v4028 ⇒ free_ref_i34(A_v4027, r_v4028)

main =
  let r_v4029 = (mk_ref_i31(NULL, "hello ")) NULL in
  let __v4030 = (get_ref_i33(NULL, r_v4029)) NULL in
  (match __v4030 with
   | (s0_v4031, r_v4032) ⇒
     ln __v4033 ⇒
       let r_v4034 = (set_ref_i32(NULL, "world\n", r_v4032)) NULL in
       let __v4035 = (get_ref_i33(NULL, r_v4034)) NULL in
       (match __v4035 with
        | (s1_v4036, r_v4037) ⇒
          ln __v4038 ⇒
            let __v4039 = (free_ref_i34(NULL, r_v4037)) NULL in
            (print_i26(cats_i15(s0_v4031, s1_v4036))) NULL
        end) NULL
   end) NULL

trans3e success--------------------------

trans34 success--------------------------

