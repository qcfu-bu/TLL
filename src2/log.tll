parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v197 : bool_d2) (b2_v198 : bool_d2) ⇒
    match b1_v197 as __v199 in ??1 with
    | true_c2  ⇒ b2_v198 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v202 : bool_d2) (b2_v203 : bool_d2) ⇒
    match b1_v202 as __v204 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v203
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v206 : bool_d2) ⇒
    match b_v206 as __v207 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v208 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v211 : nat_d3) (y_v212 : nat_d3) ⇒
    match x_v211 as __v213 in ??4 with
    | O_c4  ⇒ y_v212 | S_c5 x_v214 ⇒ (S_c5‹› (addn_i4 x_v214 y_v212))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v217 : nat_d3) (y_v218 : nat_d3) ⇒
    match x_v217 as __v219 in ??5 with
    | O_c4  ⇒ y_v218
    | S_c5 x_v220 ⇒ (addn_i4 y_v218 (muln_i5 x_v220 y_v218))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v223 : nat_d3) (y_v224 : nat_d3) ⇒
    match x_v223 as __v225 in ??6 with
    | O_c4  ⇒
      match y_v224 as __v226 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v227 ⇒ false_c3‹›
      end
    | S_c5 x_v228 ⇒
      match y_v224 as __v229 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v230 ⇒ (eqn_i6 x_v228 y_v230)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v233 : nat_d3) (y_v234 : nat_d3) ⇒
    match x_v233 as __v235 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v236 ⇒
      match y_v234 as __v237 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v238 ⇒ (lten_i7 x_v236 y_v238)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v241 : nat_d3) (y_v242 : nat_d3) ⇒
    match x_v241 as __v243 in ??11 with
    | O_c4  ⇒
      match y_v242 as __v244 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v245 ⇒ false_c3‹›
      end
    | S_c5 x_v246 ⇒
      match y_v242 as __v247 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v248 ⇒ (gten_i8 x_v246 y_v248)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v251 : nat_d3) (y_v252 : nat_d3) ⇒
    match x_v251 as __v253 in ??14 with
    | O_c4  ⇒
      match y_v252 as __v254 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v255 ⇒ true_c2‹›
      end
    | S_c5 x_v256 ⇒
      match y_v252 as __v257 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v258 ⇒ (ltn_i9 x_v256 y_v258)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v261 : nat_d3) (y_v262 : nat_d3) ⇒
    match x_v261 as __v263 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v264 ⇒
      match y_v262 as __v265 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v266 ⇒ (gtn_i10 x_v264 y_v266)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v267 : bool_d2) (b1_v268 : bool_d2) (b2_v269 : bool_d2)
    (b3_v270 : bool_d2) (b4_v271 : bool_d2) (b5_v272 : bool_d2)
    (b6_v273 : bool_d2) (b7_v274 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v275 : ascii_d4) (s_v276 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v279 : string_d5) (s2_v280 : string_d5) ⇒
    match s1_v279 as __v281 in ??19 with
    | EmptyString_c7  ⇒ s2_v280
    | String_c8 c_v282 s1_v283 ⇒
      (String_c8‹› c_v282 (cats_i11 s1_v283 s2_v280))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v285 : string_d5) ⇒
    match s_v285 as __v286 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v287 s_v288 ⇒ (S_c5‹› (strlen_i12 s_v288))
    end

inductive list_d6 (A_v289 : U) : U =
| nil_c9 of (A_v290 : U) : (list_d6 A_v290)
| cons_c10 of
    (A_v291 : U) (hd_v292 : A_v291) (tl_v293 : (list_d6 A_v291))
    : (list_d6 A_v291)

inductive llist_d7 (A_v294 : L) : L =
| lnil_c11 of (A_v295 : L) : (llist_d7 A_v295)
| lcons_c12 of
    (A_v296 : L) (hd_v297 : A_v296) (tl_v298 : (llist_d7 A_v296))
    : (llist_d7 A_v296)

program len_i13 : ∀ {A_v299 : U} → (list_d6 A_v299) → nat_d3 =
  fn {A_v301 : U} (xs_v302 : (list_d6 A_v301)) ⇒
    match xs_v302 as __v303 in ??21 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v304 xs_v305 ⇒ (S_c5‹› (len_i13 ??22 xs_v305))
    end

program llen_i14 :
  ∀ {A_v306 : L} → (llist_d7 A_v306) → nat_d3 ⊗ (llist_d7 A_v306)
=
  fn {A_v309 : L} (xs_v310 : (llist_d7 A_v309)) ⇒
    match xs_v310 as __v311 in ??23 with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v312 xs_v313 ⇒
      match (llen_i14 A_v309 xs_v313) as __v314 in ??24 with
      | ⟨n_v315, xs_v316⟩ ⇒
        ⟨(S_c5‹› n_v315), (lcons_c12‹› x_v312 xs_v316)⟩
      end
    end

program append_i15 :
  ∀ {A_v317 : U} →
    (list_d6 A_v317) → (list_d6 A_v317) → (list_d6 A_v317)
=
  fn {A_v320 : U} (xs_v321 : (list_d6 A_v320)) (ys_v322 : (list_d6 A_v320)) ⇒
    match xs_v321 as __v323 in ??27 with
    | nil_c9  ⇒ ys_v322
    | cons_c10 x_v324 xs_v325 ⇒
      (cons_c10‹› x_v324 (append_i15 ??28 xs_v325 ys_v322))
    end

program lappend_i16 :
  ∀ {A_v326 : L} →
    (llist_d7 A_v326) → (llist_d7 A_v326) ⊸ (llist_d7 A_v326)
=
  fn {A_v329 : L} (xs_v330 : (llist_d7 A_v329)) ⇒
    ln (ys_v331 : ??30) ⇒
      match xs_v330 as __v332 in ??31 with
      | lnil_c11  ⇒ ys_v331
      | lcons_c12 x_v333 xs_v334 ⇒
        (lcons_c12‹› x_v333 (lappend_i16 ??32 xs_v334 ys_v331))
      end

inductive box_d8 (A_v335 : U) : L =
| Box_c13 of (A_v336 : U) (a_v337 : A_v336) : (box_d8 A_v336)

program map_box_i17 :
  ∀ {A_v338 : U} →
    ∀ {B_v339 : U} →
      A_v338 → B_v339 → (box_d8 A_v338) → (box_d8 B_v339)
=
  fn {A_v343 : U} {B_v344 : U} (f_v345 : A_v343 → B_v344) (m_v346 : 
  (box_d8 A_v343)) ⇒
    match m_v346 as __v348 in ??34 with
    | Box_c13 a_v349 ⇒ (Box_c13‹› (f_v345 a_v349))
    end

program unbox_i18 : ∀ {A_v350 : U} → (box_d8 A_v350) → A_v350 =
  fn {A_v352 : U} (m_v353 : (box_d8 A_v352)) ⇒
    match m_v353 as __v354 in ??36 with
    | Box_c13 a_v355 ⇒ a_v355
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v357 : unit_d1) ⇒
    ⇑(b_v358 : bool_d2) ⇒
      match b_v358 as __v359 in ??37 with
      | true_c2  ⇒ ⇓(__v360 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v362 : unit_d1) ⇒
    ⇑(b_v363 : bool_d2) ⇒
      match b_v363 as __v364 in ??38 with
      | true_c2  ⇒ ⇑(__v365 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v367 : unit_d1) ⇒
    ⇑(b_v368 : bool_d2) ⇒
      match b_v368 as __v369 in ??39 with
      | true_c2  ⇒ ⇑(__v370 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v372 : unit_d1) ⇒
    let ch_v373 ⇐ open stdin in
    let ch_v374 ⇐ (send ch_v373 true_c2‹›) in
    let __v375 ⇐ recv ch_v374 in
    match __v375 as __v376 in ??40 with
    | ⟨s_v377, ch_v378⟩ ⇒
      let ch_v379 ⇐ (send ch_v378 false_c3‹›) in
      let __v380 ⇐ close ch_v379 in return s_v377
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v382 : string_d5) ⇒
    let ch_v383 ⇐ open stdout in
    let ch_v384 ⇐ (send ch_v383 true_c2‹›) in
    let ch_v385 ⇐ (send ch_v384 s_v382) in
    let ch_v386 ⇐ (send ch_v385 false_c3‹›) in close ch_v386

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v388 : string_d5) ⇒
    let ch_v389 ⇐ open stderr in
    let ch_v390 ⇐ (send ch_v389 true_c2‹›) in
    let ch_v391 ⇐ (send ch_v390 s_v388) in
    let ch_v392 ⇐ (send ch_v391 false_c3‹›) in close ch_v392

inductive List_d9 ‹s_s393, t_s394›
  (A_v395 : Type‹s_s393›) : Type‹t_s394›
=
| Nil_c14 of
    ‹s_s396, t_s397› (A_v398 : Type‹s_s396›)
    : (List_d9‹s_s396, t_s397› A_v398)
| Cons_c15 of
    ‹s_s399, t_s400› (A_v401 : Type‹s_s399›) (hd_v402 : A_v401)
    (tl_v403 : (List_d9‹s_s399, t_s400› A_v401))
    : (List_d9‹s_s399, t_s400› A_v401)

logical len_i28 ‹s_s404, t_s405› :
  ∀ {A_v406 : Type‹s_s404›} →
    (List_d9‹s_s404, t_s405› A_v406) → nat_d3
=
  fn {A_v408 : Type‹s_s404›} (xs_v409 : (List_d9‹s_s404, t_s405›
                                              A_v408)) ⇒
    match xs_v409 as __v410 in ??41 with
    | Nil_c14  ⇒ O_c4‹›
    | Cons_c15 hd_v411 tl_v412 ⇒
      (addn_i4 1 (len_i28‹??44, ??43› ??42 tl_v412))
    end

program append_i29 ‹s_s413, t_s414› :
  ∀ {A_v415 : Type‹s_s413›} →
    (List_d9‹??45, t_s414› A_v415) →
      (List_d9‹??47, ??46› A_v415) ⊸ (List_d9‹??49, ??48› A_v415)
=
  fn {A_v418 : Type‹s_s413›} (xs_v419 : (List_d9‹??45, t_s414›
                                              A_v418)) ⇒
    ln (ys_v420 : ??50) ⇒
      match xs_v419 as __v421 in ??51 with
      | Nil_c14  ⇒ ys_v420
      | Cons_c15 x_v422 xs_v423 ⇒
        (Cons_c15‹??57, ??56›
          x_v422 (append_i29‹??54, ??53› ??52 xs_v423 ys_v420))
      end

logical append_len_i30 ‹s_s424, t_s425› :
  ∀ (A_v426 : Type‹s_s424›) →
    ∀ (xs_v427 : (List_d9‹??58, t_s425› A_v426)) →
      ∀ (ys_v428 : (List_d9‹??59, t_s425› A_v426)) →
        (len_i28‹??65, ??64›
          ??63 (append_i29‹??62, ??61› ??60 xs_v427 ys_v428)) ≡
          (addn_i4
            (len_i28‹??71, ??70› ??69 xs_v427)
            (len_i28‹??68, ??67› ??66 ys_v428))
=
  fn (A_v429 : Type‹s_s424›) (xs_v430 : (List_d9‹??58, t_s425›
                                              A_v429)) (ys_v431 : (List_d9‹??59,
                                                                  t_s425›
                                                                    A_v429)) ⇒
    match xs_v430 as xs0_v432 in
      (len_i28‹??78, ??77›
        ??76 (append_i29‹??75, ??74› ??73 xs0_v432 ys_v431)) ≡
        (addn_i4
          (len_i28‹??84, ??83› ??82 xs0_v432)
          (len_i28‹??81, ??80› ??79 ys_v431)) with
    | Nil_c14  ⇒ refl ??97
    | Cons_c15 x_v433 xs0_v434 ⇒
      rew [n_v435, __v436 ⇒
        (S_c5‹›
          (len_i28‹??95, ??94›
            ??93 (append_i29‹??92, ??91› ??90 xs0_v434 ys_v431))) ≡
          (S_c5‹› n_v435)]
        (append_len_i30‹??88, ??87› ??86 xs0_v434 ys_v431) in
      refl ??89
    end

program ls0_i31 : (List_d9‹??98, U› ??99) =
  (Cons_c15‹??105, ??104› O_c4‹› Nil_c14‹??102, ??101›)

program ls1_i32 : (List_d9‹??106, U› ??107) =
  (Cons_c15‹??113, ??112› O_c4‹› Nil_c14‹??110, ??109›)

program ls2_i33 : ??114 =
  (append_i29‹??117, ??116› ??115 ls0_i31 ls1_i32)

program id_i34 ‹s_s437› :
  ∀ {A_v438 : Type‹s_s437›} → A_v438 → A_v438
= fn {A_v440 : Type‹s_s437›} (x_v441 : A_v440) ⇒ x_v441

program main_i35 : unit_d1 → IO unit_d1 =
  fn (__v443 : unit_d1) ⇒
    let s_v444 ⇐ (readline_i25 tt_c1‹›) in
    (id_i34‹??121› ??120 (print_i26 (id_i34‹??119› ??118 s_v444)))

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1740 : bool_d2) (b2_v1741 : bool_d2) ⇒
    match b1_v1740 as __v1742 in bool_d2 with
    | true_c2  ⇒ b2_v1741 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v1745 : bool_d2) (b2_v1746 : bool_d2) ⇒
    match b1_v1745 as __v1747 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v1746
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v1749 : bool_d2) ⇒
    match b_v1749 as __v1750 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v1751 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1754 : nat_d3) (y_v1755 : nat_d3) ⇒
    match x_v1754 as __v1756 in nat_d3 with
    | O_c4  ⇒ y_v1755
    | S_c5 x_v1757 ⇒ (S_c5‹› (addn_i4 x_v1757 y_v1755))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v1760 : nat_d3) (y_v1761 : nat_d3) ⇒
    match x_v1760 as __v1762 in nat_d3 with
    | O_c4  ⇒ y_v1761
    | S_c5 x_v1763 ⇒ (addn_i4 y_v1761 (muln_i5 x_v1763 y_v1761))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1766 : nat_d3) (y_v1767 : nat_d3) ⇒
    match x_v1766 as __v1768 in bool_d2 with
    | O_c4  ⇒
      match y_v1767 as __v1769 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1770 ⇒ false_c3‹›
      end
    | S_c5 x_v1771 ⇒
      match y_v1767 as __v1772 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1773 ⇒ (eqn_i6 x_v1771 y_v1773)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1776 : nat_d3) (y_v1777 : nat_d3) ⇒
    match x_v1776 as __v1778 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v1779 ⇒
      match y_v1777 as __v1780 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1781 ⇒ (lten_i7 x_v1779 y_v1781)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1784 : nat_d3) (y_v1785 : nat_d3) ⇒
    match x_v1784 as __v1786 in bool_d2 with
    | O_c4  ⇒
      match y_v1785 as __v1787 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v1788 ⇒ false_c3‹›
      end
    | S_c5 x_v1789 ⇒
      match y_v1785 as __v1790 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1791 ⇒ (gten_i8 x_v1789 y_v1791)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1794 : nat_d3) (y_v1795 : nat_d3) ⇒
    match x_v1794 as __v1796 in bool_d2 with
    | O_c4  ⇒
      match y_v1795 as __v1797 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1798 ⇒ true_c2‹›
      end
    | S_c5 x_v1799 ⇒
      match y_v1795 as __v1800 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v1801 ⇒ (ltn_i9 x_v1799 y_v1801)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v1804 : nat_d3) (y_v1805 : nat_d3) ⇒
    match x_v1804 as __v1806 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v1807 ⇒
      match y_v1805 as __v1808 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v1809 ⇒ (gtn_i10 x_v1807 y_v1809)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v1810 : bool_d2) (b1_v1811 : bool_d2) (b2_v1812 : bool_d2)
    (b3_v1813 : bool_d2) (b4_v1814 : bool_d2) (b5_v1815 : bool_d2)
    (b6_v1816 : bool_d2) (b7_v1817 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v1818 : ascii_d4) (s_v1819 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v1822 : string_d5) (s2_v1823 : string_d5) ⇒
    match s1_v1822 as __v1824 in string_d5 with
    | EmptyString_c7  ⇒ s2_v1823
    | String_c8 c_v1825 s1_v1826 ⇒
      (String_c8‹› c_v1825 (cats_i11 s1_v1826 s2_v1823))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v1828 : string_d5) ⇒
    match s_v1828 as __v1829 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v1830 s_v1831 ⇒ (S_c5‹› (strlen_i12 s_v1831))
    end

inductive list_d6 (A_v1832 : U) : U =
| nil_c9 of (A_v1833 : U) : (list_d6 A_v1833)
| cons_c10 of
    (A_v1834 : U) (hd_v1835 : A_v1834) (tl_v1836 : (list_d6 A_v1834))
    : (list_d6 A_v1834)

inductive llist_d7 (A_v1837 : L) : L =
| lnil_c11 of (A_v1838 : L) : (llist_d7 A_v1838)
| lcons_c12 of
    (A_v1839 : L) (hd_v1840 : A_v1839) (tl_v1841 : (llist_d7 A_v1839))
    : (llist_d7 A_v1839)

program len_i13 : ∀ {A_v1842 : U} → (list_d6 A_v1842) → nat_d3 =
  fn {A_v1844 : U} (xs_v1845 : (list_d6 A_v1844)) ⇒
    match xs_v1845 as __v1846 in nat_d3 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v1847 xs_v1848 ⇒ (S_c5‹› (len_i13 A_v1844 xs_v1848))
    end

program llen_i14 :
  ∀ {A_v1849 : L} → (llist_d7 A_v1849) → nat_d3 ⊗ (llist_d7 A_v1849)
=
  fn {A_v1852 : L} (xs_v1853 : (llist_d7 A_v1852)) ⇒
    match xs_v1853 as __v1854 in nat_d3 ⊗ (llist_d7 A_v1852) with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v1856 xs_v1857 ⇒
      match (llen_i14 A_v1852 xs_v1857) as __v1858 in
        nat_d3 ⊗ (llist_d7 A_v1852) with
      | ⟨n_v1860, xs_v1861⟩ ⇒
        ⟨(S_c5‹› n_v1860), (lcons_c12‹› x_v1856 xs_v1861)⟩
      end
    end

program append_i15 :
  ∀ {A_v1862 : U} →
    (list_d6 A_v1862) → (list_d6 A_v1862) → (list_d6 A_v1862)
=
  fn {A_v1865 : U} (xs_v1866 : (list_d6 A_v1865)) (ys_v1867 : (list_d6
                                                                A_v1865)) ⇒
    match xs_v1866 as __v1868 in (list_d6 A_v1865) with
    | nil_c9  ⇒ ys_v1867
    | cons_c10 x_v1869 xs_v1870 ⇒
      (cons_c10‹› x_v1869 (append_i15 A_v1865 xs_v1870 ys_v1867))
    end

program lappend_i16 :
  ∀ {A_v1871 : L} →
    (llist_d7 A_v1871) → (llist_d7 A_v1871) ⊸ (llist_d7 A_v1871)
=
  fn {A_v1874 : L} (xs_v1875 : (llist_d7 A_v1874)) ⇒
    ln (ys_v1876 : (llist_d7 A_v1874)) ⇒
      match xs_v1875 as __v1877 in (llist_d7 A_v1874) with
      | lnil_c11  ⇒ ys_v1876
      | lcons_c12 x_v1878 xs_v1879 ⇒
        (lcons_c12‹› x_v1878 (lappend_i16 A_v1874 xs_v1879 ys_v1876))
      end

inductive box_d8 (A_v1880 : U) : L =
| Box_c13 of (A_v1881 : U) (a_v1882 : A_v1881) : (box_d8 A_v1881)

program map_box_i17 :
  ∀ {A_v1883 : U} →
    ∀ {B_v1884 : U} →
      A_v1883 → B_v1884 → (box_d8 A_v1883) → (box_d8 B_v1884)
=
  fn {A_v1888 : U} {B_v1889 : U} (f_v1890 : A_v1888 → B_v1889) (m_v1891 : 
  (box_d8 A_v1888)) ⇒
    match m_v1891 as __v1893 in (box_d8 B_v1889) with
    | Box_c13 a_v1894 ⇒ (Box_c13‹› (f_v1890 a_v1894))
    end

program unbox_i18 : ∀ {A_v1895 : U} → (box_d8 A_v1895) → A_v1895 =
  fn {A_v1897 : U} (m_v1898 : (box_d8 A_v1897)) ⇒
    match m_v1898 as __v1899 in A_v1897 with
    | Box_c13 a_v1900 ⇒ a_v1900
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v1902 : unit_d1) ⇒
    ⇑(b_v1903 : bool_d2) ⇒
      match b_v1903 as __v1904 in proto with
      | true_c2  ⇒ ⇓(__v1905 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v1907 : unit_d1) ⇒
    ⇑(b_v1908 : bool_d2) ⇒
      match b_v1908 as __v1909 in proto with
      | true_c2  ⇒
        ⇑(__v1910 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v1912 : unit_d1) ⇒
    ⇑(b_v1913 : bool_d2) ⇒
      match b_v1913 as __v1914 in proto with
      | true_c2  ⇒
        ⇑(__v1915 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v1917 : unit_d1) ⇒
    let ch_v1918 ⇐ open stdin in
    let ch_v1919 ⇐ (send ch_v1918 true_c2‹›) in
    let __v1920 ⇐ recv ch_v1919 in
    match __v1920 as __v1921 in IO string_d5 with
    | ⟨s_v1922, ch_v1923⟩ ⇒
      let ch_v1924 ⇐ (send ch_v1923 false_c3‹›) in
      let __v1925 ⇐ close ch_v1924 in return s_v1922
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v1927 : string_d5) ⇒
    let ch_v1928 ⇐ open stdout in
    let ch_v1929 ⇐ (send ch_v1928 true_c2‹›) in
    let ch_v1930 ⇐ (send ch_v1929 s_v1927) in
    let ch_v1931 ⇐ (send ch_v1930 false_c3‹›) in close ch_v1931

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v1933 : string_d5) ⇒
    let ch_v1934 ⇐ open stderr in
    let ch_v1935 ⇐ (send ch_v1934 true_c2‹›) in
    let ch_v1936 ⇐ (send ch_v1935 s_v1933) in
    let ch_v1937 ⇐ (send ch_v1936 false_c3‹›) in close ch_v1937

inductive List_d9 ‹s_s1938, t_s1939›
  (A_v1940 : Type‹s_s1938›) : Type‹t_s1939›
=
| Nil_c14 of
    ‹s_s1941, t_s1942› (A_v1943 : Type‹s_s1941›)
    : (List_d9‹s_s1941, t_s1942› A_v1943)
| Cons_c15 of
    ‹s_s1944, t_s1945› (A_v1946 : Type‹s_s1944›) (hd_v1947 : A_v1946)
    (tl_v1948 : (List_d9‹s_s1944, t_s1945› A_v1946))
    : (List_d9‹s_s1944, t_s1945› A_v1946)

logical len_i28 ‹s_s1949, t_s1950› :
  ∀ {A_v1951 : Type‹s_s1949›} →
    (List_d9‹s_s1949, t_s1950› A_v1951) → nat_d3
=
  fn {A_v1953 : Type‹s_s1949›} (xs_v1954 : (List_d9‹s_s1949, t_s1950›
                                                 A_v1953)) ⇒
    match xs_v1954 as __v1955 in nat_d3 with
    | Nil_c14  ⇒ O_c4‹›
    | Cons_c15 hd_v1956 tl_v1957 ⇒
      (addn_i4 1 (len_i28‹s_s1949, t_s1950› A_v1953 tl_v1957))
    end

program append_i29 ‹s_s1958, t_s1959› :
  ∀ {A_v1960 : Type‹s_s1958›} →
    (List_d9‹s_s1958, t_s1959› A_v1960) →
      (List_d9‹s_s1958, t_s1959› A_v1960) ⊸
        (List_d9‹s_s1958, t_s1959› A_v1960)
=
  fn {A_v1963 : Type‹s_s1958›} (xs_v1964 : (List_d9‹s_s1958, t_s1959›
                                                 A_v1963)) ⇒
    ln (ys_v1965 : (List_d9‹s_s1958, t_s1959› A_v1963)) ⇒
      match xs_v1964 as __v1966 in
        (List_d9‹s_s1958, t_s1959› A_v1963) with
      | Nil_c14  ⇒ ys_v1965
      | Cons_c15 x_v1967 xs_v1968 ⇒
        (Cons_c15‹s_s1958, t_s1959›
          x_v1967
          (append_i29‹s_s1958, t_s1959› A_v1963 xs_v1968 ys_v1965))
      end

logical append_len_i30 ‹s_s1969, t_s1970› :
  ∀ (A_v1971 : Type‹s_s1969›) →
    ∀ (xs_v1972 : (List_d9‹s_s1969, t_s1970› A_v1971)) →
      ∀ (ys_v1973 : (List_d9‹s_s1969, t_s1970› A_v1971)) →
        (len_i28‹s_s1969, t_s1970›
          A_v1971
          (append_i29‹s_s1969, t_s1970› A_v1971 xs_v1972 ys_v1973)) ≡
          (addn_i4
            (len_i28‹s_s1969, t_s1970› A_v1971 xs_v1972)
            (len_i28‹s_s1969, t_s1970› A_v1971 ys_v1973))
=
  fn (A_v1974 : Type‹s_s1969›) (xs_v1975 : (List_d9‹s_s1969, t_s1970›
                                                 A_v1974)) (ys_v1976 : 
  (List_d9‹s_s1969, t_s1970› A_v1974)) ⇒
    match xs_v1975 as xs0_v1977 in
      (len_i28‹s_s1969, t_s1970›
        A_v1974 (append_i29‹s_s1969, t_s1970› A_v1974 xs0_v1977 ys_v1976)) ≡
        (addn_i4
          (len_i28‹s_s1969, t_s1970› A_v1974 xs0_v1977)
          (len_i28‹s_s1969, t_s1970› A_v1974 ys_v1976)) with
    | Nil_c14  ⇒
      refl (len_i28‹s_s1969, t_s1970›
             A_v1974
             (append_i29‹s_s1969, t_s1970›
               A_v1974 Nil_c14‹s_s1969, t_s1970› ys_v1976))
    | Cons_c15 x_v1978 xs0_v1979 ⇒
      rew [n_v1980, __v1981 ⇒
        (S_c5‹›
          (len_i28‹s_s1969, t_s1970›
            A_v1974
            (append_i29‹s_s1969, t_s1970› A_v1974 xs0_v1979 ys_v1976))) ≡
          (S_c5‹› n_v1980)]
        (append_len_i30‹s_s1969, t_s1970› A_v1974 xs0_v1979 ys_v1976) in
      refl (S_c5‹›
             (len_i28‹s_s1969, t_s1970›
               A_v1974
               (append_i29‹s_s1969, t_s1970› A_v1974 xs0_v1979 ys_v1976)))
    end

program ls0_i31 : (List_d9‹U, U› nat_d3) =
  (Cons_c15‹U, U› O_c4‹› Nil_c14‹U, U›)

program ls1_i32 : (List_d9‹U, U› nat_d3) =
  (Cons_c15‹U, U› O_c4‹› Nil_c14‹U, U›)

program ls2_i33 : (List_d9‹U, U› nat_d3) =
  (append_i29‹U, U› nat_d3 ls0_i31 ls1_i32)

program id_i34 ‹s_s1982› :
  ∀ {A_v1983 : Type‹s_s1982›} → A_v1983 → A_v1983
= fn {A_v1985 : Type‹s_s1982›} (x_v1986 : A_v1985) ⇒ x_v1986

program main_i35 : unit_d1 → IO unit_d1 =
  fn (__v1988 : unit_d1) ⇒
    let s_v1989 ⇐ (readline_i25 tt_c1‹›) in
    (id_i34‹L› IO unit_d1 (print_i26 (id_i34‹U› string_d5 s_v1989)))

trans1e success--------------------------

data unit_d10 =
| tt_c16 of size(0)

data bool_d11 =
| true_c17 of size(0) | false_c18 of size(0)

def andb_i36 =
  fn b1_v2308 b2_v2309 ⇒
    match b1_v2308 with
    | true_c17  ⇒ b2_v2309 | false_c18  ⇒ false_c18
    end

def orb_i37 =
  fn b1_v2310 b2_v2311 ⇒
    match b1_v2310 with
    | true_c17  ⇒ true_c17 | false_c18  ⇒ b2_v2311
    end

def notb_i38 =
  fn b_v2312 ⇒
    match b_v2312 with
    | true_c17  ⇒ false_c18 | false_c18  ⇒ true_c17
    end

data nat_d12 =
| O_c19 of size(0) | S_c20 of size(1)

def addn_i39 =
  fn x_v2313 y_v2314 ⇒
    match x_v2313 with
    | O_c19  ⇒ y_v2314
    | S_c20 x_v2315 ⇒ (S_c20 ((addn_i39 x_v2315) y_v2314))
    end

def muln_i40 =
  fn x_v2316 y_v2317 ⇒
    match x_v2316 with
    | O_c19  ⇒ y_v2317
    | S_c20 x_v2318 ⇒ ((addn_i39 y_v2317) ((muln_i40 x_v2318) y_v2317))
    end

def eqn_i41 =
  fn x_v2319 y_v2320 ⇒
    match x_v2319 with
    | O_c19  ⇒
      match y_v2320 with
      | O_c19  ⇒ true_c17 | S_c20 __v2321 ⇒ false_c18
      end
    | S_c20 x_v2322 ⇒
      match y_v2320 with
      | O_c19  ⇒ false_c18 | S_c20 y_v2323 ⇒ ((eqn_i41 x_v2322) y_v2323)
      end
    end

def lten_i42 =
  fn x_v2324 y_v2325 ⇒
    match x_v2324 with
    | O_c19  ⇒ true_c17
    | S_c20 x_v2326 ⇒
      match y_v2325 with
      | O_c19  ⇒ false_c18 | S_c20 y_v2327 ⇒ ((lten_i42 x_v2326) y_v2327)
      end
    end

def gten_i43 =
  fn x_v2328 y_v2329 ⇒
    match x_v2328 with
    | O_c19  ⇒
      match y_v2329 with
      | O_c19  ⇒ true_c17 | S_c20 __v2330 ⇒ false_c18
      end
    | S_c20 x_v2331 ⇒
      match y_v2329 with
      | O_c19  ⇒ true_c17 | S_c20 y_v2332 ⇒ ((gten_i43 x_v2331) y_v2332)
      end
    end

data ascii_d13 =
| Ascii_c21 of size(8)

data string_d14 =
| EmptyString_c22 of size(0) | String_c23 of size(2)

def cats_i46 =
  fn s1_v2333 s2_v2334 ⇒
    match s1_v2333 with
    | EmptyString_c22  ⇒ s2_v2334
    | String_c23 c_v2335 s1_v2336 ⇒
      (String_c23 c_v2335 ((cats_i46 s1_v2336) s2_v2334))
    end

def strlen_i47 =
  fn s_v2337 ⇒
    match s_v2337 with
    | EmptyString_c22  ⇒ O_c19
    | String_c23 __v2338 s_v2339 ⇒ (S_c20 (strlen_i47 s_v2339))
    end

data list_d15 =
| nil_c24 of size(0) | cons_c25 of size(2)

data llist_d16 =
| lnil_c26 of size(0) | lcons_c27 of size(2)

def len_i48 =
  fn A_v2340 xs_v2341 ⇒
    match xs_v2341 with
    | nil_c24  ⇒ O_c19
    | cons_c25 __v2342 xs_v2343 ⇒ (S_c20 ((len_i48 NULL) xs_v2343))
    end

def llen_i49 =
  fn A_v2344 xs_v2345 ⇒
    match xs_v2345 with
    | lnil_c26  ⇒ (O_c19, lnil_c26)
    | lcons_c27 x_v2346 xs_v2347 ⇒
      match ((llen_i49 NULL) xs_v2347) with
      | (n_v2348, xs_v2349) ⇒
        ((S_c20 n_v2348), (lcons_c27 x_v2346 xs_v2349))
      end
    end

def append_i50 =
  fn A_v2350 xs_v2351 ys_v2352 ⇒
    match xs_v2351 with
    | nil_c24  ⇒ ys_v2352
    | cons_c25 x_v2353 xs_v2354 ⇒
      (cons_c25 x_v2353 (((append_i50 NULL) xs_v2354) ys_v2352))
    end

def lappend_i51 =
  fn A_v2355 xs_v2356 ys_v2357 ⇒
    match xs_v2356 with
    | lnil_c26  ⇒ ys_v2357
    | lcons_c27 x_v2358 xs_v2359 ⇒
      (lcons_c27 x_v2358 (((lappend_i51 NULL) xs_v2359) ys_v2357))
    end

data box_d17 =
| Box_c28 of size(1)

def map_box_i52 =
  fn A_v2360 B_v2361 f_v2362 m_v2363 ⇒
    match m_v2363 with
    | Box_c28 a_v2364 ⇒ (Box_c28 (f_v2362 a_v2364))
    end

def unbox_i53 =
  fn A_v2365 m_v2366 ⇒ match m_v2366 with
                         | Box_c28 a_v2367 ⇒ a_v2367
                         end

def readline_i60 =
  fn __v2368 ⇒
    let ch_v2369 ⇐ open stdin in
    let ch_v2370 ⇐ (send ch_v2369 true_c17) in
    let __v2371 ⇐ recv ch_v2370 in
    match __v2371 with
    | (s_v2372, ch_v2373) ⇒
      let ch_v2374 ⇐ (send ch_v2373 false_c18) in
      let __v2375 ⇐ close⇑ ch_v2374 in return s_v2372
    end

def print_i61 =
  fn s_v2376 ⇒
    let ch_v2377 ⇐ open stdout in
    let ch_v2378 ⇐ (send ch_v2377 true_c17) in
    let ch_v2379 ⇐ (send ch_v2378 s_v2376) in
    let ch_v2380 ⇐ (send ch_v2379 false_c18) in close⇑ ch_v2380

def prerr_i62 =
  fn s_v2381 ⇒
    let ch_v2382 ⇐ open stderr in
    let ch_v2383 ⇐ (send ch_v2382 true_c17) in
    let ch_v2384 ⇐ (send ch_v2383 s_v2381) in
    let ch_v2385 ⇐ (send ch_v2384 false_c18) in close⇑ ch_v2385

data ListUU_d21 =
| NilUU_c35 of size(0) | ConsUU_c36 of size(2)

data ListUL_d20 =
| NilUL_c33 of size(0) | ConsUL_c34 of size(2)

data ListLU_d19 =
| NilLU_c31 of size(0)

data ListLL_d18 =
| NilLL_c29 of size(0) | ConsLL_c30 of size(2)

def appendUU_i70 =
  fn A_v2386 xs_v2387 ys_v2388 ⇒
    match xs_v2387 with
    | NilUU_c35  ⇒ ys_v2388
    | ConsUU_c36 x_v2389 xs_v2390 ⇒
      (ConsUU_c36 x_v2389 (((appendUU_i70 NULL) xs_v2390) ys_v2388))
    end

def appendUL_i69 =
  fn A_v2391 xs_v2392 ys_v2393 ⇒
    match xs_v2392 with
    | NilUL_c33  ⇒ ys_v2393
    | ConsUL_c34 x_v2394 xs_v2395 ⇒
      (ConsUL_c34 x_v2394 (((appendUL_i69 NULL) xs_v2395) ys_v2393))
    end

def appendLL_i67 =
  fn A_v2396 xs_v2397 ys_v2398 ⇒
    match xs_v2397 with
    | NilLL_c29  ⇒ ys_v2398
    | ConsLL_c30 x_v2399 xs_v2400 ⇒
      (ConsLL_c30 x_v2399 (((appendLL_i67 NULL) xs_v2400) ys_v2398))
    end

def ls0_i75 = (ConsUU_c36 O_c19 NilUU_c35)

def ls1_i76 = (ConsUU_c36 O_c19 NilUU_c35)

def ls2_i77 = (((appendUU_i70 NULL) ls0_i75) ls1_i76)

def idU_i79 = fn A_v2401 x_v2402 ⇒ x_v2402

def idL_i78 = fn A_v2403 x_v2404 ⇒ x_v2404

def main_i80 =
  fn __v2405 ⇒
    let s_v2406 ⇐ (readline_i60 tt_c16) in
    ((idL_i78 NULL) (print_i61 ((idU_i79 NULL) s_v2406)))

trans12 success--------------------------

