parsing success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v188 : bool_d2) (b2_v189 : bool_d2) ⇒
    match b1_v188 as __v190 in ??1 with
    | true_c2  ⇒ b2_v189 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v193 : bool_d2) (b2_v194 : bool_d2) ⇒
    match b1_v193 as __v195 in ??2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v194
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v197 : bool_d2) ⇒
    match b_v197 as __v198 in ??3 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v199 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v202 : nat_d3) (y_v203 : nat_d3) ⇒
    match x_v202 as __v204 in ??4 with
    | O_c4  ⇒ y_v203 | S_c5 x_v205 ⇒ (S_c5‹› (addn_i4 x_v205 y_v203))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v208 : nat_d3) (y_v209 : nat_d3) ⇒
    match x_v208 as __v210 in ??5 with
    | O_c4  ⇒ y_v209
    | S_c5 x_v211 ⇒ (addn_i4 y_v209 (muln_i5 x_v211 y_v209))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v214 : nat_d3) (y_v215 : nat_d3) ⇒
    match x_v214 as __v216 in ??6 with
    | O_c4  ⇒
      match y_v215 as __v217 in ??8 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v218 ⇒ false_c3‹›
      end
    | S_c5 x_v219 ⇒
      match y_v215 as __v220 in ??7 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v221 ⇒ (eqn_i6 x_v219 y_v221)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v224 : nat_d3) (y_v225 : nat_d3) ⇒
    match x_v224 as __v226 in ??9 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v227 ⇒
      match y_v225 as __v228 in ??10 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v229 ⇒ (lten_i7 x_v227 y_v229)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v232 : nat_d3) (y_v233 : nat_d3) ⇒
    match x_v232 as __v234 in ??11 with
    | O_c4  ⇒
      match y_v233 as __v235 in ??13 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v236 ⇒ false_c3‹›
      end
    | S_c5 x_v237 ⇒
      match y_v233 as __v238 in ??12 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v239 ⇒ (gten_i8 x_v237 y_v239)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v242 : nat_d3) (y_v243 : nat_d3) ⇒
    match x_v242 as __v244 in ??14 with
    | O_c4  ⇒
      match y_v243 as __v245 in ??16 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v246 ⇒ true_c2‹›
      end
    | S_c5 x_v247 ⇒
      match y_v243 as __v248 in ??15 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v249 ⇒ (ltn_i9 x_v247 y_v249)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v252 : nat_d3) (y_v253 : nat_d3) ⇒
    match x_v252 as __v254 in ??17 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v255 ⇒
      match y_v253 as __v256 in ??18 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v257 ⇒ (gtn_i10 x_v255 y_v257)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v258 : bool_d2) (b1_v259 : bool_d2) (b2_v260 : bool_d2)
    (b3_v261 : bool_d2) (b4_v262 : bool_d2) (b5_v263 : bool_d2)
    (b6_v264 : bool_d2) (b7_v265 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v266 : ascii_d4) (s_v267 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v270 : string_d5) (s2_v271 : string_d5) ⇒
    match s1_v270 as __v272 in ??19 with
    | EmptyString_c7  ⇒ s2_v271
    | String_c8 c_v273 s1_v274 ⇒
      (String_c8‹› c_v273 (cats_i11 s1_v274 s2_v271))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v276 : string_d5) ⇒
    match s_v276 as __v277 in ??20 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v278 s_v279 ⇒ (S_c5‹› (strlen_i12 s_v279))
    end

inductive list_d6 (A_v280 : U) : U =
| nil_c9 of (A_v281 : U) : (list_d6 A_v281)
| cons_c10 of
    (A_v282 : U) (hd_v283 : A_v282) (tl_v284 : (list_d6 A_v282))
    : (list_d6 A_v282)

inductive llist_d7 (A_v285 : L) : L =
| lnil_c11 of (A_v286 : L) : (llist_d7 A_v286)
| lcons_c12 of
    (A_v287 : L) (hd_v288 : A_v287) (tl_v289 : (llist_d7 A_v287))
    : (llist_d7 A_v287)

program len_i13 : ∀ {A_v290 : U} → (list_d6 A_v290) → nat_d3 =
  fn {A_v292 : U} (xs_v293 : (list_d6 A_v292)) ⇒
    match xs_v293 as __v294 in ??21 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v295 xs_v296 ⇒ (S_c5‹› (len_i13 ??22 xs_v296))
    end

program llen_i14 :
  ∀ {A_v297 : L} → (llist_d7 A_v297) → nat_d3 ⊗ (llist_d7 A_v297)
=
  fn {A_v300 : L} (xs_v301 : (llist_d7 A_v300)) ⇒
    match xs_v301 as __v302 in ??23 with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v303 xs_v304 ⇒
      match (llen_i14 A_v300 xs_v304) as __v305 in ??24 with
      | ⟨n_v306, xs_v307⟩ ⇒
        ⟨(S_c5‹› n_v306), (lcons_c12‹› x_v303 xs_v307)⟩
      end
    end

program append_i15 :
  ∀ {A_v308 : U} →
    (list_d6 A_v308) → (list_d6 A_v308) → (list_d6 A_v308)
=
  fn {A_v311 : U} (xs_v312 : (list_d6 A_v311)) (ys_v313 : (list_d6 A_v311)) ⇒
    match xs_v312 as __v314 in ??27 with
    | nil_c9  ⇒ ys_v313
    | cons_c10 x_v315 xs_v316 ⇒
      (cons_c10‹› x_v315 (append_i15 ??28 xs_v316 ys_v313))
    end

program lappend_i16 :
  ∀ {A_v317 : L} →
    (llist_d7 A_v317) → (llist_d7 A_v317) ⊸ (llist_d7 A_v317)
=
  fn {A_v320 : L} (xs_v321 : (llist_d7 A_v320)) ⇒
    ln (ys_v322 : ??30) ⇒
      match xs_v321 as __v323 in ??31 with
      | lnil_c11  ⇒ ys_v322
      | lcons_c12 x_v324 xs_v325 ⇒
        (lcons_c12‹› x_v324 (lappend_i16 ??32 xs_v325 ys_v322))
      end

inductive box_d8 (A_v326 : U) : L =
| Box_c13 of (A_v327 : U) (a_v328 : A_v327) : (box_d8 A_v327)

program map_box_i17 :
  ∀ {A_v329 : U} →
    ∀ {B_v330 : U} →
      A_v329 → B_v330 → (box_d8 A_v329) → (box_d8 B_v330)
=
  fn {A_v334 : U} {B_v335 : U} (f_v336 : A_v334 → B_v335) (m_v337 : 
  (box_d8 A_v334)) ⇒
    match m_v337 as __v339 in ??34 with
    | Box_c13 a_v340 ⇒ (Box_c13‹› (f_v336 a_v340))
    end

program unbox_i18 : ∀ {A_v341 : U} → (box_d8 A_v341) → A_v341 =
  fn {A_v343 : U} (m_v344 : (box_d8 A_v343)) ⇒
    match m_v344 as __v345 in ??36 with
    | Box_c13 a_v346 ⇒ a_v346
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v348 : unit_d1) ⇒
    ⇑(b_v349 : bool_d2) ⇒
      match b_v349 as __v350 in ??37 with
      | true_c2  ⇒ ⇓(__v351 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v353 : unit_d1) ⇒
    ⇑(b_v354 : bool_d2) ⇒
      match b_v354 as __v355 in ??38 with
      | true_c2  ⇒ ⇑(__v356 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v358 : unit_d1) ⇒
    ⇑(b_v359 : bool_d2) ⇒
      match b_v359 as __v360 in ??39 with
      | true_c2  ⇒ ⇑(__v361 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v363 : unit_d1) ⇒
    let ch_v364 ⇐ open stdin in
    let ch_v365 ⇐ (send ch_v364 true_c2‹›) in
    let __v366 ⇐ recv ch_v365 in
    match __v366 as __v367 in ??40 with
    | ⟨s_v368, ch_v369⟩ ⇒
      let ch_v370 ⇐ (send ch_v369 false_c3‹›) in
      let __v371 ⇐ close ch_v370 in return s_v368
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v373 : string_d5) ⇒
    let ch_v374 ⇐ open stdout in
    let ch_v375 ⇐ (send ch_v374 true_c2‹›) in
    let ch_v376 ⇐ (send ch_v375 s_v373) in
    let ch_v377 ⇐ (send ch_v376 false_c3‹›) in close ch_v377

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v379 : string_d5) ⇒
    let ch_v380 ⇐ open stderr in
    let ch_v381 ⇐ (send ch_v380 true_c2‹›) in
    let ch_v382 ⇐ (send ch_v381 s_v379) in
    let ch_v383 ⇐ (send ch_v382 false_c3‹›) in close ch_v383

program test0_i28 : string_d5 = "hello\n"

program test1_i29 : nat_d3 = 123

program test2_i30 : ascii_d4 = 'A'

program test3_i31 : ascii_d4 = '{'

program test4_i32 : (list_d6 ??41) =
  (cons_c10‹› 1 (cons_c10‹› 2 (cons_c10‹› 3 nil_c9‹›)))

logical append_len_i33 :
  ∀ (A_v384 : U) →
    ∀ (xs_v385 : (list_d6 A_v384)) →
      ∀ (ys_v386 : (list_d6 A_v384)) →
        (len_i13 ??47 (append_i15 ??46 xs_v385 ys_v386)) ≡
          (addn_i4 (len_i13 ??49 xs_v385) (len_i13 ??48 ys_v386))
=
  fn (A_v387 : U) (xs_v388 : (list_d6 A_v387)) (ys_v389 : (list_d6 A_v387)) ⇒
    match xs_v388 as xs0_v390 in
      (len_i13 ??52 (append_i15 ??51 xs0_v390 ys_v389)) ≡
        (addn_i4 (len_i13 ??54 xs0_v390) (len_i13 ??53 ys_v389)) with
    | nil_c9  ⇒ refl ??61
    | cons_c10 x_v391 xs0_v392 ⇒
      rew [n_v393, __v394 ⇒
        (S_c5‹› (len_i13 ??59 (append_i15 ??58 xs0_v392 ys_v389))) ≡
          (S_c5‹› n_v393)]
        (append_len_i33 ??56 xs0_v392 ys_v389) in
      refl ??57
    end

program snd_i34 :
  ∀ {A_v395 : U} → ∀ {B_v396 : L} → A_v395 ⊗ B_v396 → B_v396
=
  fn {A_v399 : U} {B_v400 : L} (m_v401 : A_v399 ⊗ B_v400) ⇒
    let __v403 = m_v401 in
    match __v403 as __v404 in ??62 with
    | ⟨__v405, b_v406⟩ ⇒ b_v406
    end

logical llen_id_i35 :
  ∀ (A_v407 : L) →
    ∀ (ls_v408 : (llist_d7 A_v407)) →
      ls_v408 ≡ (snd_i34 ??65 ??64 (llen_i14 ??63 ls_v408))
=
  fn (A_v409 : L) (ls_v410 : (llist_d7 A_v409)) ⇒
    match ls_v410 as ls0_v411 in
      ls0_v411 ≡ (snd_i34 ??69 ??68 (llen_i14 ??67 ls0_v411)) with
    | lnil_c11  ⇒ refl ??89
    | lcons_c12 x_v412 xs_v413 ⇒
      (match (llen_i14 ??71 xs_v413) as p_v414 in
         ∀ (__v415 : (llen_i14 ??72 xs_v413) ≡ p_v414) →
           (lcons_c12‹› x_v412 xs_v413) ≡
             (snd_i34
               ??78 ??77
               match p_v414 as __v416 in ??75 with
               | ⟨n_v417, xs0_v418⟩ ⇒
                 ⟨(S_c5‹› n_v417), (lcons_c12‹› x_v412 xs0_v418)⟩
               end) with
       | ⟨a_v419, b_v420⟩ ⇒
         fn (e0_v421 : ??80) ⇒
           let H_v422 =
             rew [p_v423, __v424 ⇒ xs_v413 ≡ (snd_i34 ??82 ??81 p_v423)]
               e0_v421 in
             (llen_id_i35 A_v409 xs_v413)
           in
           rew [l_v425, __v426 ⇒
             (lcons_c12‹› x_v412 xs_v413) ≡
               (lcons_c12‹› x_v412 l_v425)]
             H_v422 in
           refl ??84
       end refl ??88)
    end

trans01 success--------------------------

inductive unit_d1 : U =
| tt_c1 of : unit_d1

inductive bool_d2 : U =
| true_c2 of : bool_d2 | false_c3 of : bool_d2

program andb_i1 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2792 : bool_d2) (b2_v2793 : bool_d2) ⇒
    match b1_v2792 as __v2794 in bool_d2 with
    | true_c2  ⇒ b2_v2793 | false_c3  ⇒ false_c3‹›
    end

program orb_i2 : bool_d2 → bool_d2 → bool_d2 =
  fn (b1_v2797 : bool_d2) (b2_v2798 : bool_d2) ⇒
    match b1_v2797 as __v2799 in bool_d2 with
    | true_c2  ⇒ true_c2‹› | false_c3  ⇒ b2_v2798
    end

program notb_i3 : bool_d2 → bool_d2 =
  fn (b_v2801 : bool_d2) ⇒
    match b_v2801 as __v2802 in bool_d2 with
    | true_c2  ⇒ false_c3‹› | false_c3  ⇒ true_c2‹›
    end

inductive nat_d3 : U =
| O_c4 of : nat_d3 | S_c5 of (n_v2803 : nat_d3) : nat_d3

program addn_i4 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2806 : nat_d3) (y_v2807 : nat_d3) ⇒
    match x_v2806 as __v2808 in nat_d3 with
    | O_c4  ⇒ y_v2807
    | S_c5 x_v2809 ⇒ (S_c5‹› (addn_i4 x_v2809 y_v2807))
    end

program muln_i5 : nat_d3 → nat_d3 → nat_d3 =
  fn (x_v2812 : nat_d3) (y_v2813 : nat_d3) ⇒
    match x_v2812 as __v2814 in nat_d3 with
    | O_c4  ⇒ y_v2813
    | S_c5 x_v2815 ⇒ (addn_i4 y_v2813 (muln_i5 x_v2815 y_v2813))
    end

program eqn_i6 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2818 : nat_d3) (y_v2819 : nat_d3) ⇒
    match x_v2818 as __v2820 in bool_d2 with
    | O_c4  ⇒
      match y_v2819 as __v2821 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2822 ⇒ false_c3‹›
      end
    | S_c5 x_v2823 ⇒
      match y_v2819 as __v2824 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2825 ⇒ (eqn_i6 x_v2823 y_v2825)
      end
    end

program lten_i7 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2828 : nat_d3) (y_v2829 : nat_d3) ⇒
    match x_v2828 as __v2830 in bool_d2 with
    | O_c4  ⇒ true_c2‹›
    | S_c5 x_v2831 ⇒
      match y_v2829 as __v2832 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2833 ⇒ (lten_i7 x_v2831 y_v2833)
      end
    end

program gten_i8 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2836 : nat_d3) (y_v2837 : nat_d3) ⇒
    match x_v2836 as __v2838 in bool_d2 with
    | O_c4  ⇒
      match y_v2837 as __v2839 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 __v2840 ⇒ false_c3‹›
      end
    | S_c5 x_v2841 ⇒
      match y_v2837 as __v2842 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2843 ⇒ (gten_i8 x_v2841 y_v2843)
      end
    end

logical ltn_i9 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2846 : nat_d3) (y_v2847 : nat_d3) ⇒
    match x_v2846 as __v2848 in bool_d2 with
    | O_c4  ⇒
      match y_v2847 as __v2849 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2850 ⇒ true_c2‹›
      end
    | S_c5 x_v2851 ⇒
      match y_v2847 as __v2852 in bool_d2 with
      | O_c4  ⇒ false_c3‹› | S_c5 y_v2853 ⇒ (ltn_i9 x_v2851 y_v2853)
      end
    end

logical gtn_i10 : nat_d3 → nat_d3 → bool_d2 =
  fn (x_v2856 : nat_d3) (y_v2857 : nat_d3) ⇒
    match x_v2856 as __v2858 in bool_d2 with
    | O_c4  ⇒ false_c3‹›
    | S_c5 x_v2859 ⇒
      match y_v2857 as __v2860 in bool_d2 with
      | O_c4  ⇒ true_c2‹› | S_c5 y_v2861 ⇒ (gtn_i10 x_v2859 y_v2861)
      end
    end

inductive ascii_d4 : U =
| Ascii_c6 of
    (b0_v2862 : bool_d2) (b1_v2863 : bool_d2) (b2_v2864 : bool_d2)
    (b3_v2865 : bool_d2) (b4_v2866 : bool_d2) (b5_v2867 : bool_d2)
    (b6_v2868 : bool_d2) (b7_v2869 : bool_d2) : ascii_d4

inductive string_d5 : U =
| EmptyString_c7 of : string_d5
| String_c8 of (c_v2870 : ascii_d4) (s_v2871 : string_d5) : string_d5

program cats_i11 : string_d5 → string_d5 → string_d5 =
  fn (s1_v2874 : string_d5) (s2_v2875 : string_d5) ⇒
    match s1_v2874 as __v2876 in string_d5 with
    | EmptyString_c7  ⇒ s2_v2875
    | String_c8 c_v2877 s1_v2878 ⇒
      (String_c8‹› c_v2877 (cats_i11 s1_v2878 s2_v2875))
    end

program strlen_i12 : string_d5 → nat_d3 =
  fn (s_v2880 : string_d5) ⇒
    match s_v2880 as __v2881 in nat_d3 with
    | EmptyString_c7  ⇒ O_c4‹›
    | String_c8 __v2882 s_v2883 ⇒ (S_c5‹› (strlen_i12 s_v2883))
    end

inductive list_d6 (A_v2884 : U) : U =
| nil_c9 of (A_v2885 : U) : (list_d6 A_v2885)
| cons_c10 of
    (A_v2886 : U) (hd_v2887 : A_v2886) (tl_v2888 : (list_d6 A_v2886))
    : (list_d6 A_v2886)

inductive llist_d7 (A_v2889 : L) : L =
| lnil_c11 of (A_v2890 : L) : (llist_d7 A_v2890)
| lcons_c12 of
    (A_v2891 : L) (hd_v2892 : A_v2891) (tl_v2893 : (llist_d7 A_v2891))
    : (llist_d7 A_v2891)

program len_i13 : ∀ {A_v2894 : U} → (list_d6 A_v2894) → nat_d3 =
  fn {A_v2896 : U} (xs_v2897 : (list_d6 A_v2896)) ⇒
    match xs_v2897 as __v2898 in nat_d3 with
    | nil_c9  ⇒ O_c4‹›
    | cons_c10 __v2899 xs_v2900 ⇒ (S_c5‹› (len_i13 A_v2896 xs_v2900))
    end

program llen_i14 :
  ∀ {A_v2901 : L} → (llist_d7 A_v2901) → nat_d3 ⊗ (llist_d7 A_v2901)
=
  fn {A_v2904 : L} (xs_v2905 : (llist_d7 A_v2904)) ⇒
    match xs_v2905 as __v2906 in nat_d3 ⊗ (llist_d7 A_v2904) with
    | lnil_c11  ⇒ ⟨O_c4‹›, lnil_c11‹›⟩
    | lcons_c12 x_v2908 xs_v2909 ⇒
      match (llen_i14 A_v2904 xs_v2909) as __v2910 in
        nat_d3 ⊗ (llist_d7 A_v2904) with
      | ⟨n_v2912, xs_v2913⟩ ⇒
        ⟨(S_c5‹› n_v2912), (lcons_c12‹› x_v2908 xs_v2913)⟩
      end
    end

program append_i15 :
  ∀ {A_v2914 : U} →
    (list_d6 A_v2914) → (list_d6 A_v2914) → (list_d6 A_v2914)
=
  fn {A_v2917 : U} (xs_v2918 : (list_d6 A_v2917)) (ys_v2919 : (list_d6
                                                                A_v2917)) ⇒
    match xs_v2918 as __v2920 in (list_d6 A_v2917) with
    | nil_c9  ⇒ ys_v2919
    | cons_c10 x_v2921 xs_v2922 ⇒
      (cons_c10‹› x_v2921 (append_i15 A_v2917 xs_v2922 ys_v2919))
    end

program lappend_i16 :
  ∀ {A_v2923 : L} →
    (llist_d7 A_v2923) → (llist_d7 A_v2923) ⊸ (llist_d7 A_v2923)
=
  fn {A_v2926 : L} (xs_v2927 : (llist_d7 A_v2926)) ⇒
    ln (ys_v2928 : (llist_d7 A_v2926)) ⇒
      match xs_v2927 as __v2929 in (llist_d7 A_v2926) with
      | lnil_c11  ⇒ ys_v2928
      | lcons_c12 x_v2930 xs_v2931 ⇒
        (lcons_c12‹› x_v2930 (lappend_i16 A_v2926 xs_v2931 ys_v2928))
      end

inductive box_d8 (A_v2932 : U) : L =
| Box_c13 of (A_v2933 : U) (a_v2934 : A_v2933) : (box_d8 A_v2933)

program map_box_i17 :
  ∀ {A_v2935 : U} →
    ∀ {B_v2936 : U} →
      A_v2935 → B_v2936 → (box_d8 A_v2935) → (box_d8 B_v2936)
=
  fn {A_v2940 : U} {B_v2941 : U} (f_v2942 : A_v2940 → B_v2941) (m_v2943 : 
  (box_d8 A_v2940)) ⇒
    match m_v2943 as __v2945 in (box_d8 B_v2941) with
    | Box_c13 a_v2946 ⇒ (Box_c13‹› (f_v2942 a_v2946))
    end

program unbox_i18 : ∀ {A_v2947 : U} → (box_d8 A_v2947) → A_v2947 =
  fn {A_v2949 : U} (m_v2950 : (box_d8 A_v2949)) ⇒
    match m_v2950 as __v2951 in A_v2949 with
    | Box_c13 a_v2952 ⇒ a_v2952
    end

logical stdin_rec_i19 : unit_d1 → proto =
  fn (__v2954 : unit_d1) ⇒
    ⇑(b_v2955 : bool_d2) ⇒
      match b_v2955 as __v2956 in proto with
      | true_c2  ⇒ ⇓(__v2957 : string_d5) ⇒ (stdin_rec_i19 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdout_rec_i20 : unit_d1 → proto =
  fn (__v2959 : unit_d1) ⇒
    ⇑(b_v2960 : bool_d2) ⇒
      match b_v2960 as __v2961 in proto with
      | true_c2  ⇒
        ⇑(__v2962 : string_d5) ⇒ (stdout_rec_i20 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stderr_rec_i21 : unit_d1 → proto =
  fn (__v2964 : unit_d1) ⇒
    ⇑(b_v2965 : bool_d2) ⇒
      match b_v2965 as __v2966 in proto with
      | true_c2  ⇒
        ⇑(__v2967 : string_d5) ⇒ (stderr_rec_i21 tt_c1‹›)
      | false_c3  ⇒ end
      end

logical stdin_t_i22 : proto = (stdin_rec_i19 tt_c1‹›)

logical stdout_t_i23 : proto = (stdout_rec_i20 tt_c1‹›)

logical stderr_t_i24 : proto = (stderr_rec_i21 tt_c1‹›)

program readline_i25 : unit_d1 → IO string_d5 =
  fn (__v2969 : unit_d1) ⇒
    let ch_v2970 ⇐ open stdin in
    let ch_v2971 ⇐ (send ch_v2970 true_c2‹›) in
    let __v2972 ⇐ recv ch_v2971 in
    match __v2972 as __v2973 in IO string_d5 with
    | ⟨s_v2974, ch_v2975⟩ ⇒
      let ch_v2976 ⇐ (send ch_v2975 false_c3‹›) in
      let __v2977 ⇐ close ch_v2976 in return s_v2974
    end

program print_i26 : string_d5 → IO unit_d1 =
  fn (s_v2979 : string_d5) ⇒
    let ch_v2980 ⇐ open stdout in
    let ch_v2981 ⇐ (send ch_v2980 true_c2‹›) in
    let ch_v2982 ⇐ (send ch_v2981 s_v2979) in
    let ch_v2983 ⇐ (send ch_v2982 false_c3‹›) in close ch_v2983

program prerr_i27 : string_d5 → IO unit_d1 =
  fn (s_v2985 : string_d5) ⇒
    let ch_v2986 ⇐ open stderr in
    let ch_v2987 ⇐ (send ch_v2986 true_c2‹›) in
    let ch_v2988 ⇐ (send ch_v2987 s_v2985) in
    let ch_v2989 ⇐ (send ch_v2988 false_c3‹›) in close ch_v2989

program test0_i28 : string_d5 = "hello\n"

program test1_i29 : nat_d3 = 123

program test2_i30 : ascii_d4 = 'A'

program test3_i31 : ascii_d4 = '{'

program test4_i32 : (list_d6 nat_d3) =
  (cons_c10‹› 1 (cons_c10‹› 2 (cons_c10‹› 3 nil_c9‹›)))

logical append_len_i33 :
  ∀ (A_v2990 : U) →
    ∀ (xs_v2991 : (list_d6 A_v2990)) →
      ∀ (ys_v2992 : (list_d6 A_v2990)) →
        (len_i13 A_v2990 (append_i15 A_v2990 xs_v2991 ys_v2992)) ≡
          (addn_i4 (len_i13 A_v2990 xs_v2991) (len_i13 A_v2990 ys_v2992))
=
  fn (A_v2993 : U) (xs_v2994 : (list_d6 A_v2993)) (ys_v2995 : (list_d6
                                                                A_v2993)) ⇒
    match xs_v2994 as xs0_v2996 in
      (len_i13 A_v2993 (append_i15 A_v2993 xs0_v2996 ys_v2995)) ≡
        (addn_i4 (len_i13 A_v2993 xs0_v2996) (len_i13 A_v2993 ys_v2995)) with
    | nil_c9  ⇒
      refl (len_i13 A_v2993 (append_i15 A_v2993 nil_c9‹› ys_v2995))
    | cons_c10 x_v2997 xs0_v2998 ⇒
      rew [n_v2999, __v3000 ⇒
        (S_c5‹›
          (len_i13 A_v2993 (append_i15 A_v2993 xs0_v2998 ys_v2995))) ≡
          (S_c5‹› n_v2999)]
        (append_len_i33 A_v2993 xs0_v2998 ys_v2995) in
      refl (S_c5‹›
             (len_i13 A_v2993 (append_i15 A_v2993 xs0_v2998 ys_v2995)))
    end

program snd_i34 :
  ∀ {A_v3001 : U} → ∀ {B_v3002 : L} → A_v3001 ⊗ B_v3002 → B_v3002
=
  fn {A_v3005 : U} {B_v3006 : L} (m_v3007 : A_v3005 ⊗ B_v3006) ⇒
    let __v3009 = m_v3007 in
    match __v3009 as __v3010 in B_v3006 with
    | ⟨__v3011, b_v3012⟩ ⇒ b_v3012
    end

logical llen_id_i35 :
  ∀ (A_v3013 : L) →
    ∀ (ls_v3014 : (llist_d7 A_v3013)) →
      ls_v3014 ≡
        (snd_i34 nat_d3 (llist_d7 A_v3013) (llen_i14 A_v3013 ls_v3014))
=
  fn (A_v3015 : L) (ls_v3016 : (llist_d7 A_v3015)) ⇒
    match ls_v3016 as ls0_v3017 in
      ls0_v3017 ≡
        (snd_i34 nat_d3 (llist_d7 A_v3015) (llen_i14 A_v3015 ls0_v3017)) with
    | lnil_c11  ⇒ refl lnil_c11‹›
    | lcons_c12 x_v3018 xs_v3019 ⇒
      (match (llen_i14 A_v3015 xs_v3019) as p_v3020 in
         (llen_i14 A_v3015 xs_v3019) ≡ p_v3020 →
           (lcons_c12‹› x_v3018 xs_v3019) ≡
             (snd_i34
               nat_d3 (llist_d7 A_v3015)
               match p_v3020 as __v3022 in nat_d3 ⊗ (llist_d7 A_v3015) with
               | ⟨n_v3024, xs0_v3025⟩ ⇒
                 ⟨(S_c5‹› n_v3024), (lcons_c12‹› x_v3018 xs0_v3025)⟩
               end) with
       | ⟨a_v3026, b_v3027⟩ ⇒
         fn (e0_v3028 : (llen_i14 A_v3015 xs_v3019) ≡
                          (⟨a_v3026, b_v3027⟩
                            : nat_d3 ⊗ (llist_d7 A_v3015))) ⇒
           let H_v3030 =
             rew [p_v3031, __v3032 ⇒
               xs_v3019 ≡ (snd_i34 nat_d3 (llist_d7 A_v3015) p_v3031)]
               e0_v3028 in
             (llen_id_i35 A_v3015 xs_v3019)
           in
           rew [l_v3033, __v3034 ⇒
             (lcons_c12‹› x_v3018 xs_v3019) ≡
               (lcons_c12‹› x_v3018 l_v3033)]
             H_v3030 in
           refl (lcons_c12‹› x_v3018 xs_v3019)
       end refl (llen_i14 A_v3015 xs_v3019))
    end

trans1e success--------------------------

data unit_d9 =
| tt_c14 of size(0)

data bool_d10 =
| true_c15 of size(0) | false_c16 of size(0)

def andb_i36 =
  fn b1_v3297 b2_v3298 ⇒
    match b1_v3297 with
    | true_c15  ⇒ b2_v3298 | false_c16  ⇒ false_c16
    end

def orb_i37 =
  fn b1_v3299 b2_v3300 ⇒
    match b1_v3299 with
    | true_c15  ⇒ true_c15 | false_c16  ⇒ b2_v3300
    end

def notb_i38 =
  fn b_v3301 ⇒
    match b_v3301 with
    | true_c15  ⇒ false_c16 | false_c16  ⇒ true_c15
    end

data nat_d11 =
| O_c17 of size(0) | S_c18 of size(1)

def addn_i39 =
  fn x_v3302 y_v3303 ⇒
    match x_v3302 with
    | O_c17  ⇒ y_v3303
    | S_c18 x_v3304 ⇒ (S_c18 ((addn_i39 x_v3304) y_v3303))
    end

def muln_i40 =
  fn x_v3305 y_v3306 ⇒
    match x_v3305 with
    | O_c17  ⇒ y_v3306
    | S_c18 x_v3307 ⇒ ((addn_i39 y_v3306) ((muln_i40 x_v3307) y_v3306))
    end

def eqn_i41 =
  fn x_v3308 y_v3309 ⇒
    match x_v3308 with
    | O_c17  ⇒
      match y_v3309 with
      | O_c17  ⇒ true_c15 | S_c18 __v3310 ⇒ false_c16
      end
    | S_c18 x_v3311 ⇒
      match y_v3309 with
      | O_c17  ⇒ false_c16 | S_c18 y_v3312 ⇒ ((eqn_i41 x_v3311) y_v3312)
      end
    end

def lten_i42 =
  fn x_v3313 y_v3314 ⇒
    match x_v3313 with
    | O_c17  ⇒ true_c15
    | S_c18 x_v3315 ⇒
      match y_v3314 with
      | O_c17  ⇒ false_c16 | S_c18 y_v3316 ⇒ ((lten_i42 x_v3315) y_v3316)
      end
    end

def gten_i43 =
  fn x_v3317 y_v3318 ⇒
    match x_v3317 with
    | O_c17  ⇒
      match y_v3318 with
      | O_c17  ⇒ true_c15 | S_c18 __v3319 ⇒ false_c16
      end
    | S_c18 x_v3320 ⇒
      match y_v3318 with
      | O_c17  ⇒ true_c15 | S_c18 y_v3321 ⇒ ((gten_i43 x_v3320) y_v3321)
      end
    end

data ascii_d12 =
| Ascii_c19 of size(8)

data string_d13 =
| EmptyString_c20 of size(0) | String_c21 of size(2)

def cats_i46 =
  fn s1_v3322 s2_v3323 ⇒
    match s1_v3322 with
    | EmptyString_c20  ⇒ s2_v3323
    | String_c21 c_v3324 s1_v3325 ⇒
      (String_c21 c_v3324 ((cats_i46 s1_v3325) s2_v3323))
    end

def strlen_i47 =
  fn s_v3326 ⇒
    match s_v3326 with
    | EmptyString_c20  ⇒ O_c17
    | String_c21 __v3327 s_v3328 ⇒ (S_c18 (strlen_i47 s_v3328))
    end

data list_d14 =
| nil_c22 of size(0) | cons_c23 of size(2)

data llist_d15 =
| lnil_c24 of size(0) | lcons_c25 of size(2)

def len_i48 =
  fn A_v3329 xs_v3330 ⇒
    match xs_v3330 with
    | nil_c22  ⇒ O_c17
    | cons_c23 __v3331 xs_v3332 ⇒ (S_c18 ((len_i48 NULL) xs_v3332))
    end

def llen_i49 =
  fn A_v3333 xs_v3334 ⇒
    match xs_v3334 with
    | lnil_c24  ⇒ (O_c17, lnil_c24)
    | lcons_c25 x_v3335 xs_v3336 ⇒
      match ((llen_i49 NULL) xs_v3336) with
      | (n_v3337, xs_v3338) ⇒
        ((S_c18 n_v3337), (lcons_c25 x_v3335 xs_v3338))
      end
    end

def append_i50 =
  fn A_v3339 xs_v3340 ys_v3341 ⇒
    match xs_v3340 with
    | nil_c22  ⇒ ys_v3341
    | cons_c23 x_v3342 xs_v3343 ⇒
      (cons_c23 x_v3342 (((append_i50 NULL) xs_v3343) ys_v3341))
    end

def lappend_i51 =
  fn A_v3344 xs_v3345 ys_v3346 ⇒
    match xs_v3345 with
    | lnil_c24  ⇒ ys_v3346
    | lcons_c25 x_v3347 xs_v3348 ⇒
      (lcons_c25 x_v3347 (((lappend_i51 NULL) xs_v3348) ys_v3346))
    end

data box_d16 =
| Box_c26 of size(1)

def map_box_i52 =
  fn A_v3349 B_v3350 f_v3351 m_v3352 ⇒
    match m_v3352 with
    | Box_c26 a_v3353 ⇒ (Box_c26 (f_v3351 a_v3353))
    end

def unbox_i53 =
  fn A_v3354 m_v3355 ⇒ match m_v3355 with
                         | Box_c26 a_v3356 ⇒ a_v3356
                         end

def readline_i60 =
  fn __v3357 ⇒
    let ch_v3358 ⇐ open stdin in
    let ch_v3359 ⇐ (send ch_v3358 true_c15) in
    let __v3360 ⇐ recv ch_v3359 in
    match __v3360 with
    | (s_v3361, ch_v3362) ⇒
      let ch_v3363 ⇐ (send ch_v3362 false_c16) in
      let __v3364 ⇐ close⇑ ch_v3363 in return s_v3361
    end

def print_i61 =
  fn s_v3365 ⇒
    let ch_v3366 ⇐ open stdout in
    let ch_v3367 ⇐ (send ch_v3366 true_c15) in
    let ch_v3368 ⇐ (send ch_v3367 s_v3365) in
    let ch_v3369 ⇐ (send ch_v3368 false_c16) in close⇑ ch_v3369

def prerr_i62 =
  fn s_v3370 ⇒
    let ch_v3371 ⇐ open stderr in
    let ch_v3372 ⇐ (send ch_v3371 true_c15) in
    let ch_v3373 ⇐ (send ch_v3372 s_v3370) in
    let ch_v3374 ⇐ (send ch_v3373 false_c16) in close⇑ ch_v3374

def test0_i63 =
  (String_c21
    (Ascii_c19
      false_c16 true_c15 true_c15 false_c16 true_c15 false_c16 false_c16
      false_c16)
    (String_c21
      (Ascii_c19
        false_c16 true_c15 true_c15 false_c16 false_c16 true_c15 false_c16
        true_c15)
      (String_c21
        (Ascii_c19
          false_c16 true_c15 true_c15 false_c16 true_c15 true_c15 false_c16
          false_c16)
        (String_c21
          (Ascii_c19
            false_c16 true_c15 true_c15 false_c16 true_c15 true_c15 false_c16
            false_c16)
          (String_c21
            (Ascii_c19
              false_c16 true_c15 true_c15 false_c16 true_c15 true_c15
              true_c15 true_c15)
            (String_c21
              (Ascii_c19
                false_c16 false_c16 false_c16 false_c16 true_c15 false_c16
                true_c15 false_c16)
              EmptyString_c20))))))

def test1_i64 =
  (S_c18
    (S_c18
      (S_c18
        (S_c18
          (S_c18
            (S_c18
              (S_c18
                (S_c18
                  (S_c18
                    (S_c18
                      (S_c18
                        (S_c18
                          (S_c18
                            (S_c18
                              (S_c18
                                (S_c18
                                  (S_c18
                                    (S_c18
                                      (S_c18
                                        (S_c18
                                          (S_c18
                                            (S_c18
                                              (S_c18
                                                (S_c18
                                                  (S_c18
                                                    (S_c18
                                                      (S_c18
                                                        (S_c18
                                                          (S_c18
                                                            (S_c18
                                                              (S_c18
                                                                (S_c18
                                                                  (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    (S_c18
                                                                    O_c17)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

def test2_i65 =
  (Ascii_c19
    false_c16 true_c15 false_c16 false_c16 false_c16 false_c16 false_c16
    true_c15)

def test3_i66 =
  (Ascii_c19
    false_c16 true_c15 true_c15 true_c15 true_c15 false_c16 true_c15 true_c15)

def test4_i67 =
  (cons_c23
    (S_c18 O_c17)
    (cons_c23
      (S_c18 (S_c18 O_c17)) (cons_c23 (S_c18 (S_c18 (S_c18 O_c17))) nil_c22)))

def snd_i69 =
  fn A_v3375 B_v3376 m_v3377 ⇒
    let __v3378 = m_v3377 in
    match __v3378 with
    | (__v3379, b_v3380) ⇒ b_v3380
    end

trans12 success--------------------------

