
** Conflict (shift/reduce) in state 307.
** Tokens involved: PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token LPAREN.
** This state is reached from main after reading:

TM_MATCH tm_match_args TM_IN tm TM_WITH

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
tm1 
(?)

** In state 307, looking ahead at LPAREN, reducing production
** option(tm_match_cls0) ->
** is permitted because of the following sub-derivation:

tm0 list(tm0) // lookahead token appears because list(tm0) can begin with LPAREN
tm_match // lookahead token is inherited
TM_MATCH tm_match_args TM_IN tm TM_WITH tm_match_cls // lookahead token is inherited
                                        option(tm_match_cls0) // lookahead token is inherited
                                        . 

** In state 307, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

tm0 list(tm0) 
tm_match 
TM_MATCH tm_match_args TM_IN tm TM_WITH tm_match_cls 
                                        tm_match_cl0 
                                        loption(separated_nonempty_list(COMMA,tm_match_p)) RIGHTARROW1 tm 
                                        separated_nonempty_list(COMMA,tm_match_p) 
                                        tm_match_p 
                                        . LPAREN tm_match_p RPAREN 

** Conflict (shift/reduce) in state 273.
** Tokens involved: PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token LPAREN.
** This state is reached from main after reading:

TM_MATCH tm_match_args TM_WITH

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
tm1 
(?)

** In state 273, looking ahead at LPAREN, reducing production
** option(tm_match_cls0) ->
** is permitted because of the following sub-derivation:

tm0 list(tm0) // lookahead token appears because list(tm0) can begin with LPAREN
tm_match // lookahead token is inherited
TM_MATCH tm_match_args TM_WITH tm_match_cls // lookahead token is inherited
                               option(tm_match_cls0) // lookahead token is inherited
                               . 

** In state 273, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

tm0 list(tm0) 
tm_match 
TM_MATCH tm_match_args TM_WITH tm_match_cls 
                               tm_match_cl0 
                               loption(separated_nonempty_list(COMMA,tm_match_p)) RIGHTARROW1 tm 
                               separated_nonempty_list(COMMA,tm_match_p) 
                               tm_match_p 
                               . LPAREN tm_match_p RPAREN 

** Conflict (reduce/reduce) in state 160.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

LPAREN tm RPAREN

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 160, looking ahead at TM_TYPE, reducing production
** tm0 -> LPAREN tm RPAREN
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
LPAREN tm RPAREN . 

** In state 160, looking ahead at TM_TYPE, reducing production
** tm0_closed -> LPAREN tm RPAREN
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
LPAREN tm RPAREN . 

** Conflict (shift/reduce) in state 147.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

TM_FUNCTION PIPE tm_fun_ps RIGHTARROW1 tm0 tm0

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
tm1 
(?)

** In state 147, looking ahead at TM_TYPE, reducing production
** list(tm0) ->
** is permitted because of the following sub-derivation:

tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_fun // lookahead token is inherited
TM_FUNCTION tm_fun_cls // lookahead token is inherited
            tm_fun_open // lookahead token is inherited
            PIPE tm_fun_ps RIGHTARROW1 tm // lookahead token is inherited
                                       tm2 // lookahead token is inherited
                                       tm1 // lookahead token is inherited
                                       tm0 list(tm0) // lookahead token is inherited
                                           tm0 list(tm0) // lookahead token is inherited
                                               . 

** In state 147, looking ahead at TM_TYPE, shifting is permitted
** because of the following sub-derivation:

tm0 list(tm0) 
tm_fun 
TM_FUNCTION tm_fun_cls 
            tm_fun_open 
            PIPE tm_fun_ps RIGHTARROW1 tm 
                                       tm2 
                                       tm1 
                                       tm0 list(tm0) 
                                           tm0 list(tm0) 
                                               tm0 list(tm0) 
                                               tm_type 
                                               . TM_TYPE FLQ IDENTIFIER FRQ 

** Conflict (shift/reduce) in state 53.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

TM_FUNCTION PIPE tm_fun_ps RIGHTARROW1 tm0

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
tm1 
(?)

** In state 53, looking ahead at TM_TYPE, reducing production
** list(tm0) ->
** is permitted because of the following sub-derivation:

tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_fun // lookahead token is inherited
TM_FUNCTION tm_fun_cls // lookahead token is inherited
            tm_fun_open // lookahead token is inherited
            PIPE tm_fun_ps RIGHTARROW1 tm // lookahead token is inherited
                                       tm2 // lookahead token is inherited
                                       tm1 // lookahead token is inherited
                                       tm0 list(tm0) // lookahead token is inherited
                                           . 

** In state 53, looking ahead at TM_TYPE, shifting is permitted
** because of the following sub-derivation:

tm0 list(tm0) 
tm_fun 
TM_FUNCTION tm_fun_cls 
            tm_fun_open 
            PIPE tm_fun_ps RIGHTARROW1 tm 
                                       tm2 
                                       tm1 
                                       tm0 list(tm0) 
                                           tm0 list(tm0) 
                                           tm_type 
                                           . TM_TYPE FLQ IDENTIFIER FRQ 

** Conflict (reduce/reduce) in state 48.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

tm_absurd

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 48, looking ahead at TM_TYPE, reducing production
** tm0 -> tm_absurd
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_absurd . 

** In state 48, looking ahead at TM_TYPE, reducing production
** tm0_closed -> tm_absurd
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
tm_absurd . 

** Conflict (reduce/reduce) in state 47.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

tm_ann

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 47, looking ahead at TM_TYPE, reducing production
** tm0 -> tm_ann
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_ann . 

** In state 47, looking ahead at TM_TYPE, reducing production
** tm0_closed -> tm_ann
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
tm_ann . 

** Conflict (reduce/reduce) in state 45.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

tm_id

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 45, looking ahead at TM_TYPE, reducing production
** tm0 -> tm_id
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_id . 

** In state 45, looking ahead at TM_TYPE, reducing production
** tm0_closed -> tm_id
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
tm_id . 

** Conflict (reduce/reduce) in state 44.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

tm_inst

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 44, looking ahead at TM_TYPE, reducing production
** tm0 -> tm_inst
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_inst . 

** In state 44, looking ahead at TM_TYPE, reducing production
** tm0_closed -> tm_inst
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
tm_inst . 

** Conflict (reduce/reduce) in state 43.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

tm_magic

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 43, looking ahead at TM_TYPE, reducing production
** tm0 -> tm_magic
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_magic . 

** In state 43, looking ahead at TM_TYPE, reducing production
** tm0_closed -> tm_magic
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
tm_magic . 

** Conflict (reduce/reduce) in state 41.
** Tokens involved: TM_TYPE TM_MATCH TM_MAGIC TM_FUNCTION TM_ABSURD SORT_U SORT_L PIPE LPAREN IDENTIFIER
** The following explanations concentrate on token TM_TYPE.
** This state is reached from main after reading:

tm_type

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
tm EOF 
tm2 
(?)

** In state 41, looking ahead at TM_TYPE, reducing production
** tm0 -> tm_type
** is permitted because of the following sub-derivation:

tm1 
tm0 list(tm0) // lookahead token appears because list(tm0) can begin with TM_TYPE
tm_type . 

** In state 41, looking ahead at TM_TYPE, reducing production
** tm0_closed -> tm_type
** is permitted because of the following sub-derivation:

list(tm0_closed) tm_pi 
tm0_closed list(tm0_closed) // lookahead token appears because list(tm0_closed) can begin with TM_TYPE
tm_type . 
