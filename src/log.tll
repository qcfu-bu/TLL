#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_138 : nat_3) : nat_3

#[program]
inductive list_4‹› (A_139 : U): U where
| nil_6 : (list_4 A_139)
| cons_7 (hd_140 : A_139) (tl_141 : (list_4 A_139)) : (list_4 A_139)

#[logical]
inductive eq_5‹s_142› (A_143 : Type‹s_142›) (m_144 : A_143):
  A_143 -> U
where
| refl_8 : (eq_5‹??_1› ?_1[0;0] m_144 m_144)

#[program]
inductive exists_6‹s_146,r_147,t_148› (A_149 : Type‹s_146›) (B_150 : 
A_149 -> Type‹r_147›): Type‹t_148› where
| ex_9
    (m_152 : A_149) {pf_153 : ((B_150) m_152)}
    : (exists_6‹??_2,??_3,??_4› ?_2[0;0] B_150)

#[program]
inductive sing_7‹s_154› (A_155 : Type‹s_154›):
  A_155 -> Type‹s_154›
where
| just_10 (m_157 : A_155) : (sing_7‹??_5› ?_3[0;0] m_157)

#[program]
inductive prod_8‹s_158,r_159,t_160› (A_161 : Type‹s_158›) (B_162 : Type‹r_159›):
  Type‹t_160›
where
| pair_11
    (m_163 : A_161) (n_164 : B_162)
    : (prod_8‹??_6,??_7,??_8› A_161 B_162)

#[program]
def exists_sing_1‹s_165,t_166› :
  ∀ {A_167 : Type‹s_165›} ->
    ∀ {m_168 : A_167} ->
      (exists_6‹??_14,??_15,t_166›
        ?_11[0;0]
        function _170 : A_167 -> ?_9[0;0]
        | a_172 => (eq_5‹??_16› ?_10[0;0] a_172 m_168)) ->
        (sing_7‹??_17› ?_12[0;0] m_168)
:=
  function exists_sing_173 :
    ∀ {A_174 : Type‹s_165›} ->
      ∀ {m_175 : A_174} ->
        (exists_6‹??_9,??_10,t_166›
          ?_6[0;0]
          function _177 : A_174 -> ?_4[0;0]
          | a_179 => (eq_5‹??_11› ?_5[0;0] a_179 m_175)) ->
          (sing_7‹??_12› ?_7[0;0] m_175)
  | A_180 m_181 (ex_9 x_182 refl_8) => (just_10‹??_13› ?_8[0;0] x_182)

#[program]
def sing_exists_2‹s_183,t_184› :
  ∀ {A_185 : Type‹s_183›} ->
    ∀ {m_186 : A_185} ->
      (sing_7‹??_26› ?_21[0;0] m_186) ->
        (exists_6‹??_27,??_28,t_184›
          ?_24[0;0]
          function _188 : A_185 -> ?_22[0;0]
          | a_190 => (eq_5‹??_29› ?_23[0;0] a_190 m_186))
:=
  function sing_exists_191 :
    ∀ {A_192 : Type‹s_183›} ->
      ∀ {m_193 : A_192} ->
        (sing_7‹??_18› ?_13[0;0] m_193) ->
          (exists_6‹??_19,??_20,t_184›
            ?_16[0;0]
            function _195 : A_192 -> ?_14[0;0]
            | a_197 => (eq_5‹??_21› ?_15[0;0] a_197 m_193))
  | A_198 m_199 (just_10 x_200) =>
    (ex_9‹??_23,??_24,??_25›
      ?_19[0;0] ?_20[0;0] x_200 (refl_8‹??_22› ?_17[0;0] ?_18[0;0]))

#[logical]
def sing_exists_equiv1_3‹s_201,t_202› :
  ∀ {A_203 : Type‹s_201›} ->
    ∀ {m_204 : A_203} ->
      ∀ (x_205 : (sing_7‹??_36› ?_33[0;0] m_204)) ->
        (eq_5‹??_40›
          ?_38[0;0]
          ((exists_sing_1‹??_38,??_39›)
            ?_37[0;0] ?_36[0;0]
            ((sing_exists_2‹??_37,t_202›) ?_35[0;0] ?_34[0;0] x_205))
          x_205)
:=
  function sing_exists_equiv1_206 :
    ∀ {A_207 : Type‹s_201›} ->
      ∀ {m_208 : A_207} ->
        ∀ (x_209 : (sing_7‹??_30› ?_25[0;0] m_208)) ->
          (eq_5‹??_34›
            ?_30[0;0]
            ((exists_sing_1‹??_32,??_33›)
              ?_29[0;0] ?_28[0;0]
              ((sing_exists_2‹??_31,t_202›) ?_27[0;0] ?_26[0;0] x_209))
            x_209)
  | A_210 m_211 (just_10 x_212) => (refl_8‹??_35› ?_31[0;0] ?_32[0;0])

#[logical]
def sing_exists_equiv2_4‹s_213,t_214› :
  ∀ {A_215 : Type‹s_213›} ->
    ∀ {m_216 : A_215} ->
      ∀ (x_217 :
        (exists_6‹??_50,??_51,t_214›
          ?_51[0;0]
          function _218 : A_215 -> ?_49[0;0]
          | a_220 => (eq_5‹??_52› ?_50[0;0] a_220 m_216))) ->
        (eq_5‹??_57›
          ?_56[0;0]
          ((sing_exists_2‹??_55,??_56›)
            ?_55[0;0] ?_54[0;0]
            ((exists_sing_1‹??_53,??_54›) ?_53[0;0] ?_52[0;0] x_217))
          x_217)
:=
  function sing_exists_equiv2_221 :
    ∀ {A_222 : Type‹s_213›} ->
      ∀ {m_223 : A_222} ->
        ∀ (x_224 :
          (exists_6‹??_41,??_42,t_214›
            ?_41[0;0]
            function _225 : A_222 -> ?_39[0;0]
            | a_227 => (eq_5‹??_43› ?_40[0;0] a_227 m_223))) ->
          (eq_5‹??_48›
            ?_46[0;0]
            ((sing_exists_2‹??_46,??_47›)
              ?_45[0;0] ?_44[0;0]
              ((exists_sing_1‹??_44,??_45›) ?_43[0;0] ?_42[0;0] x_224))
            x_224)
  | A_228 m_229 (ex_9 x_230 refl_8) =>
    (refl_8‹??_49› ?_47[0;0] ?_48[0;0])

#[program]
def sing_double_5‹s_231,t_232› :
  ∀ {A_233 : Type‹s_231›} ->
    ∀ {m_234 : A_233} ->
      (sing_7‹??_67› ?_64[0;0] m_234) ->
        (sing_7‹??_68› ?_65[0;0] m_234) -o
          (prod_8‹??_69,??_70,t_232› A_233 A_233)
:=
  function sing_double_237 :
    ∀ {A_238 : Type‹s_231›} ->
      ∀ {m_239 : A_238} ->
        (sing_7‹??_58› ?_57[0;0] m_239) ->
          (sing_7‹??_59› ?_58[0;0] m_239) -o
            (prod_8‹??_60,??_61,t_232› A_238 A_238)
  | A_242 m_243 (just_10 x_244) (just_10 y_245) =>
    let {pf_246} :=
      ((refl_8‹??_62› ?_59[0;0] ?_60[0;0])
        : (eq_5‹??_63› ?_61[0;0] x_244 y_245))
    in (pair_11‹??_64,??_65,??_66› ?_62[0;0] ?_63[0;0] x_244 y_245)

#[program]
def pattern_expansion_6‹› : ∀ {A_247 : U} -> (list_4 A_247) -o unit_1
:=
  function pattern_expansion_249 :
    ∀ {A_250 : U} -> (list_4 A_250) -o unit_1
  | A_252 nil_6 => tt_1
  | A_253 (cons_7 x_254 nil_6) => tt_1
  | A_255 xs_256 =>
    let {pf_257} :=
      ((refl_8‹??_71› ?_66[0;0] ?_67[0;0])
        : (eq_5‹??_72› ?_68[0;0] xs_256 xs_256))
    in tt_1

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_4022 : nat_3) : nat_3

#[program]
inductive list_4‹› (A_4023 : U): U where
| nil_6 : (list_4 A_4023)
| cons_7 (hd_4024 : A_4023) (tl_4025 : (list_4 A_4023)) : (list_4 A_4023)

#[logical]
inductive eq_5‹s_4026› (A_4027 : Type‹s_4026›) (m_4028 : A_4027):
  A_4027 -> U
where
| refl_8 : (eq_5‹s_4026› A_4027 m_4028 m_4028)

#[program]
inductive exists_6‹s_4030,r_4031,t_4032› (A_4033 : Type‹s_4030›) (B_4034 : 
A_4033 -> Type‹r_4031›): Type‹t_4032› where
| ex_9
    (m_4036 : A_4033) {pf_4037 : ((B_4034) m_4036)}
    : (exists_6‹s_4030,r_4031,t_4032› A_4033 B_4034)

#[program]
inductive sing_7‹s_4038› (A_4039 : Type‹s_4038›):
  A_4039 -> Type‹s_4038›
where
| just_10 (m_4041 : A_4039) : (sing_7‹s_4038› A_4039 m_4041)

#[program]
inductive prod_8‹s_4042,r_4043,t_4044› (A_4045 : Type‹s_4042›) (B_4046 : Type‹r_4043›):
  Type‹t_4044›
where
| pair_11
    (m_4047 : A_4045) (n_4048 : B_4046)
    : (prod_8‹s_4042,r_4043,t_4044› A_4045 B_4046)

#[program]
def exists_sing_1‹s_4049,t_4050› :
  ∀ {A_4051 : Type‹s_4049›} ->
    ∀ {m_4052 : A_4051} ->
      (exists_6‹s_4049,U,t_4050›
        A_4051
        function _4054 : A_4051 -> U
        | __4056 => (eq_5‹s_4049› A_4051 __4056 m_4052)) ->
        (sing_7‹s_4049› A_4051 m_4052)
:=
  function exists_sing_4057 :
    ∀ {A_4058 : Type‹s_4049›} ->
      ∀ {m_4059 : A_4058} ->
        (exists_6‹s_4049,U,t_4050›
          A_4058
          function _4061 : A_4058 -> U
          | __4063 => (eq_5‹s_4049› A_4058 __4063 m_4059)) ->
          (sing_7‹s_4049› A_4058 m_4059)
  | A_4064 m_4065 (ex_9 m_4066 refl_8) => (just_10‹s_4049› A_4064 m_4066)

#[program]
def sing_exists_2‹s_4067,t_4068› :
  ∀ {A_4069 : Type‹s_4067›} ->
    ∀ {m_4070 : A_4069} ->
      (sing_7‹s_4067› A_4069 m_4070) ->
        (exists_6‹s_4067,U,t_4068›
          A_4069
          function _4072 : A_4069 -> U
          | __4074 => (eq_5‹s_4067› A_4069 __4074 m_4070))
:=
  function sing_exists_4075 :
    ∀ {A_4076 : Type‹s_4067›} ->
      ∀ {m_4077 : A_4076} ->
        (sing_7‹s_4067› A_4076 m_4077) ->
          (exists_6‹s_4067,U,t_4068›
            A_4076
            function _4079 : A_4076 -> U
            | __4081 => (eq_5‹s_4067› A_4076 __4081 m_4077))
  | A_4082 m_4083 (just_10 m_4084) =>
    (ex_9‹s_4067,U,t_4068›
      A_4082
      function _4085 : A_4082 -> U
      | __4087 => (eq_5‹s_4067› A_4082 __4087 m_4084) m_4084
      (refl_8‹s_4067› A_4082 m_4084))

#[logical]
def sing_exists_equiv1_3‹s_4088,t_4089› :
  ∀ {A_4090 : Type‹s_4088›} ->
    ∀ {m_4091 : A_4090} ->
      ∀ (x_4092 : (sing_7‹s_4088› A_4090 m_4091)) ->
        (eq_5‹s_4088›
          (sing_7‹s_4088› A_4090 m_4091)
          ((exists_sing_1‹s_4088,t_4089›)
            A_4090 m_4091
            ((sing_exists_2‹s_4088,t_4089›) A_4090 m_4091 x_4092))
          x_4092)
:=
  function sing_exists_equiv1_4093 :
    ∀ {A_4094 : Type‹s_4088›} ->
      ∀ {m_4095 : A_4094} ->
        ∀ (x_4096 : (sing_7‹s_4088› A_4094 m_4095)) ->
          (eq_5‹s_4088›
            (sing_7‹s_4088› A_4094 m_4095)
            ((exists_sing_1‹s_4088,t_4089›)
              A_4094 m_4095
              ((sing_exists_2‹s_4088,t_4089›) A_4094 m_4095 x_4096))
            x_4096)
  | A_4097 m_4098 (just_10 m_4099) =>
    (refl_8‹s_4088›
      (sing_7‹s_4088› A_4097 m_4099)
      ((exists_sing_1‹s_4088,t_4089›)
        A_4097 m_4099
        ((sing_exists_2‹s_4088,t_4089›)
          A_4097 m_4099 (just_10‹s_4088› A_4097 m_4099))))

#[logical]
def sing_exists_equiv2_4‹s_4100,t_4101› :
  ∀ {A_4102 : Type‹s_4100›} ->
    ∀ {m_4103 : A_4102} ->
      ∀ (x_4104 :
        (exists_6‹s_4100,U,t_4101›
          A_4102
          function _4105 : A_4102 -> U
          | __4107 => (eq_5‹s_4100› A_4102 __4107 m_4103))) ->
        (eq_5‹t_4101›
          (exists_6‹s_4100,U,t_4101›
            A_4102
            function _4108 : A_4102 -> U
            | __4110 => (eq_5‹s_4100› A_4102 __4110 m_4103))
          ((sing_exists_2‹s_4100,t_4101›)
            A_4102 m_4103
            ((exists_sing_1‹s_4100,t_4101›) A_4102 m_4103 x_4104))
          x_4104)
:=
  function sing_exists_equiv2_4111 :
    ∀ {A_4112 : Type‹s_4100›} ->
      ∀ {m_4113 : A_4112} ->
        ∀ (x_4114 :
          (exists_6‹s_4100,U,t_4101›
            A_4112
            function _4115 : A_4112 -> U
            | __4117 => (eq_5‹s_4100› A_4112 __4117 m_4113))) ->
          (eq_5‹t_4101›
            (exists_6‹s_4100,U,t_4101›
              A_4112
              function _4118 : A_4112 -> U
              | __4120 => (eq_5‹s_4100› A_4112 __4120 m_4113))
            ((sing_exists_2‹s_4100,t_4101›)
              A_4112 m_4113
              ((exists_sing_1‹s_4100,t_4101›) A_4112 m_4113 x_4114))
            x_4114)
  | A_4121 m_4122 (ex_9 m_4123 refl_8) =>
    (refl_8‹t_4101›
      (exists_6‹s_4100,U,t_4101›
        A_4121
        function _4124 : A_4121 -> U
        | __4126 => (eq_5‹s_4100› A_4121 __4126 m_4123))
      ((sing_exists_2‹s_4100,t_4101›)
        A_4121 m_4123
        ((exists_sing_1‹s_4100,t_4101›)
          A_4121 m_4123
          (ex_9‹s_4100,U,t_4101›
            A_4121
            function _4127 : A_4121 -> U
            | __4129 => (eq_5‹s_4100› A_4121 __4129 m_4123) m_4123
            (refl_8‹s_4100› A_4121 m_4123)))))

#[program]
def sing_double_5‹s_4130,t_4131› :
  ∀ {A_4132 : Type‹s_4130›} ->
    ∀ {m_4133 : A_4132} ->
      (sing_7‹s_4130› A_4132 m_4133) ->
        (sing_7‹s_4130› A_4132 m_4133) -o
          (prod_8‹s_4130,s_4130,t_4131› A_4132 A_4132)
:=
  function sing_double_4136 :
    ∀ {A_4137 : Type‹s_4130›} ->
      ∀ {m_4138 : A_4137} ->
        (sing_7‹s_4130› A_4137 m_4138) ->
          (sing_7‹s_4130› A_4137 m_4138) -o
            (prod_8‹s_4130,s_4130,t_4131› A_4137 A_4137)
  | A_4141 m_4142 (just_10 m_4143) (just_10 m_4144) =>
    let {pf_4145} :=
      ((refl_8‹s_4130› A_4141 m_4143)
        : (eq_5‹s_4130› A_4141 m_4143 m_4144))
    in (pair_11‹s_4130,s_4130,t_4131› A_4141 A_4141 m_4143 m_4144)

#[program]
def pattern_expansion_6‹› : ∀ {A_4146 : U} -> (list_4 A_4146) -o unit_1
:=
  function pattern_expansion_4148 :
    ∀ {A_4149 : U} -> (list_4 A_4149) -o unit_1
  | A_4151 nil_6 => tt_1
  | A_4152 (cons_7 hd_4153 nil_6) => tt_1
  | A_4154 (cons_7 hd_4155 (cons_7 hd_4156 tl_4157)) =>
    let {pf_4158} :=
      ((refl_8‹U›
         (list_4 A_4154)
         (cons_7‹› A_4154 hd_4155 (cons_7‹› A_4154 hd_4156 tl_4157)))
        : (eq_5‹U›
            (list_4 A_4154)
            (cons_7‹›
              A_4154 hd_4155 (cons_7‹› A_4154 hd_4156 tl_4157))
            (cons_7‹›
              A_4154 hd_4155 (cons_7‹› A_4154 hd_4156 tl_4157))))
    in tt_1

-----------------------------------------

#[program]
inductive unit_1 where
| tt_1 of layout[]

#[program]
inductive bool_2 where
| true_2 of layout[]
| false_3 of layout[]

#[program]
inductive nat_3 where
| zero_4 of layout[]
| succ_5 of layout[R]

#[program]
inductive list_4 where
| nil_6 of layout[]
| cons_7 of layout[R, R]

#[logical]
inductive eqU_10 where
| reflU_13 of layout[]

#[logical]
inductive eqL_9 where
| reflL_12 of layout[]

#[program]
inductive existsUUU_18 where
| exUUU_21 of layout[R, N]

#[program]
inductive existsUUL_17 where
| exUUL_20 of layout[R, N]

#[program]
inductive existsULU_16 where
| exULU_19 of layout[R, N]

#[program]
inductive existsULL_15 where
| exULL_18 of layout[R, N]

#[program]
inductive existsLUU_14 where


#[program]
inductive existsLUL_13 where
| exLUL_16 of layout[R, N]

#[program]
inductive existsLLU_12 where


#[program]
inductive existsLLL_11 where
| exLLL_14 of layout[R, N]

#[program]
inductive singU_20 where
| justU_23 of layout[R]

#[program]
inductive singL_19 where
| justL_22 of layout[R]

#[program]
inductive prodUUU_28 where
| pairUUU_31 of layout[R, R]

#[program]
inductive prodUUL_27 where
| pairUUL_30 of layout[R, R]

#[program]
inductive prodULU_26 where


#[program]
inductive prodULL_25 where
| pairULL_28 of layout[R, R]

#[program]
inductive prodLUU_24 where


#[program]
inductive prodLUL_23 where
| pairLUL_26 of layout[R, R]

#[program]
inductive prodLLU_22 where


#[program]
inductive prodLLL_21 where
| pairLLL_24 of layout[R, R]

#[program]
def exists_singUU_10 :=
  fun exists_sing_7173 ({A_7174}, {m_7175}, __7176) =>
    match __7176 with
    | exUUU_21 m_7177 pf_7178 =>
      match {NULL} with
      | reflU_13  => (justU_23 m_7177)
      end
    end

#[program]
def exists_singUL_9 :=
  fun exists_sing_7179 ({A_7180}, {m_7181}, __7182) =>
    match __7182 with
    | exUUL_20 m_7183 pf_7184 =>
      match {NULL} with
      | reflU_13  => (justU_23 m_7183)
      end
    end

#[program]
def exists_singLU_8 :=
  fun exists_sing_7185 ({A_7186}, {m_7187}, __7188) => match __7188 with
                                                       
                                                       end

#[program]
def exists_singLL_7 :=
  fun exists_sing_7189 ({A_7190}, {m_7191}, __7192) =>
    match __7192 with
    | exLUL_16 m_7193 pf_7194 =>
      match {NULL} with
      | reflL_12  => (justL_22 m_7193)
      end
    end

#[program]
def sing_existsUU_14 :=
  fun sing_exists_7195 ({A_7196}, {m_7197}, __7198) =>
    match __7198 with
    | justU_23 m_7199 => (exUUU_21 m_7199 NULL)
    end

#[program]
def sing_existsUL_13 :=
  fun sing_exists_7200 ({A_7201}, {m_7202}, __7203) =>
    match __7203 with
    | justU_23 m_7204 => (exUUL_20 m_7204 NULL)
    end

#[program]
def sing_existsLL_11 :=
  fun sing_exists_7205 ({A_7206}, {m_7207}, __7208) =>
    match __7208 with
    | justL_22 m_7209 => (exLUL_16 m_7209 NULL)
    end

#[logical]
def sing_exists_equiv1UU_18 := NULL

#[logical]
def sing_exists_equiv1UL_17 := NULL

#[logical]
def sing_exists_equiv1LL_15 := NULL

#[logical]
def sing_exists_equiv2UU_22 := NULL

#[logical]
def sing_exists_equiv2UL_21 := NULL

#[logical]
def sing_exists_equiv2LL_19 := NULL

#[program]
def sing_doubleUU_26 :=
  fun sing_double_7210 ({A_7211}, {m_7212}, __7213, __7214) =>
    match __7213 with
    | justU_23 m_7215 =>
      match __7214 with
      | justU_23 m_7216 => (pairUUU_31 m_7215 m_7216)
      end
    end

#[program]
def sing_doubleUL_25 :=
  fun sing_double_7217 ({A_7218}, {m_7219}, __7220, __7221) =>
    match __7220 with
    | justU_23 m_7222 =>
      match __7221 with
      | justU_23 m_7223 => (pairUUL_30 m_7222 m_7223)
      end
    end

#[program]
def sing_doubleLL_23 :=
  fun sing_double_7224 ({A_7225}, {m_7226}, __7227, __7228) =>
    match __7227 with
    | justL_22 m_7229 =>
      match __7228 with
      | justL_22 m_7230 => (pairLLL_24 m_7229 m_7230)
      end
    end

#[program]
def pattern_expansion_6 :=
  fun pattern_expansion_7231 ({A_7232}, __7233) =>
    match __7233 with
    | nil_6  => tt_1
    | cons_7 hd_7234 tl_7235 =>
      match tl_7235 with
      | nil_6  => tt_1 | cons_7 hd_7236 tl_7237 => tt_1
      end
    end

-----------------------------------------

#[program]
inductive unit_1 where
| tt_1 of layout[]

#[program]
inductive bool_2 where
| true_2 of layout[]
| false_3 of layout[]

#[program]
inductive nat_3 where
| zero_4 of layout[]
| succ_5 of layout[R]

#[program]
inductive list_4 where
| nil_6 of layout[]
| cons_7 of layout[R, R]

#[logical]
inductive eqU_10 where
| reflU_13 of layout[]

#[logical]
inductive eqL_9 where
| reflL_12 of layout[]

#[program]
inductive existsUUU_18 where
| exUUU_21 of layout[R, N]

#[program]
inductive existsUUL_17 where
| exUUL_20 of layout[R, N]

#[program]
inductive existsULU_16 where
| exULU_19 of layout[R, N]

#[program]
inductive existsULL_15 where
| exULL_18 of layout[R, N]

#[program]
inductive existsLUU_14 where


#[program]
inductive existsLUL_13 where
| exLUL_16 of layout[R, N]

#[program]
inductive existsLLU_12 where


#[program]
inductive existsLLL_11 where
| exLLL_14 of layout[R, N]

#[program]
inductive singU_20 where
| justU_23 of layout[R]

#[program]
inductive singL_19 where
| justL_22 of layout[R]

#[program]
inductive prodUUU_28 where
| pairUUU_31 of layout[R, R]

#[program]
inductive prodUUL_27 where
| pairUUL_30 of layout[R, R]

#[program]
inductive prodULU_26 where


#[program]
inductive prodULL_25 where
| pairULL_28 of layout[R, R]

#[program]
inductive prodLUU_24 where


#[program]
inductive prodLUL_23 where
| pairLUL_26 of layout[R, R]

#[program]
inductive prodLLU_22 where


#[program]
inductive prodLLL_21 where
| pairLLL_24 of layout[R, R]

#[program]
def exists_singUU_10 :=
  fun exists_sing_7303 ({A_7304}, {m_7305}, __7306) =>
    match __7306 with
    | exUUU_21 m_7307 pf_7308 => (justU_23 m_7307)
    end

#[program]
def exists_singUL_9 :=
  fun exists_sing_7309 ({A_7310}, {m_7311}, __7312) =>
    match __7312 with
    | exUUL_20 m_7313 pf_7314 => (justU_23 m_7313)
    end

#[program]
def exists_singLU_8 :=
  fun exists_sing_7315 ({A_7316}, {m_7317}, __7318) => !!

#[program]
def exists_singLL_7 :=
  fun exists_sing_7319 ({A_7320}, {m_7321}, __7322) =>
    match __7322 with
    | exLUL_16 m_7323 pf_7324 => (justL_22 m_7323)
    end

#[program]
def sing_existsUU_14 :=
  fun sing_exists_7325 ({A_7326}, {m_7327}, __7328) =>
    match __7328 with
    | justU_23 m_7329 => (exUUU_21 m_7329 NULL)
    end

#[program]
def sing_existsUL_13 :=
  fun sing_exists_7330 ({A_7331}, {m_7332}, __7333) =>
    match __7333 with
    | justU_23 m_7334 => (exUUL_20 m_7334 NULL)
    end

#[program]
def sing_existsLL_11 :=
  fun sing_exists_7335 ({A_7336}, {m_7337}, __7338) =>
    match __7338 with
    | justL_22 m_7339 => (exLUL_16 m_7339 NULL)
    end

#[logical]
def sing_exists_equiv1UU_18 := NULL

#[logical]
def sing_exists_equiv1UL_17 := NULL

#[logical]
def sing_exists_equiv1LL_15 := NULL

#[logical]
def sing_exists_equiv2UU_22 := NULL

#[logical]
def sing_exists_equiv2UL_21 := NULL

#[logical]
def sing_exists_equiv2LL_19 := NULL

#[program]
def sing_doubleUU_26 :=
  fun sing_double_7340 ({A_7341}, {m_7342}, __7343, __7344) =>
    match __7343 with
    | justU_23 m_7345 =>
      match __7344 with
      | justU_23 m_7346 => (pairUUU_31 m_7345 m_7346)
      end
    end

#[program]
def sing_doubleUL_25 :=
  fun sing_double_7347 ({A_7348}, {m_7349}, __7350, __7351) =>
    match __7350 with
    | justU_23 m_7352 =>
      match __7351 with
      | justU_23 m_7353 => (pairUUL_30 m_7352 m_7353)
      end
    end

#[program]
def sing_doubleLL_23 :=
  fun sing_double_7354 ({A_7355}, {m_7356}, __7357, __7358) =>
    match __7357 with
    | justL_22 m_7359 =>
      match __7358 with
      | justL_22 m_7360 => (pairLLL_24 m_7359 m_7360)
      end
    end

#[program]
def pattern_expansion_6 :=
  fun pattern_expansion_7361 ({A_7362}, __7363) =>
    match __7363 with
    | nil_6  => tt_1
    | cons_7 hd_7364 tl_7365 =>
      match tl_7365 with
      | nil_6  => tt_1 | cons_7 hd_7366 tl_7367 => tt_1
      end
    end

-----------------------------------------

