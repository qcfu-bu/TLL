[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase
         ((TBase (Type U)), [(DConstr ("tt", (TBase (Id ("unit", I))), []))]))
      ));
   view = []};
  Inductive {name = "bool"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DConstr ("true", (TBase (Id ("bool", I))), []));
             (DConstr ("false", (TBase (Id ("bool", I))), []))]))
       ));
    view = []};
  Inductive {name = "nat"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DConstr ("zero", (TBase (Id ("nat", I))), []));
             (DConstr ("succ",
                (TBind (R, (Id ("nat", I)),
                   (Binder ("pred", (TBase (Id ("nat", I))))))),
                [E]))
             ]))
       ));
    view = []};
  Inductive {name = "eq"; relv = N;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Id ("A", I)),
                (Binder ("m",
                   (PBase
                      ((TBind (R, (Id ("A", I)),
                          (Binder ("_", (TBase (Type U)))))),
                       [(DConstr ("refl",
                           (TBase
                              (App
                                 [(Id ("eq", I)); (Id ("m", I));
                                   (Id ("m", I))])),
                           []))
                         ]))
                   ))
                ))
             ))
          ))
       ));
    view = [I; E]};
  Inductive {name = "exists"; relv = R;
    body =
    (Binder (["s"; "r"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind (
                (Pi (R, U, (Id ("A", I)), (Binder ("_", (Type (SId "r")))))),
                (Binder ("B",
                   (PBase
                      ((TBase (Type U)),
                       [(DConstr ("ex",
                           (TBind (R, (Id ("A", I)),
                              (Binder ("m",
                                 (TBind (N,
                                    (App [(Id ("B", I)); (Id ("m", I))]),
                                    (Binder ("pf",
                                       (TBase
                                          (App
                                             [(Id ("exists", E));
                                               (Id ("A", I)); (Id ("B", I))]))
                                       ))
                                    ))
                                 ))
                              )),
                           [E; E]))
                         ]))
                   ))
                ))
             ))
          ))
       ));
    view = [I; E]};
  Inductive {name = "sing"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id ("A", I)),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DConstr ("just",
                     (TBind (R, (Id ("A", I)),
                        (Binder ("m",
                           (TBase (App [(Id ("sing", I)); (Id ("m", I))]))))
                        )),
                     [E]))
                   ]))
             ))
          ))
       ));
    view = [I]};
  Inductive {name = "list"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBase (Type (SId "s"))),
                 [(DConstr ("nil",
                     (TBase (App [(Id ("list", I)); (Id ("A", I))])), 
                     []));
                   (DConstr ("cons",
                      (TBind (R, (Id ("A", I)),
                         (Binder ("hd",
                            (TBind (R,
                               (App [(Id ("list", I)); (Id ("A", I))]),
                               (Binder ("tl",
                                  (TBase
                                     (App [(Id ("list", I)); (Id ("A", I))]))
                                  ))
                               ))
                            ))
                         )),
                      [E; E]))
                   ]))
             ))
          ))
       ));
    view = [E]};
  Inductive {name = "vec"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id ("nat", I)),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DConstr ("vnil",
                     (TBase
                        (App
                           [(Id ("vec", I)); (Id ("A", I)); (Id ("zero", I))])),
                     []));
                   (DConstr ("vcons",
                      (TBind (N, (Id ("nat", I)),
                         (Binder ("n",
                            (TBind (R, (Id ("A", I)),
                               (Binder ("hd",
                                  (TBind (R,
                                     (App
                                        [(Inst ("vec", [(SId "s")], I));
                                          (Id ("A", I)); (Id ("n", I))]),
                                     (Binder ("tl",
                                        (TBase
                                           (App
                                              [(Id ("vec", I));
                                                (Id ("A", I));
                                                (App
                                                   [(Id ("succ", I));
                                                     (Id ("n", I))])
                                                ]))
                                        ))
                                     ))
                                  ))
                               ))
                            ))
                         )),
                      [I; E; E]))
                   ]))
             ))
          ))
       ));
    view = [E]};
  Definition {name = "rwl"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("A", I)),
                    (Binder ("m",
                       (Pi (N, U, (Id ("A", I)),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id ("A", I)),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (N, U,
                                      (App
                                         [(Id ("eq", I)); (Id ("m", I));
                                           (Id ("n", I))]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App
                                               [(Id ("B", I)); (Id ("m", I))]),
                                            (Binder ("_",
                                               (App
                                                  [(Id ("B", I));
                                                    (Id ("n", I))])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwl"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id ("x", I))))]
              )),
           [I; I; I; E])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("A", I)),
                 (Binder ("m",
                    (Pi (N, U, (Id ("A", I)),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id ("A", I)),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (N, U,
                                   (App
                                      [(Id ("eq", I)); (Id ("m", I));
                                        (Id ("n", I))]),
                                   (Binder ("_",
                                      (Pi (R, U,
                                         (App [(Id ("B", I)); (Id ("m", I))]),
                                         (Binder ("_",
                                            (App
                                               [(Id ("B", I)); (Id ("n", I))])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; I; E]};
  Definition {name = "rwr"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("A", I)),
                    (Binder ("m",
                       (Pi (N, U, (Id ("A", I)),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id ("A", I)),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (N, U,
                                      (App
                                         [(Id ("eq", I)); (Id ("m", I));
                                           (Id ("n", I))]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App
                                               [(Id ("B", I)); (Id ("n", I))]),
                                            (Binder ("_",
                                               (App
                                                  [(Id ("B", I));
                                                    (Id ("m", I))])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwr"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id ("x", I))))]
              )),
           [I; I; I; E])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("A", I)),
                 (Binder ("m",
                    (Pi (N, U, (Id ("A", I)),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id ("A", I)),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (N, U,
                                   (App
                                      [(Id ("eq", I)); (Id ("m", I));
                                        (Id ("n", I))]),
                                   (Binder ("_",
                                      (Pi (R, U,
                                         (App [(Id ("B", I)); (Id ("n", I))]),
                                         (Binder ("_",
                                            (App
                                               [(Id ("B", I)); (Id ("m", I))])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; I; E]};
  Definition {name = "congr"; relv = N;
    body =
    (Binder (["s"; "r"; "t"],
       ((Fun (
           (Pi (R, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (R, U, (Type (SId "r")),
                    (Binder ("B",
                       (Pi (R, U, (Id ("A", I)),
                          (Binder ("m",
                             (Pi (R, U, (Id ("A", I)),
                                (Binder ("n",
                                   (Pi (R, U,
                                      (Pi (R, (SId "t"), (Id ("A", I)),
                                         (Binder ("_", (Id ("B", I)))))),
                                      (Binder ("f",
                                         (Pi (R, U,
                                            (App
                                               [(Id ("eq", I));
                                                 (Id ("m", I)); (Id ("n", I))
                                                 ]),
                                            (Binder ("_",
                                               (App
                                                  [(Id ("eq", I));
                                                    (App
                                                       [(Id ("f", I));
                                                         (Id ("m", I))]);
                                                    (App
                                                       [(Id ("f", I));
                                                         (Id ("n", I))])
                                                    ])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "congr"),
              [([(PId "A"); (PId "B"); (PId "m"); (PId "n"); (PId "f");
                  (PId "refl")],
                (Some (Id ("refl", I))))]
              )),
           [I; I; I; I; E])),
        (Pi (R, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (R, U, (Type (SId "r")),
                 (Binder ("B",
                    (Pi (R, U, (Id ("A", I)),
                       (Binder ("m",
                          (Pi (R, U, (Id ("A", I)),
                             (Binder ("n",
                                (Pi (R, U,
                                   (Pi (R, (SId "t"), (Id ("A", I)),
                                      (Binder ("_", (Id ("B", I)))))),
                                   (Binder ("f",
                                      (Pi (R, U,
                                         (App
                                            [(Id ("eq", I)); (Id ("m", I));
                                              (Id ("n", I))]),
                                         (Binder ("_",
                                            (App
                                               [(Id ("eq", I));
                                                 (App
                                                    [(Id ("f", I));
                                                      (Id ("m", I))]);
                                                 (App
                                                    [(Id ("f", I));
                                                      (Id ("n", I))])
                                                 ])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; I; I; E]};
  Definition {name = "hd_vec"; relv = R;
    body =
    (Binder ([],
       ((Fun (
           (Pi (N, U, (Type U),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Id ("vec", I)); (Id ("A", I));
                               (App [(Id ("succ", I)); (Id ("n", I))])]),
                          (Binder ("_", (Id ("A", I))))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec"),
              [([(PId "A"); (PId "n");
                  (PConstr ("vcons", [(PId "_"); (PId "hd"); (PId "_")]))],
                (Some (Id ("hd", I))))]
              )),
           [I; I])),
        (Pi (N, U, (Type U),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Id ("vec", I)); (Id ("A", I));
                            (App [(Id ("succ", I)); (Id ("n", I))])]),
                       (Binder ("_", (Id ("A", I))))))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I]};
  Definition {name = "hd_vec2"; relv = R;
    body =
    (Binder ([],
       ((Fun (
           (Pi (N, U, (Type U),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Id ("vec", I)); (Id ("A", I));
                               (App [(Id ("succ", I)); (Id ("n", I))])]),
                          (Binder ("xs", IMeta))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec2"),
              [([(PId "A"); (PId "n"); (PId "xs")],
                (Some (Match (
                         [(N, IMeta, (Some ("n0", IMeta)));
                           (R, (Id ("xs", I)),
                            (Some ("_",
                                   (App
                                      [(Id ("vec", I)); (Id ("A", I));
                                        (App
                                           [(Id ("succ", I)); (Id ("n0", I))])
                                        ]))))
                           ],
                         None,
                         [([(PId "_"); (PId "vnil")], None);
                           ([(PId "_");
                              (PConstr ("vcons",
                                 [(PId "_"); (PId "hd"); (PId "_")]))
                              ],
                            (Some (Id ("hd", I))))
                           ]
                         ))))
                ]
              )),
           [I; I; E])),
        (Pi (N, U, (Type U),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Id ("vec", I)); (Id ("A", I));
                            (App [(Id ("succ", I)); (Id ("n", I))])]),
                       (Binder ("xs", IMeta))))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; E]};
  Definition {name = "hd_vec3"; relv = R;
    body =
    (Binder ([],
       ((Fun (
           (Pi (N, U, (Type U),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Id ("vec", I)); (Id ("A", I));
                               (App [(Id ("succ", I)); (Id ("n", I))])]),
                          (Binder ("xs", IMeta))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec3"),
              [([(PId "A"); (PId "n"); (PId "xs")],
                (Some (Match ([(R, (Id ("xs", I)), None)], None,
                         [([(PId "vnil")], None);
                           ([(PConstr ("vcons",
                                [(PId "_"); (PId "hd"); (PId "_")]))
                              ],
                            (Some (Id ("hd", I))))
                           ]
                         ))))
                ]
              )),
           [I; I; E])),
        (Pi (N, U, (Type U),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Id ("vec", I)); (Id ("A", I));
                            (App [(Id ("succ", I)); (Id ("n", I))])]),
                       (Binder ("xs", IMeta))))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; E]};
  Definition {name = "vlength"; relv = R;
    body =
    (Binder ([],
       ((Fun (
           (Pi (N, U, (Type U),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Id ("vec", I)); (Id ("A", I)); (Id ("n", I))]),
                          (Binder ("_",
                             (App
                                [(Id ("exists", I));
                                  (Fun (
                                     (Pi (R, U, IMeta, (Binder ("x", IMeta))
                                        )),
                                     (Binder (None,
                                        [([(PId "x")],
                                          (Some (App
                                                   [(Id ("eq", I));
                                                     (Id ("x", I));
                                                     (Id ("n", I))])))
                                          ]
                                        )),
                                     []))
                                  ])
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "vlength"),
              [([(PId "A"); (PId "n"); (PId "vnil")],
                (Some (App
                         [(Id ("ex", I)); (Id ("zero", I)); (Id ("refl", I))])));
                ([(PId "A"); (PId "n");
                   (PConstr ("vcons", [(PId "_"); (PId "_"); (PId "tl")]))],
                 (Some (Match (
                          [(R, (App [(Id ("vlength", I)); (Id ("tl", I))]),
                            None)],
                          None,
                          [([(PConstr ("ex", [(PId "n"); (PId "pf")]))],
                            (Some (App
                                     [(Id ("ex", I));
                                       (App [(Id ("succ", I)); (Id ("n", I))]);
                                       (App
                                          [(Id ("congr", I));
                                            (Fun (
                                               (Pi (R, U, IMeta,
                                                  (Binder ("x", IMeta)))),
                                               (Binder (None,
                                                  [([(PId "x")],
                                                    (Some (App
                                                             [(Id ("succ", I
                                                                 ));
                                                               (Id ("x", I))])))
                                                    ]
                                                  )),
                                               []));
                                            (Id ("pf", I))])
                                       ])))
                            ]
                          ))))
                ]
              )),
           [I; I])),
        (Pi (N, U, (Type U),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App [(Id ("vec", I)); (Id ("A", I)); (Id ("n", I))]),
                       (Binder ("_",
                          (App
                             [(Id ("exists", I));
                               (Fun (
                                  (Pi (R, U, IMeta, (Binder ("x", IMeta)))),
                                  (Binder (None,
                                     [([(PId "x")],
                                       (Some (App
                                                [(Id ("eq", I));
                                                  (Id ("x", I));
                                                  (Id ("n", I))])))
                                       ]
                                     )),
                                  []))
                               ])
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I]};
  Definition {name = "xs"; relv = R;
    body =
    (Binder ([],
       ((App [(Id ("vcons", I)); (Id ("zero", I)); (Id ("vnil", I))]), IMeta)
       ));
    view = []};
  Definition {name = "x"; relv = R;
    body = (Binder ([], ((App [(Id ("hd_vec", I)); (Id ("xs", I))]), IMeta)));
    view = []};
  Definition {name = "y"; relv = R;
    body =
    (Binder ([], ((App [(Id ("hd_vec2", I)); (Id ("xs", I))]), IMeta)));
    view = []};
  Definition {name = "z"; relv = R;
    body =
    (Binder ([], ((App [(Id ("hd_vec3", I)); (Id ("xs", I))]), IMeta)));
    view = []}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_180 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_181› (A_182 : Type‹s_181›) (m_183 : A_182):
  A_182 -> U
where
| refl_6 : (eq_4‹??_1› ?_1[0;0] m_183 m_183)

#[program]
inductive exists_5‹s_185,r_186› (A_187 : Type‹s_185›) (B_188 : 
A_187 -> Type‹r_186›): U where
| ex_7
    (m_190 : A_187) {pf_191 : ((B_188) m_190)}
    : (exists_5‹??_2,??_3› A_187 B_188)

#[program]
inductive sing_6‹s_192› (A_193 : Type‹s_192›):
  A_193 -> Type‹s_192›
where
| just_8 (m_195 : A_193) : (sing_6‹??_4› ?_2[0;0] m_195)

#[program]
inductive list_7‹s_196› (A_197 : Type‹s_196›): Type‹s_196› where
| nil_9 : (list_7‹??_5› A_197)
| cons_10
    (hd_198 : A_197) (tl_199 : (list_7‹??_6› A_197))
    : (list_7‹??_7› A_197)

#[program]
inductive vec_8‹s_200› (A_201 : Type‹s_200›):
  nat_3 -> Type‹s_200›
where
| vnil_11 : (vec_8‹??_8› A_201 zero_4)
| vcons_12
    {n_203 : nat_3} (hd_204 : A_201)
    (tl_205 : (vec_8‹s_200› A_201 n_203))
    : (vec_8‹??_9› A_201 (succ_5‹› n_203))

#[program]
def rwl_1‹s_206,r_207› :
  ∀ {A_208 : Type‹s_206›} ->
    ∀ {m_209 : A_208} ->
      ∀ {n_210 : A_208} ->
        ∀ {B_211 : A_208 -> Type‹r_207›} ->
          {(eq_4‹??_11› ?_4[0;0] m_209 n_210)} ->
            ((B_211) m_209) -> ((B_211) n_210)
:=
  function rwl_215 :
    ∀ {A_216 : Type‹s_206›} ->
      ∀ {m_217 : A_216} ->
        ∀ {n_218 : A_216} ->
          ∀ {B_219 : A_216 -> Type‹r_207›} ->
            {(eq_4‹??_10› ?_3[0;0] m_217 n_218)} ->
              ((B_219) m_217) -> ((B_219) n_218)
  | A_223 m_224 n_225 B_226 refl_6 x_227 => x_227

#[program]
def rwr_2‹s_228,r_229› :
  ∀ {A_230 : Type‹s_228›} ->
    ∀ {m_231 : A_230} ->
      ∀ {n_232 : A_230} ->
        ∀ {B_233 : A_230 -> Type‹r_229›} ->
          {(eq_4‹??_13› ?_6[0;0] m_231 n_232)} ->
            ((B_233) n_232) -> ((B_233) m_231)
:=
  function rwr_237 :
    ∀ {A_238 : Type‹s_228›} ->
      ∀ {m_239 : A_238} ->
        ∀ {n_240 : A_238} ->
          ∀ {B_241 : A_238 -> Type‹r_229›} ->
            {(eq_4‹??_12› ?_5[0;0] m_239 n_240)} ->
              ((B_241) n_240) -> ((B_241) m_239)
  | A_245 m_246 n_247 B_248 refl_6 x_249 => x_249

#[logical]
def congr_3‹s_250,r_251,t_252› :
  ∀ (A_253 : Type‹s_250›) ->
    ∀ (B_254 : Type‹r_251›) ->
      ∀ (m_255 : A_253) ->
        ∀ (n_256 : A_253) ->
          ∀ (f_257 : forall‹t_252›(__258 : A_253), B_254) ->
            (eq_4‹??_17› ?_11[0;0] m_255 n_256) ->
              (eq_4‹??_18› ?_12[0;0] ((f_257) m_255) ((f_257) n_256))
:=
  function congr_260 :
    ∀ (A_261 : Type‹s_250›) ->
      ∀ (B_262 : Type‹r_251›) ->
        ∀ (m_263 : A_261) ->
          ∀ (n_264 : A_261) ->
            ∀ (f_265 : forall‹t_252›(__266 : A_261), B_262) ->
              (eq_4‹??_14› ?_7[0;0] m_263 n_264) ->
                (eq_4‹??_15› ?_8[0;0] ((f_265) m_263) ((f_265) n_264))
  | A_268 B_269 m_270 n_271 f_272 refl_6 =>
    (refl_6‹??_16› ?_9[0;0] ?_10[0;0])

#[program]
def hd_vec_4‹› :
  ∀ {A_273 : U} ->
    ∀ {n_274 : nat_3} ->
      (vec_8‹??_20› A_273 (succ_5‹› n_274)) -> A_273
:=
  function hd_vec_276 :
    ∀ {A_277 : U} ->
      ∀ {n_278 : nat_3} ->
        (vec_8‹??_19› A_277 (succ_5‹› n_278)) -> A_277
  | A_280 n_281 (vcons_12 _282 hd_283 _284) => hd_283

#[program]
def hd_vec2_5‹› :
  ∀ {A_285 : U} ->
    ∀ {n_286 : nat_3} ->
      (vec_8‹??_23› A_285 (succ_5‹› n_286)) -> ?_17[0;0]
:=
  function hd_vec2_288 :
    ∀ {A_289 : U} ->
      ∀ {n_290 : nat_3} ->
        (vec_8‹??_21› A_289 (succ_5‹› n_290)) -> ?_13[0;0]
  | A_292 n_293 xs_294 =>
    match ?_14[0;0], xs_294 in
      ∀ {n0_295 : ?_15[0;0]} -o
        (vec_8‹??_22› A_292 (succ_5‹› n0_295)) -o ?_16[0;0]
    with
    | _297, vnil_11 =>
    | _298, (vcons_12 _299 hd_300 _301) => hd_300

#[program]
def hd_vec3_6‹› :
  ∀ {A_302 : U} ->
    ∀ {n_303 : nat_3} ->
      (vec_8‹??_25› A_302 (succ_5‹› n_303)) -> ?_21[0;0]
:=
  function hd_vec3_305 :
    ∀ {A_306 : U} ->
      ∀ {n_307 : nat_3} ->
        (vec_8‹??_24› A_306 (succ_5‹› n_307)) -> ?_18[0;0]
  | A_309 n_310 xs_311 =>
    match xs_311 in ?_19[0;0] -o ?_20[0;0] with
    | vnil_11 =>
    | (vcons_12 _313 hd_314 _315) => hd_314

#[program]
def vlength_7‹› :
  ∀ {A_316 : U} ->
    ∀ {n_317 : nat_3} ->
      (vec_8‹??_38› A_316 n_317) ->
        (exists_5‹??_40,??_41›
          ?_45[0;0]
          function _319 : ?_42[0;0] -> ?_43[0;0]
          | x_321 => (eq_4‹??_39› ?_44[0;0] x_321 n_317))
:=
  function vlength_322 :
    ∀ {A_323 : U} ->
      ∀ {n_324 : nat_3} ->
        (vec_8‹??_26› A_323 n_324) ->
          (exists_5‹??_28,??_29›
            ?_25[0;0]
            function _326 : ?_22[0;0] -> ?_23[0;0]
            | x_328 => (eq_4‹??_27› ?_24[0;0] x_328 n_324))
  | A_329 n_330 vnil_11 =>
    (ex_7‹??_31,??_32›
      ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0]))
  | A_331 n_332 (vcons_12 _333 _334 tl_335) =>
    match ((vlength_322) ?_31[0;0] ?_30[0;0] tl_335) in
      ?_32[0;0] -o ?_33[0;0]
    with
    | (ex_7 n_337 pf_338) =>
      (ex_7‹??_36,??_37›
        ?_40[0;0] ?_41[0;0] (succ_5‹› n_337)
        ((congr_3‹??_33,??_34,??_35›)
          ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
          function _339 : ?_34[0;0] -> ?_35[0;0]
          | x_341 => (succ_5‹› x_341) pf_338))

#[program]
def xs_8‹› : ?_49[0;0] :=
  (vcons_12‹??_43›
    ?_48[0;0] ?_47[0;0] zero_4 (vnil_11‹??_42› ?_46[0;0]))

#[program]
def x_9‹› : ?_52[0;0] := ((hd_vec_4) ?_51[0;0] ?_50[0;0] xs_8)

#[program]
def y_10‹› : ?_55[0;0] := ((hd_vec2_5) ?_54[0;0] ?_53[0;0] xs_8)

#[program]
def z_11‹› : ?_58[0;0] := ((hd_vec3_6) ?_57[0;0] ?_56[0;0] xs_8)

-----------------------------------------

inductive-------------------------
infer_tm(unit_1)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(bool_2)
infer_tm(bool_2)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(nat_3)
infer_tm(nat_3)
infer_tm(nat_3)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_344›)
infer_tm(A_345)
infer_tm(A_345)
infer_tm(Type‹s_348›)
infer_tm(A_349)
infer_tm((eq_4‹??_1› ?_1[0;0] m_350 m_350))
check_tm( ?_1[0;0], Type‹??_1›)
check_tm( m_350, ?_1[1;2])
infer_tm(m_350)
assert_equal1( ?_1[1;2], A_349)
assert_equal1_extend( ?_1[1;2], A_349)
check_tm( m_350, ?_1[1;2])
infer_tm(m_350)
assert_equal1( ?_1[1;2], A_349)
assert_equal1_extend( ?_1[1;2], A_349)
simpl_tm ~expand:false( ?_1[1;2], A_349)
simpl_tm ~expand:false( A_349, A_349)
assert_equal1( A_349, ?_1[1;2])
assert_equal1_extend( A_349, ?_1[1;2])
assert_equal1( m_350, m_350)
assert_equal1_ok( m_350, m_350)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    ?_1 <= A_356
    
  |}
  eqns {|
    equal_tm? (A_349, ?_1[1;2]);
    equal_sort? (s_348, ??_1)
  |}
end_dump
simpl_tm ~expand:false( A_349, A_349)
attempt_delay(?_1[1;2] : Type‹??_1›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹s_348›)
check_tm( A_349, Type‹s_348›)
infer_tm(A_349)
assert_equal1( Type‹s_348›, Type‹s_348›)
assert_equal1_ok( Type‹s_348›, Type‹s_348›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_377›)
infer_tm(A_379 -> Type‹r_378›)
infer_tm(A_379)
infer_tm(Type‹r_378›)
infer_tm(Type‹s_383›)
infer_tm(A_385 -> Type‹r_384›)
infer_tm(A_385)
infer_tm(Type‹r_384›)
infer_tm(A_385)
infer_tm(((B_386) m_389))
infer_tm(B_386)
check_tm( m_389, A_385)
infer_tm(m_389)
assert_equal1( A_385, A_385)
assert_equal1_ok( A_385, A_385)
infer_tm((exists_5‹??_2,??_3› A_385 B_386))
check_tm( A_385, Type‹??_2›)
infer_tm(A_385)
assert_equal1( Type‹??_2›, Type‹s_383›)
assert_equal1_extend( Type‹??_2›, Type‹s_383›)
check_tm( B_386, A_385 -> Type‹??_3›)
infer_tm(B_386)
assert_equal1( A_385 -> Type‹??_3›, A_385 -> Type‹r_384›)
assert_equal1_extend( A_385 -> Type‹??_3›, A_385 -> Type‹r_384›)
simpl_tm ~expand:false( A_385 -> Type‹??_3›, A_385 -> Type‹r_384›)
simpl_tm ~expand:false( A_385, A_385)
simpl_tm ~expand:false( Type‹??_3›, Type‹r_384›)
simpl_tm ~expand:false( Type‹??_2›, Type‹s_383›)
assert_equal1( A_385, A_385)
assert_equal1_ok( A_385, A_385)
assert_equal1( B_386, B_386)
assert_equal1_ok( B_386, B_386)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_406
    ??_2 <= s_408
    ??_3 <= r_409
    
  |}
  imeta_meta {|
    ?_1 <= A_413
    
  |}
  eqns {|
    equal_sort? (r_384, ??_3);
    equal_sort? (s_383, ??_2)
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_441›)
infer_tm(A_442)
infer_tm(Type‹s_444›)
infer_tm(A_445)
infer_tm((sing_6‹??_4› ?_2[0;0] m_446))
check_tm( ?_2[0;0], Type‹??_4›)
check_tm( m_446, ?_2[1;2])
infer_tm(m_446)
assert_equal1( ?_2[1;2], A_445)
assert_equal1_extend( ?_2[1;2], A_445)
simpl_tm ~expand:false( ?_2[1;2], A_445)
assert_equal1( A_445, ?_2[1;2])
assert_equal1_extend( A_445, ?_2[1;2])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_447
    ??_2 <= s_449
    ??_3 <= r_450
    
  |}
  imeta_meta {|
    ?_1 <= A_454
    ?_2 <= A_457
    
  |}
  eqns {|
    equal_tm? (A_445, ?_2[1;2]);
    equal_sort? (s_444, ??_4)
  |}
end_dump
simpl_tm ~expand:false( A_445, A_445)
attempt_delay(?_2[1;2] : Type‹??_4›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹s_444›)
check_tm( A_445, Type‹s_444›)
infer_tm(A_445)
assert_equal1( Type‹s_444›, Type‹s_444›)
assert_equal1_ok( Type‹s_444›, Type‹s_444›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_479›)
infer_tm(Type‹s_481›)
infer_tm((list_7‹??_5› A_482))
check_tm( A_482, Type‹??_5›)
infer_tm(A_482)
assert_equal1( Type‹??_5›, Type‹s_481›)
assert_equal1_extend( Type‹??_5›, Type‹s_481›)
simpl_tm ~expand:false( Type‹??_5›, Type‹s_481›)
assert_equal1( A_482, A_482)
assert_equal1_ok( A_482, A_482)
infer_tm(Type‹s_483›)
infer_tm(A_484)
infer_tm((list_7‹??_6› A_484))
check_tm( A_484, Type‹??_6›)
infer_tm(A_484)
assert_equal1( Type‹??_6›, Type‹s_483›)
assert_equal1_extend( Type‹??_6›, Type‹s_483›)
simpl_tm ~expand:false( Type‹??_6›, Type‹s_483›)
infer_tm((list_7‹??_7› A_484))
check_tm( A_484, Type‹??_7›)
infer_tm(A_484)
assert_equal1( Type‹??_7›, Type‹s_483›)
assert_equal1_extend( Type‹??_7›, Type‹s_483›)
simpl_tm ~expand:false( Type‹??_7›, Type‹s_483›)
assert_equal1( A_484, A_484)
assert_equal1_ok( A_484, A_484)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_487
    ??_2 <= s_489
    ??_3 <= r_490
    ??_4 <= s_492
    ??_5 <= s_493
    ??_6 <= s_494
    ??_7 <= s_495
    
  |}
  imeta_meta {|
    ?_1 <= A_498
    ?_2 <= A_501
    
  |}
  eqns {|
    equal_sort? (s_483, ??_7)
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_518›)
infer_tm(nat_3)
infer_tm(Type‹s_521›)
infer_tm((vec_8‹??_8› A_522 zero_4))
check_tm( A_522, Type‹??_8›)
infer_tm(A_522)
assert_equal1( Type‹??_8›, Type‹s_521›)
assert_equal1_extend( Type‹??_8›, Type‹s_521›)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_8›, Type‹s_521›)
assert_equal1( A_522, A_522)
assert_equal1_ok( A_522, A_522)
infer_tm(Type‹s_523›)
infer_tm(nat_3)
infer_tm(A_524)
infer_tm((vec_8‹s_523› A_524 n_525))
check_tm( A_524, Type‹s_523›)
infer_tm(A_524)
assert_equal1( Type‹s_523›, Type‹s_523›)
assert_equal1_ok( Type‹s_523›, Type‹s_523›)
check_tm( n_525, nat_3)
infer_tm(n_525)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
infer_tm((vec_8‹??_9› A_524 (succ_5‹› n_525)))
check_tm( A_524, Type‹??_9›)
infer_tm(A_524)
assert_equal1( Type‹??_9›, Type‹s_523›)
assert_equal1_extend( Type‹??_9›, Type‹s_523›)
check_tm( (succ_5‹› n_525), nat_3)
infer_tm((succ_5‹› n_525))
check_tm( n_525, nat_3)
infer_tm(n_525)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_9›, Type‹s_523›)
assert_equal1( A_524, A_524)
assert_equal1_ok( A_524, A_524)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_528
    ??_2 <= s_530
    ??_3 <= r_531
    ??_4 <= s_533
    ??_5 <= s_534
    ??_6 <= s_535
    ??_7 <= s_536
    ??_8 <= s_537
    ??_9 <= s_538
    
  |}
  imeta_meta {|
    ?_1 <= A_541
    ?_2 <= A_544
    
  |}
  eqns {|
    equal_sort? (s_523, ??_9)
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_571 : Type‹s_569›} ->
           ∀ {m_572 : A_571} ->
             ∀ {n_573 : A_571} ->
               ∀ {B_574 : A_571 -> Type‹r_570›} ->
                 {(eq_4‹??_11› ?_4[0;0] m_572 n_573)} ->
                   ((B_574) m_572) -> ((B_574) n_573))
infer_tm(Type‹s_569›)
infer_tm(∀ {m_579 : A_578} ->
           ∀ {n_580 : A_578} ->
             ∀ {B_581 : A_578 -> Type‹r_570›} ->
               {(eq_4‹??_11› ?_4[0;0] m_579 n_580)} ->
                 ((B_581) m_579) -> ((B_581) n_580))
infer_tm(A_578)
infer_tm(∀ {n_586 : A_578} ->
           ∀ {B_587 : A_578 -> Type‹r_570›} ->
             {(eq_4‹??_11› ?_4[0;0] m_585 n_586)} ->
               ((B_587) m_585) -> ((B_587) n_586))
infer_tm(A_578)
infer_tm(∀ {B_592 : A_578 -> Type‹r_570›} ->
           {(eq_4‹??_11› ?_4[0;0] m_585 n_591)} ->
             ((B_592) m_585) -> ((B_592) n_591))
infer_tm(A_578 -> Type‹r_570›)
infer_tm(A_578)
infer_tm(Type‹r_570›)
infer_tm({(eq_4‹??_11› ?_4[0;0] m_585 n_591)} ->
           ((B_596) m_585) -> ((B_596) n_591))
infer_tm((eq_4‹??_11› ?_4[0;0] m_585 n_591))
check_tm( ?_4[0;0], Type‹??_11›)
check_tm( m_585, ?_4[2;4])
infer_tm(m_585)
assert_equal1( ?_4[2;4], A_578)
assert_equal1_extend( ?_4[2;4], A_578)
check_tm( n_591, ?_4[2;4])
infer_tm(n_591)
assert_equal1( ?_4[2;4], A_578)
assert_equal1_extend( ?_4[2;4], A_578)
simpl_tm ~expand:false( ?_4[2;4], A_578)
simpl_tm ~expand:false( A_578, A_578)
infer_tm(((B_596) m_585) -> ((B_596) n_591))
infer_tm(((B_596) m_585))
infer_tm(B_596)
check_tm( m_585, A_578)
infer_tm(m_585)
assert_equal1( A_578, A_578)
assert_equal1_ok( A_578, A_578)
infer_tm(((B_596) n_591))
infer_tm(B_596)
check_tm( n_591, A_578)
infer_tm(n_591)
assert_equal1( A_578, A_578)
assert_equal1_ok( A_578, A_578)
check_tm(
  function rwl_612 :
    ∀ {A_613 : Type‹s_569›} ->
      ∀ {m_614 : A_613} ->
        ∀ {n_615 : A_613} ->
          ∀ {B_616 : A_613 -> Type‹r_570›} ->
            {(eq_4‹??_10› ?_3[0;0] m_614 n_615)} ->
              ((B_616) m_614) -> ((B_616) n_615)
  | A_620 m_621 n_622 B_623 refl_6 x_624 => x_624,
  ∀ {A_625 : Type‹s_569›} ->
    ∀ {m_626 : A_625} ->
      ∀ {n_627 : A_625} ->
        ∀ {B_628 : A_625 -> Type‹r_570›} ->
          {(eq_4‹??_11› ?_4[2;4] m_626 n_627)} ->
            ((B_628) m_626) -> ((B_628) n_627))
infer_tm(∀ {A_633 : Type‹s_569›} ->
           ∀ {m_634 : A_633} ->
             ∀ {n_635 : A_633} ->
               ∀ {B_636 : A_633 -> Type‹r_570›} ->
                 {(eq_4‹??_10› ?_3[0;0] m_634 n_635)} ->
                   ((B_636) m_634) -> ((B_636) n_635))
infer_tm(Type‹s_569›)
infer_tm(∀ {m_641 : A_640} ->
           ∀ {n_642 : A_640} ->
             ∀ {B_643 : A_640 -> Type‹r_570›} ->
               {(eq_4‹??_10› ?_3[0;0] m_641 n_642)} ->
                 ((B_643) m_641) -> ((B_643) n_642))
infer_tm(A_640)
infer_tm(∀ {n_648 : A_640} ->
           ∀ {B_649 : A_640 -> Type‹r_570›} ->
             {(eq_4‹??_10› ?_3[0;0] m_647 n_648)} ->
               ((B_649) m_647) -> ((B_649) n_648))
infer_tm(A_640)
infer_tm(∀ {B_654 : A_640 -> Type‹r_570›} ->
           {(eq_4‹??_10› ?_3[0;0] m_647 n_653)} ->
             ((B_654) m_647) -> ((B_654) n_653))
infer_tm(A_640 -> Type‹r_570›)
infer_tm(A_640)
infer_tm(Type‹r_570›)
infer_tm({(eq_4‹??_10› ?_3[0;0] m_647 n_653)} ->
           ((B_658) m_647) -> ((B_658) n_653))
infer_tm((eq_4‹??_10› ?_3[0;0] m_647 n_653))
check_tm( ?_3[0;0], Type‹??_10›)
check_tm( m_647, ?_3[2;4])
infer_tm(m_647)
assert_equal1( ?_3[2;4], A_640)
assert_equal1_extend( ?_3[2;4], A_640)
check_tm( n_653, ?_3[2;4])
infer_tm(n_653)
assert_equal1( ?_3[2;4], A_640)
assert_equal1_extend( ?_3[2;4], A_640)
simpl_tm ~expand:false( ?_3[2;4], A_640)
simpl_tm ~expand:false( A_640, A_640)
infer_tm(((B_658) m_647) -> ((B_658) n_653))
infer_tm(((B_658) m_647))
infer_tm(B_658)
check_tm( m_647, A_640)
infer_tm(m_647)
assert_equal1( A_640, A_640)
assert_equal1_ok( A_640, A_640)
infer_tm(((B_658) n_653))
infer_tm(B_658)
check_tm( n_653, A_640)
infer_tm(n_653)
assert_equal1( A_640, A_640)
assert_equal1_ok( A_640, A_640)
assert_equal1(
  ∀ {A_674 : Type‹s_569›} ->
    ∀ {m_675 : A_674} ->
      ∀ {n_676 : A_674} ->
        ∀ {B_677 : A_674 -> Type‹r_570›} ->
          {(eq_4‹??_11› ?_4[2;4] m_675 n_676)} ->
            ((B_677) m_675) -> ((B_677) n_676),
  ∀ {A_681 : Type‹s_569›} ->
    ∀ {m_682 : A_681} ->
      ∀ {n_683 : A_681} ->
        ∀ {B_684 : A_681 -> Type‹r_570›} ->
          {(eq_4‹??_10› ?_3[2;4] m_682 n_683)} ->
            ((B_684) m_682) -> ((B_684) n_683))
assert_equal1_extend(
  ∀ {A_726 : Type‹s_569›} ->
    ∀ {m_727 : A_726} ->
      ∀ {n_728 : A_726} ->
        ∀ {B_729 : A_726 -> Type‹r_570›} ->
          {(eq_4‹??_11› ?_4[2;4] m_727 n_728)} ->
            ((B_729) m_727) -> ((B_729) n_728),
  ∀ {A_733 : Type‹s_569›} ->
    ∀ {m_734 : A_733} ->
      ∀ {n_735 : A_733} ->
        ∀ {B_736 : A_733 -> Type‹r_570›} ->
          {(eq_4‹??_10› ?_3[2;4] m_734 n_735)} ->
            ((B_736) m_734) -> ((B_736) n_735))
simpl_tm ~expand:false(
  ∀ {A_771 : Type‹s_569›} ->
    ∀ {m_772 : A_771} ->
      ∀ {n_773 : A_771} ->
        ∀ {B_774 : A_771 -> Type‹r_570›} ->
          {(eq_4‹??_11› A_771 m_772 n_773)} ->
            ((B_774) m_772) -> ((B_774) n_773),
  ∀ {A_778 : Type‹s_569›} ->
    ∀ {m_779 : A_778} ->
      ∀ {n_780 : A_778} ->
        ∀ {B_781 : A_778 -> Type‹r_570›} ->
          {(eq_4‹??_10› A_778 m_779 n_780)} ->
            ((B_781) m_779) -> ((B_781) n_780))
simpl_tm ~expand:false( Type‹s_569›, Type‹s_569›)
simpl_tm ~expand:false(
  ∀ {m_786 : A_785} ->
    ∀ {n_787 : A_785} ->
      ∀ {B_788 : A_785 -> Type‹r_570›} ->
        {(eq_4‹??_11› A_785 m_786 n_787)} ->
          ((B_788) m_786) -> ((B_788) n_787),
  ∀ {m_792 : A_785} ->
    ∀ {n_793 : A_785} ->
      ∀ {B_794 : A_785 -> Type‹r_570›} ->
        {(eq_4‹??_10› A_785 m_792 n_793)} ->
          ((B_794) m_792) -> ((B_794) n_793))
simpl_tm ~expand:false( A_785, A_785)
simpl_tm ~expand:false(
  ∀ {n_799 : A_785} ->
    ∀ {B_800 : A_785 -> Type‹r_570›} ->
      {(eq_4‹??_11› A_785 m_798 n_799)} ->
        ((B_800) m_798) -> ((B_800) n_799),
  ∀ {n_804 : A_785} ->
    ∀ {B_805 : A_785 -> Type‹r_570›} ->
      {(eq_4‹??_10› A_785 m_798 n_804)} ->
        ((B_805) m_798) -> ((B_805) n_804))
simpl_tm ~expand:false( A_785, A_785)
simpl_tm ~expand:false(
  ∀ {B_810 : A_785 -> Type‹r_570›} ->
    {(eq_4‹??_11› A_785 m_798 n_809)} ->
      ((B_810) m_798) -> ((B_810) n_809),
  ∀ {B_814 : A_785 -> Type‹r_570›} ->
    {(eq_4‹??_10› A_785 m_798 n_809)} ->
      ((B_814) m_798) -> ((B_814) n_809))
simpl_tm ~expand:false( A_785 -> Type‹r_570›, A_785 -> Type‹r_570›)
simpl_tm ~expand:false( A_785, A_785)
simpl_tm ~expand:false( Type‹r_570›, Type‹r_570›)
simpl_tm ~expand:false(
  {(eq_4‹??_11› A_785 m_798 n_809)} -> ((B_818) m_798) -> ((B_818) n_809),
  {(eq_4‹??_10› A_785 m_798 n_809)} -> ((B_818) m_798) -> ((B_818) n_809))
simpl_tm ~expand:false( (eq_4‹??_11› A_785 m_798 n_809),
  (eq_4‹??_10› A_785 m_798 n_809))
simpl_tm ~expand:false( A_785, A_785)
simpl_tm ~expand:false( m_798, m_798)
simpl_tm ~expand:false( n_809, n_809)
simpl_tm ~expand:false( ((B_818) m_798) -> ((B_818) n_809),
  ((B_818) m_798) -> ((B_818) n_809))
simpl_tm ~expand:false( ((B_818) m_798), ((B_818) m_798))
simpl_tm ~expand:false( B_818, B_818)
simpl_tm ~expand:false( m_798, m_798)
simpl_tm ~expand:false( ((B_818) n_809), ((B_818) n_809))
simpl_tm ~expand:false( B_818, B_818)
simpl_tm ~expand:false( n_809, n_809)
check_cls {|
  prblm {| ;
    {|  ::: [A_740, m_741, n_742, B_743, refl_6, x_744] =>? #x_744 |}
  |}
  a := ∀ {A_843 : Type‹s_569›} ->
         ∀ {m_844 : A_843} ->
           ∀ {n_845 : A_843} ->
             ∀ {B_846 : A_843 -> Type‹r_570›} ->
               {(eq_4‹??_10› A_843 m_844 n_845)} ->
                 ((B_846) m_844) -> ((B_846) n_845)
|}
case_intro(A_850 : Type‹s_569›)
case_intro(m_851 : #A_850)
case_intro(n_852 : #A_850)
case_intro(B_853 : #A_850 -> Type‹r_570›)
case_intro(__855 : (eq_4‹??_10› #A_850 #m_851 #n_852))
case_intro(__856 : ((#B_853) #m_851))
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_10› #A_850 #m_851 #n_852),
      (eq_4‹??_10› #A_850 #m_851 #m_851));
    {| eq_pat?( #A_850, A_740 : Type‹s_569›)
       eq_pat?( #m_851, m_741 : #A_850)
       eq_pat?( #n_852, n_742 : #A_850)
       eq_pat?( #B_853, B_743 : #A_850 -> Type‹r_570›)
       eq_pat?( #__856, x_744 : ((#B_853) #m_851)) ::: [] =>? #x_744
    |}
  |}
|}
unify_local(
  eq_pat?( #A_850, A_740 : Type‹s_569›)
  eq_pat?( #m_851, m_741 : #A_850)
  eq_pat?( #n_852, n_742 : #A_850)
  eq_pat?( #B_853, B_743 : #A_850 -> Type‹r_570›)
  eq_pat?( #__856, x_744 : ((#B_853) #m_851))
)
unify_global(
  eq_term?( (eq_4‹??_10› #A_850 #m_851 #n_852),
    (eq_4‹??_10› #A_850 #m_851 #m_851))
)
simpl_pprbm ~expand:false( #A_850, #A_740)
simpl_pprbm ~expand:false( #m_851, #m_741)
simpl_pprbm ~expand:false( #n_852, #n_742)
simpl_pprbm ~expand:false( #B_853, #B_743)
simpl_pprbm ~expand:false( #__856, #x_744)
local_map solved
simpl_pprbm ~expand:false( (eq_4‹??_10› #A_850 #m_851 #n_852),
  (eq_4‹??_10› #A_850 #m_851 #m_851))
simpl_pprbm ~expand:false( #A_850, #A_850)
simpl_pprbm ~expand:false( #m_851, #m_851)
simpl_pprbm ~expand:false( #n_852, #m_851)
global_map solved
case_coverage_ok( __856, ((B_853) n_852))
check_tm( __856, ((B_853) n_852))
infer_tm(__856)
assert_equal1( ((B_853) n_852), ((B_853) n_852))
assert_equal1_ok( ((B_853) n_852), ((B_853) n_852))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_876
    ??_2 <= s_878
    ??_3 <= r_879
    ??_4 <= s_881
    ??_5 <= s_882
    ??_6 <= s_883
    ??_7 <= s_884
    ??_8 <= s_885
    ??_9 <= s_886
    ??_11 <= ??_10
    
  |}
  imeta_meta {|
    ?_1 <= A_891
    ?_2 <= A_894
    ?_3 <= A_900
    ?_4 <= A_906
    
  |}
  eqns {|
    
  |}
end_dump
attempt_delay(?_3[2;4] : Type‹??_10›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_10›)
check_tm( A_640, Type‹??_10›)
infer_tm(A_640)
assert_equal1( Type‹??_10›, Type‹s_569›)
assert_equal1_extend( Type‹??_10›, Type‹s_569›)
simpl_tm ~expand:false( Type‹??_10›, Type‹s_569›)
attempt_delay(?_4[2;4] : Type‹??_11›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹s_569›)
check_tm( A_578, Type‹s_569›)
infer_tm(A_578)
assert_equal1( Type‹s_569›, Type‹s_569›)
assert_equal1_ok( Type‹s_569›, Type‹s_569›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_969 : Type‹s_967›} ->
           ∀ {m_970 : A_969} ->
             ∀ {n_971 : A_969} ->
               ∀ {B_972 : A_969 -> Type‹r_968›} ->
                 {(eq_4‹??_13› ?_6[0;0] m_970 n_971)} ->
                   ((B_972) n_971) -> ((B_972) m_970))
infer_tm(Type‹s_967›)
infer_tm(∀ {m_977 : A_976} ->
           ∀ {n_978 : A_976} ->
             ∀ {B_979 : A_976 -> Type‹r_968›} ->
               {(eq_4‹??_13› ?_6[0;0] m_977 n_978)} ->
                 ((B_979) n_978) -> ((B_979) m_977))
infer_tm(A_976)
infer_tm(∀ {n_984 : A_976} ->
           ∀ {B_985 : A_976 -> Type‹r_968›} ->
             {(eq_4‹??_13› ?_6[0;0] m_983 n_984)} ->
               ((B_985) n_984) -> ((B_985) m_983))
infer_tm(A_976)
infer_tm(∀ {B_990 : A_976 -> Type‹r_968›} ->
           {(eq_4‹??_13› ?_6[0;0] m_983 n_989)} ->
             ((B_990) n_989) -> ((B_990) m_983))
infer_tm(A_976 -> Type‹r_968›)
infer_tm(A_976)
infer_tm(Type‹r_968›)
infer_tm({(eq_4‹??_13› ?_6[0;0] m_983 n_989)} ->
           ((B_994) n_989) -> ((B_994) m_983))
infer_tm((eq_4‹??_13› ?_6[0;0] m_983 n_989))
check_tm( ?_6[0;0], Type‹??_13›)
check_tm( m_983, ?_6[2;4])
infer_tm(m_983)
assert_equal1( ?_6[2;4], A_976)
assert_equal1_extend( ?_6[2;4], A_976)
check_tm( n_989, ?_6[2;4])
infer_tm(n_989)
assert_equal1( ?_6[2;4], A_976)
assert_equal1_extend( ?_6[2;4], A_976)
simpl_tm ~expand:false( ?_6[2;4], A_976)
simpl_tm ~expand:false( A_976, A_976)
infer_tm(((B_994) n_989) -> ((B_994) m_983))
infer_tm(((B_994) n_989))
infer_tm(B_994)
check_tm( n_989, A_976)
infer_tm(n_989)
assert_equal1( A_976, A_976)
assert_equal1_ok( A_976, A_976)
infer_tm(((B_994) m_983))
infer_tm(B_994)
check_tm( m_983, A_976)
infer_tm(m_983)
assert_equal1( A_976, A_976)
assert_equal1_ok( A_976, A_976)
check_tm(
  function rwr_1010 :
    ∀ {A_1011 : Type‹s_967›} ->
      ∀ {m_1012 : A_1011} ->
        ∀ {n_1013 : A_1011} ->
          ∀ {B_1014 : A_1011 -> Type‹r_968›} ->
            {(eq_4‹??_12› ?_5[0;0] m_1012 n_1013)} ->
              ((B_1014) n_1013) -> ((B_1014) m_1012)
  | A_1018 m_1019 n_1020 B_1021 refl_6 x_1022 => x_1022,
  ∀ {A_1023 : Type‹s_967›} ->
    ∀ {m_1024 : A_1023} ->
      ∀ {n_1025 : A_1023} ->
        ∀ {B_1026 : A_1023 -> Type‹r_968›} ->
          {(eq_4‹??_13› ?_6[2;4] m_1024 n_1025)} ->
            ((B_1026) n_1025) -> ((B_1026) m_1024))
infer_tm(∀ {A_1031 : Type‹s_967›} ->
           ∀ {m_1032 : A_1031} ->
             ∀ {n_1033 : A_1031} ->
               ∀ {B_1034 : A_1031 -> Type‹r_968›} ->
                 {(eq_4‹??_12› ?_5[0;0] m_1032 n_1033)} ->
                   ((B_1034) n_1033) -> ((B_1034) m_1032))
infer_tm(Type‹s_967›)
infer_tm(∀ {m_1039 : A_1038} ->
           ∀ {n_1040 : A_1038} ->
             ∀ {B_1041 : A_1038 -> Type‹r_968›} ->
               {(eq_4‹??_12› ?_5[0;0] m_1039 n_1040)} ->
                 ((B_1041) n_1040) -> ((B_1041) m_1039))
infer_tm(A_1038)
infer_tm(∀ {n_1046 : A_1038} ->
           ∀ {B_1047 : A_1038 -> Type‹r_968›} ->
             {(eq_4‹??_12› ?_5[0;0] m_1045 n_1046)} ->
               ((B_1047) n_1046) -> ((B_1047) m_1045))
infer_tm(A_1038)
infer_tm(∀ {B_1052 : A_1038 -> Type‹r_968›} ->
           {(eq_4‹??_12› ?_5[0;0] m_1045 n_1051)} ->
             ((B_1052) n_1051) -> ((B_1052) m_1045))
infer_tm(A_1038 -> Type‹r_968›)
infer_tm(A_1038)
infer_tm(Type‹r_968›)
infer_tm({(eq_4‹??_12› ?_5[0;0] m_1045 n_1051)} ->
           ((B_1056) n_1051) -> ((B_1056) m_1045))
infer_tm((eq_4‹??_12› ?_5[0;0] m_1045 n_1051))
check_tm( ?_5[0;0], Type‹??_12›)
check_tm( m_1045, ?_5[2;4])
infer_tm(m_1045)
assert_equal1( ?_5[2;4], A_1038)
assert_equal1_extend( ?_5[2;4], A_1038)
check_tm( n_1051, ?_5[2;4])
infer_tm(n_1051)
assert_equal1( ?_5[2;4], A_1038)
assert_equal1_extend( ?_5[2;4], A_1038)
simpl_tm ~expand:false( ?_5[2;4], A_1038)
simpl_tm ~expand:false( A_1038, A_1038)
infer_tm(((B_1056) n_1051) -> ((B_1056) m_1045))
infer_tm(((B_1056) n_1051))
infer_tm(B_1056)
check_tm( n_1051, A_1038)
infer_tm(n_1051)
assert_equal1( A_1038, A_1038)
assert_equal1_ok( A_1038, A_1038)
infer_tm(((B_1056) m_1045))
infer_tm(B_1056)
check_tm( m_1045, A_1038)
infer_tm(m_1045)
assert_equal1( A_1038, A_1038)
assert_equal1_ok( A_1038, A_1038)
assert_equal1(
  ∀ {A_1072 : Type‹s_967›} ->
    ∀ {m_1073 : A_1072} ->
      ∀ {n_1074 : A_1072} ->
        ∀ {B_1075 : A_1072 -> Type‹r_968›} ->
          {(eq_4‹??_13› ?_6[2;4] m_1073 n_1074)} ->
            ((B_1075) n_1074) -> ((B_1075) m_1073),
  ∀ {A_1079 : Type‹s_967›} ->
    ∀ {m_1080 : A_1079} ->
      ∀ {n_1081 : A_1079} ->
        ∀ {B_1082 : A_1079 -> Type‹r_968›} ->
          {(eq_4‹??_12› ?_5[2;4] m_1080 n_1081)} ->
            ((B_1082) n_1081) -> ((B_1082) m_1080))
assert_equal1_extend(
  ∀ {A_1124 : Type‹s_967›} ->
    ∀ {m_1125 : A_1124} ->
      ∀ {n_1126 : A_1124} ->
        ∀ {B_1127 : A_1124 -> Type‹r_968›} ->
          {(eq_4‹??_13› ?_6[2;4] m_1125 n_1126)} ->
            ((B_1127) n_1126) -> ((B_1127) m_1125),
  ∀ {A_1131 : Type‹s_967›} ->
    ∀ {m_1132 : A_1131} ->
      ∀ {n_1133 : A_1131} ->
        ∀ {B_1134 : A_1131 -> Type‹r_968›} ->
          {(eq_4‹??_12› ?_5[2;4] m_1132 n_1133)} ->
            ((B_1134) n_1133) -> ((B_1134) m_1132))
simpl_tm ~expand:false(
  ∀ {A_1169 : Type‹s_967›} ->
    ∀ {m_1170 : A_1169} ->
      ∀ {n_1171 : A_1169} ->
        ∀ {B_1172 : A_1169 -> Type‹r_968›} ->
          {(eq_4‹??_13› A_1169 m_1170 n_1171)} ->
            ((B_1172) n_1171) -> ((B_1172) m_1170),
  ∀ {A_1176 : Type‹s_967›} ->
    ∀ {m_1177 : A_1176} ->
      ∀ {n_1178 : A_1176} ->
        ∀ {B_1179 : A_1176 -> Type‹r_968›} ->
          {(eq_4‹??_12› A_1176 m_1177 n_1178)} ->
            ((B_1179) n_1178) -> ((B_1179) m_1177))
simpl_tm ~expand:false( Type‹s_967›, Type‹s_967›)
simpl_tm ~expand:false(
  ∀ {m_1184 : A_1183} ->
    ∀ {n_1185 : A_1183} ->
      ∀ {B_1186 : A_1183 -> Type‹r_968›} ->
        {(eq_4‹??_13› A_1183 m_1184 n_1185)} ->
          ((B_1186) n_1185) -> ((B_1186) m_1184),
  ∀ {m_1190 : A_1183} ->
    ∀ {n_1191 : A_1183} ->
      ∀ {B_1192 : A_1183 -> Type‹r_968›} ->
        {(eq_4‹??_12› A_1183 m_1190 n_1191)} ->
          ((B_1192) n_1191) -> ((B_1192) m_1190))
simpl_tm ~expand:false( A_1183, A_1183)
simpl_tm ~expand:false(
  ∀ {n_1197 : A_1183} ->
    ∀ {B_1198 : A_1183 -> Type‹r_968›} ->
      {(eq_4‹??_13› A_1183 m_1196 n_1197)} ->
        ((B_1198) n_1197) -> ((B_1198) m_1196),
  ∀ {n_1202 : A_1183} ->
    ∀ {B_1203 : A_1183 -> Type‹r_968›} ->
      {(eq_4‹??_12› A_1183 m_1196 n_1202)} ->
        ((B_1203) n_1202) -> ((B_1203) m_1196))
simpl_tm ~expand:false( A_1183, A_1183)
simpl_tm ~expand:false(
  ∀ {B_1208 : A_1183 -> Type‹r_968›} ->
    {(eq_4‹??_13› A_1183 m_1196 n_1207)} ->
      ((B_1208) n_1207) -> ((B_1208) m_1196),
  ∀ {B_1212 : A_1183 -> Type‹r_968›} ->
    {(eq_4‹??_12› A_1183 m_1196 n_1207)} ->
      ((B_1212) n_1207) -> ((B_1212) m_1196))
simpl_tm ~expand:false( A_1183 -> Type‹r_968›, A_1183 -> Type‹r_968›)
simpl_tm ~expand:false( A_1183, A_1183)
simpl_tm ~expand:false( Type‹r_968›, Type‹r_968›)
simpl_tm ~expand:false(
  {(eq_4‹??_13› A_1183 m_1196 n_1207)} ->
    ((B_1216) n_1207) -> ((B_1216) m_1196),
  {(eq_4‹??_12› A_1183 m_1196 n_1207)} ->
    ((B_1216) n_1207) -> ((B_1216) m_1196))
simpl_tm ~expand:false( (eq_4‹??_13› A_1183 m_1196 n_1207),
  (eq_4‹??_12› A_1183 m_1196 n_1207))
simpl_tm ~expand:false( A_1183, A_1183)
simpl_tm ~expand:false( m_1196, m_1196)
simpl_tm ~expand:false( n_1207, n_1207)
simpl_tm ~expand:false( ((B_1216) n_1207) -> ((B_1216) m_1196),
  ((B_1216) n_1207) -> ((B_1216) m_1196))
simpl_tm ~expand:false( ((B_1216) n_1207), ((B_1216) n_1207))
simpl_tm ~expand:false( B_1216, B_1216)
simpl_tm ~expand:false( n_1207, n_1207)
simpl_tm ~expand:false( ((B_1216) m_1196), ((B_1216) m_1196))
simpl_tm ~expand:false( B_1216, B_1216)
simpl_tm ~expand:false( m_1196, m_1196)
check_cls {|
  prblm {| ;
    {|  ::: [A_1138, m_1139, n_1140, B_1141, refl_6, x_1142] =>? #x_1142 |}
  |}
  a := ∀ {A_1241 : Type‹s_967›} ->
         ∀ {m_1242 : A_1241} ->
           ∀ {n_1243 : A_1241} ->
             ∀ {B_1244 : A_1241 -> Type‹r_968›} ->
               {(eq_4‹??_12› A_1241 m_1242 n_1243)} ->
                 ((B_1244) n_1243) -> ((B_1244) m_1242)
|}
case_intro(A_1248 : Type‹s_967›)
case_intro(m_1249 : #A_1248)
case_intro(n_1250 : #A_1248)
case_intro(B_1251 : #A_1248 -> Type‹r_968›)
case_intro(__1253 : (eq_4‹??_12› #A_1248 #m_1249 #n_1250))
case_intro(__1254 : ((#B_1251) #n_1250))
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_12› #A_1248 #m_1249 #n_1250),
      (eq_4‹??_12› #A_1248 #m_1249 #m_1249));
    {| eq_pat?( #A_1248, A_1138 : Type‹s_967›)
       eq_pat?( #m_1249, m_1139 : #A_1248)
       eq_pat?( #n_1250, n_1140 : #A_1248)
       eq_pat?( #B_1251, B_1141 : #A_1248 -> Type‹r_968›)
       eq_pat?( #__1254, x_1142 : ((#B_1251) #n_1250)) ::: [] =>? #x_1142
    |}
  |}
|}
unify_local(
  eq_pat?( #A_1248, A_1138 : Type‹s_967›)
  eq_pat?( #m_1249, m_1139 : #A_1248)
  eq_pat?( #n_1250, n_1140 : #A_1248)
  eq_pat?( #B_1251, B_1141 : #A_1248 -> Type‹r_968›)
  eq_pat?( #__1254, x_1142 : ((#B_1251) #n_1250))
)
unify_global(
  eq_term?( (eq_4‹??_12› #A_1248 #m_1249 #n_1250),
    (eq_4‹??_12› #A_1248 #m_1249 #m_1249))
)
simpl_pprbm ~expand:false( #A_1248, #A_1138)
simpl_pprbm ~expand:false( #m_1249, #m_1139)
simpl_pprbm ~expand:false( #n_1250, #n_1140)
simpl_pprbm ~expand:false( #B_1251, #B_1141)
simpl_pprbm ~expand:false( #__1254, #x_1142)
local_map solved
simpl_pprbm ~expand:false( (eq_4‹??_12› #A_1248 #m_1249 #n_1250),
  (eq_4‹??_12› #A_1248 #m_1249 #m_1249))
simpl_pprbm ~expand:false( #A_1248, #A_1248)
simpl_pprbm ~expand:false( #m_1249, #m_1249)
simpl_pprbm ~expand:false( #n_1250, #m_1249)
global_map solved
case_coverage_ok( __1254, ((B_1251) n_1250))
check_tm( __1254, ((B_1251) n_1250))
infer_tm(__1254)
assert_equal1( ((B_1251) n_1250), ((B_1251) n_1250))
assert_equal1_ok( ((B_1251) n_1250), ((B_1251) n_1250))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1274
    ??_2 <= s_1276
    ??_3 <= r_1277
    ??_4 <= s_1279
    ??_5 <= s_1280
    ??_6 <= s_1281
    ??_7 <= s_1282
    ??_8 <= s_1283
    ??_9 <= s_1284
    ??_10 <= s_1286
    ??_11 <= ??_10
    ??_13 <= ??_12
    
  |}
  imeta_meta {|
    ?_1 <= A_1293
    ?_2 <= A_1296
    ?_3 <= A_1302
    ?_4 <= A_1308
    ?_5 <= A_1314
    ?_6 <= A_1320
    
  |}
  eqns {|
    
  |}
end_dump
attempt_delay(?_5[2;4] : Type‹??_12›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_12›)
check_tm( A_1038, Type‹??_12›)
infer_tm(A_1038)
assert_equal1( Type‹??_12›, Type‹s_967›)
assert_equal1_extend( Type‹??_12›, Type‹s_967›)
simpl_tm ~expand:false( Type‹??_12›, Type‹s_967›)
attempt_delay(?_6[2;4] : Type‹??_13›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹s_967›)
check_tm( A_976, Type‹s_967›)
infer_tm(A_976)
assert_equal1( Type‹s_967›, Type‹s_967›)
assert_equal1_ok( Type‹s_967›, Type‹s_967›)
----------------------------------

definition-------------------------
infer_tm(∀ (A_1384 : Type‹s_1381›) ->
           ∀ (B_1385 : Type‹r_1382›) ->
             ∀ (m_1386 : A_1384) ->
               ∀ (n_1387 : A_1384) ->
                 ∀ (f_1388 :
                   forall‹t_1383›(__1389 : A_1384), B_1385) ->
                   (eq_4‹??_17› ?_11[0;0] m_1386 n_1387) ->
                     (eq_4‹??_18›
                       ?_12[0;0] ((f_1388) m_1386) ((f_1388) n_1387)))
infer_tm(Type‹s_1381›)
infer_tm(∀ (B_1392 : Type‹r_1382›) ->
           ∀ (m_1393 : A_1391) ->
             ∀ (n_1394 : A_1391) ->
               ∀ (f_1395 : forall‹t_1383›(__1396 : A_1391), B_1392) ->
                 (eq_4‹??_17› ?_11[0;0] m_1393 n_1394) ->
                   (eq_4‹??_18›
                     ?_12[0;0] ((f_1395) m_1393) ((f_1395) n_1394)))
infer_tm(Type‹r_1382›)
infer_tm(∀ (m_1399 : A_1391) ->
           ∀ (n_1400 : A_1391) ->
             ∀ (f_1401 : forall‹t_1383›(__1402 : A_1391), B_1398) ->
               (eq_4‹??_17› ?_11[0;0] m_1399 n_1400) ->
                 (eq_4‹??_18›
                   ?_12[0;0] ((f_1401) m_1399) ((f_1401) n_1400)))
infer_tm(A_1391)
infer_tm(∀ (n_1405 : A_1391) ->
           ∀ (f_1406 : forall‹t_1383›(__1407 : A_1391), B_1398) ->
             (eq_4‹??_17› ?_11[0;0] m_1404 n_1405) ->
               (eq_4‹??_18›
                 ?_12[0;0] ((f_1406) m_1404) ((f_1406) n_1405)))
infer_tm(A_1391)
infer_tm(∀ (f_1410 : forall‹t_1383›(__1411 : A_1391), B_1398) ->
           (eq_4‹??_17› ?_11[0;0] m_1404 n_1409) ->
             (eq_4‹??_18› ?_12[0;0] ((f_1410) m_1404) ((f_1410) n_1409)))
infer_tm(forall‹t_1383›(__1414 : A_1391), B_1398)
infer_tm(A_1391)
infer_tm(B_1398)
infer_tm((eq_4‹??_17› ?_11[0;0] m_1404 n_1409) ->
           (eq_4‹??_18› ?_12[0;0] ((f_1413) m_1404) ((f_1413) n_1409)))
infer_tm((eq_4‹??_17› ?_11[0;0] m_1404 n_1409))
check_tm( ?_11[0;0], Type‹??_17›)
check_tm( m_1404, ?_11[3;5])
infer_tm(m_1404)
assert_equal1( ?_11[3;5], A_1391)
assert_equal1_extend( ?_11[3;5], A_1391)
check_tm( n_1409, ?_11[3;5])
infer_tm(n_1409)
assert_equal1( ?_11[3;5], A_1391)
assert_equal1_extend( ?_11[3;5], A_1391)
simpl_tm ~expand:false( ?_11[3;5], A_1391)
simpl_tm ~expand:false( A_1391, A_1391)
infer_tm((eq_4‹??_18› ?_12[0;0] ((f_1413) m_1404) ((f_1413) n_1409)))
check_tm( ?_12[0;0], Type‹??_18›)
check_tm( ((f_1413) m_1404), ?_12[3;6])
infer_tm(((f_1413) m_1404))
infer_tm(f_1413)
check_tm( m_1404, A_1391)
infer_tm(m_1404)
assert_equal1( A_1391, A_1391)
assert_equal1_ok( A_1391, A_1391)
assert_equal1( ?_12[3;6], B_1398)
assert_equal1_extend( ?_12[3;6], B_1398)
check_tm( ((f_1413) n_1409), ?_12[3;6])
infer_tm(((f_1413) n_1409))
infer_tm(f_1413)
simpl_tm ~expand:false( ?_12[3;6], B_1398)
check_tm( n_1409, A_1391)
infer_tm(n_1409)
assert_equal1( A_1391, A_1391)
assert_equal1_ok( A_1391, A_1391)
assert_equal1( ?_12[3;6], B_1398)
assert_equal1_extend( ?_12[3;6], B_1398)
simpl_tm ~expand:false( B_1398, B_1398)
check_tm(
  function congr_1437 :
    ∀ (A_1438 : Type‹s_1381›) ->
      ∀ (B_1439 : Type‹r_1382›) ->
        ∀ (m_1440 : A_1438) ->
          ∀ (n_1441 : A_1438) ->
            ∀ (f_1442 : forall‹t_1383›(__1443 : A_1438), B_1439) ->
              (eq_4‹??_14› ?_7[0;0] m_1440 n_1441) ->
                (eq_4‹??_15›
                  ?_8[0;0] ((f_1442) m_1440) ((f_1442) n_1441))
  | A_1445 B_1446 m_1447 n_1448 f_1449 refl_6 =>
    (refl_6‹??_16› ?_9[0;0] ?_10[0;0]),
  ∀ (A_1450 : Type‹s_1381›) ->
    ∀ (B_1451 : Type‹r_1382›) ->
      ∀ (m_1452 : A_1450) ->
        ∀ (n_1453 : A_1450) ->
          ∀ (f_1454 : forall‹t_1383›(__1455 : A_1450), B_1451) ->
            ∀ (__1456 : (eq_4‹??_17› ?_11[3;5] m_1452 n_1453)) ->
              (eq_4‹??_18› ?_12[3;6] ((f_1454) m_1452) ((f_1454) n_1453)))
infer_tm(∀ (A_1458 : Type‹s_1381›) ->
           ∀ (B_1459 : Type‹r_1382›) ->
             ∀ (m_1460 : A_1458) ->
               ∀ (n_1461 : A_1458) ->
                 ∀ (f_1462 :
                   forall‹t_1383›(__1463 : A_1458), B_1459) ->
                   (eq_4‹??_14› ?_7[0;0] m_1460 n_1461) ->
                     (eq_4‹??_15›
                       ?_8[0;0] ((f_1462) m_1460) ((f_1462) n_1461)))
infer_tm(Type‹s_1381›)
infer_tm(∀ (B_1466 : Type‹r_1382›) ->
           ∀ (m_1467 : A_1465) ->
             ∀ (n_1468 : A_1465) ->
               ∀ (f_1469 : forall‹t_1383›(__1470 : A_1465), B_1466) ->
                 (eq_4‹??_14› ?_7[0;0] m_1467 n_1468) ->
                   (eq_4‹??_15›
                     ?_8[0;0] ((f_1469) m_1467) ((f_1469) n_1468)))
infer_tm(Type‹r_1382›)
infer_tm(∀ (m_1473 : A_1465) ->
           ∀ (n_1474 : A_1465) ->
             ∀ (f_1475 : forall‹t_1383›(__1476 : A_1465), B_1472) ->
               (eq_4‹??_14› ?_7[0;0] m_1473 n_1474) ->
                 (eq_4‹??_15›
                   ?_8[0;0] ((f_1475) m_1473) ((f_1475) n_1474)))
infer_tm(A_1465)
infer_tm(∀ (n_1479 : A_1465) ->
           ∀ (f_1480 : forall‹t_1383›(__1481 : A_1465), B_1472) ->
             (eq_4‹??_14› ?_7[0;0] m_1478 n_1479) ->
               (eq_4‹??_15› ?_8[0;0] ((f_1480) m_1478) ((f_1480) n_1479)))
infer_tm(A_1465)
infer_tm(∀ (f_1484 : forall‹t_1383›(__1485 : A_1465), B_1472) ->
           (eq_4‹??_14› ?_7[0;0] m_1478 n_1483) ->
             (eq_4‹??_15› ?_8[0;0] ((f_1484) m_1478) ((f_1484) n_1483)))
infer_tm(forall‹t_1383›(__1488 : A_1465), B_1472)
infer_tm(A_1465)
infer_tm(B_1472)
infer_tm((eq_4‹??_14› ?_7[0;0] m_1478 n_1483) ->
           (eq_4‹??_15› ?_8[0;0] ((f_1487) m_1478) ((f_1487) n_1483)))
infer_tm((eq_4‹??_14› ?_7[0;0] m_1478 n_1483))
check_tm( ?_7[0;0], Type‹??_14›)
check_tm( m_1478, ?_7[3;5])
infer_tm(m_1478)
assert_equal1( ?_7[3;5], A_1465)
assert_equal1_extend( ?_7[3;5], A_1465)
check_tm( n_1483, ?_7[3;5])
infer_tm(n_1483)
assert_equal1( ?_7[3;5], A_1465)
assert_equal1_extend( ?_7[3;5], A_1465)
simpl_tm ~expand:false( ?_7[3;5], A_1465)
simpl_tm ~expand:false( A_1465, A_1465)
infer_tm((eq_4‹??_15› ?_8[0;0] ((f_1487) m_1478) ((f_1487) n_1483)))
check_tm( ?_8[0;0], Type‹??_15›)
check_tm( ((f_1487) m_1478), ?_8[3;6])
infer_tm(((f_1487) m_1478))
infer_tm(f_1487)
check_tm( m_1478, A_1465)
infer_tm(m_1478)
assert_equal1( A_1465, A_1465)
assert_equal1_ok( A_1465, A_1465)
assert_equal1( ?_8[3;6], B_1472)
assert_equal1_extend( ?_8[3;6], B_1472)
check_tm( ((f_1487) n_1483), ?_8[3;6])
infer_tm(((f_1487) n_1483))
infer_tm(f_1487)
simpl_tm ~expand:false( ?_8[3;6], B_1472)
check_tm( n_1483, A_1465)
infer_tm(n_1483)
assert_equal1( A_1465, A_1465)
assert_equal1_ok( A_1465, A_1465)
assert_equal1( ?_8[3;6], B_1472)
assert_equal1_extend( ?_8[3;6], B_1472)
simpl_tm ~expand:false( B_1472, B_1472)
assert_equal1(
  ∀ (A_1511 : Type‹s_1381›) ->
    ∀ (B_1512 : Type‹r_1382›) ->
      ∀ (m_1513 : A_1511) ->
        ∀ (n_1514 : A_1511) ->
          ∀ (f_1515 : forall‹t_1383›(__1516 : A_1511), B_1512) ->
            ∀ (__1517 : (eq_4‹??_17› ?_11[3;5] m_1513 n_1514)) ->
              (eq_4‹??_18› ?_12[3;6] ((f_1515) m_1513) ((f_1515) n_1514)),
  ∀ (A_1518 : Type‹s_1381›) ->
    ∀ (B_1519 : Type‹r_1382›) ->
      ∀ (m_1520 : A_1518) ->
        ∀ (n_1521 : A_1518) ->
          ∀ (f_1522 : forall‹t_1383›(__1523 : A_1518), B_1519) ->
            ∀ (__1524 : (eq_4‹??_14› ?_7[3;5] m_1520 n_1521)) ->
              (eq_4‹??_15› ?_8[3;6] ((f_1522) m_1520) ((f_1522) n_1521)))
assert_equal1_extend(
  ∀ (A_1577 : Type‹s_1381›) ->
    ∀ (B_1578 : Type‹r_1382›) ->
      ∀ (m_1579 : A_1577) ->
        ∀ (n_1580 : A_1577) ->
          ∀ (f_1581 : forall‹t_1383›(__1582 : A_1577), B_1578) ->
            ∀ (__1583 : (eq_4‹??_17› ?_11[3;5] m_1579 n_1580)) ->
              (eq_4‹??_18› ?_12[3;6] ((f_1581) m_1579) ((f_1581) n_1580)),
  ∀ (A_1584 : Type‹s_1381›) ->
    ∀ (B_1585 : Type‹r_1382›) ->
      ∀ (m_1586 : A_1584) ->
        ∀ (n_1587 : A_1584) ->
          ∀ (f_1588 : forall‹t_1383›(__1589 : A_1584), B_1585) ->
            ∀ (__1590 : (eq_4‹??_14› ?_7[3;5] m_1586 n_1587)) ->
              (eq_4‹??_15› ?_8[3;6] ((f_1588) m_1586) ((f_1588) n_1587)))
simpl_tm ~expand:false(
  ∀ (A_1644 : Type‹s_1381›) ->
    ∀ (B_1645 : Type‹r_1382›) ->
      ∀ (m_1646 : A_1644) ->
        ∀ (n_1647 : A_1644) ->
          ∀ (f_1648 : forall‹t_1383›(__1649 : A_1644), B_1645) ->
            (eq_4‹??_17› A_1644 m_1646 n_1647) ->
              (eq_4‹??_18› B_1645 ((f_1648) m_1646) ((f_1648) n_1647)),
  ∀ (A_1651 : Type‹s_1381›) ->
    ∀ (B_1652 : Type‹r_1382›) ->
      ∀ (m_1653 : A_1651) ->
        ∀ (n_1654 : A_1651) ->
          ∀ (f_1655 : forall‹t_1383›(__1656 : A_1651), B_1652) ->
            (eq_4‹??_14› A_1651 m_1653 n_1654) ->
              (eq_4‹??_15› B_1652 ((f_1655) m_1653) ((f_1655) n_1654)))
simpl_tm ~expand:false( Type‹s_1381›, Type‹s_1381›)
simpl_tm ~expand:false(
  ∀ (B_1659 : Type‹r_1382›) ->
    ∀ (m_1660 : A_1658) ->
      ∀ (n_1661 : A_1658) ->
        ∀ (f_1662 : forall‹t_1383›(__1663 : A_1658), B_1659) ->
          (eq_4‹??_17› A_1658 m_1660 n_1661) ->
            (eq_4‹??_18› B_1659 ((f_1662) m_1660) ((f_1662) n_1661)),
  ∀ (B_1665 : Type‹r_1382›) ->
    ∀ (m_1666 : A_1658) ->
      ∀ (n_1667 : A_1658) ->
        ∀ (f_1668 : forall‹t_1383›(__1669 : A_1658), B_1665) ->
          (eq_4‹??_14› A_1658 m_1666 n_1667) ->
            (eq_4‹??_15› B_1665 ((f_1668) m_1666) ((f_1668) n_1667)))
simpl_tm ~expand:false( Type‹r_1382›, Type‹r_1382›)
simpl_tm ~expand:false(
  ∀ (m_1672 : A_1658) ->
    ∀ (n_1673 : A_1658) ->
      ∀ (f_1674 : forall‹t_1383›(__1675 : A_1658), B_1671) ->
        (eq_4‹??_17› A_1658 m_1672 n_1673) ->
          (eq_4‹??_18› B_1671 ((f_1674) m_1672) ((f_1674) n_1673)),
  ∀ (m_1677 : A_1658) ->
    ∀ (n_1678 : A_1658) ->
      ∀ (f_1679 : forall‹t_1383›(__1680 : A_1658), B_1671) ->
        (eq_4‹??_14› A_1658 m_1677 n_1678) ->
          (eq_4‹??_15› B_1671 ((f_1679) m_1677) ((f_1679) n_1678)))
simpl_tm ~expand:false( A_1658, A_1658)
simpl_tm ~expand:false(
  ∀ (n_1683 : A_1658) ->
    ∀ (f_1684 : forall‹t_1383›(__1685 : A_1658), B_1671) ->
      (eq_4‹??_17› A_1658 m_1682 n_1683) ->
        (eq_4‹??_18› B_1671 ((f_1684) m_1682) ((f_1684) n_1683)),
  ∀ (n_1687 : A_1658) ->
    ∀ (f_1688 : forall‹t_1383›(__1689 : A_1658), B_1671) ->
      (eq_4‹??_14› A_1658 m_1682 n_1687) ->
        (eq_4‹??_15› B_1671 ((f_1688) m_1682) ((f_1688) n_1687)))
simpl_tm ~expand:false( A_1658, A_1658)
simpl_tm ~expand:false(
  ∀ (f_1692 : forall‹t_1383›(__1693 : A_1658), B_1671) ->
    (eq_4‹??_17› A_1658 m_1682 n_1691) ->
      (eq_4‹??_18› B_1671 ((f_1692) m_1682) ((f_1692) n_1691)),
  ∀ (f_1695 : forall‹t_1383›(__1696 : A_1658), B_1671) ->
    (eq_4‹??_14› A_1658 m_1682 n_1691) ->
      (eq_4‹??_15› B_1671 ((f_1695) m_1682) ((f_1695) n_1691)))
simpl_tm ~expand:false( forall‹t_1383›(__1699 : A_1658), B_1671,
  forall‹t_1383›(__1700 : A_1658), B_1671)
simpl_tm ~expand:false( A_1658, A_1658)
simpl_tm ~expand:false( B_1671, B_1671)
simpl_tm ~expand:false(
  (eq_4‹??_17› A_1658 m_1682 n_1691) ->
    (eq_4‹??_18› B_1671 ((f_1698) m_1682) ((f_1698) n_1691)),
  (eq_4‹??_14› A_1658 m_1682 n_1691) ->
    (eq_4‹??_15› B_1671 ((f_1698) m_1682) ((f_1698) n_1691)))
simpl_tm ~expand:false( (eq_4‹??_17› A_1658 m_1682 n_1691),
  (eq_4‹??_14› A_1658 m_1682 n_1691))
simpl_tm ~expand:false( A_1658, A_1658)
simpl_tm ~expand:false( m_1682, m_1682)
simpl_tm ~expand:false( n_1691, n_1691)
simpl_tm ~expand:false(
  (eq_4‹??_18› B_1671 ((f_1698) m_1682) ((f_1698) n_1691)),
  (eq_4‹??_15› B_1671 ((f_1698) m_1682) ((f_1698) n_1691)))
simpl_tm ~expand:false( B_1671, B_1671)
simpl_tm ~expand:false( ((f_1698) m_1682), ((f_1698) m_1682))
simpl_tm ~expand:false( f_1698, f_1698)
simpl_tm ~expand:false( m_1682, m_1682)
simpl_tm ~expand:false( ((f_1698) n_1691), ((f_1698) n_1691))
simpl_tm ~expand:false( f_1698, f_1698)
simpl_tm ~expand:false( n_1691, n_1691)
check_cls {|
  prblm {| ;
    {|  ::: [A_1591, B_1592, m_1593, n_1594, f_1595, refl_6] =>?
         (refl_6‹??_16› ?_9[0;0] ?_10[0;0])
    |}
  |}
  a := ∀ (A_1729 : Type‹s_1381›) ->
         ∀ (B_1730 : Type‹r_1382›) ->
           ∀ (m_1731 : A_1729) ->
             ∀ (n_1732 : A_1729) ->
               ∀ (f_1733 : forall‹t_1383›(__1734 : A_1729), B_1730) ->
                 (eq_4‹??_14› A_1729 m_1731 n_1732) ->
                   (eq_4‹??_15›
                     B_1730 ((f_1733) m_1731) ((f_1733) n_1732))
|}
case_intro(A_1736 : Type‹s_1381›)
case_intro(B_1737 : Type‹r_1382›)
case_intro(m_1738 : #A_1736)
case_intro(n_1739 : #A_1736)
case_intro(f_1740 : forall‹t_1383›(__1741 : #A_1736), #B_1737)
case_intro(__1742 : (eq_4‹??_14› #A_1736 #m_1738 #n_1739))
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_14› #A_1736 #m_1738 #n_1739),
      (eq_4‹??_14› #A_1736 #m_1738 #m_1738));
    {| eq_pat?( #A_1736, A_1591 : Type‹s_1381›)
       eq_pat?( #B_1737, B_1592 : Type‹r_1382›)
       eq_pat?( #m_1738, m_1593 : #A_1736)
       eq_pat?( #n_1739, n_1594 : #A_1736)
       eq_pat?( #f_1740, f_1595 :
         forall‹t_1383›(__1752 : #A_1736), #B_1737) ::: [] =>?
         (refl_6‹??_16› ?_9[0;0] ?_10[0;0])
    |}
  |}
|}
unify_local(
  eq_pat?( #A_1736, A_1591 : Type‹s_1381›)
  eq_pat?( #B_1737, B_1592 : Type‹r_1382›)
  eq_pat?( #m_1738, m_1593 : #A_1736)
  eq_pat?( #n_1739, n_1594 : #A_1736)
  eq_pat?( #f_1740, f_1595 : forall‹t_1383›(__1753 : #A_1736), #B_1737)
)
unify_global(
  eq_term?( (eq_4‹??_14› #A_1736 #m_1738 #n_1739),
    (eq_4‹??_14› #A_1736 #m_1738 #m_1738))
)
simpl_pprbm ~expand:false( #A_1736, #A_1591)
simpl_pprbm ~expand:false( #B_1737, #B_1592)
simpl_pprbm ~expand:false( #m_1738, #m_1593)
simpl_pprbm ~expand:false( #n_1739, #n_1594)
simpl_pprbm ~expand:false( #f_1740, #f_1595)
local_map solved
simpl_pprbm ~expand:false( (eq_4‹??_14› #A_1736 #m_1738 #n_1739),
  (eq_4‹??_14› #A_1736 #m_1738 #m_1738))
simpl_pprbm ~expand:false( #A_1736, #A_1736)
simpl_pprbm ~expand:false( #m_1738, #m_1738)
simpl_pprbm ~expand:false( #n_1739, #m_1738)
global_map solved
case_coverage_ok( (refl_6‹??_16› ?_9[0;0] ?_10[0;0]),
  (eq_4‹??_15› B_1737 ((f_1740) n_1739) ((f_1740) n_1739)))
check_tm( (refl_6‹??_16› ?_9[0;0] ?_10[0;0]),
  (eq_4‹??_15› B_1737 ((f_1740) n_1739) ((f_1740) n_1739)))
infer_tm((refl_6‹??_16› ?_9[0;0] ?_10[0;0]))
check_tm( ?_9[0;0], Type‹??_16›)
check_tm( ?_10[0;0], ?_9[3;7])
assert_equal1( (eq_4‹??_15› B_1737 ((f_1740) n_1739) ((f_1740) n_1739)),
  (eq_4‹??_16› ?_9[3;7] ?_10[3;7] ?_10[3;7]))
assert_equal1_extend(
  (eq_4‹??_15› B_1737 ((f_1740) n_1739) ((f_1740) n_1739)),
  (eq_4‹??_16› ?_9[3;7] ?_10[3;7] ?_10[3;7]))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1762
    ??_2 <= s_1764
    ??_3 <= r_1765
    ??_4 <= s_1767
    ??_5 <= s_1768
    ??_6 <= s_1769
    ??_7 <= s_1770
    ??_8 <= s_1771
    ??_9 <= s_1772
    ??_10 <= s_1774
    ??_11 <= ??_10
    ??_12 <= s_1778
    ??_13 <= ??_12
    ??_17 <= ??_14
    ??_18 <= ??_15
    
  |}
  imeta_meta {|
    ?_1 <= A_1789
    ?_2 <= A_1792
    ?_3 <= A_1798
    ?_4 <= A_1804
    ?_5 <= A_1810
    ?_6 <= A_1816
    ?_7 <= A_1824
    ?_8 <= B_1832
    ?_11 <= A_1841
    ?_12 <= B_1849
    
  |}
  eqns {|
    equal_tm? ((eq_4‹??_15› B_1737 ((f_1740) n_1739) ((f_1740) n_1739)),
      (eq_4‹??_16› ?_9[3;7] ?_10[3;7] ?_10[3;7]))
  |}
end_dump
simpl_tm ~expand:false(
  (eq_4‹??_15› B_1737 ((f_1740) n_1739) ((f_1740) n_1739)),
  (eq_4‹??_16› ?_9[3;7] ?_10[3;7] ?_10[3;7]))
simpl_tm ~expand:false( B_1737, ?_9[3;7])
simpl_tm ~expand:false( ((f_1740) n_1739), ?_10[3;7])
simpl_tm ~expand:false( ((f_1740) n_1739), ?_10[3;7])
simpl_tm ~expand:false( B_1737, ?_9[3;7])
simpl_tm ~expand:false( ((f_1740) n_1739), ?_10[3;7])
simpl_tm ~expand:false( ((f_1740) n_1739), ((f_1740) n_1739))
simpl_tm ~expand:false( f_1740, f_1740)
simpl_tm ~expand:false( n_1739, n_1739)
attempt_delay(?_7[3;5] : Type‹??_14›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_14›)
check_tm( A_1465, Type‹??_14›)
infer_tm(A_1465)
assert_equal1( Type‹??_14›, Type‹s_1381›)
assert_equal1_extend( Type‹??_14›, Type‹s_1381›)
simpl_tm ~expand:false( Type‹??_14›, Type‹s_1381›)
attempt_delay(?_8[3;6] : Type‹??_15›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_15›)
check_tm( B_1472, Type‹??_15›)
infer_tm(B_1472)
assert_equal1( Type‹??_15›, Type‹r_1382›)
assert_equal1_extend( Type‹??_15›, Type‹r_1382›)
simpl_tm ~expand:false( Type‹??_15›, Type‹r_1382›)
attempt_delay(?_9[3;7] : Type‹??_16›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹r_1382›)
check_tm( B_1737, Type‹r_1382›)
infer_tm(B_1737)
assert_equal1( Type‹r_1382›, Type‹r_1382›)
assert_equal1_ok( Type‹r_1382›, Type‹r_1382›)
attempt_delay(?_10[3;7] : ?_9[3;7])
resolve_ctx_ok
resolve_env_ok
infer_tm(B_1737)
check_tm( ((f_1740) n_1739), B_1737)
infer_tm(((f_1740) n_1739))
infer_tm(f_1740)
check_tm( n_1739, A_1736)
infer_tm(n_1739)
assert_equal1( A_1736, A_1736)
assert_equal1_ok( A_1736, A_1736)
assert_equal1( B_1737, B_1737)
assert_equal1_ok( B_1737, B_1737)
attempt_delay(?_11[3;5] : Type‹??_17›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹s_1381›)
check_tm( A_1391, Type‹s_1381›)
infer_tm(A_1391)
assert_equal1( Type‹s_1381›, Type‹s_1381›)
assert_equal1_ok( Type‹s_1381›, Type‹s_1381›)
attempt_delay(?_12[3;6] : Type‹??_18›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹r_1382›)
check_tm( B_1398, Type‹r_1382›)
infer_tm(B_1398)
assert_equal1( Type‹r_1382›, Type‹r_1382›)
assert_equal1_ok( Type‹r_1382›, Type‹r_1382›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2090 : U} ->
           ∀ {n_2091 : nat_3} ->
             (vec_8‹??_20› A_2090 (succ_5‹› n_2091)) -> A_2090)
infer_tm(U)
infer_tm(∀ {n_2094 : nat_3} ->
           (vec_8‹??_20› A_2093 (succ_5‹› n_2094)) -> A_2093)
infer_tm(nat_3)
infer_tm((vec_8‹??_20› A_2093 (succ_5‹› n_2096)) -> A_2093)
infer_tm((vec_8‹??_20› A_2093 (succ_5‹› n_2096)))
check_tm( A_2093, Type‹??_20›)
infer_tm(A_2093)
assert_equal1( Type‹??_20›, U)
assert_equal1_extend( Type‹??_20›, U)
check_tm( (succ_5‹› n_2096), nat_3)
infer_tm((succ_5‹› n_2096))
check_tm( n_2096, nat_3)
infer_tm(n_2096)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_20›, U)
infer_tm(A_2093)
check_tm(
  function hd_vec_2099 :
    ∀ {A_2100 : U} ->
      ∀ {n_2101 : nat_3} ->
        (vec_8‹??_19› A_2100 (succ_5‹› n_2101)) -> A_2100
  | A_2103 n_2104 (vcons_12 _2105 hd_2106 _2107) => hd_2106,
  ∀ {A_2108 : U} ->
    ∀ {n_2109 : nat_3} ->
      (vec_8‹??_20› A_2108 (succ_5‹› n_2109)) -> A_2108)
infer_tm(∀ {A_2112 : U} ->
           ∀ {n_2113 : nat_3} ->
             (vec_8‹??_19› A_2112 (succ_5‹› n_2113)) -> A_2112)
infer_tm(U)
infer_tm(∀ {n_2116 : nat_3} ->
           (vec_8‹??_19› A_2115 (succ_5‹› n_2116)) -> A_2115)
infer_tm(nat_3)
infer_tm((vec_8‹??_19› A_2115 (succ_5‹› n_2118)) -> A_2115)
infer_tm((vec_8‹??_19› A_2115 (succ_5‹› n_2118)))
check_tm( A_2115, Type‹??_19›)
infer_tm(A_2115)
assert_equal1( Type‹??_19›, U)
assert_equal1_extend( Type‹??_19›, U)
check_tm( (succ_5‹› n_2118), nat_3)
infer_tm((succ_5‹› n_2118))
check_tm( n_2118, nat_3)
infer_tm(n_2118)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_19›, U)
infer_tm(A_2115)
assert_equal1(
  ∀ {A_2121 : U} ->
    ∀ {n_2122 : nat_3} ->
      (vec_8‹??_20› A_2121 (succ_5‹› n_2122)) -> A_2121,
  ∀ {A_2124 : U} ->
    ∀ {n_2125 : nat_3} ->
      (vec_8‹??_19› A_2124 (succ_5‹› n_2125)) -> A_2124)
assert_equal1_extend(
  ∀ {A_2137 : U} ->
    ∀ {n_2138 : nat_3} ->
      (vec_8‹??_20› A_2137 (succ_5‹› n_2138)) -> A_2137,
  ∀ {A_2140 : U} ->
    ∀ {n_2141 : nat_3} ->
      (vec_8‹??_19› A_2140 (succ_5‹› n_2141)) -> A_2140)
simpl_tm ~expand:false(
  ∀ {A_2154 : U} ->
    ∀ {n_2155 : nat_3} ->
      (vec_8‹U› A_2154 (succ_5‹› n_2155)) -> A_2154,
  ∀ {A_2157 : U} ->
    ∀ {n_2158 : nat_3} ->
      (vec_8‹U› A_2157 (succ_5‹› n_2158)) -> A_2157)
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false(
  ∀ {n_2161 : nat_3} ->
    (vec_8‹U› A_2160 (succ_5‹› n_2161)) -> A_2160,
  ∀ {n_2163 : nat_3} ->
    (vec_8‹U› A_2160 (succ_5‹› n_2163)) -> A_2160)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  (vec_8‹U› A_2160 (succ_5‹› n_2165)) -> A_2160,
  (vec_8‹U› A_2160 (succ_5‹› n_2165)) -> A_2160)
simpl_tm ~expand:false( (vec_8‹U› A_2160 (succ_5‹› n_2165)),
  (vec_8‹U› A_2160 (succ_5‹› n_2165)))
simpl_tm ~expand:false( A_2160, A_2160)
simpl_tm ~expand:false( (succ_5‹› n_2165), (succ_5‹› n_2165))
simpl_tm ~expand:false( n_2165, n_2165)
simpl_tm ~expand:false( A_2160, A_2160)
check_cls {|
  prblm {| ;
    {|  ::: [A_2143, n_2144, (vcons_12 _2145 hd_2146 _2147)] =>? #hd_2146 |}
  |}
  a := ∀ {A_2172 : U} ->
         ∀ {n_2173 : nat_3} ->
           (vec_8‹U› A_2172 (succ_5‹› n_2173)) -> A_2172
|}
case_intro(A_2175 : U)
case_intro(n_2176 : nat_3)
case_intro(__2177 : (vec_8‹U› #A_2175 (succ_5‹› #n_2176)))
splitting_on(vnil_11)
case_empty
unify_local(  )
unify_global(
  eq_term?( (vec_8‹U› #A_2175 (succ_5‹› #n_2176)),
    (vec_8‹U› #A_2175 zero_4))
)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› #A_2175 (succ_5‹› #n_2176)),
  (vec_8‹U› #A_2175 zero_4))
simpl_pprbm ~expand:false( #A_2175, #A_2175)
simpl_pprbm ~expand:false( (succ_5‹› #n_2176), zero_4)
unifier1e.witnessed_distinct(succ_5, , zero_4, )splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› #A_2175 (succ_5‹› #n_2176)),
      (vec_8‹U› #A_2175 (succ_5‹› #n_2181)));
    {| eq_pat?( #A_2175, A_2143 : U)
       eq_pat?( #n_2176, n_2144 : nat_3)
       eq_pat?( #n_2181, _2145 : nat_3)
       eq_pat?( #hd_2182, hd_2146 : #A_2175)
       eq_pat?( #tl_2183, _2147 : (vec_8‹U› #A_2175 #n_2181)) ::: [] =>?
         #hd_2146
    |}
  |}
|}
unify_local(
  eq_pat?( #A_2175, A_2143 : U)
  eq_pat?( #n_2176, n_2144 : nat_3)
  eq_pat?( #n_2181, _2145 : nat_3)
  eq_pat?( #hd_2182, hd_2146 : #A_2175)
  eq_pat?( #tl_2183, _2147 : (vec_8‹U› #A_2175 #n_2181))
)
unify_global(
  eq_term?( (vec_8‹U› #A_2175 (succ_5‹› #n_2176)),
    (vec_8‹U› #A_2175 (succ_5‹› #n_2181)))
)
simpl_pprbm ~expand:false( #A_2175, #A_2143)
simpl_pprbm ~expand:false( #n_2176, #n_2144)
simpl_pprbm ~expand:false( #n_2181, #_2145)
simpl_pprbm ~expand:false( #hd_2182, #hd_2146)
simpl_pprbm ~expand:false( #tl_2183, #_2147)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› #A_2175 (succ_5‹› #n_2176)),
  (vec_8‹U› #A_2175 (succ_5‹› #n_2181)))
simpl_pprbm ~expand:false( #A_2175, #A_2175)
simpl_pprbm ~expand:false( (succ_5‹› #n_2176), (succ_5‹› #n_2181))
simpl_pprbm ~expand:false( #n_2176, #n_2181)
global_map solved
case_coverage_ok( hd_2182, A_2175)
check_tm( hd_2182, A_2175)
infer_tm(hd_2182)
assert_equal1( A_2175, A_2175)
assert_equal1_ok( A_2175, A_2175)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2190
    ??_2 <= s_2192
    ??_3 <= r_2193
    ??_4 <= s_2195
    ??_5 <= s_2196
    ??_6 <= s_2197
    ??_7 <= s_2198
    ??_8 <= s_2199
    ??_9 <= s_2200
    ??_10 <= s_2202
    ??_11 <= ??_10
    ??_12 <= s_2206
    ??_13 <= ??_12
    ??_14 <= s_2211
    ??_15 <= r_2213
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_2226
    ?_2 <= A_2229
    ?_3 <= A_2235
    ?_4 <= A_2241
    ?_5 <= A_2247
    ?_6 <= A_2253
    ?_7 <= A_2261
    ?_8 <= B_2269
    ?_9 <= B_2278
    ?_10 <= ((f_2285) n_2286)
    ?_11 <= A_2298
    ?_12 <= B_2306
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_2320 : U} ->
           ∀ {n_2321 : nat_3} ->
             (vec_8‹??_23› A_2320 (succ_5‹› n_2321)) -> ?_17[0;0])
infer_tm(U)
infer_tm(∀ {n_2324 : nat_3} ->
           (vec_8‹??_23› A_2323 (succ_5‹› n_2324)) -> ?_17[0;0])
infer_tm(nat_3)
infer_tm((vec_8‹??_23› A_2323 (succ_5‹› n_2326)) -> ?_17[0;0])
infer_tm((vec_8‹??_23› A_2323 (succ_5‹› n_2326)))
check_tm( A_2323, Type‹??_23›)
infer_tm(A_2323)
assert_equal1( Type‹??_23›, U)
assert_equal1_extend( Type‹??_23›, U)
check_tm( (succ_5‹› n_2326), nat_3)
infer_tm((succ_5‹› n_2326))
check_tm( n_2326, nat_3)
infer_tm(n_2326)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_23›, U)
infer_tm(?_17[0;0])
delay_assert(?_59[0;3], ??_44)
simpl_tm ~expand:false( ?_59[0;3], Type‹??_44›)
check_tm(
  function hd_vec2_2329 :
    ∀ {A_2330 : U} ->
      ∀ {n_2331 : nat_3} ->
        (vec_8‹??_21› A_2330 (succ_5‹› n_2331)) -> ?_13[0;0]
  | A_2333 n_2334 xs_2335 =>
    match ?_14[0;0], xs_2335 in
      ∀ {n0_2336 : ?_15[0;0]} -o
        (vec_8‹??_22› A_2333 (succ_5‹› n0_2336)) -o ?_16[0;0]
    with
    | _2338, vnil_11 =>
    | _2339, (vcons_12 _2340 hd_2341 _2342) => hd_2341,
  ∀ {A_2343 : U} ->
    ∀ {n_2344 : nat_3} ->
      ∀ (xs_2345 : (vec_8‹??_23› A_2343 (succ_5‹› n_2344))) ->
        ?_17[0;3])
infer_tm(∀ {A_2347 : U} ->
           ∀ {n_2348 : nat_3} ->
             (vec_8‹??_21› A_2347 (succ_5‹› n_2348)) -> ?_13[0;0])
infer_tm(U)
infer_tm(∀ {n_2351 : nat_3} ->
           (vec_8‹??_21› A_2350 (succ_5‹› n_2351)) -> ?_13[0;0])
infer_tm(nat_3)
infer_tm((vec_8‹??_21› A_2350 (succ_5‹› n_2353)) -> ?_13[0;0])
infer_tm((vec_8‹??_21› A_2350 (succ_5‹› n_2353)))
check_tm( A_2350, Type‹??_21›)
infer_tm(A_2350)
assert_equal1( Type‹??_21›, U)
assert_equal1_extend( Type‹??_21›, U)
check_tm( (succ_5‹› n_2353), nat_3)
infer_tm((succ_5‹› n_2353))
check_tm( n_2353, nat_3)
infer_tm(n_2353)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_21›, U)
infer_tm(?_13[0;0])
delay_assert(?_60[0;3], ??_45)
simpl_tm ~expand:false( ?_60[0;3], Type‹??_45›)
assert_equal1(
  ∀ {A_2356 : U} ->
    ∀ {n_2357 : nat_3} ->
      ∀ (xs_2358 : (vec_8‹??_23› A_2356 (succ_5‹› n_2357))) ->
        ?_17[0;3],
  ∀ {A_2359 : U} ->
    ∀ {n_2360 : nat_3} ->
      ∀ (xs_2361 : (vec_8‹??_21› A_2359 (succ_5‹› n_2360))) ->
        ?_13[0;3])
assert_equal1_extend(
  ∀ {A_2372 : U} ->
    ∀ {n_2373 : nat_3} ->
      ∀ (xs_2374 : (vec_8‹??_23› A_2372 (succ_5‹› n_2373))) ->
        ?_17[0;3],
  ∀ {A_2375 : U} ->
    ∀ {n_2376 : nat_3} ->
      ∀ (xs_2377 : (vec_8‹??_21› A_2375 (succ_5‹› n_2376))) ->
        ?_13[0;3])
simpl_tm ~expand:false(
  ∀ {A_2387 : U} ->
    ∀ {n_2388 : nat_3} ->
      ∀ (xs_2389 : (vec_8‹U› A_2387 (succ_5‹› n_2388))) ->
        ?_17[0;3],
  ∀ {A_2390 : U} ->
    ∀ {n_2391 : nat_3} ->
      ∀ (xs_2392 : (vec_8‹U› A_2390 (succ_5‹› n_2391))) ->
        ?_13[0;3])
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false(
  ∀ {n_2394 : nat_3} ->
    ∀ (xs_2395 : (vec_8‹U› A_2393 (succ_5‹› n_2394))) -> ?_17[0;3],
  ∀ {n_2396 : nat_3} ->
    ∀ (xs_2397 : (vec_8‹U› A_2393 (succ_5‹› n_2396))) -> ?_13[0;3])
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  ∀ (xs_2399 : (vec_8‹U› A_2393 (succ_5‹› n_2398))) -> ?_17[0;3],
  ∀ (xs_2400 : (vec_8‹U› A_2393 (succ_5‹› n_2398))) -> ?_13[0;3])
simpl_tm ~expand:false( (vec_8‹U› A_2393 (succ_5‹› n_2398)),
  (vec_8‹U› A_2393 (succ_5‹› n_2398)))
simpl_tm ~expand:false( A_2393, A_2393)
simpl_tm ~expand:false( (succ_5‹› n_2398), (succ_5‹› n_2398))
simpl_tm ~expand:false( n_2398, n_2398)
simpl_tm ~expand:false( ?_17[0;3], ?_13[0;3])
check_cls {|
  prblm {| ;
    {|  ::: [A_2378, n_2379, xs_2380] =>?
         match ?_14[0;0], #xs_2380 in
           ∀ {n0_2408 : ?_15[0;0]} -o
             (vec_8‹??_22› #A_2378 (succ_5‹› n0_2408)) -o ?_16[0;0]
         with
         | _2410, vnil_11 =>
         | _2411, (vcons_12 _2412 hd_2413 _2414) => hd_2413
    |}
  |}
  a := ∀ {A_2415 : U} ->
         ∀ {n_2416 : nat_3} ->
           ∀ (xs_2417 : (vec_8‹U› A_2415 (succ_5‹› n_2416))) ->
             ?_13[0;3]
|}
case_intro(A_2418 : U)
case_intro(n_2419 : nat_3)
case_intro(xs_2420 : (vec_8‹U› #A_2418 (succ_5‹› #n_2419)))
case_coverage{|
  prblm {| ;
    {| eq_pat?( #A_2418, A_2378 : U)
       eq_pat?( #n_2419, n_2379 : nat_3)
       eq_pat?( #xs_2420, xs_2380 :
         (vec_8‹U› #A_2418 (succ_5‹› #n_2419))) ::: [] =>?
         match ?_14[0;0], #xs_2380 in
           ∀ {n0_2421 : ?_15[0;0]} -o
             (vec_8‹??_22› #A_2378 (succ_5‹› n0_2421)) -o ?_16[0;0]
         with
         | _2423, vnil_11 =>
         | _2424, (vcons_12 _2425 hd_2426 _2427) => hd_2426
    |}
  |}
|}
unify_local(
  eq_pat?( #A_2418, A_2378 : U)
  eq_pat?( #n_2419, n_2379 : nat_3)
  eq_pat?( #xs_2420, xs_2380 : (vec_8‹U› #A_2418 (succ_5‹› #n_2419)))
)
unify_global(  )
simpl_pprbm ~expand:false( #A_2418, #A_2378)
simpl_pprbm ~expand:false( #n_2419, #n_2379)
simpl_pprbm ~expand:false( #xs_2420, #xs_2380)
local_map solved
global_map solved
case_coverage_ok(
  match ?_14[0;0], xs_2420 in
    ∀ {n0_2438 : ?_15[0;0]} -o
      (vec_8‹??_22› A_2418 (succ_5‹› n0_2438)) -o ?_16[0;0]
  with
  | _2440, vnil_11 =>
  | _2441, (vcons_12 _2442 hd_2443 _2444) => hd_2443, ?_13[0;3])
check_tm(
  match ?_14[0;0], xs_2420 in
    ∀ {n0_2445 : ?_15[0;0]} -o
      (vec_8‹??_22› A_2418 (succ_5‹› n0_2445)) -o ?_16[0;0]
  with
  | _2447, vnil_11 =>
  | _2448, (vcons_12 _2449 hd_2450 _2451) => hd_2450, ?_13[0;3])
infer_tm(match ?_14[0;0], xs_2420 in
           ∀ {n0_2452 : ?_15[0;0]} -o
             (vec_8‹??_22› A_2418 (succ_5‹› n0_2452)) -o ?_16[0;0]
         with
         | _2454, vnil_11 =>
         | _2455, (vcons_12 _2456 hd_2457 _2458) => hd_2457)
infer_tm(?_15[0;0])
delay_assert(?_61[0;4], ??_46)
infer_tm(?_15[0;0])
simpl_tm ~expand:false( ?_61[0;4], Type‹??_46›)
check_tm( ?_14[0;0], ?_15[0;4])
infer_tm((vec_8‹??_22› A_2418 (succ_5‹› n0_2459)))
check_tm( A_2418, Type‹??_22›)
infer_tm(A_2418)
assert_equal1( Type‹??_22›, U)
assert_equal1_extend( Type‹??_22›, U)
check_tm( (succ_5‹› n0_2459), nat_3)
infer_tm((succ_5‹› n0_2459))
check_tm( n0_2459, nat_3)
infer_tm(n0_2459)
assert_equal1( nat_3, ?_15[0;4])
assert_equal1_extend( nat_3, ?_15[0;4])
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( nat_3, ?_15[0;4])
simpl_tm ~expand:false( Type‹??_22›, U)
infer_tm((vec_8‹??_22› A_2418 (succ_5‹› ?_14[0;0])))
check_tm( A_2418, Type‹??_22›)
infer_tm(A_2418)
assert_equal1( Type‹??_22›, U)
assert_equal1_extend( Type‹??_22›, U)
check_tm( (succ_5‹› ?_14[0;0]), nat_3)
infer_tm((succ_5‹› ?_14[0;0]))
check_tm( ?_14[0;0], nat_3)
assert_equal1( nat_3, ?_15[0;4])
assert_equal1_extend( nat_3, ?_15[0;4])
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( U, U)
check_tm( xs_2420, (vec_8‹??_22› A_2418 (succ_5‹› ?_14[0;4])))
infer_tm(xs_2420)
assert_equal1( (vec_8‹??_22› A_2418 (succ_5‹› ?_14[0;4])),
  (vec_8‹U› A_2418 (succ_5‹› n_2419)))
assert_equal1_extend( (vec_8‹??_22› A_2418 (succ_5‹› ?_14[0;4])),
  (vec_8‹U› A_2418 (succ_5‹› n_2419)))
infer_tm(?_16[0;0])
simpl_tm ~expand:false( (vec_8‹U› A_2418 (succ_5‹› ?_14[0;4])),
  (vec_8‹U› A_2418 (succ_5‹› n_2419)))
simpl_tm ~expand:false( A_2418, A_2418)
simpl_tm ~expand:false( (succ_5‹› ?_14[0;4]), (succ_5‹› n_2419))
simpl_tm ~expand:false( ?_14[0;4], n_2419)
delay_assert(?_62[0;6], ??_47)
infer_tm(?_16[0;0])
simpl_tm ~expand:false( ?_62[0;6], Type‹??_47›)
check_cls {|
  prblm {| ;
    () ::: [_2475, vnil_11] =>? !!
    {|  ::: [_2476, (vcons_12 _2477 hd_2478 _2479)] =>? #hd_2478 |}
  |}
  a := ∀ {n0_2486 : nat_3} -o
         ∀ (__2487 : (vec_8‹U› A_2418 (succ_5‹› n0_2486))) -o
           ?_16[0;6]
|}
case_intro(n0_2488 : nat_3)
case_intro(__2489 : (vec_8‹U› A_2418 (succ_5‹› #n0_2488)))
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_2418 (succ_5‹› #n0_2488)),
      (vec_8‹U› A_2418 zero_4));
    (eq_pat?( #n0_2488, _2475 : nat_3)) ::: [] =>? !!
  |}
|}
unify_local(  )
unify_global(
  eq_term?( (vec_8‹U› A_2418 (succ_5‹› #n0_2488)),
    (vec_8‹U› A_2418 zero_4))
)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› A_2418 (succ_5‹› #n0_2488)),
  (vec_8‹U› A_2418 zero_4))
simpl_pprbm ~expand:false( A_2418, A_2418)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2488), zero_4)
unifier1e.witnessed_distinct(succ_5, , zero_4, )splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_2418 (succ_5‹› #n0_2488)),
      (vec_8‹U› A_2418 (succ_5‹› #n_2493)));
    {| eq_pat?( #n0_2488, _2476 : nat_3)
       eq_pat?( #n_2493, _2477 : nat_3)
       eq_pat?( #hd_2494, hd_2478 : A_2418)
       eq_pat?( #tl_2495, _2479 : (vec_8‹U› A_2418 #n_2493)) ::: [] =>?
         #hd_2478
    |}
  |}
|}
unify_local(
  eq_pat?( #n0_2488, _2476 : nat_3)
  eq_pat?( #n_2493, _2477 : nat_3)
  eq_pat?( #hd_2494, hd_2478 : A_2418)
  eq_pat?( #tl_2495, _2479 : (vec_8‹U› A_2418 #n_2493))
)
unify_global(
  eq_term?( (vec_8‹U› A_2418 (succ_5‹› #n0_2488)),
    (vec_8‹U› A_2418 (succ_5‹› #n_2493)))
)
simpl_pprbm ~expand:false( #n0_2488, #_2476)
simpl_pprbm ~expand:false( #n_2493, #_2477)
simpl_pprbm ~expand:false( #hd_2494, #hd_2478)
simpl_pprbm ~expand:false( #tl_2495, #_2479)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› A_2418 (succ_5‹› #n0_2488)),
  (vec_8‹U› A_2418 (succ_5‹› #n_2493)))
simpl_pprbm ~expand:false( A_2418, A_2418)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2488), (succ_5‹› #n_2493))
simpl_pprbm ~expand:false( #n0_2488, #n_2493)
global_map solved
case_coverage_ok( hd_2494, ?_16[0;6])
check_tm( hd_2494, ?_16[0;6])
infer_tm(hd_2494)
assert_equal1( ?_16[0;6], A_2418)
assert_equal1_extend( ?_16[0;6], A_2418)
assert_equal1( ?_13[0;3], ?_16[0;6])
assert_equal1_extend( ?_13[0;3], ?_16[0;6])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2502
    ??_2 <= s_2504
    ??_3 <= r_2505
    ??_4 <= s_2507
    ??_5 <= s_2508
    ??_6 <= s_2509
    ??_7 <= s_2510
    ??_8 <= s_2511
    ??_9 <= s_2512
    ??_10 <= s_2514
    ??_11 <= ??_10
    ??_12 <= s_2518
    ??_13 <= ??_12
    ??_14 <= s_2523
    ??_15 <= r_2525
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_2538
    ?_2 <= A_2541
    ?_3 <= A_2547
    ?_4 <= A_2553
    ?_5 <= A_2559
    ?_6 <= A_2565
    ?_7 <= A_2573
    ?_8 <= B_2581
    ?_9 <= B_2590
    ?_10 <= ((f_2597) n_2598)
    ?_11 <= A_2610
    ?_12 <= B_2618
    ?_14 <= n_2621
    ?_15 <= nat_3
    ?_17 <= ?_13[0;3]
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    
  |}
  eqns {|
    equal_tm? (?_13[0;3], ?_16[0;6]);
    equal_tm? (?_16[0;6], A_2418)
  |}
end_dump
simpl_tm ~expand:false( ?_13[0;3], ?_16[0;6])
simpl_tm ~expand:false( ?_13[0;3], A_2418)
attempt_delay(?_13[0;3] : ?_60[0;3])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_45›)
check_tm( A_2350, Type‹??_45›)
infer_tm(A_2350)
assert_equal1( Type‹??_45›, U)
assert_equal1_extend( Type‹??_45›, U)
simpl_tm ~expand:false( Type‹??_45›, U)
attempt_delay(?_14[0;4] : ?_15[0;4])
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( n_2419, nat_3)
infer_tm(n_2419)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_15[0;4] : ?_61[0;4])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_46›)
check_tm( nat_3, Type‹??_46›)
infer_tm(nat_3)
assert_equal1( Type‹??_46›, U)
assert_equal1_extend( Type‹??_46›, U)
simpl_tm ~expand:false( Type‹??_46›, U)
attempt_delay(?_16[0;6] : ?_62[0;6])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_47›)
check_tm( A_2418, Type‹??_47›)
infer_tm(A_2418)
assert_equal1( Type‹??_47›, U)
assert_equal1_extend( Type‹??_47›, U)
simpl_tm ~expand:false( Type‹??_47›, U)
attempt_delay(?_17[0;3] : ?_59[0;3])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_44›)
check_tm( A_2323, Type‹??_44›)
infer_tm(A_2323)
assert_equal1( Type‹??_44›, U)
assert_equal1_extend( Type‹??_44›, U)
simpl_tm ~expand:false( Type‹??_44›, U)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2773 : U} ->
           ∀ {n_2774 : nat_3} ->
             (vec_8‹??_25› A_2773 (succ_5‹› n_2774)) -> ?_21[0;0])
infer_tm(U)
infer_tm(∀ {n_2777 : nat_3} ->
           (vec_8‹??_25› A_2776 (succ_5‹› n_2777)) -> ?_21[0;0])
infer_tm(nat_3)
infer_tm((vec_8‹??_25› A_2776 (succ_5‹› n_2779)) -> ?_21[0;0])
infer_tm((vec_8‹??_25› A_2776 (succ_5‹› n_2779)))
check_tm( A_2776, Type‹??_25›)
infer_tm(A_2776)
assert_equal1( Type‹??_25›, U)
assert_equal1_extend( Type‹??_25›, U)
check_tm( (succ_5‹› n_2779), nat_3)
infer_tm((succ_5‹› n_2779))
check_tm( n_2779, nat_3)
infer_tm(n_2779)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_25›, U)
infer_tm(?_21[0;0])
delay_assert(?_63[0;3], ??_48)
simpl_tm ~expand:false( ?_63[0;3], Type‹??_48›)
check_tm(
  function hd_vec3_2782 :
    ∀ {A_2783 : U} ->
      ∀ {n_2784 : nat_3} ->
        (vec_8‹??_24› A_2783 (succ_5‹› n_2784)) -> ?_18[0;0]
  | A_2786 n_2787 xs_2788 =>
    match xs_2788 in ?_19[0;0] -o ?_20[0;0] with
    | vnil_11 =>
    | (vcons_12 _2790 hd_2791 _2792) => hd_2791,
  ∀ {A_2793 : U} ->
    ∀ {n_2794 : nat_3} ->
      ∀ (xs_2795 : (vec_8‹??_25› A_2793 (succ_5‹› n_2794))) ->
        ?_21[0;3])
infer_tm(∀ {A_2797 : U} ->
           ∀ {n_2798 : nat_3} ->
             (vec_8‹??_24› A_2797 (succ_5‹› n_2798)) -> ?_18[0;0])
infer_tm(U)
infer_tm(∀ {n_2801 : nat_3} ->
           (vec_8‹??_24› A_2800 (succ_5‹› n_2801)) -> ?_18[0;0])
infer_tm(nat_3)
infer_tm((vec_8‹??_24› A_2800 (succ_5‹› n_2803)) -> ?_18[0;0])
infer_tm((vec_8‹??_24› A_2800 (succ_5‹› n_2803)))
check_tm( A_2800, Type‹??_24›)
infer_tm(A_2800)
assert_equal1( Type‹??_24›, U)
assert_equal1_extend( Type‹??_24›, U)
check_tm( (succ_5‹› n_2803), nat_3)
infer_tm((succ_5‹› n_2803))
check_tm( n_2803, nat_3)
infer_tm(n_2803)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_24›, U)
infer_tm(?_18[0;0])
delay_assert(?_64[0;3], ??_49)
simpl_tm ~expand:false( ?_64[0;3], Type‹??_49›)
assert_equal1(
  ∀ {A_2806 : U} ->
    ∀ {n_2807 : nat_3} ->
      ∀ (xs_2808 : (vec_8‹??_25› A_2806 (succ_5‹› n_2807))) ->
        ?_21[0;3],
  ∀ {A_2809 : U} ->
    ∀ {n_2810 : nat_3} ->
      ∀ (xs_2811 : (vec_8‹??_24› A_2809 (succ_5‹› n_2810))) ->
        ?_18[0;3])
assert_equal1_extend(
  ∀ {A_2822 : U} ->
    ∀ {n_2823 : nat_3} ->
      ∀ (xs_2824 : (vec_8‹??_25› A_2822 (succ_5‹› n_2823))) ->
        ?_21[0;3],
  ∀ {A_2825 : U} ->
    ∀ {n_2826 : nat_3} ->
      ∀ (xs_2827 : (vec_8‹??_24› A_2825 (succ_5‹› n_2826))) ->
        ?_18[0;3])
simpl_tm ~expand:false(
  ∀ {A_2837 : U} ->
    ∀ {n_2838 : nat_3} ->
      ∀ (xs_2839 : (vec_8‹U› A_2837 (succ_5‹› n_2838))) ->
        ?_21[0;3],
  ∀ {A_2840 : U} ->
    ∀ {n_2841 : nat_3} ->
      ∀ (xs_2842 : (vec_8‹U› A_2840 (succ_5‹› n_2841))) ->
        ?_18[0;3])
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false(
  ∀ {n_2844 : nat_3} ->
    ∀ (xs_2845 : (vec_8‹U› A_2843 (succ_5‹› n_2844))) -> ?_21[0;3],
  ∀ {n_2846 : nat_3} ->
    ∀ (xs_2847 : (vec_8‹U› A_2843 (succ_5‹› n_2846))) -> ?_18[0;3])
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  ∀ (xs_2849 : (vec_8‹U› A_2843 (succ_5‹› n_2848))) -> ?_21[0;3],
  ∀ (xs_2850 : (vec_8‹U› A_2843 (succ_5‹› n_2848))) -> ?_18[0;3])
simpl_tm ~expand:false( (vec_8‹U› A_2843 (succ_5‹› n_2848)),
  (vec_8‹U› A_2843 (succ_5‹› n_2848)))
simpl_tm ~expand:false( A_2843, A_2843)
simpl_tm ~expand:false( (succ_5‹› n_2848), (succ_5‹› n_2848))
simpl_tm ~expand:false( n_2848, n_2848)
simpl_tm ~expand:false( ?_21[0;3], ?_18[0;3])
check_cls {|
  prblm {| ;
    {|  ::: [A_2828, n_2829, xs_2830] =>?
         match #xs_2830 in ?_19[0;0] -o ?_20[0;0] with
         | vnil_11 =>
         | (vcons_12 _2859 hd_2860 _2861) => hd_2860
    |}
  |}
  a := ∀ {A_2862 : U} ->
         ∀ {n_2863 : nat_3} ->
           ∀ (xs_2864 : (vec_8‹U› A_2862 (succ_5‹› n_2863))) ->
             ?_18[0;3]
|}
case_intro(A_2865 : U)
case_intro(n_2866 : nat_3)
case_intro(xs_2867 : (vec_8‹U› #A_2865 (succ_5‹› #n_2866)))
case_coverage{|
  prblm {| ;
    {| eq_pat?( #A_2865, A_2828 : U)
       eq_pat?( #n_2866, n_2829 : nat_3)
       eq_pat?( #xs_2867, xs_2830 :
         (vec_8‹U› #A_2865 (succ_5‹› #n_2866))) ::: [] =>?
         match #xs_2830 in ?_19[0;0] -o ?_20[0;0] with
         | vnil_11 =>
         | (vcons_12 _2869 hd_2870 _2871) => hd_2870
    |}
  |}
|}
unify_local(
  eq_pat?( #A_2865, A_2828 : U)
  eq_pat?( #n_2866, n_2829 : nat_3)
  eq_pat?( #xs_2867, xs_2830 : (vec_8‹U› #A_2865 (succ_5‹› #n_2866)))
)
unify_global(  )
simpl_pprbm ~expand:false( #A_2865, #A_2828)
simpl_pprbm ~expand:false( #n_2866, #n_2829)
simpl_pprbm ~expand:false( #xs_2867, #xs_2830)
local_map solved
global_map solved
case_coverage_ok(
  match xs_2867 in ?_19[0;0] -o ?_20[0;0] with
  | vnil_11 =>
  | (vcons_12 _2880 hd_2881 _2882) => hd_2881, ?_18[0;3])
check_tm(
  match xs_2867 in ?_19[0;0] -o ?_20[0;0] with
  | vnil_11 =>
  | (vcons_12 _2884 hd_2885 _2886) => hd_2885, ?_18[0;3])
infer_tm(match xs_2867 in ?_19[0;0] -o ?_20[0;0] with
         | vnil_11 =>
         | (vcons_12 _2888 hd_2889 _2890) => hd_2889)
infer_tm(?_19[0;0])
delay_assert(?_65[0;4], ??_50)
infer_tm(?_19[0;0])
simpl_tm ~expand:false( ?_65[0;4], Type‹??_50›)
check_tm( xs_2867, ?_19[0;4])
infer_tm(xs_2867)
assert_equal1( ?_19[0;4], (vec_8‹U› A_2865 (succ_5‹› n_2866)))
assert_equal1_extend( ?_19[0;4], (vec_8‹U› A_2865 (succ_5‹› n_2866)))
infer_tm(?_20[0;0])
simpl_tm ~expand:false( ?_19[0;4],
  (vec_8‹U› A_2865 (succ_5‹› n_2866)))
delay_assert(?_66[0;5], ??_51)
infer_tm(?_20[0;0])
simpl_tm ~expand:false( ?_66[0;5], Type‹??_51›)
check_cls {|
  prblm {| ;
    () ::: [vnil_11] =>? !!
    {|  ::: [(vcons_12 _2901 hd_2902 _2903)] =>? #hd_2902 |}
  |}
  a := ∀ (_2909 : (vec_8‹U› A_2865 (succ_5‹› n_2866))) -o ?_20[0;5]
|}
case_intro(_2910 : (vec_8‹U› A_2865 (succ_5‹› n_2866)))
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_2865 (succ_5‹› n_2866)),
      (vec_8‹U› A_2865 zero_4));
    () ::: [] =>? !!
  |}
|}
unify_local(  )
unify_global(
  eq_term?( (vec_8‹U› A_2865 (succ_5‹› n_2866)),
    (vec_8‹U› A_2865 zero_4))
)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› A_2865 (succ_5‹› n_2866)),
  (vec_8‹U› A_2865 zero_4))
simpl_pprbm ~expand:false( A_2865, A_2865)
simpl_pprbm ~expand:false( (succ_5‹› n_2866), zero_4)
unifier1e.witnessed_distinct(succ_5, , zero_4, )splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_2865 (succ_5‹› n_2866)),
      (vec_8‹U› A_2865 (succ_5‹› #n_2914)));
    {| eq_pat?( #n_2914, _2901 : nat_3)
       eq_pat?( #hd_2915, hd_2902 : A_2865)
       eq_pat?( #tl_2916, _2903 : (vec_8‹U› A_2865 #n_2914)) ::: [] =>?
         #hd_2902
    |}
  |}
|}
unify_local(
  eq_pat?( #n_2914, _2901 : nat_3)
  eq_pat?( #hd_2915, hd_2902 : A_2865)
  eq_pat?( #tl_2916, _2903 : (vec_8‹U› A_2865 #n_2914))
)
unify_global(
  eq_term?( (vec_8‹U› A_2865 (succ_5‹› n_2866)),
    (vec_8‹U› A_2865 (succ_5‹› #n_2914)))
)
simpl_pprbm ~expand:false( #n_2914, #_2901)
simpl_pprbm ~expand:false( #hd_2915, #hd_2902)
simpl_pprbm ~expand:false( #tl_2916, #_2903)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› A_2865 (succ_5‹› n_2866)),
  (vec_8‹U› A_2865 (succ_5‹› #n_2914)))
simpl_pprbm ~expand:false( A_2865, A_2865)
simpl_pprbm ~expand:false( (succ_5‹› n_2866), (succ_5‹› #n_2914))
simpl_pprbm ~expand:false( n_2866, #n_2914)
global_map solved
case_coverage_ok( hd_2915, ?_20[0;5])
check_tm( hd_2915, ?_20[0;5])
infer_tm(hd_2915)
assert_equal1( ?_20[0;5], A_2865)
assert_equal1_extend( ?_20[0;5], A_2865)
assert_equal1( ?_18[0;3], ?_20[0;5])
assert_equal1_extend( ?_18[0;3], ?_20[0;5])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2923
    ??_2 <= s_2925
    ??_3 <= r_2926
    ??_4 <= s_2928
    ??_5 <= s_2929
    ??_6 <= s_2930
    ??_7 <= s_2931
    ??_8 <= s_2932
    ??_9 <= s_2933
    ??_10 <= s_2935
    ??_11 <= ??_10
    ??_12 <= s_2939
    ??_13 <= ??_12
    ??_14 <= s_2944
    ??_15 <= r_2946
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    ??_24 <= U
    ??_25 <= U
    ??_44 <= U
    ??_45 <= U
    ??_46 <= U
    ??_47 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_2959
    ?_2 <= A_2962
    ?_3 <= A_2968
    ?_4 <= A_2974
    ?_5 <= A_2980
    ?_6 <= A_2986
    ?_7 <= A_2994
    ?_8 <= B_3002
    ?_9 <= B_3011
    ?_10 <= ((f_3018) n_3019)
    ?_11 <= A_3031
    ?_12 <= B_3039
    ?_13 <= A_3043
    ?_14 <= n_3045
    ?_15 <= nat_3
    ?_16 <= ?_13[0;3]
    ?_17 <= ?_13[0;3]
    ?_19 <= (vec_8‹U› A_3063 (succ_5‹› n_3062))
    ?_21 <= ?_18[0;3]
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    ?_63 <= Type‹??_48›
    ?_64 <= Type‹??_49›
    ?_65 <= Type‹??_50›
    ?_66 <= Type‹??_51›
    
  |}
  eqns {|
    equal_tm? (?_18[0;3], ?_20[0;5]);
    equal_tm? (?_20[0;5], A_2865)
  |}
end_dump
simpl_tm ~expand:false( ?_18[0;3], ?_20[0;5])
simpl_tm ~expand:false( ?_18[0;3], A_2865)
attempt_delay(?_18[0;3] : ?_64[0;3])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_49›)
check_tm( A_2800, Type‹??_49›)
infer_tm(A_2800)
assert_equal1( Type‹??_49›, U)
assert_equal1_extend( Type‹??_49›, U)
simpl_tm ~expand:false( Type‹??_49›, U)
attempt_delay(?_19[0;4] : ?_65[0;4])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_50›)
check_tm( (vec_8‹U› A_2865 (succ_5‹› n_2866)), Type‹??_50›)
infer_tm((vec_8‹U› A_2865 (succ_5‹› n_2866)))
check_tm( A_2865, U)
infer_tm(A_2865)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm( (succ_5‹› n_2866), nat_3)
infer_tm((succ_5‹› n_2866))
check_tm( n_2866, nat_3)
infer_tm(n_2866)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( Type‹??_50›, U)
assert_equal1_extend( Type‹??_50›, U)
simpl_tm ~expand:false( Type‹??_50›, U)
attempt_delay(?_20[0;5] : ?_66[0;5])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_51›)
check_tm( A_2865, Type‹??_51›)
infer_tm(A_2865)
assert_equal1( Type‹??_51›, U)
assert_equal1_extend( Type‹??_51›, U)
simpl_tm ~expand:false( Type‹??_51›, U)
attempt_delay(?_21[0;3] : ?_63[0;3])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_48›)
check_tm( A_2776, Type‹??_48›)
infer_tm(A_2776)
assert_equal1( Type‹??_48›, U)
assert_equal1_extend( Type‹??_48›, U)
simpl_tm ~expand:false( Type‹??_48›, U)
----------------------------------

definition-------------------------
infer_tm(∀ {A_3197 : U} ->
           ∀ {n_3198 : nat_3} ->
             (vec_8‹??_38› A_3197 n_3198) ->
               (exists_5‹??_40,??_41›
                 ?_45[0;0]
                 function _3200 : ?_42[0;0] -> ?_43[0;0]
                 | x_3202 => (eq_4‹??_39› ?_44[0;0] x_3202 n_3198)))
infer_tm(U)
infer_tm(∀ {n_3204 : nat_3} ->
           (vec_8‹??_38› A_3203 n_3204) ->
             (exists_5‹??_40,??_41›
               ?_45[0;0]
               function _3206 : ?_42[0;0] -> ?_43[0;0]
               | x_3208 => (eq_4‹??_39› ?_44[0;0] x_3208 n_3204)))
infer_tm(nat_3)
infer_tm((vec_8‹??_38› A_3203 n_3209) ->
           (exists_5‹??_40,??_41›
             ?_45[0;0]
             function _3211 : ?_42[0;0] -> ?_43[0;0]
             | x_3213 => (eq_4‹??_39› ?_44[0;0] x_3213 n_3209)))
infer_tm((vec_8‹??_38› A_3203 n_3209))
check_tm( A_3203, Type‹??_38›)
infer_tm(A_3203)
assert_equal1( Type‹??_38›, U)
assert_equal1_extend( Type‹??_38›, U)
check_tm( n_3209, nat_3)
infer_tm(n_3209)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_38›, U)
infer_tm((exists_5‹??_40,??_41›
           ?_45[0;0]
           function _3215 : ?_42[0;0] -> ?_43[0;0]
           | x_3217 => (eq_4‹??_39› ?_44[0;0] x_3217 n_3209)))
check_tm( ?_45[0;0], Type‹??_40›)
check_tm(
  function _3218 : ?_42[0;0] -> ?_43[0;0]
  | x_3220 => (eq_4‹??_39› ?_44[0;0] x_3220 n_3209),
  ?_45[0;3] -> Type‹??_41›)
infer_tm(?_42[0;0] -> ?_43[0;0])
infer_tm(?_42[0;0])
delay_assert(?_67[0;3], ??_52)
infer_tm(?_43[0;0])
simpl_tm ~expand:false( ?_67[0;3], Type‹??_52›)
delay_assert(?_68[0;4], ??_53)
simpl_tm ~expand:false( ?_68[0;4], Type‹??_53›)
assert_equal1( ?_45[0;3] -> Type‹??_41›,
  ∀ (x_3226 : ?_42[0;3]) -> ?_43[0;4])
assert_equal1_extend( ?_45[0;3] -> Type‹??_41›,
  ∀ (x_3228 : ?_42[0;3]) -> ?_43[0;4])
simpl_tm ~expand:false( ?_45[0;3] -> Type‹??_41›,
  ∀ (x_3233 : ?_42[0;3]) -> ?_43[0;4])
simpl_tm ~expand:false( ?_45[0;3], ?_42[0;3])
simpl_tm ~expand:false( Type‹??_41›, ?_43[0;4])
simpl_tm ~expand:false( Type‹??_41›, ?_43[0;4])
check_cls {|
  prblm {| ;
    {|  ::: [x_3229] =>? (eq_4‹??_39› ?_44[0;0] #x_3229 n_3209) |}
  |}
  a := ?_42[0;3] -> Type‹??_41›
|}
case_intro(__3240 : ?_42[0;3])
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3240, x_3229 : ?_42[0;3]) ::: [] =>?
         (eq_4‹??_39› ?_44[0;0] #x_3229 n_3209)
    |}
  |}
|}
unify_local( eq_pat?( #__3240, x_3229 : ?_42[0;3]) )
unify_global(  )
simpl_pprbm ~expand:false( #__3240, #x_3229)
local_map solved
global_map solved
case_coverage_ok( (eq_4‹??_39› ?_44[0;0] __3240 n_3209), Type‹??_41›)
check_tm( (eq_4‹??_39› ?_44[0;0] __3240 n_3209), Type‹??_41›)
infer_tm((eq_4‹??_39› ?_44[0;0] __3240 n_3209))
check_tm( ?_44[0;0], Type‹??_39›)
check_tm( __3240, ?_44[0;5])
infer_tm(__3240)
assert_equal1( ?_44[0;5], ?_42[0;3])
assert_equal1_extend( ?_44[0;5], ?_42[0;3])
check_tm( n_3209, ?_44[0;5])
infer_tm(n_3209)
assert_equal1( ?_44[0;5], nat_3)
assert_equal1_extend( ?_44[0;5], nat_3)
assert_equal1( Type‹??_41›, U)
assert_equal1_extend( Type‹??_41›, U)
simpl_tm ~expand:false( Type‹??_41›, U)
simpl_tm ~expand:false( ?_44[0;5], nat_3)
simpl_tm ~expand:false( nat_3, ?_42[0;3])
check_tm(
  function vlength_3247 :
    ∀ {A_3248 : U} ->
      ∀ {n_3249 : nat_3} ->
        (vec_8‹??_26› A_3248 n_3249) ->
          (exists_5‹??_28,??_29›
            ?_25[0;0]
            function _3251 : ?_22[0;0] -> ?_23[0;0]
            | x_3253 => (eq_4‹??_27› ?_24[0;0] x_3253 n_3249))
  | A_3254 n_3255 vnil_11 =>
    (ex_7‹??_31,??_32›
      ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0]))
  | A_3256 n_3257 (vcons_12 _3258 _3259 tl_3260) =>
    match ((vlength_3247) ?_31[0;0] ?_30[0;0] tl_3260) in
      ?_32[0;0] -o ?_33[0;0]
    with
    | (ex_7 n_3262 pf_3263) =>
      (ex_7‹??_36,??_37›
        ?_40[0;0] ?_41[0;0] (succ_5‹› n_3262)
        ((congr_3‹??_33,??_34,??_35›)
          ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
          function _3264 : ?_34[0;0] -> ?_35[0;0]
          | x_3266 => (succ_5‹› x_3266) pf_3263)),
  ∀ {A_3267 : U} ->
    ∀ {n_3268 : nat_3} ->
      ∀ (__3269 : (vec_8‹??_38› A_3267 n_3268)) ->
        (exists_5‹??_40,??_41›
          ?_45[0;3]
          function _3270 : ∀ (x_3271 : ?_42[0;3]) -> ?_43[0;4]
          | __3272 => (eq_4‹??_39› ?_44[0;5] __3272 n_3268)))
infer_tm(∀ {A_3274 : U} ->
           ∀ {n_3275 : nat_3} ->
             (vec_8‹??_26› A_3274 n_3275) ->
               (exists_5‹??_28,??_29›
                 ?_25[0;0]
                 function _3277 : ?_22[0;0] -> ?_23[0;0]
                 | x_3279 => (eq_4‹??_27› ?_24[0;0] x_3279 n_3275)))
infer_tm(U)
infer_tm(∀ {n_3281 : nat_3} ->
           (vec_8‹??_26› A_3280 n_3281) ->
             (exists_5‹??_28,??_29›
               ?_25[0;0]
               function _3283 : ?_22[0;0] -> ?_23[0;0]
               | x_3285 => (eq_4‹??_27› ?_24[0;0] x_3285 n_3281)))
infer_tm(nat_3)
infer_tm((vec_8‹??_26› A_3280 n_3286) ->
           (exists_5‹??_28,??_29›
             ?_25[0;0]
             function _3288 : ?_22[0;0] -> ?_23[0;0]
             | x_3290 => (eq_4‹??_27› ?_24[0;0] x_3290 n_3286)))
infer_tm((vec_8‹??_26› A_3280 n_3286))
check_tm( A_3280, Type‹??_26›)
infer_tm(A_3280)
assert_equal1( Type‹??_26›, U)
assert_equal1_extend( Type‹??_26›, U)
check_tm( n_3286, nat_3)
infer_tm(n_3286)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_26›, U)
infer_tm((exists_5‹??_28,??_29›
           ?_25[0;0]
           function _3292 : ?_22[0;0] -> ?_23[0;0]
           | x_3294 => (eq_4‹??_27› ?_24[0;0] x_3294 n_3286)))
check_tm( ?_25[0;0], Type‹??_28›)
check_tm(
  function _3295 : ?_22[0;0] -> ?_23[0;0]
  | x_3297 => (eq_4‹??_27› ?_24[0;0] x_3297 n_3286),
  ?_25[0;3] -> Type‹??_29›)
infer_tm(?_22[0;0] -> ?_23[0;0])
infer_tm(?_22[0;0])
delay_assert(?_69[0;3], ??_54)
infer_tm(?_23[0;0])
simpl_tm ~expand:false( ?_69[0;3], Type‹??_54›)
delay_assert(?_70[0;4], ??_55)
simpl_tm ~expand:false( ?_70[0;4], Type‹??_55›)
assert_equal1( ?_25[0;3] -> Type‹??_29›,
  ∀ (x_3303 : ?_22[0;3]) -> ?_23[0;4])
assert_equal1_extend( ?_25[0;3] -> Type‹??_29›,
  ∀ (x_3305 : ?_22[0;3]) -> ?_23[0;4])
simpl_tm ~expand:false( ?_25[0;3] -> Type‹??_29›,
  ∀ (x_3310 : ?_22[0;3]) -> ?_23[0;4])
simpl_tm ~expand:false( ?_25[0;3], ?_22[0;3])
simpl_tm ~expand:false( Type‹??_29›, ?_23[0;4])
simpl_tm ~expand:false( Type‹??_29›, ?_23[0;4])
check_cls {|
  prblm {| ;
    {|  ::: [x_3306] =>? (eq_4‹??_27› ?_24[0;0] #x_3306 n_3286) |}
  |}
  a := ?_22[0;3] -> Type‹??_29›
|}
case_intro(__3317 : ?_22[0;3])
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3317, x_3306 : ?_22[0;3]) ::: [] =>?
         (eq_4‹??_27› ?_24[0;0] #x_3306 n_3286)
    |}
  |}
|}
unify_local( eq_pat?( #__3317, x_3306 : ?_22[0;3]) )
unify_global(  )
simpl_pprbm ~expand:false( #__3317, #x_3306)
local_map solved
global_map solved
case_coverage_ok( (eq_4‹??_27› ?_24[0;0] __3317 n_3286), Type‹??_29›)
check_tm( (eq_4‹??_27› ?_24[0;0] __3317 n_3286), Type‹??_29›)
infer_tm((eq_4‹??_27› ?_24[0;0] __3317 n_3286))
check_tm( ?_24[0;0], Type‹??_27›)
check_tm( __3317, ?_24[0;5])
infer_tm(__3317)
assert_equal1( ?_24[0;5], ?_22[0;3])
assert_equal1_extend( ?_24[0;5], ?_22[0;3])
check_tm( n_3286, ?_24[0;5])
infer_tm(n_3286)
assert_equal1( ?_24[0;5], nat_3)
assert_equal1_extend( ?_24[0;5], nat_3)
assert_equal1( Type‹??_29›, U)
assert_equal1_extend( Type‹??_29›, U)
simpl_tm ~expand:false( Type‹??_29›, U)
simpl_tm ~expand:false( ?_24[0;5], nat_3)
simpl_tm ~expand:false( nat_3, ?_22[0;3])
assert_equal1(
  ∀ {A_3324 : U} ->
    ∀ {n_3325 : nat_3} ->
      ∀ (__3326 : (vec_8‹??_38› A_3324 n_3325)) ->
        (exists_5‹??_40,??_41›
          ?_45[0;3]
          function _3327 : ∀ (x_3328 : ?_42[0;3]) -> ?_43[0;4]
          | __3329 => (eq_4‹??_39› ?_44[0;5] __3329 n_3325)),
  ∀ {A_3330 : U} ->
    ∀ {n_3331 : nat_3} ->
      ∀ (__3332 : (vec_8‹??_26› A_3330 n_3331)) ->
        (exists_5‹??_28,??_29›
          ?_25[0;3]
          function _3333 : ∀ (x_3334 : ?_22[0;3]) -> ?_23[0;4]
          | __3335 => (eq_4‹??_27› ?_24[0;5] __3335 n_3331)))
assert_equal1_extend(
  ∀ {A_3346 : U} ->
    ∀ {n_3347 : nat_3} ->
      ∀ (__3348 : (vec_8‹??_38› A_3346 n_3347)) ->
        (exists_5‹??_40,??_41›
          ?_45[0;3]
          function _3349 : ∀ (x_3350 : ?_42[0;3]) -> ?_43[0;4]
          | __3351 => (eq_4‹??_39› ?_44[0;5] __3351 n_3347)),
  ∀ {A_3352 : U} ->
    ∀ {n_3353 : nat_3} ->
      ∀ (__3354 : (vec_8‹??_26› A_3352 n_3353)) ->
        (exists_5‹??_28,??_29›
          ?_25[0;3]
          function _3355 : ∀ (x_3356 : ?_22[0;3]) -> ?_23[0;4]
          | __3357 => (eq_4‹??_27› ?_24[0;5] __3357 n_3353)))
simpl_tm ~expand:false(
  ∀ {A_3413 : U} ->
    ∀ {n_3414 : nat_3} ->
      (vec_8‹U› A_3413 n_3414) ->
        (exists_5‹??_40,U›
          nat_3
          function _3416 : nat_3 -> U
          | __3418 => (eq_4‹??_39› nat_3 __3418 n_3414)),
  ∀ {A_3419 : U} ->
    ∀ {n_3420 : nat_3} ->
      (vec_8‹U› A_3419 n_3420) ->
        (exists_5‹??_28,U›
          nat_3
          function _3422 : nat_3 -> U
          | __3424 => (eq_4‹??_27› nat_3 __3424 n_3420)))
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false(
  ∀ {n_3426 : nat_3} ->
    (vec_8‹U› A_3425 n_3426) ->
      (exists_5‹??_40,U›
        nat_3
        function _3428 : nat_3 -> U
        | __3430 => (eq_4‹??_39› nat_3 __3430 n_3426)),
  ∀ {n_3431 : nat_3} ->
    (vec_8‹U› A_3425 n_3431) ->
      (exists_5‹??_28,U›
        nat_3
        function _3433 : nat_3 -> U
        | __3435 => (eq_4‹??_27› nat_3 __3435 n_3431)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  (vec_8‹U› A_3425 n_3436) ->
    (exists_5‹??_40,U›
      nat_3
      function _3438 : nat_3 -> U
      | __3440 => (eq_4‹??_39› nat_3 __3440 n_3436)),
  (vec_8‹U› A_3425 n_3436) ->
    (exists_5‹??_28,U›
      nat_3
      function _3442 : nat_3 -> U
      | __3444 => (eq_4‹??_27› nat_3 __3444 n_3436)))
simpl_tm ~expand:false( (vec_8‹U› A_3425 n_3436),
  (vec_8‹U› A_3425 n_3436))
simpl_tm ~expand:false( A_3425, A_3425)
simpl_tm ~expand:false( n_3436, n_3436)
simpl_tm ~expand:false(
  (exists_5‹??_40,U›
    nat_3
    function _3446 : nat_3 -> U
    | __3448 => (eq_4‹??_39› nat_3 __3448 n_3436)),
  (exists_5‹??_28,U›
    nat_3
    function _3449 : nat_3 -> U
    | __3451 => (eq_4‹??_27› nat_3 __3451 n_3436)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _3452 : nat_3 -> U
  | __3454 => (eq_4‹??_39› nat_3 __3454 n_3436),
  function _3455 : nat_3 -> U
  | __3457 => (eq_4‹??_27› nat_3 __3457 n_3436))
simpl_function(
  function _3458 : nat_3 -> U
  | __3460 => (eq_4‹??_39› nat_3 __3460 n_3436),
  function _3461 : nat_3 -> U
  | __3463 => (eq_4‹??_27› nat_3 __3463 n_3436))
simpl_tm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false( (eq_4‹??_39› nat_3 __3468 n_3436),
  (eq_4‹??_27› nat_3 __3468 n_3436))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( __3468, __3468)
simpl_tm ~expand:false( n_3436, n_3436)
check_cls {|
  prblm {| ;
    {|  ::: [A_3358, n_3359, vnil_11] =>?
         (ex_7‹??_31,??_32›
           ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0]))
    |}
    {|  ::: [A_3360, n_3361, (vcons_12 _3362 _3363 tl_3364)] =>?
         match ((vlength_3273) ?_31[0;0] ?_30[0;0] #tl_3364) in
           ?_32[0;0] -o ?_33[0;0]
         with
         | (ex_7 n_3494 pf_3495) =>
           (ex_7‹??_36,??_37›
             ?_40[0;0] ?_41[0;0] (succ_5‹› n_3494)
             ((congr_3‹??_33,??_34,??_35›)
               ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
               function _3496 : ?_34[0;0] -> ?_35[0;0]
               | x_3498 => (succ_5‹› x_3498) pf_3495))
    |}
  |}
  a := ∀ {A_3499 : U} ->
         ∀ {n_3500 : nat_3} ->
           (vec_8‹U› A_3499 n_3500) ->
             (exists_5‹??_28,U›
               nat_3
               function _3502 : nat_3 -> U
               | __3504 => (eq_4‹??_27› nat_3 __3504 n_3500))
|}
case_intro(A_3505 : U)
case_intro(n_3506 : nat_3)
case_intro(__3507 : (vec_8‹U› #A_3505 #n_3506))
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› #A_3505 #n_3506), (vec_8‹U› #A_3505 zero_4));
    {| eq_pat?( #A_3505, A_3358 : U)
       eq_pat?( #n_3506, n_3359 : nat_3) ::: [] =>?
         (ex_7‹??_31,??_32›
           ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0]))
    |}
  |}
|}
unify_local( eq_pat?( #A_3505, A_3358 : U)
             eq_pat?( #n_3506, n_3359 : nat_3)
)
unify_global(
  eq_term?( (vec_8‹U› #A_3505 #n_3506), (vec_8‹U› #A_3505 zero_4))
)
simpl_pprbm ~expand:false( #A_3505, #A_3358)
simpl_pprbm ~expand:false( #n_3506, #n_3359)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› #A_3505 #n_3506),
  (vec_8‹U› #A_3505 zero_4))
simpl_pprbm ~expand:false( #A_3505, #A_3505)
simpl_pprbm ~expand:false( #n_3506, zero_4)
global_map solved
case_coverage_ok(
  (ex_7‹??_31,??_32›
    ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0])),
  (exists_5‹??_28,U›
    nat_3
    function _3526 : nat_3 -> U
    | __3528 => (eq_4‹??_27› nat_3 __3528 zero_4)))
check_tm(
  (ex_7‹??_31,??_32›
    ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0])),
  (exists_5‹??_28,U›
    nat_3
    function _3529 : nat_3 -> U
    | __3531 => (eq_4‹??_27› nat_3 __3531 zero_4)))
infer_tm((ex_7‹??_31,??_32›
           ?_28[0;0] ?_29[0;0] zero_4 (refl_6‹??_30› ?_26[0;0] ?_27[0;0])))
check_tm( ?_28[0;0], Type‹??_31›)
check_tm( ?_29[0;0], ?_28[0;4] -> Type‹??_32›)
check_tm( zero_4, ?_28[0;4])
infer_tm(zero_4)
assert_equal1( ?_28[0;4], nat_3)
assert_equal1_extend( ?_28[0;4], nat_3)
check_tm( (refl_6‹??_30› ?_26[0;0] ?_27[0;0]), ((?_29[0;4]) zero_4))
infer_tm((refl_6‹??_30› ?_26[0;0] ?_27[0;0]))
check_tm( ?_26[0;0], Type‹??_30›)
check_tm( ?_27[0;0], ?_26[0;4])
assert_equal1( ((?_29[0;4]) zero_4),
  (eq_4‹??_30› ?_26[0;4] ?_27[0;4] ?_27[0;4]))
assert_equal1_extend( ((?_29[0;4]) zero_4),
  (eq_4‹??_30› ?_26[0;4] ?_27[0;4] ?_27[0;4]))
assert_equal1(
  (exists_5‹??_28,U›
    nat_3
    function _3533 : nat_3 -> U
    | __3535 => (eq_4‹??_27› nat_3 __3535 zero_4)),
  (exists_5‹??_31,??_32› ?_28[0;4] ?_29[0;4]))
assert_equal1_extend(
  (exists_5‹??_28,U›
    nat_3
    function _3536 : nat_3 -> U
    | __3538 => (eq_4‹??_27› nat_3 __3538 zero_4)),
  (exists_5‹??_31,??_32› ?_28[0;4] ?_29[0;4]))
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› #A_3505 #n_3506),
      (vec_8‹U› #A_3505 (succ_5‹› #n_3539)));
    {| eq_pat?( #A_3505, A_3360 : U)
       eq_pat?( #n_3506, n_3361 : nat_3)
       eq_pat?( #n_3539, _3362 : nat_3)
       eq_pat?( #hd_3540, _3363 : #A_3505)
       eq_pat?( #tl_3541, tl_3364 : (vec_8‹U› #A_3505 #n_3539)) ::: [] =>?
         match ((vlength_3273) ?_31[0;0] ?_30[0;0] #tl_3364) in
           ?_32[0;0] -o ?_33[0;0]
         with
         | (ex_7 n_3552 pf_3553) =>
           (ex_7‹??_36,??_37›
             ?_40[0;0] ?_41[0;0] (succ_5‹› n_3552)
             ((congr_3‹??_33,??_34,??_35›)
               ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
               function _3554 : ?_34[0;0] -> ?_35[0;0]
               | x_3556 => (succ_5‹› x_3556) pf_3553))
    |}
  |}
|}
unify_local(
  eq_pat?( #A_3505, A_3360 : U)
  eq_pat?( #n_3506, n_3361 : nat_3)
  eq_pat?( #n_3539, _3362 : nat_3)
  eq_pat?( #hd_3540, _3363 : #A_3505)
  eq_pat?( #tl_3541, tl_3364 : (vec_8‹U› #A_3505 #n_3539))
)
unify_global(
  eq_term?( (vec_8‹U› #A_3505 #n_3506),
    (vec_8‹U› #A_3505 (succ_5‹› #n_3539)))
)
simpl_pprbm ~expand:false( #A_3505, #A_3360)
simpl_pprbm ~expand:false( #n_3506, #n_3361)
simpl_pprbm ~expand:false( #n_3539, #_3362)
simpl_pprbm ~expand:false( #hd_3540, #_3363)
simpl_pprbm ~expand:false( #tl_3541, #tl_3364)
local_map solved
simpl_pprbm ~expand:false( (vec_8‹U› #A_3505 #n_3506),
  (vec_8‹U› #A_3505 (succ_5‹› #n_3539)))
simpl_pprbm ~expand:false( #A_3505, #A_3505)
simpl_pprbm ~expand:false( #n_3506, (succ_5‹› #n_3539))
global_map solved
case_coverage_ok(
  match ((vlength_3273) ?_31[0;0] ?_30[0;0] tl_3541) in
    ?_32[0;0] -o ?_33[0;0]
  with
  | (ex_7 n_3573 pf_3574) =>
    (ex_7‹??_36,??_37›
      ?_40[0;0] ?_41[0;0] (succ_5‹› n_3573)
      ((congr_3‹??_33,??_34,??_35›)
        ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
        function _3575 : ?_34[0;0] -> ?_35[0;0]
        | x_3577 => (succ_5‹› x_3577) pf_3574)),
  (exists_5‹??_28,U›
    nat_3
    function _3578 : nat_3 -> U
    | __3580 => (eq_4‹??_27› nat_3 __3580 (succ_5‹› n_3539))))
check_tm(
  match ((vlength_3273) ?_31[0;0] ?_30[0;0] tl_3541) in
    ?_32[0;0] -o ?_33[0;0]
  with
  | (ex_7 n_3582 pf_3583) =>
    (ex_7‹??_36,??_37›
      ?_40[0;0] ?_41[0;0] (succ_5‹› n_3582)
      ((congr_3‹??_33,??_34,??_35›)
        ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
        function _3584 : ?_34[0;0] -> ?_35[0;0]
        | x_3586 => (succ_5‹› x_3586) pf_3583)),
  (exists_5‹??_28,U›
    nat_3
    function _3587 : nat_3 -> U
    | __3589 => (eq_4‹??_27› nat_3 __3589 (succ_5‹› n_3539))))
infer_tm(match ((vlength_3273) ?_31[0;0] ?_30[0;0] tl_3541) in
           ?_32[0;0] -o ?_33[0;0]
         with
         | (ex_7 n_3591 pf_3592) =>
           (ex_7‹??_36,??_37›
             ?_40[0;0] ?_41[0;0] (succ_5‹› n_3591)
             ((congr_3‹??_33,??_34,??_35›)
               ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
               function _3593 : ?_34[0;0] -> ?_35[0;0]
               | x_3595 => (succ_5‹› x_3595) pf_3592)))
infer_tm(?_32[0;0])
simpl_tm ~expand:false(
  (exists_5‹??_28,U›
    nat_3
    function _3600 : nat_3 -> U
    | __3602 => (eq_4‹??_27› nat_3 __3602 zero_4)),
  (exists_5‹??_31,??_32› ?_28[0;4] ?_29[0;4]))
simpl_tm ~expand:false( nat_3, ?_28[0;4])
simpl_tm ~expand:false(
  function _3603 : nat_3 -> U
  | __3605 => (eq_4‹??_27› nat_3 __3605 zero_4), ?_29[0;4])
simpl_tm ~expand:false( nat_3, ?_28[0;4])
simpl_tm ~expand:false(
  function _3609 : nat_3 -> U
  | __3611 => (eq_4‹??_27› nat_3 __3611 zero_4), ?_29[0;4])
simpl_tm ~expand:false( (eq_4‹??_27› nat_3 zero_4 zero_4),
  (eq_4‹??_30› ?_26[0;4] ?_27[0;4] ?_27[0;4]))
simpl_tm ~expand:false( nat_3, ?_26[0;4])
simpl_tm ~expand:false( zero_4, ?_27[0;4])
simpl_tm ~expand:false( zero_4, ?_27[0;4])
simpl_tm ~expand:false( nat_3, ?_26[0;4])
simpl_tm ~expand:false( zero_4, ?_27[0;4])
simpl_tm ~expand:false( zero_4, zero_4)
simpl_tm ~expand:false( nat_3, nat_3)
delay_assert(?_71[0;7], ??_56)
infer_tm(?_32[0;0])
simpl_tm ~expand:false( ?_71[0;7], Type‹??_56›)
check_tm( ((vlength_3273) ?_31[0;0] ?_30[0;0] tl_3541), ?_32[0;7])
infer_tm(((vlength_3273) ?_31[0;0] ?_30[0;0] tl_3541))
infer_tm(((vlength_3273) ?_31[0;0] ?_30[0;0]))
infer_tm(((vlength_3273) ?_31[0;0]))
infer_tm(vlength_3273)
check_tm( ?_31[0;0], U)
check_tm( ?_30[0;0], nat_3)
check_tm( tl_3541, (vec_8‹U› ?_31[0;7] ?_30[0;7]))
infer_tm(tl_3541)
assert_equal1( (vec_8‹U› ?_31[0;7] ?_30[0;7]),
  (vec_8‹U› A_3505 n_3539))
assert_equal1_extend( (vec_8‹U› ?_31[0;7] ?_30[0;7]),
  (vec_8‹U› A_3505 n_3539))
assert_equal1( ?_32[0;7],
  (exists_5‹??_28,U›
    nat_3
    function _3670 : nat_3 -> U
    | __3672 => (eq_4‹??_27› nat_3 __3672 ?_30[0;7])))
assert_equal1_extend( ?_32[0;7],
  (exists_5‹??_28,U›
    nat_3
    function _3673 : nat_3 -> U
    | __3675 => (eq_4‹??_27› nat_3 __3675 ?_30[0;7])))
infer_tm(?_33[0;0])
simpl_tm ~expand:false( ?_32[0;7],
  (exists_5‹??_28,U›
    nat_3
    function _3679 : nat_3 -> U
    | __3681 => (eq_4‹??_27› nat_3 __3681 ?_30[0;7])))
simpl_tm ~expand:false( (vec_8‹U› ?_31[0;7] ?_30[0;7]),
  (vec_8‹U› A_3505 n_3539))
simpl_tm ~expand:false( ?_31[0;7], A_3505)
simpl_tm ~expand:false( ?_30[0;7], n_3539)
simpl_tm ~expand:false( n_3539, ?_30[0;7])
delay_assert(?_72[0;8], ??_57)
infer_tm(?_33[0;0])
simpl_tm ~expand:false( ?_72[0;8], Type‹??_57›)
check_cls {|
  prblm {| ;
    {|  ::: [(ex_7 n_3695 pf_3696)] =>?
         (ex_7‹??_36,??_37›
           ?_40[0;0] ?_41[0;0] (succ_5‹› #n_3695)
           ((congr_3‹??_33,??_34,??_35›)
             ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
             function _3715 : ?_34[0;0] -> ?_35[0;0]
             | x_3717 => (succ_5‹› x_3717) #pf_3696))
    |}
  |}
  a := ∀ (_3718 :
         (exists_5‹??_28,U›
           nat_3
           function _3719 : nat_3 -> U
           | __3721 => (eq_4‹??_27› nat_3 __3721 n_3539))) -o
         ?_33[0;8]
|}
case_intro(_3722 : (exists_5‹??_28,U›
                     nat_3
                     function _3723 : nat_3 -> U
                     | __3725 => (eq_4‹??_27› nat_3 __3725 n_3539)))
splitting_on(ex_7)
case_coverage{|
  prblm {|
    eq_term?(
      (exists_5‹??_28,U›
        nat_3
        function _3749 : nat_3 -> U
        | __3751 => (eq_4‹??_27› nat_3 __3751 n_3539)),
      (exists_5‹??_28,U›
        nat_3
        function _3752 : nat_3 -> U
        | __3754 => (eq_4‹??_27› nat_3 __3754 n_3539)));
    {| eq_pat?( #m_3726, n_3695 : nat_3)
       eq_pat?( #pf_3727, pf_3696 : (eq_4‹??_27› nat_3 #m_3726 n_3539)) ::: [] =>?
         (ex_7‹??_36,??_37›
           ?_40[0;0] ?_41[0;0] (succ_5‹› #n_3695)
           ((congr_3‹??_33,??_34,??_35›)
             ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
             function _3755 : ?_34[0;0] -> ?_35[0;0]
             | x_3757 => (succ_5‹› x_3757) #pf_3696))
    |}
  |}
|}
unify_local(
  eq_pat?( #m_3726, n_3695 : nat_3)
  eq_pat?( #pf_3727, pf_3696 : (eq_4‹??_27› nat_3 #m_3726 n_3539))
)
unify_global(
  eq_term?(
    (exists_5‹??_28,U›
      nat_3
      function _3758 : nat_3 -> U
      | __3760 => (eq_4‹??_27› nat_3 __3760 n_3539)),
    (exists_5‹??_28,U›
      nat_3
      function _3761 : nat_3 -> U
      | __3763 => (eq_4‹??_27› nat_3 __3763 n_3539)))
)
simpl_pprbm ~expand:false( #m_3726, #n_3695)
simpl_pprbm ~expand:false( #pf_3727, #pf_3696)
local_map solved
simpl_pprbm ~expand:false(
  (exists_5‹??_28,U›
    nat_3
    function _3770 : nat_3 -> U
    | __3772 => (eq_4‹??_27› nat_3 __3772 n_3539)),
  (exists_5‹??_28,U›
    nat_3
    function _3773 : nat_3 -> U
    | __3775 => (eq_4‹??_27› nat_3 __3775 n_3539)))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false(
  function _3776 : nat_3 -> U
  | __3778 => (eq_4‹??_27› nat_3 __3778 n_3539),
  function _3779 : nat_3 -> U
  | __3781 => (eq_4‹??_27› nat_3 __3781 n_3539))
simpl_pprbm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( U, U)
simpl_pprbm ~expand:false( (eq_4‹??_27› nat_3 __3786 n_3539),
  (eq_4‹??_27› nat_3 __3786 n_3539))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( __3786, __3786)
simpl_pprbm ~expand:false( n_3539, n_3539)
global_map solved
case_coverage_ok(
  (ex_7‹??_36,??_37›
    ?_40[0;0] ?_41[0;0] (succ_5‹› m_3726)
    ((congr_3‹??_33,??_34,??_35›)
      ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
      function _3805 : ?_34[0;0] -> ?_35[0;0]
      | x_3807 => (succ_5‹› x_3807) pf_3727)),
  ?_33[0;8])
check_tm(
  (ex_7‹??_36,??_37›
    ?_40[0;0] ?_41[0;0] (succ_5‹› m_3726)
    ((congr_3‹??_33,??_34,??_35›)
      ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
      function _3808 : ?_34[0;0] -> ?_35[0;0]
      | x_3810 => (succ_5‹› x_3810) pf_3727)),
  ?_33[0;8])
infer_tm((ex_7‹??_36,??_37›
           ?_40[0;0] ?_41[0;0] (succ_5‹› m_3726)
           ((congr_3‹??_33,??_34,??_35›)
             ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
             function _3811 : ?_34[0;0] -> ?_35[0;0]
             | x_3813 => (succ_5‹› x_3813) pf_3727)))
check_tm( ?_40[0;0], Type‹??_36›)
check_tm( ?_41[0;0], ?_40[0;10] -> Type‹??_37›)
check_tm( (succ_5‹› m_3726), ?_40[0;10])
infer_tm((succ_5‹› m_3726))
check_tm( m_3726, nat_3)
infer_tm(m_3726)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( ?_40[0;10], nat_3)
assert_equal1_extend( ?_40[0;10], nat_3)
check_tm(
  ((congr_3‹??_33,??_34,??_35›)
    ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
    function _3815 : ?_34[0;0] -> ?_35[0;0]
    | x_3817 => (succ_5‹› x_3817) pf_3727),
  ((?_41[0;10]) (succ_5‹› m_3726)))
infer_tm(((congr_3‹??_33,??_34,??_35›)
           ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
           function _3818 : ?_34[0;0] -> ?_35[0;0]
           | x_3820 => (succ_5‹› x_3820) pf_3727))
infer_tm(((congr_3‹??_33,??_34,??_35›)
           ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]
           function _3821 : ?_34[0;0] -> ?_35[0;0]
           | x_3823 => (succ_5‹› x_3823)))
infer_tm(((congr_3‹??_33,??_34,??_35›)
           ?_39[0;0] ?_38[0;0] ?_37[0;0] ?_36[0;0]))
infer_tm(((congr_3‹??_33,??_34,??_35›) ?_39[0;0] ?_38[0;0] ?_37[0;0]))
infer_tm(((congr_3‹??_33,??_34,??_35›) ?_39[0;0] ?_38[0;0]))
infer_tm(((congr_3‹??_33,??_34,??_35›) ?_39[0;0]))
infer_tm(congr_3‹??_33,??_34,??_35›)
simpl_tm ~expand:false( ?_40[0;10], nat_3)
check_tm( ?_39[0;0], Type‹??_33›)
check_tm( ?_38[0;0], Type‹??_34›)
check_tm( ?_37[0;0], ?_39[0;10])
check_tm( ?_36[0;0], ?_39[0;10])
check_tm(
  function _3849 : ?_34[0;0] -> ?_35[0;0]
  | x_3851 => (succ_5‹› x_3851),
  forall‹??_35›(__3852 : ?_39[0;10]), ?_38[0;10])
infer_tm(?_34[0;0] -> ?_35[0;0])
infer_tm(?_34[0;0])
delay_assert(?_73[0;10], ??_58)
infer_tm(?_35[0;0])
simpl_tm ~expand:false( ?_73[0;10], Type‹??_58›)
delay_assert(?_74[0;11], ??_59)
simpl_tm ~expand:false( ?_74[0;11], Type‹??_59›)
assert_equal1( forall‹??_35›(__3856 : ?_39[0;10]), ?_38[0;10],
  ∀ (x_3857 : ?_34[0;10]) -> ?_35[0;11])
assert_equal1_extend( forall‹??_35›(__3858 : ?_39[0;10]), ?_38[0;10],
  ∀ (x_3859 : ?_34[0;10]) -> ?_35[0;11])
simpl_tm ~expand:false( forall‹??_35›(__3863 : ?_39[0;10]), ?_38[0;10],
  ∀ (x_3864 : ?_34[0;10]) -> ?_35[0;11])
simpl_tm ~expand:false( ?_39[0;10], ?_34[0;10])
simpl_tm ~expand:false( ?_38[0;10], ?_35[0;11])
simpl_tm ~expand:false( ?_34[0;10], ?_39[0;10])
simpl_tm ~expand:false( ?_35[0;11], ?_38[0;10])
check_cls {|
  prblm {| ; {|  ::: [x_3860] =>? (succ_5‹› #x_3860) |} |}
  a := ?_34[0;10] -> ?_35[0;11]
|}
case_intro(__3888 : ?_34[0;10])
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3888, x_3860 : ?_34[0;10]) ::: [] =>?
         (succ_5‹› #x_3860)
    |}
  |}
|}
unify_local( eq_pat?( #__3888, x_3860 : ?_34[0;10]) )
unify_global(  )
simpl_pprbm ~expand:false( #__3888, #x_3860)
local_map solved
global_map solved
case_coverage_ok( (succ_5‹› __3888), ?_35[0;11])
check_tm( (succ_5‹› __3888), ?_35[0;11])
infer_tm((succ_5‹› __3888))
check_tm( __3888, nat_3)
infer_tm(__3888)
assert_equal1( nat_3, ?_34[0;10])
assert_equal1_extend( nat_3, ?_34[0;10])
assert_equal1( ?_35[0;11], nat_3)
assert_equal1_extend( ?_35[0;11], nat_3)
simpl_tm ~expand:false( ?_35[0;11], nat_3)
simpl_tm ~expand:false( nat_3, ?_34[0;10])
check_tm( pf_3727, (eq_4‹??_33› nat_3 ?_37[0;10] ?_36[0;10]))
infer_tm(pf_3727)
assert_equal1( (eq_4‹??_33› nat_3 ?_37[0;10] ?_36[0;10]),
  ((function _3992 : nat_3 -> U
    | __3994 => (eq_4‹??_27› nat_3 __3994 n_3539)) m_3726))
assert_equal1_extend( (eq_4‹??_33› nat_3 ?_37[0;10] ?_36[0;10]),
  ((function _3995 : nat_3 -> U
    | __3997 => (eq_4‹??_27› nat_3 __3997 n_3539)) m_3726))
assert_equal1( ((?_41[0;10]) (succ_5‹› m_3726)),
  (eq_4‹??_34›
    nat_3
    ((function _3998 : nat_3 -> nat_3
      | __4000 => (succ_5‹› __4000)) ?_37[0;10])
    ((function _4001 : nat_3 -> nat_3
      | __4003 => (succ_5‹› __4003)) ?_36[0;10])))
assert_equal1_extend( ((?_41[0;10]) (succ_5‹› m_3726)),
  (eq_4‹??_34›
    nat_3
    ((function _4004 : nat_3 -> nat_3
      | __4006 => (succ_5‹› __4006)) ?_37[0;10])
    ((function _4007 : nat_3 -> nat_3
      | __4009 => (succ_5‹› __4009)) ?_36[0;10])))
assert_equal1( ?_33[0;8], (exists_5‹??_36,??_37› ?_40[0;10] ?_41[0;10]))
assert_equal1_extend( ?_33[0;8],
  (exists_5‹??_36,??_37› ?_40[0;10] ?_41[0;10]))
assert_equal1(
  (exists_5‹??_28,U›
    nat_3
    function _4010 : nat_3 -> U
    | __4012 => (eq_4‹??_27› nat_3 __4012 (succ_5‹› n_3539))),
  ?_33[0;8])
assert_equal1_extend(
  (exists_5‹??_28,U›
    nat_3
    function _4013 : nat_3 -> U
    | __4015 => (eq_4‹??_27› nat_3 __4015 (succ_5‹› n_3539))),
  ?_33[0;8])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_4016
    ??_2 <= s_4018
    ??_3 <= r_4019
    ??_4 <= s_4021
    ??_5 <= s_4022
    ??_6 <= s_4023
    ??_7 <= s_4024
    ??_8 <= s_4025
    ??_9 <= s_4026
    ??_10 <= s_4028
    ??_11 <= ??_10
    ??_12 <= s_4032
    ??_13 <= ??_12
    ??_14 <= s_4037
    ??_15 <= r_4039
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    ??_24 <= U
    ??_25 <= U
    ??_26 <= U
    ??_29 <= U
    ??_30 <= ??_27
    ??_31 <= ??_28
    ??_32 <= U
    ??_35 <= U
    ??_38 <= U
    ??_39 <= ??_27
    ??_40 <= ??_28
    ??_41 <= U
    ??_44 <= U
    ??_45 <= U
    ??_46 <= U
    ??_47 <= U
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_4052
    ?_2 <= A_4055
    ?_3 <= A_4061
    ?_4 <= A_4067
    ?_5 <= A_4073
    ?_6 <= A_4079
    ?_7 <= A_4087
    ?_8 <= B_4095
    ?_9 <= B_4104
    ?_10 <= ((f_4111) n_4112)
    ?_11 <= A_4124
    ?_12 <= B_4132
    ?_13 <= A_4136
    ?_14 <= n_4138
    ?_15 <= nat_3
    ?_16 <= ?_13[0;3]
    ?_17 <= ?_13[0;3]
    ?_18 <= A_4156
    ?_19 <= (vec_8‹U› A_4159 (succ_5‹› n_4158))
    ?_20 <= ?_18[0;3]
    ?_21 <= ?_18[0;3]
    ?_22 <= nat_3
    ?_23 <= Type‹??_29›
    ?_24 <= nat_3
    ?_25 <= ?_22[0;3]
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _4200 : nat_3 -> U
            | __4202 => (eq_4‹??_27› nat_3 __4202 zero_4)
    ?_30 <= n_4205
    ?_31 <= A_4215
    ?_32 <= (exists_5‹??_28,U›
              nat_3
              function _4224 : nat_3 -> U
              | __4226 => (eq_4‹??_27› nat_3 __4226 ?_30[0;7]))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_38 <= ?_35[0;11]
    ?_39 <= ?_34[0;10]
    ?_40 <= nat_3
    ?_42 <= nat_3
    ?_43 <= Type‹??_41›
    ?_44 <= nat_3
    ?_45 <= ?_42[0;3]
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    ?_63 <= Type‹??_48›
    ?_64 <= Type‹??_49›
    ?_65 <= Type‹??_50›
    ?_66 <= Type‹??_51›
    ?_67 <= Type‹??_52›
    ?_68 <= Type‹??_53›
    ?_69 <= Type‹??_54›
    ?_70 <= Type‹??_55›
    ?_71 <= Type‹??_56›
    ?_72 <= Type‹??_57›
    ?_73 <= Type‹??_58›
    ?_74 <= Type‹??_59›
    
  |}
  eqns {|
    equal_tm?
      ((exists_5‹??_28,U›
         nat_3
         function _4374 : nat_3 -> U
         | __4376 => (eq_4‹??_27› nat_3 __4376 (succ_5‹› n_3539))),
      ?_33[0;8]);
    equal_tm? (?_33[0;8], (exists_5‹??_36,??_37› ?_40[0;10] ?_41[0;10]));
    equal_tm? (((?_41[0;10]) (succ_5‹› m_3726)),
      (eq_4‹??_34›
        nat_3
        ((function _4377 : nat_3 -> nat_3
          | __4379 => (succ_5‹› __4379)) ?_37[0;10])
        ((function _4380 : nat_3 -> nat_3
          | __4382 => (succ_5‹› __4382)) ?_36[0;10])));
    equal_tm? ((eq_4‹??_33› nat_3 ?_37[0;10] ?_36[0;10]),
      ((function _4383 : nat_3 -> U
        | __4385 => (eq_4‹??_27› nat_3 __4385 n_3539)) m_3726))
  |}
end_dump
simpl_tm ~expand:false(
  (exists_5‹??_28,U›
    nat_3
    function _4389 : nat_3 -> U
    | __4391 => (eq_4‹??_27› nat_3 __4391 (succ_5‹› n_3539))),
  ?_33[0;8])
simpl_tm ~expand:false(
  (exists_5‹??_28,U›
    nat_3
    function _4418 : nat_3 -> U
    | __4420 => (eq_4‹??_27› nat_3 __4420 (succ_5‹› n_3539))),
  (exists_5‹??_36,??_37› nat_3 ?_41[0;10]))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _4421 : nat_3 -> U
  | __4423 => (eq_4‹??_27› nat_3 __4423 (succ_5‹› n_3539)),
  ?_41[0;10])
simpl_tm ~expand:false(
  function _4427 : nat_3 -> U
  | __4429 => (eq_4‹??_27› nat_3 __4429 (succ_5‹› n_3539)),
  ?_41[0;10])
simpl_tm ~expand:false(
  (eq_4‹??_27› nat_3 (succ_5‹› m_3726) (succ_5‹› n_3539)),
  (eq_4‹??_34›
    nat_3
    ((function _4454 : nat_3 -> nat_3
      | __4456 => (succ_5‹› __4456)) ?_37[0;10])
    ((function _4457 : nat_3 -> nat_3
      | __4459 => (succ_5‹› __4459)) ?_36[0;10])))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( (succ_5‹› m_3726), (succ_5‹› ?_37[0;10]))
simpl_tm ~expand:false( m_3726, ?_37[0;10])
simpl_tm ~expand:false( (succ_5‹› n_3539), (succ_5‹› ?_36[0;10]))
simpl_tm ~expand:false( n_3539, ?_36[0;10])
simpl_tm ~expand:false( m_3726, ?_37[0;10])
simpl_tm ~expand:false( n_3539, ?_36[0;10])
simpl_tm ~expand:false( (eq_4‹??_33› nat_3 m_3726 n_3539),
  (eq_4‹??_27› nat_3 m_3726 n_3539))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( m_3726, m_3726)
simpl_tm ~expand:false( n_3539, n_3539)
attempt_delay(?_22[0;3] : ?_69[0;3])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_54›)
check_tm( nat_3, Type‹??_54›)
infer_tm(nat_3)
assert_equal1( Type‹??_54›, U)
assert_equal1_extend( Type‹??_54›, U)
simpl_tm ~expand:false( Type‹??_54›, U)
attempt_delay(?_23[0;4] : ?_70[0;4])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_55›)
check_tm( U, Type‹??_55›)
infer_tm(U)
assert_equal1( Type‹??_55›, U)
assert_equal1_extend( Type‹??_55›, U)
simpl_tm ~expand:false( Type‹??_55›, U)
attempt_delay(?_24[0;5] : Type‹??_27›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_27›)
check_tm( nat_3, Type‹??_27›)
infer_tm(nat_3)
assert_equal1( Type‹??_27›, U)
assert_equal1_extend( Type‹??_27›, U)
simpl_tm ~expand:false( Type‹??_27›, U)
attempt_delay(?_25[0;3] : Type‹??_28›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_28›)
check_tm( nat_3, Type‹??_28›)
infer_tm(nat_3)
assert_equal1( Type‹??_28›, U)
assert_equal1_extend( Type‹??_28›, U)
simpl_tm ~expand:false( Type‹??_28›, U)
attempt_delay(?_26[0;4] : Type‹??_30›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_27[0;4] : ?_26[0;4])
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_28[0;4] : Type‹??_31›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_29[0;4] : ?_28[0;4] -> Type‹??_32›)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(
  function _4648 : nat_3 -> U
  | __4650 => (eq_4‹U› nat_3 __4650 zero_4), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
assert_equal1_ok( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ; {|  ::: [__4660] =>? (eq_4‹U› nat_3 #__4660 zero_4) |} |}
  a := nat_3 -> U
|}
case_intro(__4663 : nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4663, __4660 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__4660 zero_4)
    |}
  |}
|}
unify_local( eq_pat?( #__4663, __4660 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #__4663, #__4660)
local_map solved
global_map solved
case_coverage_ok( (eq_4‹U› nat_3 __4663 zero_4), U)
check_tm( (eq_4‹U› nat_3 __4663 zero_4), U)
infer_tm((eq_4‹U› nat_3 __4663 zero_4))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm( __4663, nat_3)
infer_tm(__4663)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_30[0;7] : nat_3)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( n_3539, nat_3)
infer_tm(n_3539)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_31[0;7] : U)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( A_3505, U)
infer_tm(A_3505)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_32[0;7] : ?_71[0;7])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_56›)
check_tm(
  (exists_5‹U,U›
    nat_3
    function _4781 : nat_3 -> U
    | __4783 => (eq_4‹U› nat_3 __4783 n_3539)),
  Type‹??_56›)
infer_tm((exists_5‹U,U›
           nat_3
           function _4784 : nat_3 -> U
           | __4786 => (eq_4‹U› nat_3 __4786 n_3539)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm(
  function _4787 : nat_3 -> U
  | __4789 => (eq_4‹U› nat_3 __4789 n_3539), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
assert_equal1_ok( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ; {|  ::: [__4799] =>? (eq_4‹U› nat_3 #__4799 n_3539) |} |}
  a := nat_3 -> U
|}
case_intro(__4802 : nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4802, __4799 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__4799 n_3539)
    |}
  |}
|}
unify_local( eq_pat?( #__4802, __4799 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #__4802, #__4799)
local_map solved
global_map solved
case_coverage_ok( (eq_4‹U› nat_3 __4802 n_3539), U)
check_tm( (eq_4‹U› nat_3 __4802 n_3539), U)
infer_tm((eq_4‹U› nat_3 __4802 n_3539))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm( __4802, nat_3)
infer_tm(__4802)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
check_tm( n_3539, nat_3)
infer_tm(n_3539)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
assert_equal1( Type‹??_56›, U)
assert_equal1_extend( Type‹??_56›, U)
simpl_tm ~expand:false( Type‹??_56›, U)
attempt_delay(?_33[0;8] : ?_72[0;8])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_57›)
check_tm(
  (exists_5‹U,U›
    nat_3
    function _4870 : nat_3 -> U
    | __4872 => (eq_4‹U› nat_3 __4872 (succ_5‹› n_3539))),
  Type‹??_57›)
infer_tm((exists_5‹U,U›
           nat_3
           function _4873 : nat_3 -> U
           | __4875 => (eq_4‹U› nat_3 __4875 (succ_5‹› n_3539))))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm(
  function _4876 : nat_3 -> U
  | __4878 => (eq_4‹U› nat_3 __4878 (succ_5‹› n_3539)), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
assert_equal1_ok( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ;
    {|  ::: [__4888] =>? (eq_4‹U› nat_3 #__4888 (succ_5‹› n_3539)) |}
  |}
  a := nat_3 -> U
|}
case_intro(__4891 : nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4891, __4888 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__4888 (succ_5‹› n_3539))
    |}
  |}
|}
unify_local( eq_pat?( #__4891, __4888 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #__4891, #__4888)
local_map solved
global_map solved
case_coverage_ok( (eq_4‹U› nat_3 __4891 (succ_5‹› n_3539)), U)
check_tm( (eq_4‹U› nat_3 __4891 (succ_5‹› n_3539)), U)
infer_tm((eq_4‹U› nat_3 __4891 (succ_5‹› n_3539)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm( __4891, nat_3)
infer_tm(__4891)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
check_tm( (succ_5‹› n_3539), nat_3)
infer_tm((succ_5‹› n_3539))
check_tm( n_3539, nat_3)
infer_tm(n_3539)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
assert_equal1( Type‹??_57›, U)
assert_equal1_extend( Type‹??_57›, U)
simpl_tm ~expand:false( Type‹??_57›, U)
attempt_delay(?_34[0;10] : ?_73[0;10])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_58›)
check_tm( nat_3, Type‹??_58›)
infer_tm(nat_3)
assert_equal1( Type‹??_58›, U)
assert_equal1_extend( Type‹??_58›, U)
simpl_tm ~expand:false( Type‹??_58›, U)
attempt_delay(?_35[0;11] : ?_74[0;11])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_59›)
check_tm( nat_3, Type‹??_59›)
infer_tm(nat_3)
assert_equal1( Type‹??_59›, U)
assert_equal1_extend( Type‹??_59›, U)
simpl_tm ~expand:false( Type‹??_59›, U)
attempt_delay(?_36[0;10] : ?_39[0;10])
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( n_3539, nat_3)
infer_tm(n_3539)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_37[0;10] : ?_39[0;10])
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( m_3726, nat_3)
infer_tm(m_3726)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_38[0;10] : Type‹??_34›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_39[0;10] : Type‹??_33›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_40[0;10] : Type‹??_36›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_41[0;10] : ?_40[0;10] -> Type‹??_37›)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(
  function _5332 : nat_3 -> U
  | __5334 => (eq_4‹U› nat_3 __5334 (succ_5‹› n_3539)), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
assert_equal1_ok( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ;
    {|  ::: [__5344] =>? (eq_4‹U› nat_3 #__5344 (succ_5‹› n_3539)) |}
  |}
  a := nat_3 -> U
|}
case_intro(__5347 : nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__5347, __5344 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__5344 (succ_5‹› n_3539))
    |}
  |}
|}
unify_local( eq_pat?( #__5347, __5344 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #__5347, #__5344)
local_map solved
global_map solved
case_coverage_ok( (eq_4‹U› nat_3 __5347 (succ_5‹› n_3539)), U)
check_tm( (eq_4‹U› nat_3 __5347 (succ_5‹› n_3539)), U)
infer_tm((eq_4‹U› nat_3 __5347 (succ_5‹› n_3539)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm( __5347, nat_3)
infer_tm(__5347)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
check_tm( (succ_5‹› n_3539), nat_3)
infer_tm((succ_5‹› n_3539))
check_tm( n_3539, nat_3)
infer_tm(n_3539)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_42[0;3] : ?_67[0;3])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_52›)
check_tm( nat_3, Type‹??_52›)
infer_tm(nat_3)
assert_equal1( Type‹??_52›, U)
assert_equal1_extend( Type‹??_52›, U)
simpl_tm ~expand:false( Type‹??_52›, U)
attempt_delay(?_43[0;4] : ?_68[0;4])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_53›)
check_tm( U, Type‹??_53›)
infer_tm(U)
assert_equal1( Type‹??_53›, U)
assert_equal1_extend( Type‹??_53›, U)
simpl_tm ~expand:false( Type‹??_53›, U)
attempt_delay(?_44[0;5] : Type‹??_39›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_45[0;3] : Type‹??_40›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
----------------------------------

definition-------------------------
infer_tm(?_49[0;0])
delay_assert(?_75[0;0], ??_60)
check_tm(
  (vcons_12‹??_43›
    ?_48[0;0] ?_47[0;0] zero_4 (vnil_11‹??_42› ?_46[0;0])),
  ?_49[0;0])
infer_tm((vcons_12‹??_43›
           ?_48[0;0] ?_47[0;0] zero_4 (vnil_11‹??_42› ?_46[0;0])))
check_tm( ?_48[0;0], Type‹??_43›)
check_tm( ?_47[0;0], nat_3)
check_tm( zero_4, ?_48[0;0])
infer_tm(zero_4)
assert_equal1( ?_48[0;0], nat_3)
assert_equal1_extend( ?_48[0;0], nat_3)
check_tm( (vnil_11‹??_42› ?_46[0;0]),
  (vec_8‹??_43› ?_48[0;0] ?_47[0;0]))
infer_tm((vnil_11‹??_42› ?_46[0;0]))
check_tm( ?_46[0;0], Type‹??_42›)
assert_equal1( (vec_8‹??_43› ?_48[0;0] ?_47[0;0]),
  (vec_8‹??_42› ?_46[0;0] zero_4))
assert_equal1_extend( (vec_8‹??_43› ?_48[0;0] ?_47[0;0]),
  (vec_8‹??_42› ?_46[0;0] zero_4))
assert_equal1( ?_49[0;0],
  (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0])))
assert_equal1_extend( ?_49[0;0],
  (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0])))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_5627
    ??_2 <= s_5629
    ??_3 <= r_5630
    ??_4 <= s_5632
    ??_5 <= s_5633
    ??_6 <= s_5634
    ??_7 <= s_5635
    ??_8 <= s_5636
    ??_9 <= s_5637
    ??_10 <= s_5639
    ??_11 <= ??_10
    ??_12 <= s_5643
    ??_13 <= ??_12
    ??_14 <= s_5648
    ??_15 <= r_5650
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    ??_24 <= U
    ??_25 <= U
    ??_26 <= U
    ??_27 <= U
    ??_28 <= U
    ??_29 <= U
    ??_30 <= ??_27
    ??_31 <= ??_28
    ??_32 <= U
    ??_33 <= ??_27
    ??_34 <= ??_27
    ??_35 <= U
    ??_36 <= ??_28
    ??_37 <= U
    ??_38 <= U
    ??_39 <= ??_27
    ??_40 <= ??_28
    ??_41 <= U
    ??_44 <= U
    ??_45 <= U
    ??_46 <= U
    ??_47 <= U
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    ??_57 <= U
    ??_58 <= U
    ??_59 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_5663
    ?_2 <= A_5666
    ?_3 <= A_5672
    ?_4 <= A_5678
    ?_5 <= A_5684
    ?_6 <= A_5690
    ?_7 <= A_5698
    ?_8 <= B_5706
    ?_9 <= B_5715
    ?_10 <= ((f_5722) n_5723)
    ?_11 <= A_5735
    ?_12 <= B_5743
    ?_13 <= A_5747
    ?_14 <= n_5749
    ?_15 <= nat_3
    ?_16 <= ?_13[0;3]
    ?_17 <= ?_13[0;3]
    ?_18 <= A_5767
    ?_19 <= (vec_8‹U› A_5770 (succ_5‹› n_5769))
    ?_20 <= ?_18[0;3]
    ?_21 <= ?_18[0;3]
    ?_22 <= nat_3
    ?_23 <= Type‹??_29›
    ?_24 <= nat_3
    ?_25 <= ?_22[0;3]
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _5811 : nat_3 -> U
            | __5813 => (eq_4‹??_27› nat_3 __5813 zero_4)
    ?_30 <= n_5816
    ?_31 <= A_5826
    ?_32 <= (exists_5‹??_28,U›
              nat_3
              function _5835 : nat_3 -> U
              | __5837 => (eq_4‹??_27› nat_3 __5837 ?_30[0;7]))
    ?_33 <= (exists_5‹??_28,U›
              nat_3
              function _5846 : nat_3 -> U
              | __5848 =>
                (eq_4‹??_27› nat_3 __5848 (succ_5‹› n_5841)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_5875
    ?_37 <= m_5881
    ?_38 <= ?_35[0;11]
    ?_39 <= ?_34[0;10]
    ?_40 <= nat_3
    ?_41 <= function _5930 : nat_3 -> U
            | __5932 => (eq_4‹??_27› nat_3 __5932 (succ_5‹› n_5925))
    ?_42 <= nat_3
    ?_43 <= Type‹??_41›
    ?_44 <= nat_3
    ?_45 <= ?_42[0;3]
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    ?_63 <= Type‹??_48›
    ?_64 <= Type‹??_49›
    ?_65 <= Type‹??_50›
    ?_66 <= Type‹??_51›
    ?_67 <= Type‹??_52›
    ?_68 <= Type‹??_53›
    ?_69 <= Type‹??_54›
    ?_70 <= Type‹??_55›
    ?_71 <= Type‹??_56›
    ?_72 <= Type‹??_57›
    ?_73 <= Type‹??_58›
    ?_74 <= Type‹??_59›
    
  |}
  eqns {|
    equal_tm? (?_49[0;0],
      (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0])));
    equal_tm? ((vec_8‹??_43› ?_48[0;0] ?_47[0;0]),
      (vec_8‹??_42› ?_46[0;0] zero_4));
    equal_tm? (?_48[0;0], nat_3);
    equal_tm? (?_75[0;0], Type‹??_60›)
  |}
end_dump
simpl_tm ~expand:false( ?_49[0;0],
  (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0])))
simpl_tm ~expand:false( (vec_8‹??_43› ?_48[0;0] ?_47[0;0]),
  (vec_8‹??_42› ?_46[0;0] zero_4))
simpl_tm ~expand:false( ?_48[0;0], ?_46[0;0])
simpl_tm ~expand:false( ?_47[0;0], zero_4)
simpl_tm ~expand:false( ?_46[0;0], ?_48[0;0])
simpl_tm ~expand:false( zero_4, ?_47[0;0])
simpl_tm ~expand:false( ?_46[0;0], nat_3)
simpl_tm ~expand:false( ?_75[0;0], Type‹??_60›)
attempt_delay(?_46[0;0] : Type‹??_42›)
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_42›)
check_tm( nat_3, Type‹??_42›)
infer_tm(nat_3)
assert_equal1( Type‹??_42›, U)
assert_equal1_extend( Type‹??_42›, U)
simpl_tm ~expand:false( Type‹??_42›, U)
attempt_delay(?_47[0;0] : nat_3)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_48[0;0] : Type‹??_43›)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_49[0;0] : ?_75[0;0])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_60›)
check_tm( (vec_8‹U› nat_3 (succ_5‹› zero_4)), Type‹??_60›)
infer_tm((vec_8‹U› nat_3 (succ_5‹› zero_4)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
check_tm( (succ_5‹› zero_4), nat_3)
infer_tm((succ_5‹› zero_4))
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
assert_equal1( Type‹??_60›, U)
assert_equal1_extend( Type‹??_60›, U)
simpl_tm ~expand:false( Type‹??_60›, U)
----------------------------------

definition-------------------------
infer_tm(?_52[0;0])
delay_assert(?_76[0;0], ??_61)
check_tm( ((hd_vec_4) ?_51[0;0] ?_50[0;0] xs_8), ?_52[0;0])
infer_tm(((hd_vec_4) ?_51[0;0] ?_50[0;0] xs_8))
infer_tm(((hd_vec_4) ?_51[0;0] ?_50[0;0]))
infer_tm(((hd_vec_4) ?_51[0;0]))
infer_tm(hd_vec_4)
simpl_tm ~expand:false( ?_76[0;0], Type‹??_61›)
check_tm( ?_51[0;0], U)
check_tm( ?_50[0;0], nat_3)
check_tm( xs_8, (vec_8‹U› ?_51[0;0] (succ_5‹› ?_50[0;0])))
infer_tm(xs_8)
assert_equal1( (vec_8‹U› ?_51[0;0] (succ_5‹› ?_50[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1_extend( (vec_8‹U› ?_51[0;0] (succ_5‹› ?_50[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1( ?_52[0;0], ?_51[0;0])
assert_equal1_extend( ?_52[0;0], ?_51[0;0])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_6035
    ??_2 <= s_6037
    ??_3 <= r_6038
    ??_4 <= s_6040
    ??_5 <= s_6041
    ??_6 <= s_6042
    ??_7 <= s_6043
    ??_8 <= s_6044
    ??_9 <= s_6045
    ??_10 <= s_6047
    ??_11 <= ??_10
    ??_12 <= s_6051
    ??_13 <= ??_12
    ??_14 <= s_6056
    ??_15 <= r_6058
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    ??_24 <= U
    ??_25 <= U
    ??_26 <= U
    ??_27 <= U
    ??_28 <= U
    ??_29 <= U
    ??_30 <= ??_27
    ??_31 <= ??_28
    ??_32 <= U
    ??_33 <= ??_27
    ??_34 <= ??_27
    ??_35 <= U
    ??_36 <= ??_28
    ??_37 <= U
    ??_38 <= U
    ??_39 <= ??_27
    ??_40 <= ??_28
    ??_41 <= U
    ??_42 <= U
    ??_43 <= ??_42
    ??_44 <= U
    ??_45 <= U
    ??_46 <= U
    ??_47 <= U
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    ??_57 <= U
    ??_58 <= U
    ??_59 <= U
    ??_60 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_6071
    ?_2 <= A_6074
    ?_3 <= A_6080
    ?_4 <= A_6086
    ?_5 <= A_6092
    ?_6 <= A_6098
    ?_7 <= A_6106
    ?_8 <= B_6114
    ?_9 <= B_6123
    ?_10 <= ((f_6130) n_6131)
    ?_11 <= A_6143
    ?_12 <= B_6151
    ?_13 <= A_6155
    ?_14 <= n_6157
    ?_15 <= nat_3
    ?_16 <= ?_13[0;3]
    ?_17 <= ?_13[0;3]
    ?_18 <= A_6175
    ?_19 <= (vec_8‹U› A_6178 (succ_5‹› n_6177))
    ?_20 <= ?_18[0;3]
    ?_21 <= ?_18[0;3]
    ?_22 <= nat_3
    ?_23 <= Type‹??_29›
    ?_24 <= nat_3
    ?_25 <= ?_22[0;3]
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _6219 : nat_3 -> U
            | __6221 => (eq_4‹??_27› nat_3 __6221 zero_4)
    ?_30 <= n_6224
    ?_31 <= A_6234
    ?_32 <= (exists_5‹??_28,U›
              nat_3
              function _6243 : nat_3 -> U
              | __6245 => (eq_4‹??_27› nat_3 __6245 ?_30[0;7]))
    ?_33 <= (exists_5‹??_28,U›
              nat_3
              function _6254 : nat_3 -> U
              | __6256 =>
                (eq_4‹??_27› nat_3 __6256 (succ_5‹› n_6249)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_6283
    ?_37 <= m_6289
    ?_38 <= ?_35[0;11]
    ?_39 <= ?_34[0;10]
    ?_40 <= nat_3
    ?_41 <= function _6338 : nat_3 -> U
            | __6340 => (eq_4‹??_27› nat_3 __6340 (succ_5‹› n_6333))
    ?_42 <= nat_3
    ?_43 <= Type‹??_41›
    ?_44 <= nat_3
    ?_45 <= ?_42[0;3]
    ?_46 <= nat_3
    ?_47 <= zero_4
    ?_48 <= ?_46[0;0]
    ?_49 <= (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0]))
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    ?_63 <= Type‹??_48›
    ?_64 <= Type‹??_49›
    ?_65 <= Type‹??_50›
    ?_66 <= Type‹??_51›
    ?_67 <= Type‹??_52›
    ?_68 <= Type‹??_53›
    ?_69 <= Type‹??_54›
    ?_70 <= Type‹??_55›
    ?_71 <= Type‹??_56›
    ?_72 <= Type‹??_57›
    ?_73 <= Type‹??_58›
    ?_74 <= Type‹??_59›
    ?_75 <= Type‹??_60›
    ?_76 <= Type‹??_61›
    
  |}
  eqns {|
    equal_tm? (?_52[0;0], ?_51[0;0]);
    equal_tm? ((vec_8‹U› ?_51[0;0] (succ_5‹› ?_50[0;0])),
      (vec_8‹U› nat_3 (succ_5‹› zero_4)))
  |}
end_dump
simpl_tm ~expand:false( ?_52[0;0], ?_51[0;0])
simpl_tm ~expand:false( (vec_8‹U› ?_51[0;0] (succ_5‹› ?_50[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
simpl_tm ~expand:false( ?_51[0;0], nat_3)
simpl_tm ~expand:false( (succ_5‹› ?_50[0;0]), (succ_5‹› zero_4))
simpl_tm ~expand:false( ?_50[0;0], zero_4)
simpl_tm ~expand:false( zero_4, ?_50[0;0])
attempt_delay(?_50[0;0] : nat_3)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_51[0;0] : U)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_52[0;0] : ?_76[0;0])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_61›)
check_tm( nat_3, Type‹??_61›)
infer_tm(nat_3)
assert_equal1( Type‹??_61›, U)
assert_equal1_extend( Type‹??_61›, U)
simpl_tm ~expand:false( Type‹??_61›, U)
----------------------------------

definition-------------------------
infer_tm(?_55[0;0])
delay_assert(?_77[0;0], ??_62)
check_tm( ((hd_vec2_5) ?_54[0;0] ?_53[0;0] xs_8), ?_55[0;0])
infer_tm(((hd_vec2_5) ?_54[0;0] ?_53[0;0] xs_8))
infer_tm(((hd_vec2_5) ?_54[0;0] ?_53[0;0]))
infer_tm(((hd_vec2_5) ?_54[0;0]))
infer_tm(hd_vec2_5)
simpl_tm ~expand:false( ?_77[0;0], Type‹??_62›)
check_tm( ?_54[0;0], U)
check_tm( ?_53[0;0], nat_3)
check_tm( xs_8, (vec_8‹U› ?_54[0;0] (succ_5‹› ?_53[0;0])))
infer_tm(xs_8)
assert_equal1( (vec_8‹U› ?_54[0;0] (succ_5‹› ?_53[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1_extend( (vec_8‹U› ?_54[0;0] (succ_5‹› ?_53[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1( ?_55[0;0], ?_54[0;0])
assert_equal1_extend( ?_55[0;0], ?_54[0;0])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_6443
    ??_2 <= s_6445
    ??_3 <= r_6446
    ??_4 <= s_6448
    ??_5 <= s_6449
    ??_6 <= s_6450
    ??_7 <= s_6451
    ??_8 <= s_6452
    ??_9 <= s_6453
    ??_10 <= s_6455
    ??_11 <= ??_10
    ??_12 <= s_6459
    ??_13 <= ??_12
    ??_14 <= s_6464
    ??_15 <= r_6466
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    ??_24 <= U
    ??_25 <= U
    ??_26 <= U
    ??_27 <= U
    ??_28 <= U
    ??_29 <= U
    ??_30 <= ??_27
    ??_31 <= ??_28
    ??_32 <= U
    ??_33 <= ??_27
    ??_34 <= ??_27
    ??_35 <= U
    ??_36 <= ??_28
    ??_37 <= U
    ??_38 <= U
    ??_39 <= ??_27
    ??_40 <= ??_28
    ??_41 <= U
    ??_42 <= U
    ??_43 <= ??_42
    ??_44 <= U
    ??_45 <= U
    ??_46 <= U
    ??_47 <= U
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    ??_57 <= U
    ??_58 <= U
    ??_59 <= U
    ??_60 <= U
    ??_61 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_6479
    ?_2 <= A_6482
    ?_3 <= A_6488
    ?_4 <= A_6494
    ?_5 <= A_6500
    ?_6 <= A_6506
    ?_7 <= A_6514
    ?_8 <= B_6522
    ?_9 <= B_6531
    ?_10 <= ((f_6538) n_6539)
    ?_11 <= A_6551
    ?_12 <= B_6559
    ?_13 <= A_6563
    ?_14 <= n_6565
    ?_15 <= nat_3
    ?_16 <= ?_13[0;3]
    ?_17 <= ?_13[0;3]
    ?_18 <= A_6583
    ?_19 <= (vec_8‹U› A_6586 (succ_5‹› n_6585))
    ?_20 <= ?_18[0;3]
    ?_21 <= ?_18[0;3]
    ?_22 <= nat_3
    ?_23 <= Type‹??_29›
    ?_24 <= nat_3
    ?_25 <= ?_22[0;3]
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _6627 : nat_3 -> U
            | __6629 => (eq_4‹??_27› nat_3 __6629 zero_4)
    ?_30 <= n_6632
    ?_31 <= A_6642
    ?_32 <= (exists_5‹??_28,U›
              nat_3
              function _6651 : nat_3 -> U
              | __6653 => (eq_4‹??_27› nat_3 __6653 ?_30[0;7]))
    ?_33 <= (exists_5‹??_28,U›
              nat_3
              function _6662 : nat_3 -> U
              | __6664 =>
                (eq_4‹??_27› nat_3 __6664 (succ_5‹› n_6657)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_6691
    ?_37 <= m_6697
    ?_38 <= ?_35[0;11]
    ?_39 <= ?_34[0;10]
    ?_40 <= nat_3
    ?_41 <= function _6746 : nat_3 -> U
            | __6748 => (eq_4‹??_27› nat_3 __6748 (succ_5‹› n_6741))
    ?_42 <= nat_3
    ?_43 <= Type‹??_41›
    ?_44 <= nat_3
    ?_45 <= ?_42[0;3]
    ?_46 <= nat_3
    ?_47 <= zero_4
    ?_48 <= ?_46[0;0]
    ?_49 <= (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0]))
    ?_50 <= zero_4
    ?_51 <= nat_3
    ?_52 <= ?_51[0;0]
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    ?_63 <= Type‹??_48›
    ?_64 <= Type‹??_49›
    ?_65 <= Type‹??_50›
    ?_66 <= Type‹??_51›
    ?_67 <= Type‹??_52›
    ?_68 <= Type‹??_53›
    ?_69 <= Type‹??_54›
    ?_70 <= Type‹??_55›
    ?_71 <= Type‹??_56›
    ?_72 <= Type‹??_57›
    ?_73 <= Type‹??_58›
    ?_74 <= Type‹??_59›
    ?_75 <= Type‹??_60›
    ?_76 <= Type‹??_61›
    ?_77 <= Type‹??_62›
    
  |}
  eqns {|
    equal_tm? (?_55[0;0], ?_54[0;0]);
    equal_tm? ((vec_8‹U› ?_54[0;0] (succ_5‹› ?_53[0;0])),
      (vec_8‹U› nat_3 (succ_5‹› zero_4)))
  |}
end_dump
simpl_tm ~expand:false( ?_55[0;0], ?_54[0;0])
simpl_tm ~expand:false( (vec_8‹U› ?_54[0;0] (succ_5‹› ?_53[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
simpl_tm ~expand:false( ?_54[0;0], nat_3)
simpl_tm ~expand:false( (succ_5‹› ?_53[0;0]), (succ_5‹› zero_4))
simpl_tm ~expand:false( ?_53[0;0], zero_4)
simpl_tm ~expand:false( zero_4, ?_53[0;0])
attempt_delay(?_53[0;0] : nat_3)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_54[0;0] : U)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_55[0;0] : ?_77[0;0])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_62›)
check_tm( nat_3, Type‹??_62›)
infer_tm(nat_3)
assert_equal1( Type‹??_62›, U)
assert_equal1_extend( Type‹??_62›, U)
simpl_tm ~expand:false( Type‹??_62›, U)
----------------------------------

definition-------------------------
infer_tm(?_58[0;0])
delay_assert(?_78[0;0], ??_63)
check_tm( ((hd_vec3_6) ?_57[0;0] ?_56[0;0] xs_8), ?_58[0;0])
infer_tm(((hd_vec3_6) ?_57[0;0] ?_56[0;0] xs_8))
infer_tm(((hd_vec3_6) ?_57[0;0] ?_56[0;0]))
infer_tm(((hd_vec3_6) ?_57[0;0]))
infer_tm(hd_vec3_6)
simpl_tm ~expand:false( ?_78[0;0], Type‹??_63›)
check_tm( ?_57[0;0], U)
check_tm( ?_56[0;0], nat_3)
check_tm( xs_8, (vec_8‹U› ?_57[0;0] (succ_5‹› ?_56[0;0])))
infer_tm(xs_8)
assert_equal1( (vec_8‹U› ?_57[0;0] (succ_5‹› ?_56[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1_extend( (vec_8‹U› ?_57[0;0] (succ_5‹› ?_56[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1( ?_58[0;0], ?_57[0;0])
assert_equal1_extend( ?_58[0;0], ?_57[0;0])
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_6851
    ??_2 <= s_6853
    ??_3 <= r_6854
    ??_4 <= s_6856
    ??_5 <= s_6857
    ??_6 <= s_6858
    ??_7 <= s_6859
    ??_8 <= s_6860
    ??_9 <= s_6861
    ??_10 <= s_6863
    ??_11 <= ??_10
    ??_12 <= s_6867
    ??_13 <= ??_12
    ??_14 <= s_6872
    ??_15 <= r_6874
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= U
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= U
    ??_24 <= U
    ??_25 <= U
    ??_26 <= U
    ??_27 <= U
    ??_28 <= U
    ??_29 <= U
    ??_30 <= ??_27
    ??_31 <= ??_28
    ??_32 <= U
    ??_33 <= ??_27
    ??_34 <= ??_27
    ??_35 <= U
    ??_36 <= ??_28
    ??_37 <= U
    ??_38 <= U
    ??_39 <= ??_27
    ??_40 <= ??_28
    ??_41 <= U
    ??_42 <= U
    ??_43 <= ??_42
    ??_44 <= U
    ??_45 <= U
    ??_46 <= U
    ??_47 <= U
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    ??_57 <= U
    ??_58 <= U
    ??_59 <= U
    ??_60 <= U
    ??_61 <= U
    ??_62 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_6887
    ?_2 <= A_6890
    ?_3 <= A_6896
    ?_4 <= A_6902
    ?_5 <= A_6908
    ?_6 <= A_6914
    ?_7 <= A_6922
    ?_8 <= B_6930
    ?_9 <= B_6939
    ?_10 <= ((f_6946) n_6947)
    ?_11 <= A_6959
    ?_12 <= B_6967
    ?_13 <= A_6971
    ?_14 <= n_6973
    ?_15 <= nat_3
    ?_16 <= ?_13[0;3]
    ?_17 <= ?_13[0;3]
    ?_18 <= A_6991
    ?_19 <= (vec_8‹U› A_6994 (succ_5‹› n_6993))
    ?_20 <= ?_18[0;3]
    ?_21 <= ?_18[0;3]
    ?_22 <= nat_3
    ?_23 <= Type‹??_29›
    ?_24 <= nat_3
    ?_25 <= ?_22[0;3]
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _7035 : nat_3 -> U
            | __7037 => (eq_4‹??_27› nat_3 __7037 zero_4)
    ?_30 <= n_7040
    ?_31 <= A_7050
    ?_32 <= (exists_5‹??_28,U›
              nat_3
              function _7059 : nat_3 -> U
              | __7061 => (eq_4‹??_27› nat_3 __7061 ?_30[0;7]))
    ?_33 <= (exists_5‹??_28,U›
              nat_3
              function _7070 : nat_3 -> U
              | __7072 =>
                (eq_4‹??_27› nat_3 __7072 (succ_5‹› n_7065)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_7099
    ?_37 <= m_7105
    ?_38 <= ?_35[0;11]
    ?_39 <= ?_34[0;10]
    ?_40 <= nat_3
    ?_41 <= function _7154 : nat_3 -> U
            | __7156 => (eq_4‹??_27› nat_3 __7156 (succ_5‹› n_7149))
    ?_42 <= nat_3
    ?_43 <= Type‹??_41›
    ?_44 <= nat_3
    ?_45 <= ?_42[0;3]
    ?_46 <= nat_3
    ?_47 <= zero_4
    ?_48 <= ?_46[0;0]
    ?_49 <= (vec_8‹??_43› ?_48[0;0] (succ_5‹› ?_47[0;0]))
    ?_50 <= zero_4
    ?_51 <= nat_3
    ?_52 <= ?_51[0;0]
    ?_53 <= zero_4
    ?_54 <= nat_3
    ?_55 <= ?_54[0;0]
    ?_59 <= Type‹??_44›
    ?_60 <= Type‹??_45›
    ?_61 <= Type‹??_46›
    ?_62 <= Type‹??_47›
    ?_63 <= Type‹??_48›
    ?_64 <= Type‹??_49›
    ?_65 <= Type‹??_50›
    ?_66 <= Type‹??_51›
    ?_67 <= Type‹??_52›
    ?_68 <= Type‹??_53›
    ?_69 <= Type‹??_54›
    ?_70 <= Type‹??_55›
    ?_71 <= Type‹??_56›
    ?_72 <= Type‹??_57›
    ?_73 <= Type‹??_58›
    ?_74 <= Type‹??_59›
    ?_75 <= Type‹??_60›
    ?_76 <= Type‹??_61›
    ?_77 <= Type‹??_62›
    ?_78 <= Type‹??_63›
    
  |}
  eqns {|
    equal_tm? (?_58[0;0], ?_57[0;0]);
    equal_tm? ((vec_8‹U› ?_57[0;0] (succ_5‹› ?_56[0;0])),
      (vec_8‹U› nat_3 (succ_5‹› zero_4)))
  |}
end_dump
simpl_tm ~expand:false( ?_58[0;0], ?_57[0;0])
simpl_tm ~expand:false( (vec_8‹U› ?_57[0;0] (succ_5‹› ?_56[0;0])),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
simpl_tm ~expand:false( ?_57[0;0], nat_3)
simpl_tm ~expand:false( (succ_5‹› ?_56[0;0]), (succ_5‹› zero_4))
simpl_tm ~expand:false( ?_56[0;0], zero_4)
simpl_tm ~expand:false( zero_4, ?_56[0;0])
attempt_delay(?_56[0;0] : nat_3)
resolve_ctx_ok
resolve_env_ok
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1_ok( nat_3, nat_3)
attempt_delay(?_57[0;0] : U)
resolve_ctx_ok
resolve_env_ok
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
assert_equal1_ok( U, U)
attempt_delay(?_58[0;0] : ?_78[0;0])
resolve_ctx_ok
resolve_env_ok
infer_tm(Type‹??_63›)
check_tm( nat_3, Type‹??_63›)
infer_tm(nat_3)
assert_equal1( Type‹??_63›, U)
assert_equal1_extend( Type‹??_63›, U)
simpl_tm ~expand:false( Type‹??_63›, U)
----------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_7253 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_7254› (A_7255 : Type‹s_7254›) (m_7256 : A_7255):
  A_7255 -> U
where
| refl_6 : (eq_4‹s_7254› A_7255 m_7256 m_7256)

#[program]
inductive exists_5‹s_7258,r_7259› (A_7260 : Type‹s_7258›) (B_7261 : 
A_7260 -> Type‹r_7259›): U where
| ex_7
    (m_7263 : A_7260) {pf_7264 : ((B_7261) m_7263)}
    : (exists_5‹s_7258,r_7259› A_7260 B_7261)

#[program]
inductive sing_6‹s_7265› (A_7266 : Type‹s_7265›):
  A_7266 -> Type‹s_7265›
where
| just_8 (m_7268 : A_7266) : (sing_6‹s_7265› A_7266 m_7268)

#[program]
inductive list_7‹s_7269› (A_7270 : Type‹s_7269›): Type‹s_7269›
where
| nil_9 : (list_7‹s_7269› A_7270)
| cons_10
    (hd_7271 : A_7270) (tl_7272 : (list_7‹s_7269› A_7270))
    : (list_7‹s_7269› A_7270)

#[program]
inductive vec_8‹s_7273› (A_7274 : Type‹s_7273›):
  nat_3 -> Type‹s_7273›
where
| vnil_11 : (vec_8‹s_7273› A_7274 zero_4)
| vcons_12
    {n_7276 : nat_3} (hd_7277 : A_7274)
    (tl_7278 : (vec_8‹s_7273› A_7274 n_7276))
    : (vec_8‹s_7273› A_7274 (succ_5‹› n_7276))

#[program]
def rwl_1‹s_7279,r_7280› :
  ∀ {A_7281 : Type‹s_7279›} ->
    ∀ {m_7282 : A_7281} ->
      ∀ {n_7283 : A_7281} ->
        ∀ {B_7284 : A_7281 -> Type‹r_7280›} ->
          {(eq_4‹s_7279› A_7281 m_7282 n_7283)} ->
            ((B_7284) m_7282) -> ((B_7284) n_7283)
:=
  function rwl_7288 :
    ∀ {A_7289 : Type‹s_7279›} ->
      ∀ {m_7290 : A_7289} ->
        ∀ {n_7291 : A_7289} ->
          ∀ {B_7292 : A_7289 -> Type‹r_7280›} ->
            {(eq_4‹s_7279› A_7289 m_7290 n_7291)} ->
              ((B_7292) m_7290) -> ((B_7292) n_7291)
  | A_7296 m_7297 n_7298 B_7299 refl_6 __7300 => __7300

#[program]
def rwr_2‹s_7301,r_7302› :
  ∀ {A_7303 : Type‹s_7301›} ->
    ∀ {m_7304 : A_7303} ->
      ∀ {n_7305 : A_7303} ->
        ∀ {B_7306 : A_7303 -> Type‹r_7302›} ->
          {(eq_4‹s_7301› A_7303 m_7304 n_7305)} ->
            ((B_7306) n_7305) -> ((B_7306) m_7304)
:=
  function rwr_7310 :
    ∀ {A_7311 : Type‹s_7301›} ->
      ∀ {m_7312 : A_7311} ->
        ∀ {n_7313 : A_7311} ->
          ∀ {B_7314 : A_7311 -> Type‹r_7302›} ->
            {(eq_4‹s_7301› A_7311 m_7312 n_7313)} ->
              ((B_7314) n_7313) -> ((B_7314) m_7312)
  | A_7318 m_7319 n_7320 B_7321 refl_6 __7322 => __7322

#[logical]
def congr_3‹s_7323,r_7324,t_7325› :
  ∀ (A_7326 : Type‹s_7323›) ->
    ∀ (B_7327 : Type‹r_7324›) ->
      ∀ (m_7328 : A_7326) ->
        ∀ (n_7329 : A_7326) ->
          ∀ (f_7330 : forall‹t_7325›(__7331 : A_7326), B_7327) ->
            (eq_4‹s_7323› A_7326 m_7328 n_7329) ->
              (eq_4‹r_7324› B_7327 ((f_7330) m_7328) ((f_7330) n_7329))
:=
  function congr_7333 :
    ∀ (A_7334 : Type‹s_7323›) ->
      ∀ (B_7335 : Type‹r_7324›) ->
        ∀ (m_7336 : A_7334) ->
          ∀ (n_7337 : A_7334) ->
            ∀ (f_7338 : forall‹t_7325›(__7339 : A_7334), B_7335) ->
              (eq_4‹s_7323› A_7334 m_7336 n_7337) ->
                (eq_4‹r_7324› B_7335 ((f_7338) m_7336) ((f_7338) n_7337))
  | A_7341 B_7342 m_7343 n_7344 f_7345 refl_6 =>
    (refl_6‹r_7324› B_7342 ((f_7345) n_7344))

#[program]
def hd_vec_4‹› :
  ∀ {A_7346 : U} ->
    ∀ {n_7347 : nat_3} ->
      (vec_8‹U› A_7346 (succ_5‹› n_7347)) -> A_7346
:=
  function hd_vec_7349 :
    ∀ {A_7350 : U} ->
      ∀ {n_7351 : nat_3} ->
        (vec_8‹U› A_7350 (succ_5‹› n_7351)) -> A_7350
  | A_7353 n_7354 (vcons_12 n_7355 hd_7356 tl_7357) => hd_7356

#[program]
def hd_vec2_5‹› :
  ∀ {A_7358 : U} ->
    ∀ {n_7359 : nat_3} ->
      (vec_8‹U› A_7358 (succ_5‹› n_7359)) -> A_7358
:=
  function hd_vec2_7361 :
    ∀ {A_7362 : U} ->
      ∀ {n_7363 : nat_3} ->
        (vec_8‹U› A_7362 (succ_5‹› n_7363)) -> A_7362
  | A_7365 n_7366 xs_7367 =>
    match n_7366, xs_7367 in
      ∀ {n0_7368 : nat_3} -o
        (vec_8‹U› A_7365 (succ_5‹› n0_7368)) -o A_7365
    with
    | n0_7370, vnil_11 =>
    | n0_7371, (vcons_12 n_7372 hd_7373 tl_7374) => hd_7373

#[program]
def hd_vec3_6‹› :
  ∀ {A_7375 : U} ->
    ∀ {n_7376 : nat_3} ->
      (vec_8‹U› A_7375 (succ_5‹› n_7376)) -> A_7375
:=
  function hd_vec3_7378 :
    ∀ {A_7379 : U} ->
      ∀ {n_7380 : nat_3} ->
        (vec_8‹U› A_7379 (succ_5‹› n_7380)) -> A_7379
  | A_7382 n_7383 xs_7384 =>
    match xs_7384 in (vec_8‹U› A_7382 (succ_5‹› n_7383)) -o A_7382
    with
    | vnil_11 =>
    | (vcons_12 n_7386 hd_7387 tl_7388) => hd_7387

#[program]
def vlength_7‹› :
  ∀ {A_7389 : U} ->
    ∀ {n_7390 : nat_3} ->
      (vec_8‹U› A_7389 n_7390) ->
        (exists_5‹U,U›
          nat_3
          function _7392 : nat_3 -> U
          | __7394 => (eq_4‹U› nat_3 __7394 n_7390))
:=
  function vlength_7395 :
    ∀ {A_7396 : U} ->
      ∀ {n_7397 : nat_3} ->
        (vec_8‹U› A_7396 n_7397) ->
          (exists_5‹U,U›
            nat_3
            function _7399 : nat_3 -> U
            | __7401 => (eq_4‹U› nat_3 __7401 n_7397))
  | A_7402 n_7403 vnil_11 =>
    (ex_7‹U,U›
      nat_3
      function _7404 : nat_3 -> U
      | __7406 => (eq_4‹U› nat_3 __7406 zero_4) zero_4
      (refl_6‹U› nat_3 zero_4))
  | A_7407 n_7408 (vcons_12 n_7409 hd_7410 tl_7411) =>
    match ((vlength_7395) A_7407 n_7409 tl_7411) in
      (exists_5‹U,U›
        nat_3
        function _7413 : nat_3 -> U
        | __7415 => (eq_4‹U› nat_3 __7415 n_7409)) -o
        (exists_5‹U,U›
          nat_3
          function _7416 : nat_3 -> U
          | __7418 => (eq_4‹U› nat_3 __7418 (succ_5‹› n_7409)))
    with
    | (ex_7 m_7419 pf_7420) =>
      (ex_7‹U,U›
        nat_3
        function _7421 : nat_3 -> U
        | __7423 => (eq_4‹U› nat_3 __7423 (succ_5‹› n_7409))
        (succ_5‹› m_7419)
        ((congr_3‹U,U,U›)
          nat_3 nat_3 m_7419 n_7409
          function _7424 : nat_3 -> nat_3
          | __7426 => (succ_5‹› __7426) pf_7420))

#[program]
def xs_8‹› : (vec_8‹U› nat_3 (succ_5‹› zero_4)) :=
  (vcons_12‹U› nat_3 zero_4 zero_4 (vnil_11‹U› nat_3))

#[program]
def x_9‹› : nat_3 := ((hd_vec_4) nat_3 zero_4 xs_8)

#[program]
def y_10‹› : nat_3 := ((hd_vec2_5) nat_3 zero_4 xs_8)

#[program]
def z_11‹› : nat_3 := ((hd_vec3_6) nat_3 zero_4 xs_8)

-----------------------------------------

Logical.infer_tm(unit_1)
Logical.infer_tm(bool_2)
Logical.infer_tm(bool_2)
Logical.infer_tm(nat_3)
Logical.infer_tm(nat_3)
Logical.infer_tm(nat_3)
Logical.infer_tm(L)
Logical.infer_tm(A_7428)
Logical.infer_tm(A_7428)
Logical.infer_tm(L)
Logical.infer_tm(A_7431)
Logical.infer_tm((eq_4‹L› A_7431 m_7432 m_7432))
Logical.check_tm( A_7431, L )
Logical.infer_tm(A_7431)
Logical.assert_equal(L, L)
Logical.check_tm( m_7432, A_7431 )
Logical.infer_tm(m_7432)
Logical.assert_equal(A_7431, A_7431)
Logical.check_tm( m_7432, A_7431 )
Logical.infer_tm(m_7432)
Logical.assert_equal(A_7431, A_7431)
Logical.infer_tm(U)
Logical.infer_tm(A_7433)
Logical.infer_tm(A_7433)
Logical.infer_tm(U)
Logical.infer_tm(A_7436)
Logical.infer_tm((eq_4‹U› A_7436 m_7437 m_7437))
Logical.check_tm( A_7436, U )
Logical.infer_tm(A_7436)
Logical.assert_equal(U, U)
Logical.check_tm( m_7437, A_7436 )
Logical.infer_tm(m_7437)
Logical.assert_equal(A_7436, A_7436)
Logical.check_tm( m_7437, A_7436 )
Logical.infer_tm(m_7437)
Logical.assert_equal(A_7436, A_7436)
Logical.infer_tm(L)
Logical.infer_tm(A_7438 -> L)
Logical.infer_tm(A_7438)
Logical.infer_tm(L)
Logical.infer_tm(L)
Logical.infer_tm(A_7442 -> L)
Logical.infer_tm(A_7442)
Logical.infer_tm(L)
Logical.infer_tm(A_7442)
Logical.infer_tm(((B_7443) m_7446))
Logical.infer_tm(B_7443)
Logical.check_tm( m_7446, A_7442 )
Logical.infer_tm(m_7446)
Logical.assert_equal(A_7442, A_7442)
Logical.infer_tm((exists_5‹L,L› A_7442 B_7443))
Logical.check_tm( A_7442, L )
Logical.infer_tm(A_7442)
Logical.assert_equal(L, L)
Logical.check_tm( B_7443, A_7442 -> L )
Logical.infer_tm(B_7443)
Logical.assert_equal(A_7442 -> L, A_7442 -> L)
Logical.infer_tm(L)
Logical.infer_tm(A_7452 -> U)
Logical.infer_tm(A_7452)
Logical.infer_tm(U)
Logical.infer_tm(L)
Logical.infer_tm(A_7456 -> U)
Logical.infer_tm(A_7456)
Logical.infer_tm(U)
Logical.infer_tm(A_7456)
Logical.infer_tm(((B_7457) m_7460))
Logical.infer_tm(B_7457)
Logical.check_tm( m_7460, A_7456 )
Logical.infer_tm(m_7460)
Logical.assert_equal(A_7456, A_7456)
Logical.infer_tm((exists_5‹L,U› A_7456 B_7457))
Logical.check_tm( A_7456, L )
Logical.infer_tm(A_7456)
Logical.assert_equal(L, L)
Logical.check_tm( B_7457, A_7456 -> U )
Logical.infer_tm(B_7457)
Logical.assert_equal(A_7456 -> U, A_7456 -> U)
Logical.infer_tm(U)
Logical.infer_tm(A_7466 -> L)
Logical.infer_tm(A_7466)
Logical.infer_tm(L)
Logical.infer_tm(U)
Logical.infer_tm(A_7470 -> L)
Logical.infer_tm(A_7470)
Logical.infer_tm(L)
Logical.infer_tm(A_7470)
Logical.infer_tm(((B_7471) m_7474))
Logical.infer_tm(B_7471)
Logical.check_tm( m_7474, A_7470 )
Logical.infer_tm(m_7474)
Logical.assert_equal(A_7470, A_7470)
Logical.infer_tm((exists_5‹U,L› A_7470 B_7471))
Logical.check_tm( A_7470, U )
Logical.infer_tm(A_7470)
Logical.assert_equal(U, U)
Logical.check_tm( B_7471, A_7470 -> L )
Logical.infer_tm(B_7471)
Logical.assert_equal(A_7470 -> L, A_7470 -> L)
Logical.infer_tm(U)
Logical.infer_tm(A_7480 -> U)
Logical.infer_tm(A_7480)
Logical.infer_tm(U)
Logical.infer_tm(U)
Logical.infer_tm(A_7484 -> U)
Logical.infer_tm(A_7484)
Logical.infer_tm(U)
Logical.infer_tm(A_7484)
Logical.infer_tm(((B_7485) m_7488))
Logical.infer_tm(B_7485)
Logical.check_tm( m_7488, A_7484 )
Logical.infer_tm(m_7488)
Logical.assert_equal(A_7484, A_7484)
Logical.infer_tm((exists_5‹U,U› A_7484 B_7485))
Logical.check_tm( A_7484, U )
Logical.infer_tm(A_7484)
Logical.assert_equal(U, U)
Logical.check_tm( B_7485, A_7484 -> U )
Logical.infer_tm(B_7485)
Logical.assert_equal(A_7484 -> U, A_7484 -> U)
Logical.infer_tm(L)
Logical.infer_tm(A_7494)
Logical.infer_tm(L)
Logical.infer_tm(A_7496)
Logical.infer_tm((sing_6‹L› A_7496 m_7497))
Logical.check_tm( A_7496, L )
Logical.infer_tm(A_7496)
Logical.assert_equal(L, L)
Logical.check_tm( m_7497, A_7496 )
Logical.infer_tm(m_7497)
Logical.assert_equal(A_7496, A_7496)
Logical.infer_tm(U)
Logical.infer_tm(A_7498)
Logical.infer_tm(U)
Logical.infer_tm(A_7500)
Logical.infer_tm((sing_6‹U› A_7500 m_7501))
Logical.check_tm( A_7500, U )
Logical.infer_tm(A_7500)
Logical.assert_equal(U, U)
Logical.check_tm( m_7501, A_7500 )
Logical.infer_tm(m_7501)
Logical.assert_equal(A_7500, A_7500)
Logical.infer_tm(L)
Logical.infer_tm(L)
Logical.infer_tm((list_7‹L› A_7503))
Logical.check_tm( A_7503, L )
Logical.infer_tm(A_7503)
Logical.assert_equal(L, L)
Logical.infer_tm(L)
Logical.infer_tm(A_7504)
Logical.infer_tm((list_7‹L› A_7504))
Logical.check_tm( A_7504, L )
Logical.infer_tm(A_7504)
Logical.assert_equal(L, L)
Logical.infer_tm((list_7‹L› A_7504))
Logical.check_tm( A_7504, L )
Logical.infer_tm(A_7504)
Logical.assert_equal(L, L)
Logical.infer_tm(U)
Logical.infer_tm(U)
Logical.infer_tm((list_7‹U› A_7508))
Logical.check_tm( A_7508, U )
Logical.infer_tm(A_7508)
Logical.assert_equal(U, U)
Logical.infer_tm(U)
Logical.infer_tm(A_7509)
Logical.infer_tm((list_7‹U› A_7509))
Logical.check_tm( A_7509, U )
Logical.infer_tm(A_7509)
Logical.assert_equal(U, U)
Logical.infer_tm((list_7‹U› A_7509))
Logical.check_tm( A_7509, U )
Logical.infer_tm(A_7509)
Logical.assert_equal(U, U)
Logical.infer_tm(L)
Logical.infer_tm(nat_3)
Logical.infer_tm(L)
Logical.infer_tm((vec_8‹L› A_7514 zero_4))
Logical.check_tm( A_7514, L )
Logical.infer_tm(A_7514)
Logical.assert_equal(L, L)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(L)
Logical.infer_tm(nat_3)
Logical.infer_tm(A_7515)
Logical.infer_tm((vec_8‹L› A_7515 n_7516))
Logical.check_tm( A_7515, L )
Logical.infer_tm(A_7515)
Logical.assert_equal(L, L)
Logical.check_tm( n_7516, nat_3 )
Logical.infer_tm(n_7516)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((vec_8‹L› A_7515 (succ_5‹› n_7516)))
Logical.check_tm( A_7515, L )
Logical.infer_tm(A_7515)
Logical.assert_equal(L, L)
Logical.check_tm( (succ_5‹› n_7516), nat_3 )
Logical.infer_tm((succ_5‹› n_7516))
Logical.check_tm( n_7516, nat_3 )
Logical.infer_tm(n_7516)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm((vec_8‹U› A_7521 zero_4))
Logical.check_tm( A_7521, U )
Logical.infer_tm(A_7521)
Logical.assert_equal(U, U)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
Logical.infer_tm(A_7522)
Logical.infer_tm((vec_8‹U› A_7522 n_7523))
Logical.check_tm( A_7522, U )
Logical.infer_tm(A_7522)
Logical.assert_equal(U, U)
Logical.check_tm( n_7523, nat_3 )
Logical.infer_tm(n_7523)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((vec_8‹U› A_7522 (succ_5‹› n_7523)))
Logical.check_tm( A_7522, U )
Logical.infer_tm(A_7522)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_7523), nat_3 )
Logical.infer_tm((succ_5‹› n_7523))
Logical.check_tm( n_7523, nat_3 )
Logical.infer_tm(n_7523)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(∀ {A_7526 : L} ->
                   ∀ {m_7527 : A_7526} ->
                     ∀ {n_7528 : A_7526} ->
                       ∀ {B_7529 : A_7526 -> L} ->
                         {(eq_4‹L› A_7526 m_7527 n_7528)} ->
                           ((B_7529) m_7527) -> ((B_7529) n_7528))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_7534 : A_7533} ->
                   ∀ {n_7535 : A_7533} ->
                     ∀ {B_7536 : A_7533 -> L} ->
                       {(eq_4‹L› A_7533 m_7534 n_7535)} ->
                         ((B_7536) m_7534) -> ((B_7536) n_7535))
Logical.infer_tm(A_7533)
Logical.infer_tm(∀ {n_7541 : A_7533} ->
                   ∀ {B_7542 : A_7533 -> L} ->
                     {(eq_4‹L› A_7533 m_7540 n_7541)} ->
                       ((B_7542) m_7540) -> ((B_7542) n_7541))
Logical.infer_tm(A_7533)
Logical.infer_tm(∀ {B_7547 : A_7533 -> L} ->
                   {(eq_4‹L› A_7533 m_7540 n_7546)} ->
                     ((B_7547) m_7540) -> ((B_7547) n_7546))
Logical.infer_tm(A_7533 -> L)
Logical.infer_tm(A_7533)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹L› A_7533 m_7540 n_7546)} ->
                   ((B_7551) m_7540) -> ((B_7551) n_7546))
Logical.infer_tm((eq_4‹L› A_7533 m_7540 n_7546))
Logical.check_tm( A_7533, L )
Logical.infer_tm(A_7533)
Logical.assert_equal(L, L)
Logical.check_tm( m_7540, A_7533 )
Logical.infer_tm(m_7540)
Logical.assert_equal(A_7533, A_7533)
Logical.check_tm( n_7546, A_7533 )
Logical.infer_tm(n_7546)
Logical.assert_equal(A_7533, A_7533)
Logical.infer_tm(((B_7551) m_7540) -> ((B_7551) n_7546))
Logical.infer_tm(((B_7551) m_7540))
Logical.infer_tm(B_7551)
Logical.check_tm( m_7540, A_7533 )
Logical.infer_tm(m_7540)
Logical.assert_equal(A_7533, A_7533)
Logical.infer_tm(((B_7551) n_7546))
Logical.infer_tm(B_7551)
Logical.check_tm( n_7546, A_7533 )
Logical.infer_tm(n_7546)
Logical.assert_equal(A_7533, A_7533)
Program.check_tm(
  function rwl_7559 :
    ∀ {A_7560 : L} ->
      ∀ {m_7561 : A_7560} ->
        ∀ {n_7562 : A_7560} ->
          ∀ {B_7563 : A_7560 -> L} ->
            {(eq_4‹L› A_7560 m_7561 n_7562)} ->
              ((B_7563) m_7561) -> ((B_7563) n_7562)
  | A_7567 m_7568 n_7569 B_7570 refl_6 __7571 => __7571,
  ∀ {A_7572 : L} ->
    ∀ {m_7573 : A_7572} ->
      ∀ {n_7574 : A_7572} ->
        ∀ {B_7575 : A_7572 -> L} ->
          {(eq_4‹L› A_7572 m_7573 n_7574)} ->
            ((B_7575) m_7573) -> ((B_7575) n_7574)
)
Program.infer_tm(function rwl_7579 :
                   ∀ {A_7580 : L} ->
                     ∀ {m_7581 : A_7580} ->
                       ∀ {n_7582 : A_7580} ->
                         ∀ {B_7583 : A_7580 -> L} ->
                           {(eq_4‹L› A_7580 m_7581 n_7582)} ->
                             ((B_7583) m_7581) -> ((B_7583) n_7582)
                 | A_7587 m_7588 n_7589 B_7590 refl_6 __7591 => __7591)
Logical.infer_tm(∀ {A_7593 : L} ->
                   ∀ {m_7594 : A_7593} ->
                     ∀ {n_7595 : A_7593} ->
                       ∀ {B_7596 : A_7593 -> L} ->
                         {(eq_4‹L› A_7593 m_7594 n_7595)} ->
                           ((B_7596) m_7594) -> ((B_7596) n_7595))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_7601 : A_7600} ->
                   ∀ {n_7602 : A_7600} ->
                     ∀ {B_7603 : A_7600 -> L} ->
                       {(eq_4‹L› A_7600 m_7601 n_7602)} ->
                         ((B_7603) m_7601) -> ((B_7603) n_7602))
Logical.infer_tm(A_7600)
Logical.infer_tm(∀ {n_7608 : A_7600} ->
                   ∀ {B_7609 : A_7600 -> L} ->
                     {(eq_4‹L› A_7600 m_7607 n_7608)} ->
                       ((B_7609) m_7607) -> ((B_7609) n_7608))
Logical.infer_tm(A_7600)
Logical.infer_tm(∀ {B_7614 : A_7600 -> L} ->
                   {(eq_4‹L› A_7600 m_7607 n_7613)} ->
                     ((B_7614) m_7607) -> ((B_7614) n_7613))
Logical.infer_tm(A_7600 -> L)
Logical.infer_tm(A_7600)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹L› A_7600 m_7607 n_7613)} ->
                   ((B_7618) m_7607) -> ((B_7618) n_7613))
Logical.infer_tm((eq_4‹L› A_7600 m_7607 n_7613))
Logical.check_tm( A_7600, L )
Logical.infer_tm(A_7600)
Logical.assert_equal(L, L)
Logical.check_tm( m_7607, A_7600 )
Logical.infer_tm(m_7607)
Logical.assert_equal(A_7600, A_7600)
Logical.check_tm( n_7613, A_7600 )
Logical.infer_tm(n_7613)
Logical.assert_equal(A_7600, A_7600)
Logical.infer_tm(((B_7618) m_7607) -> ((B_7618) n_7613))
Logical.infer_tm(((B_7618) m_7607))
Logical.infer_tm(B_7618)
Logical.check_tm( m_7607, A_7600 )
Logical.infer_tm(m_7607)
Logical.assert_equal(A_7600, A_7600)
Logical.infer_tm(((B_7618) n_7613))
Logical.infer_tm(B_7618)
Logical.check_tm( n_7613, A_7600 )
Logical.infer_tm(n_7613)
Logical.assert_equal(A_7600, A_7600)
trans12.Program.case_intro(A_7631, L)
Logical.infer_tm(L)
trans12.Program.case_intro(m_7639, #A_7631)
Logical.infer_tm(A_7631)
trans12.Program.case_intro(n_7647, #A_7631)
Logical.infer_tm(A_7631)
trans12.Program.case_intro(B_7655, #A_7631 -> L)
Logical.infer_tm(A_7631 -> L)
Logical.infer_tm(A_7631)
Logical.infer_tm(L)
trans12.Program.case_intro(__7667, (eq_4‹L› #A_7631 #m_7639 #n_7647))
Logical.infer_tm((eq_4‹L› A_7631 m_7639 n_7647))
Logical.check_tm( A_7631, L )
Logical.infer_tm(A_7631)
Logical.assert_equal(L, L)
Logical.check_tm( m_7639, A_7631 )
Logical.infer_tm(m_7639)
Logical.assert_equal(A_7631, A_7631)
Logical.check_tm( n_7647, A_7631 )
Logical.infer_tm(n_7647)
Logical.assert_equal(A_7631, A_7631)
trans12.Program.case_intro(__7676, ((#B_7655) #m_7639))
Logical.infer_tm(((B_7655) m_7639))
Logical.infer_tm(B_7655)
Logical.check_tm( m_7639, A_7631 )
Logical.infer_tm(m_7639)
Logical.assert_equal(A_7631, A_7631)
Logical.infer_tm((eq_4‹L› A_7631 m_7639 n_7647))
Logical.check_tm( A_7631, L )
Logical.infer_tm(A_7631)
Logical.assert_equal(L, L)
Logical.check_tm( m_7639, A_7631 )
Logical.infer_tm(m_7639)
Logical.assert_equal(A_7631, A_7631)
Logical.check_tm( n_7647, A_7631 )
Logical.infer_tm(n_7647)
Logical.assert_equal(A_7631, A_7631)
trans12.Program.case_split(eqL_9, reflL_13)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_7631 #m_7639 #n_7647),
      (eq_4‹L› #A_7631 #m_7639 #m_7639));
    {| eq_pat?(N #A_7631, A_7626 : L)
       eq_pat?(N #m_7639, m_7627 : #A_7631)
       eq_pat?(N #n_7647, n_7628 : #A_7631)
       eq_pat?(N #B_7655, B_7629 : #A_7631 -> L)
       eq_pat?(R #__7676, __7630 : ((#B_7655) #m_7639)) ::: [] =>? #__7630
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_7631, A_7626 : L)
  eq_pat?(N #m_7639, m_7627 : #A_7631)
  eq_pat?(N #n_7647, n_7628 : #A_7631)
  eq_pat?(N #B_7655, B_7629 : #A_7631 -> L)
  eq_pat?(R #__7676, __7630 : ((#B_7655) #m_7639))
)
unify_global(
  eq_term?( (eq_4‹L› #A_7631 #m_7639 #n_7647),
    (eq_4‹L› #A_7631 #m_7639 #m_7639))
)
simpl_pprbm ~expand:false( #A_7631, #A_7626)
simpl_pprbm ~expand:false( #m_7639, #m_7627)
simpl_pprbm ~expand:false( #n_7647, #n_7628)
simpl_pprbm ~expand:false( #B_7655, #B_7629)
simpl_pprbm ~expand:false( #__7676, #__7630)
simpl_pprbm ~expand:false( (eq_4‹L› #A_7631 #m_7639 #n_7647),
  (eq_4‹L› #A_7631 #m_7639 #m_7639))
simpl_pprbm ~expand:false( #A_7631, #A_7631)
simpl_pprbm ~expand:false( #m_7639, #m_7639)
simpl_pprbm ~expand:false( #n_7647, #m_7639)
case_coverage_ok( __7676, ((B_7655) n_7647))
Program.check_tm( __7676, ((B_7655) n_7647) )
Program.infer_tm(__7676)
Logical.assert_equal(((B_7655) n_7647), ((B_7655) n_7647))
trans12.Program.case_introed(((#B_7655) #m_7639))
trans12.Program.case_introed((eq_4‹L› #A_7631 #m_7639 #n_7647))
trans12.Program.case_introed(#A_7631 -> L)
trans12.Program.case_introed(#A_7631)
trans12.Program.case_introed(#A_7631)
trans12.Program.case_introed(L)
Logical.assert_equal(∀ {A_7713 : L} ->
                       ∀ {m_7714 : A_7713} ->
                         ∀ {n_7715 : A_7713} ->
                           ∀ {B_7716 : A_7713 -> L} ->
                             {(eq_4‹L› A_7713 m_7714 n_7715)} ->
                               ((B_7716) m_7714) -> ((B_7716) n_7715), 
∀ {A_7720 : L} ->
  ∀ {m_7721 : A_7720} ->
    ∀ {n_7722 : A_7720} ->
      ∀ {B_7723 : A_7720 -> L} ->
        {(eq_4‹L› A_7720 m_7721 n_7722)} ->
          ((B_7723) m_7721) -> ((B_7723) n_7722))
Logical.infer_tm(∀ {A_7734 : L} ->
                   ∀ {m_7735 : A_7734} ->
                     ∀ {n_7736 : A_7734} ->
                       ∀ {B_7737 : A_7734 -> U} ->
                         {(eq_4‹L› A_7734 m_7735 n_7736)} ->
                           ((B_7737) m_7735) -> ((B_7737) n_7736))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_7742 : A_7741} ->
                   ∀ {n_7743 : A_7741} ->
                     ∀ {B_7744 : A_7741 -> U} ->
                       {(eq_4‹L› A_7741 m_7742 n_7743)} ->
                         ((B_7744) m_7742) -> ((B_7744) n_7743))
Logical.infer_tm(A_7741)
Logical.infer_tm(∀ {n_7749 : A_7741} ->
                   ∀ {B_7750 : A_7741 -> U} ->
                     {(eq_4‹L› A_7741 m_7748 n_7749)} ->
                       ((B_7750) m_7748) -> ((B_7750) n_7749))
Logical.infer_tm(A_7741)
Logical.infer_tm(∀ {B_7755 : A_7741 -> U} ->
                   {(eq_4‹L› A_7741 m_7748 n_7754)} ->
                     ((B_7755) m_7748) -> ((B_7755) n_7754))
Logical.infer_tm(A_7741 -> U)
Logical.infer_tm(A_7741)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹L› A_7741 m_7748 n_7754)} ->
                   ((B_7759) m_7748) -> ((B_7759) n_7754))
Logical.infer_tm((eq_4‹L› A_7741 m_7748 n_7754))
Logical.check_tm( A_7741, L )
Logical.infer_tm(A_7741)
Logical.assert_equal(L, L)
Logical.check_tm( m_7748, A_7741 )
Logical.infer_tm(m_7748)
Logical.assert_equal(A_7741, A_7741)
Logical.check_tm( n_7754, A_7741 )
Logical.infer_tm(n_7754)
Logical.assert_equal(A_7741, A_7741)
Logical.infer_tm(((B_7759) m_7748) -> ((B_7759) n_7754))
Logical.infer_tm(((B_7759) m_7748))
Logical.infer_tm(B_7759)
Logical.check_tm( m_7748, A_7741 )
Logical.infer_tm(m_7748)
Logical.assert_equal(A_7741, A_7741)
Logical.infer_tm(((B_7759) n_7754))
Logical.infer_tm(B_7759)
Logical.check_tm( n_7754, A_7741 )
Logical.infer_tm(n_7754)
Logical.assert_equal(A_7741, A_7741)
Program.check_tm(
  function rwl_7767 :
    ∀ {A_7768 : L} ->
      ∀ {m_7769 : A_7768} ->
        ∀ {n_7770 : A_7768} ->
          ∀ {B_7771 : A_7768 -> U} ->
            {(eq_4‹L› A_7768 m_7769 n_7770)} ->
              ((B_7771) m_7769) -> ((B_7771) n_7770)
  | A_7775 m_7776 n_7777 B_7778 refl_6 __7779 => __7779,
  ∀ {A_7780 : L} ->
    ∀ {m_7781 : A_7780} ->
      ∀ {n_7782 : A_7780} ->
        ∀ {B_7783 : A_7780 -> U} ->
          {(eq_4‹L› A_7780 m_7781 n_7782)} ->
            ((B_7783) m_7781) -> ((B_7783) n_7782)
)
Program.infer_tm(function rwl_7787 :
                   ∀ {A_7788 : L} ->
                     ∀ {m_7789 : A_7788} ->
                       ∀ {n_7790 : A_7788} ->
                         ∀ {B_7791 : A_7788 -> U} ->
                           {(eq_4‹L› A_7788 m_7789 n_7790)} ->
                             ((B_7791) m_7789) -> ((B_7791) n_7790)
                 | A_7795 m_7796 n_7797 B_7798 refl_6 __7799 => __7799)
Logical.infer_tm(∀ {A_7801 : L} ->
                   ∀ {m_7802 : A_7801} ->
                     ∀ {n_7803 : A_7801} ->
                       ∀ {B_7804 : A_7801 -> U} ->
                         {(eq_4‹L› A_7801 m_7802 n_7803)} ->
                           ((B_7804) m_7802) -> ((B_7804) n_7803))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_7809 : A_7808} ->
                   ∀ {n_7810 : A_7808} ->
                     ∀ {B_7811 : A_7808 -> U} ->
                       {(eq_4‹L› A_7808 m_7809 n_7810)} ->
                         ((B_7811) m_7809) -> ((B_7811) n_7810))
Logical.infer_tm(A_7808)
Logical.infer_tm(∀ {n_7816 : A_7808} ->
                   ∀ {B_7817 : A_7808 -> U} ->
                     {(eq_4‹L› A_7808 m_7815 n_7816)} ->
                       ((B_7817) m_7815) -> ((B_7817) n_7816))
Logical.infer_tm(A_7808)
Logical.infer_tm(∀ {B_7822 : A_7808 -> U} ->
                   {(eq_4‹L› A_7808 m_7815 n_7821)} ->
                     ((B_7822) m_7815) -> ((B_7822) n_7821))
Logical.infer_tm(A_7808 -> U)
Logical.infer_tm(A_7808)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹L› A_7808 m_7815 n_7821)} ->
                   ((B_7826) m_7815) -> ((B_7826) n_7821))
Logical.infer_tm((eq_4‹L› A_7808 m_7815 n_7821))
Logical.check_tm( A_7808, L )
Logical.infer_tm(A_7808)
Logical.assert_equal(L, L)
Logical.check_tm( m_7815, A_7808 )
Logical.infer_tm(m_7815)
Logical.assert_equal(A_7808, A_7808)
Logical.check_tm( n_7821, A_7808 )
Logical.infer_tm(n_7821)
Logical.assert_equal(A_7808, A_7808)
Logical.infer_tm(((B_7826) m_7815) -> ((B_7826) n_7821))
Logical.infer_tm(((B_7826) m_7815))
Logical.infer_tm(B_7826)
Logical.check_tm( m_7815, A_7808 )
Logical.infer_tm(m_7815)
Logical.assert_equal(A_7808, A_7808)
Logical.infer_tm(((B_7826) n_7821))
Logical.infer_tm(B_7826)
Logical.check_tm( n_7821, A_7808 )
Logical.infer_tm(n_7821)
Logical.assert_equal(A_7808, A_7808)
trans12.Program.case_intro(A_7839, L)
Logical.infer_tm(L)
trans12.Program.case_intro(m_7847, #A_7839)
Logical.infer_tm(A_7839)
trans12.Program.case_intro(n_7855, #A_7839)
Logical.infer_tm(A_7839)
trans12.Program.case_intro(B_7863, #A_7839 -> U)
Logical.infer_tm(A_7839 -> U)
Logical.infer_tm(A_7839)
Logical.infer_tm(U)
trans12.Program.case_intro(__7875, (eq_4‹L› #A_7839 #m_7847 #n_7855))
Logical.infer_tm((eq_4‹L› A_7839 m_7847 n_7855))
Logical.check_tm( A_7839, L )
Logical.infer_tm(A_7839)
Logical.assert_equal(L, L)
Logical.check_tm( m_7847, A_7839 )
Logical.infer_tm(m_7847)
Logical.assert_equal(A_7839, A_7839)
Logical.check_tm( n_7855, A_7839 )
Logical.infer_tm(n_7855)
Logical.assert_equal(A_7839, A_7839)
trans12.Program.case_intro(__7884, ((#B_7863) #m_7847))
Logical.infer_tm(((B_7863) m_7847))
Logical.infer_tm(B_7863)
Logical.check_tm( m_7847, A_7839 )
Logical.infer_tm(m_7847)
Logical.assert_equal(A_7839, A_7839)
Logical.infer_tm((eq_4‹L› A_7839 m_7847 n_7855))
Logical.check_tm( A_7839, L )
Logical.infer_tm(A_7839)
Logical.assert_equal(L, L)
Logical.check_tm( m_7847, A_7839 )
Logical.infer_tm(m_7847)
Logical.assert_equal(A_7839, A_7839)
Logical.check_tm( n_7855, A_7839 )
Logical.infer_tm(n_7855)
Logical.assert_equal(A_7839, A_7839)
trans12.Program.case_split(eqL_9, reflL_13)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_7839 #m_7847 #n_7855),
      (eq_4‹L› #A_7839 #m_7847 #m_7847));
    {| eq_pat?(N #A_7839, A_7834 : L)
       eq_pat?(N #m_7847, m_7835 : #A_7839)
       eq_pat?(N #n_7855, n_7836 : #A_7839)
       eq_pat?(N #B_7863, B_7837 : #A_7839 -> U)
       eq_pat?(R #__7884, __7838 : ((#B_7863) #m_7847)) ::: [] =>? #__7838
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_7839, A_7834 : L)
  eq_pat?(N #m_7847, m_7835 : #A_7839)
  eq_pat?(N #n_7855, n_7836 : #A_7839)
  eq_pat?(N #B_7863, B_7837 : #A_7839 -> U)
  eq_pat?(R #__7884, __7838 : ((#B_7863) #m_7847))
)
unify_global(
  eq_term?( (eq_4‹L› #A_7839 #m_7847 #n_7855),
    (eq_4‹L› #A_7839 #m_7847 #m_7847))
)
simpl_pprbm ~expand:false( #A_7839, #A_7834)
simpl_pprbm ~expand:false( #m_7847, #m_7835)
simpl_pprbm ~expand:false( #n_7855, #n_7836)
simpl_pprbm ~expand:false( #B_7863, #B_7837)
simpl_pprbm ~expand:false( #__7884, #__7838)
simpl_pprbm ~expand:false( (eq_4‹L› #A_7839 #m_7847 #n_7855),
  (eq_4‹L› #A_7839 #m_7847 #m_7847))
simpl_pprbm ~expand:false( #A_7839, #A_7839)
simpl_pprbm ~expand:false( #m_7847, #m_7847)
simpl_pprbm ~expand:false( #n_7855, #m_7847)
case_coverage_ok( __7884, ((B_7863) n_7855))
Program.check_tm( __7884, ((B_7863) n_7855) )
Program.infer_tm(__7884)
Logical.assert_equal(((B_7863) n_7855), ((B_7863) n_7855))
trans12.Program.case_introed(((#B_7863) #m_7847))
trans12.Program.case_introed((eq_4‹L› #A_7839 #m_7847 #n_7855))
trans12.Program.case_introed(#A_7839 -> U)
trans12.Program.case_introed(#A_7839)
trans12.Program.case_introed(#A_7839)
trans12.Program.case_introed(L)
Logical.assert_equal(∀ {A_7921 : L} ->
                       ∀ {m_7922 : A_7921} ->
                         ∀ {n_7923 : A_7921} ->
                           ∀ {B_7924 : A_7921 -> U} ->
                             {(eq_4‹L› A_7921 m_7922 n_7923)} ->
                               ((B_7924) m_7922) -> ((B_7924) n_7923), 
∀ {A_7928 : L} ->
  ∀ {m_7929 : A_7928} ->
    ∀ {n_7930 : A_7928} ->
      ∀ {B_7931 : A_7928 -> U} ->
        {(eq_4‹L› A_7928 m_7929 n_7930)} ->
          ((B_7931) m_7929) -> ((B_7931) n_7930))
Logical.infer_tm(∀ {A_7942 : U} ->
                   ∀ {m_7943 : A_7942} ->
                     ∀ {n_7944 : A_7942} ->
                       ∀ {B_7945 : A_7942 -> L} ->
                         {(eq_4‹U› A_7942 m_7943 n_7944)} ->
                           ((B_7945) m_7943) -> ((B_7945) n_7944))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_7950 : A_7949} ->
                   ∀ {n_7951 : A_7949} ->
                     ∀ {B_7952 : A_7949 -> L} ->
                       {(eq_4‹U› A_7949 m_7950 n_7951)} ->
                         ((B_7952) m_7950) -> ((B_7952) n_7951))
Logical.infer_tm(A_7949)
Logical.infer_tm(∀ {n_7957 : A_7949} ->
                   ∀ {B_7958 : A_7949 -> L} ->
                     {(eq_4‹U› A_7949 m_7956 n_7957)} ->
                       ((B_7958) m_7956) -> ((B_7958) n_7957))
Logical.infer_tm(A_7949)
Logical.infer_tm(∀ {B_7963 : A_7949 -> L} ->
                   {(eq_4‹U› A_7949 m_7956 n_7962)} ->
                     ((B_7963) m_7956) -> ((B_7963) n_7962))
Logical.infer_tm(A_7949 -> L)
Logical.infer_tm(A_7949)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹U› A_7949 m_7956 n_7962)} ->
                   ((B_7967) m_7956) -> ((B_7967) n_7962))
Logical.infer_tm((eq_4‹U› A_7949 m_7956 n_7962))
Logical.check_tm( A_7949, U )
Logical.infer_tm(A_7949)
Logical.assert_equal(U, U)
Logical.check_tm( m_7956, A_7949 )
Logical.infer_tm(m_7956)
Logical.assert_equal(A_7949, A_7949)
Logical.check_tm( n_7962, A_7949 )
Logical.infer_tm(n_7962)
Logical.assert_equal(A_7949, A_7949)
Logical.infer_tm(((B_7967) m_7956) -> ((B_7967) n_7962))
Logical.infer_tm(((B_7967) m_7956))
Logical.infer_tm(B_7967)
Logical.check_tm( m_7956, A_7949 )
Logical.infer_tm(m_7956)
Logical.assert_equal(A_7949, A_7949)
Logical.infer_tm(((B_7967) n_7962))
Logical.infer_tm(B_7967)
Logical.check_tm( n_7962, A_7949 )
Logical.infer_tm(n_7962)
Logical.assert_equal(A_7949, A_7949)
Program.check_tm(
  function rwl_7975 :
    ∀ {A_7976 : U} ->
      ∀ {m_7977 : A_7976} ->
        ∀ {n_7978 : A_7976} ->
          ∀ {B_7979 : A_7976 -> L} ->
            {(eq_4‹U› A_7976 m_7977 n_7978)} ->
              ((B_7979) m_7977) -> ((B_7979) n_7978)
  | A_7983 m_7984 n_7985 B_7986 refl_6 __7987 => __7987,
  ∀ {A_7988 : U} ->
    ∀ {m_7989 : A_7988} ->
      ∀ {n_7990 : A_7988} ->
        ∀ {B_7991 : A_7988 -> L} ->
          {(eq_4‹U› A_7988 m_7989 n_7990)} ->
            ((B_7991) m_7989) -> ((B_7991) n_7990)
)
Program.infer_tm(function rwl_7995 :
                   ∀ {A_7996 : U} ->
                     ∀ {m_7997 : A_7996} ->
                       ∀ {n_7998 : A_7996} ->
                         ∀ {B_7999 : A_7996 -> L} ->
                           {(eq_4‹U› A_7996 m_7997 n_7998)} ->
                             ((B_7999) m_7997) -> ((B_7999) n_7998)
                 | A_8003 m_8004 n_8005 B_8006 refl_6 __8007 => __8007)
Logical.infer_tm(∀ {A_8009 : U} ->
                   ∀ {m_8010 : A_8009} ->
                     ∀ {n_8011 : A_8009} ->
                       ∀ {B_8012 : A_8009 -> L} ->
                         {(eq_4‹U› A_8009 m_8010 n_8011)} ->
                           ((B_8012) m_8010) -> ((B_8012) n_8011))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_8017 : A_8016} ->
                   ∀ {n_8018 : A_8016} ->
                     ∀ {B_8019 : A_8016 -> L} ->
                       {(eq_4‹U› A_8016 m_8017 n_8018)} ->
                         ((B_8019) m_8017) -> ((B_8019) n_8018))
Logical.infer_tm(A_8016)
Logical.infer_tm(∀ {n_8024 : A_8016} ->
                   ∀ {B_8025 : A_8016 -> L} ->
                     {(eq_4‹U› A_8016 m_8023 n_8024)} ->
                       ((B_8025) m_8023) -> ((B_8025) n_8024))
Logical.infer_tm(A_8016)
Logical.infer_tm(∀ {B_8030 : A_8016 -> L} ->
                   {(eq_4‹U› A_8016 m_8023 n_8029)} ->
                     ((B_8030) m_8023) -> ((B_8030) n_8029))
Logical.infer_tm(A_8016 -> L)
Logical.infer_tm(A_8016)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹U› A_8016 m_8023 n_8029)} ->
                   ((B_8034) m_8023) -> ((B_8034) n_8029))
Logical.infer_tm((eq_4‹U› A_8016 m_8023 n_8029))
Logical.check_tm( A_8016, U )
Logical.infer_tm(A_8016)
Logical.assert_equal(U, U)
Logical.check_tm( m_8023, A_8016 )
Logical.infer_tm(m_8023)
Logical.assert_equal(A_8016, A_8016)
Logical.check_tm( n_8029, A_8016 )
Logical.infer_tm(n_8029)
Logical.assert_equal(A_8016, A_8016)
Logical.infer_tm(((B_8034) m_8023) -> ((B_8034) n_8029))
Logical.infer_tm(((B_8034) m_8023))
Logical.infer_tm(B_8034)
Logical.check_tm( m_8023, A_8016 )
Logical.infer_tm(m_8023)
Logical.assert_equal(A_8016, A_8016)
Logical.infer_tm(((B_8034) n_8029))
Logical.infer_tm(B_8034)
Logical.check_tm( n_8029, A_8016 )
Logical.infer_tm(n_8029)
Logical.assert_equal(A_8016, A_8016)
trans12.Program.case_intro(A_8047, U)
Logical.infer_tm(U)
trans12.Program.case_intro(m_8055, #A_8047)
Logical.infer_tm(A_8047)
trans12.Program.case_intro(n_8063, #A_8047)
Logical.infer_tm(A_8047)
trans12.Program.case_intro(B_8071, #A_8047 -> L)
Logical.infer_tm(A_8047 -> L)
Logical.infer_tm(A_8047)
Logical.infer_tm(L)
trans12.Program.case_intro(__8083, (eq_4‹U› #A_8047 #m_8055 #n_8063))
Logical.infer_tm((eq_4‹U› A_8047 m_8055 n_8063))
Logical.check_tm( A_8047, U )
Logical.infer_tm(A_8047)
Logical.assert_equal(U, U)
Logical.check_tm( m_8055, A_8047 )
Logical.infer_tm(m_8055)
Logical.assert_equal(A_8047, A_8047)
Logical.check_tm( n_8063, A_8047 )
Logical.infer_tm(n_8063)
Logical.assert_equal(A_8047, A_8047)
trans12.Program.case_intro(__8092, ((#B_8071) #m_8055))
Logical.infer_tm(((B_8071) m_8055))
Logical.infer_tm(B_8071)
Logical.check_tm( m_8055, A_8047 )
Logical.infer_tm(m_8055)
Logical.assert_equal(A_8047, A_8047)
Logical.infer_tm((eq_4‹U› A_8047 m_8055 n_8063))
Logical.check_tm( A_8047, U )
Logical.infer_tm(A_8047)
Logical.assert_equal(U, U)
Logical.check_tm( m_8055, A_8047 )
Logical.infer_tm(m_8055)
Logical.assert_equal(A_8047, A_8047)
Logical.check_tm( n_8063, A_8047 )
Logical.infer_tm(n_8063)
Logical.assert_equal(A_8047, A_8047)
trans12.Program.case_split(eqU_10, reflU_14)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_8047 #m_8055 #n_8063),
      (eq_4‹U› #A_8047 #m_8055 #m_8055));
    {| eq_pat?(N #A_8047, A_8042 : U)
       eq_pat?(N #m_8055, m_8043 : #A_8047)
       eq_pat?(N #n_8063, n_8044 : #A_8047)
       eq_pat?(N #B_8071, B_8045 : #A_8047 -> L)
       eq_pat?(R #__8092, __8046 : ((#B_8071) #m_8055)) ::: [] =>? #__8046
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_8047, A_8042 : U)
  eq_pat?(N #m_8055, m_8043 : #A_8047)
  eq_pat?(N #n_8063, n_8044 : #A_8047)
  eq_pat?(N #B_8071, B_8045 : #A_8047 -> L)
  eq_pat?(R #__8092, __8046 : ((#B_8071) #m_8055))
)
unify_global(
  eq_term?( (eq_4‹U› #A_8047 #m_8055 #n_8063),
    (eq_4‹U› #A_8047 #m_8055 #m_8055))
)
simpl_pprbm ~expand:false( #A_8047, #A_8042)
simpl_pprbm ~expand:false( #m_8055, #m_8043)
simpl_pprbm ~expand:false( #n_8063, #n_8044)
simpl_pprbm ~expand:false( #B_8071, #B_8045)
simpl_pprbm ~expand:false( #__8092, #__8046)
simpl_pprbm ~expand:false( (eq_4‹U› #A_8047 #m_8055 #n_8063),
  (eq_4‹U› #A_8047 #m_8055 #m_8055))
simpl_pprbm ~expand:false( #A_8047, #A_8047)
simpl_pprbm ~expand:false( #m_8055, #m_8055)
simpl_pprbm ~expand:false( #n_8063, #m_8055)
case_coverage_ok( __8092, ((B_8071) n_8063))
Program.check_tm( __8092, ((B_8071) n_8063) )
Program.infer_tm(__8092)
Logical.assert_equal(((B_8071) n_8063), ((B_8071) n_8063))
trans12.Program.case_introed(((#B_8071) #m_8055))
trans12.Program.case_introed((eq_4‹U› #A_8047 #m_8055 #n_8063))
trans12.Program.case_introed(#A_8047 -> L)
trans12.Program.case_introed(#A_8047)
trans12.Program.case_introed(#A_8047)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_8129 : U} ->
                       ∀ {m_8130 : A_8129} ->
                         ∀ {n_8131 : A_8129} ->
                           ∀ {B_8132 : A_8129 -> L} ->
                             {(eq_4‹U› A_8129 m_8130 n_8131)} ->
                               ((B_8132) m_8130) -> ((B_8132) n_8131), 
∀ {A_8136 : U} ->
  ∀ {m_8137 : A_8136} ->
    ∀ {n_8138 : A_8136} ->
      ∀ {B_8139 : A_8136 -> L} ->
        {(eq_4‹U› A_8136 m_8137 n_8138)} ->
          ((B_8139) m_8137) -> ((B_8139) n_8138))
Logical.infer_tm(∀ {A_8150 : U} ->
                   ∀ {m_8151 : A_8150} ->
                     ∀ {n_8152 : A_8150} ->
                       ∀ {B_8153 : A_8150 -> U} ->
                         {(eq_4‹U› A_8150 m_8151 n_8152)} ->
                           ((B_8153) m_8151) -> ((B_8153) n_8152))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_8158 : A_8157} ->
                   ∀ {n_8159 : A_8157} ->
                     ∀ {B_8160 : A_8157 -> U} ->
                       {(eq_4‹U› A_8157 m_8158 n_8159)} ->
                         ((B_8160) m_8158) -> ((B_8160) n_8159))
Logical.infer_tm(A_8157)
Logical.infer_tm(∀ {n_8165 : A_8157} ->
                   ∀ {B_8166 : A_8157 -> U} ->
                     {(eq_4‹U› A_8157 m_8164 n_8165)} ->
                       ((B_8166) m_8164) -> ((B_8166) n_8165))
Logical.infer_tm(A_8157)
Logical.infer_tm(∀ {B_8171 : A_8157 -> U} ->
                   {(eq_4‹U› A_8157 m_8164 n_8170)} ->
                     ((B_8171) m_8164) -> ((B_8171) n_8170))
Logical.infer_tm(A_8157 -> U)
Logical.infer_tm(A_8157)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹U› A_8157 m_8164 n_8170)} ->
                   ((B_8175) m_8164) -> ((B_8175) n_8170))
Logical.infer_tm((eq_4‹U› A_8157 m_8164 n_8170))
Logical.check_tm( A_8157, U )
Logical.infer_tm(A_8157)
Logical.assert_equal(U, U)
Logical.check_tm( m_8164, A_8157 )
Logical.infer_tm(m_8164)
Logical.assert_equal(A_8157, A_8157)
Logical.check_tm( n_8170, A_8157 )
Logical.infer_tm(n_8170)
Logical.assert_equal(A_8157, A_8157)
Logical.infer_tm(((B_8175) m_8164) -> ((B_8175) n_8170))
Logical.infer_tm(((B_8175) m_8164))
Logical.infer_tm(B_8175)
Logical.check_tm( m_8164, A_8157 )
Logical.infer_tm(m_8164)
Logical.assert_equal(A_8157, A_8157)
Logical.infer_tm(((B_8175) n_8170))
Logical.infer_tm(B_8175)
Logical.check_tm( n_8170, A_8157 )
Logical.infer_tm(n_8170)
Logical.assert_equal(A_8157, A_8157)
Program.check_tm(
  function rwl_8183 :
    ∀ {A_8184 : U} ->
      ∀ {m_8185 : A_8184} ->
        ∀ {n_8186 : A_8184} ->
          ∀ {B_8187 : A_8184 -> U} ->
            {(eq_4‹U› A_8184 m_8185 n_8186)} ->
              ((B_8187) m_8185) -> ((B_8187) n_8186)
  | A_8191 m_8192 n_8193 B_8194 refl_6 __8195 => __8195,
  ∀ {A_8196 : U} ->
    ∀ {m_8197 : A_8196} ->
      ∀ {n_8198 : A_8196} ->
        ∀ {B_8199 : A_8196 -> U} ->
          {(eq_4‹U› A_8196 m_8197 n_8198)} ->
            ((B_8199) m_8197) -> ((B_8199) n_8198)
)
Program.infer_tm(function rwl_8203 :
                   ∀ {A_8204 : U} ->
                     ∀ {m_8205 : A_8204} ->
                       ∀ {n_8206 : A_8204} ->
                         ∀ {B_8207 : A_8204 -> U} ->
                           {(eq_4‹U› A_8204 m_8205 n_8206)} ->
                             ((B_8207) m_8205) -> ((B_8207) n_8206)
                 | A_8211 m_8212 n_8213 B_8214 refl_6 __8215 => __8215)
Logical.infer_tm(∀ {A_8217 : U} ->
                   ∀ {m_8218 : A_8217} ->
                     ∀ {n_8219 : A_8217} ->
                       ∀ {B_8220 : A_8217 -> U} ->
                         {(eq_4‹U› A_8217 m_8218 n_8219)} ->
                           ((B_8220) m_8218) -> ((B_8220) n_8219))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_8225 : A_8224} ->
                   ∀ {n_8226 : A_8224} ->
                     ∀ {B_8227 : A_8224 -> U} ->
                       {(eq_4‹U› A_8224 m_8225 n_8226)} ->
                         ((B_8227) m_8225) -> ((B_8227) n_8226))
Logical.infer_tm(A_8224)
Logical.infer_tm(∀ {n_8232 : A_8224} ->
                   ∀ {B_8233 : A_8224 -> U} ->
                     {(eq_4‹U› A_8224 m_8231 n_8232)} ->
                       ((B_8233) m_8231) -> ((B_8233) n_8232))
Logical.infer_tm(A_8224)
Logical.infer_tm(∀ {B_8238 : A_8224 -> U} ->
                   {(eq_4‹U› A_8224 m_8231 n_8237)} ->
                     ((B_8238) m_8231) -> ((B_8238) n_8237))
Logical.infer_tm(A_8224 -> U)
Logical.infer_tm(A_8224)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹U› A_8224 m_8231 n_8237)} ->
                   ((B_8242) m_8231) -> ((B_8242) n_8237))
Logical.infer_tm((eq_4‹U› A_8224 m_8231 n_8237))
Logical.check_tm( A_8224, U )
Logical.infer_tm(A_8224)
Logical.assert_equal(U, U)
Logical.check_tm( m_8231, A_8224 )
Logical.infer_tm(m_8231)
Logical.assert_equal(A_8224, A_8224)
Logical.check_tm( n_8237, A_8224 )
Logical.infer_tm(n_8237)
Logical.assert_equal(A_8224, A_8224)
Logical.infer_tm(((B_8242) m_8231) -> ((B_8242) n_8237))
Logical.infer_tm(((B_8242) m_8231))
Logical.infer_tm(B_8242)
Logical.check_tm( m_8231, A_8224 )
Logical.infer_tm(m_8231)
Logical.assert_equal(A_8224, A_8224)
Logical.infer_tm(((B_8242) n_8237))
Logical.infer_tm(B_8242)
Logical.check_tm( n_8237, A_8224 )
Logical.infer_tm(n_8237)
Logical.assert_equal(A_8224, A_8224)
trans12.Program.case_intro(A_8255, U)
Logical.infer_tm(U)
trans12.Program.case_intro(m_8263, #A_8255)
Logical.infer_tm(A_8255)
trans12.Program.case_intro(n_8271, #A_8255)
Logical.infer_tm(A_8255)
trans12.Program.case_intro(B_8279, #A_8255 -> U)
Logical.infer_tm(A_8255 -> U)
Logical.infer_tm(A_8255)
Logical.infer_tm(U)
trans12.Program.case_intro(__8291, (eq_4‹U› #A_8255 #m_8263 #n_8271))
Logical.infer_tm((eq_4‹U› A_8255 m_8263 n_8271))
Logical.check_tm( A_8255, U )
Logical.infer_tm(A_8255)
Logical.assert_equal(U, U)
Logical.check_tm( m_8263, A_8255 )
Logical.infer_tm(m_8263)
Logical.assert_equal(A_8255, A_8255)
Logical.check_tm( n_8271, A_8255 )
Logical.infer_tm(n_8271)
Logical.assert_equal(A_8255, A_8255)
trans12.Program.case_intro(__8300, ((#B_8279) #m_8263))
Logical.infer_tm(((B_8279) m_8263))
Logical.infer_tm(B_8279)
Logical.check_tm( m_8263, A_8255 )
Logical.infer_tm(m_8263)
Logical.assert_equal(A_8255, A_8255)
Logical.infer_tm((eq_4‹U› A_8255 m_8263 n_8271))
Logical.check_tm( A_8255, U )
Logical.infer_tm(A_8255)
Logical.assert_equal(U, U)
Logical.check_tm( m_8263, A_8255 )
Logical.infer_tm(m_8263)
Logical.assert_equal(A_8255, A_8255)
Logical.check_tm( n_8271, A_8255 )
Logical.infer_tm(n_8271)
Logical.assert_equal(A_8255, A_8255)
trans12.Program.case_split(eqU_10, reflU_14)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_8255 #m_8263 #n_8271),
      (eq_4‹U› #A_8255 #m_8263 #m_8263));
    {| eq_pat?(N #A_8255, A_8250 : U)
       eq_pat?(N #m_8263, m_8251 : #A_8255)
       eq_pat?(N #n_8271, n_8252 : #A_8255)
       eq_pat?(N #B_8279, B_8253 : #A_8255 -> U)
       eq_pat?(R #__8300, __8254 : ((#B_8279) #m_8263)) ::: [] =>? #__8254
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_8255, A_8250 : U)
  eq_pat?(N #m_8263, m_8251 : #A_8255)
  eq_pat?(N #n_8271, n_8252 : #A_8255)
  eq_pat?(N #B_8279, B_8253 : #A_8255 -> U)
  eq_pat?(R #__8300, __8254 : ((#B_8279) #m_8263))
)
unify_global(
  eq_term?( (eq_4‹U› #A_8255 #m_8263 #n_8271),
    (eq_4‹U› #A_8255 #m_8263 #m_8263))
)
simpl_pprbm ~expand:false( #A_8255, #A_8250)
simpl_pprbm ~expand:false( #m_8263, #m_8251)
simpl_pprbm ~expand:false( #n_8271, #n_8252)
simpl_pprbm ~expand:false( #B_8279, #B_8253)
simpl_pprbm ~expand:false( #__8300, #__8254)
simpl_pprbm ~expand:false( (eq_4‹U› #A_8255 #m_8263 #n_8271),
  (eq_4‹U› #A_8255 #m_8263 #m_8263))
simpl_pprbm ~expand:false( #A_8255, #A_8255)
simpl_pprbm ~expand:false( #m_8263, #m_8263)
simpl_pprbm ~expand:false( #n_8271, #m_8263)
case_coverage_ok( __8300, ((B_8279) n_8271))
Program.check_tm( __8300, ((B_8279) n_8271) )
Program.infer_tm(__8300)
Logical.assert_equal(((B_8279) n_8271), ((B_8279) n_8271))
trans12.Program.case_introed(((#B_8279) #m_8263))
trans12.Program.case_introed((eq_4‹U› #A_8255 #m_8263 #n_8271))
trans12.Program.case_introed(#A_8255 -> U)
trans12.Program.case_introed(#A_8255)
trans12.Program.case_introed(#A_8255)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_8337 : U} ->
                       ∀ {m_8338 : A_8337} ->
                         ∀ {n_8339 : A_8337} ->
                           ∀ {B_8340 : A_8337 -> U} ->
                             {(eq_4‹U› A_8337 m_8338 n_8339)} ->
                               ((B_8340) m_8338) -> ((B_8340) n_8339), 
∀ {A_8344 : U} ->
  ∀ {m_8345 : A_8344} ->
    ∀ {n_8346 : A_8344} ->
      ∀ {B_8347 : A_8344 -> U} ->
        {(eq_4‹U› A_8344 m_8345 n_8346)} ->
          ((B_8347) m_8345) -> ((B_8347) n_8346))
Logical.infer_tm(∀ {A_8358 : L} ->
                   ∀ {m_8359 : A_8358} ->
                     ∀ {n_8360 : A_8358} ->
                       ∀ {B_8361 : A_8358 -> L} ->
                         {(eq_4‹L› A_8358 m_8359 n_8360)} ->
                           ((B_8361) n_8360) -> ((B_8361) m_8359))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_8366 : A_8365} ->
                   ∀ {n_8367 : A_8365} ->
                     ∀ {B_8368 : A_8365 -> L} ->
                       {(eq_4‹L› A_8365 m_8366 n_8367)} ->
                         ((B_8368) n_8367) -> ((B_8368) m_8366))
Logical.infer_tm(A_8365)
Logical.infer_tm(∀ {n_8373 : A_8365} ->
                   ∀ {B_8374 : A_8365 -> L} ->
                     {(eq_4‹L› A_8365 m_8372 n_8373)} ->
                       ((B_8374) n_8373) -> ((B_8374) m_8372))
Logical.infer_tm(A_8365)
Logical.infer_tm(∀ {B_8379 : A_8365 -> L} ->
                   {(eq_4‹L› A_8365 m_8372 n_8378)} ->
                     ((B_8379) n_8378) -> ((B_8379) m_8372))
Logical.infer_tm(A_8365 -> L)
Logical.infer_tm(A_8365)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹L› A_8365 m_8372 n_8378)} ->
                   ((B_8383) n_8378) -> ((B_8383) m_8372))
Logical.infer_tm((eq_4‹L› A_8365 m_8372 n_8378))
Logical.check_tm( A_8365, L )
Logical.infer_tm(A_8365)
Logical.assert_equal(L, L)
Logical.check_tm( m_8372, A_8365 )
Logical.infer_tm(m_8372)
Logical.assert_equal(A_8365, A_8365)
Logical.check_tm( n_8378, A_8365 )
Logical.infer_tm(n_8378)
Logical.assert_equal(A_8365, A_8365)
Logical.infer_tm(((B_8383) n_8378) -> ((B_8383) m_8372))
Logical.infer_tm(((B_8383) n_8378))
Logical.infer_tm(B_8383)
Logical.check_tm( n_8378, A_8365 )
Logical.infer_tm(n_8378)
Logical.assert_equal(A_8365, A_8365)
Logical.infer_tm(((B_8383) m_8372))
Logical.infer_tm(B_8383)
Logical.check_tm( m_8372, A_8365 )
Logical.infer_tm(m_8372)
Logical.assert_equal(A_8365, A_8365)
Program.check_tm(
  function rwr_8391 :
    ∀ {A_8392 : L} ->
      ∀ {m_8393 : A_8392} ->
        ∀ {n_8394 : A_8392} ->
          ∀ {B_8395 : A_8392 -> L} ->
            {(eq_4‹L› A_8392 m_8393 n_8394)} ->
              ((B_8395) n_8394) -> ((B_8395) m_8393)
  | A_8399 m_8400 n_8401 B_8402 refl_6 __8403 => __8403,
  ∀ {A_8404 : L} ->
    ∀ {m_8405 : A_8404} ->
      ∀ {n_8406 : A_8404} ->
        ∀ {B_8407 : A_8404 -> L} ->
          {(eq_4‹L› A_8404 m_8405 n_8406)} ->
            ((B_8407) n_8406) -> ((B_8407) m_8405)
)
Program.infer_tm(function rwr_8411 :
                   ∀ {A_8412 : L} ->
                     ∀ {m_8413 : A_8412} ->
                       ∀ {n_8414 : A_8412} ->
                         ∀ {B_8415 : A_8412 -> L} ->
                           {(eq_4‹L› A_8412 m_8413 n_8414)} ->
                             ((B_8415) n_8414) -> ((B_8415) m_8413)
                 | A_8419 m_8420 n_8421 B_8422 refl_6 __8423 => __8423)
Logical.infer_tm(∀ {A_8425 : L} ->
                   ∀ {m_8426 : A_8425} ->
                     ∀ {n_8427 : A_8425} ->
                       ∀ {B_8428 : A_8425 -> L} ->
                         {(eq_4‹L› A_8425 m_8426 n_8427)} ->
                           ((B_8428) n_8427) -> ((B_8428) m_8426))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_8433 : A_8432} ->
                   ∀ {n_8434 : A_8432} ->
                     ∀ {B_8435 : A_8432 -> L} ->
                       {(eq_4‹L› A_8432 m_8433 n_8434)} ->
                         ((B_8435) n_8434) -> ((B_8435) m_8433))
Logical.infer_tm(A_8432)
Logical.infer_tm(∀ {n_8440 : A_8432} ->
                   ∀ {B_8441 : A_8432 -> L} ->
                     {(eq_4‹L› A_8432 m_8439 n_8440)} ->
                       ((B_8441) n_8440) -> ((B_8441) m_8439))
Logical.infer_tm(A_8432)
Logical.infer_tm(∀ {B_8446 : A_8432 -> L} ->
                   {(eq_4‹L› A_8432 m_8439 n_8445)} ->
                     ((B_8446) n_8445) -> ((B_8446) m_8439))
Logical.infer_tm(A_8432 -> L)
Logical.infer_tm(A_8432)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹L› A_8432 m_8439 n_8445)} ->
                   ((B_8450) n_8445) -> ((B_8450) m_8439))
Logical.infer_tm((eq_4‹L› A_8432 m_8439 n_8445))
Logical.check_tm( A_8432, L )
Logical.infer_tm(A_8432)
Logical.assert_equal(L, L)
Logical.check_tm( m_8439, A_8432 )
Logical.infer_tm(m_8439)
Logical.assert_equal(A_8432, A_8432)
Logical.check_tm( n_8445, A_8432 )
Logical.infer_tm(n_8445)
Logical.assert_equal(A_8432, A_8432)
Logical.infer_tm(((B_8450) n_8445) -> ((B_8450) m_8439))
Logical.infer_tm(((B_8450) n_8445))
Logical.infer_tm(B_8450)
Logical.check_tm( n_8445, A_8432 )
Logical.infer_tm(n_8445)
Logical.assert_equal(A_8432, A_8432)
Logical.infer_tm(((B_8450) m_8439))
Logical.infer_tm(B_8450)
Logical.check_tm( m_8439, A_8432 )
Logical.infer_tm(m_8439)
Logical.assert_equal(A_8432, A_8432)
trans12.Program.case_intro(A_8463, L)
Logical.infer_tm(L)
trans12.Program.case_intro(m_8471, #A_8463)
Logical.infer_tm(A_8463)
trans12.Program.case_intro(n_8479, #A_8463)
Logical.infer_tm(A_8463)
trans12.Program.case_intro(B_8487, #A_8463 -> L)
Logical.infer_tm(A_8463 -> L)
Logical.infer_tm(A_8463)
Logical.infer_tm(L)
trans12.Program.case_intro(__8499, (eq_4‹L› #A_8463 #m_8471 #n_8479))
Logical.infer_tm((eq_4‹L› A_8463 m_8471 n_8479))
Logical.check_tm( A_8463, L )
Logical.infer_tm(A_8463)
Logical.assert_equal(L, L)
Logical.check_tm( m_8471, A_8463 )
Logical.infer_tm(m_8471)
Logical.assert_equal(A_8463, A_8463)
Logical.check_tm( n_8479, A_8463 )
Logical.infer_tm(n_8479)
Logical.assert_equal(A_8463, A_8463)
trans12.Program.case_intro(__8508, ((#B_8487) #n_8479))
Logical.infer_tm(((B_8487) n_8479))
Logical.infer_tm(B_8487)
Logical.check_tm( n_8479, A_8463 )
Logical.infer_tm(n_8479)
Logical.assert_equal(A_8463, A_8463)
Logical.infer_tm((eq_4‹L› A_8463 m_8471 n_8479))
Logical.check_tm( A_8463, L )
Logical.infer_tm(A_8463)
Logical.assert_equal(L, L)
Logical.check_tm( m_8471, A_8463 )
Logical.infer_tm(m_8471)
Logical.assert_equal(A_8463, A_8463)
Logical.check_tm( n_8479, A_8463 )
Logical.infer_tm(n_8479)
Logical.assert_equal(A_8463, A_8463)
trans12.Program.case_split(eqL_9, reflL_13)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_8463 #m_8471 #n_8479),
      (eq_4‹L› #A_8463 #m_8471 #m_8471));
    {| eq_pat?(N #A_8463, A_8458 : L)
       eq_pat?(N #m_8471, m_8459 : #A_8463)
       eq_pat?(N #n_8479, n_8460 : #A_8463)
       eq_pat?(N #B_8487, B_8461 : #A_8463 -> L)
       eq_pat?(R #__8508, __8462 : ((#B_8487) #n_8479)) ::: [] =>? #__8462
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_8463, A_8458 : L)
  eq_pat?(N #m_8471, m_8459 : #A_8463)
  eq_pat?(N #n_8479, n_8460 : #A_8463)
  eq_pat?(N #B_8487, B_8461 : #A_8463 -> L)
  eq_pat?(R #__8508, __8462 : ((#B_8487) #n_8479))
)
unify_global(
  eq_term?( (eq_4‹L› #A_8463 #m_8471 #n_8479),
    (eq_4‹L› #A_8463 #m_8471 #m_8471))
)
simpl_pprbm ~expand:false( #A_8463, #A_8458)
simpl_pprbm ~expand:false( #m_8471, #m_8459)
simpl_pprbm ~expand:false( #n_8479, #n_8460)
simpl_pprbm ~expand:false( #B_8487, #B_8461)
simpl_pprbm ~expand:false( #__8508, #__8462)
simpl_pprbm ~expand:false( (eq_4‹L› #A_8463 #m_8471 #n_8479),
  (eq_4‹L› #A_8463 #m_8471 #m_8471))
simpl_pprbm ~expand:false( #A_8463, #A_8463)
simpl_pprbm ~expand:false( #m_8471, #m_8471)
simpl_pprbm ~expand:false( #n_8479, #m_8471)
case_coverage_ok( __8508, ((B_8487) n_8479))
Program.check_tm( __8508, ((B_8487) n_8479) )
Program.infer_tm(__8508)
Logical.assert_equal(((B_8487) n_8479), ((B_8487) n_8479))
trans12.Program.case_introed(((#B_8487) #n_8479))
trans12.Program.case_introed((eq_4‹L› #A_8463 #m_8471 #n_8479))
trans12.Program.case_introed(#A_8463 -> L)
trans12.Program.case_introed(#A_8463)
trans12.Program.case_introed(#A_8463)
trans12.Program.case_introed(L)
Logical.assert_equal(∀ {A_8545 : L} ->
                       ∀ {m_8546 : A_8545} ->
                         ∀ {n_8547 : A_8545} ->
                           ∀ {B_8548 : A_8545 -> L} ->
                             {(eq_4‹L› A_8545 m_8546 n_8547)} ->
                               ((B_8548) n_8547) -> ((B_8548) m_8546), 
∀ {A_8552 : L} ->
  ∀ {m_8553 : A_8552} ->
    ∀ {n_8554 : A_8552} ->
      ∀ {B_8555 : A_8552 -> L} ->
        {(eq_4‹L› A_8552 m_8553 n_8554)} ->
          ((B_8555) n_8554) -> ((B_8555) m_8553))
Logical.infer_tm(∀ {A_8566 : L} ->
                   ∀ {m_8567 : A_8566} ->
                     ∀ {n_8568 : A_8566} ->
                       ∀ {B_8569 : A_8566 -> U} ->
                         {(eq_4‹L› A_8566 m_8567 n_8568)} ->
                           ((B_8569) n_8568) -> ((B_8569) m_8567))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_8574 : A_8573} ->
                   ∀ {n_8575 : A_8573} ->
                     ∀ {B_8576 : A_8573 -> U} ->
                       {(eq_4‹L› A_8573 m_8574 n_8575)} ->
                         ((B_8576) n_8575) -> ((B_8576) m_8574))
Logical.infer_tm(A_8573)
Logical.infer_tm(∀ {n_8581 : A_8573} ->
                   ∀ {B_8582 : A_8573 -> U} ->
                     {(eq_4‹L› A_8573 m_8580 n_8581)} ->
                       ((B_8582) n_8581) -> ((B_8582) m_8580))
Logical.infer_tm(A_8573)
Logical.infer_tm(∀ {B_8587 : A_8573 -> U} ->
                   {(eq_4‹L› A_8573 m_8580 n_8586)} ->
                     ((B_8587) n_8586) -> ((B_8587) m_8580))
Logical.infer_tm(A_8573 -> U)
Logical.infer_tm(A_8573)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹L› A_8573 m_8580 n_8586)} ->
                   ((B_8591) n_8586) -> ((B_8591) m_8580))
Logical.infer_tm((eq_4‹L› A_8573 m_8580 n_8586))
Logical.check_tm( A_8573, L )
Logical.infer_tm(A_8573)
Logical.assert_equal(L, L)
Logical.check_tm( m_8580, A_8573 )
Logical.infer_tm(m_8580)
Logical.assert_equal(A_8573, A_8573)
Logical.check_tm( n_8586, A_8573 )
Logical.infer_tm(n_8586)
Logical.assert_equal(A_8573, A_8573)
Logical.infer_tm(((B_8591) n_8586) -> ((B_8591) m_8580))
Logical.infer_tm(((B_8591) n_8586))
Logical.infer_tm(B_8591)
Logical.check_tm( n_8586, A_8573 )
Logical.infer_tm(n_8586)
Logical.assert_equal(A_8573, A_8573)
Logical.infer_tm(((B_8591) m_8580))
Logical.infer_tm(B_8591)
Logical.check_tm( m_8580, A_8573 )
Logical.infer_tm(m_8580)
Logical.assert_equal(A_8573, A_8573)
Program.check_tm(
  function rwr_8599 :
    ∀ {A_8600 : L} ->
      ∀ {m_8601 : A_8600} ->
        ∀ {n_8602 : A_8600} ->
          ∀ {B_8603 : A_8600 -> U} ->
            {(eq_4‹L› A_8600 m_8601 n_8602)} ->
              ((B_8603) n_8602) -> ((B_8603) m_8601)
  | A_8607 m_8608 n_8609 B_8610 refl_6 __8611 => __8611,
  ∀ {A_8612 : L} ->
    ∀ {m_8613 : A_8612} ->
      ∀ {n_8614 : A_8612} ->
        ∀ {B_8615 : A_8612 -> U} ->
          {(eq_4‹L› A_8612 m_8613 n_8614)} ->
            ((B_8615) n_8614) -> ((B_8615) m_8613)
)
Program.infer_tm(function rwr_8619 :
                   ∀ {A_8620 : L} ->
                     ∀ {m_8621 : A_8620} ->
                       ∀ {n_8622 : A_8620} ->
                         ∀ {B_8623 : A_8620 -> U} ->
                           {(eq_4‹L› A_8620 m_8621 n_8622)} ->
                             ((B_8623) n_8622) -> ((B_8623) m_8621)
                 | A_8627 m_8628 n_8629 B_8630 refl_6 __8631 => __8631)
Logical.infer_tm(∀ {A_8633 : L} ->
                   ∀ {m_8634 : A_8633} ->
                     ∀ {n_8635 : A_8633} ->
                       ∀ {B_8636 : A_8633 -> U} ->
                         {(eq_4‹L› A_8633 m_8634 n_8635)} ->
                           ((B_8636) n_8635) -> ((B_8636) m_8634))
Logical.infer_tm(L)
Logical.infer_tm(∀ {m_8641 : A_8640} ->
                   ∀ {n_8642 : A_8640} ->
                     ∀ {B_8643 : A_8640 -> U} ->
                       {(eq_4‹L› A_8640 m_8641 n_8642)} ->
                         ((B_8643) n_8642) -> ((B_8643) m_8641))
Logical.infer_tm(A_8640)
Logical.infer_tm(∀ {n_8648 : A_8640} ->
                   ∀ {B_8649 : A_8640 -> U} ->
                     {(eq_4‹L› A_8640 m_8647 n_8648)} ->
                       ((B_8649) n_8648) -> ((B_8649) m_8647))
Logical.infer_tm(A_8640)
Logical.infer_tm(∀ {B_8654 : A_8640 -> U} ->
                   {(eq_4‹L› A_8640 m_8647 n_8653)} ->
                     ((B_8654) n_8653) -> ((B_8654) m_8647))
Logical.infer_tm(A_8640 -> U)
Logical.infer_tm(A_8640)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹L› A_8640 m_8647 n_8653)} ->
                   ((B_8658) n_8653) -> ((B_8658) m_8647))
Logical.infer_tm((eq_4‹L› A_8640 m_8647 n_8653))
Logical.check_tm( A_8640, L )
Logical.infer_tm(A_8640)
Logical.assert_equal(L, L)
Logical.check_tm( m_8647, A_8640 )
Logical.infer_tm(m_8647)
Logical.assert_equal(A_8640, A_8640)
Logical.check_tm( n_8653, A_8640 )
Logical.infer_tm(n_8653)
Logical.assert_equal(A_8640, A_8640)
Logical.infer_tm(((B_8658) n_8653) -> ((B_8658) m_8647))
Logical.infer_tm(((B_8658) n_8653))
Logical.infer_tm(B_8658)
Logical.check_tm( n_8653, A_8640 )
Logical.infer_tm(n_8653)
Logical.assert_equal(A_8640, A_8640)
Logical.infer_tm(((B_8658) m_8647))
Logical.infer_tm(B_8658)
Logical.check_tm( m_8647, A_8640 )
Logical.infer_tm(m_8647)
Logical.assert_equal(A_8640, A_8640)
trans12.Program.case_intro(A_8671, L)
Logical.infer_tm(L)
trans12.Program.case_intro(m_8679, #A_8671)
Logical.infer_tm(A_8671)
trans12.Program.case_intro(n_8687, #A_8671)
Logical.infer_tm(A_8671)
trans12.Program.case_intro(B_8695, #A_8671 -> U)
Logical.infer_tm(A_8671 -> U)
Logical.infer_tm(A_8671)
Logical.infer_tm(U)
trans12.Program.case_intro(__8707, (eq_4‹L› #A_8671 #m_8679 #n_8687))
Logical.infer_tm((eq_4‹L› A_8671 m_8679 n_8687))
Logical.check_tm( A_8671, L )
Logical.infer_tm(A_8671)
Logical.assert_equal(L, L)
Logical.check_tm( m_8679, A_8671 )
Logical.infer_tm(m_8679)
Logical.assert_equal(A_8671, A_8671)
Logical.check_tm( n_8687, A_8671 )
Logical.infer_tm(n_8687)
Logical.assert_equal(A_8671, A_8671)
trans12.Program.case_intro(__8716, ((#B_8695) #n_8687))
Logical.infer_tm(((B_8695) n_8687))
Logical.infer_tm(B_8695)
Logical.check_tm( n_8687, A_8671 )
Logical.infer_tm(n_8687)
Logical.assert_equal(A_8671, A_8671)
Logical.infer_tm((eq_4‹L› A_8671 m_8679 n_8687))
Logical.check_tm( A_8671, L )
Logical.infer_tm(A_8671)
Logical.assert_equal(L, L)
Logical.check_tm( m_8679, A_8671 )
Logical.infer_tm(m_8679)
Logical.assert_equal(A_8671, A_8671)
Logical.check_tm( n_8687, A_8671 )
Logical.infer_tm(n_8687)
Logical.assert_equal(A_8671, A_8671)
trans12.Program.case_split(eqL_9, reflL_13)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_8671 #m_8679 #n_8687),
      (eq_4‹L› #A_8671 #m_8679 #m_8679));
    {| eq_pat?(N #A_8671, A_8666 : L)
       eq_pat?(N #m_8679, m_8667 : #A_8671)
       eq_pat?(N #n_8687, n_8668 : #A_8671)
       eq_pat?(N #B_8695, B_8669 : #A_8671 -> U)
       eq_pat?(R #__8716, __8670 : ((#B_8695) #n_8687)) ::: [] =>? #__8670
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_8671, A_8666 : L)
  eq_pat?(N #m_8679, m_8667 : #A_8671)
  eq_pat?(N #n_8687, n_8668 : #A_8671)
  eq_pat?(N #B_8695, B_8669 : #A_8671 -> U)
  eq_pat?(R #__8716, __8670 : ((#B_8695) #n_8687))
)
unify_global(
  eq_term?( (eq_4‹L› #A_8671 #m_8679 #n_8687),
    (eq_4‹L› #A_8671 #m_8679 #m_8679))
)
simpl_pprbm ~expand:false( #A_8671, #A_8666)
simpl_pprbm ~expand:false( #m_8679, #m_8667)
simpl_pprbm ~expand:false( #n_8687, #n_8668)
simpl_pprbm ~expand:false( #B_8695, #B_8669)
simpl_pprbm ~expand:false( #__8716, #__8670)
simpl_pprbm ~expand:false( (eq_4‹L› #A_8671 #m_8679 #n_8687),
  (eq_4‹L› #A_8671 #m_8679 #m_8679))
simpl_pprbm ~expand:false( #A_8671, #A_8671)
simpl_pprbm ~expand:false( #m_8679, #m_8679)
simpl_pprbm ~expand:false( #n_8687, #m_8679)
case_coverage_ok( __8716, ((B_8695) n_8687))
Program.check_tm( __8716, ((B_8695) n_8687) )
Program.infer_tm(__8716)
Logical.assert_equal(((B_8695) n_8687), ((B_8695) n_8687))
trans12.Program.case_introed(((#B_8695) #n_8687))
trans12.Program.case_introed((eq_4‹L› #A_8671 #m_8679 #n_8687))
trans12.Program.case_introed(#A_8671 -> U)
trans12.Program.case_introed(#A_8671)
trans12.Program.case_introed(#A_8671)
trans12.Program.case_introed(L)
Logical.assert_equal(∀ {A_8753 : L} ->
                       ∀ {m_8754 : A_8753} ->
                         ∀ {n_8755 : A_8753} ->
                           ∀ {B_8756 : A_8753 -> U} ->
                             {(eq_4‹L› A_8753 m_8754 n_8755)} ->
                               ((B_8756) n_8755) -> ((B_8756) m_8754), 
∀ {A_8760 : L} ->
  ∀ {m_8761 : A_8760} ->
    ∀ {n_8762 : A_8760} ->
      ∀ {B_8763 : A_8760 -> U} ->
        {(eq_4‹L› A_8760 m_8761 n_8762)} ->
          ((B_8763) n_8762) -> ((B_8763) m_8761))
Logical.infer_tm(∀ {A_8774 : U} ->
                   ∀ {m_8775 : A_8774} ->
                     ∀ {n_8776 : A_8774} ->
                       ∀ {B_8777 : A_8774 -> L} ->
                         {(eq_4‹U› A_8774 m_8775 n_8776)} ->
                           ((B_8777) n_8776) -> ((B_8777) m_8775))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_8782 : A_8781} ->
                   ∀ {n_8783 : A_8781} ->
                     ∀ {B_8784 : A_8781 -> L} ->
                       {(eq_4‹U› A_8781 m_8782 n_8783)} ->
                         ((B_8784) n_8783) -> ((B_8784) m_8782))
Logical.infer_tm(A_8781)
Logical.infer_tm(∀ {n_8789 : A_8781} ->
                   ∀ {B_8790 : A_8781 -> L} ->
                     {(eq_4‹U› A_8781 m_8788 n_8789)} ->
                       ((B_8790) n_8789) -> ((B_8790) m_8788))
Logical.infer_tm(A_8781)
Logical.infer_tm(∀ {B_8795 : A_8781 -> L} ->
                   {(eq_4‹U› A_8781 m_8788 n_8794)} ->
                     ((B_8795) n_8794) -> ((B_8795) m_8788))
Logical.infer_tm(A_8781 -> L)
Logical.infer_tm(A_8781)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹U› A_8781 m_8788 n_8794)} ->
                   ((B_8799) n_8794) -> ((B_8799) m_8788))
Logical.infer_tm((eq_4‹U› A_8781 m_8788 n_8794))
Logical.check_tm( A_8781, U )
Logical.infer_tm(A_8781)
Logical.assert_equal(U, U)
Logical.check_tm( m_8788, A_8781 )
Logical.infer_tm(m_8788)
Logical.assert_equal(A_8781, A_8781)
Logical.check_tm( n_8794, A_8781 )
Logical.infer_tm(n_8794)
Logical.assert_equal(A_8781, A_8781)
Logical.infer_tm(((B_8799) n_8794) -> ((B_8799) m_8788))
Logical.infer_tm(((B_8799) n_8794))
Logical.infer_tm(B_8799)
Logical.check_tm( n_8794, A_8781 )
Logical.infer_tm(n_8794)
Logical.assert_equal(A_8781, A_8781)
Logical.infer_tm(((B_8799) m_8788))
Logical.infer_tm(B_8799)
Logical.check_tm( m_8788, A_8781 )
Logical.infer_tm(m_8788)
Logical.assert_equal(A_8781, A_8781)
Program.check_tm(
  function rwr_8807 :
    ∀ {A_8808 : U} ->
      ∀ {m_8809 : A_8808} ->
        ∀ {n_8810 : A_8808} ->
          ∀ {B_8811 : A_8808 -> L} ->
            {(eq_4‹U› A_8808 m_8809 n_8810)} ->
              ((B_8811) n_8810) -> ((B_8811) m_8809)
  | A_8815 m_8816 n_8817 B_8818 refl_6 __8819 => __8819,
  ∀ {A_8820 : U} ->
    ∀ {m_8821 : A_8820} ->
      ∀ {n_8822 : A_8820} ->
        ∀ {B_8823 : A_8820 -> L} ->
          {(eq_4‹U› A_8820 m_8821 n_8822)} ->
            ((B_8823) n_8822) -> ((B_8823) m_8821)
)
Program.infer_tm(function rwr_8827 :
                   ∀ {A_8828 : U} ->
                     ∀ {m_8829 : A_8828} ->
                       ∀ {n_8830 : A_8828} ->
                         ∀ {B_8831 : A_8828 -> L} ->
                           {(eq_4‹U› A_8828 m_8829 n_8830)} ->
                             ((B_8831) n_8830) -> ((B_8831) m_8829)
                 | A_8835 m_8836 n_8837 B_8838 refl_6 __8839 => __8839)
Logical.infer_tm(∀ {A_8841 : U} ->
                   ∀ {m_8842 : A_8841} ->
                     ∀ {n_8843 : A_8841} ->
                       ∀ {B_8844 : A_8841 -> L} ->
                         {(eq_4‹U› A_8841 m_8842 n_8843)} ->
                           ((B_8844) n_8843) -> ((B_8844) m_8842))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_8849 : A_8848} ->
                   ∀ {n_8850 : A_8848} ->
                     ∀ {B_8851 : A_8848 -> L} ->
                       {(eq_4‹U› A_8848 m_8849 n_8850)} ->
                         ((B_8851) n_8850) -> ((B_8851) m_8849))
Logical.infer_tm(A_8848)
Logical.infer_tm(∀ {n_8856 : A_8848} ->
                   ∀ {B_8857 : A_8848 -> L} ->
                     {(eq_4‹U› A_8848 m_8855 n_8856)} ->
                       ((B_8857) n_8856) -> ((B_8857) m_8855))
Logical.infer_tm(A_8848)
Logical.infer_tm(∀ {B_8862 : A_8848 -> L} ->
                   {(eq_4‹U› A_8848 m_8855 n_8861)} ->
                     ((B_8862) n_8861) -> ((B_8862) m_8855))
Logical.infer_tm(A_8848 -> L)
Logical.infer_tm(A_8848)
Logical.infer_tm(L)
Logical.infer_tm({(eq_4‹U› A_8848 m_8855 n_8861)} ->
                   ((B_8866) n_8861) -> ((B_8866) m_8855))
Logical.infer_tm((eq_4‹U› A_8848 m_8855 n_8861))
Logical.check_tm( A_8848, U )
Logical.infer_tm(A_8848)
Logical.assert_equal(U, U)
Logical.check_tm( m_8855, A_8848 )
Logical.infer_tm(m_8855)
Logical.assert_equal(A_8848, A_8848)
Logical.check_tm( n_8861, A_8848 )
Logical.infer_tm(n_8861)
Logical.assert_equal(A_8848, A_8848)
Logical.infer_tm(((B_8866) n_8861) -> ((B_8866) m_8855))
Logical.infer_tm(((B_8866) n_8861))
Logical.infer_tm(B_8866)
Logical.check_tm( n_8861, A_8848 )
Logical.infer_tm(n_8861)
Logical.assert_equal(A_8848, A_8848)
Logical.infer_tm(((B_8866) m_8855))
Logical.infer_tm(B_8866)
Logical.check_tm( m_8855, A_8848 )
Logical.infer_tm(m_8855)
Logical.assert_equal(A_8848, A_8848)
trans12.Program.case_intro(A_8879, U)
Logical.infer_tm(U)
trans12.Program.case_intro(m_8887, #A_8879)
Logical.infer_tm(A_8879)
trans12.Program.case_intro(n_8895, #A_8879)
Logical.infer_tm(A_8879)
trans12.Program.case_intro(B_8903, #A_8879 -> L)
Logical.infer_tm(A_8879 -> L)
Logical.infer_tm(A_8879)
Logical.infer_tm(L)
trans12.Program.case_intro(__8915, (eq_4‹U› #A_8879 #m_8887 #n_8895))
Logical.infer_tm((eq_4‹U› A_8879 m_8887 n_8895))
Logical.check_tm( A_8879, U )
Logical.infer_tm(A_8879)
Logical.assert_equal(U, U)
Logical.check_tm( m_8887, A_8879 )
Logical.infer_tm(m_8887)
Logical.assert_equal(A_8879, A_8879)
Logical.check_tm( n_8895, A_8879 )
Logical.infer_tm(n_8895)
Logical.assert_equal(A_8879, A_8879)
trans12.Program.case_intro(__8924, ((#B_8903) #n_8895))
Logical.infer_tm(((B_8903) n_8895))
Logical.infer_tm(B_8903)
Logical.check_tm( n_8895, A_8879 )
Logical.infer_tm(n_8895)
Logical.assert_equal(A_8879, A_8879)
Logical.infer_tm((eq_4‹U› A_8879 m_8887 n_8895))
Logical.check_tm( A_8879, U )
Logical.infer_tm(A_8879)
Logical.assert_equal(U, U)
Logical.check_tm( m_8887, A_8879 )
Logical.infer_tm(m_8887)
Logical.assert_equal(A_8879, A_8879)
Logical.check_tm( n_8895, A_8879 )
Logical.infer_tm(n_8895)
Logical.assert_equal(A_8879, A_8879)
trans12.Program.case_split(eqU_10, reflU_14)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_8879 #m_8887 #n_8895),
      (eq_4‹U› #A_8879 #m_8887 #m_8887));
    {| eq_pat?(N #A_8879, A_8874 : U)
       eq_pat?(N #m_8887, m_8875 : #A_8879)
       eq_pat?(N #n_8895, n_8876 : #A_8879)
       eq_pat?(N #B_8903, B_8877 : #A_8879 -> L)
       eq_pat?(R #__8924, __8878 : ((#B_8903) #n_8895)) ::: [] =>? #__8878
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_8879, A_8874 : U)
  eq_pat?(N #m_8887, m_8875 : #A_8879)
  eq_pat?(N #n_8895, n_8876 : #A_8879)
  eq_pat?(N #B_8903, B_8877 : #A_8879 -> L)
  eq_pat?(R #__8924, __8878 : ((#B_8903) #n_8895))
)
unify_global(
  eq_term?( (eq_4‹U› #A_8879 #m_8887 #n_8895),
    (eq_4‹U› #A_8879 #m_8887 #m_8887))
)
simpl_pprbm ~expand:false( #A_8879, #A_8874)
simpl_pprbm ~expand:false( #m_8887, #m_8875)
simpl_pprbm ~expand:false( #n_8895, #n_8876)
simpl_pprbm ~expand:false( #B_8903, #B_8877)
simpl_pprbm ~expand:false( #__8924, #__8878)
simpl_pprbm ~expand:false( (eq_4‹U› #A_8879 #m_8887 #n_8895),
  (eq_4‹U› #A_8879 #m_8887 #m_8887))
simpl_pprbm ~expand:false( #A_8879, #A_8879)
simpl_pprbm ~expand:false( #m_8887, #m_8887)
simpl_pprbm ~expand:false( #n_8895, #m_8887)
case_coverage_ok( __8924, ((B_8903) n_8895))
Program.check_tm( __8924, ((B_8903) n_8895) )
Program.infer_tm(__8924)
Logical.assert_equal(((B_8903) n_8895), ((B_8903) n_8895))
trans12.Program.case_introed(((#B_8903) #n_8895))
trans12.Program.case_introed((eq_4‹U› #A_8879 #m_8887 #n_8895))
trans12.Program.case_introed(#A_8879 -> L)
trans12.Program.case_introed(#A_8879)
trans12.Program.case_introed(#A_8879)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_8961 : U} ->
                       ∀ {m_8962 : A_8961} ->
                         ∀ {n_8963 : A_8961} ->
                           ∀ {B_8964 : A_8961 -> L} ->
                             {(eq_4‹U› A_8961 m_8962 n_8963)} ->
                               ((B_8964) n_8963) -> ((B_8964) m_8962), 
∀ {A_8968 : U} ->
  ∀ {m_8969 : A_8968} ->
    ∀ {n_8970 : A_8968} ->
      ∀ {B_8971 : A_8968 -> L} ->
        {(eq_4‹U› A_8968 m_8969 n_8970)} ->
          ((B_8971) n_8970) -> ((B_8971) m_8969))
Logical.infer_tm(∀ {A_8982 : U} ->
                   ∀ {m_8983 : A_8982} ->
                     ∀ {n_8984 : A_8982} ->
                       ∀ {B_8985 : A_8982 -> U} ->
                         {(eq_4‹U› A_8982 m_8983 n_8984)} ->
                           ((B_8985) n_8984) -> ((B_8985) m_8983))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_8990 : A_8989} ->
                   ∀ {n_8991 : A_8989} ->
                     ∀ {B_8992 : A_8989 -> U} ->
                       {(eq_4‹U› A_8989 m_8990 n_8991)} ->
                         ((B_8992) n_8991) -> ((B_8992) m_8990))
Logical.infer_tm(A_8989)
Logical.infer_tm(∀ {n_8997 : A_8989} ->
                   ∀ {B_8998 : A_8989 -> U} ->
                     {(eq_4‹U› A_8989 m_8996 n_8997)} ->
                       ((B_8998) n_8997) -> ((B_8998) m_8996))
Logical.infer_tm(A_8989)
Logical.infer_tm(∀ {B_9003 : A_8989 -> U} ->
                   {(eq_4‹U› A_8989 m_8996 n_9002)} ->
                     ((B_9003) n_9002) -> ((B_9003) m_8996))
Logical.infer_tm(A_8989 -> U)
Logical.infer_tm(A_8989)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹U› A_8989 m_8996 n_9002)} ->
                   ((B_9007) n_9002) -> ((B_9007) m_8996))
Logical.infer_tm((eq_4‹U› A_8989 m_8996 n_9002))
Logical.check_tm( A_8989, U )
Logical.infer_tm(A_8989)
Logical.assert_equal(U, U)
Logical.check_tm( m_8996, A_8989 )
Logical.infer_tm(m_8996)
Logical.assert_equal(A_8989, A_8989)
Logical.check_tm( n_9002, A_8989 )
Logical.infer_tm(n_9002)
Logical.assert_equal(A_8989, A_8989)
Logical.infer_tm(((B_9007) n_9002) -> ((B_9007) m_8996))
Logical.infer_tm(((B_9007) n_9002))
Logical.infer_tm(B_9007)
Logical.check_tm( n_9002, A_8989 )
Logical.infer_tm(n_9002)
Logical.assert_equal(A_8989, A_8989)
Logical.infer_tm(((B_9007) m_8996))
Logical.infer_tm(B_9007)
Logical.check_tm( m_8996, A_8989 )
Logical.infer_tm(m_8996)
Logical.assert_equal(A_8989, A_8989)
Program.check_tm(
  function rwr_9015 :
    ∀ {A_9016 : U} ->
      ∀ {m_9017 : A_9016} ->
        ∀ {n_9018 : A_9016} ->
          ∀ {B_9019 : A_9016 -> U} ->
            {(eq_4‹U› A_9016 m_9017 n_9018)} ->
              ((B_9019) n_9018) -> ((B_9019) m_9017)
  | A_9023 m_9024 n_9025 B_9026 refl_6 __9027 => __9027,
  ∀ {A_9028 : U} ->
    ∀ {m_9029 : A_9028} ->
      ∀ {n_9030 : A_9028} ->
        ∀ {B_9031 : A_9028 -> U} ->
          {(eq_4‹U› A_9028 m_9029 n_9030)} ->
            ((B_9031) n_9030) -> ((B_9031) m_9029)
)
Program.infer_tm(function rwr_9035 :
                   ∀ {A_9036 : U} ->
                     ∀ {m_9037 : A_9036} ->
                       ∀ {n_9038 : A_9036} ->
                         ∀ {B_9039 : A_9036 -> U} ->
                           {(eq_4‹U› A_9036 m_9037 n_9038)} ->
                             ((B_9039) n_9038) -> ((B_9039) m_9037)
                 | A_9043 m_9044 n_9045 B_9046 refl_6 __9047 => __9047)
Logical.infer_tm(∀ {A_9049 : U} ->
                   ∀ {m_9050 : A_9049} ->
                     ∀ {n_9051 : A_9049} ->
                       ∀ {B_9052 : A_9049 -> U} ->
                         {(eq_4‹U› A_9049 m_9050 n_9051)} ->
                           ((B_9052) n_9051) -> ((B_9052) m_9050))
Logical.infer_tm(U)
Logical.infer_tm(∀ {m_9057 : A_9056} ->
                   ∀ {n_9058 : A_9056} ->
                     ∀ {B_9059 : A_9056 -> U} ->
                       {(eq_4‹U› A_9056 m_9057 n_9058)} ->
                         ((B_9059) n_9058) -> ((B_9059) m_9057))
Logical.infer_tm(A_9056)
Logical.infer_tm(∀ {n_9064 : A_9056} ->
                   ∀ {B_9065 : A_9056 -> U} ->
                     {(eq_4‹U› A_9056 m_9063 n_9064)} ->
                       ((B_9065) n_9064) -> ((B_9065) m_9063))
Logical.infer_tm(A_9056)
Logical.infer_tm(∀ {B_9070 : A_9056 -> U} ->
                   {(eq_4‹U› A_9056 m_9063 n_9069)} ->
                     ((B_9070) n_9069) -> ((B_9070) m_9063))
Logical.infer_tm(A_9056 -> U)
Logical.infer_tm(A_9056)
Logical.infer_tm(U)
Logical.infer_tm({(eq_4‹U› A_9056 m_9063 n_9069)} ->
                   ((B_9074) n_9069) -> ((B_9074) m_9063))
Logical.infer_tm((eq_4‹U› A_9056 m_9063 n_9069))
Logical.check_tm( A_9056, U )
Logical.infer_tm(A_9056)
Logical.assert_equal(U, U)
Logical.check_tm( m_9063, A_9056 )
Logical.infer_tm(m_9063)
Logical.assert_equal(A_9056, A_9056)
Logical.check_tm( n_9069, A_9056 )
Logical.infer_tm(n_9069)
Logical.assert_equal(A_9056, A_9056)
Logical.infer_tm(((B_9074) n_9069) -> ((B_9074) m_9063))
Logical.infer_tm(((B_9074) n_9069))
Logical.infer_tm(B_9074)
Logical.check_tm( n_9069, A_9056 )
Logical.infer_tm(n_9069)
Logical.assert_equal(A_9056, A_9056)
Logical.infer_tm(((B_9074) m_9063))
Logical.infer_tm(B_9074)
Logical.check_tm( m_9063, A_9056 )
Logical.infer_tm(m_9063)
Logical.assert_equal(A_9056, A_9056)
trans12.Program.case_intro(A_9087, U)
Logical.infer_tm(U)
trans12.Program.case_intro(m_9095, #A_9087)
Logical.infer_tm(A_9087)
trans12.Program.case_intro(n_9103, #A_9087)
Logical.infer_tm(A_9087)
trans12.Program.case_intro(B_9111, #A_9087 -> U)
Logical.infer_tm(A_9087 -> U)
Logical.infer_tm(A_9087)
Logical.infer_tm(U)
trans12.Program.case_intro(__9123, (eq_4‹U› #A_9087 #m_9095 #n_9103))
Logical.infer_tm((eq_4‹U› A_9087 m_9095 n_9103))
Logical.check_tm( A_9087, U )
Logical.infer_tm(A_9087)
Logical.assert_equal(U, U)
Logical.check_tm( m_9095, A_9087 )
Logical.infer_tm(m_9095)
Logical.assert_equal(A_9087, A_9087)
Logical.check_tm( n_9103, A_9087 )
Logical.infer_tm(n_9103)
Logical.assert_equal(A_9087, A_9087)
trans12.Program.case_intro(__9132, ((#B_9111) #n_9103))
Logical.infer_tm(((B_9111) n_9103))
Logical.infer_tm(B_9111)
Logical.check_tm( n_9103, A_9087 )
Logical.infer_tm(n_9103)
Logical.assert_equal(A_9087, A_9087)
Logical.infer_tm((eq_4‹U› A_9087 m_9095 n_9103))
Logical.check_tm( A_9087, U )
Logical.infer_tm(A_9087)
Logical.assert_equal(U, U)
Logical.check_tm( m_9095, A_9087 )
Logical.infer_tm(m_9095)
Logical.assert_equal(A_9087, A_9087)
Logical.check_tm( n_9103, A_9087 )
Logical.infer_tm(n_9103)
Logical.assert_equal(A_9087, A_9087)
trans12.Program.case_split(eqU_10, reflU_14)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_9087 #m_9095 #n_9103),
      (eq_4‹U› #A_9087 #m_9095 #m_9095));
    {| eq_pat?(N #A_9087, A_9082 : U)
       eq_pat?(N #m_9095, m_9083 : #A_9087)
       eq_pat?(N #n_9103, n_9084 : #A_9087)
       eq_pat?(N #B_9111, B_9085 : #A_9087 -> U)
       eq_pat?(R #__9132, __9086 : ((#B_9111) #n_9103)) ::: [] =>? #__9086
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_9087, A_9082 : U)
  eq_pat?(N #m_9095, m_9083 : #A_9087)
  eq_pat?(N #n_9103, n_9084 : #A_9087)
  eq_pat?(N #B_9111, B_9085 : #A_9087 -> U)
  eq_pat?(R #__9132, __9086 : ((#B_9111) #n_9103))
)
unify_global(
  eq_term?( (eq_4‹U› #A_9087 #m_9095 #n_9103),
    (eq_4‹U› #A_9087 #m_9095 #m_9095))
)
simpl_pprbm ~expand:false( #A_9087, #A_9082)
simpl_pprbm ~expand:false( #m_9095, #m_9083)
simpl_pprbm ~expand:false( #n_9103, #n_9084)
simpl_pprbm ~expand:false( #B_9111, #B_9085)
simpl_pprbm ~expand:false( #__9132, #__9086)
simpl_pprbm ~expand:false( (eq_4‹U› #A_9087 #m_9095 #n_9103),
  (eq_4‹U› #A_9087 #m_9095 #m_9095))
simpl_pprbm ~expand:false( #A_9087, #A_9087)
simpl_pprbm ~expand:false( #m_9095, #m_9095)
simpl_pprbm ~expand:false( #n_9103, #m_9095)
case_coverage_ok( __9132, ((B_9111) n_9103))
Program.check_tm( __9132, ((B_9111) n_9103) )
Program.infer_tm(__9132)
Logical.assert_equal(((B_9111) n_9103), ((B_9111) n_9103))
trans12.Program.case_introed(((#B_9111) #n_9103))
trans12.Program.case_introed((eq_4‹U› #A_9087 #m_9095 #n_9103))
trans12.Program.case_introed(#A_9087 -> U)
trans12.Program.case_introed(#A_9087)
trans12.Program.case_introed(#A_9087)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_9169 : U} ->
                       ∀ {m_9170 : A_9169} ->
                         ∀ {n_9171 : A_9169} ->
                           ∀ {B_9172 : A_9169 -> U} ->
                             {(eq_4‹U› A_9169 m_9170 n_9171)} ->
                               ((B_9172) n_9171) -> ((B_9172) m_9170), 
∀ {A_9176 : U} ->
  ∀ {m_9177 : A_9176} ->
    ∀ {n_9178 : A_9176} ->
      ∀ {B_9179 : A_9176 -> U} ->
        {(eq_4‹U› A_9176 m_9177 n_9178)} ->
          ((B_9179) n_9178) -> ((B_9179) m_9177))
Logical.infer_tm(∀ (A_9190 : L) ->
                   ∀ (B_9191 : L) ->
                     ∀ (m_9192 : A_9190) ->
                       ∀ (n_9193 : A_9190) ->
                         ∀ (f_9194 : A_9190 -o B_9191) ->
                           (eq_4‹L› A_9190 m_9192 n_9193) ->
                             (eq_4‹L›
                               B_9191 ((f_9194) m_9192) ((f_9194) n_9193)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9198 : L) ->
                   ∀ (m_9199 : A_9197) ->
                     ∀ (n_9200 : A_9197) ->
                       ∀ (f_9201 : A_9197 -o B_9198) ->
                         (eq_4‹L› A_9197 m_9199 n_9200) ->
                           (eq_4‹L›
                             B_9198 ((f_9201) m_9199) ((f_9201) n_9200)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_9205 : A_9197) ->
                   ∀ (n_9206 : A_9197) ->
                     ∀ (f_9207 : A_9197 -o B_9204) ->
                       (eq_4‹L› A_9197 m_9205 n_9206) ->
                         (eq_4‹L›
                           B_9204 ((f_9207) m_9205) ((f_9207) n_9206)))
Logical.infer_tm(A_9197)
Logical.infer_tm(∀ (n_9211 : A_9197) ->
                   ∀ (f_9212 : A_9197 -o B_9204) ->
                     (eq_4‹L› A_9197 m_9210 n_9211) ->
                       (eq_4‹L›
                         B_9204 ((f_9212) m_9210) ((f_9212) n_9211)))
Logical.infer_tm(A_9197)
Logical.infer_tm(∀ (f_9216 : A_9197 -o B_9204) ->
                   (eq_4‹L› A_9197 m_9210 n_9215) ->
                     (eq_4‹L› B_9204 ((f_9216) m_9210) ((f_9216) n_9215)))
Logical.infer_tm(A_9197 -o B_9204)
Logical.infer_tm(A_9197)
Logical.infer_tm(B_9204)
Logical.infer_tm((eq_4‹L› A_9197 m_9210 n_9215) ->
                   (eq_4‹L› B_9204 ((f_9219) m_9210) ((f_9219) n_9215)))
Logical.infer_tm((eq_4‹L› A_9197 m_9210 n_9215))
Logical.check_tm( A_9197, L )
Logical.infer_tm(A_9197)
Logical.assert_equal(L, L)
Logical.check_tm( m_9210, A_9197 )
Logical.infer_tm(m_9210)
Logical.assert_equal(A_9197, A_9197)
Logical.check_tm( n_9215, A_9197 )
Logical.infer_tm(n_9215)
Logical.assert_equal(A_9197, A_9197)
Logical.infer_tm((eq_4‹L› B_9204 ((f_9219) m_9210) ((f_9219) n_9215)))
Logical.check_tm( B_9204, L )
Logical.infer_tm(B_9204)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_9219) m_9210), B_9204 )
Logical.infer_tm(((f_9219) m_9210))
Logical.infer_tm(f_9219)
Logical.check_tm( m_9210, A_9197 )
Logical.infer_tm(m_9210)
Logical.assert_equal(A_9197, A_9197)
Logical.assert_equal(B_9204, B_9204)
Logical.check_tm( ((f_9219) n_9215), B_9204 )
Logical.infer_tm(((f_9219) n_9215))
Logical.infer_tm(f_9219)
Logical.check_tm( n_9215, A_9197 )
Logical.infer_tm(n_9215)
Logical.assert_equal(A_9197, A_9197)
Logical.assert_equal(B_9204, B_9204)
Logical.check_tm(
  function congr_9224 :
    ∀ (A_9225 : L) ->
      ∀ (B_9226 : L) ->
        ∀ (m_9227 : A_9225) ->
          ∀ (n_9228 : A_9225) ->
            ∀ (f_9229 : A_9225 -o B_9226) ->
              (eq_4‹L› A_9225 m_9227 n_9228) ->
                (eq_4‹L› B_9226 ((f_9229) m_9227) ((f_9229) n_9228))
  | A_9232 B_9233 m_9234 n_9235 f_9236 refl_6 =>
    (refl_6‹L› B_9233 ((f_9236) n_9235)),
  ∀ (A_9237 : L) ->
    ∀ (B_9238 : L) ->
      ∀ (m_9239 : A_9237) ->
        ∀ (n_9240 : A_9237) ->
          ∀ (f_9241 : A_9237 -o B_9238) ->
            (eq_4‹L› A_9237 m_9239 n_9240) ->
              (eq_4‹L› B_9238 ((f_9241) m_9239) ((f_9241) n_9240))
)
Logical.infer_tm(function congr_9244 :
                   ∀ (A_9245 : L) ->
                     ∀ (B_9246 : L) ->
                       ∀ (m_9247 : A_9245) ->
                         ∀ (n_9248 : A_9245) ->
                           ∀ (f_9249 : A_9245 -o B_9246) ->
                             (eq_4‹L› A_9245 m_9247 n_9248) ->
                               (eq_4‹L›
                                 B_9246 ((f_9249) m_9247) ((f_9249) n_9248))
                 | A_9252 B_9253 m_9254 n_9255 f_9256 refl_6 =>
                   (refl_6‹L› B_9253 ((f_9256) n_9255)))
Logical.infer_tm(∀ (A_9258 : L) ->
                   ∀ (B_9259 : L) ->
                     ∀ (m_9260 : A_9258) ->
                       ∀ (n_9261 : A_9258) ->
                         ∀ (f_9262 : A_9258 -o B_9259) ->
                           (eq_4‹L› A_9258 m_9260 n_9261) ->
                             (eq_4‹L›
                               B_9259 ((f_9262) m_9260) ((f_9262) n_9261)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9266 : L) ->
                   ∀ (m_9267 : A_9265) ->
                     ∀ (n_9268 : A_9265) ->
                       ∀ (f_9269 : A_9265 -o B_9266) ->
                         (eq_4‹L› A_9265 m_9267 n_9268) ->
                           (eq_4‹L›
                             B_9266 ((f_9269) m_9267) ((f_9269) n_9268)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_9273 : A_9265) ->
                   ∀ (n_9274 : A_9265) ->
                     ∀ (f_9275 : A_9265 -o B_9272) ->
                       (eq_4‹L› A_9265 m_9273 n_9274) ->
                         (eq_4‹L›
                           B_9272 ((f_9275) m_9273) ((f_9275) n_9274)))
Logical.infer_tm(A_9265)
Logical.infer_tm(∀ (n_9279 : A_9265) ->
                   ∀ (f_9280 : A_9265 -o B_9272) ->
                     (eq_4‹L› A_9265 m_9278 n_9279) ->
                       (eq_4‹L›
                         B_9272 ((f_9280) m_9278) ((f_9280) n_9279)))
Logical.infer_tm(A_9265)
Logical.infer_tm(∀ (f_9284 : A_9265 -o B_9272) ->
                   (eq_4‹L› A_9265 m_9278 n_9283) ->
                     (eq_4‹L› B_9272 ((f_9284) m_9278) ((f_9284) n_9283)))
Logical.infer_tm(A_9265 -o B_9272)
Logical.infer_tm(A_9265)
Logical.infer_tm(B_9272)
Logical.infer_tm((eq_4‹L› A_9265 m_9278 n_9283) ->
                   (eq_4‹L› B_9272 ((f_9287) m_9278) ((f_9287) n_9283)))
Logical.infer_tm((eq_4‹L› A_9265 m_9278 n_9283))
Logical.check_tm( A_9265, L )
Logical.infer_tm(A_9265)
Logical.assert_equal(L, L)
Logical.check_tm( m_9278, A_9265 )
Logical.infer_tm(m_9278)
Logical.assert_equal(A_9265, A_9265)
Logical.check_tm( n_9283, A_9265 )
Logical.infer_tm(n_9283)
Logical.assert_equal(A_9265, A_9265)
Logical.infer_tm((eq_4‹L› B_9272 ((f_9287) m_9278) ((f_9287) n_9283)))
Logical.check_tm( B_9272, L )
Logical.infer_tm(B_9272)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_9287) m_9278), B_9272 )
Logical.infer_tm(((f_9287) m_9278))
Logical.infer_tm(f_9287)
Logical.check_tm( m_9278, A_9265 )
Logical.infer_tm(m_9278)
Logical.assert_equal(A_9265, A_9265)
Logical.assert_equal(B_9272, B_9272)
Logical.check_tm( ((f_9287) n_9283), B_9272 )
Logical.infer_tm(((f_9287) n_9283))
Logical.infer_tm(f_9287)
Logical.check_tm( n_9283, A_9265 )
Logical.infer_tm(n_9283)
Logical.assert_equal(A_9265, A_9265)
Logical.assert_equal(B_9272, B_9272)
Logical.infer_tm(L)
Logical.infer_tm(L)
Logical.infer_tm(A_9297)
Logical.infer_tm(A_9297)
Logical.infer_tm(A_9297 -o B_9305)
Logical.infer_tm(A_9297)
Logical.infer_tm(B_9305)
Logical.infer_tm((eq_4‹L› A_9297 m_9313 n_9321))
Logical.check_tm( A_9297, L )
Logical.infer_tm(A_9297)
Logical.assert_equal(L, L)
Logical.check_tm( m_9313, A_9297 )
Logical.infer_tm(m_9313)
Logical.assert_equal(A_9297, A_9297)
Logical.check_tm( n_9321, A_9297 )
Logical.infer_tm(n_9321)
Logical.assert_equal(A_9297, A_9297)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_9297 #m_9313 #n_9321),
      (eq_4‹L› #A_9297 #m_9313 #m_9313));
    {| eq_pat?(R #A_9297, A_9292 : L)
       eq_pat?(R #B_9305, B_9293 : L)
       eq_pat?(R #m_9313, m_9294 : #A_9297)
       eq_pat?(R #n_9321, n_9295 : #A_9297)
       eq_pat?(R #f_9329, f_9296 : #A_9297 -o #B_9305) ::: [] =>?
         (refl_6‹L› #B_9293 ((#f_9296) #n_9295))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_9297, A_9292 : L)
  eq_pat?(R #B_9305, B_9293 : L)
  eq_pat?(R #m_9313, m_9294 : #A_9297)
  eq_pat?(R #n_9321, n_9295 : #A_9297)
  eq_pat?(R #f_9329, f_9296 : #A_9297 -o #B_9305)
)
unify_global(
  eq_term?( (eq_4‹L› #A_9297 #m_9313 #n_9321),
    (eq_4‹L› #A_9297 #m_9313 #m_9313))
)
simpl_pprbm ~expand:false( #A_9297, #A_9292)
simpl_pprbm ~expand:false( #B_9305, #B_9293)
simpl_pprbm ~expand:false( #m_9313, #m_9294)
simpl_pprbm ~expand:false( #n_9321, #n_9295)
simpl_pprbm ~expand:false( #f_9329, #f_9296)
simpl_pprbm ~expand:false( (eq_4‹L› #A_9297 #m_9313 #n_9321),
  (eq_4‹L› #A_9297 #m_9313 #m_9313))
simpl_pprbm ~expand:false( #A_9297, #A_9297)
simpl_pprbm ~expand:false( #m_9313, #m_9313)
simpl_pprbm ~expand:false( #n_9321, #m_9313)
case_coverage_ok( (refl_6‹L› B_9305 ((f_9329) n_9321)),
  (eq_4‹L› B_9305 ((f_9329) n_9321) ((f_9329) n_9321)))
Logical.check_tm( (refl_6‹L› B_9305 ((f_9329) n_9321)),
  (eq_4‹L› B_9305 ((f_9329) n_9321) ((f_9329) n_9321))
)
Logical.infer_tm((refl_6‹L› B_9305 ((f_9329) n_9321)))
Logical.check_tm( B_9305, L )
Logical.infer_tm(B_9305)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_9329) n_9321), B_9305 )
Logical.infer_tm(((f_9329) n_9321))
Logical.infer_tm(f_9329)
Logical.check_tm( n_9321, A_9297 )
Logical.infer_tm(n_9321)
Logical.assert_equal(A_9297, A_9297)
Logical.assert_equal(B_9305, B_9305)
Logical.assert_equal((eq_4‹L› B_9305 ((f_9329) n_9321) ((f_9329) n_9321)), 
(eq_4‹L› B_9305 ((f_9329) n_9321) ((f_9329) n_9321)))
Logical.assert_equal(∀ (A_9368 : L) ->
                       ∀ (B_9369 : L) ->
                         ∀ (m_9370 : A_9368) ->
                           ∀ (n_9371 : A_9368) ->
                             ∀ (f_9372 : A_9368 -o B_9369) ->
                               (eq_4‹L› A_9368 m_9370 n_9371) ->
                                 (eq_4‹L›
                                   B_9369 ((f_9372) m_9370) ((f_9372) n_9371)), 
∀ (A_9375 : L) ->
  ∀ (B_9376 : L) ->
    ∀ (m_9377 : A_9375) ->
      ∀ (n_9378 : A_9375) ->
        ∀ (f_9379 : A_9375 -o B_9376) ->
          (eq_4‹L› A_9375 m_9377 n_9378) ->
            (eq_4‹L› B_9376 ((f_9379) m_9377) ((f_9379) n_9378)))
Logical.infer_tm(∀ (A_9389 : L) ->
                   ∀ (B_9390 : L) ->
                     ∀ (m_9391 : A_9389) ->
                       ∀ (n_9392 : A_9389) ->
                         ∀ (f_9393 : A_9389 -> B_9390) ->
                           (eq_4‹L› A_9389 m_9391 n_9392) ->
                             (eq_4‹L›
                               B_9390 ((f_9393) m_9391) ((f_9393) n_9392)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9397 : L) ->
                   ∀ (m_9398 : A_9396) ->
                     ∀ (n_9399 : A_9396) ->
                       ∀ (f_9400 : A_9396 -> B_9397) ->
                         (eq_4‹L› A_9396 m_9398 n_9399) ->
                           (eq_4‹L›
                             B_9397 ((f_9400) m_9398) ((f_9400) n_9399)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_9404 : A_9396) ->
                   ∀ (n_9405 : A_9396) ->
                     ∀ (f_9406 : A_9396 -> B_9403) ->
                       (eq_4‹L› A_9396 m_9404 n_9405) ->
                         (eq_4‹L›
                           B_9403 ((f_9406) m_9404) ((f_9406) n_9405)))
Logical.infer_tm(A_9396)
Logical.infer_tm(∀ (n_9410 : A_9396) ->
                   ∀ (f_9411 : A_9396 -> B_9403) ->
                     (eq_4‹L› A_9396 m_9409 n_9410) ->
                       (eq_4‹L›
                         B_9403 ((f_9411) m_9409) ((f_9411) n_9410)))
Logical.infer_tm(A_9396)
Logical.infer_tm(∀ (f_9415 : A_9396 -> B_9403) ->
                   (eq_4‹L› A_9396 m_9409 n_9414) ->
                     (eq_4‹L› B_9403 ((f_9415) m_9409) ((f_9415) n_9414)))
Logical.infer_tm(A_9396 -> B_9403)
Logical.infer_tm(A_9396)
Logical.infer_tm(B_9403)
Logical.infer_tm((eq_4‹L› A_9396 m_9409 n_9414) ->
                   (eq_4‹L› B_9403 ((f_9418) m_9409) ((f_9418) n_9414)))
Logical.infer_tm((eq_4‹L› A_9396 m_9409 n_9414))
Logical.check_tm( A_9396, L )
Logical.infer_tm(A_9396)
Logical.assert_equal(L, L)
Logical.check_tm( m_9409, A_9396 )
Logical.infer_tm(m_9409)
Logical.assert_equal(A_9396, A_9396)
Logical.check_tm( n_9414, A_9396 )
Logical.infer_tm(n_9414)
Logical.assert_equal(A_9396, A_9396)
Logical.infer_tm((eq_4‹L› B_9403 ((f_9418) m_9409) ((f_9418) n_9414)))
Logical.check_tm( B_9403, L )
Logical.infer_tm(B_9403)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_9418) m_9409), B_9403 )
Logical.infer_tm(((f_9418) m_9409))
Logical.infer_tm(f_9418)
Logical.check_tm( m_9409, A_9396 )
Logical.infer_tm(m_9409)
Logical.assert_equal(A_9396, A_9396)
Logical.assert_equal(B_9403, B_9403)
Logical.check_tm( ((f_9418) n_9414), B_9403 )
Logical.infer_tm(((f_9418) n_9414))
Logical.infer_tm(f_9418)
Logical.check_tm( n_9414, A_9396 )
Logical.infer_tm(n_9414)
Logical.assert_equal(A_9396, A_9396)
Logical.assert_equal(B_9403, B_9403)
Logical.check_tm(
  function congr_9423 :
    ∀ (A_9424 : L) ->
      ∀ (B_9425 : L) ->
        ∀ (m_9426 : A_9424) ->
          ∀ (n_9427 : A_9424) ->
            ∀ (f_9428 : A_9424 -> B_9425) ->
              (eq_4‹L› A_9424 m_9426 n_9427) ->
                (eq_4‹L› B_9425 ((f_9428) m_9426) ((f_9428) n_9427))
  | A_9431 B_9432 m_9433 n_9434 f_9435 refl_6 =>
    (refl_6‹L› B_9432 ((f_9435) n_9434)),
  ∀ (A_9436 : L) ->
    ∀ (B_9437 : L) ->
      ∀ (m_9438 : A_9436) ->
        ∀ (n_9439 : A_9436) ->
          ∀ (f_9440 : A_9436 -> B_9437) ->
            (eq_4‹L› A_9436 m_9438 n_9439) ->
              (eq_4‹L› B_9437 ((f_9440) m_9438) ((f_9440) n_9439))
)
Logical.infer_tm(function congr_9443 :
                   ∀ (A_9444 : L) ->
                     ∀ (B_9445 : L) ->
                       ∀ (m_9446 : A_9444) ->
                         ∀ (n_9447 : A_9444) ->
                           ∀ (f_9448 : A_9444 -> B_9445) ->
                             (eq_4‹L› A_9444 m_9446 n_9447) ->
                               (eq_4‹L›
                                 B_9445 ((f_9448) m_9446) ((f_9448) n_9447))
                 | A_9451 B_9452 m_9453 n_9454 f_9455 refl_6 =>
                   (refl_6‹L› B_9452 ((f_9455) n_9454)))
Logical.infer_tm(∀ (A_9457 : L) ->
                   ∀ (B_9458 : L) ->
                     ∀ (m_9459 : A_9457) ->
                       ∀ (n_9460 : A_9457) ->
                         ∀ (f_9461 : A_9457 -> B_9458) ->
                           (eq_4‹L› A_9457 m_9459 n_9460) ->
                             (eq_4‹L›
                               B_9458 ((f_9461) m_9459) ((f_9461) n_9460)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9465 : L) ->
                   ∀ (m_9466 : A_9464) ->
                     ∀ (n_9467 : A_9464) ->
                       ∀ (f_9468 : A_9464 -> B_9465) ->
                         (eq_4‹L› A_9464 m_9466 n_9467) ->
                           (eq_4‹L›
                             B_9465 ((f_9468) m_9466) ((f_9468) n_9467)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_9472 : A_9464) ->
                   ∀ (n_9473 : A_9464) ->
                     ∀ (f_9474 : A_9464 -> B_9471) ->
                       (eq_4‹L› A_9464 m_9472 n_9473) ->
                         (eq_4‹L›
                           B_9471 ((f_9474) m_9472) ((f_9474) n_9473)))
Logical.infer_tm(A_9464)
Logical.infer_tm(∀ (n_9478 : A_9464) ->
                   ∀ (f_9479 : A_9464 -> B_9471) ->
                     (eq_4‹L› A_9464 m_9477 n_9478) ->
                       (eq_4‹L›
                         B_9471 ((f_9479) m_9477) ((f_9479) n_9478)))
Logical.infer_tm(A_9464)
Logical.infer_tm(∀ (f_9483 : A_9464 -> B_9471) ->
                   (eq_4‹L› A_9464 m_9477 n_9482) ->
                     (eq_4‹L› B_9471 ((f_9483) m_9477) ((f_9483) n_9482)))
Logical.infer_tm(A_9464 -> B_9471)
Logical.infer_tm(A_9464)
Logical.infer_tm(B_9471)
Logical.infer_tm((eq_4‹L› A_9464 m_9477 n_9482) ->
                   (eq_4‹L› B_9471 ((f_9486) m_9477) ((f_9486) n_9482)))
Logical.infer_tm((eq_4‹L› A_9464 m_9477 n_9482))
Logical.check_tm( A_9464, L )
Logical.infer_tm(A_9464)
Logical.assert_equal(L, L)
Logical.check_tm( m_9477, A_9464 )
Logical.infer_tm(m_9477)
Logical.assert_equal(A_9464, A_9464)
Logical.check_tm( n_9482, A_9464 )
Logical.infer_tm(n_9482)
Logical.assert_equal(A_9464, A_9464)
Logical.infer_tm((eq_4‹L› B_9471 ((f_9486) m_9477) ((f_9486) n_9482)))
Logical.check_tm( B_9471, L )
Logical.infer_tm(B_9471)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_9486) m_9477), B_9471 )
Logical.infer_tm(((f_9486) m_9477))
Logical.infer_tm(f_9486)
Logical.check_tm( m_9477, A_9464 )
Logical.infer_tm(m_9477)
Logical.assert_equal(A_9464, A_9464)
Logical.assert_equal(B_9471, B_9471)
Logical.check_tm( ((f_9486) n_9482), B_9471 )
Logical.infer_tm(((f_9486) n_9482))
Logical.infer_tm(f_9486)
Logical.check_tm( n_9482, A_9464 )
Logical.infer_tm(n_9482)
Logical.assert_equal(A_9464, A_9464)
Logical.assert_equal(B_9471, B_9471)
Logical.infer_tm(L)
Logical.infer_tm(L)
Logical.infer_tm(A_9496)
Logical.infer_tm(A_9496)
Logical.infer_tm(A_9496 -> B_9504)
Logical.infer_tm(A_9496)
Logical.infer_tm(B_9504)
Logical.infer_tm((eq_4‹L› A_9496 m_9512 n_9520))
Logical.check_tm( A_9496, L )
Logical.infer_tm(A_9496)
Logical.assert_equal(L, L)
Logical.check_tm( m_9512, A_9496 )
Logical.infer_tm(m_9512)
Logical.assert_equal(A_9496, A_9496)
Logical.check_tm( n_9520, A_9496 )
Logical.infer_tm(n_9520)
Logical.assert_equal(A_9496, A_9496)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_9496 #m_9512 #n_9520),
      (eq_4‹L› #A_9496 #m_9512 #m_9512));
    {| eq_pat?(R #A_9496, A_9491 : L)
       eq_pat?(R #B_9504, B_9492 : L)
       eq_pat?(R #m_9512, m_9493 : #A_9496)
       eq_pat?(R #n_9520, n_9494 : #A_9496)
       eq_pat?(R #f_9528, f_9495 : #A_9496 -> #B_9504) ::: [] =>?
         (refl_6‹L› #B_9492 ((#f_9495) #n_9494))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_9496, A_9491 : L)
  eq_pat?(R #B_9504, B_9492 : L)
  eq_pat?(R #m_9512, m_9493 : #A_9496)
  eq_pat?(R #n_9520, n_9494 : #A_9496)
  eq_pat?(R #f_9528, f_9495 : #A_9496 -> #B_9504)
)
unify_global(
  eq_term?( (eq_4‹L› #A_9496 #m_9512 #n_9520),
    (eq_4‹L› #A_9496 #m_9512 #m_9512))
)
simpl_pprbm ~expand:false( #A_9496, #A_9491)
simpl_pprbm ~expand:false( #B_9504, #B_9492)
simpl_pprbm ~expand:false( #m_9512, #m_9493)
simpl_pprbm ~expand:false( #n_9520, #n_9494)
simpl_pprbm ~expand:false( #f_9528, #f_9495)
simpl_pprbm ~expand:false( (eq_4‹L› #A_9496 #m_9512 #n_9520),
  (eq_4‹L› #A_9496 #m_9512 #m_9512))
simpl_pprbm ~expand:false( #A_9496, #A_9496)
simpl_pprbm ~expand:false( #m_9512, #m_9512)
simpl_pprbm ~expand:false( #n_9520, #m_9512)
case_coverage_ok( (refl_6‹L› B_9504 ((f_9528) n_9520)),
  (eq_4‹L› B_9504 ((f_9528) n_9520) ((f_9528) n_9520)))
Logical.check_tm( (refl_6‹L› B_9504 ((f_9528) n_9520)),
  (eq_4‹L› B_9504 ((f_9528) n_9520) ((f_9528) n_9520))
)
Logical.infer_tm((refl_6‹L› B_9504 ((f_9528) n_9520)))
Logical.check_tm( B_9504, L )
Logical.infer_tm(B_9504)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_9528) n_9520), B_9504 )
Logical.infer_tm(((f_9528) n_9520))
Logical.infer_tm(f_9528)
Logical.check_tm( n_9520, A_9496 )
Logical.infer_tm(n_9520)
Logical.assert_equal(A_9496, A_9496)
Logical.assert_equal(B_9504, B_9504)
Logical.assert_equal((eq_4‹L› B_9504 ((f_9528) n_9520) ((f_9528) n_9520)), 
(eq_4‹L› B_9504 ((f_9528) n_9520) ((f_9528) n_9520)))
Logical.assert_equal(∀ (A_9567 : L) ->
                       ∀ (B_9568 : L) ->
                         ∀ (m_9569 : A_9567) ->
                           ∀ (n_9570 : A_9567) ->
                             ∀ (f_9571 : A_9567 -> B_9568) ->
                               (eq_4‹L› A_9567 m_9569 n_9570) ->
                                 (eq_4‹L›
                                   B_9568 ((f_9571) m_9569) ((f_9571) n_9570)), 
∀ (A_9574 : L) ->
  ∀ (B_9575 : L) ->
    ∀ (m_9576 : A_9574) ->
      ∀ (n_9577 : A_9574) ->
        ∀ (f_9578 : A_9574 -> B_9575) ->
          (eq_4‹L› A_9574 m_9576 n_9577) ->
            (eq_4‹L› B_9575 ((f_9578) m_9576) ((f_9578) n_9577)))
Logical.infer_tm(∀ (A_9588 : L) ->
                   ∀ (B_9589 : U) ->
                     ∀ (m_9590 : A_9588) ->
                       ∀ (n_9591 : A_9588) ->
                         ∀ (f_9592 : A_9588 -o B_9589) ->
                           (eq_4‹L› A_9588 m_9590 n_9591) ->
                             (eq_4‹U›
                               B_9589 ((f_9592) m_9590) ((f_9592) n_9591)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9596 : U) ->
                   ∀ (m_9597 : A_9595) ->
                     ∀ (n_9598 : A_9595) ->
                       ∀ (f_9599 : A_9595 -o B_9596) ->
                         (eq_4‹L› A_9595 m_9597 n_9598) ->
                           (eq_4‹U›
                             B_9596 ((f_9599) m_9597) ((f_9599) n_9598)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_9603 : A_9595) ->
                   ∀ (n_9604 : A_9595) ->
                     ∀ (f_9605 : A_9595 -o B_9602) ->
                       (eq_4‹L› A_9595 m_9603 n_9604) ->
                         (eq_4‹U›
                           B_9602 ((f_9605) m_9603) ((f_9605) n_9604)))
Logical.infer_tm(A_9595)
Logical.infer_tm(∀ (n_9609 : A_9595) ->
                   ∀ (f_9610 : A_9595 -o B_9602) ->
                     (eq_4‹L› A_9595 m_9608 n_9609) ->
                       (eq_4‹U›
                         B_9602 ((f_9610) m_9608) ((f_9610) n_9609)))
Logical.infer_tm(A_9595)
Logical.infer_tm(∀ (f_9614 : A_9595 -o B_9602) ->
                   (eq_4‹L› A_9595 m_9608 n_9613) ->
                     (eq_4‹U› B_9602 ((f_9614) m_9608) ((f_9614) n_9613)))
Logical.infer_tm(A_9595 -o B_9602)
Logical.infer_tm(A_9595)
Logical.infer_tm(B_9602)
Logical.infer_tm((eq_4‹L› A_9595 m_9608 n_9613) ->
                   (eq_4‹U› B_9602 ((f_9617) m_9608) ((f_9617) n_9613)))
Logical.infer_tm((eq_4‹L› A_9595 m_9608 n_9613))
Logical.check_tm( A_9595, L )
Logical.infer_tm(A_9595)
Logical.assert_equal(L, L)
Logical.check_tm( m_9608, A_9595 )
Logical.infer_tm(m_9608)
Logical.assert_equal(A_9595, A_9595)
Logical.check_tm( n_9613, A_9595 )
Logical.infer_tm(n_9613)
Logical.assert_equal(A_9595, A_9595)
Logical.infer_tm((eq_4‹U› B_9602 ((f_9617) m_9608) ((f_9617) n_9613)))
Logical.check_tm( B_9602, U )
Logical.infer_tm(B_9602)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_9617) m_9608), B_9602 )
Logical.infer_tm(((f_9617) m_9608))
Logical.infer_tm(f_9617)
Logical.check_tm( m_9608, A_9595 )
Logical.infer_tm(m_9608)
Logical.assert_equal(A_9595, A_9595)
Logical.assert_equal(B_9602, B_9602)
Logical.check_tm( ((f_9617) n_9613), B_9602 )
Logical.infer_tm(((f_9617) n_9613))
Logical.infer_tm(f_9617)
Logical.check_tm( n_9613, A_9595 )
Logical.infer_tm(n_9613)
Logical.assert_equal(A_9595, A_9595)
Logical.assert_equal(B_9602, B_9602)
Logical.check_tm(
  function congr_9622 :
    ∀ (A_9623 : L) ->
      ∀ (B_9624 : U) ->
        ∀ (m_9625 : A_9623) ->
          ∀ (n_9626 : A_9623) ->
            ∀ (f_9627 : A_9623 -o B_9624) ->
              (eq_4‹L› A_9623 m_9625 n_9626) ->
                (eq_4‹U› B_9624 ((f_9627) m_9625) ((f_9627) n_9626))
  | A_9630 B_9631 m_9632 n_9633 f_9634 refl_6 =>
    (refl_6‹U› B_9631 ((f_9634) n_9633)),
  ∀ (A_9635 : L) ->
    ∀ (B_9636 : U) ->
      ∀ (m_9637 : A_9635) ->
        ∀ (n_9638 : A_9635) ->
          ∀ (f_9639 : A_9635 -o B_9636) ->
            (eq_4‹L› A_9635 m_9637 n_9638) ->
              (eq_4‹U› B_9636 ((f_9639) m_9637) ((f_9639) n_9638))
)
Logical.infer_tm(function congr_9642 :
                   ∀ (A_9643 : L) ->
                     ∀ (B_9644 : U) ->
                       ∀ (m_9645 : A_9643) ->
                         ∀ (n_9646 : A_9643) ->
                           ∀ (f_9647 : A_9643 -o B_9644) ->
                             (eq_4‹L› A_9643 m_9645 n_9646) ->
                               (eq_4‹U›
                                 B_9644 ((f_9647) m_9645) ((f_9647) n_9646))
                 | A_9650 B_9651 m_9652 n_9653 f_9654 refl_6 =>
                   (refl_6‹U› B_9651 ((f_9654) n_9653)))
Logical.infer_tm(∀ (A_9656 : L) ->
                   ∀ (B_9657 : U) ->
                     ∀ (m_9658 : A_9656) ->
                       ∀ (n_9659 : A_9656) ->
                         ∀ (f_9660 : A_9656 -o B_9657) ->
                           (eq_4‹L› A_9656 m_9658 n_9659) ->
                             (eq_4‹U›
                               B_9657 ((f_9660) m_9658) ((f_9660) n_9659)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9664 : U) ->
                   ∀ (m_9665 : A_9663) ->
                     ∀ (n_9666 : A_9663) ->
                       ∀ (f_9667 : A_9663 -o B_9664) ->
                         (eq_4‹L› A_9663 m_9665 n_9666) ->
                           (eq_4‹U›
                             B_9664 ((f_9667) m_9665) ((f_9667) n_9666)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_9671 : A_9663) ->
                   ∀ (n_9672 : A_9663) ->
                     ∀ (f_9673 : A_9663 -o B_9670) ->
                       (eq_4‹L› A_9663 m_9671 n_9672) ->
                         (eq_4‹U›
                           B_9670 ((f_9673) m_9671) ((f_9673) n_9672)))
Logical.infer_tm(A_9663)
Logical.infer_tm(∀ (n_9677 : A_9663) ->
                   ∀ (f_9678 : A_9663 -o B_9670) ->
                     (eq_4‹L› A_9663 m_9676 n_9677) ->
                       (eq_4‹U›
                         B_9670 ((f_9678) m_9676) ((f_9678) n_9677)))
Logical.infer_tm(A_9663)
Logical.infer_tm(∀ (f_9682 : A_9663 -o B_9670) ->
                   (eq_4‹L› A_9663 m_9676 n_9681) ->
                     (eq_4‹U› B_9670 ((f_9682) m_9676) ((f_9682) n_9681)))
Logical.infer_tm(A_9663 -o B_9670)
Logical.infer_tm(A_9663)
Logical.infer_tm(B_9670)
Logical.infer_tm((eq_4‹L› A_9663 m_9676 n_9681) ->
                   (eq_4‹U› B_9670 ((f_9685) m_9676) ((f_9685) n_9681)))
Logical.infer_tm((eq_4‹L› A_9663 m_9676 n_9681))
Logical.check_tm( A_9663, L )
Logical.infer_tm(A_9663)
Logical.assert_equal(L, L)
Logical.check_tm( m_9676, A_9663 )
Logical.infer_tm(m_9676)
Logical.assert_equal(A_9663, A_9663)
Logical.check_tm( n_9681, A_9663 )
Logical.infer_tm(n_9681)
Logical.assert_equal(A_9663, A_9663)
Logical.infer_tm((eq_4‹U› B_9670 ((f_9685) m_9676) ((f_9685) n_9681)))
Logical.check_tm( B_9670, U )
Logical.infer_tm(B_9670)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_9685) m_9676), B_9670 )
Logical.infer_tm(((f_9685) m_9676))
Logical.infer_tm(f_9685)
Logical.check_tm( m_9676, A_9663 )
Logical.infer_tm(m_9676)
Logical.assert_equal(A_9663, A_9663)
Logical.assert_equal(B_9670, B_9670)
Logical.check_tm( ((f_9685) n_9681), B_9670 )
Logical.infer_tm(((f_9685) n_9681))
Logical.infer_tm(f_9685)
Logical.check_tm( n_9681, A_9663 )
Logical.infer_tm(n_9681)
Logical.assert_equal(A_9663, A_9663)
Logical.assert_equal(B_9670, B_9670)
Logical.infer_tm(L)
Logical.infer_tm(U)
Logical.infer_tm(A_9695)
Logical.infer_tm(A_9695)
Logical.infer_tm(A_9695 -o B_9703)
Logical.infer_tm(A_9695)
Logical.infer_tm(B_9703)
Logical.infer_tm((eq_4‹L› A_9695 m_9711 n_9719))
Logical.check_tm( A_9695, L )
Logical.infer_tm(A_9695)
Logical.assert_equal(L, L)
Logical.check_tm( m_9711, A_9695 )
Logical.infer_tm(m_9711)
Logical.assert_equal(A_9695, A_9695)
Logical.check_tm( n_9719, A_9695 )
Logical.infer_tm(n_9719)
Logical.assert_equal(A_9695, A_9695)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_9695 #m_9711 #n_9719),
      (eq_4‹L› #A_9695 #m_9711 #m_9711));
    {| eq_pat?(R #A_9695, A_9690 : L)
       eq_pat?(R #B_9703, B_9691 : U)
       eq_pat?(R #m_9711, m_9692 : #A_9695)
       eq_pat?(R #n_9719, n_9693 : #A_9695)
       eq_pat?(R #f_9727, f_9694 : #A_9695 -o #B_9703) ::: [] =>?
         (refl_6‹U› #B_9691 ((#f_9694) #n_9693))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_9695, A_9690 : L)
  eq_pat?(R #B_9703, B_9691 : U)
  eq_pat?(R #m_9711, m_9692 : #A_9695)
  eq_pat?(R #n_9719, n_9693 : #A_9695)
  eq_pat?(R #f_9727, f_9694 : #A_9695 -o #B_9703)
)
unify_global(
  eq_term?( (eq_4‹L› #A_9695 #m_9711 #n_9719),
    (eq_4‹L› #A_9695 #m_9711 #m_9711))
)
simpl_pprbm ~expand:false( #A_9695, #A_9690)
simpl_pprbm ~expand:false( #B_9703, #B_9691)
simpl_pprbm ~expand:false( #m_9711, #m_9692)
simpl_pprbm ~expand:false( #n_9719, #n_9693)
simpl_pprbm ~expand:false( #f_9727, #f_9694)
simpl_pprbm ~expand:false( (eq_4‹L› #A_9695 #m_9711 #n_9719),
  (eq_4‹L› #A_9695 #m_9711 #m_9711))
simpl_pprbm ~expand:false( #A_9695, #A_9695)
simpl_pprbm ~expand:false( #m_9711, #m_9711)
simpl_pprbm ~expand:false( #n_9719, #m_9711)
case_coverage_ok( (refl_6‹U› B_9703 ((f_9727) n_9719)),
  (eq_4‹U› B_9703 ((f_9727) n_9719) ((f_9727) n_9719)))
Logical.check_tm( (refl_6‹U› B_9703 ((f_9727) n_9719)),
  (eq_4‹U› B_9703 ((f_9727) n_9719) ((f_9727) n_9719))
)
Logical.infer_tm((refl_6‹U› B_9703 ((f_9727) n_9719)))
Logical.check_tm( B_9703, U )
Logical.infer_tm(B_9703)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_9727) n_9719), B_9703 )
Logical.infer_tm(((f_9727) n_9719))
Logical.infer_tm(f_9727)
Logical.check_tm( n_9719, A_9695 )
Logical.infer_tm(n_9719)
Logical.assert_equal(A_9695, A_9695)
Logical.assert_equal(B_9703, B_9703)
Logical.assert_equal((eq_4‹U› B_9703 ((f_9727) n_9719) ((f_9727) n_9719)), 
(eq_4‹U› B_9703 ((f_9727) n_9719) ((f_9727) n_9719)))
Logical.assert_equal(∀ (A_9766 : L) ->
                       ∀ (B_9767 : U) ->
                         ∀ (m_9768 : A_9766) ->
                           ∀ (n_9769 : A_9766) ->
                             ∀ (f_9770 : A_9766 -o B_9767) ->
                               (eq_4‹L› A_9766 m_9768 n_9769) ->
                                 (eq_4‹U›
                                   B_9767 ((f_9770) m_9768) ((f_9770) n_9769)), 
∀ (A_9773 : L) ->
  ∀ (B_9774 : U) ->
    ∀ (m_9775 : A_9773) ->
      ∀ (n_9776 : A_9773) ->
        ∀ (f_9777 : A_9773 -o B_9774) ->
          (eq_4‹L› A_9773 m_9775 n_9776) ->
            (eq_4‹U› B_9774 ((f_9777) m_9775) ((f_9777) n_9776)))
Logical.infer_tm(∀ (A_9787 : L) ->
                   ∀ (B_9788 : U) ->
                     ∀ (m_9789 : A_9787) ->
                       ∀ (n_9790 : A_9787) ->
                         ∀ (f_9791 : A_9787 -> B_9788) ->
                           (eq_4‹L› A_9787 m_9789 n_9790) ->
                             (eq_4‹U›
                               B_9788 ((f_9791) m_9789) ((f_9791) n_9790)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9795 : U) ->
                   ∀ (m_9796 : A_9794) ->
                     ∀ (n_9797 : A_9794) ->
                       ∀ (f_9798 : A_9794 -> B_9795) ->
                         (eq_4‹L› A_9794 m_9796 n_9797) ->
                           (eq_4‹U›
                             B_9795 ((f_9798) m_9796) ((f_9798) n_9797)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_9802 : A_9794) ->
                   ∀ (n_9803 : A_9794) ->
                     ∀ (f_9804 : A_9794 -> B_9801) ->
                       (eq_4‹L› A_9794 m_9802 n_9803) ->
                         (eq_4‹U›
                           B_9801 ((f_9804) m_9802) ((f_9804) n_9803)))
Logical.infer_tm(A_9794)
Logical.infer_tm(∀ (n_9808 : A_9794) ->
                   ∀ (f_9809 : A_9794 -> B_9801) ->
                     (eq_4‹L› A_9794 m_9807 n_9808) ->
                       (eq_4‹U›
                         B_9801 ((f_9809) m_9807) ((f_9809) n_9808)))
Logical.infer_tm(A_9794)
Logical.infer_tm(∀ (f_9813 : A_9794 -> B_9801) ->
                   (eq_4‹L› A_9794 m_9807 n_9812) ->
                     (eq_4‹U› B_9801 ((f_9813) m_9807) ((f_9813) n_9812)))
Logical.infer_tm(A_9794 -> B_9801)
Logical.infer_tm(A_9794)
Logical.infer_tm(B_9801)
Logical.infer_tm((eq_4‹L› A_9794 m_9807 n_9812) ->
                   (eq_4‹U› B_9801 ((f_9816) m_9807) ((f_9816) n_9812)))
Logical.infer_tm((eq_4‹L› A_9794 m_9807 n_9812))
Logical.check_tm( A_9794, L )
Logical.infer_tm(A_9794)
Logical.assert_equal(L, L)
Logical.check_tm( m_9807, A_9794 )
Logical.infer_tm(m_9807)
Logical.assert_equal(A_9794, A_9794)
Logical.check_tm( n_9812, A_9794 )
Logical.infer_tm(n_9812)
Logical.assert_equal(A_9794, A_9794)
Logical.infer_tm((eq_4‹U› B_9801 ((f_9816) m_9807) ((f_9816) n_9812)))
Logical.check_tm( B_9801, U )
Logical.infer_tm(B_9801)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_9816) m_9807), B_9801 )
Logical.infer_tm(((f_9816) m_9807))
Logical.infer_tm(f_9816)
Logical.check_tm( m_9807, A_9794 )
Logical.infer_tm(m_9807)
Logical.assert_equal(A_9794, A_9794)
Logical.assert_equal(B_9801, B_9801)
Logical.check_tm( ((f_9816) n_9812), B_9801 )
Logical.infer_tm(((f_9816) n_9812))
Logical.infer_tm(f_9816)
Logical.check_tm( n_9812, A_9794 )
Logical.infer_tm(n_9812)
Logical.assert_equal(A_9794, A_9794)
Logical.assert_equal(B_9801, B_9801)
Logical.check_tm(
  function congr_9821 :
    ∀ (A_9822 : L) ->
      ∀ (B_9823 : U) ->
        ∀ (m_9824 : A_9822) ->
          ∀ (n_9825 : A_9822) ->
            ∀ (f_9826 : A_9822 -> B_9823) ->
              (eq_4‹L› A_9822 m_9824 n_9825) ->
                (eq_4‹U› B_9823 ((f_9826) m_9824) ((f_9826) n_9825))
  | A_9829 B_9830 m_9831 n_9832 f_9833 refl_6 =>
    (refl_6‹U› B_9830 ((f_9833) n_9832)),
  ∀ (A_9834 : L) ->
    ∀ (B_9835 : U) ->
      ∀ (m_9836 : A_9834) ->
        ∀ (n_9837 : A_9834) ->
          ∀ (f_9838 : A_9834 -> B_9835) ->
            (eq_4‹L› A_9834 m_9836 n_9837) ->
              (eq_4‹U› B_9835 ((f_9838) m_9836) ((f_9838) n_9837))
)
Logical.infer_tm(function congr_9841 :
                   ∀ (A_9842 : L) ->
                     ∀ (B_9843 : U) ->
                       ∀ (m_9844 : A_9842) ->
                         ∀ (n_9845 : A_9842) ->
                           ∀ (f_9846 : A_9842 -> B_9843) ->
                             (eq_4‹L› A_9842 m_9844 n_9845) ->
                               (eq_4‹U›
                                 B_9843 ((f_9846) m_9844) ((f_9846) n_9845))
                 | A_9849 B_9850 m_9851 n_9852 f_9853 refl_6 =>
                   (refl_6‹U› B_9850 ((f_9853) n_9852)))
Logical.infer_tm(∀ (A_9855 : L) ->
                   ∀ (B_9856 : U) ->
                     ∀ (m_9857 : A_9855) ->
                       ∀ (n_9858 : A_9855) ->
                         ∀ (f_9859 : A_9855 -> B_9856) ->
                           (eq_4‹L› A_9855 m_9857 n_9858) ->
                             (eq_4‹U›
                               B_9856 ((f_9859) m_9857) ((f_9859) n_9858)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (B_9863 : U) ->
                   ∀ (m_9864 : A_9862) ->
                     ∀ (n_9865 : A_9862) ->
                       ∀ (f_9866 : A_9862 -> B_9863) ->
                         (eq_4‹L› A_9862 m_9864 n_9865) ->
                           (eq_4‹U›
                             B_9863 ((f_9866) m_9864) ((f_9866) n_9865)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_9870 : A_9862) ->
                   ∀ (n_9871 : A_9862) ->
                     ∀ (f_9872 : A_9862 -> B_9869) ->
                       (eq_4‹L› A_9862 m_9870 n_9871) ->
                         (eq_4‹U›
                           B_9869 ((f_9872) m_9870) ((f_9872) n_9871)))
Logical.infer_tm(A_9862)
Logical.infer_tm(∀ (n_9876 : A_9862) ->
                   ∀ (f_9877 : A_9862 -> B_9869) ->
                     (eq_4‹L› A_9862 m_9875 n_9876) ->
                       (eq_4‹U›
                         B_9869 ((f_9877) m_9875) ((f_9877) n_9876)))
Logical.infer_tm(A_9862)
Logical.infer_tm(∀ (f_9881 : A_9862 -> B_9869) ->
                   (eq_4‹L› A_9862 m_9875 n_9880) ->
                     (eq_4‹U› B_9869 ((f_9881) m_9875) ((f_9881) n_9880)))
Logical.infer_tm(A_9862 -> B_9869)
Logical.infer_tm(A_9862)
Logical.infer_tm(B_9869)
Logical.infer_tm((eq_4‹L› A_9862 m_9875 n_9880) ->
                   (eq_4‹U› B_9869 ((f_9884) m_9875) ((f_9884) n_9880)))
Logical.infer_tm((eq_4‹L› A_9862 m_9875 n_9880))
Logical.check_tm( A_9862, L )
Logical.infer_tm(A_9862)
Logical.assert_equal(L, L)
Logical.check_tm( m_9875, A_9862 )
Logical.infer_tm(m_9875)
Logical.assert_equal(A_9862, A_9862)
Logical.check_tm( n_9880, A_9862 )
Logical.infer_tm(n_9880)
Logical.assert_equal(A_9862, A_9862)
Logical.infer_tm((eq_4‹U› B_9869 ((f_9884) m_9875) ((f_9884) n_9880)))
Logical.check_tm( B_9869, U )
Logical.infer_tm(B_9869)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_9884) m_9875), B_9869 )
Logical.infer_tm(((f_9884) m_9875))
Logical.infer_tm(f_9884)
Logical.check_tm( m_9875, A_9862 )
Logical.infer_tm(m_9875)
Logical.assert_equal(A_9862, A_9862)
Logical.assert_equal(B_9869, B_9869)
Logical.check_tm( ((f_9884) n_9880), B_9869 )
Logical.infer_tm(((f_9884) n_9880))
Logical.infer_tm(f_9884)
Logical.check_tm( n_9880, A_9862 )
Logical.infer_tm(n_9880)
Logical.assert_equal(A_9862, A_9862)
Logical.assert_equal(B_9869, B_9869)
Logical.infer_tm(L)
Logical.infer_tm(U)
Logical.infer_tm(A_9894)
Logical.infer_tm(A_9894)
Logical.infer_tm(A_9894 -> B_9902)
Logical.infer_tm(A_9894)
Logical.infer_tm(B_9902)
Logical.infer_tm((eq_4‹L› A_9894 m_9910 n_9918))
Logical.check_tm( A_9894, L )
Logical.infer_tm(A_9894)
Logical.assert_equal(L, L)
Logical.check_tm( m_9910, A_9894 )
Logical.infer_tm(m_9910)
Logical.assert_equal(A_9894, A_9894)
Logical.check_tm( n_9918, A_9894 )
Logical.infer_tm(n_9918)
Logical.assert_equal(A_9894, A_9894)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹L› #A_9894 #m_9910 #n_9918),
      (eq_4‹L› #A_9894 #m_9910 #m_9910));
    {| eq_pat?(R #A_9894, A_9889 : L)
       eq_pat?(R #B_9902, B_9890 : U)
       eq_pat?(R #m_9910, m_9891 : #A_9894)
       eq_pat?(R #n_9918, n_9892 : #A_9894)
       eq_pat?(R #f_9926, f_9893 : #A_9894 -> #B_9902) ::: [] =>?
         (refl_6‹U› #B_9890 ((#f_9893) #n_9892))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_9894, A_9889 : L)
  eq_pat?(R #B_9902, B_9890 : U)
  eq_pat?(R #m_9910, m_9891 : #A_9894)
  eq_pat?(R #n_9918, n_9892 : #A_9894)
  eq_pat?(R #f_9926, f_9893 : #A_9894 -> #B_9902)
)
unify_global(
  eq_term?( (eq_4‹L› #A_9894 #m_9910 #n_9918),
    (eq_4‹L› #A_9894 #m_9910 #m_9910))
)
simpl_pprbm ~expand:false( #A_9894, #A_9889)
simpl_pprbm ~expand:false( #B_9902, #B_9890)
simpl_pprbm ~expand:false( #m_9910, #m_9891)
simpl_pprbm ~expand:false( #n_9918, #n_9892)
simpl_pprbm ~expand:false( #f_9926, #f_9893)
simpl_pprbm ~expand:false( (eq_4‹L› #A_9894 #m_9910 #n_9918),
  (eq_4‹L› #A_9894 #m_9910 #m_9910))
simpl_pprbm ~expand:false( #A_9894, #A_9894)
simpl_pprbm ~expand:false( #m_9910, #m_9910)
simpl_pprbm ~expand:false( #n_9918, #m_9910)
case_coverage_ok( (refl_6‹U› B_9902 ((f_9926) n_9918)),
  (eq_4‹U› B_9902 ((f_9926) n_9918) ((f_9926) n_9918)))
Logical.check_tm( (refl_6‹U› B_9902 ((f_9926) n_9918)),
  (eq_4‹U› B_9902 ((f_9926) n_9918) ((f_9926) n_9918))
)
Logical.infer_tm((refl_6‹U› B_9902 ((f_9926) n_9918)))
Logical.check_tm( B_9902, U )
Logical.infer_tm(B_9902)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_9926) n_9918), B_9902 )
Logical.infer_tm(((f_9926) n_9918))
Logical.infer_tm(f_9926)
Logical.check_tm( n_9918, A_9894 )
Logical.infer_tm(n_9918)
Logical.assert_equal(A_9894, A_9894)
Logical.assert_equal(B_9902, B_9902)
Logical.assert_equal((eq_4‹U› B_9902 ((f_9926) n_9918) ((f_9926) n_9918)), 
(eq_4‹U› B_9902 ((f_9926) n_9918) ((f_9926) n_9918)))
Logical.assert_equal(∀ (A_9965 : L) ->
                       ∀ (B_9966 : U) ->
                         ∀ (m_9967 : A_9965) ->
                           ∀ (n_9968 : A_9965) ->
                             ∀ (f_9969 : A_9965 -> B_9966) ->
                               (eq_4‹L› A_9965 m_9967 n_9968) ->
                                 (eq_4‹U›
                                   B_9966 ((f_9969) m_9967) ((f_9969) n_9968)), 
∀ (A_9972 : L) ->
  ∀ (B_9973 : U) ->
    ∀ (m_9974 : A_9972) ->
      ∀ (n_9975 : A_9972) ->
        ∀ (f_9976 : A_9972 -> B_9973) ->
          (eq_4‹L› A_9972 m_9974 n_9975) ->
            (eq_4‹U› B_9973 ((f_9976) m_9974) ((f_9976) n_9975)))
Logical.infer_tm(∀ (A_9986 : U) ->
                   ∀ (B_9987 : L) ->
                     ∀ (m_9988 : A_9986) ->
                       ∀ (n_9989 : A_9986) ->
                         ∀ (f_9990 : A_9986 -o B_9987) ->
                           (eq_4‹U› A_9986 m_9988 n_9989) ->
                             (eq_4‹L›
                               B_9987 ((f_9990) m_9988) ((f_9990) n_9989)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_9994 : L) ->
                   ∀ (m_9995 : A_9993) ->
                     ∀ (n_9996 : A_9993) ->
                       ∀ (f_9997 : A_9993 -o B_9994) ->
                         (eq_4‹U› A_9993 m_9995 n_9996) ->
                           (eq_4‹L›
                             B_9994 ((f_9997) m_9995) ((f_9997) n_9996)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_10001 : A_9993) ->
                   ∀ (n_10002 : A_9993) ->
                     ∀ (f_10003 : A_9993 -o B_10000) ->
                       (eq_4‹U› A_9993 m_10001 n_10002) ->
                         (eq_4‹L›
                           B_10000 ((f_10003) m_10001) ((f_10003) n_10002)))
Logical.infer_tm(A_9993)
Logical.infer_tm(∀ (n_10007 : A_9993) ->
                   ∀ (f_10008 : A_9993 -o B_10000) ->
                     (eq_4‹U› A_9993 m_10006 n_10007) ->
                       (eq_4‹L›
                         B_10000 ((f_10008) m_10006) ((f_10008) n_10007)))
Logical.infer_tm(A_9993)
Logical.infer_tm(∀ (f_10012 : A_9993 -o B_10000) ->
                   (eq_4‹U› A_9993 m_10006 n_10011) ->
                     (eq_4‹L›
                       B_10000 ((f_10012) m_10006) ((f_10012) n_10011)))
Logical.infer_tm(A_9993 -o B_10000)
Logical.infer_tm(A_9993)
Logical.infer_tm(B_10000)
Logical.infer_tm((eq_4‹U› A_9993 m_10006 n_10011) ->
                   (eq_4‹L›
                     B_10000 ((f_10015) m_10006) ((f_10015) n_10011)))
Logical.infer_tm((eq_4‹U› A_9993 m_10006 n_10011))
Logical.check_tm( A_9993, U )
Logical.infer_tm(A_9993)
Logical.assert_equal(U, U)
Logical.check_tm( m_10006, A_9993 )
Logical.infer_tm(m_10006)
Logical.assert_equal(A_9993, A_9993)
Logical.check_tm( n_10011, A_9993 )
Logical.infer_tm(n_10011)
Logical.assert_equal(A_9993, A_9993)
Logical.infer_tm((eq_4‹L›
                   B_10000 ((f_10015) m_10006) ((f_10015) n_10011)))
Logical.check_tm( B_10000, L )
Logical.infer_tm(B_10000)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_10015) m_10006), B_10000 )
Logical.infer_tm(((f_10015) m_10006))
Logical.infer_tm(f_10015)
Logical.check_tm( m_10006, A_9993 )
Logical.infer_tm(m_10006)
Logical.assert_equal(A_9993, A_9993)
Logical.assert_equal(B_10000, B_10000)
Logical.check_tm( ((f_10015) n_10011), B_10000 )
Logical.infer_tm(((f_10015) n_10011))
Logical.infer_tm(f_10015)
Logical.check_tm( n_10011, A_9993 )
Logical.infer_tm(n_10011)
Logical.assert_equal(A_9993, A_9993)
Logical.assert_equal(B_10000, B_10000)
Logical.check_tm(
  function congr_10020 :
    ∀ (A_10021 : U) ->
      ∀ (B_10022 : L) ->
        ∀ (m_10023 : A_10021) ->
          ∀ (n_10024 : A_10021) ->
            ∀ (f_10025 : A_10021 -o B_10022) ->
              (eq_4‹U› A_10021 m_10023 n_10024) ->
                (eq_4‹L› B_10022 ((f_10025) m_10023) ((f_10025) n_10024))
  | A_10028 B_10029 m_10030 n_10031 f_10032 refl_6 =>
    (refl_6‹L› B_10029 ((f_10032) n_10031)),
  ∀ (A_10033 : U) ->
    ∀ (B_10034 : L) ->
      ∀ (m_10035 : A_10033) ->
        ∀ (n_10036 : A_10033) ->
          ∀ (f_10037 : A_10033 -o B_10034) ->
            (eq_4‹U› A_10033 m_10035 n_10036) ->
              (eq_4‹L› B_10034 ((f_10037) m_10035) ((f_10037) n_10036))
)
Logical.infer_tm(function congr_10040 :
                   ∀ (A_10041 : U) ->
                     ∀ (B_10042 : L) ->
                       ∀ (m_10043 : A_10041) ->
                         ∀ (n_10044 : A_10041) ->
                           ∀ (f_10045 : A_10041 -o B_10042) ->
                             (eq_4‹U› A_10041 m_10043 n_10044) ->
                               (eq_4‹L›
                                 B_10042 ((f_10045) m_10043)
                                 ((f_10045) n_10044))
                 | A_10048 B_10049 m_10050 n_10051 f_10052 refl_6 =>
                   (refl_6‹L› B_10049 ((f_10052) n_10051)))
Logical.infer_tm(∀ (A_10054 : U) ->
                   ∀ (B_10055 : L) ->
                     ∀ (m_10056 : A_10054) ->
                       ∀ (n_10057 : A_10054) ->
                         ∀ (f_10058 : A_10054 -o B_10055) ->
                           (eq_4‹U› A_10054 m_10056 n_10057) ->
                             (eq_4‹L›
                               B_10055 ((f_10058) m_10056)
                               ((f_10058) n_10057)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10062 : L) ->
                   ∀ (m_10063 : A_10061) ->
                     ∀ (n_10064 : A_10061) ->
                       ∀ (f_10065 : A_10061 -o B_10062) ->
                         (eq_4‹U› A_10061 m_10063 n_10064) ->
                           (eq_4‹L›
                             B_10062 ((f_10065) m_10063) ((f_10065) n_10064)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_10069 : A_10061) ->
                   ∀ (n_10070 : A_10061) ->
                     ∀ (f_10071 : A_10061 -o B_10068) ->
                       (eq_4‹U› A_10061 m_10069 n_10070) ->
                         (eq_4‹L›
                           B_10068 ((f_10071) m_10069) ((f_10071) n_10070)))
Logical.infer_tm(A_10061)
Logical.infer_tm(∀ (n_10075 : A_10061) ->
                   ∀ (f_10076 : A_10061 -o B_10068) ->
                     (eq_4‹U› A_10061 m_10074 n_10075) ->
                       (eq_4‹L›
                         B_10068 ((f_10076) m_10074) ((f_10076) n_10075)))
Logical.infer_tm(A_10061)
Logical.infer_tm(∀ (f_10080 : A_10061 -o B_10068) ->
                   (eq_4‹U› A_10061 m_10074 n_10079) ->
                     (eq_4‹L›
                       B_10068 ((f_10080) m_10074) ((f_10080) n_10079)))
Logical.infer_tm(A_10061 -o B_10068)
Logical.infer_tm(A_10061)
Logical.infer_tm(B_10068)
Logical.infer_tm((eq_4‹U› A_10061 m_10074 n_10079) ->
                   (eq_4‹L›
                     B_10068 ((f_10083) m_10074) ((f_10083) n_10079)))
Logical.infer_tm((eq_4‹U› A_10061 m_10074 n_10079))
Logical.check_tm( A_10061, U )
Logical.infer_tm(A_10061)
Logical.assert_equal(U, U)
Logical.check_tm( m_10074, A_10061 )
Logical.infer_tm(m_10074)
Logical.assert_equal(A_10061, A_10061)
Logical.check_tm( n_10079, A_10061 )
Logical.infer_tm(n_10079)
Logical.assert_equal(A_10061, A_10061)
Logical.infer_tm((eq_4‹L›
                   B_10068 ((f_10083) m_10074) ((f_10083) n_10079)))
Logical.check_tm( B_10068, L )
Logical.infer_tm(B_10068)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_10083) m_10074), B_10068 )
Logical.infer_tm(((f_10083) m_10074))
Logical.infer_tm(f_10083)
Logical.check_tm( m_10074, A_10061 )
Logical.infer_tm(m_10074)
Logical.assert_equal(A_10061, A_10061)
Logical.assert_equal(B_10068, B_10068)
Logical.check_tm( ((f_10083) n_10079), B_10068 )
Logical.infer_tm(((f_10083) n_10079))
Logical.infer_tm(f_10083)
Logical.check_tm( n_10079, A_10061 )
Logical.infer_tm(n_10079)
Logical.assert_equal(A_10061, A_10061)
Logical.assert_equal(B_10068, B_10068)
Logical.infer_tm(U)
Logical.infer_tm(L)
Logical.infer_tm(A_10093)
Logical.infer_tm(A_10093)
Logical.infer_tm(A_10093 -o B_10101)
Logical.infer_tm(A_10093)
Logical.infer_tm(B_10101)
Logical.infer_tm((eq_4‹U› A_10093 m_10109 n_10117))
Logical.check_tm( A_10093, U )
Logical.infer_tm(A_10093)
Logical.assert_equal(U, U)
Logical.check_tm( m_10109, A_10093 )
Logical.infer_tm(m_10109)
Logical.assert_equal(A_10093, A_10093)
Logical.check_tm( n_10117, A_10093 )
Logical.infer_tm(n_10117)
Logical.assert_equal(A_10093, A_10093)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_10093 #m_10109 #n_10117),
      (eq_4‹U› #A_10093 #m_10109 #m_10109));
    {| eq_pat?(R #A_10093, A_10088 : U)
       eq_pat?(R #B_10101, B_10089 : L)
       eq_pat?(R #m_10109, m_10090 : #A_10093)
       eq_pat?(R #n_10117, n_10091 : #A_10093)
       eq_pat?(R #f_10125, f_10092 : #A_10093 -o #B_10101) ::: [] =>?
         (refl_6‹L› #B_10089 ((#f_10092) #n_10091))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_10093, A_10088 : U)
  eq_pat?(R #B_10101, B_10089 : L)
  eq_pat?(R #m_10109, m_10090 : #A_10093)
  eq_pat?(R #n_10117, n_10091 : #A_10093)
  eq_pat?(R #f_10125, f_10092 : #A_10093 -o #B_10101)
)
unify_global(
  eq_term?( (eq_4‹U› #A_10093 #m_10109 #n_10117),
    (eq_4‹U› #A_10093 #m_10109 #m_10109))
)
simpl_pprbm ~expand:false( #A_10093, #A_10088)
simpl_pprbm ~expand:false( #B_10101, #B_10089)
simpl_pprbm ~expand:false( #m_10109, #m_10090)
simpl_pprbm ~expand:false( #n_10117, #n_10091)
simpl_pprbm ~expand:false( #f_10125, #f_10092)
simpl_pprbm ~expand:false( (eq_4‹U› #A_10093 #m_10109 #n_10117),
  (eq_4‹U› #A_10093 #m_10109 #m_10109))
simpl_pprbm ~expand:false( #A_10093, #A_10093)
simpl_pprbm ~expand:false( #m_10109, #m_10109)
simpl_pprbm ~expand:false( #n_10117, #m_10109)
case_coverage_ok( (refl_6‹L› B_10101 ((f_10125) n_10117)),
  (eq_4‹L› B_10101 ((f_10125) n_10117) ((f_10125) n_10117)))
Logical.check_tm( (refl_6‹L› B_10101 ((f_10125) n_10117)),
  (eq_4‹L› B_10101 ((f_10125) n_10117) ((f_10125) n_10117))
)
Logical.infer_tm((refl_6‹L› B_10101 ((f_10125) n_10117)))
Logical.check_tm( B_10101, L )
Logical.infer_tm(B_10101)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_10125) n_10117), B_10101 )
Logical.infer_tm(((f_10125) n_10117))
Logical.infer_tm(f_10125)
Logical.check_tm( n_10117, A_10093 )
Logical.infer_tm(n_10117)
Logical.assert_equal(A_10093, A_10093)
Logical.assert_equal(B_10101, B_10101)
Logical.assert_equal((eq_4‹L›
                       B_10101 ((f_10125) n_10117) ((f_10125) n_10117)), 
(eq_4‹L› B_10101 ((f_10125) n_10117) ((f_10125) n_10117)))
Logical.assert_equal(∀ (A_10164 : U) ->
                       ∀ (B_10165 : L) ->
                         ∀ (m_10166 : A_10164) ->
                           ∀ (n_10167 : A_10164) ->
                             ∀ (f_10168 : A_10164 -o B_10165) ->
                               (eq_4‹U› A_10164 m_10166 n_10167) ->
                                 (eq_4‹L›
                                   B_10165 ((f_10168) m_10166)
                                   ((f_10168) n_10167)), ∀ (A_10171 : U) ->
                                                           ∀ (B_10172 :
                                                             L) ->
                                                             ∀ (m_10173 :
                                                               A_10171) ->
                                                               ∀ (n_10174 :
                                                                 A_10171) ->
                                                                 ∀ (f_10175 :
                                                                   A_10171 -o
                                                                    B_10172) ->
                                                                   (eq_4‹U›
                                                                    A_10171
                                                                    m_10173
                                                                    n_10174) ->
                                                                    (eq_4‹L›
                                                                    B_10172
                                                                    ((f_10175)
                                                                    m_10173)
                                                                    ((f_10175)
                                                                    n_10174)))
Logical.infer_tm(∀ (A_10185 : U) ->
                   ∀ (B_10186 : L) ->
                     ∀ (m_10187 : A_10185) ->
                       ∀ (n_10188 : A_10185) ->
                         ∀ (f_10189 : A_10185 -> B_10186) ->
                           (eq_4‹U› A_10185 m_10187 n_10188) ->
                             (eq_4‹L›
                               B_10186 ((f_10189) m_10187)
                               ((f_10189) n_10188)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10193 : L) ->
                   ∀ (m_10194 : A_10192) ->
                     ∀ (n_10195 : A_10192) ->
                       ∀ (f_10196 : A_10192 -> B_10193) ->
                         (eq_4‹U› A_10192 m_10194 n_10195) ->
                           (eq_4‹L›
                             B_10193 ((f_10196) m_10194) ((f_10196) n_10195)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_10200 : A_10192) ->
                   ∀ (n_10201 : A_10192) ->
                     ∀ (f_10202 : A_10192 -> B_10199) ->
                       (eq_4‹U› A_10192 m_10200 n_10201) ->
                         (eq_4‹L›
                           B_10199 ((f_10202) m_10200) ((f_10202) n_10201)))
Logical.infer_tm(A_10192)
Logical.infer_tm(∀ (n_10206 : A_10192) ->
                   ∀ (f_10207 : A_10192 -> B_10199) ->
                     (eq_4‹U› A_10192 m_10205 n_10206) ->
                       (eq_4‹L›
                         B_10199 ((f_10207) m_10205) ((f_10207) n_10206)))
Logical.infer_tm(A_10192)
Logical.infer_tm(∀ (f_10211 : A_10192 -> B_10199) ->
                   (eq_4‹U› A_10192 m_10205 n_10210) ->
                     (eq_4‹L›
                       B_10199 ((f_10211) m_10205) ((f_10211) n_10210)))
Logical.infer_tm(A_10192 -> B_10199)
Logical.infer_tm(A_10192)
Logical.infer_tm(B_10199)
Logical.infer_tm((eq_4‹U› A_10192 m_10205 n_10210) ->
                   (eq_4‹L›
                     B_10199 ((f_10214) m_10205) ((f_10214) n_10210)))
Logical.infer_tm((eq_4‹U› A_10192 m_10205 n_10210))
Logical.check_tm( A_10192, U )
Logical.infer_tm(A_10192)
Logical.assert_equal(U, U)
Logical.check_tm( m_10205, A_10192 )
Logical.infer_tm(m_10205)
Logical.assert_equal(A_10192, A_10192)
Logical.check_tm( n_10210, A_10192 )
Logical.infer_tm(n_10210)
Logical.assert_equal(A_10192, A_10192)
Logical.infer_tm((eq_4‹L›
                   B_10199 ((f_10214) m_10205) ((f_10214) n_10210)))
Logical.check_tm( B_10199, L )
Logical.infer_tm(B_10199)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_10214) m_10205), B_10199 )
Logical.infer_tm(((f_10214) m_10205))
Logical.infer_tm(f_10214)
Logical.check_tm( m_10205, A_10192 )
Logical.infer_tm(m_10205)
Logical.assert_equal(A_10192, A_10192)
Logical.assert_equal(B_10199, B_10199)
Logical.check_tm( ((f_10214) n_10210), B_10199 )
Logical.infer_tm(((f_10214) n_10210))
Logical.infer_tm(f_10214)
Logical.check_tm( n_10210, A_10192 )
Logical.infer_tm(n_10210)
Logical.assert_equal(A_10192, A_10192)
Logical.assert_equal(B_10199, B_10199)
Logical.check_tm(
  function congr_10219 :
    ∀ (A_10220 : U) ->
      ∀ (B_10221 : L) ->
        ∀ (m_10222 : A_10220) ->
          ∀ (n_10223 : A_10220) ->
            ∀ (f_10224 : A_10220 -> B_10221) ->
              (eq_4‹U› A_10220 m_10222 n_10223) ->
                (eq_4‹L› B_10221 ((f_10224) m_10222) ((f_10224) n_10223))
  | A_10227 B_10228 m_10229 n_10230 f_10231 refl_6 =>
    (refl_6‹L› B_10228 ((f_10231) n_10230)),
  ∀ (A_10232 : U) ->
    ∀ (B_10233 : L) ->
      ∀ (m_10234 : A_10232) ->
        ∀ (n_10235 : A_10232) ->
          ∀ (f_10236 : A_10232 -> B_10233) ->
            (eq_4‹U› A_10232 m_10234 n_10235) ->
              (eq_4‹L› B_10233 ((f_10236) m_10234) ((f_10236) n_10235))
)
Logical.infer_tm(function congr_10239 :
                   ∀ (A_10240 : U) ->
                     ∀ (B_10241 : L) ->
                       ∀ (m_10242 : A_10240) ->
                         ∀ (n_10243 : A_10240) ->
                           ∀ (f_10244 : A_10240 -> B_10241) ->
                             (eq_4‹U› A_10240 m_10242 n_10243) ->
                               (eq_4‹L›
                                 B_10241 ((f_10244) m_10242)
                                 ((f_10244) n_10243))
                 | A_10247 B_10248 m_10249 n_10250 f_10251 refl_6 =>
                   (refl_6‹L› B_10248 ((f_10251) n_10250)))
Logical.infer_tm(∀ (A_10253 : U) ->
                   ∀ (B_10254 : L) ->
                     ∀ (m_10255 : A_10253) ->
                       ∀ (n_10256 : A_10253) ->
                         ∀ (f_10257 : A_10253 -> B_10254) ->
                           (eq_4‹U› A_10253 m_10255 n_10256) ->
                             (eq_4‹L›
                               B_10254 ((f_10257) m_10255)
                               ((f_10257) n_10256)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10261 : L) ->
                   ∀ (m_10262 : A_10260) ->
                     ∀ (n_10263 : A_10260) ->
                       ∀ (f_10264 : A_10260 -> B_10261) ->
                         (eq_4‹U› A_10260 m_10262 n_10263) ->
                           (eq_4‹L›
                             B_10261 ((f_10264) m_10262) ((f_10264) n_10263)))
Logical.infer_tm(L)
Logical.infer_tm(∀ (m_10268 : A_10260) ->
                   ∀ (n_10269 : A_10260) ->
                     ∀ (f_10270 : A_10260 -> B_10267) ->
                       (eq_4‹U› A_10260 m_10268 n_10269) ->
                         (eq_4‹L›
                           B_10267 ((f_10270) m_10268) ((f_10270) n_10269)))
Logical.infer_tm(A_10260)
Logical.infer_tm(∀ (n_10274 : A_10260) ->
                   ∀ (f_10275 : A_10260 -> B_10267) ->
                     (eq_4‹U› A_10260 m_10273 n_10274) ->
                       (eq_4‹L›
                         B_10267 ((f_10275) m_10273) ((f_10275) n_10274)))
Logical.infer_tm(A_10260)
Logical.infer_tm(∀ (f_10279 : A_10260 -> B_10267) ->
                   (eq_4‹U› A_10260 m_10273 n_10278) ->
                     (eq_4‹L›
                       B_10267 ((f_10279) m_10273) ((f_10279) n_10278)))
Logical.infer_tm(A_10260 -> B_10267)
Logical.infer_tm(A_10260)
Logical.infer_tm(B_10267)
Logical.infer_tm((eq_4‹U› A_10260 m_10273 n_10278) ->
                   (eq_4‹L›
                     B_10267 ((f_10282) m_10273) ((f_10282) n_10278)))
Logical.infer_tm((eq_4‹U› A_10260 m_10273 n_10278))
Logical.check_tm( A_10260, U )
Logical.infer_tm(A_10260)
Logical.assert_equal(U, U)
Logical.check_tm( m_10273, A_10260 )
Logical.infer_tm(m_10273)
Logical.assert_equal(A_10260, A_10260)
Logical.check_tm( n_10278, A_10260 )
Logical.infer_tm(n_10278)
Logical.assert_equal(A_10260, A_10260)
Logical.infer_tm((eq_4‹L›
                   B_10267 ((f_10282) m_10273) ((f_10282) n_10278)))
Logical.check_tm( B_10267, L )
Logical.infer_tm(B_10267)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_10282) m_10273), B_10267 )
Logical.infer_tm(((f_10282) m_10273))
Logical.infer_tm(f_10282)
Logical.check_tm( m_10273, A_10260 )
Logical.infer_tm(m_10273)
Logical.assert_equal(A_10260, A_10260)
Logical.assert_equal(B_10267, B_10267)
Logical.check_tm( ((f_10282) n_10278), B_10267 )
Logical.infer_tm(((f_10282) n_10278))
Logical.infer_tm(f_10282)
Logical.check_tm( n_10278, A_10260 )
Logical.infer_tm(n_10278)
Logical.assert_equal(A_10260, A_10260)
Logical.assert_equal(B_10267, B_10267)
Logical.infer_tm(U)
Logical.infer_tm(L)
Logical.infer_tm(A_10292)
Logical.infer_tm(A_10292)
Logical.infer_tm(A_10292 -> B_10300)
Logical.infer_tm(A_10292)
Logical.infer_tm(B_10300)
Logical.infer_tm((eq_4‹U› A_10292 m_10308 n_10316))
Logical.check_tm( A_10292, U )
Logical.infer_tm(A_10292)
Logical.assert_equal(U, U)
Logical.check_tm( m_10308, A_10292 )
Logical.infer_tm(m_10308)
Logical.assert_equal(A_10292, A_10292)
Logical.check_tm( n_10316, A_10292 )
Logical.infer_tm(n_10316)
Logical.assert_equal(A_10292, A_10292)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_10292 #m_10308 #n_10316),
      (eq_4‹U› #A_10292 #m_10308 #m_10308));
    {| eq_pat?(R #A_10292, A_10287 : U)
       eq_pat?(R #B_10300, B_10288 : L)
       eq_pat?(R #m_10308, m_10289 : #A_10292)
       eq_pat?(R #n_10316, n_10290 : #A_10292)
       eq_pat?(R #f_10324, f_10291 : #A_10292 -> #B_10300) ::: [] =>?
         (refl_6‹L› #B_10288 ((#f_10291) #n_10290))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_10292, A_10287 : U)
  eq_pat?(R #B_10300, B_10288 : L)
  eq_pat?(R #m_10308, m_10289 : #A_10292)
  eq_pat?(R #n_10316, n_10290 : #A_10292)
  eq_pat?(R #f_10324, f_10291 : #A_10292 -> #B_10300)
)
unify_global(
  eq_term?( (eq_4‹U› #A_10292 #m_10308 #n_10316),
    (eq_4‹U› #A_10292 #m_10308 #m_10308))
)
simpl_pprbm ~expand:false( #A_10292, #A_10287)
simpl_pprbm ~expand:false( #B_10300, #B_10288)
simpl_pprbm ~expand:false( #m_10308, #m_10289)
simpl_pprbm ~expand:false( #n_10316, #n_10290)
simpl_pprbm ~expand:false( #f_10324, #f_10291)
simpl_pprbm ~expand:false( (eq_4‹U› #A_10292 #m_10308 #n_10316),
  (eq_4‹U› #A_10292 #m_10308 #m_10308))
simpl_pprbm ~expand:false( #A_10292, #A_10292)
simpl_pprbm ~expand:false( #m_10308, #m_10308)
simpl_pprbm ~expand:false( #n_10316, #m_10308)
case_coverage_ok( (refl_6‹L› B_10300 ((f_10324) n_10316)),
  (eq_4‹L› B_10300 ((f_10324) n_10316) ((f_10324) n_10316)))
Logical.check_tm( (refl_6‹L› B_10300 ((f_10324) n_10316)),
  (eq_4‹L› B_10300 ((f_10324) n_10316) ((f_10324) n_10316))
)
Logical.infer_tm((refl_6‹L› B_10300 ((f_10324) n_10316)))
Logical.check_tm( B_10300, L )
Logical.infer_tm(B_10300)
Logical.assert_equal(L, L)
Logical.check_tm( ((f_10324) n_10316), B_10300 )
Logical.infer_tm(((f_10324) n_10316))
Logical.infer_tm(f_10324)
Logical.check_tm( n_10316, A_10292 )
Logical.infer_tm(n_10316)
Logical.assert_equal(A_10292, A_10292)
Logical.assert_equal(B_10300, B_10300)
Logical.assert_equal((eq_4‹L›
                       B_10300 ((f_10324) n_10316) ((f_10324) n_10316)), 
(eq_4‹L› B_10300 ((f_10324) n_10316) ((f_10324) n_10316)))
Logical.assert_equal(∀ (A_10363 : U) ->
                       ∀ (B_10364 : L) ->
                         ∀ (m_10365 : A_10363) ->
                           ∀ (n_10366 : A_10363) ->
                             ∀ (f_10367 : A_10363 -> B_10364) ->
                               (eq_4‹U› A_10363 m_10365 n_10366) ->
                                 (eq_4‹L›
                                   B_10364 ((f_10367) m_10365)
                                   ((f_10367) n_10366)), ∀ (A_10370 : U) ->
                                                           ∀ (B_10371 :
                                                             L) ->
                                                             ∀ (m_10372 :
                                                               A_10370) ->
                                                               ∀ (n_10373 :
                                                                 A_10370) ->
                                                                 ∀ (f_10374 :
                                                                   A_10370 ->
                                                                    B_10371) ->
                                                                   (eq_4‹U›
                                                                    A_10370
                                                                    m_10372
                                                                    n_10373) ->
                                                                    (eq_4‹L›
                                                                    B_10371
                                                                    ((f_10374)
                                                                    m_10372)
                                                                    ((f_10374)
                                                                    n_10373)))
Logical.infer_tm(∀ (A_10384 : U) ->
                   ∀ (B_10385 : U) ->
                     ∀ (m_10386 : A_10384) ->
                       ∀ (n_10387 : A_10384) ->
                         ∀ (f_10388 : A_10384 -o B_10385) ->
                           (eq_4‹U› A_10384 m_10386 n_10387) ->
                             (eq_4‹U›
                               B_10385 ((f_10388) m_10386)
                               ((f_10388) n_10387)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10392 : U) ->
                   ∀ (m_10393 : A_10391) ->
                     ∀ (n_10394 : A_10391) ->
                       ∀ (f_10395 : A_10391 -o B_10392) ->
                         (eq_4‹U› A_10391 m_10393 n_10394) ->
                           (eq_4‹U›
                             B_10392 ((f_10395) m_10393) ((f_10395) n_10394)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_10399 : A_10391) ->
                   ∀ (n_10400 : A_10391) ->
                     ∀ (f_10401 : A_10391 -o B_10398) ->
                       (eq_4‹U› A_10391 m_10399 n_10400) ->
                         (eq_4‹U›
                           B_10398 ((f_10401) m_10399) ((f_10401) n_10400)))
Logical.infer_tm(A_10391)
Logical.infer_tm(∀ (n_10405 : A_10391) ->
                   ∀ (f_10406 : A_10391 -o B_10398) ->
                     (eq_4‹U› A_10391 m_10404 n_10405) ->
                       (eq_4‹U›
                         B_10398 ((f_10406) m_10404) ((f_10406) n_10405)))
Logical.infer_tm(A_10391)
Logical.infer_tm(∀ (f_10410 : A_10391 -o B_10398) ->
                   (eq_4‹U› A_10391 m_10404 n_10409) ->
                     (eq_4‹U›
                       B_10398 ((f_10410) m_10404) ((f_10410) n_10409)))
Logical.infer_tm(A_10391 -o B_10398)
Logical.infer_tm(A_10391)
Logical.infer_tm(B_10398)
Logical.infer_tm((eq_4‹U› A_10391 m_10404 n_10409) ->
                   (eq_4‹U›
                     B_10398 ((f_10413) m_10404) ((f_10413) n_10409)))
Logical.infer_tm((eq_4‹U› A_10391 m_10404 n_10409))
Logical.check_tm( A_10391, U )
Logical.infer_tm(A_10391)
Logical.assert_equal(U, U)
Logical.check_tm( m_10404, A_10391 )
Logical.infer_tm(m_10404)
Logical.assert_equal(A_10391, A_10391)
Logical.check_tm( n_10409, A_10391 )
Logical.infer_tm(n_10409)
Logical.assert_equal(A_10391, A_10391)
Logical.infer_tm((eq_4‹U›
                   B_10398 ((f_10413) m_10404) ((f_10413) n_10409)))
Logical.check_tm( B_10398, U )
Logical.infer_tm(B_10398)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_10413) m_10404), B_10398 )
Logical.infer_tm(((f_10413) m_10404))
Logical.infer_tm(f_10413)
Logical.check_tm( m_10404, A_10391 )
Logical.infer_tm(m_10404)
Logical.assert_equal(A_10391, A_10391)
Logical.assert_equal(B_10398, B_10398)
Logical.check_tm( ((f_10413) n_10409), B_10398 )
Logical.infer_tm(((f_10413) n_10409))
Logical.infer_tm(f_10413)
Logical.check_tm( n_10409, A_10391 )
Logical.infer_tm(n_10409)
Logical.assert_equal(A_10391, A_10391)
Logical.assert_equal(B_10398, B_10398)
Logical.check_tm(
  function congr_10418 :
    ∀ (A_10419 : U) ->
      ∀ (B_10420 : U) ->
        ∀ (m_10421 : A_10419) ->
          ∀ (n_10422 : A_10419) ->
            ∀ (f_10423 : A_10419 -o B_10420) ->
              (eq_4‹U› A_10419 m_10421 n_10422) ->
                (eq_4‹U› B_10420 ((f_10423) m_10421) ((f_10423) n_10422))
  | A_10426 B_10427 m_10428 n_10429 f_10430 refl_6 =>
    (refl_6‹U› B_10427 ((f_10430) n_10429)),
  ∀ (A_10431 : U) ->
    ∀ (B_10432 : U) ->
      ∀ (m_10433 : A_10431) ->
        ∀ (n_10434 : A_10431) ->
          ∀ (f_10435 : A_10431 -o B_10432) ->
            (eq_4‹U› A_10431 m_10433 n_10434) ->
              (eq_4‹U› B_10432 ((f_10435) m_10433) ((f_10435) n_10434))
)
Logical.infer_tm(function congr_10438 :
                   ∀ (A_10439 : U) ->
                     ∀ (B_10440 : U) ->
                       ∀ (m_10441 : A_10439) ->
                         ∀ (n_10442 : A_10439) ->
                           ∀ (f_10443 : A_10439 -o B_10440) ->
                             (eq_4‹U› A_10439 m_10441 n_10442) ->
                               (eq_4‹U›
                                 B_10440 ((f_10443) m_10441)
                                 ((f_10443) n_10442))
                 | A_10446 B_10447 m_10448 n_10449 f_10450 refl_6 =>
                   (refl_6‹U› B_10447 ((f_10450) n_10449)))
Logical.infer_tm(∀ (A_10452 : U) ->
                   ∀ (B_10453 : U) ->
                     ∀ (m_10454 : A_10452) ->
                       ∀ (n_10455 : A_10452) ->
                         ∀ (f_10456 : A_10452 -o B_10453) ->
                           (eq_4‹U› A_10452 m_10454 n_10455) ->
                             (eq_4‹U›
                               B_10453 ((f_10456) m_10454)
                               ((f_10456) n_10455)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10460 : U) ->
                   ∀ (m_10461 : A_10459) ->
                     ∀ (n_10462 : A_10459) ->
                       ∀ (f_10463 : A_10459 -o B_10460) ->
                         (eq_4‹U› A_10459 m_10461 n_10462) ->
                           (eq_4‹U›
                             B_10460 ((f_10463) m_10461) ((f_10463) n_10462)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_10467 : A_10459) ->
                   ∀ (n_10468 : A_10459) ->
                     ∀ (f_10469 : A_10459 -o B_10466) ->
                       (eq_4‹U› A_10459 m_10467 n_10468) ->
                         (eq_4‹U›
                           B_10466 ((f_10469) m_10467) ((f_10469) n_10468)))
Logical.infer_tm(A_10459)
Logical.infer_tm(∀ (n_10473 : A_10459) ->
                   ∀ (f_10474 : A_10459 -o B_10466) ->
                     (eq_4‹U› A_10459 m_10472 n_10473) ->
                       (eq_4‹U›
                         B_10466 ((f_10474) m_10472) ((f_10474) n_10473)))
Logical.infer_tm(A_10459)
Logical.infer_tm(∀ (f_10478 : A_10459 -o B_10466) ->
                   (eq_4‹U› A_10459 m_10472 n_10477) ->
                     (eq_4‹U›
                       B_10466 ((f_10478) m_10472) ((f_10478) n_10477)))
Logical.infer_tm(A_10459 -o B_10466)
Logical.infer_tm(A_10459)
Logical.infer_tm(B_10466)
Logical.infer_tm((eq_4‹U› A_10459 m_10472 n_10477) ->
                   (eq_4‹U›
                     B_10466 ((f_10481) m_10472) ((f_10481) n_10477)))
Logical.infer_tm((eq_4‹U› A_10459 m_10472 n_10477))
Logical.check_tm( A_10459, U )
Logical.infer_tm(A_10459)
Logical.assert_equal(U, U)
Logical.check_tm( m_10472, A_10459 )
Logical.infer_tm(m_10472)
Logical.assert_equal(A_10459, A_10459)
Logical.check_tm( n_10477, A_10459 )
Logical.infer_tm(n_10477)
Logical.assert_equal(A_10459, A_10459)
Logical.infer_tm((eq_4‹U›
                   B_10466 ((f_10481) m_10472) ((f_10481) n_10477)))
Logical.check_tm( B_10466, U )
Logical.infer_tm(B_10466)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_10481) m_10472), B_10466 )
Logical.infer_tm(((f_10481) m_10472))
Logical.infer_tm(f_10481)
Logical.check_tm( m_10472, A_10459 )
Logical.infer_tm(m_10472)
Logical.assert_equal(A_10459, A_10459)
Logical.assert_equal(B_10466, B_10466)
Logical.check_tm( ((f_10481) n_10477), B_10466 )
Logical.infer_tm(((f_10481) n_10477))
Logical.infer_tm(f_10481)
Logical.check_tm( n_10477, A_10459 )
Logical.infer_tm(n_10477)
Logical.assert_equal(A_10459, A_10459)
Logical.assert_equal(B_10466, B_10466)
Logical.infer_tm(U)
Logical.infer_tm(U)
Logical.infer_tm(A_10491)
Logical.infer_tm(A_10491)
Logical.infer_tm(A_10491 -o B_10499)
Logical.infer_tm(A_10491)
Logical.infer_tm(B_10499)
Logical.infer_tm((eq_4‹U› A_10491 m_10507 n_10515))
Logical.check_tm( A_10491, U )
Logical.infer_tm(A_10491)
Logical.assert_equal(U, U)
Logical.check_tm( m_10507, A_10491 )
Logical.infer_tm(m_10507)
Logical.assert_equal(A_10491, A_10491)
Logical.check_tm( n_10515, A_10491 )
Logical.infer_tm(n_10515)
Logical.assert_equal(A_10491, A_10491)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_10491 #m_10507 #n_10515),
      (eq_4‹U› #A_10491 #m_10507 #m_10507));
    {| eq_pat?(R #A_10491, A_10486 : U)
       eq_pat?(R #B_10499, B_10487 : U)
       eq_pat?(R #m_10507, m_10488 : #A_10491)
       eq_pat?(R #n_10515, n_10489 : #A_10491)
       eq_pat?(R #f_10523, f_10490 : #A_10491 -o #B_10499) ::: [] =>?
         (refl_6‹U› #B_10487 ((#f_10490) #n_10489))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_10491, A_10486 : U)
  eq_pat?(R #B_10499, B_10487 : U)
  eq_pat?(R #m_10507, m_10488 : #A_10491)
  eq_pat?(R #n_10515, n_10489 : #A_10491)
  eq_pat?(R #f_10523, f_10490 : #A_10491 -o #B_10499)
)
unify_global(
  eq_term?( (eq_4‹U› #A_10491 #m_10507 #n_10515),
    (eq_4‹U› #A_10491 #m_10507 #m_10507))
)
simpl_pprbm ~expand:false( #A_10491, #A_10486)
simpl_pprbm ~expand:false( #B_10499, #B_10487)
simpl_pprbm ~expand:false( #m_10507, #m_10488)
simpl_pprbm ~expand:false( #n_10515, #n_10489)
simpl_pprbm ~expand:false( #f_10523, #f_10490)
simpl_pprbm ~expand:false( (eq_4‹U› #A_10491 #m_10507 #n_10515),
  (eq_4‹U› #A_10491 #m_10507 #m_10507))
simpl_pprbm ~expand:false( #A_10491, #A_10491)
simpl_pprbm ~expand:false( #m_10507, #m_10507)
simpl_pprbm ~expand:false( #n_10515, #m_10507)
case_coverage_ok( (refl_6‹U› B_10499 ((f_10523) n_10515)),
  (eq_4‹U› B_10499 ((f_10523) n_10515) ((f_10523) n_10515)))
Logical.check_tm( (refl_6‹U› B_10499 ((f_10523) n_10515)),
  (eq_4‹U› B_10499 ((f_10523) n_10515) ((f_10523) n_10515))
)
Logical.infer_tm((refl_6‹U› B_10499 ((f_10523) n_10515)))
Logical.check_tm( B_10499, U )
Logical.infer_tm(B_10499)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_10523) n_10515), B_10499 )
Logical.infer_tm(((f_10523) n_10515))
Logical.infer_tm(f_10523)
Logical.check_tm( n_10515, A_10491 )
Logical.infer_tm(n_10515)
Logical.assert_equal(A_10491, A_10491)
Logical.assert_equal(B_10499, B_10499)
Logical.assert_equal((eq_4‹U›
                       B_10499 ((f_10523) n_10515) ((f_10523) n_10515)), 
(eq_4‹U› B_10499 ((f_10523) n_10515) ((f_10523) n_10515)))
Logical.assert_equal(∀ (A_10562 : U) ->
                       ∀ (B_10563 : U) ->
                         ∀ (m_10564 : A_10562) ->
                           ∀ (n_10565 : A_10562) ->
                             ∀ (f_10566 : A_10562 -o B_10563) ->
                               (eq_4‹U› A_10562 m_10564 n_10565) ->
                                 (eq_4‹U›
                                   B_10563 ((f_10566) m_10564)
                                   ((f_10566) n_10565)), ∀ (A_10569 : U) ->
                                                           ∀ (B_10570 :
                                                             U) ->
                                                             ∀ (m_10571 :
                                                               A_10569) ->
                                                               ∀ (n_10572 :
                                                                 A_10569) ->
                                                                 ∀ (f_10573 :
                                                                   A_10569 -o
                                                                    B_10570) ->
                                                                   (eq_4‹U›
                                                                    A_10569
                                                                    m_10571
                                                                    n_10572) ->
                                                                    (eq_4‹U›
                                                                    B_10570
                                                                    ((f_10573)
                                                                    m_10571)
                                                                    ((f_10573)
                                                                    n_10572)))
Logical.infer_tm(∀ (A_10583 : U) ->
                   ∀ (B_10584 : U) ->
                     ∀ (m_10585 : A_10583) ->
                       ∀ (n_10586 : A_10583) ->
                         ∀ (f_10587 : A_10583 -> B_10584) ->
                           (eq_4‹U› A_10583 m_10585 n_10586) ->
                             (eq_4‹U›
                               B_10584 ((f_10587) m_10585)
                               ((f_10587) n_10586)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10591 : U) ->
                   ∀ (m_10592 : A_10590) ->
                     ∀ (n_10593 : A_10590) ->
                       ∀ (f_10594 : A_10590 -> B_10591) ->
                         (eq_4‹U› A_10590 m_10592 n_10593) ->
                           (eq_4‹U›
                             B_10591 ((f_10594) m_10592) ((f_10594) n_10593)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_10598 : A_10590) ->
                   ∀ (n_10599 : A_10590) ->
                     ∀ (f_10600 : A_10590 -> B_10597) ->
                       (eq_4‹U› A_10590 m_10598 n_10599) ->
                         (eq_4‹U›
                           B_10597 ((f_10600) m_10598) ((f_10600) n_10599)))
Logical.infer_tm(A_10590)
Logical.infer_tm(∀ (n_10604 : A_10590) ->
                   ∀ (f_10605 : A_10590 -> B_10597) ->
                     (eq_4‹U› A_10590 m_10603 n_10604) ->
                       (eq_4‹U›
                         B_10597 ((f_10605) m_10603) ((f_10605) n_10604)))
Logical.infer_tm(A_10590)
Logical.infer_tm(∀ (f_10609 : A_10590 -> B_10597) ->
                   (eq_4‹U› A_10590 m_10603 n_10608) ->
                     (eq_4‹U›
                       B_10597 ((f_10609) m_10603) ((f_10609) n_10608)))
Logical.infer_tm(A_10590 -> B_10597)
Logical.infer_tm(A_10590)
Logical.infer_tm(B_10597)
Logical.infer_tm((eq_4‹U› A_10590 m_10603 n_10608) ->
                   (eq_4‹U›
                     B_10597 ((f_10612) m_10603) ((f_10612) n_10608)))
Logical.infer_tm((eq_4‹U› A_10590 m_10603 n_10608))
Logical.check_tm( A_10590, U )
Logical.infer_tm(A_10590)
Logical.assert_equal(U, U)
Logical.check_tm( m_10603, A_10590 )
Logical.infer_tm(m_10603)
Logical.assert_equal(A_10590, A_10590)
Logical.check_tm( n_10608, A_10590 )
Logical.infer_tm(n_10608)
Logical.assert_equal(A_10590, A_10590)
Logical.infer_tm((eq_4‹U›
                   B_10597 ((f_10612) m_10603) ((f_10612) n_10608)))
Logical.check_tm( B_10597, U )
Logical.infer_tm(B_10597)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_10612) m_10603), B_10597 )
Logical.infer_tm(((f_10612) m_10603))
Logical.infer_tm(f_10612)
Logical.check_tm( m_10603, A_10590 )
Logical.infer_tm(m_10603)
Logical.assert_equal(A_10590, A_10590)
Logical.assert_equal(B_10597, B_10597)
Logical.check_tm( ((f_10612) n_10608), B_10597 )
Logical.infer_tm(((f_10612) n_10608))
Logical.infer_tm(f_10612)
Logical.check_tm( n_10608, A_10590 )
Logical.infer_tm(n_10608)
Logical.assert_equal(A_10590, A_10590)
Logical.assert_equal(B_10597, B_10597)
Logical.check_tm(
  function congr_10617 :
    ∀ (A_10618 : U) ->
      ∀ (B_10619 : U) ->
        ∀ (m_10620 : A_10618) ->
          ∀ (n_10621 : A_10618) ->
            ∀ (f_10622 : A_10618 -> B_10619) ->
              (eq_4‹U› A_10618 m_10620 n_10621) ->
                (eq_4‹U› B_10619 ((f_10622) m_10620) ((f_10622) n_10621))
  | A_10625 B_10626 m_10627 n_10628 f_10629 refl_6 =>
    (refl_6‹U› B_10626 ((f_10629) n_10628)),
  ∀ (A_10630 : U) ->
    ∀ (B_10631 : U) ->
      ∀ (m_10632 : A_10630) ->
        ∀ (n_10633 : A_10630) ->
          ∀ (f_10634 : A_10630 -> B_10631) ->
            (eq_4‹U› A_10630 m_10632 n_10633) ->
              (eq_4‹U› B_10631 ((f_10634) m_10632) ((f_10634) n_10633))
)
Logical.infer_tm(function congr_10637 :
                   ∀ (A_10638 : U) ->
                     ∀ (B_10639 : U) ->
                       ∀ (m_10640 : A_10638) ->
                         ∀ (n_10641 : A_10638) ->
                           ∀ (f_10642 : A_10638 -> B_10639) ->
                             (eq_4‹U› A_10638 m_10640 n_10641) ->
                               (eq_4‹U›
                                 B_10639 ((f_10642) m_10640)
                                 ((f_10642) n_10641))
                 | A_10645 B_10646 m_10647 n_10648 f_10649 refl_6 =>
                   (refl_6‹U› B_10646 ((f_10649) n_10648)))
Logical.infer_tm(∀ (A_10651 : U) ->
                   ∀ (B_10652 : U) ->
                     ∀ (m_10653 : A_10651) ->
                       ∀ (n_10654 : A_10651) ->
                         ∀ (f_10655 : A_10651 -> B_10652) ->
                           (eq_4‹U› A_10651 m_10653 n_10654) ->
                             (eq_4‹U›
                               B_10652 ((f_10655) m_10653)
                               ((f_10655) n_10654)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (B_10659 : U) ->
                   ∀ (m_10660 : A_10658) ->
                     ∀ (n_10661 : A_10658) ->
                       ∀ (f_10662 : A_10658 -> B_10659) ->
                         (eq_4‹U› A_10658 m_10660 n_10661) ->
                           (eq_4‹U›
                             B_10659 ((f_10662) m_10660) ((f_10662) n_10661)))
Logical.infer_tm(U)
Logical.infer_tm(∀ (m_10666 : A_10658) ->
                   ∀ (n_10667 : A_10658) ->
                     ∀ (f_10668 : A_10658 -> B_10665) ->
                       (eq_4‹U› A_10658 m_10666 n_10667) ->
                         (eq_4‹U›
                           B_10665 ((f_10668) m_10666) ((f_10668) n_10667)))
Logical.infer_tm(A_10658)
Logical.infer_tm(∀ (n_10672 : A_10658) ->
                   ∀ (f_10673 : A_10658 -> B_10665) ->
                     (eq_4‹U› A_10658 m_10671 n_10672) ->
                       (eq_4‹U›
                         B_10665 ((f_10673) m_10671) ((f_10673) n_10672)))
Logical.infer_tm(A_10658)
Logical.infer_tm(∀ (f_10677 : A_10658 -> B_10665) ->
                   (eq_4‹U› A_10658 m_10671 n_10676) ->
                     (eq_4‹U›
                       B_10665 ((f_10677) m_10671) ((f_10677) n_10676)))
Logical.infer_tm(A_10658 -> B_10665)
Logical.infer_tm(A_10658)
Logical.infer_tm(B_10665)
Logical.infer_tm((eq_4‹U› A_10658 m_10671 n_10676) ->
                   (eq_4‹U›
                     B_10665 ((f_10680) m_10671) ((f_10680) n_10676)))
Logical.infer_tm((eq_4‹U› A_10658 m_10671 n_10676))
Logical.check_tm( A_10658, U )
Logical.infer_tm(A_10658)
Logical.assert_equal(U, U)
Logical.check_tm( m_10671, A_10658 )
Logical.infer_tm(m_10671)
Logical.assert_equal(A_10658, A_10658)
Logical.check_tm( n_10676, A_10658 )
Logical.infer_tm(n_10676)
Logical.assert_equal(A_10658, A_10658)
Logical.infer_tm((eq_4‹U›
                   B_10665 ((f_10680) m_10671) ((f_10680) n_10676)))
Logical.check_tm( B_10665, U )
Logical.infer_tm(B_10665)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_10680) m_10671), B_10665 )
Logical.infer_tm(((f_10680) m_10671))
Logical.infer_tm(f_10680)
Logical.check_tm( m_10671, A_10658 )
Logical.infer_tm(m_10671)
Logical.assert_equal(A_10658, A_10658)
Logical.assert_equal(B_10665, B_10665)
Logical.check_tm( ((f_10680) n_10676), B_10665 )
Logical.infer_tm(((f_10680) n_10676))
Logical.infer_tm(f_10680)
Logical.check_tm( n_10676, A_10658 )
Logical.infer_tm(n_10676)
Logical.assert_equal(A_10658, A_10658)
Logical.assert_equal(B_10665, B_10665)
Logical.infer_tm(U)
Logical.infer_tm(U)
Logical.infer_tm(A_10690)
Logical.infer_tm(A_10690)
Logical.infer_tm(A_10690 -> B_10698)
Logical.infer_tm(A_10690)
Logical.infer_tm(B_10698)
Logical.infer_tm((eq_4‹U› A_10690 m_10706 n_10714))
Logical.check_tm( A_10690, U )
Logical.infer_tm(A_10690)
Logical.assert_equal(U, U)
Logical.check_tm( m_10706, A_10690 )
Logical.infer_tm(m_10706)
Logical.assert_equal(A_10690, A_10690)
Logical.check_tm( n_10714, A_10690 )
Logical.infer_tm(n_10714)
Logical.assert_equal(A_10690, A_10690)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹U› #A_10690 #m_10706 #n_10714),
      (eq_4‹U› #A_10690 #m_10706 #m_10706));
    {| eq_pat?(R #A_10690, A_10685 : U)
       eq_pat?(R #B_10698, B_10686 : U)
       eq_pat?(R #m_10706, m_10687 : #A_10690)
       eq_pat?(R #n_10714, n_10688 : #A_10690)
       eq_pat?(R #f_10722, f_10689 : #A_10690 -> #B_10698) ::: [] =>?
         (refl_6‹U› #B_10686 ((#f_10689) #n_10688))
    |}
  |}
|}
unify_local(
  eq_pat?(R #A_10690, A_10685 : U)
  eq_pat?(R #B_10698, B_10686 : U)
  eq_pat?(R #m_10706, m_10687 : #A_10690)
  eq_pat?(R #n_10714, n_10688 : #A_10690)
  eq_pat?(R #f_10722, f_10689 : #A_10690 -> #B_10698)
)
unify_global(
  eq_term?( (eq_4‹U› #A_10690 #m_10706 #n_10714),
    (eq_4‹U› #A_10690 #m_10706 #m_10706))
)
simpl_pprbm ~expand:false( #A_10690, #A_10685)
simpl_pprbm ~expand:false( #B_10698, #B_10686)
simpl_pprbm ~expand:false( #m_10706, #m_10687)
simpl_pprbm ~expand:false( #n_10714, #n_10688)
simpl_pprbm ~expand:false( #f_10722, #f_10689)
simpl_pprbm ~expand:false( (eq_4‹U› #A_10690 #m_10706 #n_10714),
  (eq_4‹U› #A_10690 #m_10706 #m_10706))
simpl_pprbm ~expand:false( #A_10690, #A_10690)
simpl_pprbm ~expand:false( #m_10706, #m_10706)
simpl_pprbm ~expand:false( #n_10714, #m_10706)
case_coverage_ok( (refl_6‹U› B_10698 ((f_10722) n_10714)),
  (eq_4‹U› B_10698 ((f_10722) n_10714) ((f_10722) n_10714)))
Logical.check_tm( (refl_6‹U› B_10698 ((f_10722) n_10714)),
  (eq_4‹U› B_10698 ((f_10722) n_10714) ((f_10722) n_10714))
)
Logical.infer_tm((refl_6‹U› B_10698 ((f_10722) n_10714)))
Logical.check_tm( B_10698, U )
Logical.infer_tm(B_10698)
Logical.assert_equal(U, U)
Logical.check_tm( ((f_10722) n_10714), B_10698 )
Logical.infer_tm(((f_10722) n_10714))
Logical.infer_tm(f_10722)
Logical.check_tm( n_10714, A_10690 )
Logical.infer_tm(n_10714)
Logical.assert_equal(A_10690, A_10690)
Logical.assert_equal(B_10698, B_10698)
Logical.assert_equal((eq_4‹U›
                       B_10698 ((f_10722) n_10714) ((f_10722) n_10714)), 
(eq_4‹U› B_10698 ((f_10722) n_10714) ((f_10722) n_10714)))
Logical.assert_equal(∀ (A_10761 : U) ->
                       ∀ (B_10762 : U) ->
                         ∀ (m_10763 : A_10761) ->
                           ∀ (n_10764 : A_10761) ->
                             ∀ (f_10765 : A_10761 -> B_10762) ->
                               (eq_4‹U› A_10761 m_10763 n_10764) ->
                                 (eq_4‹U›
                                   B_10762 ((f_10765) m_10763)
                                   ((f_10765) n_10764)), ∀ (A_10768 : U) ->
                                                           ∀ (B_10769 :
                                                             U) ->
                                                             ∀ (m_10770 :
                                                               A_10768) ->
                                                               ∀ (n_10771 :
                                                                 A_10768) ->
                                                                 ∀ (f_10772 :
                                                                   A_10768 ->
                                                                    B_10769) ->
                                                                   (eq_4‹U›
                                                                    A_10768
                                                                    m_10770
                                                                    n_10771) ->
                                                                    (eq_4‹U›
                                                                    B_10769
                                                                    ((f_10772)
                                                                    m_10770)
                                                                    ((f_10772)
                                                                    n_10771)))
Logical.infer_tm(∀ {A_10782 : U} ->
                   ∀ {n_10783 : nat_3} ->
                     (vec_8‹U› A_10782 (succ_5‹› n_10783)) -> A_10782)
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_10786 : nat_3} ->
                   (vec_8‹U› A_10785 (succ_5‹› n_10786)) -> A_10785)
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_10785 (succ_5‹› n_10788)) -> A_10785)
Logical.infer_tm((vec_8‹U› A_10785 (succ_5‹› n_10788)))
Logical.check_tm( A_10785, U )
Logical.infer_tm(A_10785)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10788), nat_3 )
Logical.infer_tm((succ_5‹› n_10788))
Logical.check_tm( n_10788, nat_3 )
Logical.infer_tm(n_10788)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(A_10785)
Program.check_tm(
  function hd_vec_10791 :
    ∀ {A_10792 : U} ->
      ∀ {n_10793 : nat_3} ->
        (vec_8‹U› A_10792 (succ_5‹› n_10793)) -> A_10792
  | A_10795 n_10796 (vcons_12 n_10797 hd_10798 tl_10799) => hd_10798,
  ∀ {A_10800 : U} ->
    ∀ {n_10801 : nat_3} ->
      (vec_8‹U› A_10800 (succ_5‹› n_10801)) -> A_10800
)
Program.infer_tm(function hd_vec_10803 :
                   ∀ {A_10804 : U} ->
                     ∀ {n_10805 : nat_3} ->
                       (vec_8‹U› A_10804 (succ_5‹› n_10805)) ->
                         A_10804
                 | A_10807 n_10808 (vcons_12 n_10809 hd_10810 tl_10811) =>
                   hd_10810)
Logical.infer_tm(∀ {A_10813 : U} ->
                   ∀ {n_10814 : nat_3} ->
                     (vec_8‹U› A_10813 (succ_5‹› n_10814)) -> A_10813)
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_10817 : nat_3} ->
                   (vec_8‹U› A_10816 (succ_5‹› n_10817)) -> A_10816)
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_10816 (succ_5‹› n_10819)) -> A_10816)
Logical.infer_tm((vec_8‹U› A_10816 (succ_5‹› n_10819)))
Logical.check_tm( A_10816, U )
Logical.infer_tm(A_10816)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10819), nat_3 )
Logical.infer_tm((succ_5‹› n_10819))
Logical.check_tm( n_10819, nat_3 )
Logical.infer_tm(n_10819)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(A_10816)
trans12.Program.case_intro(A_10827, U)
Logical.infer_tm(U)
trans12.Program.case_intro(n_10831, nat_3)
Logical.infer_tm(nat_3)
trans12.Program.case_intro(__10835, (vec_8‹U›
                                      #A_10827 (succ_5‹› #n_10831)))
Logical.infer_tm((vec_8‹U› A_10827 (succ_5‹› n_10831)))
Logical.check_tm( A_10827, U )
Logical.infer_tm(A_10827)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10831), nat_3 )
Logical.infer_tm((succ_5‹› n_10831))
Logical.check_tm( n_10831, nat_3 )
Logical.infer_tm(n_10831)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((vec_8‹U› A_10827 (succ_5‹› n_10831)))
Logical.check_tm( A_10827, U )
Logical.infer_tm(A_10827)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10831), nat_3 )
Logical.infer_tm((succ_5‹› n_10831))
Logical.check_tm( n_10831, nat_3 )
Logical.infer_tm(n_10831)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
trans12.Program.case_split(vecU_20, vnilU_27)
case_empty
unify_local(  )
unify_global(
  eq_term?( (vec_8‹U› #A_10827 (succ_5‹› #n_10831)),
    (vec_8‹U› #A_10827 zero_4))
)
simpl_pprbm ~expand:false( (vec_8‹U› #A_10827 (succ_5‹› #n_10831)),
  (vec_8‹U› #A_10827 zero_4))
simpl_pprbm ~expand:false( #A_10827, #A_10827)
simpl_pprbm ~expand:false( (succ_5‹› #n_10831), zero_4)
unifier1e.witnessed_distinct(succ_5, , zero_4, )trans12.Program.case_split(vecU_20, vconsU_28)
Logical.infer_tm(nat_3)
Logical.infer_tm(A_10827)
Logical.infer_tm((vec_8‹U› A_10827 n_10845))
Logical.check_tm( A_10827, U )
Logical.infer_tm(A_10827)
Logical.assert_equal(U, U)
Logical.check_tm( n_10845, nat_3 )
Logical.infer_tm(n_10845)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› #A_10827 (succ_5‹› #n_10831)),
      (vec_8‹U› #A_10827 (succ_5‹› #n_10845)));
    {| eq_pat?(N #A_10827, A_10822 : U)
       eq_pat?(N #n_10831, n_10823 : nat_3)
       eq_pat?(N #n_10845, n_10824 : nat_3)
       eq_pat?(R #hd_10846, hd_10825 : #A_10827)
       eq_pat?(R #tl_10847, tl_10826 : (vec_8‹U› #A_10827 #n_10845)) ::: [] =>?
         #hd_10825
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_10827, A_10822 : U)
  eq_pat?(N #n_10831, n_10823 : nat_3)
  eq_pat?(N #n_10845, n_10824 : nat_3)
  eq_pat?(R #hd_10846, hd_10825 : #A_10827)
  eq_pat?(R #tl_10847, tl_10826 : (vec_8‹U› #A_10827 #n_10845))
)
unify_global(
  eq_term?( (vec_8‹U› #A_10827 (succ_5‹› #n_10831)),
    (vec_8‹U› #A_10827 (succ_5‹› #n_10845)))
)
simpl_pprbm ~expand:false( #A_10827, #A_10822)
simpl_pprbm ~expand:false( #n_10831, #n_10823)
simpl_pprbm ~expand:false( #n_10845, #n_10824)
simpl_pprbm ~expand:false( #hd_10846, #hd_10825)
simpl_pprbm ~expand:false( #tl_10847, #tl_10826)
simpl_pprbm ~expand:false( (vec_8‹U› #A_10827 (succ_5‹› #n_10831)),
  (vec_8‹U› #A_10827 (succ_5‹› #n_10845)))
simpl_pprbm ~expand:false( #A_10827, #A_10827)
simpl_pprbm ~expand:false( (succ_5‹› #n_10831), (succ_5‹› #n_10845))
simpl_pprbm ~expand:false( #n_10831, #n_10845)
case_coverage_ok( hd_10846, A_10827)
Program.check_tm( hd_10846, A_10827 )
Program.infer_tm(hd_10846)
Logical.assert_equal(A_10827, A_10827)
trans12.Program.case_introed((vec_8‹U› #A_10827 (succ_5‹› #n_10831)))
trans12.Program.case_introed(nat_3)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_10863 : U} ->
                       ∀ {n_10864 : nat_3} ->
                         (vec_8‹U› A_10863 (succ_5‹› n_10864)) ->
                           A_10863, ∀ {A_10866 : U} ->
                                      ∀ {n_10867 : nat_3} ->
                                        (vec_8‹U›
                                          A_10866 (succ_5‹› n_10867)) ->
                                          A_10866)
Logical.infer_tm(∀ {A_10872 : U} ->
                   ∀ {n_10873 : nat_3} ->
                     (vec_8‹U› A_10872 (succ_5‹› n_10873)) -> A_10872)
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_10876 : nat_3} ->
                   (vec_8‹U› A_10875 (succ_5‹› n_10876)) -> A_10875)
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_10875 (succ_5‹› n_10878)) -> A_10875)
Logical.infer_tm((vec_8‹U› A_10875 (succ_5‹› n_10878)))
Logical.check_tm( A_10875, U )
Logical.infer_tm(A_10875)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10878), nat_3 )
Logical.infer_tm((succ_5‹› n_10878))
Logical.check_tm( n_10878, nat_3 )
Logical.infer_tm(n_10878)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(A_10875)
Program.check_tm(
  function hd_vec2_10881 :
    ∀ {A_10882 : U} ->
      ∀ {n_10883 : nat_3} ->
        (vec_8‹U› A_10882 (succ_5‹› n_10883)) -> A_10882
  | A_10885 n_10886 xs_10887 =>
    match n_10886, xs_10887 in
      ∀ {n0_10888 : nat_3} -o
        (vec_8‹U› A_10885 (succ_5‹› n0_10888)) -o A_10885
    with
    | n0_10890, vnil_11 =>
    | n0_10891, (vcons_12 n_10892 hd_10893 tl_10894) => hd_10893,
  ∀ {A_10895 : U} ->
    ∀ {n_10896 : nat_3} ->
      (vec_8‹U› A_10895 (succ_5‹› n_10896)) -> A_10895
)
Program.infer_tm(function hd_vec2_10898 :
                   ∀ {A_10899 : U} ->
                     ∀ {n_10900 : nat_3} ->
                       (vec_8‹U› A_10899 (succ_5‹› n_10900)) ->
                         A_10899
                 | A_10902 n_10903 xs_10904 =>
                   match n_10903, xs_10904 in
                     ∀ {n0_10905 : nat_3} -o
                       (vec_8‹U› A_10902 (succ_5‹› n0_10905)) -o
                         A_10902
                   with
                   | n0_10907, vnil_11 =>
                   | n0_10908, (vcons_12 n_10909 hd_10910 tl_10911) =>
                     hd_10910)
Logical.infer_tm(∀ {A_10913 : U} ->
                   ∀ {n_10914 : nat_3} ->
                     (vec_8‹U› A_10913 (succ_5‹› n_10914)) -> A_10913)
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_10917 : nat_3} ->
                   (vec_8‹U› A_10916 (succ_5‹› n_10917)) -> A_10916)
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_10916 (succ_5‹› n_10919)) -> A_10916)
Logical.infer_tm((vec_8‹U› A_10916 (succ_5‹› n_10919)))
Logical.check_tm( A_10916, U )
Logical.infer_tm(A_10916)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10919), nat_3 )
Logical.infer_tm((succ_5‹› n_10919))
Logical.check_tm( n_10919, nat_3 )
Logical.infer_tm(n_10919)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(A_10916)
trans12.Program.case_intro(A_10925, U)
Logical.infer_tm(U)
trans12.Program.case_intro(n_10929, nat_3)
Logical.infer_tm(nat_3)
trans12.Program.case_intro(xs_10933, (vec_8‹U›
                                       #A_10925 (succ_5‹› #n_10929)))
Logical.infer_tm((vec_8‹U› A_10925 (succ_5‹› n_10929)))
Logical.check_tm( A_10925, U )
Logical.infer_tm(A_10925)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_10929), nat_3 )
Logical.infer_tm((succ_5‹› n_10929))
Logical.check_tm( n_10929, nat_3 )
Logical.infer_tm(n_10929)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(N #A_10925, A_10922 : U)
       eq_pat?(N #n_10929, n_10923 : nat_3)
       eq_pat?(R #xs_10933, xs_10924 :
         (vec_8‹U› #A_10925 (succ_5‹› #n_10929))) ::: [] =>?
         match #n_10923, #xs_10924 in
           ∀ {n0_10937 : nat_3} -o
             (vec_8‹U› #A_10922 (succ_5‹› n0_10937)) -o #A_10922
         with
         | n0_10939, vnil_11 =>
         | n0_10940, (vcons_12 n_10941 hd_10942 tl_10943) => hd_10942
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_10925, A_10922 : U)
  eq_pat?(N #n_10929, n_10923 : nat_3)
  eq_pat?(R #xs_10933, xs_10924 :
    (vec_8‹U› #A_10925 (succ_5‹› #n_10929)))
)
unify_global(  )
simpl_pprbm ~expand:false( #A_10925, #A_10922)
simpl_pprbm ~expand:false( #n_10929, #n_10923)
simpl_pprbm ~expand:false( #xs_10933, #xs_10924)
case_coverage_ok(
  match n_10929, xs_10933 in
    ∀ {n0_10954 : nat_3} -o
      (vec_8‹U› A_10925 (succ_5‹› n0_10954)) -o A_10925
  with
  | n0_10956, vnil_11 =>
  | n0_10957, (vcons_12 n_10958 hd_10959 tl_10960) => hd_10959, A_10925)
Program.check_tm(
  match n_10929, xs_10933 in
    ∀ {n0_10961 : nat_3} -o
      (vec_8‹U› A_10925 (succ_5‹› n0_10961)) -o A_10925
  with
  | n0_10963, vnil_11 =>
  | n0_10964, (vcons_12 n_10965 hd_10966 tl_10967) => hd_10966, A_10925
)
Program.infer_tm(match n_10929, xs_10933 in
                   ∀ {n0_10968 : nat_3} -o
                     (vec_8‹U› A_10925 (succ_5‹› n0_10968)) -o
                       A_10925
                 with
                 | n0_10970, vnil_11 =>
                 | n0_10971, (vcons_12 n_10972 hd_10973 tl_10974) => hd_10973)
Program.infer_motive_N(n_10929, nat_3)
Logical.check_tm( n_10929, nat_3 )
Logical.infer_tm(n_10929)
Logical.assert_equal(nat_3, nat_3)
Program.infer_motive_N_ok(n_10929, nat_3)
Program.infer_motive_R(xs_10933, (vec_8‹U›
                                   A_10925 (succ_5‹› n_10929)))
Program.check_tm( xs_10933, (vec_8‹U› A_10925 (succ_5‹› n_10929)) )
Program.infer_tm(xs_10933)
Logical.assert_equal((vec_8‹U› A_10925 (succ_5‹› n_10929)), (vec_8‹U›
                                                                    A_10925
                                                                    (succ_5‹›
                                                                    n_10929)))
Program.infer_motive_R_ok(xs_10933, (vec_8‹U›
                                      A_10925 (succ_5‹› n_10929)))
Program.infer_motive_ok
trans12.Program.case_intro(n0_10980, nat_3)
Logical.infer_tm(nat_3)
trans12.Program.case_intro(__10984, (vec_8‹U›
                                      A_10925 (succ_5‹› #n0_10980)))
Logical.infer_tm((vec_8‹U› A_10925 (succ_5‹› n0_10980)))
Logical.check_tm( A_10925, U )
Logical.infer_tm(A_10925)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n0_10980), nat_3 )
Logical.infer_tm((succ_5‹› n0_10980))
Logical.check_tm( n0_10980, nat_3 )
Logical.infer_tm(n0_10980)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((vec_8‹U› A_10925 (succ_5‹› n0_10980)))
Logical.check_tm( A_10925, U )
Logical.infer_tm(A_10925)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n0_10980), nat_3 )
Logical.infer_tm((succ_5‹› n0_10980))
Logical.check_tm( n0_10980, nat_3 )
Logical.infer_tm(n0_10980)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
trans12.Program.case_split(vecU_20, vnilU_27)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_10925 (succ_5‹› #n0_10980)),
      (vec_8‹U› A_10925 zero_4));
    (eq_pat?(N #n0_10980, n0_10975 : nat_3)) ::: [] =>? !!
  |}
|}
unify_local(  )
unify_global(
  eq_term?( (vec_8‹U› A_10925 (succ_5‹› #n0_10980)),
    (vec_8‹U› A_10925 zero_4))
)
simpl_pprbm ~expand:false( (vec_8‹U› A_10925 (succ_5‹› #n0_10980)),
  (vec_8‹U› A_10925 zero_4))
simpl_pprbm ~expand:false( A_10925, A_10925)
simpl_pprbm ~expand:false( (succ_5‹› #n0_10980), zero_4)
unifier1e.witnessed_distinct(succ_5, , zero_4, )trans12.Program.case_split(vecU_20, vconsU_28)
Logical.infer_tm(nat_3)
Logical.infer_tm(A_10925)
Logical.infer_tm((vec_8‹U› A_10925 n_10994))
Logical.check_tm( A_10925, U )
Logical.infer_tm(A_10925)
Logical.assert_equal(U, U)
Logical.check_tm( n_10994, nat_3 )
Logical.infer_tm(n_10994)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_10925 (succ_5‹› #n0_10980)),
      (vec_8‹U› A_10925 (succ_5‹› #n_10994)));
    {| eq_pat?(N #n0_10980, n0_10976 : nat_3)
       eq_pat?(N #n_10994, n_10977 : nat_3)
       eq_pat?(R #hd_10995, hd_10978 : A_10925)
       eq_pat?(R #tl_10996, tl_10979 : (vec_8‹U› A_10925 #n_10994)) ::: [] =>?
         #hd_10978
    |}
  |}
|}
unify_local(
  eq_pat?(N #n0_10980, n0_10976 : nat_3)
  eq_pat?(N #n_10994, n_10977 : nat_3)
  eq_pat?(R #hd_10995, hd_10978 : A_10925)
  eq_pat?(R #tl_10996, tl_10979 : (vec_8‹U› A_10925 #n_10994))
)
unify_global(
  eq_term?( (vec_8‹U› A_10925 (succ_5‹› #n0_10980)),
    (vec_8‹U› A_10925 (succ_5‹› #n_10994)))
)
simpl_pprbm ~expand:false( #n0_10980, #n0_10976)
simpl_pprbm ~expand:false( #n_10994, #n_10977)
simpl_pprbm ~expand:false( #hd_10995, #hd_10978)
simpl_pprbm ~expand:false( #tl_10996, #tl_10979)
simpl_pprbm ~expand:false( (vec_8‹U› A_10925 (succ_5‹› #n0_10980)),
  (vec_8‹U› A_10925 (succ_5‹› #n_10994)))
simpl_pprbm ~expand:false( A_10925, A_10925)
simpl_pprbm ~expand:false( (succ_5‹› #n0_10980), (succ_5‹› #n_10994))
simpl_pprbm ~expand:false( #n0_10980, #n_10994)
case_coverage_ok( hd_10995, A_10925)
Program.check_tm( hd_10995, A_10925 )
Program.infer_tm(hd_10995)
Logical.assert_equal(A_10925, A_10925)
trans12.Program.case_introed((vec_8‹U› A_10925 (succ_5‹› #n0_10980)))
trans12.Program.case_introed(nat_3)
Logical.assert_equal(A_10925, A_10925)
trans12.Program.case_introed((vec_8‹U› #A_10925 (succ_5‹› #n_10929)))
trans12.Program.case_introed(nat_3)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_11012 : U} ->
                       ∀ {n_11013 : nat_3} ->
                         (vec_8‹U› A_11012 (succ_5‹› n_11013)) ->
                           A_11012, ∀ {A_11015 : U} ->
                                      ∀ {n_11016 : nat_3} ->
                                        (vec_8‹U›
                                          A_11015 (succ_5‹› n_11016)) ->
                                          A_11015)
Logical.infer_tm(∀ {A_11021 : U} ->
                   ∀ {n_11022 : nat_3} ->
                     (vec_8‹U› A_11021 (succ_5‹› n_11022)) -> A_11021)
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_11025 : nat_3} ->
                   (vec_8‹U› A_11024 (succ_5‹› n_11025)) -> A_11024)
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_11024 (succ_5‹› n_11027)) -> A_11024)
Logical.infer_tm((vec_8‹U› A_11024 (succ_5‹› n_11027)))
Logical.check_tm( A_11024, U )
Logical.infer_tm(A_11024)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_11027), nat_3 )
Logical.infer_tm((succ_5‹› n_11027))
Logical.check_tm( n_11027, nat_3 )
Logical.infer_tm(n_11027)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(A_11024)
Program.check_tm(
  function hd_vec3_11030 :
    ∀ {A_11031 : U} ->
      ∀ {n_11032 : nat_3} ->
        (vec_8‹U› A_11031 (succ_5‹› n_11032)) -> A_11031
  | A_11034 n_11035 xs_11036 =>
    match xs_11036 in
      (vec_8‹U› A_11034 (succ_5‹› n_11035)) -o A_11034
    with
    | vnil_11 =>
    | (vcons_12 n_11038 hd_11039 tl_11040) => hd_11039,
  ∀ {A_11041 : U} ->
    ∀ {n_11042 : nat_3} ->
      (vec_8‹U› A_11041 (succ_5‹› n_11042)) -> A_11041
)
Program.infer_tm(function hd_vec3_11044 :
                   ∀ {A_11045 : U} ->
                     ∀ {n_11046 : nat_3} ->
                       (vec_8‹U› A_11045 (succ_5‹› n_11046)) ->
                         A_11045
                 | A_11048 n_11049 xs_11050 =>
                   match xs_11050 in
                     (vec_8‹U› A_11048 (succ_5‹› n_11049)) -o A_11048
                   with
                   | vnil_11 =>
                   | (vcons_12 n_11052 hd_11053 tl_11054) => hd_11053)
Logical.infer_tm(∀ {A_11056 : U} ->
                   ∀ {n_11057 : nat_3} ->
                     (vec_8‹U› A_11056 (succ_5‹› n_11057)) -> A_11056)
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_11060 : nat_3} ->
                   (vec_8‹U› A_11059 (succ_5‹› n_11060)) -> A_11059)
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_11059 (succ_5‹› n_11062)) -> A_11059)
Logical.infer_tm((vec_8‹U› A_11059 (succ_5‹› n_11062)))
Logical.check_tm( A_11059, U )
Logical.infer_tm(A_11059)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_11062), nat_3 )
Logical.infer_tm((succ_5‹› n_11062))
Logical.check_tm( n_11062, nat_3 )
Logical.infer_tm(n_11062)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(A_11059)
trans12.Program.case_intro(A_11068, U)
Logical.infer_tm(U)
trans12.Program.case_intro(n_11072, nat_3)
Logical.infer_tm(nat_3)
trans12.Program.case_intro(xs_11076, (vec_8‹U›
                                       #A_11068 (succ_5‹› #n_11072)))
Logical.infer_tm((vec_8‹U› A_11068 (succ_5‹› n_11072)))
Logical.check_tm( A_11068, U )
Logical.infer_tm(A_11068)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_11072), nat_3 )
Logical.infer_tm((succ_5‹› n_11072))
Logical.check_tm( n_11072, nat_3 )
Logical.infer_tm(n_11072)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(N #A_11068, A_11065 : U)
       eq_pat?(N #n_11072, n_11066 : nat_3)
       eq_pat?(R #xs_11076, xs_11067 :
         (vec_8‹U› #A_11068 (succ_5‹› #n_11072))) ::: [] =>?
         match #xs_11067 in
           (vec_8‹U› #A_11065 (succ_5‹› #n_11066)) -o #A_11065
         with
         | vnil_11 =>
         | (vcons_12 n_11081 hd_11082 tl_11083) => hd_11082
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_11068, A_11065 : U)
  eq_pat?(N #n_11072, n_11066 : nat_3)
  eq_pat?(R #xs_11076, xs_11067 :
    (vec_8‹U› #A_11068 (succ_5‹› #n_11072)))
)
unify_global(  )
simpl_pprbm ~expand:false( #A_11068, #A_11065)
simpl_pprbm ~expand:false( #n_11072, #n_11066)
simpl_pprbm ~expand:false( #xs_11076, #xs_11067)
case_coverage_ok(
  match xs_11076 in (vec_8‹U› A_11068 (succ_5‹› n_11072)) -o A_11068
  with
  | vnil_11 =>
  | (vcons_12 n_11092 hd_11093 tl_11094) => hd_11093, A_11068)
Program.check_tm(
  match xs_11076 in (vec_8‹U› A_11068 (succ_5‹› n_11072)) -o A_11068
  with
  | vnil_11 =>
  | (vcons_12 n_11096 hd_11097 tl_11098) => hd_11097, A_11068
)
Program.infer_tm(match xs_11076 in
                   (vec_8‹U› A_11068 (succ_5‹› n_11072)) -o A_11068
                 with
                 | vnil_11 =>
                 | (vcons_12 n_11100 hd_11101 tl_11102) => hd_11101)
Program.infer_motive_R(xs_11076, (vec_8‹U›
                                   A_11068 (succ_5‹› n_11072)))
Program.check_tm( xs_11076, (vec_8‹U› A_11068 (succ_5‹› n_11072)) )
Program.infer_tm(xs_11076)
Logical.assert_equal((vec_8‹U› A_11068 (succ_5‹› n_11072)), (vec_8‹U›
                                                                    A_11068
                                                                    (succ_5‹›
                                                                    n_11072)))
Program.infer_motive_R_ok(xs_11076, (vec_8‹U›
                                      A_11068 (succ_5‹› n_11072)))
Program.infer_motive_ok
trans12.Program.case_intro(_11106, (vec_8‹U›
                                     A_11068 (succ_5‹› n_11072)))
Logical.infer_tm((vec_8‹U› A_11068 (succ_5‹› n_11072)))
Logical.check_tm( A_11068, U )
Logical.infer_tm(A_11068)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_11072), nat_3 )
Logical.infer_tm((succ_5‹› n_11072))
Logical.check_tm( n_11072, nat_3 )
Logical.infer_tm(n_11072)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((vec_8‹U› A_11068 (succ_5‹› n_11072)))
Logical.check_tm( A_11068, U )
Logical.infer_tm(A_11068)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› n_11072), nat_3 )
Logical.infer_tm((succ_5‹› n_11072))
Logical.check_tm( n_11072, nat_3 )
Logical.infer_tm(n_11072)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
trans12.Program.case_split(vecU_20, vnilU_27)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_11068 (succ_5‹› n_11072)),
      (vec_8‹U› A_11068 zero_4));
    () ::: [] =>? !!
  |}
|}
unify_local(  )
unify_global(
  eq_term?( (vec_8‹U› A_11068 (succ_5‹› n_11072)),
    (vec_8‹U› A_11068 zero_4))
)
simpl_pprbm ~expand:false( (vec_8‹U› A_11068 (succ_5‹› n_11072)),
  (vec_8‹U› A_11068 zero_4))
simpl_pprbm ~expand:false( A_11068, A_11068)
simpl_pprbm ~expand:false( (succ_5‹› n_11072), zero_4)
unifier1e.witnessed_distinct(succ_5, , zero_4, )trans12.Program.case_split(vecU_20, vconsU_28)
Logical.infer_tm(nat_3)
Logical.infer_tm(A_11068)
Logical.infer_tm((vec_8‹U› A_11068 n_11116))
Logical.check_tm( A_11068, U )
Logical.infer_tm(A_11068)
Logical.assert_equal(U, U)
Logical.check_tm( n_11116, nat_3 )
Logical.infer_tm(n_11116)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› A_11068 (succ_5‹› n_11072)),
      (vec_8‹U› A_11068 (succ_5‹› #n_11116)));
    {| eq_pat?(N #n_11116, n_11103 : nat_3)
       eq_pat?(R #hd_11117, hd_11104 : A_11068)
       eq_pat?(R #tl_11118, tl_11105 : (vec_8‹U› A_11068 #n_11116)) ::: [] =>?
         #hd_11104
    |}
  |}
|}
unify_local(
  eq_pat?(N #n_11116, n_11103 : nat_3)
  eq_pat?(R #hd_11117, hd_11104 : A_11068)
  eq_pat?(R #tl_11118, tl_11105 : (vec_8‹U› A_11068 #n_11116))
)
unify_global(
  eq_term?( (vec_8‹U› A_11068 (succ_5‹› n_11072)),
    (vec_8‹U› A_11068 (succ_5‹› #n_11116)))
)
simpl_pprbm ~expand:false( #n_11116, #n_11103)
simpl_pprbm ~expand:false( #hd_11117, #hd_11104)
simpl_pprbm ~expand:false( #tl_11118, #tl_11105)
simpl_pprbm ~expand:false( (vec_8‹U› A_11068 (succ_5‹› n_11072)),
  (vec_8‹U› A_11068 (succ_5‹› #n_11116)))
simpl_pprbm ~expand:false( A_11068, A_11068)
simpl_pprbm ~expand:false( (succ_5‹› n_11072), (succ_5‹› #n_11116))
simpl_pprbm ~expand:false( n_11072, #n_11116)
case_coverage_ok( hd_11117, A_11068)
Program.check_tm( hd_11117, A_11068 )
Program.infer_tm(hd_11117)
Logical.assert_equal(A_11068, A_11068)
trans12.Program.case_introed((vec_8‹U› A_11068 (succ_5‹› n_11072)))
Logical.assert_equal(A_11068, A_11068)
trans12.Program.case_introed((vec_8‹U› #A_11068 (succ_5‹› #n_11072)))
trans12.Program.case_introed(nat_3)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_11134 : U} ->
                       ∀ {n_11135 : nat_3} ->
                         (vec_8‹U› A_11134 (succ_5‹› n_11135)) ->
                           A_11134, ∀ {A_11137 : U} ->
                                      ∀ {n_11138 : nat_3} ->
                                        (vec_8‹U›
                                          A_11137 (succ_5‹› n_11138)) ->
                                          A_11137)
Logical.infer_tm(∀ {A_11143 : U} ->
                   ∀ {n_11144 : nat_3} ->
                     (vec_8‹U› A_11143 n_11144) ->
                       (exists_5‹U,U›
                         nat_3
                         function _11146 : nat_3 -> U
                         | __11148 => (eq_4‹U› nat_3 __11148 n_11144)))
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_11150 : nat_3} ->
                   (vec_8‹U› A_11149 n_11150) ->
                     (exists_5‹U,U›
                       nat_3
                       function _11152 : nat_3 -> U
                       | __11154 => (eq_4‹U› nat_3 __11154 n_11150)))
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_11149 n_11155) ->
                   (exists_5‹U,U›
                     nat_3
                     function _11157 : nat_3 -> U
                     | __11159 => (eq_4‹U› nat_3 __11159 n_11155)))
Logical.infer_tm((vec_8‹U› A_11149 n_11155))
Logical.check_tm( A_11149, U )
Logical.infer_tm(A_11149)
Logical.assert_equal(U, U)
Logical.check_tm( n_11155, nat_3 )
Logical.infer_tm(n_11155)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((exists_5‹U,U›
                   nat_3
                   function _11161 : nat_3 -> U
                   | __11163 => (eq_4‹U› nat_3 __11163 n_11155)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm(
  function _11164 : nat_3 -> U
  | __11166 => (eq_4‹U› nat_3 __11166 n_11155), nat_3 -> U
)
Logical.infer_tm(function _11168 : nat_3 -> U
                 | __11170 => (eq_4‹U› nat_3 __11170 n_11155))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11175, __11174 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11174 n_11155)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11175, __11174 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11175, #__11174)
case_coverage_ok( (eq_4‹U› nat_3 x_11175 n_11155), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11175 n_11155), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11175 n_11155))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11175, nat_3 )
Logical.infer_tm(x_11175)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( n_11155, nat_3 )
Logical.infer_tm(n_11155)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal(nat_3 -> U, nat_3 -> U)
Program.check_tm(
  function vlength_11181 :
    ∀ {A_11182 : U} ->
      ∀ {n_11183 : nat_3} ->
        (vec_8‹U› A_11182 n_11183) ->
          (exists_5‹U,U›
            nat_3
            function _11185 : nat_3 -> U
            | __11187 => (eq_4‹U› nat_3 __11187 n_11183))
  | A_11188 n_11189 vnil_11 =>
    (ex_7‹U,U›
      nat_3
      function _11190 : nat_3 -> U
      | __11192 => (eq_4‹U› nat_3 __11192 zero_4) zero_4
      (refl_6‹U› nat_3 zero_4))
  | A_11193 n_11194 (vcons_12 n_11195 hd_11196 tl_11197) =>
    match ((vlength_11181) A_11193 n_11195 tl_11197) in
      (exists_5‹U,U›
        nat_3
        function _11199 : nat_3 -> U
        | __11201 => (eq_4‹U› nat_3 __11201 n_11195)) -o
        (exists_5‹U,U›
          nat_3
          function _11202 : nat_3 -> U
          | __11204 => (eq_4‹U› nat_3 __11204 (succ_5‹› n_11195)))
    with
    | (ex_7 m_11205 pf_11206) =>
      (ex_7‹U,U›
        nat_3
        function _11207 : nat_3 -> U
        | __11209 => (eq_4‹U› nat_3 __11209 (succ_5‹› n_11195))
        (succ_5‹› m_11205)
        ((congr_3‹U,U,U›)
          nat_3 nat_3 m_11205 n_11195
          function _11210 : nat_3 -> nat_3
          | __11212 => (succ_5‹› __11212) pf_11206)),
  ∀ {A_11213 : U} ->
    ∀ {n_11214 : nat_3} ->
      (vec_8‹U› A_11213 n_11214) ->
        (exists_5‹U,U›
          nat_3
          function _11216 : nat_3 -> U
          | __11218 => (eq_4‹U› nat_3 __11218 n_11214))
)
Program.infer_tm(function vlength_11219 :
                   ∀ {A_11220 : U} ->
                     ∀ {n_11221 : nat_3} ->
                       (vec_8‹U› A_11220 n_11221) ->
                         (exists_5‹U,U›
                           nat_3
                           function _11223 : nat_3 -> U
                           | __11225 => (eq_4‹U› nat_3 __11225 n_11221))
                 | A_11226 n_11227 vnil_11 =>
                   (ex_7‹U,U›
                     nat_3
                     function _11228 : nat_3 -> U
                     | __11230 => (eq_4‹U› nat_3 __11230 zero_4) zero_4
                     (refl_6‹U› nat_3 zero_4))
                 | A_11231 n_11232 (vcons_12 n_11233 hd_11234 tl_11235) =>
                   match ((vlength_11219) A_11231 n_11233 tl_11235) in
                     (exists_5‹U,U›
                       nat_3
                       function _11237 : nat_3 -> U
                       | __11239 => (eq_4‹U› nat_3 __11239 n_11233)) -o
                       (exists_5‹U,U›
                         nat_3
                         function _11240 : nat_3 -> U
                         | __11242 =>
                           (eq_4‹U› nat_3 __11242 (succ_5‹› n_11233)))
                   with
                   | (ex_7 m_11243 pf_11244) =>
                     (ex_7‹U,U›
                       nat_3
                       function _11245 : nat_3 -> U
                       | __11247 =>
                         (eq_4‹U› nat_3 __11247 (succ_5‹› n_11233))
                       (succ_5‹› m_11243)
                       ((congr_3‹U,U,U›)
                         nat_3 nat_3 m_11243 n_11233
                         function _11248 : nat_3 -> nat_3
                         | __11250 => (succ_5‹› __11250) pf_11244)))
Logical.infer_tm(∀ {A_11252 : U} ->
                   ∀ {n_11253 : nat_3} ->
                     (vec_8‹U› A_11252 n_11253) ->
                       (exists_5‹U,U›
                         nat_3
                         function _11255 : nat_3 -> U
                         | __11257 => (eq_4‹U› nat_3 __11257 n_11253)))
Logical.infer_tm(U)
Logical.infer_tm(∀ {n_11259 : nat_3} ->
                   (vec_8‹U› A_11258 n_11259) ->
                     (exists_5‹U,U›
                       nat_3
                       function _11261 : nat_3 -> U
                       | __11263 => (eq_4‹U› nat_3 __11263 n_11259)))
Logical.infer_tm(nat_3)
Logical.infer_tm((vec_8‹U› A_11258 n_11264) ->
                   (exists_5‹U,U›
                     nat_3
                     function _11266 : nat_3 -> U
                     | __11268 => (eq_4‹U› nat_3 __11268 n_11264)))
Logical.infer_tm((vec_8‹U› A_11258 n_11264))
Logical.check_tm( A_11258, U )
Logical.infer_tm(A_11258)
Logical.assert_equal(U, U)
Logical.check_tm( n_11264, nat_3 )
Logical.infer_tm(n_11264)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((exists_5‹U,U›
                   nat_3
                   function _11270 : nat_3 -> U
                   | __11272 => (eq_4‹U› nat_3 __11272 n_11264)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm(
  function _11273 : nat_3 -> U
  | __11275 => (eq_4‹U› nat_3 __11275 n_11264), nat_3 -> U
)
Logical.infer_tm(function _11277 : nat_3 -> U
                 | __11279 => (eq_4‹U› nat_3 __11279 n_11264))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11284, __11283 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11283 n_11264)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11284, __11283 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11284, #__11283)
case_coverage_ok( (eq_4‹U› nat_3 x_11284 n_11264), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11284 n_11264), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11284 n_11264))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11284, nat_3 )
Logical.infer_tm(x_11284)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( n_11264, nat_3 )
Logical.infer_tm(n_11264)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal(nat_3 -> U, nat_3 -> U)
trans12.Program.case_intro(A_11297, U)
Logical.infer_tm(U)
trans12.Program.case_intro(n_11304, nat_3)
Logical.infer_tm(nat_3)
trans12.Program.case_intro(__11311, (vec_8‹U› #A_11297 #n_11304))
Logical.infer_tm((vec_8‹U› A_11297 n_11304))
Logical.check_tm( A_11297, U )
Logical.infer_tm(A_11297)
Logical.assert_equal(U, U)
Logical.check_tm( n_11304, nat_3 )
Logical.infer_tm(n_11304)
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm((vec_8‹U› A_11297 n_11304))
Logical.check_tm( A_11297, U )
Logical.infer_tm(A_11297)
Logical.assert_equal(U, U)
Logical.check_tm( n_11304, nat_3 )
Logical.infer_tm(n_11304)
Logical.assert_equal(nat_3, nat_3)
trans12.Program.case_split(vecU_20, vnilU_27)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› #A_11297 #n_11304),
      (vec_8‹U› #A_11297 zero_4));
    {| eq_pat?(N #A_11297, A_11290 : U)
       eq_pat?(N #n_11304, n_11291 : nat_3) ::: [] =>?
         (ex_7‹U,U›
           nat_3
           function _11333 : nat_3 -> U
           | __11335 => (eq_4‹U› nat_3 __11335 zero_4) zero_4
           (refl_6‹U› nat_3 zero_4))
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_11297, A_11290 : U)
  eq_pat?(N #n_11304, n_11291 : nat_3)
)
unify_global(
  eq_term?( (vec_8‹U› #A_11297 #n_11304), (vec_8‹U› #A_11297 zero_4))
)
simpl_pprbm ~expand:false( #A_11297, #A_11290)
simpl_pprbm ~expand:false( #n_11304, #n_11291)
simpl_pprbm ~expand:false( (vec_8‹U› #A_11297 #n_11304),
  (vec_8‹U› #A_11297 zero_4))
simpl_pprbm ~expand:false( #A_11297, #A_11297)
simpl_pprbm ~expand:false( #n_11304, zero_4)
case_coverage_ok(
  (ex_7‹U,U›
    nat_3
    function _11348 : nat_3 -> U
    | __11350 => (eq_4‹U› nat_3 __11350 zero_4) zero_4
    (refl_6‹U› nat_3 zero_4)),
  (exists_5‹U,U›
    nat_3
    function _11351 : nat_3 -> U
    | __11353 => (eq_4‹U› nat_3 __11353 zero_4)))
Program.check_tm(
  (ex_7‹U,U›
    nat_3
    function _11354 : nat_3 -> U
    | __11356 => (eq_4‹U› nat_3 __11356 zero_4) zero_4
    (refl_6‹U› nat_3 zero_4)),
  (exists_5‹U,U›
    nat_3
    function _11357 : nat_3 -> U
    | __11359 => (eq_4‹U› nat_3 __11359 zero_4))
)
Program.infer_tm((ex_7‹U,U›
                   nat_3
                   function _11360 : nat_3 -> U
                   | __11362 => (eq_4‹U› nat_3 __11362 zero_4) zero_4
                   (refl_6‹U› nat_3 zero_4)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm(
  function _11363 : nat_3 -> U
  | __11365 => (eq_4‹U› nat_3 __11365 zero_4), nat_3 -> U
)
Logical.infer_tm(function _11367 : nat_3 -> U
                 | __11369 => (eq_4‹U› nat_3 __11369 zero_4))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11374, __11373 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11373 zero_4)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11374, __11373 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11374, #__11373)
case_coverage_ok( (eq_4‹U› nat_3 x_11374 zero_4), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11374 zero_4), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11374 zero_4))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11374, nat_3 )
Logical.infer_tm(x_11374)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal(nat_3 -> U, nat_3 -> U)
Program.check_tm( zero_4, nat_3 )
Program.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( (refl_6‹U› nat_3 zero_4),
  ((function _11392 : nat_3 -> U
    | __11394 => (eq_4‹U› nat_3 __11394 zero_4)) zero_4)
)
Logical.infer_tm((refl_6‹U› nat_3 zero_4))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(((function _11395 : nat_3 -> U
                       | __11397 => (eq_4‹U› nat_3 __11397 zero_4))
                       zero_4), (eq_4‹U› nat_3 zero_4 zero_4))
Logical.assert_equal((exists_5‹U,U›
                       nat_3
                       function _11398 : nat_3 -> U
                       | __11400 => (eq_4‹U› nat_3 __11400 zero_4)), 
(exists_5‹U,U›
  nat_3
  function _11401 : nat_3 -> U
  | __11403 => (eq_4‹U› nat_3 __11403 zero_4)))
trans12.Program.case_split(vecU_20, vconsU_28)
Logical.infer_tm(nat_3)
Logical.infer_tm(A_11297)
Logical.infer_tm((vec_8‹U› A_11297 n_11407))
Logical.check_tm( A_11297, U )
Logical.infer_tm(A_11297)
Logical.assert_equal(U, U)
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹U› #A_11297 #n_11304),
      (vec_8‹U› #A_11297 (succ_5‹› #n_11407)));
    {| eq_pat?(N #A_11297, A_11292 : U)
       eq_pat?(N #n_11304, n_11293 : nat_3)
       eq_pat?(N #n_11407, n_11294 : nat_3)
       eq_pat?(R #hd_11408, hd_11295 : #A_11297)
       eq_pat?(R #tl_11409, tl_11296 : (vec_8‹U› #A_11297 #n_11407)) ::: [] =>?
         match ((vlength_11251) #A_11292 #n_11294 #tl_11296) in
           (exists_5‹U,U›
             nat_3
             function _11438 : nat_3 -> U
             | __11440 => (eq_4‹U› nat_3 __11440 #n_11294)) -o
             (exists_5‹U,U›
               nat_3
               function _11441 : nat_3 -> U
               | __11443 =>
                 (eq_4‹U› nat_3 __11443 (succ_5‹› #n_11294)))
         with
         | (ex_7 m_11444 pf_11445) =>
           (ex_7‹U,U›
             nat_3
             function _11446 : nat_3 -> U
             | __11448 => (eq_4‹U› nat_3 __11448 (succ_5‹› #n_11294))
             (succ_5‹› m_11444)
             ((congr_3‹U,U,U›)
               nat_3 nat_3 m_11444 #n_11294
               function _11449 : nat_3 -> nat_3
               | __11451 => (succ_5‹› __11451) pf_11445))
    |}
  |}
|}
unify_local(
  eq_pat?(N #A_11297, A_11292 : U)
  eq_pat?(N #n_11304, n_11293 : nat_3)
  eq_pat?(N #n_11407, n_11294 : nat_3)
  eq_pat?(R #hd_11408, hd_11295 : #A_11297)
  eq_pat?(R #tl_11409, tl_11296 : (vec_8‹U› #A_11297 #n_11407))
)
unify_global(
  eq_term?( (vec_8‹U› #A_11297 #n_11304),
    (vec_8‹U› #A_11297 (succ_5‹› #n_11407)))
)
simpl_pprbm ~expand:false( #A_11297, #A_11292)
simpl_pprbm ~expand:false( #n_11304, #n_11293)
simpl_pprbm ~expand:false( #n_11407, #n_11294)
simpl_pprbm ~expand:false( #hd_11408, #hd_11295)
simpl_pprbm ~expand:false( #tl_11409, #tl_11296)
simpl_pprbm ~expand:false( (vec_8‹U› #A_11297 #n_11304),
  (vec_8‹U› #A_11297 (succ_5‹› #n_11407)))
simpl_pprbm ~expand:false( #A_11297, #A_11297)
simpl_pprbm ~expand:false( #n_11304, (succ_5‹› #n_11407))
case_coverage_ok(
  match ((vlength_11251) A_11297 n_11407 tl_11409) in
    (exists_5‹U,U›
      nat_3
      function _11477 : nat_3 -> U
      | __11479 => (eq_4‹U› nat_3 __11479 n_11407)) -o
      (exists_5‹U,U›
        nat_3
        function _11480 : nat_3 -> U
        | __11482 => (eq_4‹U› nat_3 __11482 (succ_5‹› n_11407)))
  with
  | (ex_7 m_11483 pf_11484) =>
    (ex_7‹U,U›
      nat_3
      function _11485 : nat_3 -> U
      | __11487 => (eq_4‹U› nat_3 __11487 (succ_5‹› n_11407))
      (succ_5‹› m_11483)
      ((congr_3‹U,U,U›)
        nat_3 nat_3 m_11483 n_11407
        function _11488 : nat_3 -> nat_3
        | __11490 => (succ_5‹› __11490) pf_11484)),
  (exists_5‹U,U›
    nat_3
    function _11491 : nat_3 -> U
    | __11493 => (eq_4‹U› nat_3 __11493 (succ_5‹› n_11407))))
Program.check_tm(
  match ((vlength_11251) A_11297 n_11407 tl_11409) in
    (exists_5‹U,U›
      nat_3
      function _11495 : nat_3 -> U
      | __11497 => (eq_4‹U› nat_3 __11497 n_11407)) -o
      (exists_5‹U,U›
        nat_3
        function _11498 : nat_3 -> U
        | __11500 => (eq_4‹U› nat_3 __11500 (succ_5‹› n_11407)))
  with
  | (ex_7 m_11501 pf_11502) =>
    (ex_7‹U,U›
      nat_3
      function _11503 : nat_3 -> U
      | __11505 => (eq_4‹U› nat_3 __11505 (succ_5‹› n_11407))
      (succ_5‹› m_11501)
      ((congr_3‹U,U,U›)
        nat_3 nat_3 m_11501 n_11407
        function _11506 : nat_3 -> nat_3
        | __11508 => (succ_5‹› __11508) pf_11502)),
  (exists_5‹U,U›
    nat_3
    function _11509 : nat_3 -> U
    | __11511 => (eq_4‹U› nat_3 __11511 (succ_5‹› n_11407)))
)
Program.infer_tm(match ((vlength_11251) A_11297 n_11407 tl_11409) in
                   (exists_5‹U,U›
                     nat_3
                     function _11513 : nat_3 -> U
                     | __11515 => (eq_4‹U› nat_3 __11515 n_11407)) -o
                     (exists_5‹U,U›
                       nat_3
                       function _11516 : nat_3 -> U
                       | __11518 =>
                         (eq_4‹U› nat_3 __11518 (succ_5‹› n_11407)))
                 with
                 | (ex_7 m_11519 pf_11520) =>
                   (ex_7‹U,U›
                     nat_3
                     function _11521 : nat_3 -> U
                     | __11523 =>
                       (eq_4‹U› nat_3 __11523 (succ_5‹› n_11407))
                     (succ_5‹› m_11519)
                     ((congr_3‹U,U,U›)
                       nat_3 nat_3 m_11519 n_11407
                       function _11524 : nat_3 -> nat_3
                       | __11526 => (succ_5‹› __11526) pf_11520)))
Program.infer_motive_R(((vlength_11251) A_11297 n_11407 tl_11409), (exists_5‹U,U›
                                                                    nat_3
                                                                    function _11527 :
                                                                    nat_3 ->
                                                                    U
                                                                    | 
                                                                    __11529 =>
                                                                    (eq_4‹U›
                                                                    nat_3
                                                                    __11529
                                                                    n_11407)))
Program.check_tm( ((vlength_11251) A_11297 n_11407 tl_11409),
  (exists_5‹U,U›
    nat_3
    function _11530 : nat_3 -> U
    | __11532 => (eq_4‹U› nat_3 __11532 n_11407))
)
Program.infer_tm(((vlength_11251) A_11297 n_11407 tl_11409))
Program.infer_tm(((vlength_11251) A_11297 n_11407))
Program.infer_tm(((vlength_11251) A_11297))
Program.infer_tm(vlength_11251)
Logical.check_tm( A_11297, U )
Logical.infer_tm(A_11297)
Logical.assert_equal(U, U)
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm( tl_11409, (vec_8‹U› A_11297 n_11407) )
Program.infer_tm(tl_11409)
Logical.assert_equal((vec_8‹U› A_11297 n_11407), (vec_8‹U›
                                                       A_11297 n_11407))
Logical.assert_equal((exists_5‹U,U›
                       nat_3
                       function _11533 : nat_3 -> U
                       | __11535 => (eq_4‹U› nat_3 __11535 n_11407)), 
(exists_5‹U,U›
  nat_3
  function _11536 : nat_3 -> U
  | __11538 => (eq_4‹U› nat_3 __11538 n_11407)))
Program.infer_motive_R_ok(((vlength_11251) A_11297 n_11407 tl_11409), 
(exists_5‹U,U›
  nat_3
  function _11542 : nat_3 -> U
  | __11544 => (eq_4‹U› nat_3 __11544 n_11407)))
Program.infer_motive_ok
trans12.Program.case_intro(_11547, (exists_5‹U,U›
                                     nat_3
                                     function _11548 : nat_3 -> U
                                     | __11550 =>
                                       (eq_4‹U› nat_3 __11550 n_11407)))
Logical.infer_tm((exists_5‹U,U›
                   nat_3
                   function _11560 : nat_3 -> U
                   | __11562 => (eq_4‹U› nat_3 __11562 n_11407)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm(
  function _11563 : nat_3 -> U
  | __11565 => (eq_4‹U› nat_3 __11565 n_11407), nat_3 -> U
)
Logical.infer_tm(function _11567 : nat_3 -> U
                 | __11569 => (eq_4‹U› nat_3 __11569 n_11407))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11574, __11573 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11573 n_11407)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11574, __11573 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11574, #__11573)
case_coverage_ok( (eq_4‹U› nat_3 x_11574 n_11407), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11574 n_11407), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11574 n_11407))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11574, nat_3 )
Logical.infer_tm(x_11574)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal(nat_3 -> U, nat_3 -> U)
Logical.infer_tm((exists_5‹U,U›
                   nat_3
                   function _11604 : nat_3 -> U
                   | __11606 => (eq_4‹U› nat_3 __11606 n_11407)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm(
  function _11607 : nat_3 -> U
  | __11609 => (eq_4‹U› nat_3 __11609 n_11407), nat_3 -> U
)
Logical.infer_tm(function _11611 : nat_3 -> U
                 | __11613 => (eq_4‹U› nat_3 __11613 n_11407))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11618, __11617 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11617 n_11407)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11618, __11617 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11618, #__11617)
case_coverage_ok( (eq_4‹U› nat_3 x_11618 n_11407), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11618 n_11407), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11618 n_11407))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11618, nat_3 )
Logical.infer_tm(x_11618)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal(nat_3 -> U, nat_3 -> U)
trans12.Program.case_split(existsUU_14, exUU_18)
Logical.infer_tm(nat_3)
Logical.infer_tm(((function _11665 : nat_3 -> U
                   | __11667 => (eq_4‹U› nat_3 __11667 n_11407)) 
                 m_11642))
Logical.infer_tm(function _11668 : nat_3 -> U
                 | __11670 => (eq_4‹U› nat_3 __11670 n_11407))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11675, __11674 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11674 n_11407)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11675, __11674 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11675, #__11674)
case_coverage_ok( (eq_4‹U› nat_3 x_11675 n_11407), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11675 n_11407), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11675 n_11407))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11675, nat_3 )
Logical.infer_tm(x_11675)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( m_11642, nat_3 )
Logical.infer_tm(m_11642)
Logical.assert_equal(nat_3, nat_3)
case_coverage{|
  prblm {|
    eq_term?(
      (exists_5‹U,U›
        nat_3
        function _11717 : nat_3 -> U
        | __11719 => (eq_4‹U› nat_3 __11719 n_11407)),
      (exists_5‹U,U›
        nat_3
        function _11720 : nat_3 -> U
        | __11722 => (eq_4‹U› nat_3 __11722 n_11407)));
    {| eq_pat?(R #m_11642, m_11545 : nat_3)
       eq_pat?(N #pf_11643, pf_11546 : (eq_4‹U› nat_3 #m_11642 n_11407)) ::: [] =>?
         (ex_7‹U,U›
           nat_3
           function _11723 : nat_3 -> U
           | __11725 => (eq_4‹U› nat_3 __11725 (succ_5‹› n_11407))
           (succ_5‹› #m_11545)
           ((congr_3‹U,U,U›)
             nat_3 nat_3 #m_11545 n_11407
             function _11726 : nat_3 -> nat_3
             | __11728 => (succ_5‹› __11728) #pf_11546))
    |}
  |}
|}
unify_local(
  eq_pat?(R #m_11642, m_11545 : nat_3)
  eq_pat?(N #pf_11643, pf_11546 : (eq_4‹U› nat_3 #m_11642 n_11407))
)
unify_global(
  eq_term?(
    (exists_5‹U,U›
      nat_3
      function _11729 : nat_3 -> U
      | __11731 => (eq_4‹U› nat_3 __11731 n_11407)),
    (exists_5‹U,U›
      nat_3
      function _11732 : nat_3 -> U
      | __11734 => (eq_4‹U› nat_3 __11734 n_11407)))
)
simpl_pprbm ~expand:false( #m_11642, #m_11545)
simpl_pprbm ~expand:false( #pf_11643, #pf_11546)
simpl_pprbm ~expand:false(
  (exists_5‹U,U›
    nat_3
    function _11741 : nat_3 -> U
    | __11743 => (eq_4‹U› nat_3 __11743 n_11407)),
  (exists_5‹U,U›
    nat_3
    function _11744 : nat_3 -> U
    | __11746 => (eq_4‹U› nat_3 __11746 n_11407)))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false(
  function _11747 : nat_3 -> U
  | __11749 => (eq_4‹U› nat_3 __11749 n_11407),
  function _11750 : nat_3 -> U
  | __11752 => (eq_4‹U› nat_3 __11752 n_11407))
simpl_pprbm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( U, U)
simpl_pprbm ~expand:false( (eq_4‹U› nat_3 __11757 n_11407),
  (eq_4‹U› nat_3 __11757 n_11407))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( __11757, __11757)
simpl_pprbm ~expand:false( n_11407, n_11407)
case_coverage_ok(
  (ex_7‹U,U›
    nat_3
    function _11779 : nat_3 -> U
    | __11781 => (eq_4‹U› nat_3 __11781 (succ_5‹› n_11407))
    (succ_5‹› m_11642)
    ((congr_3‹U,U,U›)
      nat_3 nat_3 m_11642 n_11407
      function _11782 : nat_3 -> nat_3
      | __11784 => (succ_5‹› __11784) pf_11643)),
  (exists_5‹U,U›
    nat_3
    function _11785 : nat_3 -> U
    | __11787 => (eq_4‹U› nat_3 __11787 (succ_5‹› n_11407))))
Program.check_tm(
  (ex_7‹U,U›
    nat_3
    function _11788 : nat_3 -> U
    | __11790 => (eq_4‹U› nat_3 __11790 (succ_5‹› n_11407))
    (succ_5‹› m_11642)
    ((congr_3‹U,U,U›)
      nat_3 nat_3 m_11642 n_11407
      function _11791 : nat_3 -> nat_3
      | __11793 => (succ_5‹› __11793) pf_11643)),
  (exists_5‹U,U›
    nat_3
    function _11794 : nat_3 -> U
    | __11796 => (eq_4‹U› nat_3 __11796 (succ_5‹› n_11407)))
)
Program.infer_tm((ex_7‹U,U›
                   nat_3
                   function _11797 : nat_3 -> U
                   | __11799 =>
                     (eq_4‹U› nat_3 __11799 (succ_5‹› n_11407))
                   (succ_5‹› m_11642)
                   ((congr_3‹U,U,U›)
                     nat_3 nat_3 m_11642 n_11407
                     function _11800 : nat_3 -> nat_3
                     | __11802 => (succ_5‹› __11802) pf_11643)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm(
  function _11803 : nat_3 -> U
  | __11805 => (eq_4‹U› nat_3 __11805 (succ_5‹› n_11407)), nat_3 -> U
)
Logical.infer_tm(function _11807 : nat_3 -> U
                 | __11809 =>
                   (eq_4‹U› nat_3 __11809 (succ_5‹› n_11407)))
Logical.infer_tm(nat_3 -> U)
Logical.infer_tm(nat_3)
Logical.infer_tm(U)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11814, __11813 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #__11813 (succ_5‹› n_11407))
    |}
  |}
|}
unify_local( eq_pat?(R #x_11814, __11813 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11814, #__11813)
case_coverage_ok( (eq_4‹U› nat_3 x_11814 (succ_5‹› n_11407)), U)
Logical.check_tm( (eq_4‹U› nat_3 x_11814 (succ_5‹› n_11407)), U )
Logical.infer_tm((eq_4‹U› nat_3 x_11814 (succ_5‹› n_11407)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( x_11814, nat_3 )
Logical.infer_tm(x_11814)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( (succ_5‹› n_11407), nat_3 )
Logical.infer_tm((succ_5‹› n_11407))
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal(nat_3 -> U, nat_3 -> U)
Program.check_tm( (succ_5‹› m_11642), nat_3 )
Program.infer_tm((succ_5‹› m_11642))
Program.check_tm( m_11642, nat_3 )
Program.infer_tm(m_11642)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm(
  ((congr_3‹U,U,U›)
    nat_3 nat_3 m_11642 n_11407
    function _11844 : nat_3 -> nat_3
    | __11846 => (succ_5‹› __11846) pf_11643),
  ((function _11847 : nat_3 -> U
    | __11849 => (eq_4‹U› nat_3 __11849 (succ_5‹› n_11407)))
    (succ_5‹› m_11642))
)
Logical.infer_tm(((congr_3‹U,U,U›)
                   nat_3 nat_3 m_11642 n_11407
                   function _11850 : nat_3 -> nat_3
                   | __11852 => (succ_5‹› __11852) pf_11643))
Logical.infer_tm(((congr_3‹U,U,U›)
                   nat_3 nat_3 m_11642 n_11407
                   function _11853 : nat_3 -> nat_3
                   | __11855 => (succ_5‹› __11855)))
Logical.infer_tm(((congr_3‹U,U,U›) nat_3 nat_3 m_11642 n_11407))
Logical.infer_tm(((congr_3‹U,U,U›) nat_3 nat_3 m_11642))
Logical.infer_tm(((congr_3‹U,U,U›) nat_3 nat_3))
Logical.infer_tm(((congr_3‹U,U,U›) nat_3))
Logical.infer_tm(congr_3‹U,U,U›)
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( m_11642, nat_3 )
Logical.infer_tm(m_11642)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm( n_11407, nat_3 )
Logical.infer_tm(n_11407)
Logical.assert_equal(nat_3, nat_3)
Logical.check_tm(
  function _11856 : nat_3 -> nat_3
  | __11858 => (succ_5‹› __11858), nat_3 -> nat_3
)
Logical.infer_tm(function _11860 : nat_3 -> nat_3
                 | __11862 => (succ_5‹› __11862))
Logical.infer_tm(nat_3 -> nat_3)
Logical.infer_tm(nat_3)
Logical.infer_tm(nat_3)
Logical.infer_tm(nat_3)
case_coverage{|
  prblm {| ;
    {| eq_pat?(R #x_11867, __11866 : nat_3) ::: [] =>?
         (succ_5‹› #__11866)
    |}
  |}
|}
unify_local( eq_pat?(R #x_11867, __11866 : nat_3) )
unify_global(  )
simpl_pprbm ~expand:false( #x_11867, #__11866)
case_coverage_ok( (succ_5‹› x_11867), nat_3)
Logical.check_tm( (succ_5‹› x_11867), nat_3 )
Logical.infer_tm((succ_5‹› x_11867))
Logical.check_tm( x_11867, nat_3 )
Logical.infer_tm(x_11867)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3 -> nat_3, nat_3 -> nat_3)
Logical.check_tm( pf_11643, (eq_4‹U› nat_3 m_11642 n_11407) )
Logical.infer_tm(pf_11643)
Logical.assert_equal((eq_4‹U› nat_3 m_11642 n_11407), ((function _11897 :
                                                              nat_3 -> U
                                                            | __11899 =>
                                                              (eq_4‹U›
                                                                nat_3 __11899
                                                                n_11407))
                                                            m_11642))
Logical.assert_equal(((function _11900 : nat_3 -> U
                       | __11902 =>
                         (eq_4‹U› nat_3 __11902 (succ_5‹› n_11407)))
                       (succ_5‹› m_11642)), (eq_4‹U›
                                                  nat_3
                                                  ((function _11903 :
                                                      nat_3 -> nat_3
                                                    | __11905 =>
                                                      (succ_5‹› __11905))
                                                    m_11642)
                                                  ((function _11906 :
                                                      nat_3 -> nat_3
                                                    | __11908 =>
                                                      (succ_5‹› __11908))
                                                    n_11407)))
Logical.assert_equal((exists_5‹U,U›
                       nat_3
                       function _11909 : nat_3 -> U
                       | __11911 =>
                         (eq_4‹U› nat_3 __11911 (succ_5‹› n_11407))), 
(exists_5‹U,U›
  nat_3
  function _11912 : nat_3 -> U
  | __11914 => (eq_4‹U› nat_3 __11914 (succ_5‹› n_11407))))
trans12.Program.case_introed((exists_5‹U,U›
                               nat_3
                               function _11918 : nat_3 -> U
                               | __11920 =>
                                 (eq_4‹U› nat_3 __11920 n_11407)))
Logical.assert_equal((exists_5‹U,U›
                       nat_3
                       function _11921 : nat_3 -> U
                       | __11923 =>
                         (eq_4‹U› nat_3 __11923 (succ_5‹› n_11407))), 
(exists_5‹U,U›
  nat_3
  function _11924 : nat_3 -> U
  | __11926 => (eq_4‹U› nat_3 __11926 (succ_5‹› n_11407))))
trans12.Program.case_introed((vec_8‹U› #A_11297 #n_11304))
trans12.Program.case_introed(nat_3)
trans12.Program.case_introed(U)
Logical.assert_equal(∀ {A_11930 : U} ->
                       ∀ {n_11931 : nat_3} ->
                         (vec_8‹U› A_11930 n_11931) ->
                           (exists_5‹U,U›
                             nat_3
                             function _11933 : nat_3 -> U
                             | __11935 => (eq_4‹U› nat_3 __11935 n_11931)), 
∀ {A_11936 : U} ->
  ∀ {n_11937 : nat_3} ->
    (vec_8‹U› A_11936 n_11937) ->
      (exists_5‹U,U›
        nat_3
        function _11939 : nat_3 -> U
        | __11941 => (eq_4‹U› nat_3 __11941 n_11937)))
Logical.infer_tm((vec_8‹U› nat_3 (succ_5‹› zero_4)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( (succ_5‹› zero_4), nat_3 )
Logical.infer_tm((succ_5‹› zero_4))
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm(
  (vcons_12‹U› nat_3 zero_4 zero_4 (vnil_11‹U› nat_3)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4))
)
Program.infer_tm((vcons_12‹U› nat_3 zero_4 zero_4 (vnil_11‹U› nat_3)))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm( zero_4, nat_3 )
Program.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm( (vnil_11‹U› nat_3), (vec_8‹U› nat_3 zero_4) )
Program.infer_tm((vnil_11‹U› nat_3))
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.assert_equal((vec_8‹U› nat_3 zero_4), (vec_8‹U› nat_3 zero_4))
Logical.assert_equal((vec_8‹U› nat_3 (succ_5‹› zero_4)), (vec_8‹U›
                                                                   nat_3
                                                                   (succ_5‹›
                                                                    zero_4)))
Logical.infer_tm(nat_3)
Program.check_tm( ((hd_vec_4) nat_3 zero_4 xs_8), nat_3 )
Program.infer_tm(((hd_vec_4) nat_3 zero_4 xs_8))
Program.infer_tm(((hd_vec_4) nat_3 zero_4))
Program.infer_tm(((hd_vec_4) nat_3))
Program.infer_tm(hd_vec_4)
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm( xs_8, (vec_8‹U› nat_3 (succ_5‹› zero_4)) )
Program.infer_tm(xs_8)
Logical.assert_equal((vec_8‹U› nat_3 (succ_5‹› zero_4)), (vec_8‹U›
                                                                   nat_3
                                                                   (succ_5‹›
                                                                    zero_4)))
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(nat_3)
Program.check_tm( ((hd_vec2_5) nat_3 zero_4 xs_8), nat_3 )
Program.infer_tm(((hd_vec2_5) nat_3 zero_4 xs_8))
Program.infer_tm(((hd_vec2_5) nat_3 zero_4))
Program.infer_tm(((hd_vec2_5) nat_3))
Program.infer_tm(hd_vec2_5)
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm( xs_8, (vec_8‹U› nat_3 (succ_5‹› zero_4)) )
Program.infer_tm(xs_8)
Logical.assert_equal((vec_8‹U› nat_3 (succ_5‹› zero_4)), (vec_8‹U›
                                                                   nat_3
                                                                   (succ_5‹›
                                                                    zero_4)))
Logical.assert_equal(nat_3, nat_3)
Logical.infer_tm(nat_3)
Program.check_tm( ((hd_vec3_6) nat_3 zero_4 xs_8), nat_3 )
Program.infer_tm(((hd_vec3_6) nat_3 zero_4 xs_8))
Program.infer_tm(((hd_vec3_6) nat_3 zero_4))
Program.infer_tm(((hd_vec3_6) nat_3))
Program.infer_tm(hd_vec3_6)
Logical.check_tm( nat_3, U )
Logical.infer_tm(nat_3)
Logical.assert_equal(U, U)
Logical.check_tm( zero_4, nat_3 )
Logical.infer_tm(zero_4)
Logical.assert_equal(nat_3, nat_3)
Program.check_tm( xs_8, (vec_8‹U› nat_3 (succ_5‹› zero_4)) )
Program.infer_tm(xs_8)
Logical.assert_equal((vec_8‹U› nat_3 (succ_5‹› zero_4)), (vec_8‹U›
                                                                   nat_3
                                                                   (succ_5‹›
                                                                    zero_4)))
Logical.assert_equal(nat_3, nat_3)
#[program]
inductive unit_1 where
| tt_1 of layout[]

#[program]
inductive bool_2 where
| true_2 of layout[]
| false_3 of layout[]

#[program]
inductive nat_3 where
| zero_4 of layout[]
| succ_5 of layout[R]

#[logical]
inductive eqU_10 where
| reflU_14 of layout[]

#[logical]
inductive eqL_9 where
| reflL_13 of layout[]

#[program]
inductive existsUU_14 where
| exUU_18 of layout[R, N]

#[program]
inductive existsUL_13 where
| exUL_17 of layout[R, N]

#[program]
inductive existsLU_12 where


#[program]
inductive existsLL_11 where


#[program]
inductive singU_16 where
| justU_20 of layout[R]

#[program]
inductive singL_15 where
| justL_19 of layout[R]

#[program]
inductive listU_18 where
| nilU_23 of layout[]
| consU_24 of layout[R, R]

#[program]
inductive listL_17 where
| nilL_21 of layout[]
| consL_22 of layout[R, R]

#[program]
inductive vecU_20 where
| vnilU_27 of layout[]
| vconsU_28 of layout[N, R, R]

#[program]
inductive vecL_19 where
| vnilL_25 of layout[]
| vconsL_26 of layout[N, R, R]

#[program]
def rwlUU_15 :=
  fun rwl_11948 (A_11949, m_11950, n_11951, B_11952, __11953, __11954) =>
    match {NULL} with
    | reflU_14  => __11954
    end

#[program]
def rwlUL_14 :=
  fun rwl_11955 (A_11956, m_11957, n_11958, B_11959, __11960, __11961) =>
    match {NULL} with
    | reflU_14  => __11961
    end

#[program]
def rwlLU_13 :=
  fun rwl_11962 (A_11963, m_11964, n_11965, B_11966, __11967, __11968) =>
    match {NULL} with
    | reflL_13  => __11968
    end

#[program]
def rwlLL_12 :=
  fun rwl_11969 (A_11970, m_11971, n_11972, B_11973, __11974, __11975) =>
    match {NULL} with
    | reflL_13  => __11975
    end

#[program]
def rwrUU_19 :=
  fun rwr_11976 (A_11977, m_11978, n_11979, B_11980, __11981, __11982) =>
    match {NULL} with
    | reflU_14  => __11982
    end

#[program]
def rwrUL_18 :=
  fun rwr_11983 (A_11984, m_11985, n_11986, B_11987, __11988, __11989) =>
    match {NULL} with
    | reflU_14  => __11989
    end

#[program]
def rwrLU_17 :=
  fun rwr_11990 (A_11991, m_11992, n_11993, B_11994, __11995, __11996) =>
    match {NULL} with
    | reflL_13  => __11996
    end

#[program]
def rwrLL_16 :=
  fun rwr_11997 (A_11998, m_11999, n_12000, B_12001, __12002, __12003) =>
    match {NULL} with
    | reflL_13  => __12003
    end

#[logical]
def congrUUU_27 := NULL

#[logical]
def congrUUL_26 := NULL

#[logical]
def congrULU_25 := NULL

#[logical]
def congrULL_24 := NULL

#[logical]
def congrLUU_23 := NULL

#[logical]
def congrLUL_22 := NULL

#[logical]
def congrLLU_21 := NULL

#[logical]
def congrLLL_20 := NULL

#[program]
def hd_vec_4 :=
  fun hd_vec_12004 (A_12005, n_12006, __12007) =>
    match __12007 with
    | vnilU_27  => !! | vconsU_28 n_12008 hd_12009 tl_12010 => hd_12009
    end

#[program]
def hd_vec2_5 :=
  fun hd_vec2_12011 (A_12012, n_12013, xs_12014) =>
    match xs_12014 with
    | vnilU_27  => !! | vconsU_28 n_12015 hd_12016 tl_12017 => hd_12016
    end

#[program]
def hd_vec3_6 :=
  fun hd_vec3_12018 (A_12019, n_12020, xs_12021) =>
    match xs_12021 with
    | vnilU_27  => !! | vconsU_28 n_12022 hd_12023 tl_12024 => hd_12023
    end

#[program]
def vlength_7 :=
  fun vlength_12025 (A_12026, n_12027, __12028) =>
    match __12028 with
    | vnilU_27  => (exUU_18 zero_4 NULL)
    | vconsU_28 n_12029 hd_12030 tl_12031 =>
      match ((vlength_12025) NULL NULL tl_12031) with
      | exUU_18 m_12032 pf_12033 => (exUU_18 (succ_5 m_12032) NULL)
      end
    end

#[program]
def xs_8 := (vconsU_28 NULL zero_4 vnilU_27)

#[program]
def x_9 := ((hd_vec_4) NULL NULL xs_8)

#[program]
def y_10 := ((hd_vec2_5) NULL NULL xs_8)

#[program]
def z_11 := ((hd_vec3_6) NULL NULL xs_8)

-----------------------------------------

#[program]
inductive unit_1 where
| tt_1 of layout[]

#[program]
inductive bool_2 where
| true_2 of layout[]
| false_3 of layout[]

#[program]
inductive nat_3 where
| zero_4 of layout[]
| succ_5 of layout[R]

#[logical]
inductive eqU_10 where
| reflU_14 of layout[]

#[logical]
inductive eqL_9 where
| reflL_13 of layout[]

#[program]
inductive existsUU_14 where
| exUU_18 of layout[R, N]

#[program]
inductive existsUL_13 where
| exUL_17 of layout[R, N]

#[program]
inductive existsLU_12 where


#[program]
inductive existsLL_11 where


#[program]
inductive singU_16 where
| justU_20 of layout[R]

#[program]
inductive singL_15 where
| justL_19 of layout[R]

#[program]
inductive listU_18 where
| nilU_23 of layout[]
| consU_24 of layout[R, R]

#[program]
inductive listL_17 where
| nilL_21 of layout[]
| consL_22 of layout[R, R]

#[program]
inductive vecU_20 where
| vnilU_27 of layout[]
| vconsU_28 of layout[N, R, R]

#[program]
inductive vecL_19 where
| vnilL_25 of layout[]
| vconsL_26 of layout[N, R, R]

#[program]
def rwlUU_15 :=
  fun rwl_12120 (A_12121, m_12122, n_12123, B_12124, __12125, __12126) =>
    __12126

#[program]
def rwlUL_14 :=
  fun rwl_12127 (A_12128, m_12129, n_12130, B_12131, __12132, __12133) =>
    __12133

#[program]
def rwlLU_13 :=
  fun rwl_12134 (A_12135, m_12136, n_12137, B_12138, __12139, __12140) =>
    __12140

#[program]
def rwlLL_12 :=
  fun rwl_12141 (A_12142, m_12143, n_12144, B_12145, __12146, __12147) =>
    __12147

#[program]
def rwrUU_19 :=
  fun rwr_12148 (A_12149, m_12150, n_12151, B_12152, __12153, __12154) =>
    __12154

#[program]
def rwrUL_18 :=
  fun rwr_12155 (A_12156, m_12157, n_12158, B_12159, __12160, __12161) =>
    __12161

#[program]
def rwrLU_17 :=
  fun rwr_12162 (A_12163, m_12164, n_12165, B_12166, __12167, __12168) =>
    __12168

#[program]
def rwrLL_16 :=
  fun rwr_12169 (A_12170, m_12171, n_12172, B_12173, __12174, __12175) =>
    __12175

#[logical]
def congrUUU_27 := NULL

#[logical]
def congrUUL_26 := NULL

#[logical]
def congrULU_25 := NULL

#[logical]
def congrULL_24 := NULL

#[logical]
def congrLUU_23 := NULL

#[logical]
def congrLUL_22 := NULL

#[logical]
def congrLLU_21 := NULL

#[logical]
def congrLLL_20 := NULL

#[program]
def hd_vec_4 :=
  fun hd_vec_12176 (A_12177, n_12178, __12179) =>
    match __12179 with
    | vconsU_28 n_12180 hd_12181 tl_12182 => hd_12181
    end

#[program]
def hd_vec2_5 :=
  fun hd_vec2_12183 (A_12184, n_12185, xs_12186) =>
    match xs_12186 with
    | vconsU_28 n_12187 hd_12188 tl_12189 => hd_12188
    end

#[program]
def hd_vec3_6 :=
  fun hd_vec3_12190 (A_12191, n_12192, xs_12193) =>
    match xs_12193 with
    | vconsU_28 n_12194 hd_12195 tl_12196 => hd_12195
    end

#[program]
def vlength_7 :=
  fun vlength_12197 (A_12198, n_12199, __12200) =>
    match __12200 with
    | vnilU_27  => (exUU_18 zero_4 NULL)
    | vconsU_28 n_12201 hd_12202 tl_12203 =>
      match ((vlength_12197) NULL NULL tl_12203) with
      | exUU_18 m_12204 pf_12205 => (exUU_18 (succ_5 m_12204) NULL)
      end
    end

#[program]
def xs_8 := (vconsU_28 NULL zero_4 vnilU_27)

#[program]
def x_9 := ((hd_vec_4) NULL NULL xs_8)

#[program]
def y_10 := ((hd_vec2_5) NULL NULL xs_8)

#[program]
def z_11 := ((hd_vec3_6) NULL NULL xs_8)

-----------------------------------------

