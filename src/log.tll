[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase ((TBase (Type U)), [(DMul ("tt", (TBase (Id "unit"))))]))))};
  Inductive {name = "nat"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("zero", (TBase (Id "nat"))));
             (DMul ("succ",
                (TBind (R, (Id "nat"), (Binder ("pred", (TBase (Id "nat"))))
                   ))
                ))
             ]))
       ))};
  Inductive {name = "eq"; relv = N;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Id "A"),
                (Binder ("m",
                   (PBase
                      ((TBind (R, (Id "A"), (Binder ("_", (TBase (Type U))))
                          )),
                       [(DMul ("refl",
                           (TBase
                              (App [(Id "eq"); (Id "_"); (Id "m"); (Id "m")]))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "exists"; relv = R;
    body =
    (Binder (["s"; "r"; "t"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Pi (R, U, (Id "A"), (Binder ("_", (Type (SId "r")))))),
                (Binder ("B",
                   (PBase
                      ((TBase (Type (SId "t"))),
                       [(DMul ("ex",
                           (TBind (R, (Id "A"),
                              (Binder ("m",
                                 (TBind (N, (App [(Id "B"); (Id "m")]),
                                    (Binder ("pf",
                                       (TBase
                                          (App
                                             [(Id "exists"); (Id "A");
                                               (Id "B")]))
                                       ))
                                    ))
                                 ))
                              ))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "sing"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id "A"),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DMul ("just",
                     (TBind (R, (Id "A"),
                        (Binder ("m",
                           (TBase (App [(Id "sing"); (Id "_"); (Id "m")]))))
                        ))
                     ))
                   ]))
             ))
          ))
       ))};
  Definition {name = "one"; relv = R;
    body = (Binder ([], ((App [(Id "succ"); (Id "zero")]), (Id "_"))))};
  Definition {name = "test"; relv = R;
    body =
    (Binder ([],
       ((Fun (
           (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "one")]),
              (Binder ("_", (Id "unit"))))),
           (Binder ((Some "test"),
              [([(PMul ("just", [(PId "x")]))],
                (Some (Let (R,
                         (Ann ((App [(Id "ex"); (Id "x"); (Id "refl")]),
                            (App
                               [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                                 (Id "_");
                                 (Fun (
                                    (Pi (R, U, (Id "_"),
                                       (Binder ("x", (Id "_"))))),
                                    (Binder (None,
                                       [([(PId "x")],
                                         (Some (App
                                                  [(Id "eq"); (Id "_");
                                                    (Id "x");
                                                    (App
                                                       [(Id "succ");
                                                         (Id "zero")])
                                                    ])))
                                         ]
                                       ))
                                    ))
                                 ])
                            )),
                         (Binder ("pf", (Id "tt")))))))
                ]
              ))
           )),
        (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "one")]),
           (Binder ("_", (Id "unit"))))))
       ))}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive nat_2‹› : U where
| zero_2 : nat_2
| succ_3 (pred_36 : nat_2) : nat_2

#[logical]
inductive eq_3‹s_37› (A_38 : Type‹s_37›) (m_39 : A_38): A_38 -> U
where
| refl_4 : (eq_3‹??_1› ?_1 m_39 m_39)

#[program]
inductive exists_4‹s_41,r_42,t_43› (A_44 : Type‹s_41›) (B_45 : 
A_44 -> Type‹r_42›): Type‹t_43› where
| ex_5
    (m_47 : A_44) {pf_48 : (B_45) m_47}
    : (exists_4‹??_2,??_3,??_4› A_44 B_45)

#[program]
inductive sing_5‹s_49› (A_50 : Type‹s_49›): A_50 -> Type‹s_49›
where
| just_6 (m_52 : A_50) : (sing_5‹??_5› ?_2 m_52)

#[program]
def one_1‹› : ?_3 := (succ_3‹› zero_2)

#[program]
def test_2‹› : (sing_5‹??_14› ?_13 one_1) -> unit_1 :=
  function test_54 : (sing_5‹??_6› ?_4 one_1) -> unit_1
  | (just_6 x_56) =>
    let pf_57 :=
      ((ex_5‹??_8,??_9,??_10› x_56 refl_4‹??_7›)
        : (exists_4‹??_11,??_12,L›
            ?_9
            function _58 : ∀ (x_59 : ?_10) -> ?_11
            | x_60 => (eq_3‹??_13› ?_12 x_60 (succ_3‹› zero_2))))
    in tt_1

-----------------------------------------

inductive-------------------------
infer_tm(unit_1)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_delayed
----------------------------------

inductive-------------------------
infer_tm(nat_2)
infer_tm(nat_2)
infer_tm(nat_2)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_delayed
----------------------------------

inductive-------------------------
infer_tm(Type‹s_63›)
infer_tm(A_64)
infer_tm(A_64)
infer_tm(Type‹s_67›)
infer_tm(A_68)
assert_equal1(A_68, ?_1)
assert_equal1(m_69, m_69)
infer_tm((eq_3‹??_1› ?_1 m_69 m_69))
check_tm(?_1, Type‹??_1›)
check_tm(m_69, ?_1)
infer_tm(m_69)
assert_equal1(?_1, A_68)
check_tm(m_69, ?_1)
infer_tm(m_69)
assert_equal1(?_1, A_68)
begin_delayed
  mctx {|
    ?_1 :? Type‹??_1›
  |}
  smeta_meta {|
    ??_1 <= s_70
    
  |}
  imeta_meta {|
    ?_1 <= A_73
    
  |}
  eqns {|
    
  |}
end_delayed
loop_check(A_68 Type‹s_67›)
infer_tm(Type‹s_67›)
check_tm(A_68, Type‹s_67›)
infer_tm(A_68)
assert_equal1(Type‹s_67›, Type‹s_67›)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_74
    
  |}
  imeta_meta {|
    ?_1 <= A_77
    
  |}
  eqns {|
    
  |}
end_delayed
----------------------------------

inductive-------------------------
infer_tm(Type‹s_89›)
infer_tm(A_92 -> Type‹r_90›)
infer_tm(A_92)
infer_tm(Type‹r_90›)
infer_tm(Type‹s_96›)
infer_tm(A_99 -> Type‹r_97›)
infer_tm(A_99)
infer_tm(Type‹r_97›)
infer_tm(A_99)
infer_tm((B_100) m_103)
infer_tm(B_100)
check_tm(m_103, A_99)
infer_tm(m_103)
assert_equal1(A_99, A_99)
assert_equal1(A_99, A_99)
assert_equal1(B_100, B_100)
infer_tm((exists_4‹??_2,??_3,??_4› A_99 B_100))
check_tm(A_99, Type‹??_2›)
infer_tm(A_99)
assert_equal1(Type‹??_2›, Type‹s_96›)
check_tm(B_100, A_99 -> Type‹??_3›)
infer_tm(B_100)
assert_equal1(A_99 -> Type‹??_3›, A_99 -> Type‹r_97›)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_116
    ??_2 <= s_119
    ??_3 <= r_121
    ??_4 <= t_123
    
  |}
  imeta_meta {|
    ?_1 <= A_128
    
  |}
  eqns {|
    
  |}
end_delayed
----------------------------------

inductive-------------------------
infer_tm(Type‹s_160›)
infer_tm(A_161)
infer_tm(Type‹s_163›)
infer_tm(A_164)
assert_equal1(A_164, ?_2)
infer_tm((sing_5‹??_5› ?_2 m_165))
check_tm(?_2, Type‹??_5›)
check_tm(m_165, ?_2)
infer_tm(m_165)
assert_equal1(?_2, A_164)
begin_delayed
  mctx {|
    ?_2 :? Type‹??_5›
  |}
  smeta_meta {|
    ??_1 <= s_166
    ??_2 <= s_169
    ??_3 <= r_171
    ??_4 <= t_173
    ??_5 <= s_176
    
  |}
  imeta_meta {|
    ?_1 <= A_179
    ?_2 <= A_182
    
  |}
  eqns {|
    
  |}
end_delayed
loop_check(A_164 Type‹s_163›)
infer_tm(Type‹s_163›)
check_tm(A_164, Type‹s_163›)
infer_tm(A_164)
assert_equal1(Type‹s_163›, Type‹s_163›)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_183
    ??_2 <= s_186
    ??_3 <= r_188
    ??_4 <= t_190
    ??_5 <= s_193
    
  |}
  imeta_meta {|
    ?_1 <= A_196
    ?_2 <= A_199
    
  |}
  eqns {|
    
  |}
end_delayed
----------------------------------

definition-------------------------
infer_tm(?_3)
delay_assert(?_14, ??_15)
check_tm((succ_3‹› zero_2), ?_3)
infer_tm((succ_3‹› zero_2))
check_tm(zero_2, nat_2)
infer_tm(zero_2)
assert_equal1(nat_2, nat_2)
assert_equal1(?_3, nat_2)
begin_delayed
  mctx {|
    ?_3 :? ?_14
  |}
  smeta_meta {|
    ??_1 <= s_212
    ??_2 <= s_215
    ??_3 <= r_217
    ??_4 <= t_219
    ??_5 <= s_222
    
  |}
  imeta_meta {|
    ?_1 <= A_225
    ?_2 <= A_228
    
  |}
  eqns {|
    equal_tm? (?_3, nat_2);
    equal_tm? (?_14, Type‹??_15›)
  |}
end_delayed
loop_check(nat_2 Type‹??_15›)
infer_tm(Type‹??_15›)
check_tm(nat_2, Type‹??_15›)
infer_tm(nat_2)
assert_equal1(Type‹??_15›, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_229
    ??_2 <= s_232
    ??_3 <= r_234
    ??_4 <= t_236
    ??_5 <= s_239
    
  |}
  imeta_meta {|
    ?_1 <= A_242
    ?_2 <= A_245
    ?_3 <= nat_2
    ?_14 <= Type‹??_15›
    
  |}
  eqns {|
    equal_tm? (Type‹??_15›, U)
  |}
end_delayed
----------------------------------

definition-------------------------
infer_tm((sing_5‹??_14› ?_13 one_1) -> unit_1)
infer_tm((sing_5‹??_14› ?_13 one_1))
check_tm(?_13, Type‹??_14›)
check_tm(one_1, ?_13)
infer_tm(one_1)
assert_equal1(?_13, nat_2)
infer_tm(unit_1)
check_tm(function test_248 : (sing_5‹??_6› ?_4 one_1) -> unit_1
         | (just_6 x_250) =>
           let pf_251 :=
             ((ex_5‹??_8,??_9,??_10› x_250 refl_4‹??_7›)
               : (exists_4‹??_11,??_12,L›
                   ?_9
                   function _252 : ∀ (x_253 : ?_10) -> ?_11
                   | x_254 =>
                     (eq_3‹??_13› ?_12 x_254 (succ_3‹› zero_2))))
           in tt_1, (sing_5‹??_14› ?_13 one_1) -> unit_1)
infer_tm(function test_256 : (sing_5‹??_6› ?_4 one_1) -> unit_1
         | (just_6 x_258) =>
           let pf_259 :=
             ((ex_5‹??_8,??_9,??_10› x_258 refl_4‹??_7›)
               : (exists_4‹??_11,??_12,L›
                   ?_9
                   function _260 : ∀ (x_261 : ?_10) -> ?_11
                   | x_262 =>
                     (eq_3‹??_13› ?_12 x_262 (succ_3‹› zero_2))))
           in tt_1)
infer_tm((sing_5‹??_6› ?_4 one_1) -> unit_1)
infer_tm((sing_5‹??_6› ?_4 one_1))
check_tm(?_4, Type‹??_6›)
check_tm(one_1, ?_4)
infer_tm(one_1)
assert_equal1(?_4, nat_2)
infer_tm(unit_1)
case_coverage{|
  prblm {|
    eq_term?( (sing_5‹??_6› nat_2 one_1),
      (sing_5‹??_6› nat_2 #m_269));
    {| eq_pat?( #m_269, x_266 : nat_2) ::: [] =>?
         let pf_271 :=
           ((ex_5‹??_8,??_9,??_10› #x_266 refl_4‹??_7›)
             : (exists_4‹??_11,??_12,L›
                 ?_9
                 function _272 : ∀ (x_273 : ?_10) -> ?_11
                 | x_274 =>
                   (eq_3‹??_13› ?_12 x_274 (succ_3‹› zero_2))))
         in tt_1
    |}
  |}
|}
solve_pprm(
  eq_term?( (sing_5‹??_6› nat_2 one_1), (sing_5‹??_6› nat_2 #m_269))
  eq_pat?( #m_269, x_266 : nat_2)
)
case_coverage_ok(let pf_280 :=
                   ((ex_5‹??_8,??_9,??_10› one_1 refl_4‹??_7›)
                     : (exists_4‹??_11,??_12,L›
                         ?_9
                         function _281 : ∀ (x_282 : ?_10) -> ?_11
                         | x_283 =>
                           (eq_3‹??_13› ?_12 x_283 (succ_3‹› zero_2))))
                 in tt_1, unit_1)
check_tm(let pf_284 :=
           ((ex_5‹??_8,??_9,??_10› one_1 refl_4‹??_7›)
             : (exists_4‹??_11,??_12,L›
                 ?_9
                 function _285 : ∀ (x_286 : ?_10) -> ?_11
                 | x_287 =>
                   (eq_3‹??_13› ?_12 x_287 (succ_3‹› zero_2))))
         in tt_1, unit_1)
infer_tm(let pf_288 :=
           ((ex_5‹??_8,??_9,??_10› one_1 refl_4‹??_7›)
             : (exists_4‹??_11,??_12,L›
                 ?_9
                 function _289 : ∀ (x_290 : ?_10) -> ?_11
                 | x_291 =>
                   (eq_3‹??_13› ?_12 x_291 (succ_3‹› zero_2))))
         in tt_1)
infer_tm(((ex_5‹??_8,??_9,??_10› one_1 refl_4‹??_7›)
           : (exists_4‹??_11,??_12,L›
               ?_9
               function _293 : ∀ (x_294 : ?_10) -> ?_11
               | x_295 => (eq_3‹??_13› ?_12 x_295 (succ_3‹› zero_2)))))
infer_tm((exists_4‹??_11,??_12,L›
           ?_9
           function _296 : ∀ (x_297 : ?_10) -> ?_11
           | x_298 => (eq_3‹??_13› ?_12 x_298 (succ_3‹› zero_2))))
check_tm(?_9, Type‹??_11›)
check_tm(function _299 : ∀ (x_300 : ?_10) -> ?_11
         | x_301 => (eq_3‹??_13› ?_12 x_301 (succ_3‹› zero_2)), 
?_9 -> Type‹??_12›)
infer_tm(function _303 : ∀ (x_304 : ?_10) -> ?_11
         | x_305 => (eq_3‹??_13› ?_12 x_305 (succ_3‹› zero_2)))
infer_tm(∀ (x_307 : ?_10) -> ?_11)
infer_tm(?_10)
delay_assert(?_15, ??_16)
infer_tm(?_11)
delay_assert(?_16, ??_17)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_311, x_309 : ?_10) ::: [] =>?
         (eq_3‹??_13› ?_12 #x_309 (succ_3‹› zero_2))
    |}
  |}
|}
solve_pprm( eq_pat?( #x_311, x_309 : ?_10) )
case_coverage_ok((eq_3‹??_13› ?_12 #x_311 (succ_3‹› zero_2)), ?_11)
check_tm((eq_3‹??_13› ?_12 #x_311 (succ_3‹› zero_2)), ?_11)
infer_tm((eq_3‹??_13› ?_12 #x_311 (succ_3‹› zero_2)))
check_tm(?_12, Type‹??_13›)
check_tm(#x_311, ?_12)
infer_tm(#x_311)
assert_equal1(?_12, ?_10)
check_tm((succ_3‹› zero_2), ?_12)
infer_tm((succ_3‹› zero_2))
check_tm(zero_2, nat_2)
infer_tm(zero_2)
assert_equal1(nat_2, nat_2)
assert_equal1(?_12, nat_2)
assert_equal1(?_11, U)
assert_equal1(?_9 -> Type‹??_12›, ∀ (x_315 : ?_10) -> ?_11)
check_tm((ex_5‹??_8,??_9,??_10› one_1 refl_4‹??_7›), (exists_4‹??_11,??_12,L›
                                                               ?_9
                                                               function _324 :
                                                                 ∀ (x_325 :
                                                                   ?_10) ->
                                                                   ?_11
                                                               | x_326 =>
                                                                 (eq_3‹??_13›
                                                                   ?_12 x_326
                                                                   (succ_3‹›
                                                                    zero_2))))
infer_tm((ex_5‹??_8,??_9,??_10› one_1 refl_4‹??_7›))
check_tm(?_7, Type‹??_8›)
check_tm(?_8, ?_7 -> Type‹??_9›)
check_tm(one_1, ?_7)
infer_tm(one_1)
assert_equal1(?_7, nat_2)
check_tm(refl_4‹??_7›, (?_8) one_1)
infer_tm(refl_4‹??_7›)
check_tm(?_5, Type‹??_7›)
check_tm(?_6, ?_5)
assert_equal1((?_8) one_1, (eq_3‹??_7› ?_5 ?_6 ?_6))
assert_equal1((exists_4‹??_11,??_12,L›
                ?_9
                function _328 : ∀ (x_329 : ?_10) -> ?_11
                | x_330 => (eq_3‹??_13› ?_12 x_330 (succ_3‹› zero_2))), 
(exists_4‹??_8,??_9,??_10› ?_7 ?_8))
infer_tm(tt_1)
assert_equal1(unit_1, unit_1)
assert_equal1((sing_5‹??_14› ?_13 one_1) -> unit_1, (sing_5‹??_6›
                                                          ?_4 one_1) ->
                                                          unit_1)
begin_delayed
  mctx {|
    ?_4 :? Type‹??_6›
    ?_5 :? Type‹??_7›
    ?_6 :? ?_5
    ?_7 :? Type‹??_8›
    ?_8 :? ?_7 -> Type‹??_9›
    ?_9 :? Type‹??_11›
    ?_10 :? ?_15
    ?_11 :? ?_16
    ?_12 :? Type‹??_13›
    ?_13 :? Type‹??_14›
  |}
  smeta_meta {|
    ??_1 <= s_334
    ??_2 <= s_337
    ??_3 <= r_339
    ??_4 <= t_341
    ??_5 <= s_344
    ??_12 <= U
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_347
    ?_2 <= A_350
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    equal_tm? ((sing_5‹??_14› ?_13 one_1) -> unit_1,
      (sing_5‹??_6› ?_4 one_1) -> unit_1);
    equal_tm?
      ((exists_4‹??_11,??_12,L›
         ?_9
         function _370 : ∀ (x_371 : ?_10) -> ?_11
         | x_372 => (eq_3‹??_13› ?_12 x_372 (succ_3‹› zero_2))),
      (exists_4‹??_8,??_9,??_10› ?_7 ?_8));
    equal_tm? ((?_8) one_1, (eq_3‹??_7› ?_5 ?_6 ?_6));
    equal_tm? (?_7, nat_2)
  |}
end_delayed
loop_check(nat_2 Type‹??_6›)
infer_tm(Type‹??_6›)
check_tm(nat_2, Type‹??_6›)
infer_tm(nat_2)
assert_equal1(Type‹??_6›, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_392
    ??_2 <= s_395
    ??_3 <= r_397
    ??_4 <= t_399
    ??_5 <= s_402
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_405
    ?_2 <= A_408
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _417 : nat_2 -> U
           | x_419 => (eq_3‹??_13› nat_2 x_419 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    equal_tm? (Type‹??_6›, U)
  |}
end_delayed
loop_check(nat_2 Type‹??_7›)
infer_tm(Type‹??_7›)
check_tm(nat_2, Type‹??_7›)
infer_tm(nat_2)
assert_equal1(Type‹??_7›, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_438
    ??_2 <= s_441
    ??_3 <= r_443
    ??_4 <= t_445
    ??_5 <= s_448
    ??_6 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_451
    ?_2 <= A_454
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _463 : nat_2 -> U
           | x_465 => (eq_3‹??_13› nat_2 x_465 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    equal_tm? (Type‹??_7›, U)
  |}
end_delayed
loop_check(one_1 nat_2)
infer_tm(nat_2)
check_tm(one_1, nat_2)
infer_tm(one_1)
assert_equal1(nat_2, nat_2)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_484
    ??_2 <= s_487
    ??_3 <= r_489
    ??_4 <= t_491
    ??_5 <= s_494
    ??_6 <= U
    ??_7 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_497
    ?_2 <= A_500
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _509 : nat_2 -> U
           | x_511 => (eq_3‹??_13› nat_2 x_511 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    
  |}
end_delayed
loop_check(nat_2 Type‹??_8›)
infer_tm(Type‹??_8›)
check_tm(nat_2, Type‹??_8›)
infer_tm(nat_2)
assert_equal1(Type‹??_8›, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_530
    ??_2 <= s_533
    ??_3 <= r_535
    ??_4 <= t_537
    ??_5 <= s_540
    ??_6 <= U
    ??_7 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_543
    ?_2 <= A_546
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _555 : nat_2 -> U
           | x_557 => (eq_3‹??_13› nat_2 x_557 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    equal_tm? (Type‹??_8›, U)
  |}
end_delayed
loop_check(function _580 : nat_2 -> U
           | x_582 => (eq_3‹U› nat_2 x_582 (succ_3‹› zero_2)) 
nat_2 -> U)
infer_tm(nat_2 -> U)
infer_tm(nat_2)
infer_tm(U)
check_tm(function _586 : nat_2 -> U
         | x_588 => (eq_3‹U› nat_2 x_588 (succ_3‹› zero_2)), 
nat_2 -> U)
infer_tm(function _590 : nat_2 -> U
         | x_592 => (eq_3‹U› nat_2 x_592 (succ_3‹› zero_2)))
infer_tm(nat_2 -> U)
infer_tm(nat_2)
infer_tm(U)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_598, x_596 : nat_2) ::: [] =>?
         (eq_3‹U› nat_2 #x_596 (succ_3‹› zero_2))
    |}
  |}
|}
solve_pprm( eq_pat?( #x_598, x_596 : nat_2) )
case_coverage_ok((eq_3‹U› nat_2 #x_598 (succ_3‹› zero_2)), U)
check_tm((eq_3‹U› nat_2 #x_598 (succ_3‹› zero_2)), U)
infer_tm((eq_3‹U› nat_2 #x_598 (succ_3‹› zero_2)))
check_tm(nat_2, U)
infer_tm(nat_2)
assert_equal1(U, U)
check_tm(#x_598, nat_2)
infer_tm(#x_598)
assert_equal1(nat_2, nat_2)
check_tm((succ_3‹› zero_2), nat_2)
infer_tm((succ_3‹› zero_2))
check_tm(zero_2, nat_2)
infer_tm(zero_2)
assert_equal1(nat_2, nat_2)
assert_equal1(nat_2, nat_2)
assert_equal1(U, U)
assert_equal1(nat_2 -> U, nat_2 -> U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_604
    ??_2 <= s_607
    ??_3 <= r_609
    ??_4 <= t_611
    ??_5 <= s_614
    ??_6 <= U
    ??_7 <= U
    ??_8 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_617
    ?_2 <= A_620
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _629 : nat_2 -> U
           | x_631 => (eq_3‹??_13› nat_2 x_631 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    
  |}
end_delayed
loop_check(nat_2 U)
infer_tm(U)
check_tm(nat_2, U)
infer_tm(nat_2)
assert_equal1(U, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_650
    ??_2 <= s_653
    ??_3 <= r_655
    ??_4 <= t_657
    ??_5 <= s_660
    ??_6 <= U
    ??_7 <= U
    ??_8 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_663
    ?_2 <= A_666
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _675 : nat_2 -> U
           | x_677 => (eq_3‹??_13› nat_2 x_677 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    
  |}
end_delayed
loop_check(nat_2 Type‹??_16›)
infer_tm(Type‹??_16›)
check_tm(nat_2, Type‹??_16›)
infer_tm(nat_2)
assert_equal1(Type‹??_16›, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_696
    ??_2 <= s_699
    ??_3 <= r_701
    ??_4 <= t_703
    ??_5 <= s_706
    ??_6 <= U
    ??_7 <= U
    ??_8 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_709
    ?_2 <= A_712
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _721 : nat_2 -> U
           | x_723 => (eq_3‹??_13› nat_2 x_723 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    equal_tm? (Type‹??_16›, U)
  |}
end_delayed
loop_check(U Type‹??_17›)
infer_tm(Type‹??_17›)
check_tm(U, Type‹??_17›)
infer_tm(U)
assert_equal1(Type‹??_17›, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_742
    ??_2 <= s_745
    ??_3 <= r_747
    ??_4 <= t_749
    ??_5 <= s_752
    ??_6 <= U
    ??_7 <= U
    ??_8 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    ??_16 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_755
    ?_2 <= A_758
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _767 : nat_2 -> U
           | x_769 => (eq_3‹??_13› nat_2 x_769 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    equal_tm? (Type‹??_17›, U)
  |}
end_delayed
loop_check(nat_2 U)
infer_tm(U)
check_tm(nat_2, U)
infer_tm(nat_2)
assert_equal1(U, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_789
    ??_2 <= s_792
    ??_3 <= r_794
    ??_4 <= t_796
    ??_5 <= s_799
    ??_6 <= U
    ??_7 <= U
    ??_8 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    ??_16 <= U
    ??_17 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_802
    ?_2 <= A_805
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _814 : nat_2 -> U
           | x_816 => (eq_3‹??_13› nat_2 x_816 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    
  |}
end_delayed
loop_check(nat_2 U)
infer_tm(U)
check_tm(nat_2, U)
infer_tm(nat_2)
assert_equal1(U, U)
begin_delayed
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_834
    ??_2 <= s_837
    ??_3 <= r_839
    ??_4 <= t_841
    ??_5 <= s_844
    ??_6 <= U
    ??_7 <= U
    ??_8 <= U
    ??_9 <= U
    ??_10 <= L
    ??_11 <= ??_8
    ??_12 <= U
    ??_13 <= ??_7
    ??_14 <= ??_6
    ??_15 <= U
    ??_16 <= U
    ??_17 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_847
    ?_2 <= A_850
    ?_3 <= nat_2
    ?_4 <= nat_2
    ?_5 <= nat_2
    ?_6 <= one_1
    ?_7 <= nat_2
    ?_8 <= function _859 : nat_2 -> U
           | x_861 => (eq_3‹??_13› nat_2 x_861 (succ_3‹› zero_2))
    ?_9 <= nat_2
    ?_10 <= ?_9
    ?_11 <= Type‹??_12›
    ?_12 <= nat_2
    ?_13 <= nat_2
    ?_14 <= Type‹??_15›
    ?_15 <= Type‹??_16›
    ?_16 <= Type‹??_17›
    
  |}
  eqns {|
    
  |}
end_delayed
----------------------------------

smeta_meta {|
  ??_1 <= s_890
  ??_2 <= s_893
  ??_3 <= r_895
  ??_4 <= t_897
  ??_5 <= s_900
  ??_6 <= U
  ??_7 <= U
  ??_8 <= U
  ??_9 <= U
  ??_10 <= L
  ??_11 <= ??_8
  ??_12 <= U
  ??_13 <= ??_7
  ??_14 <= ??_6
  ??_15 <= U
  ??_16 <= U
  ??_17 <= U
  
|}
imeta_meta {|
  ?_1 <= A_903
  ?_2 <= A_906
  ?_3 <= nat_2
  ?_4 <= nat_2
  ?_5 <= nat_2
  ?_6 <= one_1
  ?_7 <= nat_2
  ?_8 <= function _915 : nat_2 -> U
         | x_917 => (eq_3‹??_13› nat_2 x_917 (succ_3‹› zero_2))
  ?_9 <= nat_2
  ?_10 <= ?_9
  ?_11 <= Type‹??_12›
  ?_12 <= nat_2
  ?_13 <= nat_2
  ?_14 <= Type‹??_15›
  ?_15 <= Type‹??_16›
  ?_16 <= Type‹??_17›
  
|}
#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive nat_2‹› : U where
| zero_2 : nat_2
| succ_3 (pred_1001 : nat_2) : nat_2

#[logical]
inductive eq_3‹s_1002› (A_1003 : Type‹s_1002›) (m_1004 : A_1003):
  A_1003 -> U
where
| refl_4 : (eq_3‹s_1002› A_1003 m_1004 m_1004)

#[program]
inductive exists_4‹s_1006,r_1007,t_1008› (A_1009 : Type‹s_1006›) (B_1010 : 
A_1009 -> Type‹r_1007›): Type‹t_1008› where
| ex_5
    (m_1012 : A_1009) {pf_1013 : (B_1010) m_1012}
    : (exists_4‹s_1006,r_1007,t_1008› A_1009 B_1010)

#[program]
inductive sing_5‹s_1014› (A_1015 : Type‹s_1014›):
  A_1015 -> Type‹s_1014›
where
| just_6 (m_1017 : A_1015) : (sing_5‹s_1014› A_1015 m_1017)

#[program]
def one_1‹› : nat_2 := (succ_3‹› zero_2)

#[program]
def test_2‹› : (sing_5‹U› nat_2 one_1) -> unit_1 :=
  function test_1019 : (sing_5‹U› nat_2 one_1) -> unit_1
  | (just_6 x_1021) =>
    let pf_1022 :=
      ((ex_5‹U,U,L› x_1021 refl_4‹U›)
        : (exists_4‹U,U,L›
            nat_2
            function _1023 : nat_2 -> U
            | x_1025 => (eq_3‹U› nat_2 x_1025 (succ_3‹› zero_2))))
    in tt_1

-----------------------------------------

