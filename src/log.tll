[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase ((TBase (Type U)), [(DMul ("tt", (TBase (Id "unit"))))]))))};
  Inductive {name = "prod"; relv = R;
    body =
    (Binder (["s"; "r"; "t"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Type (SId "r")),
                (Binder ("B",
                   (PBase
                      ((TBase (Type (SId "t"))),
                       [(DMul ("pair",
                           (TBind (R, (Id "A"),
                              (Binder ("m",
                                 (TBind (R, (Id "B"),
                                    (Binder ("n",
                                       (TBase
                                          (App
                                             [(Inst ("prod",
                                                 [(SId "_"); (SId "_");
                                                   (SId "t")]
                                                 ));
                                               (Id "A"); (Id "B")]))
                                       ))
                                    ))
                                 ))
                              ))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Definition {name = "print"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (R, U, (Id "A"), (Binder ("x", (IO (Id "unit"))))))))
              )),
           (Binder ((Some "print"),
              [([(PId "A"); (PId "x")], (Some (Magic (Id "_"))))]))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (R, U, (Id "A"), (Binder ("x", (IO (Id "unit"))))))))
           )))
       ))}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive prod_2‹s_20,r_21,t_22› (A_23 : Type‹s_20›) (B_24 : Type‹r_21›):
  Type‹t_22›
where
| pair_2 (m_25 : A_23) (n_26 : B_24) : (prod_2‹??_1,??_2,t_22› A_23 B_24)

#[program]
def print_1‹s_27› : ∀ {A_28 : Type‹s_27›} -> A_28 -> IO unit_1 :=
  function print_30 : ∀ {A_31 : Type‹s_27›} -> A_31 -> IO unit_1
  | A_33 x_34 => #magic[?_1]

-----------------------------------------

error -----------------------------------

unimplemented
