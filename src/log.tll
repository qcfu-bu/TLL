[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase ((TBase (Type U)), [(DMul ("tt", (TBase (Id "unit"))))]))))};
  Inductive {name = "bool"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("true", (TBase (Id "bool"))));
             (DMul ("false", (TBase (Id "bool"))))]))
       ))};
  Inductive {name = "nat"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("zero", (TBase (Id "nat"))));
             (DMul ("succ",
                (TBind (R, (Id "nat"), (Binder ("pred", (TBase (Id "nat"))))
                   ))
                ))
             ]))
       ))};
  Inductive {name = "eq"; relv = N;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Id "A"),
                (Binder ("m",
                   (PBase
                      ((TBind (R, (Id "A"), (Binder ("_", (TBase (Type U))))
                          )),
                       [(DMul ("refl",
                           (TBase
                              (App [(Id "eq"); (Id "_"); (Id "m"); (Id "m")]))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "exists"; relv = R;
    body =
    (Binder (["s"; "r"; "t"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Pi (R, U, (Id "A"), (Binder ("_", (Type (SId "r")))))),
                (Binder ("B",
                   (PBase
                      ((TBase (Type (SId "t"))),
                       [(DMul ("ex",
                           (TBind (R, (Id "A"),
                              (Binder ("m",
                                 (TBind (N, (App [(Id "B"); (Id "m")]),
                                    (Binder ("pf",
                                       (TBase
                                          (App
                                             [(Id "exists"); (Id "A");
                                               (Id "B")]))
                                       ))
                                    ))
                                 ))
                              ))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "sing"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id "A"),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DMul ("just",
                     (TBind (R, (Id "A"),
                        (Binder ("m",
                           (TBase (App [(Id "sing"); (Id "_"); (Id "m")]))))
                        ))
                     ))
                   ]))
             ))
          ))
       ))};
  Inductive {name = "list"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBase (Type U)),
                 [(DMul ("nil", (TBase (App [(Id "list"); (Id "A")]))));
                   (DMul ("cons",
                      (TBind (R, (Id "A"),
                         (Binder ("hd",
                            (TBind (R, (App [(Id "list"); (Id "A")]),
                               (Binder ("tl",
                                  (TBase (App [(Id "list"); (Id "A")]))))
                               ))
                            ))
                         ))
                      ))
                   ]))
             ))
          ))
       ))};
  Inductive {name = "vec"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id "nat"), (Binder ("_", (TBase (Type U)))))),
                 [(DMul ("vnil",
                     (TBase (App [(Id "vec"); (Id "A"); (Id "zero")]))));
                   (DMul ("vcons",
                      (TBind (N, (Id "nat"),
                         (Binder ("n",
                            (TBind (R, (Id "A"),
                               (Binder ("hd",
                                  (TBind (R,
                                     (App
                                        [(Inst ("vec", [(SId "s")]));
                                          (Id "A"); (Id "n")]),
                                     (Binder ("tl",
                                        (TBase
                                           (App
                                              [(Id "vec"); (Id "A");
                                                (App [(Id "succ"); (Id "n")])
                                                ]))
                                        ))
                                     ))
                                  ))
                               ))
                            ))
                         ))
                      ))
                   ]))
             ))
          ))
       ))};
  Definition {name = "rwl"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "A"),
                    (Binder ("m",
                       (Pi (N, U, (Id "A"),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id "A"),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (R, U,
                                      (App
                                         [(Id "eq"); (Id "_"); (Id "m");
                                           (Id "n")]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App [(Id "B"); (Id "m")]),
                                            (Binder ("_",
                                               (App [(Id "B"); (Id "n")])))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwl"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id "x")))]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "A"),
                 (Binder ("m",
                    (Pi (N, U, (Id "A"),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id "A"),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (R, U,
                                   (App
                                      [(Id "eq"); (Id "_"); (Id "m");
                                        (Id "n")]),
                                   (Binder ("_",
                                      (Pi (R, U, (App [(Id "B"); (Id "m")]),
                                         (Binder ("_",
                                            (App [(Id "B"); (Id "n")])))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "rwr"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "A"),
                    (Binder ("m",
                       (Pi (N, U, (Id "A"),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id "A"),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (R, U,
                                      (App
                                         [(Id "eq"); (Id "_"); (Id "m");
                                           (Id "n")]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App [(Id "B"); (Id "n")]),
                                            (Binder ("_",
                                               (App [(Id "B"); (Id "m")])))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwr"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id "x")))]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "A"),
                 (Binder ("m",
                    (Pi (N, U, (Id "A"),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id "A"),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (R, U,
                                   (App
                                      [(Id "eq"); (Id "_"); (Id "m");
                                        (Id "n")]),
                                   (Binder ("_",
                                      (Pi (R, U, (App [(Id "B"); (Id "n")]),
                                         (Binder ("_",
                                            (App [(Id "B"); (Id "m")])))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "congr"; relv = N;
    body =
    (Binder (["s"; "r"; "t"],
       ((Fun (
           (Pi (R, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (R, U, (Type (SId "r")),
                    (Binder ("B",
                       (Pi (R, U, (Id "A"),
                          (Binder ("m",
                             (Pi (R, U, (Id "A"),
                                (Binder ("n",
                                   (Pi (R, U,
                                      (Pi (R, (SId "t"), (Id "A"),
                                         (Binder ("_", (Id "B"))))),
                                      (Binder ("f",
                                         (Pi (R, U,
                                            (App
                                               [(Id "eq"); (Id "_");
                                                 (Id "m"); (Id "n")]),
                                            (Binder ("_",
                                               (App
                                                  [(Id "eq"); (Id "_");
                                                    (App [(Id "f"); (Id "m")]);
                                                    (App [(Id "f"); (Id "n")])
                                                    ])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "congr"),
              [([(PId "A"); (PId "B"); (PId "m"); (PId "n"); (PId "f");
                  (PId "refl")],
                (Some (Id "refl")))]
              ))
           )),
        (Pi (R, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (R, U, (Type (SId "r")),
                 (Binder ("B",
                    (Pi (R, U, (Id "A"),
                       (Binder ("m",
                          (Pi (R, U, (Id "A"),
                             (Binder ("n",
                                (Pi (R, U,
                                   (Pi (R, (SId "t"), (Id "A"),
                                      (Binder ("_", (Id "B"))))),
                                   (Binder ("f",
                                      (Pi (R, U,
                                         (App
                                            [(Id "eq"); (Id "_"); (Id "m");
                                              (Id "n")]),
                                         (Binder ("_",
                                            (App
                                               [(Id "eq"); (Id "_");
                                                 (App [(Id "f"); (Id "m")]);
                                                 (App [(Id "f"); (Id "n")])])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "hd_vec"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "nat"),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")])); (Id "A");
                               (App [(Id "succ"); (Id "n")])]),
                          (Binder ("_", (Id "A")))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec"),
              [([(PId "A"); (PId "n"); (PId "vnil")], None);
                ([(PId "A"); (PId "n");
                   (PMul ("vcons", [(PId "_"); (PId "hd"); (PId "_")]))],
                 (Some (Id "hd")))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "nat"),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")])); (Id "A");
                            (App [(Id "succ"); (Id "n")])]),
                       (Binder ("_", (Id "A")))))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "hd_vec2"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "nat"),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")])); (Id "A");
                               (App [(Id "succ"); (Id "n")])]),
                          (Binder ("xs", (Id "A")))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec2"),
              [([(PId "A"); (PId "n"); (PId "xs")],
                (Some (Match (
                         [(N, (Id "_"), (Some ("n0", (Id "_"))));
                           (R, (Id "xs"),
                            (Some ("_",
                                   (App
                                      [(Inst ("vec", [(SId "s")])); (
                                        Id "A");
                                        (App [(Id "succ"); (Id "n0")])]))))
                           ],
                         None,
                         [([(PId "_"); (PId "vnil")], None);
                           ([(PId "_");
                              (PMul ("vcons",
                                 [(PId "_"); (PId "hd"); (PId "_")]))
                              ],
                            (Some (Id "hd")))
                           ]
                         ))))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "nat"),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")])); (Id "A");
                            (App [(Id "succ"); (Id "n")])]),
                       (Binder ("xs", (Id "A")))))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "vlength"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "nat"),
                    (Binder ("n",
                       (Pi (R, U, (App [(Id "vec"); (Id "A"); (Id "n")]),
                          (Binder ("_",
                             (App
                                [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                                  (Id "_");
                                  (Fun (
                                     (Pi (R, U, (Id "_"),
                                        (Binder ("x", (Id "_"))))),
                                     (Binder (None,
                                        [([(PId "x")],
                                          (Some (App
                                                   [(Id "eq"); (Id "_");
                                                     (Id "x"); (Id "n")])))
                                          ]
                                        ))
                                     ))
                                  ])
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "vlength"),
              [([(PId "A"); (PId "n"); (PId "vnil")],
                (Some (App [(Id "ex"); (Id "zero"); (Id "refl")])));
                ([(PId "A"); (PId "n");
                   (PMul ("vcons", [(PId "_"); (PId "_"); (PId "tl")]))],
                 (Some (Match (
                          [(R,
                            (App
                               [(Id "vlength"); (Id "_"); (Id "_"); (
                                 Id "tl")]),
                            None)],
                          None,
                          [([(PMul ("ex", [(PId "n"); (PId "pf")]))],
                            (Some (App
                                     [(Id "ex");
                                       (App [(Id "succ"); (Id "n")]);
                                       (App
                                          [(Id "congr"); (Id "_"); (Id "_");
                                            (Id "_"); (Id "_");
                                            (Fun (
                                               (Pi (R, U, (Id "_"),
                                                  (Binder ("x", (Id "_"))))),
                                               (Binder (None,
                                                  [([(PId "x")],
                                                    (Some (App
                                                             [(Id "succ");
                                                               (Id "x")])))
                                                    ]
                                                  ))
                                               ));
                                            (Id "pf")])
                                       ])))
                            ]
                          ))))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "nat"),
                 (Binder ("n",
                    (Pi (R, U, (App [(Id "vec"); (Id "A"); (Id "n")]),
                       (Binder ("_",
                          (App
                             [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                               (Id "_");
                               (Fun (
                                  (Pi (R, U, (Id "_"),
                                     (Binder ("x", (Id "_"))))),
                                  (Binder (None,
                                     [([(PId "x")],
                                       (Some (App
                                                [(Id "eq"); (Id "_");
                                                  (Id "x"); (Id "n")])))
                                       ]
                                     ))
                                  ))
                               ])
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_173 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_174› (A_175 : Type‹s_174›) (m_176 : A_175):
  A_175 -> U
where
| refl_6 : (eq_4‹??_1› ?_1 m_176 m_176)

#[program]
inductive exists_5‹s_178,r_179,t_180› (A_181 : Type‹s_178›) (B_182 : 
A_181 -> Type‹r_179›): Type‹t_180› where
| ex_7
    (m_184 : A_181) {pf_185 : ((B_182) m_184)}
    : (exists_5‹??_2,??_3,??_4› A_181 B_182)

#[program]
inductive sing_6‹s_186› (A_187 : Type‹s_186›):
  A_187 -> Type‹s_186›
where
| just_8 (m_189 : A_187) : (sing_6‹??_5› ?_2 m_189)

#[program]
inductive list_7‹s_190› (A_191 : Type‹s_190›): U where
| nil_9 : (list_7‹??_6› A_191)
| cons_10
    (hd_192 : A_191) (tl_193 : (list_7‹??_7› A_191))
    : (list_7‹??_8› A_191)

#[program]
inductive vec_8‹s_194› (A_195 : Type‹s_194›): nat_3 -> U where
| vnil_11 : (vec_8‹??_9› A_195 zero_4)
| vcons_12
    {n_197 : nat_3} (hd_198 : A_195)
    (tl_199 : (vec_8‹s_194› A_195 n_197))
    : (vec_8‹??_10› A_195 (succ_5‹› n_197))

#[program]
def rwl_1‹s_200,r_201› :
  ∀ {A_202 : Type‹s_200›} ->
    ∀ {m_203 : A_202} ->
      ∀ {n_204 : A_202} ->
        ∀ {B_205 : A_202 -> Type‹r_201›} ->
          (eq_4‹??_12› ?_4 m_203 n_204) ->
            ((B_205) m_203) -> ((B_205) n_204)
:=
  function rwl_209 :
    ∀ {A_210 : Type‹s_200›} ->
      ∀ {m_211 : A_210} ->
        ∀ {n_212 : A_210} ->
          ∀ {B_213 : A_210 -> Type‹r_201›} ->
            (eq_4‹??_11› ?_3 m_211 n_212) ->
              ((B_213) m_211) -> ((B_213) n_212)
  | A_217 m_218 n_219 B_220 refl_6 x_221 => x_221

#[program]
def rwr_2‹s_222,r_223› :
  ∀ {A_224 : Type‹s_222›} ->
    ∀ {m_225 : A_224} ->
      ∀ {n_226 : A_224} ->
        ∀ {B_227 : A_224 -> Type‹r_223›} ->
          (eq_4‹??_14› ?_6 m_225 n_226) ->
            ((B_227) n_226) -> ((B_227) m_225)
:=
  function rwr_231 :
    ∀ {A_232 : Type‹s_222›} ->
      ∀ {m_233 : A_232} ->
        ∀ {n_234 : A_232} ->
          ∀ {B_235 : A_232 -> Type‹r_223›} ->
            (eq_4‹??_13› ?_5 m_233 n_234) ->
              ((B_235) n_234) -> ((B_235) m_233)
  | A_239 m_240 n_241 B_242 refl_6 x_243 => x_243

#[logical]
def congr_3‹s_244,r_245,t_246› :
  ∀ (A_247 : Type‹s_244›) ->
    ∀ (B_248 : Type‹r_245›) ->
      ∀ (m_249 : A_247) ->
        ∀ (n_250 : A_247) ->
          ∀ (f_251 : forall‹t_246›(__252 : A_247), B_248) ->
            ∀ (__253 : (eq_4‹??_18› ?_11 m_249 n_250)) ->
              (eq_4‹??_19› ?_12 ((f_251) m_249) ((f_251) n_250))
:=
  function congr_254 :
    ∀ (A_255 : Type‹s_244›) ->
      ∀ (B_256 : Type‹r_245›) ->
        ∀ (m_257 : A_255) ->
          ∀ (n_258 : A_255) ->
            ∀ (f_259 : forall‹t_246›(__260 : A_255), B_256) ->
              ∀ (__261 : (eq_4‹??_15› ?_7 m_257 n_258)) ->
                (eq_4‹??_16› ?_8 ((f_259) m_257) ((f_259) n_258))
  | A_262 B_263 m_264 n_265 f_266 refl_6 => refl_6‹??_17›

#[program]
def hd_vec_4‹s_267› :
  ∀ {A_268 : Type‹s_267›} ->
    ∀ {n_269 : nat_3} ->
      (vec_8‹s_267› A_268 (succ_5‹› n_269)) -> A_268
:=
  function hd_vec_271 :
    ∀ {A_272 : Type‹s_267›} ->
      ∀ {n_273 : nat_3} ->
        (vec_8‹s_267› A_272 (succ_5‹› n_273)) -> A_272
  | A_275 n_276 vnil_11 =>
  | A_277 n_278 (vcons_12 _279 hd_280 _281) => hd_280

#[program]
def hd_vec2_5‹s_282› :
  ∀ {A_283 : Type‹s_282›} ->
    ∀ {n_284 : nat_3} ->
      (vec_8‹s_282› A_283 (succ_5‹› n_284)) -> A_283
:=
  function hd_vec2_286 :
    ∀ {A_287 : Type‹s_282›} ->
      ∀ {n_288 : nat_3} ->
        (vec_8‹s_282› A_287 (succ_5‹› n_288)) -> A_287
  | A_290 n_291 xs_292 =>
    match ?_13, xs_292 in
      ∀ {n0_293 : ?_14} -o
        ∀ (__294 : (vec_8‹s_282› A_290 (succ_5‹› n0_293))) -o ?_15
    with
    | _295, vnil_11 =>
    | _296, (vcons_12 _297 hd_298 _299) => hd_298

#[program]
def vlength_6‹s_300› :
  ∀ {A_301 : Type‹s_300›} ->
    ∀ {n_302 : nat_3} ->
      ∀ (__303 : (vec_8‹??_34› A_301 n_302)) ->
        (exists_5‹??_35,??_36,L›
          ?_36
          function _304 : ∀ (x_305 : ?_37) -> ?_38
          | x_306 => (eq_4‹??_37› ?_39 x_306 n_302))
:=
  function vlength_307 :
    ∀ {A_308 : Type‹s_300›} ->
      ∀ {n_309 : nat_3} ->
        ∀ (__310 : (vec_8‹??_20› A_308 n_309)) ->
          (exists_5‹??_21,??_22,L›
            ?_16
            function _311 : ∀ (x_312 : ?_17) -> ?_18
            | x_313 => (eq_4‹??_23› ?_19 x_313 n_309))
  | A_314 n_315 vnil_11 =>
    (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
  | A_316 n_317 (vcons_12 _318 _319 tl_320) =>
    match ((vlength_307) ?_24 ?_25 tl_320) in ∀ (_321 : ?_26) -o ?_27 with
    | (ex_7 n_322 pf_323) =>
      (ex_7‹??_31,??_32,??_33›
        (succ_5‹› n_322)
        ((congr_3‹??_28,??_29,??_30›)
          ?_28 ?_29 ?_30 ?_31
          function _324 : ∀ (x_325 : ?_32) -> ?_33
          | x_326 => (succ_5‹› x_326) pf_323))

-----------------------------------------

inductive-------------------------
infer_tm(unit_1)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(bool_2)
infer_tm(bool_2)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(nat_3)
infer_tm(nat_3)
infer_tm(nat_3)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_329›)
infer_tm(A_330)
infer_tm(A_330)
infer_tm(Type‹s_333›)
infer_tm(A_334)
assert_equal1( A_334, ?_1)
assert_equal1( m_335, m_335)
infer_tm((eq_4‹??_1› ?_1 m_335 m_335))
check_tm(?_1, Type‹??_1›)
check_tm(m_335, ?_1)
infer_tm(m_335)
assert_equal1( ?_1, A_334)
check_tm(m_335, ?_1)
infer_tm(m_335)
assert_equal1( ?_1, A_334)
simpl_tm ~expand:false( ?_1, A_334)
simpl_tm ~expand:false( A_334, A_334)
simpl_tm ~expand:false( A_334, A_334)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_336
    
  |}
  imeta_meta {|
    ?_1 <= A_339
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_333›)
check_tm(A_334, Type‹s_333›)
infer_tm(A_334)
assert_equal1( Type‹s_333›, Type‹s_333›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_351›)
infer_tm(A_354 -> Type‹r_352›)
infer_tm(A_354)
infer_tm(Type‹r_352›)
infer_tm(Type‹s_358›)
infer_tm(A_361 -> Type‹r_359›)
infer_tm(A_361)
infer_tm(Type‹r_359›)
infer_tm(A_361)
infer_tm(((B_362) m_365))
infer_tm(B_362)
check_tm(m_365, A_361)
infer_tm(m_365)
assert_equal1( A_361, A_361)
assert_equal1( A_361, A_361)
assert_equal1( B_362, B_362)
infer_tm((exists_5‹??_2,??_3,??_4› A_361 B_362))
check_tm(A_361, Type‹??_2›)
infer_tm(A_361)
assert_equal1( Type‹??_2›, Type‹s_358›)
check_tm(B_362, A_361 -> Type‹??_3›)
infer_tm(B_362)
assert_equal1( A_361 -> Type‹??_3›, A_361 -> Type‹r_359›)
simpl_tm ~expand:false( A_361 -> Type‹??_3›, A_361 -> Type‹r_359›)
simpl_tm ~expand:false( A_361, A_361)
simpl_tm ~expand:false( Type‹??_3›, Type‹r_359›)
simpl_tm ~expand:false( Type‹??_2›, Type‹s_358›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_380
    ??_2 <= s_383
    ??_3 <= r_385
    ??_4 <= t_387
    
  |}
  imeta_meta {|
    ?_1 <= A_392
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_424›)
infer_tm(A_425)
infer_tm(Type‹s_427›)
infer_tm(A_428)
assert_equal1( A_428, ?_2)
infer_tm((sing_6‹??_5› ?_2 m_429))
check_tm(?_2, Type‹??_5›)
check_tm(m_429, ?_2)
infer_tm(m_429)
assert_equal1( ?_2, A_428)
simpl_tm ~expand:false( ?_2, A_428)
simpl_tm ~expand:false( A_428, A_428)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_430
    ??_2 <= s_433
    ??_3 <= r_435
    ??_4 <= t_437
    ??_5 <= s_440
    
  |}
  imeta_meta {|
    ?_1 <= A_443
    ?_2 <= A_446
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_427›)
check_tm(A_428, Type‹s_427›)
infer_tm(A_428)
assert_equal1( Type‹s_427›, Type‹s_427›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_459›)
infer_tm(Type‹s_461›)
assert_equal1( A_462, A_462)
infer_tm((list_7‹??_6› A_462))
check_tm(A_462, Type‹??_6›)
infer_tm(A_462)
assert_equal1( Type‹??_6›, Type‹s_461›)
simpl_tm ~expand:false( Type‹??_6›, Type‹s_461›)
infer_tm(Type‹s_463›)
infer_tm(A_464)
infer_tm((list_7‹??_7› A_464))
check_tm(A_464, Type‹??_7›)
infer_tm(A_464)
assert_equal1( Type‹??_7›, Type‹s_463›)
simpl_tm ~expand:false( Type‹??_7›, Type‹s_463›)
assert_equal1( A_464, A_464)
infer_tm((list_7‹??_8› A_464))
check_tm(A_464, Type‹??_8›)
infer_tm(A_464)
assert_equal1( Type‹??_8›, Type‹s_463›)
simpl_tm ~expand:false( Type‹??_8›, Type‹s_463›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_467
    ??_2 <= s_470
    ??_3 <= r_472
    ??_4 <= t_474
    ??_5 <= s_477
    ??_6 <= s_478
    ??_7 <= s_479
    ??_8 <= s_480
    
  |}
  imeta_meta {|
    ?_1 <= A_483
    ?_2 <= A_486
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_502›)
infer_tm(nat_3)
infer_tm(Type‹s_505›)
assert_equal1( A_506, A_506)
infer_tm((vec_8‹??_9› A_506 zero_4))
check_tm(A_506, Type‹??_9›)
infer_tm(A_506)
assert_equal1( Type‹??_9›, Type‹s_505›)
check_tm(zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_9›, Type‹s_505›)
infer_tm(Type‹s_507›)
infer_tm(nat_3)
infer_tm(A_508)
infer_tm((vec_8‹s_507› A_508 n_509))
check_tm(A_508, Type‹s_507›)
infer_tm(A_508)
assert_equal1( Type‹s_507›, Type‹s_507›)
check_tm(n_509, nat_3)
infer_tm(n_509)
assert_equal1( nat_3, nat_3)
assert_equal1( A_508, A_508)
infer_tm((vec_8‹??_10› A_508 (succ_5‹› n_509)))
check_tm(A_508, Type‹??_10›)
infer_tm(A_508)
assert_equal1( Type‹??_10›, Type‹s_507›)
check_tm((succ_5‹› n_509), nat_3)
infer_tm((succ_5‹› n_509))
check_tm(n_509, nat_3)
infer_tm(n_509)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_10›, Type‹s_507›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_512
    ??_2 <= s_515
    ??_3 <= r_517
    ??_4 <= t_519
    ??_5 <= s_522
    ??_6 <= s_523
    ??_7 <= s_524
    ??_8 <= s_525
    ??_9 <= s_526
    ??_10 <= s_527
    
  |}
  imeta_meta {|
    ?_1 <= A_530
    ?_2 <= A_533
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_557 : Type‹s_555›} ->
           ∀ {m_558 : A_557} ->
             ∀ {n_559 : A_557} ->
               ∀ {B_560 : A_557 -> Type‹r_556›} ->
                 (eq_4‹??_12› ?_4 m_558 n_559) ->
                   ((B_560) m_558) -> ((B_560) n_559))
infer_tm(Type‹s_555›)
infer_tm(∀ {m_565 : A_564} ->
           ∀ {n_566 : A_564} ->
             ∀ {B_567 : A_564 -> Type‹r_556›} ->
               (eq_4‹??_12› ?_4 m_565 n_566) ->
                 ((B_567) m_565) -> ((B_567) n_566))
infer_tm(A_564)
infer_tm(∀ {n_572 : A_564} ->
           ∀ {B_573 : A_564 -> Type‹r_556›} ->
             (eq_4‹??_12› ?_4 m_571 n_572) ->
               ((B_573) m_571) -> ((B_573) n_572))
infer_tm(A_564)
infer_tm(∀ {B_578 : A_564 -> Type‹r_556›} ->
           (eq_4‹??_12› ?_4 m_571 n_577) ->
             ((B_578) m_571) -> ((B_578) n_577))
infer_tm(A_564 -> Type‹r_556›)
infer_tm(A_564)
infer_tm(Type‹r_556›)
infer_tm((eq_4‹??_12› ?_4 m_571 n_577) ->
           ((B_582) m_571) -> ((B_582) n_577))
infer_tm((eq_4‹??_12› ?_4 m_571 n_577))
check_tm(?_4, Type‹??_12›)
check_tm(m_571, ?_4)
infer_tm(m_571)
assert_equal1( ?_4, A_564)
check_tm(n_577, ?_4)
infer_tm(n_577)
assert_equal1( ?_4, A_564)
simpl_tm ~expand:false( ?_4, A_564)
simpl_tm ~expand:false( A_564, A_564)
infer_tm(((B_582) m_571) -> ((B_582) n_577))
infer_tm(((B_582) m_571))
infer_tm(B_582)
check_tm(m_571, A_564)
infer_tm(m_571)
assert_equal1( A_564, A_564)
infer_tm(((B_582) n_577))
infer_tm(B_582)
check_tm(n_577, A_564)
infer_tm(n_577)
assert_equal1( A_564, A_564)
check_tm(function rwl_592 :
           ∀ {A_593 : Type‹s_555›} ->
             ∀ {m_594 : A_593} ->
               ∀ {n_595 : A_593} ->
                 ∀ {B_596 : A_593 -> Type‹r_556›} ->
                   (eq_4‹??_11› ?_3 m_594 n_595) ->
                     ((B_596) m_594) -> ((B_596) n_595)
         | A_600 m_601 n_602 B_603 refl_6 x_604 => x_604, ∀ {A_605 :
                                                            Type‹s_555›} ->
                                                            ∀ {m_606 :
                                                              A_605} ->
                                                              ∀ {n_607 :
                                                                A_605} ->
                                                                ∀ {B_608 :
                                                                  A_605 ->
                                                                    Type‹r_556›} ->
                                                                  (eq_4‹??_12›
                                                                    ?_4 m_606
                                                                    n_607) ->
                                                                    ((B_608)
                                                                    m_606) ->
                                                                    ((B_608)
                                                                    n_607))
infer_tm(function rwl_612 :
           ∀ {A_613 : Type‹s_555›} ->
             ∀ {m_614 : A_613} ->
               ∀ {n_615 : A_613} ->
                 ∀ {B_616 : A_613 -> Type‹r_556›} ->
                   (eq_4‹??_11› ?_3 m_614 n_615) ->
                     ((B_616) m_614) -> ((B_616) n_615)
         | A_620 m_621 n_622 B_623 refl_6 x_624 => x_624)
infer_tm(∀ {A_626 : Type‹s_555›} ->
           ∀ {m_627 : A_626} ->
             ∀ {n_628 : A_626} ->
               ∀ {B_629 : A_626 -> Type‹r_556›} ->
                 (eq_4‹??_11› ?_3 m_627 n_628) ->
                   ((B_629) m_627) -> ((B_629) n_628))
infer_tm(Type‹s_555›)
infer_tm(∀ {m_634 : A_633} ->
           ∀ {n_635 : A_633} ->
             ∀ {B_636 : A_633 -> Type‹r_556›} ->
               (eq_4‹??_11› ?_3 m_634 n_635) ->
                 ((B_636) m_634) -> ((B_636) n_635))
infer_tm(A_633)
infer_tm(∀ {n_641 : A_633} ->
           ∀ {B_642 : A_633 -> Type‹r_556›} ->
             (eq_4‹??_11› ?_3 m_640 n_641) ->
               ((B_642) m_640) -> ((B_642) n_641))
infer_tm(A_633)
infer_tm(∀ {B_647 : A_633 -> Type‹r_556›} ->
           (eq_4‹??_11› ?_3 m_640 n_646) ->
             ((B_647) m_640) -> ((B_647) n_646))
infer_tm(A_633 -> Type‹r_556›)
infer_tm(A_633)
infer_tm(Type‹r_556›)
infer_tm((eq_4‹??_11› ?_3 m_640 n_646) ->
           ((B_651) m_640) -> ((B_651) n_646))
infer_tm((eq_4‹??_11› ?_3 m_640 n_646))
check_tm(?_3, Type‹??_11›)
check_tm(m_640, ?_3)
infer_tm(m_640)
assert_equal1( ?_3, A_633)
check_tm(n_646, ?_3)
infer_tm(n_646)
assert_equal1( ?_3, A_633)
simpl_tm ~expand:false( ?_3, A_633)
simpl_tm ~expand:false( A_633, A_633)
infer_tm(((B_651) m_640) -> ((B_651) n_646))
infer_tm(((B_651) m_640))
infer_tm(B_651)
check_tm(m_640, A_633)
infer_tm(m_640)
assert_equal1( A_633, A_633)
infer_tm(((B_651) n_646))
infer_tm(B_651)
check_tm(n_646, A_633)
infer_tm(n_646)
assert_equal1( A_633, A_633)
check_cls {|
  prblm {| ;
    {|  ::: [A_661, m_662, n_663, B_664, refl_6, x_665] =>? #x_665 |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_11› #A_691 #m_692 #n_693),
      (eq_4‹??_11› #A_691 #m_692 #m_692));
    {| eq_pat?( #A_691, A_661 : Type‹s_555›)
       eq_pat?( #m_692, m_662 : #A_691)
       eq_pat?( #n_693, n_663 : #A_691)
       eq_pat?( #B_694, B_664 : #A_691 -> Type‹r_556›)
       eq_pat?( #__696, x_665 : ((#B_694) #m_692)) ::: [] =>? #x_665
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_11› #A_691 #m_692 #n_693),
    (eq_4‹??_11› #A_691 #m_692 #m_692))
  eq_pat?( #A_691, A_661 : Type‹s_555›)
  eq_pat?( #m_692, m_662 : #A_691)
  eq_pat?( #n_693, n_663 : #A_691)
  eq_pat?( #B_694, B_664 : #A_691 -> Type‹r_556›)
  eq_pat?( #__696, x_665 : ((#B_694) #m_692))
)
simpl_pprbm ~expand:false( (eq_4‹??_11› #A_691 #m_692 #n_693),
  (eq_4‹??_11› #A_691 #m_692 #m_692))
simpl_pprbm ~expand:false( #A_691, #A_691)
simpl_pprbm ~expand:false( #m_692, #m_692)
simpl_pprbm ~expand:false( #n_693, #m_692)
simpl_pprbm ~expand:false( #A_691, #A_661)
simpl_pprbm ~expand:false( #m_692, #m_662)
simpl_pprbm ~expand:false( #n_693, #n_663)
simpl_pprbm ~expand:false( #B_694, #B_664)
simpl_pprbm ~expand:false( #__696, #x_665)
simpl_pprbm ~expand:false( #n_693, #m_692)
simpl_pprbm ~expand:false( #A_691, #A_661)
simpl_pprbm ~expand:false( #n_693, #m_662)
simpl_pprbm ~expand:false( #n_693, #n_663)
simpl_pprbm ~expand:false( #B_694, #B_664)
simpl_pprbm ~expand:false( #__696, #x_665)
case_coverage_ok(__696, ((B_694) n_693))
check_tm(__696, ((B_694) n_693))
infer_tm(__696)
assert_equal1( ((B_694) n_693), ((B_694) n_693))
assert_equal1(
  ∀ {A_752 : Type‹s_555›} ->
    ∀ {m_753 : A_752} ->
      ∀ {n_754 : A_752} ->
        ∀ {B_755 : A_752 -> Type‹r_556›} ->
          (eq_4‹??_12› ?_4 m_753 n_754) ->
            ((B_755) m_753) -> ((B_755) n_754),
  ∀ {A_759 : Type‹s_555›} ->
    ∀ {m_760 : A_759} ->
      ∀ {n_761 : A_759} ->
        ∀ {B_762 : A_759 -> Type‹r_556›} ->
          (eq_4‹??_11› ?_3 m_760 n_761) ->
            ((B_762) m_760) -> ((B_762) n_761))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_804
    ??_2 <= s_807
    ??_3 <= r_809
    ??_4 <= t_811
    ??_5 <= s_814
    ??_6 <= s_815
    ??_7 <= s_816
    ??_8 <= s_817
    ??_9 <= s_818
    ??_10 <= s_819
    
  |}
  imeta_meta {|
    ?_1 <= A_822
    ?_2 <= A_825
    ?_3 <= A_831
    ?_4 <= A_837
    
  |}
  eqns {|
    equal_tm?
      (∀ {A_838 : Type‹s_555›} ->
         ∀ {m_839 : A_838} ->
           ∀ {n_840 : A_838} ->
             ∀ {B_841 : A_838 -> Type‹r_556›} ->
               (eq_4‹??_12› ?_4 m_839 n_840) ->
                 ((B_841) m_839) -> ((B_841) n_840),
      ∀ {A_845 : Type‹s_555›} ->
        ∀ {m_846 : A_845} ->
          ∀ {n_847 : A_845} ->
            ∀ {B_848 : A_845 -> Type‹r_556›} ->
              (eq_4‹??_11› ?_3 m_846 n_847) ->
                ((B_848) m_846) -> ((B_848) n_847))
  |}
end_dump
simpl_tm ~expand:false(
  ∀ {A_902 : Type‹s_555›} ->
    ∀ {m_903 : A_902} ->
      ∀ {n_904 : A_902} ->
        ∀ {B_905 : A_902 -> Type‹r_556›} ->
          (eq_4‹??_12› A_902 m_903 n_904) ->
            ((B_905) m_903) -> ((B_905) n_904),
  ∀ {A_909 : Type‹s_555›} ->
    ∀ {m_910 : A_909} ->
      ∀ {n_911 : A_909} ->
        ∀ {B_912 : A_909 -> Type‹r_556›} ->
          (eq_4‹??_11› A_909 m_910 n_911) ->
            ((B_912) m_910) -> ((B_912) n_911))
simpl_tm ~expand:false( Type‹s_555›, Type‹s_555›)
simpl_tm ~expand:false(
  ∀ {m_917 : A_916} ->
    ∀ {n_918 : A_916} ->
      ∀ {B_919 : A_916 -> Type‹r_556›} ->
        (eq_4‹??_12› A_916 m_917 n_918) ->
          ((B_919) m_917) -> ((B_919) n_918),
  ∀ {m_923 : A_916} ->
    ∀ {n_924 : A_916} ->
      ∀ {B_925 : A_916 -> Type‹r_556›} ->
        (eq_4‹??_11› A_916 m_923 n_924) ->
          ((B_925) m_923) -> ((B_925) n_924))
simpl_tm ~expand:false( A_916, A_916)
simpl_tm ~expand:false(
  ∀ {n_930 : A_916} ->
    ∀ {B_931 : A_916 -> Type‹r_556›} ->
      (eq_4‹??_12› A_916 m_929 n_930) ->
        ((B_931) m_929) -> ((B_931) n_930),
  ∀ {n_935 : A_916} ->
    ∀ {B_936 : A_916 -> Type‹r_556›} ->
      (eq_4‹??_11› A_916 m_929 n_935) ->
        ((B_936) m_929) -> ((B_936) n_935))
simpl_tm ~expand:false( A_916, A_916)
simpl_tm ~expand:false(
  ∀ {B_941 : A_916 -> Type‹r_556›} ->
    (eq_4‹??_12› A_916 m_929 n_940) -> ((B_941) m_929) -> ((B_941) n_940),
  ∀ {B_945 : A_916 -> Type‹r_556›} ->
    (eq_4‹??_11› A_916 m_929 n_940) -> ((B_945) m_929) -> ((B_945) n_940))
simpl_tm ~expand:false( A_916 -> Type‹r_556›, A_916 -> Type‹r_556›)
simpl_tm ~expand:false( A_916, A_916)
simpl_tm ~expand:false( Type‹r_556›, Type‹r_556›)
simpl_tm ~expand:false(
  (eq_4‹??_12› A_916 m_929 n_940) -> ((B_949) m_929) -> ((B_949) n_940),
  (eq_4‹??_11› A_916 m_929 n_940) -> ((B_949) m_929) -> ((B_949) n_940))
simpl_tm ~expand:false( (eq_4‹??_12› A_916 m_929 n_940),
  (eq_4‹??_11› A_916 m_929 n_940))
simpl_tm ~expand:false( A_916, A_916)
simpl_tm ~expand:false( m_929, m_929)
simpl_tm ~expand:false( n_940, n_940)
simpl_tm ~expand:false( ((B_949) m_929) -> ((B_949) n_940),
  ((B_949) m_929) -> ((B_949) n_940))
simpl_tm ~expand:false( ((B_949) m_929), ((B_949) m_929))
simpl_tm ~expand:false( B_949, B_949)
simpl_tm ~expand:false( m_929, m_929)
simpl_tm ~expand:false( ((B_949) n_940), ((B_949) n_940))
simpl_tm ~expand:false( B_949, B_949)
simpl_tm ~expand:false( n_940, n_940)
infer_tm(Type‹??_11›)
check_tm(A_633, Type‹??_11›)
infer_tm(A_633)
assert_equal1( Type‹??_11›, Type‹s_555›)
simpl_tm ~expand:false( Type‹??_11›, Type‹s_555›)
infer_tm(Type‹s_555›)
check_tm(A_564, Type‹s_555›)
infer_tm(A_564)
assert_equal1( Type‹s_555›, Type‹s_555›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_1037 : Type‹s_1035›} ->
           ∀ {m_1038 : A_1037} ->
             ∀ {n_1039 : A_1037} ->
               ∀ {B_1040 : A_1037 -> Type‹r_1036›} ->
                 (eq_4‹??_14› ?_6 m_1038 n_1039) ->
                   ((B_1040) n_1039) -> ((B_1040) m_1038))
infer_tm(Type‹s_1035›)
infer_tm(∀ {m_1045 : A_1044} ->
           ∀ {n_1046 : A_1044} ->
             ∀ {B_1047 : A_1044 -> Type‹r_1036›} ->
               (eq_4‹??_14› ?_6 m_1045 n_1046) ->
                 ((B_1047) n_1046) -> ((B_1047) m_1045))
infer_tm(A_1044)
infer_tm(∀ {n_1052 : A_1044} ->
           ∀ {B_1053 : A_1044 -> Type‹r_1036›} ->
             (eq_4‹??_14› ?_6 m_1051 n_1052) ->
               ((B_1053) n_1052) -> ((B_1053) m_1051))
infer_tm(A_1044)
infer_tm(∀ {B_1058 : A_1044 -> Type‹r_1036›} ->
           (eq_4‹??_14› ?_6 m_1051 n_1057) ->
             ((B_1058) n_1057) -> ((B_1058) m_1051))
infer_tm(A_1044 -> Type‹r_1036›)
infer_tm(A_1044)
infer_tm(Type‹r_1036›)
infer_tm((eq_4‹??_14› ?_6 m_1051 n_1057) ->
           ((B_1062) n_1057) -> ((B_1062) m_1051))
infer_tm((eq_4‹??_14› ?_6 m_1051 n_1057))
check_tm(?_6, Type‹??_14›)
check_tm(m_1051, ?_6)
infer_tm(m_1051)
assert_equal1( ?_6, A_1044)
check_tm(n_1057, ?_6)
infer_tm(n_1057)
assert_equal1( ?_6, A_1044)
simpl_tm ~expand:false( ?_6, A_1044)
simpl_tm ~expand:false( A_1044, A_1044)
infer_tm(((B_1062) n_1057) -> ((B_1062) m_1051))
infer_tm(((B_1062) n_1057))
infer_tm(B_1062)
check_tm(n_1057, A_1044)
infer_tm(n_1057)
assert_equal1( A_1044, A_1044)
infer_tm(((B_1062) m_1051))
infer_tm(B_1062)
check_tm(m_1051, A_1044)
infer_tm(m_1051)
assert_equal1( A_1044, A_1044)
check_tm(function rwr_1072 :
           ∀ {A_1073 : Type‹s_1035›} ->
             ∀ {m_1074 : A_1073} ->
               ∀ {n_1075 : A_1073} ->
                 ∀ {B_1076 : A_1073 -> Type‹r_1036›} ->
                   (eq_4‹??_13› ?_5 m_1074 n_1075) ->
                     ((B_1076) n_1075) -> ((B_1076) m_1074)
         | A_1080 m_1081 n_1082 B_1083 refl_6 x_1084 => x_1084, ∀ {A_1085 :
                                                                  Type‹s_1035›} ->
                                                                  ∀ {m_1086 :
                                                                    A_1085} ->
                                                                    ∀ {n_1087 :
                                                                    A_1085} ->
                                                                    ∀ {B_1088 :
                                                                    A_1085 ->
                                                                    Type‹r_1036›} ->
                                                                    (eq_4‹??_14›
                                                                    ?_6
                                                                    m_1086
                                                                    n_1087) ->
                                                                    ((B_1088)
                                                                    n_1087) ->
                                                                    ((B_1088)
                                                                    m_1086))
infer_tm(function rwr_1092 :
           ∀ {A_1093 : Type‹s_1035›} ->
             ∀ {m_1094 : A_1093} ->
               ∀ {n_1095 : A_1093} ->
                 ∀ {B_1096 : A_1093 -> Type‹r_1036›} ->
                   (eq_4‹??_13› ?_5 m_1094 n_1095) ->
                     ((B_1096) n_1095) -> ((B_1096) m_1094)
         | A_1100 m_1101 n_1102 B_1103 refl_6 x_1104 => x_1104)
infer_tm(∀ {A_1106 : Type‹s_1035›} ->
           ∀ {m_1107 : A_1106} ->
             ∀ {n_1108 : A_1106} ->
               ∀ {B_1109 : A_1106 -> Type‹r_1036›} ->
                 (eq_4‹??_13› ?_5 m_1107 n_1108) ->
                   ((B_1109) n_1108) -> ((B_1109) m_1107))
infer_tm(Type‹s_1035›)
infer_tm(∀ {m_1114 : A_1113} ->
           ∀ {n_1115 : A_1113} ->
             ∀ {B_1116 : A_1113 -> Type‹r_1036›} ->
               (eq_4‹??_13› ?_5 m_1114 n_1115) ->
                 ((B_1116) n_1115) -> ((B_1116) m_1114))
infer_tm(A_1113)
infer_tm(∀ {n_1121 : A_1113} ->
           ∀ {B_1122 : A_1113 -> Type‹r_1036›} ->
             (eq_4‹??_13› ?_5 m_1120 n_1121) ->
               ((B_1122) n_1121) -> ((B_1122) m_1120))
infer_tm(A_1113)
infer_tm(∀ {B_1127 : A_1113 -> Type‹r_1036›} ->
           (eq_4‹??_13› ?_5 m_1120 n_1126) ->
             ((B_1127) n_1126) -> ((B_1127) m_1120))
infer_tm(A_1113 -> Type‹r_1036›)
infer_tm(A_1113)
infer_tm(Type‹r_1036›)
infer_tm((eq_4‹??_13› ?_5 m_1120 n_1126) ->
           ((B_1131) n_1126) -> ((B_1131) m_1120))
infer_tm((eq_4‹??_13› ?_5 m_1120 n_1126))
check_tm(?_5, Type‹??_13›)
check_tm(m_1120, ?_5)
infer_tm(m_1120)
assert_equal1( ?_5, A_1113)
check_tm(n_1126, ?_5)
infer_tm(n_1126)
assert_equal1( ?_5, A_1113)
simpl_tm ~expand:false( ?_5, A_1113)
simpl_tm ~expand:false( A_1113, A_1113)
infer_tm(((B_1131) n_1126) -> ((B_1131) m_1120))
infer_tm(((B_1131) n_1126))
infer_tm(B_1131)
check_tm(n_1126, A_1113)
infer_tm(n_1126)
assert_equal1( A_1113, A_1113)
infer_tm(((B_1131) m_1120))
infer_tm(B_1131)
check_tm(m_1120, A_1113)
infer_tm(m_1120)
assert_equal1( A_1113, A_1113)
check_cls {|
  prblm {| ;
    {|  ::: [A_1141, m_1142, n_1143, B_1144, refl_6, x_1145] =>? #x_1145 |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_13› #A_1171 #m_1172 #n_1173),
      (eq_4‹??_13› #A_1171 #m_1172 #m_1172));
    {| eq_pat?( #A_1171, A_1141 : Type‹s_1035›)
       eq_pat?( #m_1172, m_1142 : #A_1171)
       eq_pat?( #n_1173, n_1143 : #A_1171)
       eq_pat?( #B_1174, B_1144 : #A_1171 -> Type‹r_1036›)
       eq_pat?( #__1176, x_1145 : ((#B_1174) #n_1173)) ::: [] =>? #x_1145
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_13› #A_1171 #m_1172 #n_1173),
    (eq_4‹??_13› #A_1171 #m_1172 #m_1172))
  eq_pat?( #A_1171, A_1141 : Type‹s_1035›)
  eq_pat?( #m_1172, m_1142 : #A_1171)
  eq_pat?( #n_1173, n_1143 : #A_1171)
  eq_pat?( #B_1174, B_1144 : #A_1171 -> Type‹r_1036›)
  eq_pat?( #__1176, x_1145 : ((#B_1174) #n_1173))
)
simpl_pprbm ~expand:false( (eq_4‹??_13› #A_1171 #m_1172 #n_1173),
  (eq_4‹??_13› #A_1171 #m_1172 #m_1172))
simpl_pprbm ~expand:false( #A_1171, #A_1171)
simpl_pprbm ~expand:false( #m_1172, #m_1172)
simpl_pprbm ~expand:false( #n_1173, #m_1172)
simpl_pprbm ~expand:false( #A_1171, #A_1141)
simpl_pprbm ~expand:false( #m_1172, #m_1142)
simpl_pprbm ~expand:false( #n_1173, #n_1143)
simpl_pprbm ~expand:false( #B_1174, #B_1144)
simpl_pprbm ~expand:false( #__1176, #x_1145)
simpl_pprbm ~expand:false( #n_1173, #m_1172)
simpl_pprbm ~expand:false( #A_1171, #A_1141)
simpl_pprbm ~expand:false( #n_1173, #m_1142)
simpl_pprbm ~expand:false( #n_1173, #n_1143)
simpl_pprbm ~expand:false( #B_1174, #B_1144)
simpl_pprbm ~expand:false( #__1176, #x_1145)
case_coverage_ok(__1176, ((B_1174) n_1173))
check_tm(__1176, ((B_1174) n_1173))
infer_tm(__1176)
assert_equal1( ((B_1174) n_1173), ((B_1174) n_1173))
assert_equal1(
  ∀ {A_1232 : Type‹s_1035›} ->
    ∀ {m_1233 : A_1232} ->
      ∀ {n_1234 : A_1232} ->
        ∀ {B_1235 : A_1232 -> Type‹r_1036›} ->
          (eq_4‹??_14› ?_6 m_1233 n_1234) ->
            ((B_1235) n_1234) -> ((B_1235) m_1233),
  ∀ {A_1239 : Type‹s_1035›} ->
    ∀ {m_1240 : A_1239} ->
      ∀ {n_1241 : A_1239} ->
        ∀ {B_1242 : A_1239 -> Type‹r_1036›} ->
          (eq_4‹??_13› ?_5 m_1240 n_1241) ->
            ((B_1242) n_1241) -> ((B_1242) m_1240))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1284
    ??_2 <= s_1287
    ??_3 <= r_1289
    ??_4 <= t_1291
    ??_5 <= s_1294
    ??_6 <= s_1295
    ??_7 <= s_1296
    ??_8 <= s_1297
    ??_9 <= s_1298
    ??_10 <= s_1299
    ??_11 <= s_1301
    ??_12 <= ??_11
    
  |}
  imeta_meta {|
    ?_1 <= A_1306
    ?_2 <= A_1309
    ?_3 <= A_1315
    ?_4 <= A_1321
    ?_5 <= A_1327
    ?_6 <= A_1333
    
  |}
  eqns {|
    equal_tm?
      (∀ {A_1334 : Type‹s_1035›} ->
         ∀ {m_1335 : A_1334} ->
           ∀ {n_1336 : A_1334} ->
             ∀ {B_1337 : A_1334 -> Type‹r_1036›} ->
               (eq_4‹??_14› ?_6 m_1335 n_1336) ->
                 ((B_1337) n_1336) -> ((B_1337) m_1335),
      ∀ {A_1341 : Type‹s_1035›} ->
        ∀ {m_1342 : A_1341} ->
          ∀ {n_1343 : A_1341} ->
            ∀ {B_1344 : A_1341 -> Type‹r_1036›} ->
              (eq_4‹??_13› ?_5 m_1342 n_1343) ->
                ((B_1344) n_1343) -> ((B_1344) m_1342))
  |}
end_dump
simpl_tm ~expand:false(
  ∀ {A_1398 : Type‹s_1035›} ->
    ∀ {m_1399 : A_1398} ->
      ∀ {n_1400 : A_1398} ->
        ∀ {B_1401 : A_1398 -> Type‹r_1036›} ->
          (eq_4‹??_14› A_1398 m_1399 n_1400) ->
            ((B_1401) n_1400) -> ((B_1401) m_1399),
  ∀ {A_1405 : Type‹s_1035›} ->
    ∀ {m_1406 : A_1405} ->
      ∀ {n_1407 : A_1405} ->
        ∀ {B_1408 : A_1405 -> Type‹r_1036›} ->
          (eq_4‹??_13› A_1405 m_1406 n_1407) ->
            ((B_1408) n_1407) -> ((B_1408) m_1406))
simpl_tm ~expand:false( Type‹s_1035›, Type‹s_1035›)
simpl_tm ~expand:false(
  ∀ {m_1413 : A_1412} ->
    ∀ {n_1414 : A_1412} ->
      ∀ {B_1415 : A_1412 -> Type‹r_1036›} ->
        (eq_4‹??_14› A_1412 m_1413 n_1414) ->
          ((B_1415) n_1414) -> ((B_1415) m_1413),
  ∀ {m_1419 : A_1412} ->
    ∀ {n_1420 : A_1412} ->
      ∀ {B_1421 : A_1412 -> Type‹r_1036›} ->
        (eq_4‹??_13› A_1412 m_1419 n_1420) ->
          ((B_1421) n_1420) -> ((B_1421) m_1419))
simpl_tm ~expand:false( A_1412, A_1412)
simpl_tm ~expand:false(
  ∀ {n_1426 : A_1412} ->
    ∀ {B_1427 : A_1412 -> Type‹r_1036›} ->
      (eq_4‹??_14› A_1412 m_1425 n_1426) ->
        ((B_1427) n_1426) -> ((B_1427) m_1425),
  ∀ {n_1431 : A_1412} ->
    ∀ {B_1432 : A_1412 -> Type‹r_1036›} ->
      (eq_4‹??_13› A_1412 m_1425 n_1431) ->
        ((B_1432) n_1431) -> ((B_1432) m_1425))
simpl_tm ~expand:false( A_1412, A_1412)
simpl_tm ~expand:false(
  ∀ {B_1437 : A_1412 -> Type‹r_1036›} ->
    (eq_4‹??_14› A_1412 m_1425 n_1436) ->
      ((B_1437) n_1436) -> ((B_1437) m_1425),
  ∀ {B_1441 : A_1412 -> Type‹r_1036›} ->
    (eq_4‹??_13› A_1412 m_1425 n_1436) ->
      ((B_1441) n_1436) -> ((B_1441) m_1425))
simpl_tm ~expand:false( A_1412 -> Type‹r_1036›,
  A_1412 -> Type‹r_1036›)
simpl_tm ~expand:false( A_1412, A_1412)
simpl_tm ~expand:false( Type‹r_1036›, Type‹r_1036›)
simpl_tm ~expand:false(
  (eq_4‹??_14› A_1412 m_1425 n_1436) ->
    ((B_1445) n_1436) -> ((B_1445) m_1425),
  (eq_4‹??_13› A_1412 m_1425 n_1436) ->
    ((B_1445) n_1436) -> ((B_1445) m_1425))
simpl_tm ~expand:false( (eq_4‹??_14› A_1412 m_1425 n_1436),
  (eq_4‹??_13› A_1412 m_1425 n_1436))
simpl_tm ~expand:false( A_1412, A_1412)
simpl_tm ~expand:false( m_1425, m_1425)
simpl_tm ~expand:false( n_1436, n_1436)
simpl_tm ~expand:false( ((B_1445) n_1436) -> ((B_1445) m_1425),
  ((B_1445) n_1436) -> ((B_1445) m_1425))
simpl_tm ~expand:false( ((B_1445) n_1436), ((B_1445) n_1436))
simpl_tm ~expand:false( B_1445, B_1445)
simpl_tm ~expand:false( n_1436, n_1436)
simpl_tm ~expand:false( ((B_1445) m_1425), ((B_1445) m_1425))
simpl_tm ~expand:false( B_1445, B_1445)
simpl_tm ~expand:false( m_1425, m_1425)
infer_tm(Type‹??_13›)
check_tm(A_1113, Type‹??_13›)
infer_tm(A_1113)
assert_equal1( Type‹??_13›, Type‹s_1035›)
simpl_tm ~expand:false( Type‹??_13›, Type‹s_1035›)
infer_tm(Type‹s_1035›)
check_tm(A_1044, Type‹s_1035›)
infer_tm(A_1044)
assert_equal1( Type‹s_1035›, Type‹s_1035›)
----------------------------------

definition-------------------------
infer_tm(∀ (A_1534 : Type‹s_1531›) ->
           ∀ (B_1535 : Type‹r_1532›) ->
             ∀ (m_1536 : A_1534) ->
               ∀ (n_1537 : A_1534) ->
                 ∀ (f_1538 :
                   forall‹t_1533›(__1539 : A_1534), B_1535) ->
                   ∀ (__1540 : (eq_4‹??_18› ?_11 m_1536 n_1537)) ->
                     (eq_4‹??_19›
                       ?_12 ((f_1538) m_1536) ((f_1538) n_1537)))
infer_tm(Type‹s_1531›)
infer_tm(∀ (B_1542 : Type‹r_1532›) ->
           ∀ (m_1543 : A_1541) ->
             ∀ (n_1544 : A_1541) ->
               ∀ (f_1545 : forall‹t_1533›(__1546 : A_1541), B_1542) ->
                 ∀ (__1547 : (eq_4‹??_18› ?_11 m_1543 n_1544)) ->
                   (eq_4‹??_19› ?_12 ((f_1545) m_1543) ((f_1545) n_1544)))
infer_tm(Type‹r_1532›)
infer_tm(∀ (m_1549 : A_1541) ->
           ∀ (n_1550 : A_1541) ->
             ∀ (f_1551 : forall‹t_1533›(__1552 : A_1541), B_1548) ->
               ∀ (__1553 : (eq_4‹??_18› ?_11 m_1549 n_1550)) ->
                 (eq_4‹??_19› ?_12 ((f_1551) m_1549) ((f_1551) n_1550)))
infer_tm(A_1541)
infer_tm(∀ (n_1555 : A_1541) ->
           ∀ (f_1556 : forall‹t_1533›(__1557 : A_1541), B_1548) ->
             ∀ (__1558 : (eq_4‹??_18› ?_11 m_1554 n_1555)) ->
               (eq_4‹??_19› ?_12 ((f_1556) m_1554) ((f_1556) n_1555)))
infer_tm(A_1541)
infer_tm(∀ (f_1560 : forall‹t_1533›(__1561 : A_1541), B_1548) ->
           ∀ (__1562 : (eq_4‹??_18› ?_11 m_1554 n_1559)) ->
             (eq_4‹??_19› ?_12 ((f_1560) m_1554) ((f_1560) n_1559)))
infer_tm(forall‹t_1533›(__1564 : A_1541), B_1548)
infer_tm(A_1541)
infer_tm(B_1548)
infer_tm(∀ (__1566 : (eq_4‹??_18› ?_11 m_1554 n_1559)) ->
           (eq_4‹??_19› ?_12 ((f_1563) m_1554) ((f_1563) n_1559)))
infer_tm((eq_4‹??_18› ?_11 m_1554 n_1559))
check_tm(?_11, Type‹??_18›)
check_tm(m_1554, ?_11)
infer_tm(m_1554)
assert_equal1( ?_11, A_1541)
check_tm(n_1559, ?_11)
infer_tm(n_1559)
assert_equal1( ?_11, A_1541)
simpl_tm ~expand:false( ?_11, A_1541)
simpl_tm ~expand:false( A_1541, A_1541)
infer_tm((eq_4‹??_19› ?_12 ((f_1563) m_1554) ((f_1563) n_1559)))
check_tm(?_12, Type‹??_19›)
check_tm(((f_1563) m_1554), ?_12)
infer_tm(((f_1563) m_1554))
infer_tm(f_1563)
check_tm(m_1554, A_1541)
infer_tm(m_1554)
assert_equal1( A_1541, A_1541)
assert_equal1( ?_12, B_1548)
check_tm(((f_1563) n_1559), ?_12)
infer_tm(((f_1563) n_1559))
infer_tm(f_1563)
simpl_tm ~expand:false( ?_12, B_1548)
check_tm(n_1559, A_1541)
infer_tm(n_1559)
assert_equal1( A_1541, A_1541)
assert_equal1( ?_12, B_1548)
simpl_tm ~expand:false( B_1548, B_1548)
check_tm(function congr_1570 :
           ∀ (A_1571 : Type‹s_1531›) ->
             ∀ (B_1572 : Type‹r_1532›) ->
               ∀ (m_1573 : A_1571) ->
                 ∀ (n_1574 : A_1571) ->
                   ∀ (f_1575 :
                     forall‹t_1533›(__1576 : A_1571), B_1572) ->
                     ∀ (__1577 : (eq_4‹??_15› ?_7 m_1573 n_1574)) ->
                       (eq_4‹??_16›
                         ?_8 ((f_1575) m_1573) ((f_1575) n_1574))
         | A_1578 B_1579 m_1580 n_1581 f_1582 refl_6 => refl_6‹??_17›, 
∀ (A_1583 : Type‹s_1531›) ->
  ∀ (B_1584 : Type‹r_1532›) ->
    ∀ (m_1585 : A_1583) ->
      ∀ (n_1586 : A_1583) ->
        ∀ (f_1587 : forall‹t_1533›(__1588 : A_1583), B_1584) ->
          ∀ (__1589 : (eq_4‹??_18› ?_11 m_1585 n_1586)) ->
            (eq_4‹??_19› ?_12 ((f_1587) m_1585) ((f_1587) n_1586)))
infer_tm(function congr_1590 :
           ∀ (A_1591 : Type‹s_1531›) ->
             ∀ (B_1592 : Type‹r_1532›) ->
               ∀ (m_1593 : A_1591) ->
                 ∀ (n_1594 : A_1591) ->
                   ∀ (f_1595 :
                     forall‹t_1533›(__1596 : A_1591), B_1592) ->
                     ∀ (__1597 : (eq_4‹??_15› ?_7 m_1593 n_1594)) ->
                       (eq_4‹??_16›
                         ?_8 ((f_1595) m_1593) ((f_1595) n_1594))
         | A_1598 B_1599 m_1600 n_1601 f_1602 refl_6 => refl_6‹??_17›)
infer_tm(∀ (A_1604 : Type‹s_1531›) ->
           ∀ (B_1605 : Type‹r_1532›) ->
             ∀ (m_1606 : A_1604) ->
               ∀ (n_1607 : A_1604) ->
                 ∀ (f_1608 :
                   forall‹t_1533›(__1609 : A_1604), B_1605) ->
                   ∀ (__1610 : (eq_4‹??_15› ?_7 m_1606 n_1607)) ->
                     (eq_4‹??_16›
                       ?_8 ((f_1608) m_1606) ((f_1608) n_1607)))
infer_tm(Type‹s_1531›)
infer_tm(∀ (B_1612 : Type‹r_1532›) ->
           ∀ (m_1613 : A_1611) ->
             ∀ (n_1614 : A_1611) ->
               ∀ (f_1615 : forall‹t_1533›(__1616 : A_1611), B_1612) ->
                 ∀ (__1617 : (eq_4‹??_15› ?_7 m_1613 n_1614)) ->
                   (eq_4‹??_16› ?_8 ((f_1615) m_1613) ((f_1615) n_1614)))
infer_tm(Type‹r_1532›)
infer_tm(∀ (m_1619 : A_1611) ->
           ∀ (n_1620 : A_1611) ->
             ∀ (f_1621 : forall‹t_1533›(__1622 : A_1611), B_1618) ->
               ∀ (__1623 : (eq_4‹??_15› ?_7 m_1619 n_1620)) ->
                 (eq_4‹??_16› ?_8 ((f_1621) m_1619) ((f_1621) n_1620)))
infer_tm(A_1611)
infer_tm(∀ (n_1625 : A_1611) ->
           ∀ (f_1626 : forall‹t_1533›(__1627 : A_1611), B_1618) ->
             ∀ (__1628 : (eq_4‹??_15› ?_7 m_1624 n_1625)) ->
               (eq_4‹??_16› ?_8 ((f_1626) m_1624) ((f_1626) n_1625)))
infer_tm(A_1611)
infer_tm(∀ (f_1630 : forall‹t_1533›(__1631 : A_1611), B_1618) ->
           ∀ (__1632 : (eq_4‹??_15› ?_7 m_1624 n_1629)) ->
             (eq_4‹??_16› ?_8 ((f_1630) m_1624) ((f_1630) n_1629)))
infer_tm(forall‹t_1533›(__1634 : A_1611), B_1618)
infer_tm(A_1611)
infer_tm(B_1618)
infer_tm(∀ (__1636 : (eq_4‹??_15› ?_7 m_1624 n_1629)) ->
           (eq_4‹??_16› ?_8 ((f_1633) m_1624) ((f_1633) n_1629)))
infer_tm((eq_4‹??_15› ?_7 m_1624 n_1629))
check_tm(?_7, Type‹??_15›)
check_tm(m_1624, ?_7)
infer_tm(m_1624)
assert_equal1( ?_7, A_1611)
check_tm(n_1629, ?_7)
infer_tm(n_1629)
assert_equal1( ?_7, A_1611)
simpl_tm ~expand:false( ?_7, A_1611)
simpl_tm ~expand:false( A_1611, A_1611)
infer_tm((eq_4‹??_16› ?_8 ((f_1633) m_1624) ((f_1633) n_1629)))
check_tm(?_8, Type‹??_16›)
check_tm(((f_1633) m_1624), ?_8)
infer_tm(((f_1633) m_1624))
infer_tm(f_1633)
check_tm(m_1624, A_1611)
infer_tm(m_1624)
assert_equal1( A_1611, A_1611)
assert_equal1( ?_8, B_1618)
check_tm(((f_1633) n_1629), ?_8)
infer_tm(((f_1633) n_1629))
infer_tm(f_1633)
simpl_tm ~expand:false( ?_8, B_1618)
check_tm(n_1629, A_1611)
infer_tm(n_1629)
assert_equal1( A_1611, A_1611)
assert_equal1( ?_8, B_1618)
simpl_tm ~expand:false( B_1618, B_1618)
check_cls {|
  prblm {| ;
    {|  ::: [A_1640, B_1641, m_1642, n_1643, f_1644, refl_6] =>?
         refl_6‹??_17›
    |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_15› #A_1671 #m_1673 #n_1674),
      (eq_4‹??_15› #A_1671 #m_1673 #m_1673));
    {| eq_pat?( #A_1671, A_1640 : Type‹s_1531›)
       eq_pat?( #B_1672, B_1641 : Type‹r_1532›)
       eq_pat?( #m_1673, m_1642 : #A_1671)
       eq_pat?( #n_1674, n_1643 : #A_1671)
       eq_pat?( #f_1675, f_1644 :
         forall‹t_1533›(__1705 : #A_1671), #B_1672) ::: [] =>?
         refl_6‹??_17›
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_15› #A_1671 #m_1673 #n_1674),
    (eq_4‹??_15› #A_1671 #m_1673 #m_1673))
  eq_pat?( #A_1671, A_1640 : Type‹s_1531›)
  eq_pat?( #B_1672, B_1641 : Type‹r_1532›)
  eq_pat?( #m_1673, m_1642 : #A_1671)
  eq_pat?( #n_1674, n_1643 : #A_1671)
  eq_pat?( #f_1675, f_1644 : forall‹t_1533›(__1706 : #A_1671), #B_1672)
)
simpl_pprbm ~expand:false( (eq_4‹??_15› #A_1671 #m_1673 #n_1674),
  (eq_4‹??_15› #A_1671 #m_1673 #m_1673))
simpl_pprbm ~expand:false( #A_1671, #A_1671)
simpl_pprbm ~expand:false( #m_1673, #m_1673)
simpl_pprbm ~expand:false( #n_1674, #m_1673)
simpl_pprbm ~expand:false( #A_1671, #A_1640)
simpl_pprbm ~expand:false( #B_1672, #B_1641)
simpl_pprbm ~expand:false( #m_1673, #m_1642)
simpl_pprbm ~expand:false( #n_1674, #n_1643)
simpl_pprbm ~expand:false( #f_1675, #f_1644)
simpl_pprbm ~expand:false( #n_1674, #m_1673)
simpl_pprbm ~expand:false( #A_1671, #A_1640)
simpl_pprbm ~expand:false( #B_1672, #B_1641)
simpl_pprbm ~expand:false( #n_1674, #m_1642)
simpl_pprbm ~expand:false( #n_1674, #n_1643)
simpl_pprbm ~expand:false( #f_1675, #f_1644)
case_coverage_ok(refl_6‹??_17›, (eq_4‹??_16›
                                      B_1672 ((f_1675) n_1674)
                                      ((f_1675) n_1674)))
check_tm(refl_6‹??_17›, (eq_4‹??_16›
                              B_1672 ((f_1675) n_1674) ((f_1675) n_1674)))
infer_tm(refl_6‹??_17›)
check_tm(?_9, Type‹??_17›)
check_tm(?_10, ?_9)
assert_equal1( (eq_4‹??_16› B_1672 ((f_1675) n_1674) ((f_1675) n_1674)),
  (eq_4‹??_17› ?_9 ?_10 ?_10))
assert_equal1(
  ∀ (A_1734 : Type‹s_1531›) ->
    ∀ (B_1735 : Type‹r_1532›) ->
      ∀ (m_1736 : A_1734) ->
        ∀ (n_1737 : A_1734) ->
          ∀ (f_1738 : forall‹t_1533›(__1739 : A_1734), B_1735) ->
            ∀ (__1740 : (eq_4‹??_18› ?_11 m_1736 n_1737)) ->
              (eq_4‹??_19› ?_12 ((f_1738) m_1736) ((f_1738) n_1737)),
  ∀ (A_1741 : Type‹s_1531›) ->
    ∀ (B_1742 : Type‹r_1532›) ->
      ∀ (m_1743 : A_1741) ->
        ∀ (n_1744 : A_1741) ->
          ∀ (f_1745 : forall‹t_1533›(__1746 : A_1741), B_1742) ->
            ∀ (__1747 : (eq_4‹??_15› ?_7 m_1743 n_1744)) ->
              (eq_4‹??_16› ?_8 ((f_1745) m_1743) ((f_1745) n_1744)))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1800
    ??_2 <= s_1803
    ??_3 <= r_1805
    ??_4 <= t_1807
    ??_5 <= s_1810
    ??_6 <= s_1811
    ??_7 <= s_1812
    ??_8 <= s_1813
    ??_9 <= s_1814
    ??_10 <= s_1815
    ??_11 <= s_1817
    ??_12 <= ??_11
    ??_13 <= s_1821
    ??_14 <= ??_13
    
  |}
  imeta_meta {|
    ?_1 <= A_1826
    ?_2 <= A_1829
    ?_3 <= A_1835
    ?_4 <= A_1841
    ?_5 <= A_1847
    ?_6 <= A_1853
    ?_7 <= A_1861
    ?_8 <= B_1869
    ?_11 <= A_1878
    ?_12 <= B_1886
    
  |}
  eqns {|
    equal_tm?
      (∀ (A_1888 : Type‹s_1531›) ->
         ∀ (B_1889 : Type‹r_1532›) ->
           ∀ (m_1890 : A_1888) ->
             ∀ (n_1891 : A_1888) ->
               ∀ (f_1892 : forall‹t_1533›(__1893 : A_1888), B_1889) ->
                 ∀ (__1894 : (eq_4‹??_18› ?_11 m_1890 n_1891)) ->
                   (eq_4‹??_19› ?_12 ((f_1892) m_1890) ((f_1892) n_1891)),
      ∀ (A_1895 : Type‹s_1531›) ->
        ∀ (B_1896 : Type‹r_1532›) ->
          ∀ (m_1897 : A_1895) ->
            ∀ (n_1898 : A_1895) ->
              ∀ (f_1899 : forall‹t_1533›(__1900 : A_1895), B_1896) ->
                ∀ (__1901 : (eq_4‹??_15› ?_7 m_1897 n_1898)) ->
                  (eq_4‹??_16› ?_8 ((f_1899) m_1897) ((f_1899) n_1898)));
    equal_tm? ((eq_4‹??_16› B_1672 ((f_1675) n_1674) ((f_1675) n_1674)),
      (eq_4‹??_17› ?_9 ?_10 ?_10))
  |}
end_dump
simpl_tm ~expand:false(
  ∀ (A_1954 : Type‹s_1531›) ->
    ∀ (B_1955 : Type‹r_1532›) ->
      ∀ (m_1956 : A_1954) ->
        ∀ (n_1957 : A_1954) ->
          ∀ (f_1958 : forall‹t_1533›(__1959 : A_1954), B_1955) ->
            (eq_4‹??_18› A_1954 m_1956 n_1957) ->
              (eq_4‹??_19› B_1955 ((f_1958) m_1956) ((f_1958) n_1957)),
  ∀ (A_1961 : Type‹s_1531›) ->
    ∀ (B_1962 : Type‹r_1532›) ->
      ∀ (m_1963 : A_1961) ->
        ∀ (n_1964 : A_1961) ->
          ∀ (f_1965 : forall‹t_1533›(__1966 : A_1961), B_1962) ->
            (eq_4‹??_15› A_1961 m_1963 n_1964) ->
              (eq_4‹??_16› B_1962 ((f_1965) m_1963) ((f_1965) n_1964)))
simpl_tm ~expand:false( Type‹s_1531›, Type‹s_1531›)
simpl_tm ~expand:false(
  ∀ (B_1969 : Type‹r_1532›) ->
    ∀ (m_1970 : A_1968) ->
      ∀ (n_1971 : A_1968) ->
        ∀ (f_1972 : forall‹t_1533›(__1973 : A_1968), B_1969) ->
          (eq_4‹??_18› A_1968 m_1970 n_1971) ->
            (eq_4‹??_19› B_1969 ((f_1972) m_1970) ((f_1972) n_1971)),
  ∀ (B_1975 : Type‹r_1532›) ->
    ∀ (m_1976 : A_1968) ->
      ∀ (n_1977 : A_1968) ->
        ∀ (f_1978 : forall‹t_1533›(__1979 : A_1968), B_1975) ->
          (eq_4‹??_15› A_1968 m_1976 n_1977) ->
            (eq_4‹??_16› B_1975 ((f_1978) m_1976) ((f_1978) n_1977)))
simpl_tm ~expand:false( Type‹r_1532›, Type‹r_1532›)
simpl_tm ~expand:false(
  ∀ (m_1982 : A_1968) ->
    ∀ (n_1983 : A_1968) ->
      ∀ (f_1984 : forall‹t_1533›(__1985 : A_1968), B_1981) ->
        (eq_4‹??_18› A_1968 m_1982 n_1983) ->
          (eq_4‹??_19› B_1981 ((f_1984) m_1982) ((f_1984) n_1983)),
  ∀ (m_1987 : A_1968) ->
    ∀ (n_1988 : A_1968) ->
      ∀ (f_1989 : forall‹t_1533›(__1990 : A_1968), B_1981) ->
        (eq_4‹??_15› A_1968 m_1987 n_1988) ->
          (eq_4‹??_16› B_1981 ((f_1989) m_1987) ((f_1989) n_1988)))
simpl_tm ~expand:false( A_1968, A_1968)
simpl_tm ~expand:false(
  ∀ (n_1993 : A_1968) ->
    ∀ (f_1994 : forall‹t_1533›(__1995 : A_1968), B_1981) ->
      (eq_4‹??_18› A_1968 m_1992 n_1993) ->
        (eq_4‹??_19› B_1981 ((f_1994) m_1992) ((f_1994) n_1993)),
  ∀ (n_1997 : A_1968) ->
    ∀ (f_1998 : forall‹t_1533›(__1999 : A_1968), B_1981) ->
      (eq_4‹??_15› A_1968 m_1992 n_1997) ->
        (eq_4‹??_16› B_1981 ((f_1998) m_1992) ((f_1998) n_1997)))
simpl_tm ~expand:false( A_1968, A_1968)
simpl_tm ~expand:false(
  ∀ (f_2002 : forall‹t_1533›(__2003 : A_1968), B_1981) ->
    (eq_4‹??_18› A_1968 m_1992 n_2001) ->
      (eq_4‹??_19› B_1981 ((f_2002) m_1992) ((f_2002) n_2001)),
  ∀ (f_2005 : forall‹t_1533›(__2006 : A_1968), B_1981) ->
    (eq_4‹??_15› A_1968 m_1992 n_2001) ->
      (eq_4‹??_16› B_1981 ((f_2005) m_1992) ((f_2005) n_2001)))
simpl_tm ~expand:false( forall‹t_1533›(__2009 : A_1968), B_1981,
  forall‹t_1533›(__2010 : A_1968), B_1981)
simpl_tm ~expand:false( A_1968, A_1968)
simpl_tm ~expand:false( B_1981, B_1981)
simpl_tm ~expand:false(
  (eq_4‹??_18› A_1968 m_1992 n_2001) ->
    (eq_4‹??_19› B_1981 ((f_2008) m_1992) ((f_2008) n_2001)),
  (eq_4‹??_15› A_1968 m_1992 n_2001) ->
    (eq_4‹??_16› B_1981 ((f_2008) m_1992) ((f_2008) n_2001)))
simpl_tm ~expand:false( (eq_4‹??_18› A_1968 m_1992 n_2001),
  (eq_4‹??_15› A_1968 m_1992 n_2001))
simpl_tm ~expand:false( A_1968, A_1968)
simpl_tm ~expand:false( m_1992, m_1992)
simpl_tm ~expand:false( n_2001, n_2001)
simpl_tm ~expand:false(
  (eq_4‹??_19› B_1981 ((f_2008) m_1992) ((f_2008) n_2001)),
  (eq_4‹??_16› B_1981 ((f_2008) m_1992) ((f_2008) n_2001)))
simpl_tm ~expand:false( B_1981, B_1981)
simpl_tm ~expand:false( ((f_2008) m_1992), ((f_2008) m_1992))
simpl_tm ~expand:false( f_2008, f_2008)
simpl_tm ~expand:false( m_1992, m_1992)
simpl_tm ~expand:false( ((f_2008) n_2001), ((f_2008) n_2001))
simpl_tm ~expand:false( f_2008, f_2008)
simpl_tm ~expand:false( n_2001, n_2001)
simpl_tm ~expand:false(
  (eq_4‹??_16› B_1672 ((f_1675) n_1674) ((f_1675) n_1674)),
  (eq_4‹??_17› ?_9 ?_10 ?_10))
simpl_tm ~expand:false( B_1672, ?_9)
simpl_tm ~expand:false( ((f_1675) n_1674), ?_10)
simpl_tm ~expand:false( ((f_1675) n_1674), ?_10)
simpl_tm ~expand:false( B_1672, ?_9)
simpl_tm ~expand:false( ((f_1675) n_1674), ?_10)
simpl_tm ~expand:false( ((f_1675) n_1674), ((f_1675) n_1674))
simpl_tm ~expand:false( f_1675, f_1675)
simpl_tm ~expand:false( n_1674, n_1674)
infer_tm(Type‹??_15›)
check_tm(A_1611, Type‹??_15›)
infer_tm(A_1611)
assert_equal1( Type‹??_15›, Type‹s_1531›)
simpl_tm ~expand:false( Type‹??_15›, Type‹s_1531›)
infer_tm(Type‹??_16›)
check_tm(B_1618, Type‹??_16›)
infer_tm(B_1618)
assert_equal1( Type‹??_16›, Type‹r_1532›)
simpl_tm ~expand:false( Type‹??_16›, Type‹r_1532›)
infer_tm(Type‹r_1532›)
check_tm(B_1672, Type‹r_1532›)
infer_tm(B_1672)
assert_equal1( Type‹r_1532›, Type‹r_1532›)
infer_tm(B_1672)
check_tm(((f_1675) n_1674), B_1672)
infer_tm(((f_1675) n_1674))
infer_tm(f_1675)
check_tm(n_1674, A_1671)
infer_tm(n_1674)
assert_equal1( A_1671, A_1671)
assert_equal1( B_1672, B_1672)
infer_tm(Type‹s_1531›)
check_tm(A_1541, Type‹s_1531›)
infer_tm(A_1541)
assert_equal1( Type‹s_1531›, Type‹s_1531›)
infer_tm(Type‹r_1532›)
check_tm(B_1548, Type‹r_1532›)
infer_tm(B_1548)
assert_equal1( Type‹r_1532›, Type‹r_1532›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2156 : Type‹s_2155›} ->
           ∀ {n_2157 : nat_3} ->
             (vec_8‹s_2155› A_2156 (succ_5‹› n_2157)) -> A_2156)
infer_tm(Type‹s_2155›)
infer_tm(∀ {n_2160 : nat_3} ->
           (vec_8‹s_2155› A_2159 (succ_5‹› n_2160)) -> A_2159)
infer_tm(nat_3)
infer_tm((vec_8‹s_2155› A_2159 (succ_5‹› n_2162)) -> A_2159)
infer_tm((vec_8‹s_2155› A_2159 (succ_5‹› n_2162)))
check_tm(A_2159, Type‹s_2155›)
infer_tm(A_2159)
assert_equal1( Type‹s_2155›, Type‹s_2155›)
check_tm((succ_5‹› n_2162), nat_3)
infer_tm((succ_5‹› n_2162))
check_tm(n_2162, nat_3)
infer_tm(n_2162)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2159)
check_tm(function hd_vec_2165 :
           ∀ {A_2166 : Type‹s_2155›} ->
             ∀ {n_2167 : nat_3} ->
               (vec_8‹s_2155› A_2166 (succ_5‹› n_2167)) -> A_2166
         | A_2169 n_2170 vnil_11 =>
         | A_2171 n_2172 (vcons_12 _2173 hd_2174 _2175) => hd_2174, ∀ {A_2176 :
                                                                    Type‹s_2155›} ->
                                                                    ∀ {n_2177 :
                                                                    nat_3} ->
                                                                    (vec_8‹s_2155›
                                                                    A_2176
                                                                    (succ_5‹›
                                                                    n_2177)) ->
                                                                    A_2176)
infer_tm(function hd_vec_2179 :
           ∀ {A_2180 : Type‹s_2155›} ->
             ∀ {n_2181 : nat_3} ->
               (vec_8‹s_2155› A_2180 (succ_5‹› n_2181)) -> A_2180
         | A_2183 n_2184 vnil_11 =>
         | A_2185 n_2186 (vcons_12 _2187 hd_2188 _2189) => hd_2188)
infer_tm(∀ {A_2191 : Type‹s_2155›} ->
           ∀ {n_2192 : nat_3} ->
             (vec_8‹s_2155› A_2191 (succ_5‹› n_2192)) -> A_2191)
infer_tm(Type‹s_2155›)
infer_tm(∀ {n_2195 : nat_3} ->
           (vec_8‹s_2155› A_2194 (succ_5‹› n_2195)) -> A_2194)
infer_tm(nat_3)
infer_tm((vec_8‹s_2155› A_2194 (succ_5‹› n_2197)) -> A_2194)
infer_tm((vec_8‹s_2155› A_2194 (succ_5‹› n_2197)))
check_tm(A_2194, Type‹s_2155›)
infer_tm(A_2194)
assert_equal1( Type‹s_2155›, Type‹s_2155›)
check_tm((succ_5‹› n_2197), nat_3)
infer_tm((succ_5‹› n_2197))
check_tm(n_2197, nat_3)
infer_tm(n_2197)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2194)
check_cls {|
  prblm {| ;
    () ::: [A_2200, n_2201, vnil_11] =>? !!
    {|  ::: [A_2202, n_2203, (vcons_12 _2204 hd_2205 _2206)] =>? #hd_2205 |}
  |}
|}
case_intro
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2214)),
      (vec_8‹s_2155› #A_2213 zero_4));
    (eq_pat?( #A_2213, A_2200 : Type‹s_2155›)
     eq_pat?( #n_2214, n_2201 : nat_3)) ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2214)),
    (vec_8‹s_2155› #A_2213 zero_4))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2214)),
  (vec_8‹s_2155› #A_2213 zero_4))
simpl_pprbm ~expand:false( #A_2213, #A_2213)
simpl_pprbm ~expand:false( (succ_5‹› #n_2214), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› #n_2214), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2214)),
      (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2222)));
    {| eq_pat?( #A_2213, A_2202 : Type‹s_2155›)
       eq_pat?( #n_2214, n_2203 : nat_3)
       eq_pat?( #n_2222, _2204 : nat_3)
       eq_pat?( #hd_2223, hd_2205 : #A_2213)
       eq_pat?( #tl_2224, _2206 : (vec_8‹s_2155› #A_2213 #n_2222)) ::: [] =>?
         #hd_2205
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2214)),
    (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2222)))
  eq_pat?( #A_2213, A_2202 : Type‹s_2155›)
  eq_pat?( #n_2214, n_2203 : nat_3)
  eq_pat?( #n_2222, _2204 : nat_3)
  eq_pat?( #hd_2223, hd_2205 : #A_2213)
  eq_pat?( #tl_2224, _2206 : (vec_8‹s_2155› #A_2213 #n_2222))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2214)),
  (vec_8‹s_2155› #A_2213 (succ_5‹› #n_2222)))
simpl_pprbm ~expand:false( #A_2213, #A_2213)
simpl_pprbm ~expand:false( (succ_5‹› #n_2214), (succ_5‹› #n_2222))
simpl_pprbm ~expand:false( #n_2214, #n_2222)
simpl_pprbm ~expand:false( #A_2213, #A_2202)
simpl_pprbm ~expand:false( #n_2214, #n_2203)
simpl_pprbm ~expand:false( #n_2222, #_2204)
simpl_pprbm ~expand:false( #hd_2223, #hd_2205)
simpl_pprbm ~expand:false( #tl_2224, #_2206)
simpl_pprbm ~expand:false( #n_2222, #n_2214)
simpl_pprbm ~expand:false( #A_2213, #A_2202)
simpl_pprbm ~expand:false( #n_2222, #n_2203)
simpl_pprbm ~expand:false( #n_2222, #_2204)
simpl_pprbm ~expand:false( #hd_2223, #hd_2205)
simpl_pprbm ~expand:false( #tl_2224, #_2206)
case_coverage_ok(hd_2223, A_2213)
check_tm(hd_2223, A_2213)
infer_tm(hd_2223)
assert_equal1( A_2213, A_2213)
assert_equal1(
  ∀ {A_2237 : Type‹s_2155›} ->
    ∀ {n_2238 : nat_3} ->
      (vec_8‹s_2155› A_2237 (succ_5‹› n_2238)) -> A_2237,
  ∀ {A_2240 : Type‹s_2155›} ->
    ∀ {n_2241 : nat_3} ->
      (vec_8‹s_2155› A_2240 (succ_5‹› n_2241)) -> A_2240)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2246
    ??_2 <= s_2249
    ??_3 <= r_2251
    ??_4 <= t_2253
    ??_5 <= s_2256
    ??_6 <= s_2257
    ??_7 <= s_2258
    ??_8 <= s_2259
    ??_9 <= s_2260
    ??_10 <= s_2261
    ??_11 <= s_2263
    ??_12 <= ??_11
    ??_13 <= s_2267
    ??_14 <= ??_13
    ??_15 <= s_2272
    ??_16 <= r_2274
    ??_17 <= ??_16
    ??_18 <= ??_15
    ??_19 <= ??_16
    
  |}
  imeta_meta {|
    ?_1 <= A_2287
    ?_2 <= A_2290
    ?_3 <= A_2296
    ?_4 <= A_2302
    ?_5 <= A_2308
    ?_6 <= A_2314
    ?_7 <= A_2322
    ?_8 <= B_2330
    ?_9 <= B_2338
    ?_10 <= ((f_2344) n_2346)
    ?_11 <= A_2357
    ?_12 <= B_2365
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_2395 : Type‹s_2394›} ->
           ∀ {n_2396 : nat_3} ->
             (vec_8‹s_2394› A_2395 (succ_5‹› n_2396)) -> A_2395)
infer_tm(Type‹s_2394›)
infer_tm(∀ {n_2399 : nat_3} ->
           (vec_8‹s_2394› A_2398 (succ_5‹› n_2399)) -> A_2398)
infer_tm(nat_3)
infer_tm((vec_8‹s_2394› A_2398 (succ_5‹› n_2401)) -> A_2398)
infer_tm((vec_8‹s_2394› A_2398 (succ_5‹› n_2401)))
check_tm(A_2398, Type‹s_2394›)
infer_tm(A_2398)
assert_equal1( Type‹s_2394›, Type‹s_2394›)
check_tm((succ_5‹› n_2401), nat_3)
infer_tm((succ_5‹› n_2401))
check_tm(n_2401, nat_3)
infer_tm(n_2401)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2398)
check_tm(function hd_vec2_2404 :
           ∀ {A_2405 : Type‹s_2394›} ->
             ∀ {n_2406 : nat_3} ->
               (vec_8‹s_2394› A_2405 (succ_5‹› n_2406)) -> A_2405
         | A_2408 n_2409 xs_2410 =>
           match ?_13, xs_2410 in
             ∀ {n0_2411 : ?_14} -o
               ∀ (__2412 :
                 (vec_8‹s_2394› A_2408 (succ_5‹› n0_2411))) -o ?_15
           with
           | _2413, vnil_11 =>
           | _2414, (vcons_12 _2415 hd_2416 _2417) => hd_2416, ∀ {A_2418 :
                                                                 Type‹s_2394›} ->
                                                                 ∀ {n_2419 :
                                                                   nat_3} ->
                                                                   (vec_8‹s_2394›
                                                                    A_2418
                                                                    (succ_5‹›
                                                                    n_2419)) ->
                                                                    A_2418)
infer_tm(function hd_vec2_2421 :
           ∀ {A_2422 : Type‹s_2394›} ->
             ∀ {n_2423 : nat_3} ->
               (vec_8‹s_2394› A_2422 (succ_5‹› n_2423)) -> A_2422
         | A_2425 n_2426 xs_2427 =>
           match ?_13, xs_2427 in
             ∀ {n0_2428 : ?_14} -o
               ∀ (__2429 :
                 (vec_8‹s_2394› A_2425 (succ_5‹› n0_2428))) -o ?_15
           with
           | _2430, vnil_11 =>
           | _2431, (vcons_12 _2432 hd_2433 _2434) => hd_2433)
infer_tm(∀ {A_2436 : Type‹s_2394›} ->
           ∀ {n_2437 : nat_3} ->
             (vec_8‹s_2394› A_2436 (succ_5‹› n_2437)) -> A_2436)
infer_tm(Type‹s_2394›)
infer_tm(∀ {n_2440 : nat_3} ->
           (vec_8‹s_2394› A_2439 (succ_5‹› n_2440)) -> A_2439)
infer_tm(nat_3)
infer_tm((vec_8‹s_2394› A_2439 (succ_5‹› n_2442)) -> A_2439)
infer_tm((vec_8‹s_2394› A_2439 (succ_5‹› n_2442)))
check_tm(A_2439, Type‹s_2394›)
infer_tm(A_2439)
assert_equal1( Type‹s_2394›, Type‹s_2394›)
check_tm((succ_5‹› n_2442), nat_3)
infer_tm((succ_5‹› n_2442))
check_tm(n_2442, nat_3)
infer_tm(n_2442)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2439)
check_cls {|
  prblm {| ;
    {|  ::: [A_2445, n_2446, xs_2447] =>?
         match ?_13, #xs_2447 in
           ∀ {n0_2454 : ?_14} -o
             ∀ (__2455 :
               (vec_8‹s_2394› #A_2445 (succ_5‹› n0_2454))) -o ?_15
         with
         | _2456, vnil_11 =>
         | _2457, (vcons_12 _2458 hd_2459 _2460) => hd_2459
    |}
  |}
|}
case_intro
case_intro
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #A_2461, A_2445 : Type‹s_2394›)
       eq_pat?( #n_2462, n_2446 : nat_3)
       eq_pat?( #xs_2463, xs_2447 :
         (vec_8‹s_2394› #A_2461 (succ_5‹› #n_2462))) ::: [] =>?
         match ?_13, #xs_2447 in
           ∀ {n0_2464 : ?_14} -o
             ∀ (__2465 :
               (vec_8‹s_2394› #A_2445 (succ_5‹› n0_2464))) -o ?_15
         with
         | _2466, vnil_11 =>
         | _2467, (vcons_12 _2468 hd_2469 _2470) => hd_2469
    |}
  |}
|}
unify_pprbm(
  eq_pat?( #A_2461, A_2445 : Type‹s_2394›)
  eq_pat?( #n_2462, n_2446 : nat_3)
  eq_pat?( #xs_2463, xs_2447 :
    (vec_8‹s_2394› #A_2461 (succ_5‹› #n_2462)))
)
simpl_pprbm ~expand:false( #A_2461, #A_2445)
simpl_pprbm ~expand:false( #n_2462, #n_2446)
simpl_pprbm ~expand:false( #xs_2463, #xs_2447)
simpl_pprbm ~expand:false( #A_2461, #A_2445)
simpl_pprbm ~expand:false( #n_2462, #n_2446)
simpl_pprbm ~expand:false( #xs_2463, #xs_2447)
case_coverage_ok(match ?_13, xs_2463 in
                   ∀ {n0_2485 : ?_14} -o
                     ∀ (__2486 :
                       (vec_8‹s_2394› A_2461 (succ_5‹› n0_2485))) -o
                       ?_15
                 with
                 | _2487, vnil_11 =>
                 | _2488, (vcons_12 _2489 hd_2490 _2491) => hd_2490, A_2461)
check_tm(match ?_13, xs_2463 in
           ∀ {n0_2492 : ?_14} -o
             ∀ (__2493 :
               (vec_8‹s_2394› A_2461 (succ_5‹› n0_2492))) -o ?_15
         with
         | _2494, vnil_11 =>
         | _2495, (vcons_12 _2496 hd_2497 _2498) => hd_2497, A_2461)
infer_tm(match ?_13, xs_2463 in
           ∀ {n0_2499 : ?_14} -o
             ∀ (__2500 :
               (vec_8‹s_2394› A_2461 (succ_5‹› n0_2499))) -o ?_15
         with
         | _2501, vnil_11 =>
         | _2502, (vcons_12 _2503 hd_2504 _2505) => hd_2504)
infer_tm(∀ {n0_2506 : ?_14} -o
           ∀ (__2507 :
             (vec_8‹s_2394› A_2461 (succ_5‹› n0_2506))) -o ?_15)
infer_tm(?_14)
delay_assert(?_40, ??_38)
infer_tm(∀ (__2509 : (vec_8‹s_2394› A_2461 (succ_5‹› n0_2508))) -o
           ?_15)
infer_tm((vec_8‹s_2394› A_2461 (succ_5‹› n0_2508)))
check_tm(A_2461, Type‹s_2394›)
infer_tm(A_2461)
assert_equal1( Type‹s_2394›, Type‹s_2394›)
check_tm((succ_5‹› n0_2508), nat_3)
infer_tm((succ_5‹› n0_2508))
check_tm(n0_2508, nat_3)
infer_tm(n0_2508)
assert_equal1( nat_3, ?_14)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( nat_3, ?_14)
simpl_tm ~expand:false( ?_40, Type‹??_38›)
infer_tm(?_15)
delay_assert(?_41, ??_39)
simpl_tm ~expand:false( ?_41, Type‹??_39›)
check_tm(?_13, ?_14)
check_tm(xs_2463, (vec_8‹s_2394› A_2461 (succ_5‹› ?_13)))
infer_tm(xs_2463)
assert_equal1( (vec_8‹s_2394› A_2461 (succ_5‹› ?_13)),
  (vec_8‹s_2394› A_2461 (succ_5‹› n_2462)))
simpl_tm ~expand:false( (vec_8‹s_2394› A_2461 (succ_5‹› ?_13)),
  (vec_8‹s_2394› A_2461 (succ_5‹› n_2462)))
simpl_tm ~expand:false( A_2461, A_2461)
simpl_tm ~expand:false( (succ_5‹› ?_13), (succ_5‹› n_2462))
simpl_tm ~expand:false( ?_13, n_2462)
check_cls {|
  prblm {| ;
    () ::: [_2511, vnil_11] =>? !!
    {|  ::: [_2512, (vcons_12 _2513 hd_2514 _2515)] =>? #hd_2514 |}
  |}
|}
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2394› A_2461 (succ_5‹› #n0_2519)),
      (vec_8‹s_2394› A_2461 zero_4));
    (eq_pat?( #n0_2519, _2511 : nat_3)) ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2394› A_2461 (succ_5‹› #n0_2519)),
    (vec_8‹s_2394› A_2461 zero_4))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2394› A_2461 (succ_5‹› #n0_2519)),
  (vec_8‹s_2394› A_2461 zero_4))
simpl_pprbm ~expand:false( A_2461, A_2461)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2519), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› #n0_2519), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2394› A_2461 (succ_5‹› #n0_2519)),
      (vec_8‹s_2394› A_2461 (succ_5‹› #n_2527)));
    {| eq_pat?( #n0_2519, _2512 : nat_3)
       eq_pat?( #n_2527, _2513 : nat_3)
       eq_pat?( #hd_2528, hd_2514 : A_2461)
       eq_pat?( #tl_2529, _2515 : (vec_8‹s_2394› A_2461 #n_2527)) ::: [] =>?
         #hd_2514
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2394› A_2461 (succ_5‹› #n0_2519)),
    (vec_8‹s_2394› A_2461 (succ_5‹› #n_2527)))
  eq_pat?( #n0_2519, _2512 : nat_3)
  eq_pat?( #n_2527, _2513 : nat_3)
  eq_pat?( #hd_2528, hd_2514 : A_2461)
  eq_pat?( #tl_2529, _2515 : (vec_8‹s_2394› A_2461 #n_2527))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2394› A_2461 (succ_5‹› #n0_2519)),
  (vec_8‹s_2394› A_2461 (succ_5‹› #n_2527)))
simpl_pprbm ~expand:false( A_2461, A_2461)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2519), (succ_5‹› #n_2527))
simpl_pprbm ~expand:false( #n0_2519, #n_2527)
simpl_pprbm ~expand:false( #n0_2519, #_2512)
simpl_pprbm ~expand:false( #n_2527, #_2513)
simpl_pprbm ~expand:false( #hd_2528, #hd_2514)
simpl_pprbm ~expand:false( #tl_2529, #_2515)
simpl_pprbm ~expand:false( #n_2527, #n0_2519)
simpl_pprbm ~expand:false( #n_2527, #_2512)
simpl_pprbm ~expand:false( #n_2527, #_2513)
simpl_pprbm ~expand:false( #hd_2528, #hd_2514)
simpl_pprbm ~expand:false( #tl_2529, #_2515)
case_coverage_ok(hd_2528, ?_15)
check_tm(hd_2528, ?_15)
infer_tm(hd_2528)
assert_equal1( ?_15, A_2461)
assert_equal1( A_2461, ?_15)
assert_equal1(
  ∀ {A_2542 : Type‹s_2394›} ->
    ∀ {n_2543 : nat_3} ->
      (vec_8‹s_2394› A_2542 (succ_5‹› n_2543)) -> A_2542,
  ∀ {A_2545 : Type‹s_2394›} ->
    ∀ {n_2546 : nat_3} ->
      (vec_8‹s_2394› A_2545 (succ_5‹› n_2546)) -> A_2545)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2551
    ??_2 <= s_2554
    ??_3 <= r_2556
    ??_4 <= t_2558
    ??_5 <= s_2561
    ??_6 <= s_2562
    ??_7 <= s_2563
    ??_8 <= s_2564
    ??_9 <= s_2565
    ??_10 <= s_2566
    ??_11 <= s_2568
    ??_12 <= ??_11
    ??_13 <= s_2572
    ??_14 <= ??_13
    ??_15 <= s_2577
    ??_16 <= r_2579
    ??_17 <= ??_16
    ??_18 <= ??_15
    ??_19 <= ??_16
    
  |}
  imeta_meta {|
    ?_1 <= A_2592
    ?_2 <= A_2595
    ?_3 <= A_2601
    ?_4 <= A_2607
    ?_5 <= A_2613
    ?_6 <= A_2619
    ?_7 <= A_2627
    ?_8 <= B_2635
    ?_9 <= B_2643
    ?_10 <= ((f_2649) n_2651)
    ?_11 <= A_2662
    ?_12 <= B_2670
    ?_13 <= n_2674
    ?_14 <= nat_3
    ?_40 <= Type‹??_38›
    ?_41 <= Type‹??_39›
    
  |}
  eqns {|
    equal_tm? (A_2461, ?_15);
    equal_tm? (?_15, A_2461)
  |}
end_dump
simpl_tm ~expand:false( A_2461, ?_15)
simpl_tm ~expand:false( A_2461, A_2461)
infer_tm(nat_3)
check_tm(n_2462, nat_3)
infer_tm(n_2462)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_38›)
check_tm(nat_3, Type‹??_38›)
infer_tm(nat_3)
assert_equal1( Type‹??_38›, U)
simpl_tm ~expand:false( Type‹??_38›, U)
infer_tm(Type‹??_39›)
check_tm(A_2461, Type‹??_39›)
infer_tm(A_2461)
assert_equal1( Type‹??_39›, Type‹s_2394›)
simpl_tm ~expand:false( Type‹??_39›, Type‹s_2394›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2753 : Type‹s_2752›} ->
           ∀ {n_2754 : nat_3} ->
             ∀ (__2755 : (vec_8‹??_34› A_2753 n_2754)) ->
               (exists_5‹??_35,??_36,L›
                 ?_36
                 function _2756 : ∀ (x_2757 : ?_37) -> ?_38
                 | x_2758 => (eq_4‹??_37› ?_39 x_2758 n_2754)))
infer_tm(Type‹s_2752›)
infer_tm(∀ {n_2760 : nat_3} ->
           ∀ (__2761 : (vec_8‹??_34› A_2759 n_2760)) ->
             (exists_5‹??_35,??_36,L›
               ?_36
               function _2762 : ∀ (x_2763 : ?_37) -> ?_38
               | x_2764 => (eq_4‹??_37› ?_39 x_2764 n_2760)))
infer_tm(nat_3)
infer_tm(∀ (__2766 : (vec_8‹??_34› A_2759 n_2765)) ->
           (exists_5‹??_35,??_36,L›
             ?_36
             function _2767 : ∀ (x_2768 : ?_37) -> ?_38
             | x_2769 => (eq_4‹??_37› ?_39 x_2769 n_2765)))
infer_tm((vec_8‹??_34› A_2759 n_2765))
check_tm(A_2759, Type‹??_34›)
infer_tm(A_2759)
assert_equal1( Type‹??_34›, Type‹s_2752›)
check_tm(n_2765, nat_3)
infer_tm(n_2765)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_34›, Type‹s_2752›)
infer_tm((exists_5‹??_35,??_36,L›
           ?_36
           function _2771 : ∀ (x_2772 : ?_37) -> ?_38
           | x_2773 => (eq_4‹??_37› ?_39 x_2773 n_2765)))
check_tm(?_36, Type‹??_35›)
check_tm(function _2774 : ∀ (x_2775 : ?_37) -> ?_38
         | x_2776 => (eq_4‹??_37› ?_39 x_2776 n_2765), ?_36 ->
                                                             Type‹??_36›)
infer_tm(function _2778 : ∀ (x_2779 : ?_37) -> ?_38
         | x_2780 => (eq_4‹??_37› ?_39 x_2780 n_2765))
infer_tm(∀ (x_2782 : ?_37) -> ?_38)
infer_tm(?_37)
delay_assert(?_42, ??_40)
infer_tm(?_38)
simpl_tm ~expand:false( ?_42, Type‹??_40›)
delay_assert(?_43, ??_41)
simpl_tm ~expand:false( ?_43, Type‹??_41›)
check_cls {|
  prblm {| ; {|  ::: [x_2784] =>? (eq_4‹??_37› ?_39 #x_2784 n_2765) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_2786, x_2784 : ?_37) ::: [] =>?
         (eq_4‹??_37› ?_39 #x_2784 n_2765)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_2786, x_2784 : ?_37) )
simpl_pprbm ~expand:false( #x_2786, #x_2784)
simpl_pprbm ~expand:false( #x_2786, #x_2784)
case_coverage_ok((eq_4‹??_37› ?_39 x_2786 n_2765), ?_38)
check_tm((eq_4‹??_37› ?_39 x_2786 n_2765), ?_38)
infer_tm((eq_4‹??_37› ?_39 x_2786 n_2765))
check_tm(?_39, Type‹??_37›)
check_tm(x_2786, ?_39)
infer_tm(x_2786)
assert_equal1( ?_39, ?_37)
check_tm(n_2765, ?_39)
infer_tm(n_2765)
assert_equal1( ?_39, nat_3)
assert_equal1( ?_38, U)
assert_equal1( ?_36 -> Type‹??_36›, ∀ (x_2789 : ?_37) -> ?_38)
simpl_tm ~expand:false( ?_36 -> Type‹??_36›, ∀ (x_2793 : ?_37) -> ?_38)
simpl_tm ~expand:false( ?_36, ?_37)
simpl_tm ~expand:false( Type‹??_36›, ?_38)
simpl_tm ~expand:false( Type‹??_36›, ?_38)
simpl_tm ~expand:false( Type‹??_36›, U)
simpl_tm ~expand:false( ?_39, nat_3)
simpl_tm ~expand:false( nat_3, ?_36)
check_tm(function vlength_2795 :
           ∀ {A_2796 : Type‹s_2752›} ->
             ∀ {n_2797 : nat_3} ->
               ∀ (__2798 : (vec_8‹??_20› A_2796 n_2797)) ->
                 (exists_5‹??_21,??_22,L›
                   ?_16
                   function _2799 : ∀ (x_2800 : ?_17) -> ?_18
                   | x_2801 => (eq_4‹??_23› ?_19 x_2801 n_2797))
         | A_2802 n_2803 vnil_11 =>
           (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
         | A_2804 n_2805 (vcons_12 _2806 _2807 tl_2808) =>
           match ((vlength_2795) ?_24 ?_25 tl_2808) in
             ∀ (_2809 : ?_26) -o ?_27
           with
           | (ex_7 n_2810 pf_2811) =>
             (ex_7‹??_31,??_32,??_33›
               (succ_5‹› n_2810)
               ((congr_3‹??_28,??_29,??_30›)
                 ?_28 ?_29 ?_30 ?_31
                 function _2812 : ∀ (x_2813 : ?_32) -> ?_33
                 | x_2814 => (succ_5‹› x_2814) pf_2811)), ∀ {A_2815 :
                                                                Type‹s_2752›} ->
                                                                ∀ {n_2816 :
                                                                  nat_3} ->
                                                                  ∀ (__2817 :
                                                                    (vec_8‹??_34›
                                                                    A_2815
                                                                    n_2816)) ->
                                                                    (exists_5‹??_35,??_36,L›
                                                                    ?_36
                                                                    function _2818 :
                                                                    ∀ (x_2819 :
                                                                    ?_37) ->
                                                                    ?_38
                                                                    | 
                                                                    x_2820 =>
                                                                    (eq_4‹??_37›
                                                                    ?_39
                                                                    x_2820
                                                                    n_2816)))
infer_tm(function vlength_2821 :
           ∀ {A_2822 : Type‹s_2752›} ->
             ∀ {n_2823 : nat_3} ->
               ∀ (__2824 : (vec_8‹??_20› A_2822 n_2823)) ->
                 (exists_5‹??_21,??_22,L›
                   ?_16
                   function _2825 : ∀ (x_2826 : ?_17) -> ?_18
                   | x_2827 => (eq_4‹??_23› ?_19 x_2827 n_2823))
         | A_2828 n_2829 vnil_11 =>
           (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
         | A_2830 n_2831 (vcons_12 _2832 _2833 tl_2834) =>
           match ((vlength_2821) ?_24 ?_25 tl_2834) in
             ∀ (_2835 : ?_26) -o ?_27
           with
           | (ex_7 n_2836 pf_2837) =>
             (ex_7‹??_31,??_32,??_33›
               (succ_5‹› n_2836)
               ((congr_3‹??_28,??_29,??_30›)
                 ?_28 ?_29 ?_30 ?_31
                 function _2838 : ∀ (x_2839 : ?_32) -> ?_33
                 | x_2840 => (succ_5‹› x_2840) pf_2837)))
infer_tm(∀ {A_2842 : Type‹s_2752›} ->
           ∀ {n_2843 : nat_3} ->
             ∀ (__2844 : (vec_8‹??_20› A_2842 n_2843)) ->
               (exists_5‹??_21,??_22,L›
                 ?_16
                 function _2845 : ∀ (x_2846 : ?_17) -> ?_18
                 | x_2847 => (eq_4‹??_23› ?_19 x_2847 n_2843)))
infer_tm(Type‹s_2752›)
infer_tm(∀ {n_2849 : nat_3} ->
           ∀ (__2850 : (vec_8‹??_20› A_2848 n_2849)) ->
             (exists_5‹??_21,??_22,L›
               ?_16
               function _2851 : ∀ (x_2852 : ?_17) -> ?_18
               | x_2853 => (eq_4‹??_23› ?_19 x_2853 n_2849)))
infer_tm(nat_3)
infer_tm(∀ (__2855 : (vec_8‹??_20› A_2848 n_2854)) ->
           (exists_5‹??_21,??_22,L›
             ?_16
             function _2856 : ∀ (x_2857 : ?_17) -> ?_18
             | x_2858 => (eq_4‹??_23› ?_19 x_2858 n_2854)))
infer_tm((vec_8‹??_20› A_2848 n_2854))
check_tm(A_2848, Type‹??_20›)
infer_tm(A_2848)
assert_equal1( Type‹??_20›, Type‹s_2752›)
check_tm(n_2854, nat_3)
infer_tm(n_2854)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_20›, Type‹s_2752›)
infer_tm((exists_5‹??_21,??_22,L›
           ?_16
           function _2860 : ∀ (x_2861 : ?_17) -> ?_18
           | x_2862 => (eq_4‹??_23› ?_19 x_2862 n_2854)))
check_tm(?_16, Type‹??_21›)
check_tm(function _2863 : ∀ (x_2864 : ?_17) -> ?_18
         | x_2865 => (eq_4‹??_23› ?_19 x_2865 n_2854), ?_16 ->
                                                             Type‹??_22›)
infer_tm(function _2867 : ∀ (x_2868 : ?_17) -> ?_18
         | x_2869 => (eq_4‹??_23› ?_19 x_2869 n_2854))
infer_tm(∀ (x_2871 : ?_17) -> ?_18)
infer_tm(?_17)
delay_assert(?_44, ??_42)
infer_tm(?_18)
simpl_tm ~expand:false( ?_44, Type‹??_42›)
delay_assert(?_45, ??_43)
simpl_tm ~expand:false( ?_45, Type‹??_43›)
check_cls {|
  prblm {| ; {|  ::: [x_2873] =>? (eq_4‹??_23› ?_19 #x_2873 n_2854) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_2875, x_2873 : ?_17) ::: [] =>?
         (eq_4‹??_23› ?_19 #x_2873 n_2854)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_2875, x_2873 : ?_17) )
simpl_pprbm ~expand:false( #x_2875, #x_2873)
simpl_pprbm ~expand:false( #x_2875, #x_2873)
case_coverage_ok((eq_4‹??_23› ?_19 x_2875 n_2854), ?_18)
check_tm((eq_4‹??_23› ?_19 x_2875 n_2854), ?_18)
infer_tm((eq_4‹??_23› ?_19 x_2875 n_2854))
check_tm(?_19, Type‹??_23›)
check_tm(x_2875, ?_19)
infer_tm(x_2875)
assert_equal1( ?_19, ?_17)
check_tm(n_2854, ?_19)
infer_tm(n_2854)
assert_equal1( ?_19, nat_3)
assert_equal1( ?_18, U)
assert_equal1( ?_16 -> Type‹??_22›, ∀ (x_2878 : ?_17) -> ?_18)
simpl_tm ~expand:false( ?_16 -> Type‹??_22›, ∀ (x_2882 : ?_17) -> ?_18)
simpl_tm ~expand:false( ?_16, ?_17)
simpl_tm ~expand:false( Type‹??_22›, ?_18)
simpl_tm ~expand:false( Type‹??_22›, ?_18)
simpl_tm ~expand:false( Type‹??_22›, U)
simpl_tm ~expand:false( ?_19, nat_3)
simpl_tm ~expand:false( nat_3, ?_16)
check_cls {|
  prblm {| ;
    {|  ::: [A_2884, n_2885, vnil_11] =>?
         (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
    |}
    {|  ::: [A_2886, n_2887, (vcons_12 _2888 _2889 tl_2890)] =>?
         match ((vlength_2841) ?_24 ?_25 #tl_2890) in
           ∀ (_2906 : ?_26) -o ?_27
         with
         | (ex_7 n_2907 pf_2908) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_2907)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _2909 : ∀ (x_2910 : ?_32) -> ?_33
               | x_2911 => (succ_5‹› x_2911) pf_2908))
    |}
  |}
|}
case_intro
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2752› #A_2912 #n_2913),
      (vec_8‹s_2752› #A_2912 zero_4));
    {| eq_pat?( #A_2912, A_2884 : Type‹s_2752›)
       eq_pat?( #n_2913, n_2885 : nat_3) ::: [] =>?
         (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2752› #A_2912 #n_2913),
    (vec_8‹s_2752› #A_2912 zero_4))
  eq_pat?( #A_2912, A_2884 : Type‹s_2752›)
  eq_pat?( #n_2913, n_2885 : nat_3)
)
simpl_pprbm ~expand:false( (vec_8‹s_2752› #A_2912 #n_2913),
  (vec_8‹s_2752› #A_2912 zero_4))
simpl_pprbm ~expand:false( #A_2912, #A_2912)
simpl_pprbm ~expand:false( #n_2913, zero_4)
simpl_pprbm ~expand:false( #A_2912, #A_2884)
simpl_pprbm ~expand:false( #n_2913, #n_2885)
simpl_pprbm ~expand:false( zero_4, #n_2913)
simpl_pprbm ~expand:false( #A_2912, #A_2884)
simpl_pprbm ~expand:false( zero_4, #n_2885)
case_coverage_ok((ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›), 
(exists_5‹??_21,U,L›
  nat_3
  function _2957 : nat_3 -> U
  | x_2959 => (eq_4‹??_23› nat_3 x_2959 zero_4)))
check_tm((ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›), (exists_5‹??_21,U,L›
                                                                   nat_3
                                                                   function _2960 :
                                                                    nat_3 ->
                                                                    U
                                                                   | 
                                                                   x_2962 =>
                                                                   (eq_4‹??_23›
                                                                    nat_3
                                                                    x_2962
                                                                    zero_4)))
infer_tm((ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›))
check_tm(?_22, Type‹??_25›)
check_tm(?_23, ?_22 -> Type‹??_26›)
check_tm(zero_4, ?_22)
infer_tm(zero_4)
assert_equal1( ?_22, nat_3)
check_tm(refl_6‹??_24›, ((?_23) zero_4))
infer_tm(refl_6‹??_24›)
check_tm(?_20, Type‹??_24›)
check_tm(?_21, ?_20)
assert_equal1( ((?_23) zero_4), (eq_4‹??_24› ?_20 ?_21 ?_21))
assert_equal1(
  (exists_5‹??_21,U,L›
    nat_3
    function _2964 : nat_3 -> U
    | x_2966 => (eq_4‹??_23› nat_3 x_2966 zero_4)),
  (exists_5‹??_25,??_26,??_27› ?_22 ?_23))
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2752› #A_2912 #n_2913),
      (vec_8‹s_2752› #A_2912 (succ_5‹› #n_2967)));
    {| eq_pat?( #A_2912, A_2886 : Type‹s_2752›)
       eq_pat?( #n_2913, n_2887 : nat_3)
       eq_pat?( #n_2967, _2888 : nat_3)
       eq_pat?( #hd_2968, _2889 : #A_2912)
       eq_pat?( #tl_2969, tl_2890 : (vec_8‹s_2752› #A_2912 #n_2967)) ::: [] =>?
         match ((vlength_2841) ?_24 ?_25 #tl_2890) in
           ∀ (_2991 : ?_26) -o ?_27
         with
         | (ex_7 n_2992 pf_2993) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_2992)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _2994 : ∀ (x_2995 : ?_32) -> ?_33
               | x_2996 => (succ_5‹› x_2996) pf_2993))
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2752› #A_2912 #n_2913),
    (vec_8‹s_2752› #A_2912 (succ_5‹› #n_2967)))
  eq_pat?( #A_2912, A_2886 : Type‹s_2752›)
  eq_pat?( #n_2913, n_2887 : nat_3)
  eq_pat?( #n_2967, _2888 : nat_3)
  eq_pat?( #hd_2968, _2889 : #A_2912)
  eq_pat?( #tl_2969, tl_2890 : (vec_8‹s_2752› #A_2912 #n_2967))
)
simpl_pprbm ~expand:false( (vec_8‹s_2752› #A_2912 #n_2913),
  (vec_8‹s_2752› #A_2912 (succ_5‹› #n_2967)))
simpl_pprbm ~expand:false( #A_2912, #A_2912)
simpl_pprbm ~expand:false( #n_2913, (succ_5‹› #n_2967))
simpl_pprbm ~expand:false( #A_2912, #A_2886)
simpl_pprbm ~expand:false( #n_2913, #n_2887)
simpl_pprbm ~expand:false( #n_2967, #_2888)
simpl_pprbm ~expand:false( #hd_2968, #_2889)
simpl_pprbm ~expand:false( #tl_2969, #tl_2890)
simpl_pprbm ~expand:false( (succ_5‹› #n_2967), #n_2913)
simpl_pprbm ~expand:false( #A_2912, #A_2886)
simpl_pprbm ~expand:false( (succ_5‹› #n_2967), #n_2887)
simpl_pprbm ~expand:false( #n_2967, #_2888)
simpl_pprbm ~expand:false( #hd_2968, #_2889)
simpl_pprbm ~expand:false( #tl_2969, #tl_2890)
case_coverage_ok(match ((vlength_2841) ?_24 ?_25 tl_2969) in
                   ∀ (_3025 : ?_26) -o ?_27
                 with
                 | (ex_7 n_3026 pf_3027) =>
                   (ex_7‹??_31,??_32,??_33›
                     (succ_5‹› n_3026)
                     ((congr_3‹??_28,??_29,??_30›)
                       ?_28 ?_29 ?_30 ?_31
                       function _3028 : ∀ (x_3029 : ?_32) -> ?_33
                       | x_3030 => (succ_5‹› x_3030) pf_3027)), (exists_5‹??_21,U,L›
                                                                    nat_3
                                                                    function _3031 :
                                                                    nat_3 ->
                                                                    U
                                                                    | 
                                                                    x_3033 =>
                                                                    (eq_4‹??_23›
                                                                    nat_3
                                                                    x_3033
                                                                    (succ_5‹›
                                                                    n_2967))))
check_tm(match ((vlength_2841) ?_24 ?_25 tl_2969) in
           ∀ (_3034 : ?_26) -o ?_27
         with
         | (ex_7 n_3035 pf_3036) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_3035)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _3037 : ∀ (x_3038 : ?_32) -> ?_33
               | x_3039 => (succ_5‹› x_3039) pf_3036)), (exists_5‹??_21,U,L›
                                                              nat_3
                                                              function _3040 :
                                                                nat_3 -> U
                                                              | x_3042 =>
                                                                (eq_4‹??_23›
                                                                  nat_3
                                                                  x_3042
                                                                  (succ_5‹›
                                                                    n_2967))))
infer_tm(match ((vlength_2841) ?_24 ?_25 tl_2969) in
           ∀ (_3043 : ?_26) -o ?_27
         with
         | (ex_7 n_3044 pf_3045) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_3044)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _3046 : ∀ (x_3047 : ?_32) -> ?_33
               | x_3048 => (succ_5‹› x_3048) pf_3045)))
infer_tm(∀ (_3049 : ?_26) -o ?_27)
infer_tm(?_26)
simpl_tm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3054 : nat_3 -> U
    | x_3056 => (eq_4‹??_23› nat_3 x_3056 zero_4)),
  (exists_5‹??_25,??_26,??_27› ?_22 ?_23))
simpl_tm ~expand:false( nat_3, ?_22)
simpl_tm ~expand:false(
  function _3057 : nat_3 -> U
  | x_3059 => (eq_4‹??_23› nat_3 x_3059 zero_4), ?_23)
simpl_tm ~expand:false( nat_3, ?_22)
simpl_tm ~expand:false(
  function _3064 : nat_3 -> U
  | x_3066 => (eq_4‹??_23› nat_3 x_3066 zero_4), ?_23)
simpl_tm ~expand:false( (eq_4‹??_23› nat_3 zero_4 zero_4),
  (eq_4‹??_24› ?_20 ?_21 ?_21))
simpl_tm ~expand:false( nat_3, ?_20)
simpl_tm ~expand:false( zero_4, ?_21)
simpl_tm ~expand:false( zero_4, ?_21)
simpl_tm ~expand:false( nat_3, ?_20)
simpl_tm ~expand:false( zero_4, ?_21)
simpl_tm ~expand:false( zero_4, zero_4)
simpl_tm ~expand:false( nat_3, nat_3)
delay_assert(?_46, ??_44)
infer_tm(?_27)
simpl_tm ~expand:false( ?_46, Type‹??_44›)
delay_assert(?_47, ??_45)
simpl_tm ~expand:false( ?_47, Type‹??_45›)
check_tm(((vlength_2841) ?_24 ?_25 tl_2969), ?_26)
infer_tm(((vlength_2841) ?_24 ?_25 tl_2969))
infer_tm(((vlength_2841) ?_24 ?_25))
infer_tm(((vlength_2841) ?_24))
infer_tm(vlength_2841)
check_tm(?_24, Type‹s_2752›)
check_tm(?_25, nat_3)
check_tm(tl_2969, (vec_8‹s_2752› ?_24 ?_25))
infer_tm(tl_2969)
assert_equal1( (vec_8‹s_2752› ?_24 ?_25),
  (vec_8‹s_2752› A_2912 n_2967))
assert_equal1( ?_26,
  (exists_5‹??_21,U,L›
    nat_3
    function _3109 : nat_3 -> U
    | x_3111 => (eq_4‹??_23› nat_3 x_3111 ?_25)))
simpl_tm ~expand:false( ?_26,
  (exists_5‹??_21,U,L›
    nat_3
    function _3117 : nat_3 -> U
    | x_3119 => (eq_4‹??_23› nat_3 x_3119 ?_25)))
simpl_tm ~expand:false( (vec_8‹s_2752› ?_24 ?_25),
  (vec_8‹s_2752› A_2912 n_2967))
simpl_tm ~expand:false( ?_24, A_2912)
simpl_tm ~expand:false( ?_25, n_2967)
simpl_tm ~expand:false( n_2967, ?_25)
check_cls {|
  prblm {| ;
    {|  ::: [(ex_7 n_3112 pf_3113)] =>?
         (ex_7‹??_31,??_32,??_33›
           (succ_5‹› #n_3112)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3132 : ∀ (x_3133 : ?_32) -> ?_33
             | x_3134 => (succ_5‹› x_3134) #pf_3113))
    |}
  |}
|}
case_intro
case_splitting
splitting_on(ex_7)
case_coverage{|
  prblm {|
    eq_term?(
      (exists_5‹??_21,U,L›
        nat_3
        function _3171 : nat_3 -> U
        | x_3173 => (eq_4‹??_23› nat_3 x_3173 n_2967)),
      (exists_5‹??_21,U,L›
        nat_3
        function _3174 : nat_3 -> U
        | x_3176 => (eq_4‹??_23› nat_3 x_3176 n_2967)));
    {| eq_pat?( #m_3136, n_3112 : nat_3)
       eq_pat?( #pf_3137, pf_3113 : (eq_4‹??_23› nat_3 #m_3136 n_2967)) ::: [] =>?
         (ex_7‹??_31,??_32,??_33›
           (succ_5‹› #n_3112)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3177 : ∀ (x_3178 : ?_32) -> ?_33
             | x_3179 => (succ_5‹› x_3179) #pf_3113))
    |}
  |}
|}
unify_pprbm(
  eq_term?(
    (exists_5‹??_21,U,L›
      nat_3
      function _3180 : nat_3 -> U
      | x_3182 => (eq_4‹??_23› nat_3 x_3182 n_2967)),
    (exists_5‹??_21,U,L›
      nat_3
      function _3183 : nat_3 -> U
      | x_3185 => (eq_4‹??_23› nat_3 x_3185 n_2967)))
  eq_pat?( #m_3136, n_3112 : nat_3)
  eq_pat?( #pf_3137, pf_3113 : (eq_4‹??_23› nat_3 #m_3136 n_2967))
)
simpl_pprbm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3186 : nat_3 -> U
    | x_3188 => (eq_4‹??_23› nat_3 x_3188 n_2967)),
  (exists_5‹??_21,U,L›
    nat_3
    function _3189 : nat_3 -> U
    | x_3191 => (eq_4‹??_23› nat_3 x_3191 n_2967)))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false(
  function _3192 : nat_3 -> U
  | x_3194 => (eq_4‹??_23› nat_3 x_3194 n_2967),
  function _3195 : nat_3 -> U
  | x_3197 => (eq_4‹??_23› nat_3 x_3197 n_2967))
simpl_pprbm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( U, U)
simpl_pprbm ~expand:false( (eq_4‹??_23› nat_3 x_3202 n_2967),
  (eq_4‹??_23› nat_3 x_3202 n_2967))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( x_3202, x_3202)
simpl_pprbm ~expand:false( n_2967, n_2967)
simpl_pprbm ~expand:false( #m_3136, #n_3112)
simpl_pprbm ~expand:false( #pf_3137, #pf_3113)
simpl_pprbm ~expand:false( #m_3136, #n_3112)
simpl_pprbm ~expand:false( #pf_3137, #pf_3113)
case_coverage_ok((ex_7‹??_31,??_32,??_33›
                   (succ_5‹› m_3136)
                   ((congr_3‹??_28,??_29,??_30›)
                     ?_28 ?_29 ?_30 ?_31
                     function _3233 : ∀ (x_3234 : ?_32) -> ?_33
                     | x_3235 => (succ_5‹› x_3235) pf_3137)), ?_27)
check_tm((ex_7‹??_31,??_32,??_33›
           (succ_5‹› m_3136)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3236 : ∀ (x_3237 : ?_32) -> ?_33
             | x_3238 => (succ_5‹› x_3238) pf_3137)), ?_27)
infer_tm((ex_7‹??_31,??_32,??_33›
           (succ_5‹› m_3136)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3239 : ∀ (x_3240 : ?_32) -> ?_33
             | x_3241 => (succ_5‹› x_3241) pf_3137)))
check_tm(?_34, Type‹??_31›)
check_tm(?_35, ?_34 -> Type‹??_32›)
check_tm((succ_5‹› m_3136), ?_34)
infer_tm((succ_5‹› m_3136))
check_tm(m_3136, nat_3)
infer_tm(m_3136)
assert_equal1( nat_3, nat_3)
assert_equal1( ?_34, nat_3)
check_tm(((congr_3‹??_28,??_29,??_30›)
           ?_28 ?_29 ?_30 ?_31
           function _3243 : ∀ (x_3244 : ?_32) -> ?_33
           | x_3245 => (succ_5‹› x_3245) pf_3137), ((?_35)
                                                         (succ_5‹›
                                                           m_3136)))
infer_tm(((congr_3‹??_28,??_29,??_30›)
           ?_28 ?_29 ?_30 ?_31
           function _3246 : ∀ (x_3247 : ?_32) -> ?_33
           | x_3248 => (succ_5‹› x_3248) pf_3137))
infer_tm(((congr_3‹??_28,??_29,??_30›)
           ?_28 ?_29 ?_30 ?_31
           function _3249 : ∀ (x_3250 : ?_32) -> ?_33
           | x_3251 => (succ_5‹› x_3251)))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28 ?_29 ?_30 ?_31))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28 ?_29 ?_30))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28 ?_29))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28))
infer_tm(congr_3‹??_28,??_29,??_30›)
simpl_tm ~expand:false( ?_34, nat_3)
check_tm(?_28, Type‹??_28›)
check_tm(?_29, Type‹??_29›)
check_tm(?_30, ?_28)
check_tm(?_31, ?_28)
check_tm(function _3323 : ∀ (x_3324 : ?_32) -> ?_33
         | x_3325 => (succ_5‹› x_3325), forall‹??_30›(__3326 : ?_28),
                                              ?_29)
infer_tm(function _3327 : ∀ (x_3328 : ?_32) -> ?_33
         | x_3329 => (succ_5‹› x_3329))
infer_tm(∀ (x_3331 : ?_32) -> ?_33)
infer_tm(?_32)
delay_assert(?_48, ??_46)
infer_tm(?_33)
simpl_tm ~expand:false( ?_48, Type‹??_46›)
delay_assert(?_49, ??_47)
simpl_tm ~expand:false( ?_49, Type‹??_47›)
check_cls {|
  prblm {| ; {|  ::: [x_3333] =>? (succ_5‹› #x_3333) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_3335, x_3333 : ?_32) ::: [] =>? (succ_5‹› #x_3333) |}
  |}
|}
unify_pprbm( eq_pat?( #x_3335, x_3333 : ?_32) )
simpl_pprbm ~expand:false( #x_3335, #x_3333)
simpl_pprbm ~expand:false( #x_3335, #x_3333)
case_coverage_ok((succ_5‹› x_3335), ?_33)
check_tm((succ_5‹› x_3335), ?_33)
infer_tm((succ_5‹› x_3335))
check_tm(x_3335, nat_3)
infer_tm(x_3335)
assert_equal1( nat_3, ?_32)
assert_equal1( ?_33, nat_3)
assert_equal1( forall‹??_30›(__3361 : ?_28), ?_29,
  ∀ (x_3362 : ?_32) -> ?_33)
simpl_tm ~expand:false( forall‹??_30›(__3365 : ?_28), ?_29,
  ∀ (x_3366 : ?_32) -> ?_33)
simpl_tm ~expand:false( ?_28, ?_32)
simpl_tm ~expand:false( ?_29, ?_33)
simpl_tm ~expand:false( ?_28, ?_32)
simpl_tm ~expand:false( ?_29, ?_33)
simpl_tm ~expand:false( ?_29, nat_3)
simpl_tm ~expand:false( nat_3, ?_28)
check_tm(pf_3137, (eq_4‹??_28› nat_3 ?_30 ?_31))
infer_tm(pf_3137)
assert_equal1( (eq_4‹??_28› nat_3 ?_30 ?_31),
  ((function _3379 : nat_3 -> U
    | x_3381 => (eq_4‹??_23› nat_3 x_3381 n_2967)) m_3136))
assert_equal1( ((?_35) (succ_5‹› m_3136)),
  (eq_4‹??_29›
    nat_3
    ((function _3382 : nat_3 -> nat_3
      | x_3384 => (succ_5‹› x_3384)) ?_30)
    ((function _3385 : nat_3 -> nat_3
      | x_3387 => (succ_5‹› x_3387)) ?_31)))
assert_equal1( ?_27, (exists_5‹??_31,??_32,??_33› ?_34 ?_35))
assert_equal1(
  (exists_5‹??_21,U,L›
    nat_3
    function _3388 : nat_3 -> U
    | x_3390 => (eq_4‹??_23› nat_3 x_3390 (succ_5‹› n_2967))),
  ?_27)
assert_equal1(
  ∀ {A_3391 : Type‹s_2752›} ->
    ∀ {n_3392 : nat_3} ->
      ∀ (__3393 : (vec_8‹??_34› A_3391 n_3392)) ->
        (exists_5‹??_35,??_36,L›
          ?_36
          function _3394 : ∀ (x_3395 : ?_37) -> ?_38
          | x_3396 => (eq_4‹??_37› ?_39 x_3396 n_3392)),
  ∀ {A_3397 : Type‹s_2752›} ->
    ∀ {n_3398 : nat_3} ->
      ∀ (__3399 : (vec_8‹??_20› A_3397 n_3398)) ->
        (exists_5‹??_21,??_22,L›
          ?_16
          function _3400 : ∀ (x_3401 : ?_17) -> ?_18
          | x_3402 => (eq_4‹??_23› ?_19 x_3402 n_3398)))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_3413
    ??_2 <= s_3416
    ??_3 <= r_3418
    ??_4 <= t_3420
    ??_5 <= s_3423
    ??_6 <= s_3424
    ??_7 <= s_3425
    ??_8 <= s_3426
    ??_9 <= s_3427
    ??_10 <= s_3428
    ??_11 <= s_3430
    ??_12 <= ??_11
    ??_13 <= s_3434
    ??_14 <= ??_13
    ??_15 <= s_3439
    ??_16 <= r_3441
    ??_17 <= ??_16
    ??_18 <= ??_15
    ??_19 <= ??_16
    ??_20 <= s_3452
    ??_22 <= U
    ??_24 <= ??_23
    ??_25 <= ??_21
    ??_26 <= U
    ??_27 <= L
    ??_30 <= U
    ??_34 <= s_3459
    ??_36 <= U
    ??_38 <= U
    ??_39 <= s_3462
    
  |}
  imeta_meta {|
    ?_1 <= A_3465
    ?_2 <= A_3468
    ?_3 <= A_3474
    ?_4 <= A_3480
    ?_5 <= A_3486
    ?_6 <= A_3492
    ?_7 <= A_3500
    ?_8 <= B_3508
    ?_9 <= B_3516
    ?_10 <= ((f_3522) n_3524)
    ?_11 <= A_3535
    ?_12 <= B_3543
    ?_13 <= n_3547
    ?_14 <= nat_3
    ?_15 <= A_3560
    ?_16 <= nat_3
    ?_17 <= ?_16
    ?_18 <= Type‹??_22›
    ?_19 <= nat_3
    ?_20 <= nat_3
    ?_21 <= zero_4
    ?_22 <= nat_3
    ?_23 <= function _3596 : nat_3 -> U
            | x_3598 => (eq_4‹??_23› nat_3 x_3598 zero_4)
    ?_24 <= A_3604
    ?_25 <= n_3609
    ?_26 <= (exists_5‹??_21,U,L›
              nat_3
              function _3620 : nat_3 -> U
              | x_3622 => (eq_4‹??_23› nat_3 x_3622 ?_25))
    ?_28 <= nat_3
    ?_29 <= nat_3
    ?_32 <= ?_28
    ?_33 <= ?_29
    ?_34 <= nat_3
    ?_36 <= nat_3
    ?_37 <= ?_36
    ?_38 <= Type‹??_36›
    ?_39 <= nat_3
    ?_40 <= Type‹??_38›
    ?_41 <= Type‹??_39›
    ?_42 <= Type‹??_40›
    ?_43 <= Type‹??_41›
    ?_44 <= Type‹??_42›
    ?_45 <= Type‹??_43›
    ?_46 <= Type‹??_44›
    ?_47 <= Type‹??_45›
    ?_48 <= Type‹??_46›
    ?_49 <= Type‹??_47›
    
  |}
  eqns {|
    equal_tm?
      (∀ {A_3757 : Type‹s_2752›} ->
         ∀ {n_3758 : nat_3} ->
           ∀ (__3759 : (vec_8‹??_34› A_3757 n_3758)) ->
             (exists_5‹??_35,??_36,L›
               ?_36
               function _3760 : ∀ (x_3761 : ?_37) -> ?_38
               | x_3762 => (eq_4‹??_37› ?_39 x_3762 n_3758)),
      ∀ {A_3763 : Type‹s_2752›} ->
        ∀ {n_3764 : nat_3} ->
          ∀ (__3765 : (vec_8‹??_20› A_3763 n_3764)) ->
            (exists_5‹??_21,??_22,L›
              ?_16
              function _3766 : ∀ (x_3767 : ?_17) -> ?_18
              | x_3768 => (eq_4‹??_23› ?_19 x_3768 n_3764)));
    equal_tm?
      ((exists_5‹??_21,U,L›
         nat_3
         function _3769 : nat_3 -> U
         | x_3771 => (eq_4‹??_23› nat_3 x_3771 (succ_5‹› n_2967))),
      ?_27);
    equal_tm? (?_27, (exists_5‹??_31,??_32,??_33› ?_34 ?_35));
    equal_tm? (((?_35) (succ_5‹› m_3136)),
      (eq_4‹??_29›
        nat_3
        ((function _3772 : nat_3 -> nat_3
          | x_3774 => (succ_5‹› x_3774)) ?_30)
        ((function _3775 : nat_3 -> nat_3
          | x_3777 => (succ_5‹› x_3777)) ?_31)));
    equal_tm? ((eq_4‹??_28› nat_3 ?_30 ?_31),
      ((function _3778 : nat_3 -> U
        | x_3780 => (eq_4‹??_23› nat_3 x_3780 n_2967)) m_3136))
  |}
end_dump
simpl_tm ~expand:false(
  ∀ {A_3811 : Type‹s_2752›} ->
    ∀ {n_3812 : nat_3} ->
      (vec_8‹s_2752› A_3811 n_3812) ->
        (exists_5‹??_35,U,L›
          nat_3
          function _3814 : nat_3 -> U
          | x_3816 => (eq_4‹??_37› nat_3 x_3816 n_3812)),
  ∀ {A_3817 : Type‹s_2752›} ->
    ∀ {n_3818 : nat_3} ->
      (vec_8‹s_2752› A_3817 n_3818) ->
        (exists_5‹??_21,U,L›
          nat_3
          function _3820 : nat_3 -> U
          | x_3822 => (eq_4‹??_23› nat_3 x_3822 n_3818)))
simpl_tm ~expand:false( Type‹s_2752›, Type‹s_2752›)
simpl_tm ~expand:false(
  ∀ {n_3824 : nat_3} ->
    (vec_8‹s_2752› A_3823 n_3824) ->
      (exists_5‹??_35,U,L›
        nat_3
        function _3826 : nat_3 -> U
        | x_3828 => (eq_4‹??_37› nat_3 x_3828 n_3824)),
  ∀ {n_3829 : nat_3} ->
    (vec_8‹s_2752› A_3823 n_3829) ->
      (exists_5‹??_21,U,L›
        nat_3
        function _3831 : nat_3 -> U
        | x_3833 => (eq_4‹??_23› nat_3 x_3833 n_3829)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  (vec_8‹s_2752› A_3823 n_3834) ->
    (exists_5‹??_35,U,L›
      nat_3
      function _3836 : nat_3 -> U
      | x_3838 => (eq_4‹??_37› nat_3 x_3838 n_3834)),
  (vec_8‹s_2752› A_3823 n_3834) ->
    (exists_5‹??_21,U,L›
      nat_3
      function _3840 : nat_3 -> U
      | x_3842 => (eq_4‹??_23› nat_3 x_3842 n_3834)))
simpl_tm ~expand:false( (vec_8‹s_2752› A_3823 n_3834),
  (vec_8‹s_2752› A_3823 n_3834))
simpl_tm ~expand:false( A_3823, A_3823)
simpl_tm ~expand:false( n_3834, n_3834)
simpl_tm ~expand:false(
  (exists_5‹??_35,U,L›
    nat_3
    function _3844 : nat_3 -> U
    | x_3846 => (eq_4‹??_37› nat_3 x_3846 n_3834)),
  (exists_5‹??_21,U,L›
    nat_3
    function _3847 : nat_3 -> U
    | x_3849 => (eq_4‹??_23› nat_3 x_3849 n_3834)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _3850 : nat_3 -> U
  | x_3852 => (eq_4‹??_37› nat_3 x_3852 n_3834),
  function _3853 : nat_3 -> U
  | x_3855 => (eq_4‹??_23› nat_3 x_3855 n_3834))
simpl_function(
  function _3856 : nat_3 -> U
  | x_3858 => (eq_4‹??_37› nat_3 x_3858 n_3834),
  function _3859 : nat_3 -> U
  | x_3861 => (eq_4‹??_23› nat_3 x_3861 n_3834))
simpl_tm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false( (eq_4‹??_37› nat_3 x_3866 n_3834),
  (eq_4‹??_23› nat_3 x_3866 n_3834))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( x_3866, x_3866)
simpl_tm ~expand:false( n_3834, n_3834)
simpl_tm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3870 : nat_3 -> U
    | x_3872 => (eq_4‹??_23› nat_3 x_3872 (succ_5‹› n_2967))),
  ?_27)
simpl_tm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3883 : nat_3 -> U
    | x_3885 => (eq_4‹??_23› nat_3 x_3885 (succ_5‹› n_2967))),
  (exists_5‹??_31,??_32,??_33› nat_3 ?_35))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _3886 : nat_3 -> U
  | x_3888 => (eq_4‹??_23› nat_3 x_3888 (succ_5‹› n_2967)), ?_35)
simpl_tm ~expand:false(
  function _3892 : nat_3 -> U
  | x_3894 => (eq_4‹??_23› nat_3 x_3894 (succ_5‹› n_2967)), ?_35)
simpl_tm ~expand:false(
  (eq_4‹??_23› nat_3 (succ_5‹› m_3136) (succ_5‹› n_2967)),
  (eq_4‹??_29›
    nat_3
    ((function _3910 : nat_3 -> nat_3
      | x_3912 => (succ_5‹› x_3912)) ?_30)
    ((function _3913 : nat_3 -> nat_3
      | x_3915 => (succ_5‹› x_3915)) ?_31)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( (succ_5‹› m_3136), (succ_5‹› ?_30))
simpl_tm ~expand:false( m_3136, ?_30)
simpl_tm ~expand:false( (succ_5‹› n_2967), (succ_5‹› ?_31))
simpl_tm ~expand:false( n_2967, ?_31)
simpl_tm ~expand:false( m_3136, ?_30)
simpl_tm ~expand:false( n_2967, ?_31)
simpl_tm ~expand:false( (eq_4‹??_28› nat_3 m_3136 n_2967),
  (eq_4‹??_23› nat_3 m_3136 n_2967))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( m_3136, m_3136)
simpl_tm ~expand:false( n_2967, n_2967)
infer_tm(Type‹??_21›)
check_tm(nat_3, Type‹??_21›)
infer_tm(nat_3)
assert_equal1( Type‹??_21›, U)
simpl_tm ~expand:false( Type‹??_21›, U)
infer_tm(Type‹??_42›)
check_tm(nat_3, Type‹??_42›)
infer_tm(nat_3)
assert_equal1( Type‹??_42›, U)
simpl_tm ~expand:false( Type‹??_42›, U)
infer_tm(Type‹??_43›)
check_tm(U, Type‹??_43›)
infer_tm(U)
assert_equal1( Type‹??_43›, U)
simpl_tm ~expand:false( Type‹??_43›, U)
infer_tm(Type‹??_23›)
check_tm(nat_3, Type‹??_23›)
infer_tm(nat_3)
assert_equal1( Type‹??_23›, U)
simpl_tm ~expand:false( Type‹??_23›, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3)
check_tm(zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(function _3988 : nat_3 -> U
         | x_3990 => (eq_4‹U› nat_3 x_3990 zero_4), nat_3 -> U)
infer_tm(function _3992 : nat_3 -> U
         | x_3994 => (eq_4‹U› nat_3 x_3994 zero_4))
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_cls {|
  prblm {| ; {|  ::: [x_3998] =>? (eq_4‹U› nat_3 #x_3998 zero_4) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_4000, x_3998 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_3998 zero_4)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_4000, x_3998 : nat_3) )
simpl_pprbm ~expand:false( #x_4000, #x_3998)
simpl_pprbm ~expand:false( #x_4000, #x_3998)
case_coverage_ok((eq_4‹U› nat_3 x_4000 zero_4), U)
check_tm((eq_4‹U› nat_3 x_4000 zero_4), U)
infer_tm((eq_4‹U› nat_3 x_4000 zero_4))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(x_4000, nat_3)
infer_tm(x_4000)
assert_equal1( nat_3, nat_3)
check_tm(zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( nat_3 -> U, nat_3 -> U)
infer_tm(Type‹s_2752›)
check_tm(A_2912, Type‹s_2752›)
infer_tm(A_2912)
assert_equal1( Type‹s_2752›, Type‹s_2752›)
infer_tm(nat_3)
check_tm(n_2967, nat_3)
infer_tm(n_2967)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_44›)
check_tm((exists_5‹U,U,L›
           nat_3
           function _4068 : nat_3 -> U
           | x_4070 => (eq_4‹U› nat_3 x_4070 n_2967)), Type‹??_44›)
infer_tm((exists_5‹U,U,L›
           nat_3
           function _4071 : nat_3 -> U
           | x_4073 => (eq_4‹U› nat_3 x_4073 n_2967)))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(function _4074 : nat_3 -> U
         | x_4076 => (eq_4‹U› nat_3 x_4076 n_2967), nat_3 -> U)
infer_tm(function _4078 : nat_3 -> U
         | x_4080 => (eq_4‹U› nat_3 x_4080 n_2967))
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_cls {|
  prblm {| ; {|  ::: [x_4084] =>? (eq_4‹U› nat_3 #x_4084 n_2967) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_4086, x_4084 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4084 n_2967)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_4086, x_4084 : nat_3) )
simpl_pprbm ~expand:false( #x_4086, #x_4084)
simpl_pprbm ~expand:false( #x_4086, #x_4084)
case_coverage_ok((eq_4‹U› nat_3 x_4086 n_2967), U)
check_tm((eq_4‹U› nat_3 x_4086 n_2967), U)
infer_tm((eq_4‹U› nat_3 x_4086 n_2967))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(x_4086, nat_3)
infer_tm(x_4086)
assert_equal1( nat_3, nat_3)
check_tm(n_2967, nat_3)
infer_tm(n_2967)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( nat_3 -> U, nat_3 -> U)
assert_equal1( Type‹??_44›, L)
simpl_tm ~expand:false( Type‹??_44›, L)
infer_tm(Type‹??_45›)
check_tm((exists_5‹U,U,L›
           nat_3
           function _4127 : nat_3 -> U
           | x_4129 => (eq_4‹U› nat_3 x_4129 (succ_5‹› n_2967))), Type‹??_45›)
infer_tm((exists_5‹U,U,L›
           nat_3
           function _4130 : nat_3 -> U
           | x_4132 => (eq_4‹U› nat_3 x_4132 (succ_5‹› n_2967))))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(function _4133 : nat_3 -> U
         | x_4135 => (eq_4‹U› nat_3 x_4135 (succ_5‹› n_2967)), 
nat_3 -> U)
infer_tm(function _4137 : nat_3 -> U
         | x_4139 => (eq_4‹U› nat_3 x_4139 (succ_5‹› n_2967)))
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_cls {|
  prblm {| ;
    {|  ::: [x_4143] =>? (eq_4‹U› nat_3 #x_4143 (succ_5‹› n_2967)) |}
  |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_4145, x_4143 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4143 (succ_5‹› n_2967))
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_4145, x_4143 : nat_3) )
simpl_pprbm ~expand:false( #x_4145, #x_4143)
simpl_pprbm ~expand:false( #x_4145, #x_4143)
case_coverage_ok((eq_4‹U› nat_3 x_4145 (succ_5‹› n_2967)), U)
check_tm((eq_4‹U› nat_3 x_4145 (succ_5‹› n_2967)), U)
infer_tm((eq_4‹U› nat_3 x_4145 (succ_5‹› n_2967)))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(x_4145, nat_3)
infer_tm(x_4145)
assert_equal1( nat_3, nat_3)
check_tm((succ_5‹› n_2967), nat_3)
infer_tm((succ_5‹› n_2967))
check_tm(n_2967, nat_3)
infer_tm(n_2967)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( nat_3 -> U, nat_3 -> U)
assert_equal1( Type‹??_45›, L)
simpl_tm ~expand:false( Type‹??_45›, L)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3)
check_tm(m_3136, nat_3)
infer_tm(m_3136)
assert_equal1( nat_3, nat_3)
infer_tm(nat_3)
check_tm(n_2967, nat_3)
infer_tm(n_2967)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_46›)
check_tm(nat_3, Type‹??_46›)
infer_tm(nat_3)
assert_equal1( Type‹??_46›, U)
simpl_tm ~expand:false( Type‹??_46›, U)
infer_tm(Type‹??_47›)
check_tm(nat_3, Type‹??_47›)
infer_tm(nat_3)
assert_equal1( Type‹??_47›, U)
simpl_tm ~expand:false( Type‹??_47›, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(function _4342 : nat_3 -> U
         | x_4344 => (eq_4‹U› nat_3 x_4344 (succ_5‹› n_2967)), 
nat_3 -> U)
infer_tm(function _4346 : nat_3 -> U
         | x_4348 => (eq_4‹U› nat_3 x_4348 (succ_5‹› n_2967)))
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_cls {|
  prblm {| ;
    {|  ::: [x_4352] =>? (eq_4‹U› nat_3 #x_4352 (succ_5‹› n_2967)) |}
  |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_4354, x_4352 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4352 (succ_5‹› n_2967))
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_4354, x_4352 : nat_3) )
simpl_pprbm ~expand:false( #x_4354, #x_4352)
simpl_pprbm ~expand:false( #x_4354, #x_4352)
case_coverage_ok((eq_4‹U› nat_3 x_4354 (succ_5‹› n_2967)), U)
check_tm((eq_4‹U› nat_3 x_4354 (succ_5‹› n_2967)), U)
infer_tm((eq_4‹U› nat_3 x_4354 (succ_5‹› n_2967)))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(x_4354, nat_3)
infer_tm(x_4354)
assert_equal1( nat_3, nat_3)
check_tm((succ_5‹› n_2967), nat_3)
infer_tm((succ_5‹› n_2967))
check_tm(n_2967, nat_3)
infer_tm(n_2967)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( nat_3 -> U, nat_3 -> U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_40›)
check_tm(nat_3, Type‹??_40›)
infer_tm(nat_3)
assert_equal1( Type‹??_40›, U)
simpl_tm ~expand:false( Type‹??_40›, U)
infer_tm(Type‹??_41›)
check_tm(U, Type‹??_41›)
infer_tm(U)
assert_equal1( Type‹??_41›, U)
simpl_tm ~expand:false( Type‹??_41›, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
----------------------------------

smeta_meta {|
  ??_1 <= s_4461
  ??_2 <= s_4464
  ??_3 <= r_4466
  ??_4 <= t_4468
  ??_5 <= s_4471
  ??_6 <= s_4472
  ??_7 <= s_4473
  ??_8 <= s_4474
  ??_9 <= s_4475
  ??_10 <= s_4476
  ??_11 <= s_4478
  ??_12 <= ??_11
  ??_13 <= s_4482
  ??_14 <= ??_13
  ??_15 <= s_4487
  ??_16 <= r_4489
  ??_17 <= ??_16
  ??_18 <= ??_15
  ??_19 <= ??_16
  ??_20 <= s_4500
  ??_21 <= U
  ??_22 <= U
  ??_23 <= U
  ??_24 <= ??_23
  ??_25 <= ??_21
  ??_26 <= U
  ??_27 <= L
  ??_28 <= ??_23
  ??_29 <= ??_23
  ??_30 <= U
  ??_31 <= ??_21
  ??_32 <= U
  ??_33 <= L
  ??_34 <= s_4514
  ??_35 <= ??_21
  ??_36 <= U
  ??_37 <= ??_23
  ??_38 <= U
  ??_39 <= s_4519
  ??_40 <= U
  ??_41 <= U
  ??_42 <= U
  ??_43 <= U
  ??_44 <= L
  ??_45 <= L
  ??_46 <= U
  ??_47 <= U
  
|}
imeta_meta {|
  ?_1 <= A_4530
  ?_2 <= A_4533
  ?_3 <= A_4539
  ?_4 <= A_4545
  ?_5 <= A_4551
  ?_6 <= A_4557
  ?_7 <= A_4565
  ?_8 <= B_4573
  ?_9 <= B_4581
  ?_10 <= ((f_4587) n_4589)
  ?_11 <= A_4600
  ?_12 <= B_4608
  ?_13 <= n_4612
  ?_14 <= nat_3
  ?_15 <= A_4625
  ?_16 <= nat_3
  ?_17 <= ?_16
  ?_18 <= Type‹??_22›
  ?_19 <= nat_3
  ?_20 <= nat_3
  ?_21 <= zero_4
  ?_22 <= nat_3
  ?_23 <= function _4661 : nat_3 -> U
          | x_4663 => (eq_4‹??_23› nat_3 x_4663 zero_4)
  ?_24 <= A_4669
  ?_25 <= n_4674
  ?_26 <= (exists_5‹??_21,U,L›
            nat_3
            function _4685 : nat_3 -> U
            | x_4687 => (eq_4‹??_23› nat_3 x_4687 ?_25))
  ?_27 <= (exists_5‹??_21,U,L›
            nat_3
            function _4696 : nat_3 -> U
            | x_4698 => (eq_4‹??_23› nat_3 x_4698 (succ_5‹› n_4692)))
  ?_28 <= nat_3
  ?_29 <= nat_3
  ?_30 <= m_4719
  ?_31 <= n_4731
  ?_32 <= ?_28
  ?_33 <= ?_29
  ?_34 <= nat_3
  ?_35 <= function _4772 : nat_3 -> U
          | x_4774 => (eq_4‹??_23› nat_3 x_4774 (succ_5‹› n_4768))
  ?_36 <= nat_3
  ?_37 <= ?_36
  ?_38 <= Type‹??_36›
  ?_39 <= nat_3
  ?_40 <= Type‹??_38›
  ?_41 <= Type‹??_39›
  ?_42 <= Type‹??_40›
  ?_43 <= Type‹??_41›
  ?_44 <= Type‹??_42›
  ?_45 <= Type‹??_43›
  ?_46 <= Type‹??_44›
  ?_47 <= Type‹??_45›
  ?_48 <= Type‹??_46›
  ?_49 <= Type‹??_47›
  
|}
#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_5325 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_5326› (A_5327 : Type‹s_5326›) (m_5328 : A_5327):
  A_5327 -> U
where
| refl_6 : (eq_4‹s_5326› A_5327 m_5328 m_5328)

#[program]
inductive exists_5‹s_5330,r_5331,t_5332› (A_5333 : Type‹s_5330›) (B_5334 : 
A_5333 -> Type‹r_5331›): Type‹t_5332› where
| ex_7
    (m_5336 : A_5333) {pf_5337 : ((B_5334) m_5336)}
    : (exists_5‹s_5330,r_5331,t_5332› A_5333 B_5334)

#[program]
inductive sing_6‹s_5338› (A_5339 : Type‹s_5338›):
  A_5339 -> Type‹s_5338›
where
| just_8 (m_5341 : A_5339) : (sing_6‹s_5338› A_5339 m_5341)

#[program]
inductive list_7‹s_5342› (A_5343 : Type‹s_5342›): U where
| nil_9 : (list_7‹s_5342› A_5343)
| cons_10
    (hd_5344 : A_5343) (tl_5345 : (list_7‹s_5342› A_5343))
    : (list_7‹s_5342› A_5343)

#[program]
inductive vec_8‹s_5346› (A_5347 : Type‹s_5346›): nat_3 -> U where
| vnil_11 : (vec_8‹s_5346› A_5347 zero_4)
| vcons_12
    {n_5349 : nat_3} (hd_5350 : A_5347)
    (tl_5351 : (vec_8‹s_5346› A_5347 n_5349))
    : (vec_8‹s_5346› A_5347 (succ_5‹› n_5349))

#[program]
def rwl_1‹s_5352,r_5353› :
  ∀ {A_5354 : Type‹s_5352›} ->
    ∀ {m_5355 : A_5354} ->
      ∀ {n_5356 : A_5354} ->
        ∀ {B_5357 : A_5354 -> Type‹r_5353›} ->
          (eq_4‹s_5352› A_5354 m_5355 n_5356) ->
            ((B_5357) m_5355) -> ((B_5357) n_5356)
:=
  function rwl_5361 :
    ∀ {A_5362 : Type‹s_5352›} ->
      ∀ {m_5363 : A_5362} ->
        ∀ {n_5364 : A_5362} ->
          ∀ {B_5365 : A_5362 -> Type‹r_5353›} ->
            (eq_4‹s_5352› A_5362 m_5363 n_5364) ->
              ((B_5365) m_5363) -> ((B_5365) n_5364)
  | A_5369 m_5370 n_5371 B_5372 refl_6 x_5373 => x_5373

#[program]
def rwr_2‹s_5374,r_5375› :
  ∀ {A_5376 : Type‹s_5374›} ->
    ∀ {m_5377 : A_5376} ->
      ∀ {n_5378 : A_5376} ->
        ∀ {B_5379 : A_5376 -> Type‹r_5375›} ->
          (eq_4‹s_5374› A_5376 m_5377 n_5378) ->
            ((B_5379) n_5378) -> ((B_5379) m_5377)
:=
  function rwr_5383 :
    ∀ {A_5384 : Type‹s_5374›} ->
      ∀ {m_5385 : A_5384} ->
        ∀ {n_5386 : A_5384} ->
          ∀ {B_5387 : A_5384 -> Type‹r_5375›} ->
            (eq_4‹s_5374› A_5384 m_5385 n_5386) ->
              ((B_5387) n_5386) -> ((B_5387) m_5385)
  | A_5391 m_5392 n_5393 B_5394 refl_6 x_5395 => x_5395

#[logical]
def congr_3‹s_5396,r_5397,t_5398› :
  ∀ (A_5399 : Type‹s_5396›) ->
    ∀ (B_5400 : Type‹r_5397›) ->
      ∀ (m_5401 : A_5399) ->
        ∀ (n_5402 : A_5399) ->
          ∀ (f_5403 : forall‹t_5398›(__5404 : A_5399), B_5400) ->
            (eq_4‹s_5396› A_5399 m_5401 n_5402) ->
              (eq_4‹r_5397› B_5400 ((f_5403) m_5401) ((f_5403) n_5402))
:=
  function congr_5406 :
    ∀ (A_5407 : Type‹s_5396›) ->
      ∀ (B_5408 : Type‹r_5397›) ->
        ∀ (m_5409 : A_5407) ->
          ∀ (n_5410 : A_5407) ->
            ∀ (f_5411 : forall‹t_5398›(__5412 : A_5407), B_5408) ->
              (eq_4‹s_5396› A_5407 m_5409 n_5410) ->
                (eq_4‹r_5397› B_5408 ((f_5411) m_5409) ((f_5411) n_5410))
  | A_5414 B_5415 m_5416 n_5417 f_5418 refl_6 => refl_6‹r_5397›

#[program]
def hd_vec_4‹s_5419› :
  ∀ {A_5420 : Type‹s_5419›} ->
    ∀ {n_5421 : nat_3} ->
      (vec_8‹s_5419› A_5420 (succ_5‹› n_5421)) -> A_5420
:=
  function hd_vec_5423 :
    ∀ {A_5424 : Type‹s_5419›} ->
      ∀ {n_5425 : nat_3} ->
        (vec_8‹s_5419› A_5424 (succ_5‹› n_5425)) -> A_5424
  | A_5427 n_5428 vnil_11 =>
  | A_5429 n_5430 (vcons_12 _5431 hd_5432 _5433) => hd_5432

#[program]
def hd_vec2_5‹s_5434› :
  ∀ {A_5435 : Type‹s_5434›} ->
    ∀ {n_5436 : nat_3} ->
      (vec_8‹s_5434› A_5435 (succ_5‹› n_5436)) -> A_5435
:=
  function hd_vec2_5438 :
    ∀ {A_5439 : Type‹s_5434›} ->
      ∀ {n_5440 : nat_3} ->
        (vec_8‹s_5434› A_5439 (succ_5‹› n_5440)) -> A_5439
  | A_5442 n_5443 xs_5444 =>
    match n_5443, xs_5444 in
      ∀ {n0_5445 : nat_3} -o
        (vec_8‹s_5434› A_5442 (succ_5‹› n0_5445)) -o A_5442
    with
    | _5447, vnil_11 =>
    | _5448, (vcons_12 _5449 hd_5450 _5451) => hd_5450

#[program]
def vlength_6‹s_5452› :
  ∀ {A_5453 : Type‹s_5452›} ->
    ∀ {n_5454 : nat_3} ->
      (vec_8‹s_5452› A_5453 n_5454) ->
        (exists_5‹U,U,L›
          nat_3
          function _5456 : nat_3 -> U
          | x_5458 => (eq_4‹U› nat_3 x_5458 n_5454))
:=
  function vlength_5459 :
    ∀ {A_5460 : Type‹s_5452›} ->
      ∀ {n_5461 : nat_3} ->
        (vec_8‹s_5452› A_5460 n_5461) ->
          (exists_5‹U,U,L›
            nat_3
            function _5463 : nat_3 -> U
            | x_5465 => (eq_4‹U› nat_3 x_5465 n_5461))
  | A_5466 n_5467 vnil_11 => (ex_7‹U,U,L› zero_4 refl_6‹U›)
  | A_5468 n_5469 (vcons_12 _5470 _5471 tl_5472) =>
    match ((vlength_5459) A_5468 _5470 tl_5472) in
      (exists_5‹U,U,L›
        nat_3
        function _5474 : nat_3 -> U
        | x_5476 => (eq_4‹U› nat_3 x_5476 _5470)) -o
        (exists_5‹U,U,L›
          nat_3
          function _5477 : nat_3 -> U
          | x_5479 => (eq_4‹U› nat_3 x_5479 (succ_5‹› _5470)))
    with
    | (ex_7 n_5480 pf_5481) =>
      (ex_7‹U,U,L›
        (succ_5‹› n_5480)
        ((congr_3‹U,U,U›)
          nat_3 nat_3 n_5480 _5470
          function _5482 : nat_3 -> nat_3
          | x_5484 => (succ_5‹› x_5484) pf_5481))

-----------------------------------------

