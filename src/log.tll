[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase ((TBase (Type U)), [(DMul ("tt", (TBase (Id "unit"))))]))))};
  Inductive {name = "bool"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("true", (TBase (Id "bool"))));
             (DMul ("false", (TBase (Id "bool"))))]))
       ))};
  Inductive {name = "nat"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("zero", (TBase (Id "nat"))));
             (DMul ("succ",
                (TBind (R, (Id "nat"), (Binder ("pred", (TBase (Id "nat"))))
                   ))
                ))
             ]))
       ))};
  Inductive {name = "eq"; relv = N;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Id "A"),
                (Binder ("m",
                   (PBase
                      ((TBind (R, (Id "A"), (Binder ("_", (TBase (Type U))))
                          )),
                       [(DMul ("refl",
                           (TBase
                              (App [(Id "eq"); (Id "_"); (Id "m"); (Id "m")]))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "exists"; relv = R;
    body =
    (Binder (["s"; "r"; "t"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Pi (R, U, (Id "A"), (Binder ("_", (Type (SId "r")))))),
                (Binder ("B",
                   (PBase
                      ((TBase (Type (SId "t"))),
                       [(DMul ("ex",
                           (TBind (R, (Id "A"),
                              (Binder ("m",
                                 (TBind (N, (App [(Id "B"); (Id "m")]),
                                    (Binder ("pf",
                                       (TBase
                                          (App
                                             [(Id "exists"); (Id "A");
                                               (Id "B")]))
                                       ))
                                    ))
                                 ))
                              ))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "sing"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id "A"),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DMul ("just",
                     (TBind (R, (Id "A"),
                        (Binder ("m",
                           (TBase (App [(Id "sing"); (Id "_"); (Id "m")]))))
                        ))
                     ))
                   ]))
             ))
          ))
       ))};
  Inductive {name = "list"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBase (Type U)),
                 [(DMul ("nil", (TBase (App [(Id "list"); (Id "A")]))));
                   (DMul ("cons",
                      (TBind (R, (Id "A"),
                         (Binder ("hd",
                            (TBind (R, (App [(Id "list"); (Id "A")]),
                               (Binder ("tl",
                                  (TBase (App [(Id "list"); (Id "A")]))))
                               ))
                            ))
                         ))
                      ))
                   ]))
             ))
          ))
       ))};
  Inductive {name = "vec"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id "nat"), (Binder ("_", (TBase (Type U)))))),
                 [(DMul ("vnil",
                     (TBase (App [(Id "vec"); (Id "A"); (Id "zero")]))));
                   (DMul ("vcons",
                      (TBind (N, (Id "nat"),
                         (Binder ("n",
                            (TBind (R, (Id "A"),
                               (Binder ("hd",
                                  (TBind (R,
                                     (App
                                        [(Inst ("vec", [(SId "s")]));
                                          (Id "A"); (Id "n")]),
                                     (Binder ("tl",
                                        (TBase
                                           (App
                                              [(Id "vec"); (Id "A");
                                                (App [(Id "succ"); (Id "n")])
                                                ]))
                                        ))
                                     ))
                                  ))
                               ))
                            ))
                         ))
                      ))
                   ]))
             ))
          ))
       ))};
  Definition {name = "rwl"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "A"),
                    (Binder ("m",
                       (Pi (N, U, (Id "A"),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id "A"),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (R, U,
                                      (App
                                         [(Id "eq"); (Id "_"); (Id "m");
                                           (Id "n")]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App [(Id "B"); (Id "m")]),
                                            (Binder ("_",
                                               (App [(Id "B"); (Id "n")])))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwl"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id "x")))]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "A"),
                 (Binder ("m",
                    (Pi (N, U, (Id "A"),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id "A"),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (R, U,
                                   (App
                                      [(Id "eq"); (Id "_"); (Id "m");
                                        (Id "n")]),
                                   (Binder ("_",
                                      (Pi (R, U, (App [(Id "B"); (Id "m")]),
                                         (Binder ("_",
                                            (App [(Id "B"); (Id "n")])))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "rwr"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "A"),
                    (Binder ("m",
                       (Pi (N, U, (Id "A"),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id "A"),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (R, U,
                                      (App
                                         [(Id "eq"); (Id "_"); (Id "m");
                                           (Id "n")]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App [(Id "B"); (Id "n")]),
                                            (Binder ("_",
                                               (App [(Id "B"); (Id "m")])))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwr"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id "x")))]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "A"),
                 (Binder ("m",
                    (Pi (N, U, (Id "A"),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id "A"),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (R, U,
                                   (App
                                      [(Id "eq"); (Id "_"); (Id "m");
                                        (Id "n")]),
                                   (Binder ("_",
                                      (Pi (R, U, (App [(Id "B"); (Id "n")]),
                                         (Binder ("_",
                                            (App [(Id "B"); (Id "m")])))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "congr"; relv = N;
    body =
    (Binder (["s"; "r"; "t"],
       ((Fun (
           (Pi (R, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (R, U, (Type (SId "r")),
                    (Binder ("B",
                       (Pi (R, U, (Id "A"),
                          (Binder ("m",
                             (Pi (R, U, (Id "A"),
                                (Binder ("n",
                                   (Pi (R, U,
                                      (Pi (R, (SId "t"), (Id "A"),
                                         (Binder ("_", (Id "B"))))),
                                      (Binder ("f",
                                         (Pi (R, U,
                                            (App
                                               [(Id "eq"); (Id "_");
                                                 (Id "m"); (Id "n")]),
                                            (Binder ("_",
                                               (App
                                                  [(Id "eq"); (Id "_");
                                                    (App [(Id "f"); (Id "m")]);
                                                    (App [(Id "f"); (Id "n")])
                                                    ])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "congr"),
              [([(PId "A"); (PId "B"); (PId "m"); (PId "n"); (PId "f");
                  (PId "refl")],
                (Some (Id "refl")))]
              ))
           )),
        (Pi (R, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (R, U, (Type (SId "r")),
                 (Binder ("B",
                    (Pi (R, U, (Id "A"),
                       (Binder ("m",
                          (Pi (R, U, (Id "A"),
                             (Binder ("n",
                                (Pi (R, U,
                                   (Pi (R, (SId "t"), (Id "A"),
                                      (Binder ("_", (Id "B"))))),
                                   (Binder ("f",
                                      (Pi (R, U,
                                         (App
                                            [(Id "eq"); (Id "_"); (Id "m");
                                              (Id "n")]),
                                         (Binder ("_",
                                            (App
                                               [(Id "eq"); (Id "_");
                                                 (App [(Id "f"); (Id "m")]);
                                                 (App [(Id "f"); (Id "n")])])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "hd_vec"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "nat"),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")])); (Id "A");
                               (App [(Id "succ"); (Id "n")])]),
                          (Binder ("_", (Id "A")))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec"),
              [([(PId "A"); (PId "n"); (PId "vnil")], None);
                ([(PId "A"); (PId "n");
                   (PMul ("vcons", [(PId "_"); (PId "hd"); (PId "_")]))],
                 (Some (Id "hd")))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "nat"),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")])); (Id "A");
                            (App [(Id "succ"); (Id "n")])]),
                       (Binder ("_", (Id "A")))))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "hd_vec2"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "nat"),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")])); (Id "A");
                               (App [(Id "succ"); (Id "n")])]),
                          (Binder ("xs", (Id "A")))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec2"),
              [([(PId "A"); (PId "n"); (PId "xs")],
                (Some (Match (
                         [(N, (Id "_"), (Some ("n0", (Id "_"))));
                           (R, (Id "xs"),
                            (Some ("_",
                                   (App
                                      [(Inst ("vec", [(SId "s")])); (
                                        Id "A");
                                        (App [(Id "succ"); (Id "n0")])]))))
                           ],
                         None,
                         [([(PId "_"); (PId "vnil")], None);
                           ([(PId "_");
                              (PMul ("vcons",
                                 [(PId "_"); (PId "hd"); (PId "_")]))
                              ],
                            (Some (Id "hd")))
                           ]
                         ))))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "nat"),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")])); (Id "A");
                            (App [(Id "succ"); (Id "n")])]),
                       (Binder ("xs", (Id "A")))))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "vlength"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "nat"),
                    (Binder ("n",
                       (Pi (R, U, (App [(Id "vec"); (Id "A"); (Id "n")]),
                          (Binder ("_",
                             (App
                                [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                                  (Id "_");
                                  (Fun (
                                     (Pi (R, U, (Id "_"),
                                        (Binder ("x", (Id "_"))))),
                                     (Binder (None,
                                        [([(PId "x")],
                                          (Some (App
                                                   [(Id "eq"); (Id "_");
                                                     (Id "x"); (Id "n")])))
                                          ]
                                        ))
                                     ))
                                  ])
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "vlength"),
              [([(PId "A"); (PId "n"); (PId "vnil")],
                (Some (App [(Id "ex"); (Id "zero"); (Id "refl")])));
                ([(PId "A"); (PId "n");
                   (PMul ("vcons", [(PId "_"); (PId "_"); (PId "tl")]))],
                 (Some (Match (
                          [(R,
                            (App
                               [(Id "vlength"); (Id "_"); (Id "_"); (
                                 Id "tl")]),
                            None)],
                          None,
                          [([(PMul ("ex", [(PId "n"); (PId "pf")]))],
                            (Some (App
                                     [(Id "ex");
                                       (App [(Id "succ"); (Id "n")]);
                                       (App
                                          [(Id "congr"); (Id "_"); (Id "_");
                                            (Id "_"); (Id "_");
                                            (Fun (
                                               (Pi (R, U, (Id "_"),
                                                  (Binder ("x", (Id "_"))))),
                                               (Binder (None,
                                                  [([(PId "x")],
                                                    (Some (App
                                                             [(Id "succ");
                                                               (Id "x")])))
                                                    ]
                                                  ))
                                               ));
                                            (Id "pf")])
                                       ])))
                            ]
                          ))))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "nat"),
                 (Binder ("n",
                    (Pi (R, U, (App [(Id "vec"); (Id "A"); (Id "n")]),
                       (Binder ("_",
                          (App
                             [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                               (Id "_");
                               (Fun (
                                  (Pi (R, U, (Id "_"),
                                     (Binder ("x", (Id "_"))))),
                                  (Binder (None,
                                     [([(PId "x")],
                                       (Some (App
                                                [(Id "eq"); (Id "_");
                                                  (Id "x"); (Id "n")])))
                                       ]
                                     ))
                                  ))
                               ])
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_173 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_174› (A_175 : Type‹s_174›) (m_176 : A_175):
  A_175 -> U
where
| refl_6 : (eq_4‹??_1› ?_1 m_176 m_176)

#[program]
inductive exists_5‹s_178,r_179,t_180› (A_181 : Type‹s_178›) (B_182 : 
A_181 -> Type‹r_179›): Type‹t_180› where
| ex_7
    (m_184 : A_181) {pf_185 : ((B_182) m_184)}
    : (exists_5‹??_2,??_3,??_4› A_181 B_182)

#[program]
inductive sing_6‹s_186› (A_187 : Type‹s_186›):
  A_187 -> Type‹s_186›
where
| just_8 (m_189 : A_187) : (sing_6‹??_5› ?_2 m_189)

#[program]
inductive list_7‹s_190› (A_191 : Type‹s_190›): U where
| nil_9 : (list_7‹??_6› A_191)
| cons_10
    (hd_192 : A_191) (tl_193 : (list_7‹??_7› A_191))
    : (list_7‹??_8› A_191)

#[program]
inductive vec_8‹s_194› (A_195 : Type‹s_194›): nat_3 -> U where
| vnil_11 : (vec_8‹??_9› A_195 zero_4)
| vcons_12
    {n_197 : nat_3} (hd_198 : A_195)
    (tl_199 : (vec_8‹s_194› A_195 n_197))
    : (vec_8‹??_10› A_195 (succ_5‹› n_197))

#[program]
def rwl_1‹s_200,r_201› :
  ∀ {A_202 : Type‹s_200›} ->
    ∀ {m_203 : A_202} ->
      ∀ {n_204 : A_202} ->
        ∀ {B_205 : A_202 -> Type‹r_201›} ->
          (eq_4‹??_12› ?_4 m_203 n_204) ->
            ((B_205) m_203) -> ((B_205) n_204)
:=
  function rwl_209 :
    ∀ {A_210 : Type‹s_200›} ->
      ∀ {m_211 : A_210} ->
        ∀ {n_212 : A_210} ->
          ∀ {B_213 : A_210 -> Type‹r_201›} ->
            (eq_4‹??_11› ?_3 m_211 n_212) ->
              ((B_213) m_211) -> ((B_213) n_212)
  | A_217 m_218 n_219 B_220 refl_6 x_221 => x_221

#[program]
def rwr_2‹s_222,r_223› :
  ∀ {A_224 : Type‹s_222›} ->
    ∀ {m_225 : A_224} ->
      ∀ {n_226 : A_224} ->
        ∀ {B_227 : A_224 -> Type‹r_223›} ->
          (eq_4‹??_14› ?_6 m_225 n_226) ->
            ((B_227) n_226) -> ((B_227) m_225)
:=
  function rwr_231 :
    ∀ {A_232 : Type‹s_222›} ->
      ∀ {m_233 : A_232} ->
        ∀ {n_234 : A_232} ->
          ∀ {B_235 : A_232 -> Type‹r_223›} ->
            (eq_4‹??_13› ?_5 m_233 n_234) ->
              ((B_235) n_234) -> ((B_235) m_233)
  | A_239 m_240 n_241 B_242 refl_6 x_243 => x_243

#[logical]
def congr_3‹s_244,r_245,t_246› :
  ∀ (A_247 : Type‹s_244›) ->
    ∀ (B_248 : Type‹r_245›) ->
      ∀ (m_249 : A_247) ->
        ∀ (n_250 : A_247) ->
          ∀ (f_251 : forall‹t_246›(__252 : A_247), B_248) ->
            ∀ (__253 : (eq_4‹??_18› ?_11 m_249 n_250)) ->
              (eq_4‹??_19› ?_12 ((f_251) m_249) ((f_251) n_250))
:=
  function congr_254 :
    ∀ (A_255 : Type‹s_244›) ->
      ∀ (B_256 : Type‹r_245›) ->
        ∀ (m_257 : A_255) ->
          ∀ (n_258 : A_255) ->
            ∀ (f_259 : forall‹t_246›(__260 : A_255), B_256) ->
              ∀ (__261 : (eq_4‹??_15› ?_7 m_257 n_258)) ->
                (eq_4‹??_16› ?_8 ((f_259) m_257) ((f_259) n_258))
  | A_262 B_263 m_264 n_265 f_266 refl_6 => refl_6‹??_17›

#[program]
def hd_vec_4‹s_267› :
  ∀ {A_268 : Type‹s_267›} ->
    ∀ {n_269 : nat_3} ->
      (vec_8‹s_267› A_268 (succ_5‹› n_269)) -> A_268
:=
  function hd_vec_271 :
    ∀ {A_272 : Type‹s_267›} ->
      ∀ {n_273 : nat_3} ->
        (vec_8‹s_267› A_272 (succ_5‹› n_273)) -> A_272
  | A_275 n_276 vnil_11 =>
  | A_277 n_278 (vcons_12 _279 hd_280 _281) => hd_280

#[program]
def hd_vec2_5‹s_282› :
  ∀ {A_283 : Type‹s_282›} ->
    ∀ {n_284 : nat_3} ->
      (vec_8‹s_282› A_283 (succ_5‹› n_284)) -> A_283
:=
  function hd_vec2_286 :
    ∀ {A_287 : Type‹s_282›} ->
      ∀ {n_288 : nat_3} ->
        (vec_8‹s_282› A_287 (succ_5‹› n_288)) -> A_287
  | A_290 n_291 xs_292 =>
    match ?_13, xs_292 in
      ∀ {n0_293 : ?_14} -o
        ∀ (__294 : (vec_8‹s_282› A_290 (succ_5‹› n0_293))) -o ?_15
    with
    | _295, vnil_11 =>
    | _296, (vcons_12 _297 hd_298 _299) => hd_298

#[program]
def vlength_6‹s_300› :
  ∀ {A_301 : Type‹s_300›} ->
    ∀ {n_302 : nat_3} ->
      ∀ (__303 : (vec_8‹??_34› A_301 n_302)) ->
        (exists_5‹??_35,??_36,L›
          ?_36
          function _304 : ∀ (x_305 : ?_37) -> ?_38
          | x_306 => (eq_4‹??_37› ?_39 x_306 n_302))
:=
  function vlength_307 :
    ∀ {A_308 : Type‹s_300›} ->
      ∀ {n_309 : nat_3} ->
        ∀ (__310 : (vec_8‹??_20› A_308 n_309)) ->
          (exists_5‹??_21,??_22,L›
            ?_16
            function _311 : ∀ (x_312 : ?_17) -> ?_18
            | x_313 => (eq_4‹??_23› ?_19 x_313 n_309))
  | A_314 n_315 vnil_11 =>
    (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
  | A_316 n_317 (vcons_12 _318 _319 tl_320) =>
    match ((vlength_307) ?_24 ?_25 tl_320) in ∀ (_321 : ?_26) -o ?_27 with
    | (ex_7 n_322 pf_323) =>
      (ex_7‹??_31,??_32,??_33›
        (succ_5‹› n_322)
        ((congr_3‹??_28,??_29,??_30›)
          ?_28 ?_29 ?_30 ?_31
          function _324 : ∀ (x_325 : ?_32) -> ?_33
          | x_326 => (succ_5‹› x_326) pf_323))

-----------------------------------------

inductive-------------------------
infer_tm(unit_1)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(bool_2)
infer_tm(bool_2)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(nat_3)
infer_tm(nat_3)
infer_tm(nat_3)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_329›)
infer_tm(A_330)
infer_tm(A_330)
infer_tm(Type‹s_333›)
infer_tm(A_334)
assert_equal1( A_334, ?_1)
assert_equal1( m_335, m_335)
infer_tm((eq_4‹??_1› ?_1 m_335 m_335))
check_tm(?_1, Type‹??_1›)
check_tm(m_335, ?_1)
infer_tm(m_335)
assert_equal1( ?_1, A_334)
check_tm(m_335, ?_1)
infer_tm(m_335)
assert_equal1( ?_1, A_334)
simpl_tm ~expand:false( ?_1, A_334)
simpl_tm ~expand:false( A_334, A_334)
simpl_tm ~expand:false( A_334, A_334)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_336
    
  |}
  imeta_meta {|
    ?_1 <= A_339
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_333›)
check_tm(A_334, Type‹s_333›)
infer_tm(A_334)
assert_equal1( Type‹s_333›, Type‹s_333›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_351›)
infer_tm(A_354 -> Type‹r_352›)
infer_tm(A_354)
infer_tm(Type‹r_352›)
infer_tm(Type‹s_358›)
infer_tm(A_361 -> Type‹r_359›)
infer_tm(A_361)
infer_tm(Type‹r_359›)
infer_tm(A_361)
infer_tm(((B_362) m_365))
infer_tm(B_362)
check_tm(m_365, A_361)
infer_tm(m_365)
assert_equal1( A_361, A_361)
assert_equal1( A_361, A_361)
assert_equal1( B_362, B_362)
infer_tm((exists_5‹??_2,??_3,??_4› A_361 B_362))
check_tm(A_361, Type‹??_2›)
infer_tm(A_361)
assert_equal1( Type‹??_2›, Type‹s_358›)
check_tm(B_362, A_361 -> Type‹??_3›)
infer_tm(B_362)
assert_equal1( A_361 -> Type‹??_3›, A_361 -> Type‹r_359›)
simpl_tm ~expand:false( A_361 -> Type‹??_3›, A_361 -> Type‹r_359›)
simpl_tm ~expand:false( A_361, A_361)
simpl_tm ~expand:false( Type‹??_3›, Type‹r_359›)
simpl_tm ~expand:false( Type‹??_2›, Type‹s_358›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_380
    ??_2 <= s_383
    ??_3 <= r_385
    ??_4 <= t_387
    
  |}
  imeta_meta {|
    ?_1 <= A_392
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_424›)
infer_tm(A_425)
infer_tm(Type‹s_427›)
infer_tm(A_428)
assert_equal1( A_428, ?_2)
infer_tm((sing_6‹??_5› ?_2 m_429))
check_tm(?_2, Type‹??_5›)
check_tm(m_429, ?_2)
infer_tm(m_429)
assert_equal1( ?_2, A_428)
simpl_tm ~expand:false( ?_2, A_428)
simpl_tm ~expand:false( A_428, A_428)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_430
    ??_2 <= s_433
    ??_3 <= r_435
    ??_4 <= t_437
    ??_5 <= s_440
    
  |}
  imeta_meta {|
    ?_1 <= A_443
    ?_2 <= A_446
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_427›)
check_tm(A_428, Type‹s_427›)
infer_tm(A_428)
assert_equal1( Type‹s_427›, Type‹s_427›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_459›)
infer_tm(Type‹s_461›)
assert_equal1( A_462, A_462)
infer_tm((list_7‹??_6› A_462))
check_tm(A_462, Type‹??_6›)
infer_tm(A_462)
assert_equal1( Type‹??_6›, Type‹s_461›)
simpl_tm ~expand:false( Type‹??_6›, Type‹s_461›)
infer_tm(Type‹s_463›)
infer_tm(A_464)
infer_tm((list_7‹??_7› A_464))
check_tm(A_464, Type‹??_7›)
infer_tm(A_464)
assert_equal1( Type‹??_7›, Type‹s_463›)
simpl_tm ~expand:false( Type‹??_7›, Type‹s_463›)
assert_equal1( A_464, A_464)
infer_tm((list_7‹??_8› A_464))
check_tm(A_464, Type‹??_8›)
infer_tm(A_464)
assert_equal1( Type‹??_8›, Type‹s_463›)
simpl_tm ~expand:false( Type‹??_8›, Type‹s_463›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_467
    ??_2 <= s_470
    ??_3 <= r_472
    ??_4 <= t_474
    ??_5 <= s_477
    ??_6 <= s_478
    ??_7 <= s_479
    ??_8 <= s_480
    
  |}
  imeta_meta {|
    ?_1 <= A_483
    ?_2 <= A_486
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_502›)
infer_tm(nat_3)
infer_tm(Type‹s_505›)
assert_equal1( A_506, A_506)
infer_tm((vec_8‹??_9› A_506 zero_4))
check_tm(A_506, Type‹??_9›)
infer_tm(A_506)
assert_equal1( Type‹??_9›, Type‹s_505›)
check_tm(zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_9›, Type‹s_505›)
infer_tm(Type‹s_507›)
infer_tm(nat_3)
infer_tm(A_508)
infer_tm((vec_8‹s_507› A_508 n_509))
check_tm(A_508, Type‹s_507›)
infer_tm(A_508)
assert_equal1( Type‹s_507›, Type‹s_507›)
check_tm(n_509, nat_3)
infer_tm(n_509)
assert_equal1( nat_3, nat_3)
assert_equal1( A_508, A_508)
infer_tm((vec_8‹??_10› A_508 (succ_5‹› n_509)))
check_tm(A_508, Type‹??_10›)
infer_tm(A_508)
assert_equal1( Type‹??_10›, Type‹s_507›)
check_tm((succ_5‹› n_509), nat_3)
infer_tm((succ_5‹› n_509))
check_tm(n_509, nat_3)
infer_tm(n_509)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_10›, Type‹s_507›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_512
    ??_2 <= s_515
    ??_3 <= r_517
    ??_4 <= t_519
    ??_5 <= s_522
    ??_6 <= s_523
    ??_7 <= s_524
    ??_8 <= s_525
    ??_9 <= s_526
    ??_10 <= s_527
    
  |}
  imeta_meta {|
    ?_1 <= A_530
    ?_2 <= A_533
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_557 : Type‹s_555›} ->
           ∀ {m_558 : A_557} ->
             ∀ {n_559 : A_557} ->
               ∀ {B_560 : A_557 -> Type‹r_556›} ->
                 (eq_4‹??_12› ?_4 m_558 n_559) ->
                   ((B_560) m_558) -> ((B_560) n_559))
infer_tm(Type‹s_555›)
infer_tm(∀ {m_565 : A_564} ->
           ∀ {n_566 : A_564} ->
             ∀ {B_567 : A_564 -> Type‹r_556›} ->
               (eq_4‹??_12› ?_4 m_565 n_566) ->
                 ((B_567) m_565) -> ((B_567) n_566))
infer_tm(A_564)
infer_tm(∀ {n_572 : A_564} ->
           ∀ {B_573 : A_564 -> Type‹r_556›} ->
             (eq_4‹??_12› ?_4 m_571 n_572) ->
               ((B_573) m_571) -> ((B_573) n_572))
infer_tm(A_564)
infer_tm(∀ {B_578 : A_564 -> Type‹r_556›} ->
           (eq_4‹??_12› ?_4 m_571 n_577) ->
             ((B_578) m_571) -> ((B_578) n_577))
infer_tm(A_564 -> Type‹r_556›)
infer_tm(A_564)
infer_tm(Type‹r_556›)
infer_tm((eq_4‹??_12› ?_4 m_571 n_577) ->
           ((B_582) m_571) -> ((B_582) n_577))
infer_tm((eq_4‹??_12› ?_4 m_571 n_577))
check_tm(?_4, Type‹??_12›)
check_tm(m_571, ?_4)
infer_tm(m_571)
assert_equal1( ?_4, A_564)
check_tm(n_577, ?_4)
infer_tm(n_577)
assert_equal1( ?_4, A_564)
simpl_tm ~expand:false( ?_4, A_564)
simpl_tm ~expand:false( A_564, A_564)
infer_tm(((B_582) m_571) -> ((B_582) n_577))
infer_tm(((B_582) m_571))
infer_tm(B_582)
check_tm(m_571, A_564)
infer_tm(m_571)
assert_equal1( A_564, A_564)
infer_tm(((B_582) n_577))
infer_tm(B_582)
check_tm(n_577, A_564)
infer_tm(n_577)
assert_equal1( A_564, A_564)
check_tm(function rwl_592 :
           ∀ {A_593 : Type‹s_555›} ->
             ∀ {m_594 : A_593} ->
               ∀ {n_595 : A_593} ->
                 ∀ {B_596 : A_593 -> Type‹r_556›} ->
                   (eq_4‹??_11› ?_3 m_594 n_595) ->
                     ((B_596) m_594) -> ((B_596) n_595)
         | A_600 m_601 n_602 B_603 refl_6 x_604 => x_604, ∀ {A_605 :
                                                            Type‹s_555›} ->
                                                            ∀ {m_606 :
                                                              A_605} ->
                                                              ∀ {n_607 :
                                                                A_605} ->
                                                                ∀ {B_608 :
                                                                  A_605 ->
                                                                    Type‹r_556›} ->
                                                                  (eq_4‹??_12›
                                                                    ?_4 m_606
                                                                    n_607) ->
                                                                    ((B_608)
                                                                    m_606) ->
                                                                    ((B_608)
                                                                    n_607))
infer_tm(∀ {A_613 : Type‹s_555›} ->
           ∀ {m_614 : A_613} ->
             ∀ {n_615 : A_613} ->
               ∀ {B_616 : A_613 -> Type‹r_556›} ->
                 (eq_4‹??_11› ?_3 m_614 n_615) ->
                   ((B_616) m_614) -> ((B_616) n_615))
infer_tm(Type‹s_555›)
infer_tm(∀ {m_621 : A_620} ->
           ∀ {n_622 : A_620} ->
             ∀ {B_623 : A_620 -> Type‹r_556›} ->
               (eq_4‹??_11› ?_3 m_621 n_622) ->
                 ((B_623) m_621) -> ((B_623) n_622))
infer_tm(A_620)
infer_tm(∀ {n_628 : A_620} ->
           ∀ {B_629 : A_620 -> Type‹r_556›} ->
             (eq_4‹??_11› ?_3 m_627 n_628) ->
               ((B_629) m_627) -> ((B_629) n_628))
infer_tm(A_620)
infer_tm(∀ {B_634 : A_620 -> Type‹r_556›} ->
           (eq_4‹??_11› ?_3 m_627 n_633) ->
             ((B_634) m_627) -> ((B_634) n_633))
infer_tm(A_620 -> Type‹r_556›)
infer_tm(A_620)
infer_tm(Type‹r_556›)
infer_tm((eq_4‹??_11› ?_3 m_627 n_633) ->
           ((B_638) m_627) -> ((B_638) n_633))
infer_tm((eq_4‹??_11› ?_3 m_627 n_633))
check_tm(?_3, Type‹??_11›)
check_tm(m_627, ?_3)
infer_tm(m_627)
assert_equal1( ?_3, A_620)
check_tm(n_633, ?_3)
infer_tm(n_633)
assert_equal1( ?_3, A_620)
simpl_tm ~expand:false( ?_3, A_620)
simpl_tm ~expand:false( A_620, A_620)
infer_tm(((B_638) m_627) -> ((B_638) n_633))
infer_tm(((B_638) m_627))
infer_tm(B_638)
check_tm(m_627, A_620)
infer_tm(m_627)
assert_equal1( A_620, A_620)
infer_tm(((B_638) n_633))
infer_tm(B_638)
check_tm(n_633, A_620)
infer_tm(n_633)
assert_equal1( A_620, A_620)
assert_equal1(
  ∀ {A_648 : Type‹s_555›} ->
    ∀ {m_649 : A_648} ->
      ∀ {n_650 : A_648} ->
        ∀ {B_651 : A_648 -> Type‹r_556›} ->
          (eq_4‹??_12› ?_4 m_649 n_650) ->
            ((B_651) m_649) -> ((B_651) n_650),
  ∀ {A_655 : Type‹s_555›} ->
    ∀ {m_656 : A_655} ->
      ∀ {n_657 : A_655} ->
        ∀ {B_658 : A_655 -> Type‹r_556›} ->
          (eq_4‹??_11› ?_3 m_656 n_657) ->
            ((B_658) m_656) -> ((B_658) n_657))
simpl_tm ~expand:false(
  ∀ {A_755 : Type‹s_555›} ->
    ∀ {m_756 : A_755} ->
      ∀ {n_757 : A_755} ->
        ∀ {B_758 : A_755 -> Type‹r_556›} ->
          (eq_4‹??_12› A_755 m_756 n_757) ->
            ((B_758) m_756) -> ((B_758) n_757),
  ∀ {A_762 : Type‹s_555›} ->
    ∀ {m_763 : A_762} ->
      ∀ {n_764 : A_762} ->
        ∀ {B_765 : A_762 -> Type‹r_556›} ->
          (eq_4‹??_11› A_762 m_763 n_764) ->
            ((B_765) m_763) -> ((B_765) n_764))
simpl_tm ~expand:false( Type‹s_555›, Type‹s_555›)
simpl_tm ~expand:false(
  ∀ {m_770 : A_769} ->
    ∀ {n_771 : A_769} ->
      ∀ {B_772 : A_769 -> Type‹r_556›} ->
        (eq_4‹??_12› A_769 m_770 n_771) ->
          ((B_772) m_770) -> ((B_772) n_771),
  ∀ {m_776 : A_769} ->
    ∀ {n_777 : A_769} ->
      ∀ {B_778 : A_769 -> Type‹r_556›} ->
        (eq_4‹??_11› A_769 m_776 n_777) ->
          ((B_778) m_776) -> ((B_778) n_777))
simpl_tm ~expand:false( A_769, A_769)
simpl_tm ~expand:false(
  ∀ {n_783 : A_769} ->
    ∀ {B_784 : A_769 -> Type‹r_556›} ->
      (eq_4‹??_12› A_769 m_782 n_783) ->
        ((B_784) m_782) -> ((B_784) n_783),
  ∀ {n_788 : A_769} ->
    ∀ {B_789 : A_769 -> Type‹r_556›} ->
      (eq_4‹??_11› A_769 m_782 n_788) ->
        ((B_789) m_782) -> ((B_789) n_788))
simpl_tm ~expand:false( A_769, A_769)
simpl_tm ~expand:false(
  ∀ {B_794 : A_769 -> Type‹r_556›} ->
    (eq_4‹??_12› A_769 m_782 n_793) -> ((B_794) m_782) -> ((B_794) n_793),
  ∀ {B_798 : A_769 -> Type‹r_556›} ->
    (eq_4‹??_11› A_769 m_782 n_793) -> ((B_798) m_782) -> ((B_798) n_793))
simpl_tm ~expand:false( A_769 -> Type‹r_556›, A_769 -> Type‹r_556›)
simpl_tm ~expand:false( A_769, A_769)
simpl_tm ~expand:false( Type‹r_556›, Type‹r_556›)
simpl_tm ~expand:false(
  (eq_4‹??_12› A_769 m_782 n_793) -> ((B_802) m_782) -> ((B_802) n_793),
  (eq_4‹??_11› A_769 m_782 n_793) -> ((B_802) m_782) -> ((B_802) n_793))
simpl_tm ~expand:false( (eq_4‹??_12› A_769 m_782 n_793),
  (eq_4‹??_11› A_769 m_782 n_793))
simpl_tm ~expand:false( A_769, A_769)
simpl_tm ~expand:false( m_782, m_782)
simpl_tm ~expand:false( n_793, n_793)
simpl_tm ~expand:false( ((B_802) m_782) -> ((B_802) n_793),
  ((B_802) m_782) -> ((B_802) n_793))
simpl_tm ~expand:false( ((B_802) m_782), ((B_802) m_782))
simpl_tm ~expand:false( B_802, B_802)
simpl_tm ~expand:false( m_782, m_782)
simpl_tm ~expand:false( ((B_802) n_793), ((B_802) n_793))
simpl_tm ~expand:false( B_802, B_802)
simpl_tm ~expand:false( n_793, n_793)
check_cls {|
  prblm {| ;
    {|  ::: [A_700, m_701, n_702, B_703, refl_6, x_704] =>? #x_704 |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_11› #A_839 #m_840 #n_841),
      (eq_4‹??_11› #A_839 #m_840 #m_840));
    {| eq_pat?( #A_839, A_700 : Type‹s_555›)
       eq_pat?( #m_840, m_701 : #A_839)
       eq_pat?( #n_841, n_702 : #A_839)
       eq_pat?( #B_842, B_703 : #A_839 -> Type‹r_556›)
       eq_pat?( #__844, x_704 : ((#B_842) #m_840)) ::: [] =>? #x_704
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_11› #A_839 #m_840 #n_841),
    (eq_4‹??_11› #A_839 #m_840 #m_840))
  eq_pat?( #A_839, A_700 : Type‹s_555›)
  eq_pat?( #m_840, m_701 : #A_839)
  eq_pat?( #n_841, n_702 : #A_839)
  eq_pat?( #B_842, B_703 : #A_839 -> Type‹r_556›)
  eq_pat?( #__844, x_704 : ((#B_842) #m_840))
)
simpl_pprbm ~expand:false( (eq_4‹??_11› #A_839 #m_840 #n_841),
  (eq_4‹??_11› #A_839 #m_840 #m_840))
simpl_pprbm ~expand:false( #A_839, #A_839)
simpl_pprbm ~expand:false( #m_840, #m_840)
simpl_pprbm ~expand:false( #n_841, #m_840)
simpl_pprbm ~expand:false( #A_839, #A_700)
simpl_pprbm ~expand:false( #m_840, #m_701)
simpl_pprbm ~expand:false( #n_841, #n_702)
simpl_pprbm ~expand:false( #B_842, #B_703)
simpl_pprbm ~expand:false( #__844, #x_704)
simpl_pprbm ~expand:false( #n_841, #m_840)
simpl_pprbm ~expand:false( #A_839, #A_700)
simpl_pprbm ~expand:false( #n_841, #m_701)
simpl_pprbm ~expand:false( #n_841, #n_702)
simpl_pprbm ~expand:false( #B_842, #B_703)
simpl_pprbm ~expand:false( #__844, #x_704)
case_coverage_ok(__844, ((B_842) n_841))
check_tm(__844, ((B_842) n_841))
infer_tm(__844)
assert_equal1( ((B_842) n_841), ((B_842) n_841))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_900
    ??_2 <= s_903
    ??_3 <= r_905
    ??_4 <= t_907
    ??_5 <= s_910
    ??_6 <= s_911
    ??_7 <= s_912
    ??_8 <= s_913
    ??_9 <= s_914
    ??_10 <= s_915
    ??_12 <= ??_11
    
  |}
  imeta_meta {|
    ?_1 <= A_920
    ?_2 <= A_923
    ?_3 <= A_929
    ?_4 <= A_935
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹??_11›)
check_tm(A_620, Type‹??_11›)
infer_tm(A_620)
assert_equal1( Type‹??_11›, Type‹s_555›)
simpl_tm ~expand:false( Type‹??_11›, Type‹s_555›)
infer_tm(Type‹s_555›)
check_tm(A_564, Type‹s_555›)
infer_tm(A_564)
assert_equal1( Type‹s_555›, Type‹s_555›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_1012 : Type‹s_1010›} ->
           ∀ {m_1013 : A_1012} ->
             ∀ {n_1014 : A_1012} ->
               ∀ {B_1015 : A_1012 -> Type‹r_1011›} ->
                 (eq_4‹??_14› ?_6 m_1013 n_1014) ->
                   ((B_1015) n_1014) -> ((B_1015) m_1013))
infer_tm(Type‹s_1010›)
infer_tm(∀ {m_1020 : A_1019} ->
           ∀ {n_1021 : A_1019} ->
             ∀ {B_1022 : A_1019 -> Type‹r_1011›} ->
               (eq_4‹??_14› ?_6 m_1020 n_1021) ->
                 ((B_1022) n_1021) -> ((B_1022) m_1020))
infer_tm(A_1019)
infer_tm(∀ {n_1027 : A_1019} ->
           ∀ {B_1028 : A_1019 -> Type‹r_1011›} ->
             (eq_4‹??_14› ?_6 m_1026 n_1027) ->
               ((B_1028) n_1027) -> ((B_1028) m_1026))
infer_tm(A_1019)
infer_tm(∀ {B_1033 : A_1019 -> Type‹r_1011›} ->
           (eq_4‹??_14› ?_6 m_1026 n_1032) ->
             ((B_1033) n_1032) -> ((B_1033) m_1026))
infer_tm(A_1019 -> Type‹r_1011›)
infer_tm(A_1019)
infer_tm(Type‹r_1011›)
infer_tm((eq_4‹??_14› ?_6 m_1026 n_1032) ->
           ((B_1037) n_1032) -> ((B_1037) m_1026))
infer_tm((eq_4‹??_14› ?_6 m_1026 n_1032))
check_tm(?_6, Type‹??_14›)
check_tm(m_1026, ?_6)
infer_tm(m_1026)
assert_equal1( ?_6, A_1019)
check_tm(n_1032, ?_6)
infer_tm(n_1032)
assert_equal1( ?_6, A_1019)
simpl_tm ~expand:false( ?_6, A_1019)
simpl_tm ~expand:false( A_1019, A_1019)
infer_tm(((B_1037) n_1032) -> ((B_1037) m_1026))
infer_tm(((B_1037) n_1032))
infer_tm(B_1037)
check_tm(n_1032, A_1019)
infer_tm(n_1032)
assert_equal1( A_1019, A_1019)
infer_tm(((B_1037) m_1026))
infer_tm(B_1037)
check_tm(m_1026, A_1019)
infer_tm(m_1026)
assert_equal1( A_1019, A_1019)
check_tm(function rwr_1047 :
           ∀ {A_1048 : Type‹s_1010›} ->
             ∀ {m_1049 : A_1048} ->
               ∀ {n_1050 : A_1048} ->
                 ∀ {B_1051 : A_1048 -> Type‹r_1011›} ->
                   (eq_4‹??_13› ?_5 m_1049 n_1050) ->
                     ((B_1051) n_1050) -> ((B_1051) m_1049)
         | A_1055 m_1056 n_1057 B_1058 refl_6 x_1059 => x_1059, ∀ {A_1060 :
                                                                  Type‹s_1010›} ->
                                                                  ∀ {m_1061 :
                                                                    A_1060} ->
                                                                    ∀ {n_1062 :
                                                                    A_1060} ->
                                                                    ∀ {B_1063 :
                                                                    A_1060 ->
                                                                    Type‹r_1011›} ->
                                                                    (eq_4‹??_14›
                                                                    ?_6
                                                                    m_1061
                                                                    n_1062) ->
                                                                    ((B_1063)
                                                                    n_1062) ->
                                                                    ((B_1063)
                                                                    m_1061))
infer_tm(∀ {A_1068 : Type‹s_1010›} ->
           ∀ {m_1069 : A_1068} ->
             ∀ {n_1070 : A_1068} ->
               ∀ {B_1071 : A_1068 -> Type‹r_1011›} ->
                 (eq_4‹??_13› ?_5 m_1069 n_1070) ->
                   ((B_1071) n_1070) -> ((B_1071) m_1069))
infer_tm(Type‹s_1010›)
infer_tm(∀ {m_1076 : A_1075} ->
           ∀ {n_1077 : A_1075} ->
             ∀ {B_1078 : A_1075 -> Type‹r_1011›} ->
               (eq_4‹??_13› ?_5 m_1076 n_1077) ->
                 ((B_1078) n_1077) -> ((B_1078) m_1076))
infer_tm(A_1075)
infer_tm(∀ {n_1083 : A_1075} ->
           ∀ {B_1084 : A_1075 -> Type‹r_1011›} ->
             (eq_4‹??_13› ?_5 m_1082 n_1083) ->
               ((B_1084) n_1083) -> ((B_1084) m_1082))
infer_tm(A_1075)
infer_tm(∀ {B_1089 : A_1075 -> Type‹r_1011›} ->
           (eq_4‹??_13› ?_5 m_1082 n_1088) ->
             ((B_1089) n_1088) -> ((B_1089) m_1082))
infer_tm(A_1075 -> Type‹r_1011›)
infer_tm(A_1075)
infer_tm(Type‹r_1011›)
infer_tm((eq_4‹??_13› ?_5 m_1082 n_1088) ->
           ((B_1093) n_1088) -> ((B_1093) m_1082))
infer_tm((eq_4‹??_13› ?_5 m_1082 n_1088))
check_tm(?_5, Type‹??_13›)
check_tm(m_1082, ?_5)
infer_tm(m_1082)
assert_equal1( ?_5, A_1075)
check_tm(n_1088, ?_5)
infer_tm(n_1088)
assert_equal1( ?_5, A_1075)
simpl_tm ~expand:false( ?_5, A_1075)
simpl_tm ~expand:false( A_1075, A_1075)
infer_tm(((B_1093) n_1088) -> ((B_1093) m_1082))
infer_tm(((B_1093) n_1088))
infer_tm(B_1093)
check_tm(n_1088, A_1075)
infer_tm(n_1088)
assert_equal1( A_1075, A_1075)
infer_tm(((B_1093) m_1082))
infer_tm(B_1093)
check_tm(m_1082, A_1075)
infer_tm(m_1082)
assert_equal1( A_1075, A_1075)
assert_equal1(
  ∀ {A_1103 : Type‹s_1010›} ->
    ∀ {m_1104 : A_1103} ->
      ∀ {n_1105 : A_1103} ->
        ∀ {B_1106 : A_1103 -> Type‹r_1011›} ->
          (eq_4‹??_14› ?_6 m_1104 n_1105) ->
            ((B_1106) n_1105) -> ((B_1106) m_1104),
  ∀ {A_1110 : Type‹s_1010›} ->
    ∀ {m_1111 : A_1110} ->
      ∀ {n_1112 : A_1110} ->
        ∀ {B_1113 : A_1110 -> Type‹r_1011›} ->
          (eq_4‹??_13› ?_5 m_1111 n_1112) ->
            ((B_1113) n_1112) -> ((B_1113) m_1111))
simpl_tm ~expand:false(
  ∀ {A_1210 : Type‹s_1010›} ->
    ∀ {m_1211 : A_1210} ->
      ∀ {n_1212 : A_1210} ->
        ∀ {B_1213 : A_1210 -> Type‹r_1011›} ->
          (eq_4‹??_14› A_1210 m_1211 n_1212) ->
            ((B_1213) n_1212) -> ((B_1213) m_1211),
  ∀ {A_1217 : Type‹s_1010›} ->
    ∀ {m_1218 : A_1217} ->
      ∀ {n_1219 : A_1217} ->
        ∀ {B_1220 : A_1217 -> Type‹r_1011›} ->
          (eq_4‹??_13› A_1217 m_1218 n_1219) ->
            ((B_1220) n_1219) -> ((B_1220) m_1218))
simpl_tm ~expand:false( Type‹s_1010›, Type‹s_1010›)
simpl_tm ~expand:false(
  ∀ {m_1225 : A_1224} ->
    ∀ {n_1226 : A_1224} ->
      ∀ {B_1227 : A_1224 -> Type‹r_1011›} ->
        (eq_4‹??_14› A_1224 m_1225 n_1226) ->
          ((B_1227) n_1226) -> ((B_1227) m_1225),
  ∀ {m_1231 : A_1224} ->
    ∀ {n_1232 : A_1224} ->
      ∀ {B_1233 : A_1224 -> Type‹r_1011›} ->
        (eq_4‹??_13› A_1224 m_1231 n_1232) ->
          ((B_1233) n_1232) -> ((B_1233) m_1231))
simpl_tm ~expand:false( A_1224, A_1224)
simpl_tm ~expand:false(
  ∀ {n_1238 : A_1224} ->
    ∀ {B_1239 : A_1224 -> Type‹r_1011›} ->
      (eq_4‹??_14› A_1224 m_1237 n_1238) ->
        ((B_1239) n_1238) -> ((B_1239) m_1237),
  ∀ {n_1243 : A_1224} ->
    ∀ {B_1244 : A_1224 -> Type‹r_1011›} ->
      (eq_4‹??_13› A_1224 m_1237 n_1243) ->
        ((B_1244) n_1243) -> ((B_1244) m_1237))
simpl_tm ~expand:false( A_1224, A_1224)
simpl_tm ~expand:false(
  ∀ {B_1249 : A_1224 -> Type‹r_1011›} ->
    (eq_4‹??_14› A_1224 m_1237 n_1248) ->
      ((B_1249) n_1248) -> ((B_1249) m_1237),
  ∀ {B_1253 : A_1224 -> Type‹r_1011›} ->
    (eq_4‹??_13› A_1224 m_1237 n_1248) ->
      ((B_1253) n_1248) -> ((B_1253) m_1237))
simpl_tm ~expand:false( A_1224 -> Type‹r_1011›,
  A_1224 -> Type‹r_1011›)
simpl_tm ~expand:false( A_1224, A_1224)
simpl_tm ~expand:false( Type‹r_1011›, Type‹r_1011›)
simpl_tm ~expand:false(
  (eq_4‹??_14› A_1224 m_1237 n_1248) ->
    ((B_1257) n_1248) -> ((B_1257) m_1237),
  (eq_4‹??_13› A_1224 m_1237 n_1248) ->
    ((B_1257) n_1248) -> ((B_1257) m_1237))
simpl_tm ~expand:false( (eq_4‹??_14› A_1224 m_1237 n_1248),
  (eq_4‹??_13› A_1224 m_1237 n_1248))
simpl_tm ~expand:false( A_1224, A_1224)
simpl_tm ~expand:false( m_1237, m_1237)
simpl_tm ~expand:false( n_1248, n_1248)
simpl_tm ~expand:false( ((B_1257) n_1248) -> ((B_1257) m_1237),
  ((B_1257) n_1248) -> ((B_1257) m_1237))
simpl_tm ~expand:false( ((B_1257) n_1248), ((B_1257) n_1248))
simpl_tm ~expand:false( B_1257, B_1257)
simpl_tm ~expand:false( n_1248, n_1248)
simpl_tm ~expand:false( ((B_1257) m_1237), ((B_1257) m_1237))
simpl_tm ~expand:false( B_1257, B_1257)
simpl_tm ~expand:false( m_1237, m_1237)
check_cls {|
  prblm {| ;
    {|  ::: [A_1155, m_1156, n_1157, B_1158, refl_6, x_1159] =>? #x_1159 |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_13› #A_1294 #m_1295 #n_1296),
      (eq_4‹??_13› #A_1294 #m_1295 #m_1295));
    {| eq_pat?( #A_1294, A_1155 : Type‹s_1010›)
       eq_pat?( #m_1295, m_1156 : #A_1294)
       eq_pat?( #n_1296, n_1157 : #A_1294)
       eq_pat?( #B_1297, B_1158 : #A_1294 -> Type‹r_1011›)
       eq_pat?( #__1299, x_1159 : ((#B_1297) #n_1296)) ::: [] =>? #x_1159
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_13› #A_1294 #m_1295 #n_1296),
    (eq_4‹??_13› #A_1294 #m_1295 #m_1295))
  eq_pat?( #A_1294, A_1155 : Type‹s_1010›)
  eq_pat?( #m_1295, m_1156 : #A_1294)
  eq_pat?( #n_1296, n_1157 : #A_1294)
  eq_pat?( #B_1297, B_1158 : #A_1294 -> Type‹r_1011›)
  eq_pat?( #__1299, x_1159 : ((#B_1297) #n_1296))
)
simpl_pprbm ~expand:false( (eq_4‹??_13› #A_1294 #m_1295 #n_1296),
  (eq_4‹??_13› #A_1294 #m_1295 #m_1295))
simpl_pprbm ~expand:false( #A_1294, #A_1294)
simpl_pprbm ~expand:false( #m_1295, #m_1295)
simpl_pprbm ~expand:false( #n_1296, #m_1295)
simpl_pprbm ~expand:false( #A_1294, #A_1155)
simpl_pprbm ~expand:false( #m_1295, #m_1156)
simpl_pprbm ~expand:false( #n_1296, #n_1157)
simpl_pprbm ~expand:false( #B_1297, #B_1158)
simpl_pprbm ~expand:false( #__1299, #x_1159)
simpl_pprbm ~expand:false( #n_1296, #m_1295)
simpl_pprbm ~expand:false( #A_1294, #A_1155)
simpl_pprbm ~expand:false( #n_1296, #m_1156)
simpl_pprbm ~expand:false( #n_1296, #n_1157)
simpl_pprbm ~expand:false( #B_1297, #B_1158)
simpl_pprbm ~expand:false( #__1299, #x_1159)
case_coverage_ok(__1299, ((B_1297) n_1296))
check_tm(__1299, ((B_1297) n_1296))
infer_tm(__1299)
assert_equal1( ((B_1297) n_1296), ((B_1297) n_1296))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1355
    ??_2 <= s_1358
    ??_3 <= r_1360
    ??_4 <= t_1362
    ??_5 <= s_1365
    ??_6 <= s_1366
    ??_7 <= s_1367
    ??_8 <= s_1368
    ??_9 <= s_1369
    ??_10 <= s_1370
    ??_11 <= s_1372
    ??_12 <= ??_11
    ??_14 <= ??_13
    
  |}
  imeta_meta {|
    ?_1 <= A_1379
    ?_2 <= A_1382
    ?_3 <= A_1388
    ?_4 <= A_1394
    ?_5 <= A_1400
    ?_6 <= A_1406
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹??_13›)
check_tm(A_1075, Type‹??_13›)
infer_tm(A_1075)
assert_equal1( Type‹??_13›, Type‹s_1010›)
simpl_tm ~expand:false( Type‹??_13›, Type‹s_1010›)
infer_tm(Type‹s_1010›)
check_tm(A_1019, Type‹s_1010›)
infer_tm(A_1019)
assert_equal1( Type‹s_1010›, Type‹s_1010›)
----------------------------------

definition-------------------------
infer_tm(∀ (A_1484 : Type‹s_1481›) ->
           ∀ (B_1485 : Type‹r_1482›) ->
             ∀ (m_1486 : A_1484) ->
               ∀ (n_1487 : A_1484) ->
                 ∀ (f_1488 :
                   forall‹t_1483›(__1489 : A_1484), B_1485) ->
                   ∀ (__1490 : (eq_4‹??_18› ?_11 m_1486 n_1487)) ->
                     (eq_4‹??_19›
                       ?_12 ((f_1488) m_1486) ((f_1488) n_1487)))
infer_tm(Type‹s_1481›)
infer_tm(∀ (B_1492 : Type‹r_1482›) ->
           ∀ (m_1493 : A_1491) ->
             ∀ (n_1494 : A_1491) ->
               ∀ (f_1495 : forall‹t_1483›(__1496 : A_1491), B_1492) ->
                 ∀ (__1497 : (eq_4‹??_18› ?_11 m_1493 n_1494)) ->
                   (eq_4‹??_19› ?_12 ((f_1495) m_1493) ((f_1495) n_1494)))
infer_tm(Type‹r_1482›)
infer_tm(∀ (m_1499 : A_1491) ->
           ∀ (n_1500 : A_1491) ->
             ∀ (f_1501 : forall‹t_1483›(__1502 : A_1491), B_1498) ->
               ∀ (__1503 : (eq_4‹??_18› ?_11 m_1499 n_1500)) ->
                 (eq_4‹??_19› ?_12 ((f_1501) m_1499) ((f_1501) n_1500)))
infer_tm(A_1491)
infer_tm(∀ (n_1505 : A_1491) ->
           ∀ (f_1506 : forall‹t_1483›(__1507 : A_1491), B_1498) ->
             ∀ (__1508 : (eq_4‹??_18› ?_11 m_1504 n_1505)) ->
               (eq_4‹??_19› ?_12 ((f_1506) m_1504) ((f_1506) n_1505)))
infer_tm(A_1491)
infer_tm(∀ (f_1510 : forall‹t_1483›(__1511 : A_1491), B_1498) ->
           ∀ (__1512 : (eq_4‹??_18› ?_11 m_1504 n_1509)) ->
             (eq_4‹??_19› ?_12 ((f_1510) m_1504) ((f_1510) n_1509)))
infer_tm(forall‹t_1483›(__1514 : A_1491), B_1498)
infer_tm(A_1491)
infer_tm(B_1498)
infer_tm(∀ (__1516 : (eq_4‹??_18› ?_11 m_1504 n_1509)) ->
           (eq_4‹??_19› ?_12 ((f_1513) m_1504) ((f_1513) n_1509)))
infer_tm((eq_4‹??_18› ?_11 m_1504 n_1509))
check_tm(?_11, Type‹??_18›)
check_tm(m_1504, ?_11)
infer_tm(m_1504)
assert_equal1( ?_11, A_1491)
check_tm(n_1509, ?_11)
infer_tm(n_1509)
assert_equal1( ?_11, A_1491)
simpl_tm ~expand:false( ?_11, A_1491)
simpl_tm ~expand:false( A_1491, A_1491)
infer_tm((eq_4‹??_19› ?_12 ((f_1513) m_1504) ((f_1513) n_1509)))
check_tm(?_12, Type‹??_19›)
check_tm(((f_1513) m_1504), ?_12)
infer_tm(((f_1513) m_1504))
infer_tm(f_1513)
check_tm(m_1504, A_1491)
infer_tm(m_1504)
assert_equal1( A_1491, A_1491)
assert_equal1( ?_12, B_1498)
check_tm(((f_1513) n_1509), ?_12)
infer_tm(((f_1513) n_1509))
infer_tm(f_1513)
simpl_tm ~expand:false( ?_12, B_1498)
check_tm(n_1509, A_1491)
infer_tm(n_1509)
assert_equal1( A_1491, A_1491)
assert_equal1( ?_12, B_1498)
simpl_tm ~expand:false( B_1498, B_1498)
check_tm(function congr_1520 :
           ∀ (A_1521 : Type‹s_1481›) ->
             ∀ (B_1522 : Type‹r_1482›) ->
               ∀ (m_1523 : A_1521) ->
                 ∀ (n_1524 : A_1521) ->
                   ∀ (f_1525 :
                     forall‹t_1483›(__1526 : A_1521), B_1522) ->
                     ∀ (__1527 : (eq_4‹??_15› ?_7 m_1523 n_1524)) ->
                       (eq_4‹??_16›
                         ?_8 ((f_1525) m_1523) ((f_1525) n_1524))
         | A_1528 B_1529 m_1530 n_1531 f_1532 refl_6 => refl_6‹??_17›, 
∀ (A_1533 : Type‹s_1481›) ->
  ∀ (B_1534 : Type‹r_1482›) ->
    ∀ (m_1535 : A_1533) ->
      ∀ (n_1536 : A_1533) ->
        ∀ (f_1537 : forall‹t_1483›(__1538 : A_1533), B_1534) ->
          ∀ (__1539 : (eq_4‹??_18› ?_11 m_1535 n_1536)) ->
            (eq_4‹??_19› ?_12 ((f_1537) m_1535) ((f_1537) n_1536)))
infer_tm(∀ (A_1541 : Type‹s_1481›) ->
           ∀ (B_1542 : Type‹r_1482›) ->
             ∀ (m_1543 : A_1541) ->
               ∀ (n_1544 : A_1541) ->
                 ∀ (f_1545 :
                   forall‹t_1483›(__1546 : A_1541), B_1542) ->
                   ∀ (__1547 : (eq_4‹??_15› ?_7 m_1543 n_1544)) ->
                     (eq_4‹??_16›
                       ?_8 ((f_1545) m_1543) ((f_1545) n_1544)))
infer_tm(Type‹s_1481›)
infer_tm(∀ (B_1549 : Type‹r_1482›) ->
           ∀ (m_1550 : A_1548) ->
             ∀ (n_1551 : A_1548) ->
               ∀ (f_1552 : forall‹t_1483›(__1553 : A_1548), B_1549) ->
                 ∀ (__1554 : (eq_4‹??_15› ?_7 m_1550 n_1551)) ->
                   (eq_4‹??_16› ?_8 ((f_1552) m_1550) ((f_1552) n_1551)))
infer_tm(Type‹r_1482›)
infer_tm(∀ (m_1556 : A_1548) ->
           ∀ (n_1557 : A_1548) ->
             ∀ (f_1558 : forall‹t_1483›(__1559 : A_1548), B_1555) ->
               ∀ (__1560 : (eq_4‹??_15› ?_7 m_1556 n_1557)) ->
                 (eq_4‹??_16› ?_8 ((f_1558) m_1556) ((f_1558) n_1557)))
infer_tm(A_1548)
infer_tm(∀ (n_1562 : A_1548) ->
           ∀ (f_1563 : forall‹t_1483›(__1564 : A_1548), B_1555) ->
             ∀ (__1565 : (eq_4‹??_15› ?_7 m_1561 n_1562)) ->
               (eq_4‹??_16› ?_8 ((f_1563) m_1561) ((f_1563) n_1562)))
infer_tm(A_1548)
infer_tm(∀ (f_1567 : forall‹t_1483›(__1568 : A_1548), B_1555) ->
           ∀ (__1569 : (eq_4‹??_15› ?_7 m_1561 n_1566)) ->
             (eq_4‹??_16› ?_8 ((f_1567) m_1561) ((f_1567) n_1566)))
infer_tm(forall‹t_1483›(__1571 : A_1548), B_1555)
infer_tm(A_1548)
infer_tm(B_1555)
infer_tm(∀ (__1573 : (eq_4‹??_15› ?_7 m_1561 n_1566)) ->
           (eq_4‹??_16› ?_8 ((f_1570) m_1561) ((f_1570) n_1566)))
infer_tm((eq_4‹??_15› ?_7 m_1561 n_1566))
check_tm(?_7, Type‹??_15›)
check_tm(m_1561, ?_7)
infer_tm(m_1561)
assert_equal1( ?_7, A_1548)
check_tm(n_1566, ?_7)
infer_tm(n_1566)
assert_equal1( ?_7, A_1548)
simpl_tm ~expand:false( ?_7, A_1548)
simpl_tm ~expand:false( A_1548, A_1548)
infer_tm((eq_4‹??_16› ?_8 ((f_1570) m_1561) ((f_1570) n_1566)))
check_tm(?_8, Type‹??_16›)
check_tm(((f_1570) m_1561), ?_8)
infer_tm(((f_1570) m_1561))
infer_tm(f_1570)
check_tm(m_1561, A_1548)
infer_tm(m_1561)
assert_equal1( A_1548, A_1548)
assert_equal1( ?_8, B_1555)
check_tm(((f_1570) n_1566), ?_8)
infer_tm(((f_1570) n_1566))
infer_tm(f_1570)
simpl_tm ~expand:false( ?_8, B_1555)
check_tm(n_1566, A_1548)
infer_tm(n_1566)
assert_equal1( A_1548, A_1548)
assert_equal1( ?_8, B_1555)
simpl_tm ~expand:false( B_1555, B_1555)
assert_equal1(
  ∀ (A_1577 : Type‹s_1481›) ->
    ∀ (B_1578 : Type‹r_1482›) ->
      ∀ (m_1579 : A_1577) ->
        ∀ (n_1580 : A_1577) ->
          ∀ (f_1581 : forall‹t_1483›(__1582 : A_1577), B_1578) ->
            ∀ (__1583 : (eq_4‹??_18› ?_11 m_1579 n_1580)) ->
              (eq_4‹??_19› ?_12 ((f_1581) m_1579) ((f_1581) n_1580)),
  ∀ (A_1584 : Type‹s_1481›) ->
    ∀ (B_1585 : Type‹r_1482›) ->
      ∀ (m_1586 : A_1584) ->
        ∀ (n_1587 : A_1584) ->
          ∀ (f_1588 : forall‹t_1483›(__1589 : A_1584), B_1585) ->
            ∀ (__1590 : (eq_4‹??_15› ?_7 m_1586 n_1587)) ->
              (eq_4‹??_16› ?_8 ((f_1588) m_1586) ((f_1588) n_1587)))
simpl_tm ~expand:false(
  ∀ (A_1700 : Type‹s_1481›) ->
    ∀ (B_1701 : Type‹r_1482›) ->
      ∀ (m_1702 : A_1700) ->
        ∀ (n_1703 : A_1700) ->
          ∀ (f_1704 : forall‹t_1483›(__1705 : A_1700), B_1701) ->
            (eq_4‹??_18› A_1700 m_1702 n_1703) ->
              (eq_4‹??_19› B_1701 ((f_1704) m_1702) ((f_1704) n_1703)),
  ∀ (A_1707 : Type‹s_1481›) ->
    ∀ (B_1708 : Type‹r_1482›) ->
      ∀ (m_1709 : A_1707) ->
        ∀ (n_1710 : A_1707) ->
          ∀ (f_1711 : forall‹t_1483›(__1712 : A_1707), B_1708) ->
            (eq_4‹??_15› A_1707 m_1709 n_1710) ->
              (eq_4‹??_16› B_1708 ((f_1711) m_1709) ((f_1711) n_1710)))
simpl_tm ~expand:false( Type‹s_1481›, Type‹s_1481›)
simpl_tm ~expand:false(
  ∀ (B_1715 : Type‹r_1482›) ->
    ∀ (m_1716 : A_1714) ->
      ∀ (n_1717 : A_1714) ->
        ∀ (f_1718 : forall‹t_1483›(__1719 : A_1714), B_1715) ->
          (eq_4‹??_18› A_1714 m_1716 n_1717) ->
            (eq_4‹??_19› B_1715 ((f_1718) m_1716) ((f_1718) n_1717)),
  ∀ (B_1721 : Type‹r_1482›) ->
    ∀ (m_1722 : A_1714) ->
      ∀ (n_1723 : A_1714) ->
        ∀ (f_1724 : forall‹t_1483›(__1725 : A_1714), B_1721) ->
          (eq_4‹??_15› A_1714 m_1722 n_1723) ->
            (eq_4‹??_16› B_1721 ((f_1724) m_1722) ((f_1724) n_1723)))
simpl_tm ~expand:false( Type‹r_1482›, Type‹r_1482›)
simpl_tm ~expand:false(
  ∀ (m_1728 : A_1714) ->
    ∀ (n_1729 : A_1714) ->
      ∀ (f_1730 : forall‹t_1483›(__1731 : A_1714), B_1727) ->
        (eq_4‹??_18› A_1714 m_1728 n_1729) ->
          (eq_4‹??_19› B_1727 ((f_1730) m_1728) ((f_1730) n_1729)),
  ∀ (m_1733 : A_1714) ->
    ∀ (n_1734 : A_1714) ->
      ∀ (f_1735 : forall‹t_1483›(__1736 : A_1714), B_1727) ->
        (eq_4‹??_15› A_1714 m_1733 n_1734) ->
          (eq_4‹??_16› B_1727 ((f_1735) m_1733) ((f_1735) n_1734)))
simpl_tm ~expand:false( A_1714, A_1714)
simpl_tm ~expand:false(
  ∀ (n_1739 : A_1714) ->
    ∀ (f_1740 : forall‹t_1483›(__1741 : A_1714), B_1727) ->
      (eq_4‹??_18› A_1714 m_1738 n_1739) ->
        (eq_4‹??_19› B_1727 ((f_1740) m_1738) ((f_1740) n_1739)),
  ∀ (n_1743 : A_1714) ->
    ∀ (f_1744 : forall‹t_1483›(__1745 : A_1714), B_1727) ->
      (eq_4‹??_15› A_1714 m_1738 n_1743) ->
        (eq_4‹??_16› B_1727 ((f_1744) m_1738) ((f_1744) n_1743)))
simpl_tm ~expand:false( A_1714, A_1714)
simpl_tm ~expand:false(
  ∀ (f_1748 : forall‹t_1483›(__1749 : A_1714), B_1727) ->
    (eq_4‹??_18› A_1714 m_1738 n_1747) ->
      (eq_4‹??_19› B_1727 ((f_1748) m_1738) ((f_1748) n_1747)),
  ∀ (f_1751 : forall‹t_1483›(__1752 : A_1714), B_1727) ->
    (eq_4‹??_15› A_1714 m_1738 n_1747) ->
      (eq_4‹??_16› B_1727 ((f_1751) m_1738) ((f_1751) n_1747)))
simpl_tm ~expand:false( forall‹t_1483›(__1755 : A_1714), B_1727,
  forall‹t_1483›(__1756 : A_1714), B_1727)
simpl_tm ~expand:false( A_1714, A_1714)
simpl_tm ~expand:false( B_1727, B_1727)
simpl_tm ~expand:false(
  (eq_4‹??_18› A_1714 m_1738 n_1747) ->
    (eq_4‹??_19› B_1727 ((f_1754) m_1738) ((f_1754) n_1747)),
  (eq_4‹??_15› A_1714 m_1738 n_1747) ->
    (eq_4‹??_16› B_1727 ((f_1754) m_1738) ((f_1754) n_1747)))
simpl_tm ~expand:false( (eq_4‹??_18› A_1714 m_1738 n_1747),
  (eq_4‹??_15› A_1714 m_1738 n_1747))
simpl_tm ~expand:false( A_1714, A_1714)
simpl_tm ~expand:false( m_1738, m_1738)
simpl_tm ~expand:false( n_1747, n_1747)
simpl_tm ~expand:false(
  (eq_4‹??_19› B_1727 ((f_1754) m_1738) ((f_1754) n_1747)),
  (eq_4‹??_16› B_1727 ((f_1754) m_1738) ((f_1754) n_1747)))
simpl_tm ~expand:false( B_1727, B_1727)
simpl_tm ~expand:false( ((f_1754) m_1738), ((f_1754) m_1738))
simpl_tm ~expand:false( f_1754, f_1754)
simpl_tm ~expand:false( m_1738, m_1738)
simpl_tm ~expand:false( ((f_1754) n_1747), ((f_1754) n_1747))
simpl_tm ~expand:false( f_1754, f_1754)
simpl_tm ~expand:false( n_1747, n_1747)
check_cls {|
  prblm {| ;
    {|  ::: [A_1643, B_1644, m_1645, n_1646, f_1647, refl_6] =>?
         refl_6‹??_17›
    |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_15› #A_1787 #m_1789 #n_1790),
      (eq_4‹??_15› #A_1787 #m_1789 #m_1789));
    {| eq_pat?( #A_1787, A_1643 : Type‹s_1481›)
       eq_pat?( #B_1788, B_1644 : Type‹r_1482›)
       eq_pat?( #m_1789, m_1645 : #A_1787)
       eq_pat?( #n_1790, n_1646 : #A_1787)
       eq_pat?( #f_1791, f_1647 :
         forall‹t_1483›(__1821 : #A_1787), #B_1788) ::: [] =>?
         refl_6‹??_17›
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_15› #A_1787 #m_1789 #n_1790),
    (eq_4‹??_15› #A_1787 #m_1789 #m_1789))
  eq_pat?( #A_1787, A_1643 : Type‹s_1481›)
  eq_pat?( #B_1788, B_1644 : Type‹r_1482›)
  eq_pat?( #m_1789, m_1645 : #A_1787)
  eq_pat?( #n_1790, n_1646 : #A_1787)
  eq_pat?( #f_1791, f_1647 : forall‹t_1483›(__1822 : #A_1787), #B_1788)
)
simpl_pprbm ~expand:false( (eq_4‹??_15› #A_1787 #m_1789 #n_1790),
  (eq_4‹??_15› #A_1787 #m_1789 #m_1789))
simpl_pprbm ~expand:false( #A_1787, #A_1787)
simpl_pprbm ~expand:false( #m_1789, #m_1789)
simpl_pprbm ~expand:false( #n_1790, #m_1789)
simpl_pprbm ~expand:false( #A_1787, #A_1643)
simpl_pprbm ~expand:false( #B_1788, #B_1644)
simpl_pprbm ~expand:false( #m_1789, #m_1645)
simpl_pprbm ~expand:false( #n_1790, #n_1646)
simpl_pprbm ~expand:false( #f_1791, #f_1647)
simpl_pprbm ~expand:false( #n_1790, #m_1789)
simpl_pprbm ~expand:false( #A_1787, #A_1643)
simpl_pprbm ~expand:false( #B_1788, #B_1644)
simpl_pprbm ~expand:false( #n_1790, #m_1645)
simpl_pprbm ~expand:false( #n_1790, #n_1646)
simpl_pprbm ~expand:false( #f_1791, #f_1647)
case_coverage_ok(refl_6‹??_17›, (eq_4‹??_16›
                                      B_1788 ((f_1791) n_1790)
                                      ((f_1791) n_1790)))
check_tm(refl_6‹??_17›, (eq_4‹??_16›
                              B_1788 ((f_1791) n_1790) ((f_1791) n_1790)))
infer_tm(refl_6‹??_17›)
check_tm(?_9, Type‹??_17›)
check_tm(?_10, ?_9)
assert_equal1( (eq_4‹??_16› B_1788 ((f_1791) n_1790) ((f_1791) n_1790)),
  (eq_4‹??_17› ?_9 ?_10 ?_10))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1850
    ??_2 <= s_1853
    ??_3 <= r_1855
    ??_4 <= t_1857
    ??_5 <= s_1860
    ??_6 <= s_1861
    ??_7 <= s_1862
    ??_8 <= s_1863
    ??_9 <= s_1864
    ??_10 <= s_1865
    ??_11 <= s_1867
    ??_12 <= ??_11
    ??_13 <= s_1871
    ??_14 <= ??_13
    ??_18 <= ??_15
    ??_19 <= ??_16
    
  |}
  imeta_meta {|
    ?_1 <= A_1882
    ?_2 <= A_1885
    ?_3 <= A_1891
    ?_4 <= A_1897
    ?_5 <= A_1903
    ?_6 <= A_1909
    ?_7 <= A_1917
    ?_8 <= B_1925
    ?_11 <= A_1934
    ?_12 <= B_1942
    
  |}
  eqns {|
    equal_tm? ((eq_4‹??_16› B_1788 ((f_1791) n_1790) ((f_1791) n_1790)),
      (eq_4‹??_17› ?_9 ?_10 ?_10))
  |}
end_dump
simpl_tm ~expand:false(
  (eq_4‹??_16› B_1788 ((f_1791) n_1790) ((f_1791) n_1790)),
  (eq_4‹??_17› ?_9 ?_10 ?_10))
simpl_tm ~expand:false( B_1788, ?_9)
simpl_tm ~expand:false( ((f_1791) n_1790), ?_10)
simpl_tm ~expand:false( ((f_1791) n_1790), ?_10)
simpl_tm ~expand:false( B_1788, ?_9)
simpl_tm ~expand:false( ((f_1791) n_1790), ?_10)
simpl_tm ~expand:false( ((f_1791) n_1790), ((f_1791) n_1790))
simpl_tm ~expand:false( f_1791, f_1791)
simpl_tm ~expand:false( n_1790, n_1790)
infer_tm(Type‹??_15›)
check_tm(A_1548, Type‹??_15›)
infer_tm(A_1548)
assert_equal1( Type‹??_15›, Type‹s_1481›)
simpl_tm ~expand:false( Type‹??_15›, Type‹s_1481›)
infer_tm(Type‹??_16›)
check_tm(B_1555, Type‹??_16›)
infer_tm(B_1555)
assert_equal1( Type‹??_16›, Type‹r_1482›)
simpl_tm ~expand:false( Type‹??_16›, Type‹r_1482›)
infer_tm(Type‹r_1482›)
check_tm(B_1788, Type‹r_1482›)
infer_tm(B_1788)
assert_equal1( Type‹r_1482›, Type‹r_1482›)
infer_tm(B_1788)
check_tm(((f_1791) n_1790), B_1788)
infer_tm(((f_1791) n_1790))
infer_tm(f_1791)
check_tm(n_1790, A_1787)
infer_tm(n_1790)
assert_equal1( A_1787, A_1787)
assert_equal1( B_1788, B_1788)
infer_tm(Type‹s_1481›)
check_tm(A_1491, Type‹s_1481›)
infer_tm(A_1491)
assert_equal1( Type‹s_1481›, Type‹s_1481›)
infer_tm(Type‹r_1482›)
check_tm(B_1498, Type‹r_1482›)
infer_tm(B_1498)
assert_equal1( Type‹r_1482›, Type‹r_1482›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2085 : Type‹s_2084›} ->
           ∀ {n_2086 : nat_3} ->
             (vec_8‹s_2084› A_2085 (succ_5‹› n_2086)) -> A_2085)
infer_tm(Type‹s_2084›)
infer_tm(∀ {n_2089 : nat_3} ->
           (vec_8‹s_2084› A_2088 (succ_5‹› n_2089)) -> A_2088)
infer_tm(nat_3)
infer_tm((vec_8‹s_2084› A_2088 (succ_5‹› n_2091)) -> A_2088)
infer_tm((vec_8‹s_2084› A_2088 (succ_5‹› n_2091)))
check_tm(A_2088, Type‹s_2084›)
infer_tm(A_2088)
assert_equal1( Type‹s_2084›, Type‹s_2084›)
check_tm((succ_5‹› n_2091), nat_3)
infer_tm((succ_5‹› n_2091))
check_tm(n_2091, nat_3)
infer_tm(n_2091)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2088)
check_tm(function hd_vec_2094 :
           ∀ {A_2095 : Type‹s_2084›} ->
             ∀ {n_2096 : nat_3} ->
               (vec_8‹s_2084› A_2095 (succ_5‹› n_2096)) -> A_2095
         | A_2098 n_2099 vnil_11 =>
         | A_2100 n_2101 (vcons_12 _2102 hd_2103 _2104) => hd_2103, ∀ {A_2105 :
                                                                    Type‹s_2084›} ->
                                                                    ∀ {n_2106 :
                                                                    nat_3} ->
                                                                    (vec_8‹s_2084›
                                                                    A_2105
                                                                    (succ_5‹›
                                                                    n_2106)) ->
                                                                    A_2105)
infer_tm(∀ {A_2109 : Type‹s_2084›} ->
           ∀ {n_2110 : nat_3} ->
             (vec_8‹s_2084› A_2109 (succ_5‹› n_2110)) -> A_2109)
infer_tm(Type‹s_2084›)
infer_tm(∀ {n_2113 : nat_3} ->
           (vec_8‹s_2084› A_2112 (succ_5‹› n_2113)) -> A_2112)
infer_tm(nat_3)
infer_tm((vec_8‹s_2084› A_2112 (succ_5‹› n_2115)) -> A_2112)
infer_tm((vec_8‹s_2084› A_2112 (succ_5‹› n_2115)))
check_tm(A_2112, Type‹s_2084›)
infer_tm(A_2112)
assert_equal1( Type‹s_2084›, Type‹s_2084›)
check_tm((succ_5‹› n_2115), nat_3)
infer_tm((succ_5‹› n_2115))
check_tm(n_2115, nat_3)
infer_tm(n_2115)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2112)
assert_equal1(
  ∀ {A_2118 : Type‹s_2084›} ->
    ∀ {n_2119 : nat_3} ->
      (vec_8‹s_2084› A_2118 (succ_5‹› n_2119)) -> A_2118,
  ∀ {A_2121 : Type‹s_2084›} ->
    ∀ {n_2122 : nat_3} ->
      (vec_8‹s_2084› A_2121 (succ_5‹› n_2122)) -> A_2121)
check_cls {|
  prblm {| ;
    () ::: [A_2127, n_2128, vnil_11] =>? !!
    {|  ::: [A_2129, n_2130, (vcons_12 _2131 hd_2132 _2133)] =>? #hd_2132 |}
  |}
|}
case_intro
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2141)),
      (vec_8‹s_2084› #A_2140 zero_4));
    (eq_pat?( #A_2140, A_2127 : Type‹s_2084›)
     eq_pat?( #n_2141, n_2128 : nat_3)) ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2141)),
    (vec_8‹s_2084› #A_2140 zero_4))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2141)),
  (vec_8‹s_2084› #A_2140 zero_4))
simpl_pprbm ~expand:false( #A_2140, #A_2140)
simpl_pprbm ~expand:false( (succ_5‹› #n_2141), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› #n_2141), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2141)),
      (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2149)));
    {| eq_pat?( #A_2140, A_2129 : Type‹s_2084›)
       eq_pat?( #n_2141, n_2130 : nat_3)
       eq_pat?( #n_2149, _2131 : nat_3)
       eq_pat?( #hd_2150, hd_2132 : #A_2140)
       eq_pat?( #tl_2151, _2133 : (vec_8‹s_2084› #A_2140 #n_2149)) ::: [] =>?
         #hd_2132
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2141)),
    (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2149)))
  eq_pat?( #A_2140, A_2129 : Type‹s_2084›)
  eq_pat?( #n_2141, n_2130 : nat_3)
  eq_pat?( #n_2149, _2131 : nat_3)
  eq_pat?( #hd_2150, hd_2132 : #A_2140)
  eq_pat?( #tl_2151, _2133 : (vec_8‹s_2084› #A_2140 #n_2149))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2141)),
  (vec_8‹s_2084› #A_2140 (succ_5‹› #n_2149)))
simpl_pprbm ~expand:false( #A_2140, #A_2140)
simpl_pprbm ~expand:false( (succ_5‹› #n_2141), (succ_5‹› #n_2149))
simpl_pprbm ~expand:false( #n_2141, #n_2149)
simpl_pprbm ~expand:false( #A_2140, #A_2129)
simpl_pprbm ~expand:false( #n_2141, #n_2130)
simpl_pprbm ~expand:false( #n_2149, #_2131)
simpl_pprbm ~expand:false( #hd_2150, #hd_2132)
simpl_pprbm ~expand:false( #tl_2151, #_2133)
simpl_pprbm ~expand:false( #n_2149, #n_2141)
simpl_pprbm ~expand:false( #A_2140, #A_2129)
simpl_pprbm ~expand:false( #n_2149, #n_2130)
simpl_pprbm ~expand:false( #n_2149, #_2131)
simpl_pprbm ~expand:false( #hd_2150, #hd_2132)
simpl_pprbm ~expand:false( #tl_2151, #_2133)
case_coverage_ok(hd_2150, A_2140)
check_tm(hd_2150, A_2140)
infer_tm(hd_2150)
assert_equal1( A_2140, A_2140)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2164
    ??_2 <= s_2167
    ??_3 <= r_2169
    ??_4 <= t_2171
    ??_5 <= s_2174
    ??_6 <= s_2175
    ??_7 <= s_2176
    ??_8 <= s_2177
    ??_9 <= s_2178
    ??_10 <= s_2179
    ??_11 <= s_2181
    ??_12 <= ??_11
    ??_13 <= s_2185
    ??_14 <= ??_13
    ??_15 <= s_2190
    ??_16 <= r_2192
    ??_17 <= ??_16
    ??_18 <= ??_15
    ??_19 <= ??_16
    
  |}
  imeta_meta {|
    ?_1 <= A_2205
    ?_2 <= A_2208
    ?_3 <= A_2214
    ?_4 <= A_2220
    ?_5 <= A_2226
    ?_6 <= A_2232
    ?_7 <= A_2240
    ?_8 <= B_2248
    ?_9 <= B_2256
    ?_10 <= ((f_2262) n_2264)
    ?_11 <= A_2275
    ?_12 <= B_2283
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_2313 : Type‹s_2312›} ->
           ∀ {n_2314 : nat_3} ->
             (vec_8‹s_2312› A_2313 (succ_5‹› n_2314)) -> A_2313)
infer_tm(Type‹s_2312›)
infer_tm(∀ {n_2317 : nat_3} ->
           (vec_8‹s_2312› A_2316 (succ_5‹› n_2317)) -> A_2316)
infer_tm(nat_3)
infer_tm((vec_8‹s_2312› A_2316 (succ_5‹› n_2319)) -> A_2316)
infer_tm((vec_8‹s_2312› A_2316 (succ_5‹› n_2319)))
check_tm(A_2316, Type‹s_2312›)
infer_tm(A_2316)
assert_equal1( Type‹s_2312›, Type‹s_2312›)
check_tm((succ_5‹› n_2319), nat_3)
infer_tm((succ_5‹› n_2319))
check_tm(n_2319, nat_3)
infer_tm(n_2319)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2316)
check_tm(function hd_vec2_2322 :
           ∀ {A_2323 : Type‹s_2312›} ->
             ∀ {n_2324 : nat_3} ->
               (vec_8‹s_2312› A_2323 (succ_5‹› n_2324)) -> A_2323
         | A_2326 n_2327 xs_2328 =>
           match ?_13, xs_2328 in
             ∀ {n0_2329 : ?_14} -o
               ∀ (__2330 :
                 (vec_8‹s_2312› A_2326 (succ_5‹› n0_2329))) -o ?_15
           with
           | _2331, vnil_11 =>
           | _2332, (vcons_12 _2333 hd_2334 _2335) => hd_2334, ∀ {A_2336 :
                                                                 Type‹s_2312›} ->
                                                                 ∀ {n_2337 :
                                                                   nat_3} ->
                                                                   (vec_8‹s_2312›
                                                                    A_2336
                                                                    (succ_5‹›
                                                                    n_2337)) ->
                                                                    A_2336)
infer_tm(∀ {A_2340 : Type‹s_2312›} ->
           ∀ {n_2341 : nat_3} ->
             (vec_8‹s_2312› A_2340 (succ_5‹› n_2341)) -> A_2340)
infer_tm(Type‹s_2312›)
infer_tm(∀ {n_2344 : nat_3} ->
           (vec_8‹s_2312› A_2343 (succ_5‹› n_2344)) -> A_2343)
infer_tm(nat_3)
infer_tm((vec_8‹s_2312› A_2343 (succ_5‹› n_2346)) -> A_2343)
infer_tm((vec_8‹s_2312› A_2343 (succ_5‹› n_2346)))
check_tm(A_2343, Type‹s_2312›)
infer_tm(A_2343)
assert_equal1( Type‹s_2312›, Type‹s_2312›)
check_tm((succ_5‹› n_2346), nat_3)
infer_tm((succ_5‹› n_2346))
check_tm(n_2346, nat_3)
infer_tm(n_2346)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2343)
assert_equal1(
  ∀ {A_2349 : Type‹s_2312›} ->
    ∀ {n_2350 : nat_3} ->
      (vec_8‹s_2312› A_2349 (succ_5‹› n_2350)) -> A_2349,
  ∀ {A_2352 : Type‹s_2312›} ->
    ∀ {n_2353 : nat_3} ->
      (vec_8‹s_2312› A_2352 (succ_5‹› n_2353)) -> A_2352)
check_cls {|
  prblm {| ;
    {|  ::: [A_2358, n_2359, xs_2360] =>?
         match ?_13, #xs_2360 in
           ∀ {n0_2367 : ?_14} -o
             ∀ (__2368 :
               (vec_8‹s_2312› #A_2358 (succ_5‹› n0_2367))) -o ?_15
         with
         | _2369, vnil_11 =>
         | _2370, (vcons_12 _2371 hd_2372 _2373) => hd_2372
    |}
  |}
|}
case_intro
case_intro
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #A_2374, A_2358 : Type‹s_2312›)
       eq_pat?( #n_2375, n_2359 : nat_3)
       eq_pat?( #xs_2376, xs_2360 :
         (vec_8‹s_2312› #A_2374 (succ_5‹› #n_2375))) ::: [] =>?
         match ?_13, #xs_2360 in
           ∀ {n0_2377 : ?_14} -o
             ∀ (__2378 :
               (vec_8‹s_2312› #A_2358 (succ_5‹› n0_2377))) -o ?_15
         with
         | _2379, vnil_11 =>
         | _2380, (vcons_12 _2381 hd_2382 _2383) => hd_2382
    |}
  |}
|}
unify_pprbm(
  eq_pat?( #A_2374, A_2358 : Type‹s_2312›)
  eq_pat?( #n_2375, n_2359 : nat_3)
  eq_pat?( #xs_2376, xs_2360 :
    (vec_8‹s_2312› #A_2374 (succ_5‹› #n_2375)))
)
simpl_pprbm ~expand:false( #A_2374, #A_2358)
simpl_pprbm ~expand:false( #n_2375, #n_2359)
simpl_pprbm ~expand:false( #xs_2376, #xs_2360)
simpl_pprbm ~expand:false( #A_2374, #A_2358)
simpl_pprbm ~expand:false( #n_2375, #n_2359)
simpl_pprbm ~expand:false( #xs_2376, #xs_2360)
case_coverage_ok(match ?_13, xs_2376 in
                   ∀ {n0_2398 : ?_14} -o
                     ∀ (__2399 :
                       (vec_8‹s_2312› A_2374 (succ_5‹› n0_2398))) -o
                       ?_15
                 with
                 | _2400, vnil_11 =>
                 | _2401, (vcons_12 _2402 hd_2403 _2404) => hd_2403, A_2374)
check_tm(match ?_13, xs_2376 in
           ∀ {n0_2405 : ?_14} -o
             ∀ (__2406 :
               (vec_8‹s_2312› A_2374 (succ_5‹› n0_2405))) -o ?_15
         with
         | _2407, vnil_11 =>
         | _2408, (vcons_12 _2409 hd_2410 _2411) => hd_2410, A_2374)
infer_tm(match ?_13, xs_2376 in
           ∀ {n0_2412 : ?_14} -o
             ∀ (__2413 :
               (vec_8‹s_2312› A_2374 (succ_5‹› n0_2412))) -o ?_15
         with
         | _2414, vnil_11 =>
         | _2415, (vcons_12 _2416 hd_2417 _2418) => hd_2417)
infer_tm(∀ {n0_2419 : ?_14} -o
           ∀ (__2420 :
             (vec_8‹s_2312› A_2374 (succ_5‹› n0_2419))) -o ?_15)
infer_tm(?_14)
delay_assert(?_40, ??_38)
infer_tm(∀ (__2422 : (vec_8‹s_2312› A_2374 (succ_5‹› n0_2421))) -o
           ?_15)
infer_tm((vec_8‹s_2312› A_2374 (succ_5‹› n0_2421)))
check_tm(A_2374, Type‹s_2312›)
infer_tm(A_2374)
assert_equal1( Type‹s_2312›, Type‹s_2312›)
check_tm((succ_5‹› n0_2421), nat_3)
infer_tm((succ_5‹› n0_2421))
check_tm(n0_2421, nat_3)
infer_tm(n0_2421)
assert_equal1( nat_3, ?_14)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( nat_3, ?_14)
simpl_tm ~expand:false( ?_40, Type‹??_38›)
infer_tm(?_15)
delay_assert(?_41, ??_39)
simpl_tm ~expand:false( ?_41, Type‹??_39›)
check_tm(?_13, ?_14)
check_tm(xs_2376, (vec_8‹s_2312› A_2374 (succ_5‹› ?_13)))
infer_tm(xs_2376)
assert_equal1( (vec_8‹s_2312› A_2374 (succ_5‹› ?_13)),
  (vec_8‹s_2312› A_2374 (succ_5‹› n_2375)))
simpl_tm ~expand:false( (vec_8‹s_2312› A_2374 (succ_5‹› ?_13)),
  (vec_8‹s_2312› A_2374 (succ_5‹› n_2375)))
simpl_tm ~expand:false( A_2374, A_2374)
simpl_tm ~expand:false( (succ_5‹› ?_13), (succ_5‹› n_2375))
simpl_tm ~expand:false( ?_13, n_2375)
check_cls {|
  prblm {| ;
    () ::: [_2424, vnil_11] =>? !!
    {|  ::: [_2425, (vcons_12 _2426 hd_2427 _2428)] =>? #hd_2427 |}
  |}
|}
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2312› A_2374 (succ_5‹› #n0_2432)),
      (vec_8‹s_2312› A_2374 zero_4));
    (eq_pat?( #n0_2432, _2424 : nat_3)) ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2312› A_2374 (succ_5‹› #n0_2432)),
    (vec_8‹s_2312› A_2374 zero_4))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2312› A_2374 (succ_5‹› #n0_2432)),
  (vec_8‹s_2312› A_2374 zero_4))
simpl_pprbm ~expand:false( A_2374, A_2374)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2432), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› #n0_2432), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2312› A_2374 (succ_5‹› #n0_2432)),
      (vec_8‹s_2312› A_2374 (succ_5‹› #n_2440)));
    {| eq_pat?( #n0_2432, _2425 : nat_3)
       eq_pat?( #n_2440, _2426 : nat_3)
       eq_pat?( #hd_2441, hd_2427 : A_2374)
       eq_pat?( #tl_2442, _2428 : (vec_8‹s_2312› A_2374 #n_2440)) ::: [] =>?
         #hd_2427
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2312› A_2374 (succ_5‹› #n0_2432)),
    (vec_8‹s_2312› A_2374 (succ_5‹› #n_2440)))
  eq_pat?( #n0_2432, _2425 : nat_3)
  eq_pat?( #n_2440, _2426 : nat_3)
  eq_pat?( #hd_2441, hd_2427 : A_2374)
  eq_pat?( #tl_2442, _2428 : (vec_8‹s_2312› A_2374 #n_2440))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2312› A_2374 (succ_5‹› #n0_2432)),
  (vec_8‹s_2312› A_2374 (succ_5‹› #n_2440)))
simpl_pprbm ~expand:false( A_2374, A_2374)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2432), (succ_5‹› #n_2440))
simpl_pprbm ~expand:false( #n0_2432, #n_2440)
simpl_pprbm ~expand:false( #n0_2432, #_2425)
simpl_pprbm ~expand:false( #n_2440, #_2426)
simpl_pprbm ~expand:false( #hd_2441, #hd_2427)
simpl_pprbm ~expand:false( #tl_2442, #_2428)
simpl_pprbm ~expand:false( #n_2440, #n0_2432)
simpl_pprbm ~expand:false( #n_2440, #_2425)
simpl_pprbm ~expand:false( #n_2440, #_2426)
simpl_pprbm ~expand:false( #hd_2441, #hd_2427)
simpl_pprbm ~expand:false( #tl_2442, #_2428)
case_coverage_ok(hd_2441, ?_15)
check_tm(hd_2441, ?_15)
infer_tm(hd_2441)
assert_equal1( ?_15, A_2374)
assert_equal1( A_2374, ?_15)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2455
    ??_2 <= s_2458
    ??_3 <= r_2460
    ??_4 <= t_2462
    ??_5 <= s_2465
    ??_6 <= s_2466
    ??_7 <= s_2467
    ??_8 <= s_2468
    ??_9 <= s_2469
    ??_10 <= s_2470
    ??_11 <= s_2472
    ??_12 <= ??_11
    ??_13 <= s_2476
    ??_14 <= ??_13
    ??_15 <= s_2481
    ??_16 <= r_2483
    ??_17 <= ??_16
    ??_18 <= ??_15
    ??_19 <= ??_16
    
  |}
  imeta_meta {|
    ?_1 <= A_2496
    ?_2 <= A_2499
    ?_3 <= A_2505
    ?_4 <= A_2511
    ?_5 <= A_2517
    ?_6 <= A_2523
    ?_7 <= A_2531
    ?_8 <= B_2539
    ?_9 <= B_2547
    ?_10 <= ((f_2553) n_2555)
    ?_11 <= A_2566
    ?_12 <= B_2574
    ?_13 <= n_2578
    ?_14 <= nat_3
    ?_40 <= Type‹??_38›
    ?_41 <= Type‹??_39›
    
  |}
  eqns {|
    equal_tm? (A_2374, ?_15);
    equal_tm? (?_15, A_2374)
  |}
end_dump
simpl_tm ~expand:false( A_2374, ?_15)
simpl_tm ~expand:false( A_2374, A_2374)
infer_tm(nat_3)
check_tm(n_2375, nat_3)
infer_tm(n_2375)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_38›)
check_tm(nat_3, Type‹??_38›)
infer_tm(nat_3)
assert_equal1( Type‹??_38›, U)
simpl_tm ~expand:false( Type‹??_38›, U)
infer_tm(Type‹??_39›)
check_tm(A_2374, Type‹??_39›)
infer_tm(A_2374)
assert_equal1( Type‹??_39›, Type‹s_2312›)
simpl_tm ~expand:false( Type‹??_39›, Type‹s_2312›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2657 : Type‹s_2656›} ->
           ∀ {n_2658 : nat_3} ->
             ∀ (__2659 : (vec_8‹??_34› A_2657 n_2658)) ->
               (exists_5‹??_35,??_36,L›
                 ?_36
                 function _2660 : ∀ (x_2661 : ?_37) -> ?_38
                 | x_2662 => (eq_4‹??_37› ?_39 x_2662 n_2658)))
infer_tm(Type‹s_2656›)
infer_tm(∀ {n_2664 : nat_3} ->
           ∀ (__2665 : (vec_8‹??_34› A_2663 n_2664)) ->
             (exists_5‹??_35,??_36,L›
               ?_36
               function _2666 : ∀ (x_2667 : ?_37) -> ?_38
               | x_2668 => (eq_4‹??_37› ?_39 x_2668 n_2664)))
infer_tm(nat_3)
infer_tm(∀ (__2670 : (vec_8‹??_34› A_2663 n_2669)) ->
           (exists_5‹??_35,??_36,L›
             ?_36
             function _2671 : ∀ (x_2672 : ?_37) -> ?_38
             | x_2673 => (eq_4‹??_37› ?_39 x_2673 n_2669)))
infer_tm((vec_8‹??_34› A_2663 n_2669))
check_tm(A_2663, Type‹??_34›)
infer_tm(A_2663)
assert_equal1( Type‹??_34›, Type‹s_2656›)
check_tm(n_2669, nat_3)
infer_tm(n_2669)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_34›, Type‹s_2656›)
infer_tm((exists_5‹??_35,??_36,L›
           ?_36
           function _2675 : ∀ (x_2676 : ?_37) -> ?_38
           | x_2677 => (eq_4‹??_37› ?_39 x_2677 n_2669)))
check_tm(?_36, Type‹??_35›)
check_tm(function _2678 : ∀ (x_2679 : ?_37) -> ?_38
         | x_2680 => (eq_4‹??_37› ?_39 x_2680 n_2669), ?_36 ->
                                                             Type‹??_36›)
infer_tm(∀ (x_2683 : ?_37) -> ?_38)
infer_tm(?_37)
delay_assert(?_42, ??_40)
infer_tm(?_38)
simpl_tm ~expand:false( ?_42, Type‹??_40›)
delay_assert(?_43, ??_41)
simpl_tm ~expand:false( ?_43, Type‹??_41›)
assert_equal1( ?_36 -> Type‹??_36›, ∀ (x_2686 : ?_37) -> ?_38)
simpl_tm ~expand:false( ?_36 -> Type‹??_36›, ∀ (x_2691 : ?_37) -> ?_38)
simpl_tm ~expand:false( ?_36, ?_37)
simpl_tm ~expand:false( Type‹??_36›, ?_38)
simpl_tm ~expand:false( Type‹??_36›, ?_38)
check_cls {|
  prblm {| ; {|  ::: [x_2687] =>? (eq_4‹??_37› ?_39 #x_2687 n_2669) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__2694, x_2687 : ?_36) ::: [] =>?
         (eq_4‹??_37› ?_39 #x_2687 n_2669)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__2694, x_2687 : ?_36) )
simpl_pprbm ~expand:false( #__2694, #x_2687)
simpl_pprbm ~expand:false( #__2694, #x_2687)
case_coverage_ok((eq_4‹??_37› ?_39 __2694 n_2669), Type‹??_36›)
check_tm((eq_4‹??_37› ?_39 __2694 n_2669), Type‹??_36›)
infer_tm((eq_4‹??_37› ?_39 __2694 n_2669))
check_tm(?_39, Type‹??_37›)
check_tm(__2694, ?_39)
infer_tm(__2694)
assert_equal1( ?_39, ?_36)
check_tm(n_2669, ?_39)
infer_tm(n_2669)
assert_equal1( ?_39, nat_3)
assert_equal1( Type‹??_36›, U)
simpl_tm ~expand:false( Type‹??_36›, U)
simpl_tm ~expand:false( ?_39, nat_3)
simpl_tm ~expand:false( nat_3, ?_36)
check_tm(function vlength_2696 :
           ∀ {A_2697 : Type‹s_2656›} ->
             ∀ {n_2698 : nat_3} ->
               ∀ (__2699 : (vec_8‹??_20› A_2697 n_2698)) ->
                 (exists_5‹??_21,??_22,L›
                   ?_16
                   function _2700 : ∀ (x_2701 : ?_17) -> ?_18
                   | x_2702 => (eq_4‹??_23› ?_19 x_2702 n_2698))
         | A_2703 n_2704 vnil_11 =>
           (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
         | A_2705 n_2706 (vcons_12 _2707 _2708 tl_2709) =>
           match ((vlength_2696) ?_24 ?_25 tl_2709) in
             ∀ (_2710 : ?_26) -o ?_27
           with
           | (ex_7 n_2711 pf_2712) =>
             (ex_7‹??_31,??_32,??_33›
               (succ_5‹› n_2711)
               ((congr_3‹??_28,??_29,??_30›)
                 ?_28 ?_29 ?_30 ?_31
                 function _2713 : ∀ (x_2714 : ?_32) -> ?_33
                 | x_2715 => (succ_5‹› x_2715) pf_2712)), ∀ {A_2716 :
                                                                Type‹s_2656›} ->
                                                                ∀ {n_2717 :
                                                                  nat_3} ->
                                                                  ∀ (__2718 :
                                                                    (vec_8‹??_34›
                                                                    A_2716
                                                                    n_2717)) ->
                                                                    (exists_5‹??_35,??_36,L›
                                                                    ?_36
                                                                    function _2719 :
                                                                    ∀ (x_2720 :
                                                                    ?_37) ->
                                                                    ?_38
                                                                    | 
                                                                    x_2721 =>
                                                                    (eq_4‹??_37›
                                                                    ?_39
                                                                    x_2721
                                                                    n_2717)))
infer_tm(∀ {A_2723 : Type‹s_2656›} ->
           ∀ {n_2724 : nat_3} ->
             ∀ (__2725 : (vec_8‹??_20› A_2723 n_2724)) ->
               (exists_5‹??_21,??_22,L›
                 ?_16
                 function _2726 : ∀ (x_2727 : ?_17) -> ?_18
                 | x_2728 => (eq_4‹??_23› ?_19 x_2728 n_2724)))
infer_tm(Type‹s_2656›)
infer_tm(∀ {n_2730 : nat_3} ->
           ∀ (__2731 : (vec_8‹??_20› A_2729 n_2730)) ->
             (exists_5‹??_21,??_22,L›
               ?_16
               function _2732 : ∀ (x_2733 : ?_17) -> ?_18
               | x_2734 => (eq_4‹??_23› ?_19 x_2734 n_2730)))
infer_tm(nat_3)
infer_tm(∀ (__2736 : (vec_8‹??_20› A_2729 n_2735)) ->
           (exists_5‹??_21,??_22,L›
             ?_16
             function _2737 : ∀ (x_2738 : ?_17) -> ?_18
             | x_2739 => (eq_4‹??_23› ?_19 x_2739 n_2735)))
infer_tm((vec_8‹??_20› A_2729 n_2735))
check_tm(A_2729, Type‹??_20›)
infer_tm(A_2729)
assert_equal1( Type‹??_20›, Type‹s_2656›)
check_tm(n_2735, nat_3)
infer_tm(n_2735)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_20›, Type‹s_2656›)
infer_tm((exists_5‹??_21,??_22,L›
           ?_16
           function _2741 : ∀ (x_2742 : ?_17) -> ?_18
           | x_2743 => (eq_4‹??_23› ?_19 x_2743 n_2735)))
check_tm(?_16, Type‹??_21›)
check_tm(function _2744 : ∀ (x_2745 : ?_17) -> ?_18
         | x_2746 => (eq_4‹??_23› ?_19 x_2746 n_2735), ?_16 ->
                                                             Type‹??_22›)
infer_tm(∀ (x_2749 : ?_17) -> ?_18)
infer_tm(?_17)
delay_assert(?_44, ??_42)
infer_tm(?_18)
simpl_tm ~expand:false( ?_44, Type‹??_42›)
delay_assert(?_45, ??_43)
simpl_tm ~expand:false( ?_45, Type‹??_43›)
assert_equal1( ?_16 -> Type‹??_22›, ∀ (x_2752 : ?_17) -> ?_18)
simpl_tm ~expand:false( ?_16 -> Type‹??_22›, ∀ (x_2757 : ?_17) -> ?_18)
simpl_tm ~expand:false( ?_16, ?_17)
simpl_tm ~expand:false( Type‹??_22›, ?_18)
simpl_tm ~expand:false( Type‹??_22›, ?_18)
check_cls {|
  prblm {| ; {|  ::: [x_2753] =>? (eq_4‹??_23› ?_19 #x_2753 n_2735) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__2760, x_2753 : ?_16) ::: [] =>?
         (eq_4‹??_23› ?_19 #x_2753 n_2735)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__2760, x_2753 : ?_16) )
simpl_pprbm ~expand:false( #__2760, #x_2753)
simpl_pprbm ~expand:false( #__2760, #x_2753)
case_coverage_ok((eq_4‹??_23› ?_19 __2760 n_2735), Type‹??_22›)
check_tm((eq_4‹??_23› ?_19 __2760 n_2735), Type‹??_22›)
infer_tm((eq_4‹??_23› ?_19 __2760 n_2735))
check_tm(?_19, Type‹??_23›)
check_tm(__2760, ?_19)
infer_tm(__2760)
assert_equal1( ?_19, ?_16)
check_tm(n_2735, ?_19)
infer_tm(n_2735)
assert_equal1( ?_19, nat_3)
assert_equal1( Type‹??_22›, U)
simpl_tm ~expand:false( Type‹??_22›, U)
simpl_tm ~expand:false( ?_19, nat_3)
simpl_tm ~expand:false( nat_3, ?_16)
assert_equal1(
  ∀ {A_2762 : Type‹s_2656›} ->
    ∀ {n_2763 : nat_3} ->
      ∀ (__2764 : (vec_8‹??_34› A_2762 n_2763)) ->
        (exists_5‹??_35,??_36,L›
          ?_36
          function _2765 : ∀ (x_2766 : ?_37) -> ?_38
          | x_2767 => (eq_4‹??_37› ?_39 x_2767 n_2763)),
  ∀ {A_2768 : Type‹s_2656›} ->
    ∀ {n_2769 : nat_3} ->
      ∀ (__2770 : (vec_8‹??_20› A_2768 n_2769)) ->
        (exists_5‹??_21,??_22,L›
          ?_16
          function _2771 : ∀ (x_2772 : ?_17) -> ?_18
          | x_2773 => (eq_4‹??_23› ?_19 x_2773 n_2769)))
simpl_tm ~expand:false(
  ∀ {A_2821 : Type‹s_2656›} ->
    ∀ {n_2822 : nat_3} ->
      (vec_8‹s_2656› A_2821 n_2822) ->
        (exists_5‹??_35,U,L›
          nat_3
          function _2824 : nat_3 -> U
          | x_2826 => (eq_4‹??_37› nat_3 x_2826 n_2822)),
  ∀ {A_2827 : Type‹s_2656›} ->
    ∀ {n_2828 : nat_3} ->
      (vec_8‹s_2656› A_2827 n_2828) ->
        (exists_5‹??_21,U,L›
          nat_3
          function _2830 : nat_3 -> U
          | x_2832 => (eq_4‹??_23› nat_3 x_2832 n_2828)))
simpl_tm ~expand:false( Type‹s_2656›, Type‹s_2656›)
simpl_tm ~expand:false(
  ∀ {n_2834 : nat_3} ->
    (vec_8‹s_2656› A_2833 n_2834) ->
      (exists_5‹??_35,U,L›
        nat_3
        function _2836 : nat_3 -> U
        | x_2838 => (eq_4‹??_37› nat_3 x_2838 n_2834)),
  ∀ {n_2839 : nat_3} ->
    (vec_8‹s_2656› A_2833 n_2839) ->
      (exists_5‹??_21,U,L›
        nat_3
        function _2841 : nat_3 -> U
        | x_2843 => (eq_4‹??_23› nat_3 x_2843 n_2839)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  (vec_8‹s_2656› A_2833 n_2844) ->
    (exists_5‹??_35,U,L›
      nat_3
      function _2846 : nat_3 -> U
      | x_2848 => (eq_4‹??_37› nat_3 x_2848 n_2844)),
  (vec_8‹s_2656› A_2833 n_2844) ->
    (exists_5‹??_21,U,L›
      nat_3
      function _2850 : nat_3 -> U
      | x_2852 => (eq_4‹??_23› nat_3 x_2852 n_2844)))
simpl_tm ~expand:false( (vec_8‹s_2656› A_2833 n_2844),
  (vec_8‹s_2656› A_2833 n_2844))
simpl_tm ~expand:false( A_2833, A_2833)
simpl_tm ~expand:false( n_2844, n_2844)
simpl_tm ~expand:false(
  (exists_5‹??_35,U,L›
    nat_3
    function _2854 : nat_3 -> U
    | x_2856 => (eq_4‹??_37› nat_3 x_2856 n_2844)),
  (exists_5‹??_21,U,L›
    nat_3
    function _2857 : nat_3 -> U
    | x_2859 => (eq_4‹??_23› nat_3 x_2859 n_2844)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _2860 : nat_3 -> U
  | x_2862 => (eq_4‹??_37› nat_3 x_2862 n_2844),
  function _2863 : nat_3 -> U
  | x_2865 => (eq_4‹??_23› nat_3 x_2865 n_2844))
simpl_function(
  function _2866 : nat_3 -> U
  | x_2868 => (eq_4‹??_37› nat_3 x_2868 n_2844),
  function _2869 : nat_3 -> U
  | x_2871 => (eq_4‹??_23› nat_3 x_2871 n_2844))
simpl_tm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false( (eq_4‹??_37› nat_3 x_2876 n_2844),
  (eq_4‹??_23› nat_3 x_2876 n_2844))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( x_2876, x_2876)
simpl_tm ~expand:false( n_2844, n_2844)
check_cls {|
  prblm {| ;
    {|  ::: [A_2784, n_2785, vnil_11] =>?
         (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
    |}
    {|  ::: [A_2786, n_2787, (vcons_12 _2788 _2789 tl_2790)] =>?
         match ((vlength_2722) ?_24 ?_25 #tl_2790) in
           ∀ (_2892 : ?_26) -o ?_27
         with
         | (ex_7 n_2893 pf_2894) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_2893)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _2895 : ∀ (x_2896 : ?_32) -> ?_33
               | x_2897 => (succ_5‹› x_2897) pf_2894))
    |}
  |}
|}
case_intro
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2656› #A_2898 #n_2899),
      (vec_8‹s_2656› #A_2898 zero_4));
    {| eq_pat?( #A_2898, A_2784 : Type‹s_2656›)
       eq_pat?( #n_2899, n_2785 : nat_3) ::: [] =>?
         (ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›)
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2656› #A_2898 #n_2899),
    (vec_8‹s_2656› #A_2898 zero_4))
  eq_pat?( #A_2898, A_2784 : Type‹s_2656›)
  eq_pat?( #n_2899, n_2785 : nat_3)
)
simpl_pprbm ~expand:false( (vec_8‹s_2656› #A_2898 #n_2899),
  (vec_8‹s_2656› #A_2898 zero_4))
simpl_pprbm ~expand:false( #A_2898, #A_2898)
simpl_pprbm ~expand:false( #n_2899, zero_4)
simpl_pprbm ~expand:false( #A_2898, #A_2784)
simpl_pprbm ~expand:false( #n_2899, #n_2785)
simpl_pprbm ~expand:false( zero_4, #n_2899)
simpl_pprbm ~expand:false( #A_2898, #A_2784)
simpl_pprbm ~expand:false( zero_4, #n_2785)
case_coverage_ok((ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›), 
(exists_5‹??_21,U,L›
  nat_3
  function _2943 : nat_3 -> U
  | x_2945 => (eq_4‹??_23› nat_3 x_2945 zero_4)))
check_tm((ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›), (exists_5‹??_21,U,L›
                                                                   nat_3
                                                                   function _2946 :
                                                                    nat_3 ->
                                                                    U
                                                                   | 
                                                                   x_2948 =>
                                                                   (eq_4‹??_23›
                                                                    nat_3
                                                                    x_2948
                                                                    zero_4)))
infer_tm((ex_7‹??_25,??_26,??_27› zero_4 refl_6‹??_24›))
check_tm(?_22, Type‹??_25›)
check_tm(?_23, ?_22 -> Type‹??_26›)
check_tm(zero_4, ?_22)
infer_tm(zero_4)
assert_equal1( ?_22, nat_3)
check_tm(refl_6‹??_24›, ((?_23) zero_4))
infer_tm(refl_6‹??_24›)
check_tm(?_20, Type‹??_24›)
check_tm(?_21, ?_20)
assert_equal1( ((?_23) zero_4), (eq_4‹??_24› ?_20 ?_21 ?_21))
assert_equal1(
  (exists_5‹??_21,U,L›
    nat_3
    function _2950 : nat_3 -> U
    | x_2952 => (eq_4‹??_23› nat_3 x_2952 zero_4)),
  (exists_5‹??_25,??_26,??_27› ?_22 ?_23))
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2656› #A_2898 #n_2899),
      (vec_8‹s_2656› #A_2898 (succ_5‹› #n_2953)));
    {| eq_pat?( #A_2898, A_2786 : Type‹s_2656›)
       eq_pat?( #n_2899, n_2787 : nat_3)
       eq_pat?( #n_2953, _2788 : nat_3)
       eq_pat?( #hd_2954, _2789 : #A_2898)
       eq_pat?( #tl_2955, tl_2790 : (vec_8‹s_2656› #A_2898 #n_2953)) ::: [] =>?
         match ((vlength_2722) ?_24 ?_25 #tl_2790) in
           ∀ (_2977 : ?_26) -o ?_27
         with
         | (ex_7 n_2978 pf_2979) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_2978)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _2980 : ∀ (x_2981 : ?_32) -> ?_33
               | x_2982 => (succ_5‹› x_2982) pf_2979))
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2656› #A_2898 #n_2899),
    (vec_8‹s_2656› #A_2898 (succ_5‹› #n_2953)))
  eq_pat?( #A_2898, A_2786 : Type‹s_2656›)
  eq_pat?( #n_2899, n_2787 : nat_3)
  eq_pat?( #n_2953, _2788 : nat_3)
  eq_pat?( #hd_2954, _2789 : #A_2898)
  eq_pat?( #tl_2955, tl_2790 : (vec_8‹s_2656› #A_2898 #n_2953))
)
simpl_pprbm ~expand:false( (vec_8‹s_2656› #A_2898 #n_2899),
  (vec_8‹s_2656› #A_2898 (succ_5‹› #n_2953)))
simpl_pprbm ~expand:false( #A_2898, #A_2898)
simpl_pprbm ~expand:false( #n_2899, (succ_5‹› #n_2953))
simpl_pprbm ~expand:false( #A_2898, #A_2786)
simpl_pprbm ~expand:false( #n_2899, #n_2787)
simpl_pprbm ~expand:false( #n_2953, #_2788)
simpl_pprbm ~expand:false( #hd_2954, #_2789)
simpl_pprbm ~expand:false( #tl_2955, #tl_2790)
simpl_pprbm ~expand:false( (succ_5‹› #n_2953), #n_2899)
simpl_pprbm ~expand:false( #A_2898, #A_2786)
simpl_pprbm ~expand:false( (succ_5‹› #n_2953), #n_2787)
simpl_pprbm ~expand:false( #n_2953, #_2788)
simpl_pprbm ~expand:false( #hd_2954, #_2789)
simpl_pprbm ~expand:false( #tl_2955, #tl_2790)
case_coverage_ok(match ((vlength_2722) ?_24 ?_25 tl_2955) in
                   ∀ (_3011 : ?_26) -o ?_27
                 with
                 | (ex_7 n_3012 pf_3013) =>
                   (ex_7‹??_31,??_32,??_33›
                     (succ_5‹› n_3012)
                     ((congr_3‹??_28,??_29,??_30›)
                       ?_28 ?_29 ?_30 ?_31
                       function _3014 : ∀ (x_3015 : ?_32) -> ?_33
                       | x_3016 => (succ_5‹› x_3016) pf_3013)), (exists_5‹??_21,U,L›
                                                                    nat_3
                                                                    function _3017 :
                                                                    nat_3 ->
                                                                    U
                                                                    | 
                                                                    x_3019 =>
                                                                    (eq_4‹??_23›
                                                                    nat_3
                                                                    x_3019
                                                                    (succ_5‹›
                                                                    n_2953))))
check_tm(match ((vlength_2722) ?_24 ?_25 tl_2955) in
           ∀ (_3020 : ?_26) -o ?_27
         with
         | (ex_7 n_3021 pf_3022) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_3021)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _3023 : ∀ (x_3024 : ?_32) -> ?_33
               | x_3025 => (succ_5‹› x_3025) pf_3022)), (exists_5‹??_21,U,L›
                                                              nat_3
                                                              function _3026 :
                                                                nat_3 -> U
                                                              | x_3028 =>
                                                                (eq_4‹??_23›
                                                                  nat_3
                                                                  x_3028
                                                                  (succ_5‹›
                                                                    n_2953))))
infer_tm(match ((vlength_2722) ?_24 ?_25 tl_2955) in
           ∀ (_3029 : ?_26) -o ?_27
         with
         | (ex_7 n_3030 pf_3031) =>
           (ex_7‹??_31,??_32,??_33›
             (succ_5‹› n_3030)
             ((congr_3‹??_28,??_29,??_30›)
               ?_28 ?_29 ?_30 ?_31
               function _3032 : ∀ (x_3033 : ?_32) -> ?_33
               | x_3034 => (succ_5‹› x_3034) pf_3031)))
infer_tm(∀ (_3035 : ?_26) -o ?_27)
infer_tm(?_26)
simpl_tm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3040 : nat_3 -> U
    | x_3042 => (eq_4‹??_23› nat_3 x_3042 zero_4)),
  (exists_5‹??_25,??_26,??_27› ?_22 ?_23))
simpl_tm ~expand:false( nat_3, ?_22)
simpl_tm ~expand:false(
  function _3043 : nat_3 -> U
  | x_3045 => (eq_4‹??_23› nat_3 x_3045 zero_4), ?_23)
simpl_tm ~expand:false( nat_3, ?_22)
simpl_tm ~expand:false(
  function _3050 : nat_3 -> U
  | x_3052 => (eq_4‹??_23› nat_3 x_3052 zero_4), ?_23)
simpl_tm ~expand:false( (eq_4‹??_23› nat_3 zero_4 zero_4),
  (eq_4‹??_24› ?_20 ?_21 ?_21))
simpl_tm ~expand:false( nat_3, ?_20)
simpl_tm ~expand:false( zero_4, ?_21)
simpl_tm ~expand:false( zero_4, ?_21)
simpl_tm ~expand:false( nat_3, ?_20)
simpl_tm ~expand:false( zero_4, ?_21)
simpl_tm ~expand:false( zero_4, zero_4)
simpl_tm ~expand:false( nat_3, nat_3)
delay_assert(?_46, ??_44)
infer_tm(?_27)
simpl_tm ~expand:false( ?_46, Type‹??_44›)
delay_assert(?_47, ??_45)
simpl_tm ~expand:false( ?_47, Type‹??_45›)
check_tm(((vlength_2722) ?_24 ?_25 tl_2955), ?_26)
infer_tm(((vlength_2722) ?_24 ?_25 tl_2955))
infer_tm(((vlength_2722) ?_24 ?_25))
infer_tm(((vlength_2722) ?_24))
infer_tm(vlength_2722)
check_tm(?_24, Type‹s_2656›)
check_tm(?_25, nat_3)
check_tm(tl_2955, (vec_8‹s_2656› ?_24 ?_25))
infer_tm(tl_2955)
assert_equal1( (vec_8‹s_2656› ?_24 ?_25),
  (vec_8‹s_2656› A_2898 n_2953))
assert_equal1( ?_26,
  (exists_5‹??_21,U,L›
    nat_3
    function _3095 : nat_3 -> U
    | x_3097 => (eq_4‹??_23› nat_3 x_3097 ?_25)))
simpl_tm ~expand:false( ?_26,
  (exists_5‹??_21,U,L›
    nat_3
    function _3103 : nat_3 -> U
    | x_3105 => (eq_4‹??_23› nat_3 x_3105 ?_25)))
simpl_tm ~expand:false( (vec_8‹s_2656› ?_24 ?_25),
  (vec_8‹s_2656› A_2898 n_2953))
simpl_tm ~expand:false( ?_24, A_2898)
simpl_tm ~expand:false( ?_25, n_2953)
simpl_tm ~expand:false( n_2953, ?_25)
check_cls {|
  prblm {| ;
    {|  ::: [(ex_7 n_3098 pf_3099)] =>?
         (ex_7‹??_31,??_32,??_33›
           (succ_5‹› #n_3098)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3118 : ∀ (x_3119 : ?_32) -> ?_33
             | x_3120 => (succ_5‹› x_3120) #pf_3099))
    |}
  |}
|}
case_intro
case_splitting
splitting_on(ex_7)
case_coverage{|
  prblm {|
    eq_term?(
      (exists_5‹??_21,U,L›
        nat_3
        function _3157 : nat_3 -> U
        | x_3159 => (eq_4‹??_23› nat_3 x_3159 n_2953)),
      (exists_5‹??_21,U,L›
        nat_3
        function _3160 : nat_3 -> U
        | x_3162 => (eq_4‹??_23› nat_3 x_3162 n_2953)));
    {| eq_pat?( #m_3122, n_3098 : nat_3)
       eq_pat?( #pf_3123, pf_3099 : (eq_4‹??_23› nat_3 #m_3122 n_2953)) ::: [] =>?
         (ex_7‹??_31,??_32,??_33›
           (succ_5‹› #n_3098)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3163 : ∀ (x_3164 : ?_32) -> ?_33
             | x_3165 => (succ_5‹› x_3165) #pf_3099))
    |}
  |}
|}
unify_pprbm(
  eq_term?(
    (exists_5‹??_21,U,L›
      nat_3
      function _3166 : nat_3 -> U
      | x_3168 => (eq_4‹??_23› nat_3 x_3168 n_2953)),
    (exists_5‹??_21,U,L›
      nat_3
      function _3169 : nat_3 -> U
      | x_3171 => (eq_4‹??_23› nat_3 x_3171 n_2953)))
  eq_pat?( #m_3122, n_3098 : nat_3)
  eq_pat?( #pf_3123, pf_3099 : (eq_4‹??_23› nat_3 #m_3122 n_2953))
)
simpl_pprbm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3172 : nat_3 -> U
    | x_3174 => (eq_4‹??_23› nat_3 x_3174 n_2953)),
  (exists_5‹??_21,U,L›
    nat_3
    function _3175 : nat_3 -> U
    | x_3177 => (eq_4‹??_23› nat_3 x_3177 n_2953)))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false(
  function _3178 : nat_3 -> U
  | x_3180 => (eq_4‹??_23› nat_3 x_3180 n_2953),
  function _3181 : nat_3 -> U
  | x_3183 => (eq_4‹??_23› nat_3 x_3183 n_2953))
simpl_pprbm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( U, U)
simpl_pprbm ~expand:false( (eq_4‹??_23› nat_3 x_3188 n_2953),
  (eq_4‹??_23› nat_3 x_3188 n_2953))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( x_3188, x_3188)
simpl_pprbm ~expand:false( n_2953, n_2953)
simpl_pprbm ~expand:false( #m_3122, #n_3098)
simpl_pprbm ~expand:false( #pf_3123, #pf_3099)
simpl_pprbm ~expand:false( #m_3122, #n_3098)
simpl_pprbm ~expand:false( #pf_3123, #pf_3099)
case_coverage_ok((ex_7‹??_31,??_32,??_33›
                   (succ_5‹› m_3122)
                   ((congr_3‹??_28,??_29,??_30›)
                     ?_28 ?_29 ?_30 ?_31
                     function _3219 : ∀ (x_3220 : ?_32) -> ?_33
                     | x_3221 => (succ_5‹› x_3221) pf_3123)), ?_27)
check_tm((ex_7‹??_31,??_32,??_33›
           (succ_5‹› m_3122)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3222 : ∀ (x_3223 : ?_32) -> ?_33
             | x_3224 => (succ_5‹› x_3224) pf_3123)), ?_27)
infer_tm((ex_7‹??_31,??_32,??_33›
           (succ_5‹› m_3122)
           ((congr_3‹??_28,??_29,??_30›)
             ?_28 ?_29 ?_30 ?_31
             function _3225 : ∀ (x_3226 : ?_32) -> ?_33
             | x_3227 => (succ_5‹› x_3227) pf_3123)))
check_tm(?_34, Type‹??_31›)
check_tm(?_35, ?_34 -> Type‹??_32›)
check_tm((succ_5‹› m_3122), ?_34)
infer_tm((succ_5‹› m_3122))
check_tm(m_3122, nat_3)
infer_tm(m_3122)
assert_equal1( nat_3, nat_3)
assert_equal1( ?_34, nat_3)
check_tm(((congr_3‹??_28,??_29,??_30›)
           ?_28 ?_29 ?_30 ?_31
           function _3229 : ∀ (x_3230 : ?_32) -> ?_33
           | x_3231 => (succ_5‹› x_3231) pf_3123), ((?_35)
                                                         (succ_5‹›
                                                           m_3122)))
infer_tm(((congr_3‹??_28,??_29,??_30›)
           ?_28 ?_29 ?_30 ?_31
           function _3232 : ∀ (x_3233 : ?_32) -> ?_33
           | x_3234 => (succ_5‹› x_3234) pf_3123))
infer_tm(((congr_3‹??_28,??_29,??_30›)
           ?_28 ?_29 ?_30 ?_31
           function _3235 : ∀ (x_3236 : ?_32) -> ?_33
           | x_3237 => (succ_5‹› x_3237)))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28 ?_29 ?_30 ?_31))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28 ?_29 ?_30))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28 ?_29))
infer_tm(((congr_3‹??_28,??_29,??_30›) ?_28))
infer_tm(congr_3‹??_28,??_29,??_30›)
simpl_tm ~expand:false( ?_34, nat_3)
check_tm(?_28, Type‹??_28›)
check_tm(?_29, Type‹??_29›)
check_tm(?_30, ?_28)
check_tm(?_31, ?_28)
check_tm(function _3309 : ∀ (x_3310 : ?_32) -> ?_33
         | x_3311 => (succ_5‹› x_3311), forall‹??_30›(__3312 : ?_28),
                                              ?_29)
infer_tm(∀ (x_3314 : ?_32) -> ?_33)
infer_tm(?_32)
delay_assert(?_48, ??_46)
infer_tm(?_33)
simpl_tm ~expand:false( ?_48, Type‹??_46›)
delay_assert(?_49, ??_47)
simpl_tm ~expand:false( ?_49, Type‹??_47›)
assert_equal1( forall‹??_30›(__3316 : ?_28), ?_29,
  ∀ (x_3317 : ?_32) -> ?_33)
simpl_tm ~expand:false( forall‹??_30›(__3321 : ?_28), ?_29,
  ∀ (x_3322 : ?_32) -> ?_33)
simpl_tm ~expand:false( ?_28, ?_32)
simpl_tm ~expand:false( ?_29, ?_33)
simpl_tm ~expand:false( ?_28, ?_32)
simpl_tm ~expand:false( ?_29, ?_33)
check_cls {|
  prblm {| ; {|  ::: [x_3318] =>? (succ_5‹› #x_3318) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3327, x_3318 : ?_28) ::: [] =>? (succ_5‹› #x_3318) |}
  |}
|}
unify_pprbm( eq_pat?( #__3327, x_3318 : ?_28) )
simpl_pprbm ~expand:false( #__3327, #x_3318)
simpl_pprbm ~expand:false( #__3327, #x_3318)
case_coverage_ok((succ_5‹› __3327), ?_29)
check_tm((succ_5‹› __3327), ?_29)
infer_tm((succ_5‹› __3327))
check_tm(__3327, nat_3)
infer_tm(__3327)
assert_equal1( nat_3, ?_28)
assert_equal1( ?_29, nat_3)
simpl_tm ~expand:false( ?_29, nat_3)
simpl_tm ~expand:false( nat_3, ?_28)
check_tm(pf_3123, (eq_4‹??_28› nat_3 ?_30 ?_31))
infer_tm(pf_3123)
assert_equal1( (eq_4‹??_28› nat_3 ?_30 ?_31),
  ((function _3362 : nat_3 -> U
    | x_3364 => (eq_4‹??_23› nat_3 x_3364 n_2953)) m_3122))
assert_equal1( ((?_35) (succ_5‹› m_3122)),
  (eq_4‹??_29›
    nat_3
    ((function _3365 : nat_3 -> nat_3
      | x_3367 => (succ_5‹› x_3367)) ?_30)
    ((function _3368 : nat_3 -> nat_3
      | x_3370 => (succ_5‹› x_3370)) ?_31)))
assert_equal1( ?_27, (exists_5‹??_31,??_32,??_33› ?_34 ?_35))
assert_equal1(
  (exists_5‹??_21,U,L›
    nat_3
    function _3371 : nat_3 -> U
    | x_3373 => (eq_4‹??_23› nat_3 x_3373 (succ_5‹› n_2953))),
  ?_27)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_3374
    ??_2 <= s_3377
    ??_3 <= r_3379
    ??_4 <= t_3381
    ??_5 <= s_3384
    ??_6 <= s_3385
    ??_7 <= s_3386
    ??_8 <= s_3387
    ??_9 <= s_3388
    ??_10 <= s_3389
    ??_11 <= s_3391
    ??_12 <= ??_11
    ??_13 <= s_3395
    ??_14 <= ??_13
    ??_15 <= s_3400
    ??_16 <= r_3402
    ??_17 <= ??_16
    ??_18 <= ??_15
    ??_19 <= ??_16
    ??_20 <= s_3413
    ??_22 <= U
    ??_24 <= ??_23
    ??_25 <= ??_21
    ??_26 <= U
    ??_27 <= L
    ??_30 <= U
    ??_34 <= s_3420
    ??_35 <= ??_21
    ??_36 <= U
    ??_37 <= ??_23
    ??_38 <= U
    ??_39 <= s_3425
    
  |}
  imeta_meta {|
    ?_1 <= A_3428
    ?_2 <= A_3431
    ?_3 <= A_3437
    ?_4 <= A_3443
    ?_5 <= A_3449
    ?_6 <= A_3455
    ?_7 <= A_3463
    ?_8 <= B_3471
    ?_9 <= B_3479
    ?_10 <= ((f_3485) n_3487)
    ?_11 <= A_3498
    ?_12 <= B_3506
    ?_13 <= n_3510
    ?_14 <= nat_3
    ?_15 <= A_3523
    ?_16 <= nat_3
    ?_17 <= ?_16
    ?_18 <= Type‹??_22›
    ?_19 <= nat_3
    ?_20 <= nat_3
    ?_21 <= zero_4
    ?_22 <= nat_3
    ?_23 <= function _3559 : nat_3 -> U
            | x_3561 => (eq_4‹??_23› nat_3 x_3561 zero_4)
    ?_24 <= A_3567
    ?_25 <= n_3572
    ?_26 <= (exists_5‹??_21,U,L›
              nat_3
              function _3583 : nat_3 -> U
              | x_3585 => (eq_4‹??_23› nat_3 x_3585 ?_25))
    ?_28 <= nat_3
    ?_29 <= nat_3
    ?_32 <= ?_28
    ?_33 <= ?_29
    ?_34 <= nat_3
    ?_36 <= nat_3
    ?_37 <= ?_36
    ?_38 <= Type‹??_36›
    ?_39 <= nat_3
    ?_40 <= Type‹??_38›
    ?_41 <= Type‹??_39›
    ?_42 <= Type‹??_40›
    ?_43 <= Type‹??_41›
    ?_44 <= Type‹??_42›
    ?_45 <= Type‹??_43›
    ?_46 <= Type‹??_44›
    ?_47 <= Type‹??_45›
    ?_48 <= Type‹??_46›
    ?_49 <= Type‹??_47›
    
  |}
  eqns {|
    equal_tm?
      ((exists_5‹??_21,U,L›
         nat_3
         function _3720 : nat_3 -> U
         | x_3722 => (eq_4‹??_23› nat_3 x_3722 (succ_5‹› n_2953))),
      ?_27);
    equal_tm? (?_27, (exists_5‹??_31,??_32,??_33› ?_34 ?_35));
    equal_tm? (((?_35) (succ_5‹› m_3122)),
      (eq_4‹??_29›
        nat_3
        ((function _3723 : nat_3 -> nat_3
          | x_3725 => (succ_5‹› x_3725)) ?_30)
        ((function _3726 : nat_3 -> nat_3
          | x_3728 => (succ_5‹› x_3728)) ?_31)));
    equal_tm? ((eq_4‹??_28› nat_3 ?_30 ?_31),
      ((function _3729 : nat_3 -> U
        | x_3731 => (eq_4‹??_23› nat_3 x_3731 n_2953)) m_3122))
  |}
end_dump
simpl_tm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3735 : nat_3 -> U
    | x_3737 => (eq_4‹??_23› nat_3 x_3737 (succ_5‹› n_2953))),
  ?_27)
simpl_tm ~expand:false(
  (exists_5‹??_21,U,L›
    nat_3
    function _3748 : nat_3 -> U
    | x_3750 => (eq_4‹??_23› nat_3 x_3750 (succ_5‹› n_2953))),
  (exists_5‹??_31,??_32,??_33› nat_3 ?_35))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _3751 : nat_3 -> U
  | x_3753 => (eq_4‹??_23› nat_3 x_3753 (succ_5‹› n_2953)), ?_35)
simpl_tm ~expand:false(
  function _3757 : nat_3 -> U
  | x_3759 => (eq_4‹??_23› nat_3 x_3759 (succ_5‹› n_2953)), ?_35)
simpl_tm ~expand:false(
  (eq_4‹??_23› nat_3 (succ_5‹› m_3122) (succ_5‹› n_2953)),
  (eq_4‹??_29›
    nat_3
    ((function _3775 : nat_3 -> nat_3
      | x_3777 => (succ_5‹› x_3777)) ?_30)
    ((function _3778 : nat_3 -> nat_3
      | x_3780 => (succ_5‹› x_3780)) ?_31)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( (succ_5‹› m_3122), (succ_5‹› ?_30))
simpl_tm ~expand:false( m_3122, ?_30)
simpl_tm ~expand:false( (succ_5‹› n_2953), (succ_5‹› ?_31))
simpl_tm ~expand:false( n_2953, ?_31)
simpl_tm ~expand:false( m_3122, ?_30)
simpl_tm ~expand:false( n_2953, ?_31)
simpl_tm ~expand:false( (eq_4‹??_28› nat_3 m_3122 n_2953),
  (eq_4‹??_23› nat_3 m_3122 n_2953))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( m_3122, m_3122)
simpl_tm ~expand:false( n_2953, n_2953)
infer_tm(Type‹??_21›)
check_tm(nat_3, Type‹??_21›)
infer_tm(nat_3)
assert_equal1( Type‹??_21›, U)
simpl_tm ~expand:false( Type‹??_21›, U)
infer_tm(Type‹??_42›)
check_tm(nat_3, Type‹??_42›)
infer_tm(nat_3)
assert_equal1( Type‹??_42›, U)
simpl_tm ~expand:false( Type‹??_42›, U)
infer_tm(Type‹??_43›)
check_tm(U, Type‹??_43›)
infer_tm(U)
assert_equal1( Type‹??_43›, U)
simpl_tm ~expand:false( Type‹??_43›, U)
infer_tm(Type‹??_23›)
check_tm(nat_3, Type‹??_23›)
infer_tm(nat_3)
assert_equal1( Type‹??_23›, U)
simpl_tm ~expand:false( Type‹??_23›, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3)
check_tm(zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(function _3853 : nat_3 -> U
         | x_3855 => (eq_4‹U› nat_3 x_3855 zero_4), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ; {|  ::: [x_3863] =>? (eq_4‹U› nat_3 #x_3863 zero_4) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3865, x_3863 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_3863 zero_4)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__3865, x_3863 : nat_3) )
simpl_pprbm ~expand:false( #__3865, #x_3863)
simpl_pprbm ~expand:false( #__3865, #x_3863)
case_coverage_ok((eq_4‹U› nat_3 __3865 zero_4), U)
check_tm((eq_4‹U› nat_3 __3865 zero_4), U)
infer_tm((eq_4‹U› nat_3 __3865 zero_4))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(__3865, nat_3)
infer_tm(__3865)
assert_equal1( nat_3, nat_3)
check_tm(zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
infer_tm(Type‹s_2656›)
check_tm(A_2898, Type‹s_2656›)
infer_tm(A_2898)
assert_equal1( Type‹s_2656›, Type‹s_2656›)
infer_tm(nat_3)
check_tm(n_2953, nat_3)
infer_tm(n_2953)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_44›)
check_tm((exists_5‹U,U,L›
           nat_3
           function _3930 : nat_3 -> U
           | x_3932 => (eq_4‹U› nat_3 x_3932 n_2953)), Type‹??_44›)
infer_tm((exists_5‹U,U,L›
           nat_3
           function _3933 : nat_3 -> U
           | x_3935 => (eq_4‹U› nat_3 x_3935 n_2953)))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(function _3936 : nat_3 -> U
         | x_3938 => (eq_4‹U› nat_3 x_3938 n_2953), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ; {|  ::: [x_3946] =>? (eq_4‹U› nat_3 #x_3946 n_2953) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3948, x_3946 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_3946 n_2953)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__3948, x_3946 : nat_3) )
simpl_pprbm ~expand:false( #__3948, #x_3946)
simpl_pprbm ~expand:false( #__3948, #x_3946)
case_coverage_ok((eq_4‹U› nat_3 __3948 n_2953), U)
check_tm((eq_4‹U› nat_3 __3948 n_2953), U)
infer_tm((eq_4‹U› nat_3 __3948 n_2953))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(__3948, nat_3)
infer_tm(__3948)
assert_equal1( nat_3, nat_3)
check_tm(n_2953, nat_3)
infer_tm(n_2953)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( Type‹??_44›, L)
simpl_tm ~expand:false( Type‹??_44›, L)
infer_tm(Type‹??_45›)
check_tm((exists_5‹U,U,L›
           nat_3
           function _3986 : nat_3 -> U
           | x_3988 => (eq_4‹U› nat_3 x_3988 (succ_5‹› n_2953))), Type‹??_45›)
infer_tm((exists_5‹U,U,L›
           nat_3
           function _3989 : nat_3 -> U
           | x_3991 => (eq_4‹U› nat_3 x_3991 (succ_5‹› n_2953))))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(function _3992 : nat_3 -> U
         | x_3994 => (eq_4‹U› nat_3 x_3994 (succ_5‹› n_2953)), 
nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ;
    {|  ::: [x_4002] =>? (eq_4‹U› nat_3 #x_4002 (succ_5‹› n_2953)) |}
  |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4004, x_4002 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4002 (succ_5‹› n_2953))
    |}
  |}
|}
unify_pprbm( eq_pat?( #__4004, x_4002 : nat_3) )
simpl_pprbm ~expand:false( #__4004, #x_4002)
simpl_pprbm ~expand:false( #__4004, #x_4002)
case_coverage_ok((eq_4‹U› nat_3 __4004 (succ_5‹› n_2953)), U)
check_tm((eq_4‹U› nat_3 __4004 (succ_5‹› n_2953)), U)
infer_tm((eq_4‹U› nat_3 __4004 (succ_5‹› n_2953)))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(__4004, nat_3)
infer_tm(__4004)
assert_equal1( nat_3, nat_3)
check_tm((succ_5‹› n_2953), nat_3)
infer_tm((succ_5‹› n_2953))
check_tm(n_2953, nat_3)
infer_tm(n_2953)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( Type‹??_45›, L)
simpl_tm ~expand:false( Type‹??_45›, L)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3)
check_tm(m_3122, nat_3)
infer_tm(m_3122)
assert_equal1( nat_3, nat_3)
infer_tm(nat_3)
check_tm(n_2953, nat_3)
infer_tm(n_2953)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_46›)
check_tm(nat_3, Type‹??_46›)
infer_tm(nat_3)
assert_equal1( Type‹??_46›, U)
simpl_tm ~expand:false( Type‹??_46›, U)
infer_tm(Type‹??_47›)
check_tm(nat_3, Type‹??_47›)
infer_tm(nat_3)
assert_equal1( Type‹??_47›, U)
simpl_tm ~expand:false( Type‹??_47›, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(function _4198 : nat_3 -> U
         | x_4200 => (eq_4‹U› nat_3 x_4200 (succ_5‹› n_2953)), 
nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ;
    {|  ::: [x_4208] =>? (eq_4‹U› nat_3 #x_4208 (succ_5‹› n_2953)) |}
  |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4210, x_4208 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4208 (succ_5‹› n_2953))
    |}
  |}
|}
unify_pprbm( eq_pat?( #__4210, x_4208 : nat_3) )
simpl_pprbm ~expand:false( #__4210, #x_4208)
simpl_pprbm ~expand:false( #__4210, #x_4208)
case_coverage_ok((eq_4‹U› nat_3 __4210 (succ_5‹› n_2953)), U)
check_tm((eq_4‹U› nat_3 __4210 (succ_5‹› n_2953)), U)
infer_tm((eq_4‹U› nat_3 __4210 (succ_5‹› n_2953)))
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(__4210, nat_3)
infer_tm(__4210)
assert_equal1( nat_3, nat_3)
check_tm((succ_5‹› n_2953), nat_3)
infer_tm((succ_5‹› n_2953))
check_tm(n_2953, nat_3)
infer_tm(n_2953)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_40›)
check_tm(nat_3, Type‹??_40›)
infer_tm(nat_3)
assert_equal1( Type‹??_40›, U)
simpl_tm ~expand:false( Type‹??_40›, U)
infer_tm(Type‹??_41›)
check_tm(U, Type‹??_41›)
infer_tm(U)
assert_equal1( Type‹??_41›, U)
simpl_tm ~expand:false( Type‹??_41›, U)
infer_tm(U)
check_tm(nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
----------------------------------

smeta_meta {|
  ??_1 <= s_4314
  ??_2 <= s_4317
  ??_3 <= r_4319
  ??_4 <= t_4321
  ??_5 <= s_4324
  ??_6 <= s_4325
  ??_7 <= s_4326
  ??_8 <= s_4327
  ??_9 <= s_4328
  ??_10 <= s_4329
  ??_11 <= s_4331
  ??_12 <= ??_11
  ??_13 <= s_4335
  ??_14 <= ??_13
  ??_15 <= s_4340
  ??_16 <= r_4342
  ??_17 <= ??_16
  ??_18 <= ??_15
  ??_19 <= ??_16
  ??_20 <= s_4353
  ??_21 <= U
  ??_22 <= U
  ??_23 <= U
  ??_24 <= ??_23
  ??_25 <= ??_21
  ??_26 <= U
  ??_27 <= L
  ??_28 <= ??_23
  ??_29 <= ??_23
  ??_30 <= U
  ??_31 <= ??_21
  ??_32 <= U
  ??_33 <= L
  ??_34 <= s_4367
  ??_35 <= ??_21
  ??_36 <= U
  ??_37 <= ??_23
  ??_38 <= U
  ??_39 <= s_4372
  ??_40 <= U
  ??_41 <= U
  ??_42 <= U
  ??_43 <= U
  ??_44 <= L
  ??_45 <= L
  ??_46 <= U
  ??_47 <= U
  
|}
imeta_meta {|
  ?_1 <= A_4383
  ?_2 <= A_4386
  ?_3 <= A_4392
  ?_4 <= A_4398
  ?_5 <= A_4404
  ?_6 <= A_4410
  ?_7 <= A_4418
  ?_8 <= B_4426
  ?_9 <= B_4434
  ?_10 <= ((f_4440) n_4442)
  ?_11 <= A_4453
  ?_12 <= B_4461
  ?_13 <= n_4465
  ?_14 <= nat_3
  ?_15 <= A_4478
  ?_16 <= nat_3
  ?_17 <= ?_16
  ?_18 <= Type‹??_22›
  ?_19 <= nat_3
  ?_20 <= nat_3
  ?_21 <= zero_4
  ?_22 <= nat_3
  ?_23 <= function _4514 : nat_3 -> U
          | x_4516 => (eq_4‹??_23› nat_3 x_4516 zero_4)
  ?_24 <= A_4522
  ?_25 <= n_4527
  ?_26 <= (exists_5‹??_21,U,L›
            nat_3
            function _4538 : nat_3 -> U
            | x_4540 => (eq_4‹??_23› nat_3 x_4540 ?_25))
  ?_27 <= (exists_5‹??_21,U,L›
            nat_3
            function _4549 : nat_3 -> U
            | x_4551 => (eq_4‹??_23› nat_3 x_4551 (succ_5‹› n_4545)))
  ?_28 <= nat_3
  ?_29 <= nat_3
  ?_30 <= m_4572
  ?_31 <= n_4584
  ?_32 <= ?_28
  ?_33 <= ?_29
  ?_34 <= nat_3
  ?_35 <= function _4625 : nat_3 -> U
          | x_4627 => (eq_4‹??_23› nat_3 x_4627 (succ_5‹› n_4621))
  ?_36 <= nat_3
  ?_37 <= ?_36
  ?_38 <= Type‹??_36›
  ?_39 <= nat_3
  ?_40 <= Type‹??_38›
  ?_41 <= Type‹??_39›
  ?_42 <= Type‹??_40›
  ?_43 <= Type‹??_41›
  ?_44 <= Type‹??_42›
  ?_45 <= Type‹??_43›
  ?_46 <= Type‹??_44›
  ?_47 <= Type‹??_45›
  ?_48 <= Type‹??_46›
  ?_49 <= Type‹??_47›
  
|}
#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_5178 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_5179› (A_5180 : Type‹s_5179›) (m_5181 : A_5180):
  A_5180 -> U
where
| refl_6 : (eq_4‹s_5179› A_5180 m_5181 m_5181)

#[program]
inductive exists_5‹s_5183,r_5184,t_5185› (A_5186 : Type‹s_5183›) (B_5187 : 
A_5186 -> Type‹r_5184›): Type‹t_5185› where
| ex_7
    (m_5189 : A_5186) {pf_5190 : ((B_5187) m_5189)}
    : (exists_5‹s_5183,r_5184,t_5185› A_5186 B_5187)

#[program]
inductive sing_6‹s_5191› (A_5192 : Type‹s_5191›):
  A_5192 -> Type‹s_5191›
where
| just_8 (m_5194 : A_5192) : (sing_6‹s_5191› A_5192 m_5194)

#[program]
inductive list_7‹s_5195› (A_5196 : Type‹s_5195›): U where
| nil_9 : (list_7‹s_5195› A_5196)
| cons_10
    (hd_5197 : A_5196) (tl_5198 : (list_7‹s_5195› A_5196))
    : (list_7‹s_5195› A_5196)

#[program]
inductive vec_8‹s_5199› (A_5200 : Type‹s_5199›): nat_3 -> U where
| vnil_11 : (vec_8‹s_5199› A_5200 zero_4)
| vcons_12
    {n_5202 : nat_3} (hd_5203 : A_5200)
    (tl_5204 : (vec_8‹s_5199› A_5200 n_5202))
    : (vec_8‹s_5199› A_5200 (succ_5‹› n_5202))

#[program]
def rwl_1‹s_5205,r_5206› :
  ∀ {A_5207 : Type‹s_5205›} ->
    ∀ {m_5208 : A_5207} ->
      ∀ {n_5209 : A_5207} ->
        ∀ {B_5210 : A_5207 -> Type‹r_5206›} ->
          (eq_4‹s_5205› A_5207 m_5208 n_5209) ->
            ((B_5210) m_5208) -> ((B_5210) n_5209)
:=
  function rwl_5214 :
    ∀ {A_5215 : Type‹s_5205›} ->
      ∀ {m_5216 : A_5215} ->
        ∀ {n_5217 : A_5215} ->
          ∀ {B_5218 : A_5215 -> Type‹r_5206›} ->
            (eq_4‹s_5205› A_5215 m_5216 n_5217) ->
              ((B_5218) m_5216) -> ((B_5218) n_5217)
  | A_5222 m_5223 n_5224 B_5225 refl_6 x_5226 => x_5226

#[program]
def rwr_2‹s_5227,r_5228› :
  ∀ {A_5229 : Type‹s_5227›} ->
    ∀ {m_5230 : A_5229} ->
      ∀ {n_5231 : A_5229} ->
        ∀ {B_5232 : A_5229 -> Type‹r_5228›} ->
          (eq_4‹s_5227› A_5229 m_5230 n_5231) ->
            ((B_5232) n_5231) -> ((B_5232) m_5230)
:=
  function rwr_5236 :
    ∀ {A_5237 : Type‹s_5227›} ->
      ∀ {m_5238 : A_5237} ->
        ∀ {n_5239 : A_5237} ->
          ∀ {B_5240 : A_5237 -> Type‹r_5228›} ->
            (eq_4‹s_5227› A_5237 m_5238 n_5239) ->
              ((B_5240) n_5239) -> ((B_5240) m_5238)
  | A_5244 m_5245 n_5246 B_5247 refl_6 x_5248 => x_5248

#[logical]
def congr_3‹s_5249,r_5250,t_5251› :
  ∀ (A_5252 : Type‹s_5249›) ->
    ∀ (B_5253 : Type‹r_5250›) ->
      ∀ (m_5254 : A_5252) ->
        ∀ (n_5255 : A_5252) ->
          ∀ (f_5256 : forall‹t_5251›(__5257 : A_5252), B_5253) ->
            (eq_4‹s_5249› A_5252 m_5254 n_5255) ->
              (eq_4‹r_5250› B_5253 ((f_5256) m_5254) ((f_5256) n_5255))
:=
  function congr_5259 :
    ∀ (A_5260 : Type‹s_5249›) ->
      ∀ (B_5261 : Type‹r_5250›) ->
        ∀ (m_5262 : A_5260) ->
          ∀ (n_5263 : A_5260) ->
            ∀ (f_5264 : forall‹t_5251›(__5265 : A_5260), B_5261) ->
              (eq_4‹s_5249› A_5260 m_5262 n_5263) ->
                (eq_4‹r_5250› B_5261 ((f_5264) m_5262) ((f_5264) n_5263))
  | A_5267 B_5268 m_5269 n_5270 f_5271 refl_6 => refl_6‹r_5250›

#[program]
def hd_vec_4‹s_5272› :
  ∀ {A_5273 : Type‹s_5272›} ->
    ∀ {n_5274 : nat_3} ->
      (vec_8‹s_5272› A_5273 (succ_5‹› n_5274)) -> A_5273
:=
  function hd_vec_5276 :
    ∀ {A_5277 : Type‹s_5272›} ->
      ∀ {n_5278 : nat_3} ->
        (vec_8‹s_5272› A_5277 (succ_5‹› n_5278)) -> A_5277
  | A_5280 n_5281 vnil_11 =>
  | A_5282 n_5283 (vcons_12 _5284 hd_5285 _5286) => hd_5285

#[program]
def hd_vec2_5‹s_5287› :
  ∀ {A_5288 : Type‹s_5287›} ->
    ∀ {n_5289 : nat_3} ->
      (vec_8‹s_5287› A_5288 (succ_5‹› n_5289)) -> A_5288
:=
  function hd_vec2_5291 :
    ∀ {A_5292 : Type‹s_5287›} ->
      ∀ {n_5293 : nat_3} ->
        (vec_8‹s_5287› A_5292 (succ_5‹› n_5293)) -> A_5292
  | A_5295 n_5296 xs_5297 =>
    match n_5296, xs_5297 in
      ∀ {n0_5298 : nat_3} -o
        (vec_8‹s_5287› A_5295 (succ_5‹› n0_5298)) -o A_5295
    with
    | _5300, vnil_11 =>
    | _5301, (vcons_12 _5302 hd_5303 _5304) => hd_5303

#[program]
def vlength_6‹s_5305› :
  ∀ {A_5306 : Type‹s_5305›} ->
    ∀ {n_5307 : nat_3} ->
      (vec_8‹s_5305› A_5306 n_5307) ->
        (exists_5‹U,U,L›
          nat_3
          function _5309 : nat_3 -> U
          | x_5311 => (eq_4‹U› nat_3 x_5311 n_5307))
:=
  function vlength_5312 :
    ∀ {A_5313 : Type‹s_5305›} ->
      ∀ {n_5314 : nat_3} ->
        (vec_8‹s_5305› A_5313 n_5314) ->
          (exists_5‹U,U,L›
            nat_3
            function _5316 : nat_3 -> U
            | x_5318 => (eq_4‹U› nat_3 x_5318 n_5314))
  | A_5319 n_5320 vnil_11 => (ex_7‹U,U,L› zero_4 refl_6‹U›)
  | A_5321 n_5322 (vcons_12 _5323 _5324 tl_5325) =>
    match ((vlength_5312) A_5321 _5323 tl_5325) in
      (exists_5‹U,U,L›
        nat_3
        function _5327 : nat_3 -> U
        | x_5329 => (eq_4‹U› nat_3 x_5329 _5323)) -o
        (exists_5‹U,U,L›
          nat_3
          function _5330 : nat_3 -> U
          | x_5332 => (eq_4‹U› nat_3 x_5332 (succ_5‹› _5323)))
    with
    | (ex_7 n_5333 pf_5334) =>
      (ex_7‹U,U,L›
        (succ_5‹› n_5333)
        ((congr_3‹U,U,U›)
          nat_3 nat_3 n_5333 _5323
          function _5335 : nat_3 -> nat_3
          | x_5337 => (succ_5‹› x_5337) pf_5334))

-----------------------------------------

