[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase ((TBase (Type U)), [(DMul ("tt", (TBase (Id "unit"))))]))))};
  Inductive {name = "nat"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("zero", (TBase (Id "nat"))));
             (DMul ("succ",
                (TBind (R, (Id "nat"), (Binder ("pred", (TBase (Id "nat"))))
                   ))
                ))
             ]))
       ))};
  Inductive {name = "eq"; relv = N;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Id "A"),
                (Binder ("m",
                   (PBase
                      ((TBind (R, (Id "A"), (Binder ("_", (TBase (Type U))))
                          )),
                       [(DMul ("refl",
                           (TBase
                              (App [(Id "eq"); (Id "_"); (Id "m"); (Id "m")]))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "exists"; relv = R;
    body =
    (Binder (["s"; "r"; "t"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Pi (R, U, (Id "A"), (Binder ("_", (Type (SId "r")))))),
                (Binder ("B",
                   (PBase
                      ((TBase (Type (SId "t"))),
                       [(DMul ("ex",
                           (TBind (R, (Id "A"),
                              (Binder ("m",
                                 (TBind (N, (App [(Id "B"); (Id "m")]),
                                    (Binder ("pf",
                                       (TBase
                                          (App
                                             [(Id "exists"); (Id "A");
                                               (Id "B")]))
                                       ))
                                    ))
                                 ))
                              ))
                           ))
                         ]))
                   ))
                ))
             ))
          ))
       ))};
  Inductive {name = "sing"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id "A"),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DMul ("just",
                     (TBind (R, (Id "A"),
                        (Binder ("m",
                           (TBase (App [(Id "sing"); (Id "_"); (Id "m")]))))
                        ))
                     ))
                   ]))
             ))
          ))
       ))};
  Definition {name = "sing_eq"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "A"),
                    (Binder ("m",
                       (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "m")]),
                          (Binder ("_",
                             (App
                                [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                                  (Id "_");
                                  (Fun (
                                     (Pi (R, U, (Id "_"),
                                        (Binder ("x", (Id "_"))))),
                                     (Binder (None,
                                        [([(PId "x")],
                                          (Some (App
                                                   [(Id "eq"); (Id "_");
                                                     (Id "x"); (Id "m")])))
                                          ]
                                        ))
                                     ))
                                  ])
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "sing_eq"),
              [([(PId "A"); (PId "m"); (PMul ("just", [(PId "m")]))],
                (Some (App [(Id "ex"); (Id "m"); (Id "refl")])))]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "A"),
                 (Binder ("m",
                    (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "m")]),
                       (Binder ("_",
                          (App
                             [(Inst ("exists", [(SId "_"); (SId "_"); L]));
                               (Id "_");
                               (Fun (
                                  (Pi (R, U, (Id "_"),
                                     (Binder ("x", (Id "_"))))),
                                  (Binder (None,
                                     [([(PId "x")],
                                       (Some (App
                                                [(Id "eq"); (Id "_");
                                                  (Id "x"); (Id "m")])))
                                       ]
                                     ))
                                  ))
                               ])
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))};
  Definition {name = "sing_double"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id "A"),
                    (Binder ("m",
                       (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "m")]),
                          (Binder ("_",
                             (Pi (R, U,
                                (App [(Id "sing"); (Id "_"); (Id "m")]),
                                (Binder ("_", (Id "unit")))))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "sing_double"),
              [([(PId "A"); (PId "m"); (PMul ("just", [(PId "x")]));
                  (PMul ("just", [(PId "y")]))],
                (Some (Let (R,
                         (Ann ((Id "refl"),
                            (App [(Id "eq"); (Id "_"); (Id "x"); (Id "y")]))),
                         (Binder ("pf", (Id "tt")))))))
                ]
              ))
           )),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id "A"),
                 (Binder ("m",
                    (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "m")]),
                       (Binder ("_",
                          (Pi (R, U, (App [(Id "sing"); (Id "_"); (Id "m")]),
                             (Binder ("_", (Id "unit")))))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ))}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive nat_2‹› : U where
| zero_2 : nat_2
| succ_3 (pred_60 : nat_2) : nat_2

#[logical]
inductive eq_3‹s_61› (A_62 : Type‹s_61›) (m_63 : A_62): A_62 -> U
where
| refl_4 : (eq_3‹??_1› ?_1 m_63 m_63)

#[program]
inductive exists_4‹s_65,r_66,t_67› (A_68 : Type‹s_65›) (B_69 : 
A_68 -> Type‹r_66›): Type‹t_67› where
| ex_5
    (m_71 : A_68) {pf_72 : (B_69) m_71}
    : (exists_4‹??_2,??_3,??_4› A_68 B_69)

#[program]
inductive sing_5‹s_73› (A_74 : Type‹s_73›): A_74 -> Type‹s_73›
where
| just_6 (m_76 : A_74) : (sing_5‹??_5› ?_2 m_76)

#[program]
def sing_eq_1‹s_77› :
  ∀ {A_78 : Type‹s_77›} ->
    ∀ {m_79 : A_78} ->
      ∀ (__80 : (sing_5‹??_14› ?_12 m_79)) ->
        (exists_4‹??_15,??_16,L›
          ?_13
          function _81 : ∀ (x_82 : ?_14) -> ?_15
          | x_83 => (eq_3‹??_17› ?_16 x_83 m_79))
:=
  function sing_eq_84 :
    ∀ {A_85 : Type‹s_77›} ->
      ∀ {m_86 : A_85} ->
        ∀ (__87 : (sing_5‹??_6› ?_3 m_86)) ->
          (exists_4‹??_7,??_8,L›
            ?_4
            function _88 : ∀ (x_89 : ?_5) -> ?_6
            | x_90 => (eq_3‹??_9› ?_7 x_90 m_86))
  | A_91 m_92 (just_6 m_93) =>
    (ex_5‹??_11,??_12,??_13› m_93 refl_4‹??_10›)

#[program]
def sing_double_2‹s_94› :
  ∀ {A_95 : Type‹s_94›} ->
    ∀ {m_96 : A_95} ->
      ∀ (__97 : (sing_5‹??_22› ?_22 m_96)) ->
        (sing_5‹??_23› ?_23 m_96) -> unit_1
:=
  function sing_double_99 :
    ∀ {A_100 : Type‹s_94›} ->
      ∀ {m_101 : A_100} ->
        ∀ (__102 : (sing_5‹??_18› ?_17 m_101)) ->
          (sing_5‹??_19› ?_18 m_101) -> unit_1
  | A_104 m_105 (just_6 x_106) (just_6 y_107) =>
    let pf_108 := (refl_4‹??_20› : (eq_3‹??_21› ?_21 x_106 y_107)) in
    tt_1

-----------------------------------------

inductive-------------------------
infer_tm(unit_1)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(nat_2)
infer_tm(nat_2)
infer_tm(nat_2)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_111›)
infer_tm(A_112)
infer_tm(A_112)
infer_tm(Type‹s_115›)
infer_tm(A_116)
assert_equal1( A_116, ?_1)
assert_equal1( m_117, m_117)
infer_tm((eq_3‹??_1› ?_1 m_117 m_117))
check_tm(?_1, Type‹??_1›)
check_tm(m_117, ?_1)
infer_tm(m_117)
assert_equal1( ?_1, A_116)
check_tm(m_117, ?_1)
infer_tm(m_117)
assert_equal1( ?_1, A_116)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_118
    
  |}
  imeta_meta {|
    ?_1 <= A_121
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_115›)
check_tm(A_116, Type‹s_115›)
infer_tm(A_116)
assert_equal1( Type‹s_115›, Type‹s_115›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_133›)
infer_tm(A_136 -> Type‹r_134›)
infer_tm(A_136)
infer_tm(Type‹r_134›)
infer_tm(Type‹s_140›)
infer_tm(A_143 -> Type‹r_141›)
infer_tm(A_143)
infer_tm(Type‹r_141›)
infer_tm(A_143)
infer_tm((B_144) m_147)
infer_tm(B_144)
check_tm(m_147, A_143)
infer_tm(m_147)
assert_equal1( A_143, A_143)
assert_equal1( A_143, A_143)
assert_equal1( B_144, B_144)
infer_tm((exists_4‹??_2,??_3,??_4› A_143 B_144))
check_tm(A_143, Type‹??_2›)
infer_tm(A_143)
assert_equal1( Type‹??_2›, Type‹s_140›)
check_tm(B_144, A_143 -> Type‹??_3›)
infer_tm(B_144)
assert_equal1( A_143 -> Type‹??_3›, A_143 -> Type‹r_141›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_160
    ??_2 <= s_163
    ??_3 <= r_165
    ??_4 <= t_167
    
  |}
  imeta_meta {|
    ?_1 <= A_172
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_204›)
infer_tm(A_205)
infer_tm(Type‹s_207›)
infer_tm(A_208)
assert_equal1( A_208, ?_2)
infer_tm((sing_5‹??_5› ?_2 m_209))
check_tm(?_2, Type‹??_5›)
check_tm(m_209, ?_2)
infer_tm(m_209)
assert_equal1( ?_2, A_208)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_210
    ??_2 <= s_213
    ??_3 <= r_215
    ??_4 <= t_217
    ??_5 <= s_220
    
  |}
  imeta_meta {|
    ?_1 <= A_223
    ?_2 <= A_226
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_207›)
check_tm(A_208, Type‹s_207›)
infer_tm(A_208)
assert_equal1( Type‹s_207›, Type‹s_207›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_240 : Type‹s_239›} ->
           ∀ {m_241 : A_240} ->
             ∀ (__242 : (sing_5‹??_14› ?_12 m_241)) ->
               (exists_4‹??_15,??_16,L›
                 ?_13
                 function _243 : ∀ (x_244 : ?_14) -> ?_15
                 | x_245 => (eq_3‹??_17› ?_16 x_245 m_241)))
infer_tm(Type‹s_239›)
infer_tm(∀ {m_247 : A_246} ->
           ∀ (__248 : (sing_5‹??_14› ?_12 m_247)) ->
             (exists_4‹??_15,??_16,L›
               ?_13
               function _249 : ∀ (x_250 : ?_14) -> ?_15
               | x_251 => (eq_3‹??_17› ?_16 x_251 m_247)))
infer_tm(A_246)
infer_tm(∀ (__253 : (sing_5‹??_14› ?_12 m_252)) ->
           (exists_4‹??_15,??_16,L›
             ?_13
             function _254 : ∀ (x_255 : ?_14) -> ?_15
             | x_256 => (eq_3‹??_17› ?_16 x_256 m_252)))
infer_tm((sing_5‹??_14› ?_12 m_252))
check_tm(?_12, Type‹??_14›)
check_tm(m_252, ?_12)
infer_tm(m_252)
assert_equal1( ?_12, A_246)
infer_tm((exists_4‹??_15,??_16,L›
           ?_13
           function _258 : ∀ (x_259 : ?_14) -> ?_15
           | x_260 => (eq_3‹??_17› ?_16 x_260 m_252)))
check_tm(?_13, Type‹??_15›)
check_tm(function _261 : ∀ (x_262 : ?_14) -> ?_15
         | x_263 => (eq_3‹??_17› ?_16 x_263 m_252), ?_13 ->
                                                          Type‹??_16›)
infer_tm(function _265 : ∀ (x_266 : ?_14) -> ?_15
         | x_267 => (eq_3‹??_17› ?_16 x_267 m_252))
infer_tm(∀ (x_269 : ?_14) -> ?_15)
infer_tm(?_14)
delay_assert(?_24, ??_24)
infer_tm(?_15)
delay_assert(?_25, ??_25)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_273, x_271 : ?_14) ::: [] =>?
         (eq_3‹??_17› ?_16 #x_271 m_252)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_273, x_271 : ?_14) )
case_coverage_ok((eq_3‹??_17› ?_16 #x_273 m_252), ?_15)
check_tm((eq_3‹??_17› ?_16 #x_273 m_252), ?_15)
infer_tm((eq_3‹??_17› ?_16 #x_273 m_252))
check_tm(?_16, Type‹??_17›)
check_tm(#x_273, ?_16)
infer_tm(#x_273)
assert_equal1( ?_16, ?_14)
check_tm(m_252, ?_16)
infer_tm(m_252)
assert_equal1( ?_16, A_246)
assert_equal1( ?_15, U)
assert_equal1( ?_13 -> Type‹??_16›, ∀ (x_276 : ?_14) -> ?_15)
check_tm(function sing_eq_281 :
           ∀ {A_282 : Type‹s_239›} ->
             ∀ {m_283 : A_282} ->
               ∀ (__284 : (sing_5‹??_6› ?_3 m_283)) ->
                 (exists_4‹??_7,??_8,L›
                   ?_4
                   function _285 : ∀ (x_286 : ?_5) -> ?_6
                   | x_287 => (eq_3‹??_9› ?_7 x_287 m_283))
         | A_288 m_289 (just_6 m_290) =>
           (ex_5‹??_11,??_12,??_13› m_290 refl_4‹??_10›), ∀ {A_291 :
                                                                    Type‹s_239›} ->
                                                                    ∀ {m_292 :
                                                                    A_291} ->
                                                                    ∀ (__293 :
                                                                    (sing_5‹??_14›
                                                                    ?_12
                                                                    m_292)) ->
                                                                    (exists_4‹??_15,??_16,L›
                                                                    ?_13
                                                                    function _294 :
                                                                    ∀ (x_295 :
                                                                    ?_14) ->
                                                                    ?_15
                                                                    | 
                                                                    x_296 =>
                                                                    (eq_3‹??_17›
                                                                    ?_16
                                                                    x_296
                                                                    m_292)))
infer_tm(function sing_eq_297 :
           ∀ {A_298 : Type‹s_239›} ->
             ∀ {m_299 : A_298} ->
               ∀ (__300 : (sing_5‹??_6› ?_3 m_299)) ->
                 (exists_4‹??_7,??_8,L›
                   ?_4
                   function _301 : ∀ (x_302 : ?_5) -> ?_6
                   | x_303 => (eq_3‹??_9› ?_7 x_303 m_299))
         | A_304 m_305 (just_6 m_306) =>
           (ex_5‹??_11,??_12,??_13› m_306 refl_4‹??_10›))
infer_tm(∀ {A_308 : Type‹s_239›} ->
           ∀ {m_309 : A_308} ->
             ∀ (__310 : (sing_5‹??_6› ?_3 m_309)) ->
               (exists_4‹??_7,??_8,L›
                 ?_4
                 function _311 : ∀ (x_312 : ?_5) -> ?_6
                 | x_313 => (eq_3‹??_9› ?_7 x_313 m_309)))
infer_tm(Type‹s_239›)
infer_tm(∀ {m_315 : A_314} ->
           ∀ (__316 : (sing_5‹??_6› ?_3 m_315)) ->
             (exists_4‹??_7,??_8,L›
               ?_4
               function _317 : ∀ (x_318 : ?_5) -> ?_6
               | x_319 => (eq_3‹??_9› ?_7 x_319 m_315)))
infer_tm(A_314)
infer_tm(∀ (__321 : (sing_5‹??_6› ?_3 m_320)) ->
           (exists_4‹??_7,??_8,L›
             ?_4
             function _322 : ∀ (x_323 : ?_5) -> ?_6
             | x_324 => (eq_3‹??_9› ?_7 x_324 m_320)))
infer_tm((sing_5‹??_6› ?_3 m_320))
check_tm(?_3, Type‹??_6›)
check_tm(m_320, ?_3)
infer_tm(m_320)
assert_equal1( ?_3, A_314)
infer_tm((exists_4‹??_7,??_8,L›
           ?_4
           function _326 : ∀ (x_327 : ?_5) -> ?_6
           | x_328 => (eq_3‹??_9› ?_7 x_328 m_320)))
check_tm(?_4, Type‹??_7›)
check_tm(function _329 : ∀ (x_330 : ?_5) -> ?_6
         | x_331 => (eq_3‹??_9› ?_7 x_331 m_320), ?_4 -> Type‹??_8›)
infer_tm(function _333 : ∀ (x_334 : ?_5) -> ?_6
         | x_335 => (eq_3‹??_9› ?_7 x_335 m_320))
infer_tm(∀ (x_337 : ?_5) -> ?_6)
infer_tm(?_5)
delay_assert(?_26, ??_26)
infer_tm(?_6)
delay_assert(?_27, ??_27)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_341, x_339 : ?_5) ::: [] =>?
         (eq_3‹??_9› ?_7 #x_339 m_320)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_341, x_339 : ?_5) )
case_coverage_ok((eq_3‹??_9› ?_7 #x_341 m_320), ?_6)
check_tm((eq_3‹??_9› ?_7 #x_341 m_320), ?_6)
infer_tm((eq_3‹??_9› ?_7 #x_341 m_320))
check_tm(?_7, Type‹??_9›)
check_tm(#x_341, ?_7)
infer_tm(#x_341)
assert_equal1( ?_7, ?_5)
check_tm(m_320, ?_7)
infer_tm(m_320)
assert_equal1( ?_7, A_314)
assert_equal1( ?_6, U)
assert_equal1( ?_4 -> Type‹??_8›, ∀ (x_344 : ?_5) -> ?_6)
case_coverage{|
  prblm {|
    eq_term?( (sing_5‹??_6› #A_367 #m_368),
      (sing_5‹??_6› #A_367 #m_370));
    {| eq_pat?( #A_367, A_349 : Type‹s_239›)
       eq_pat?( #m_368, m_350 : #A_367)
       eq_pat?( #m_370, m_351 : #A_367) ::: [] =>?
         (ex_5‹??_11,??_12,??_13› #m_351 refl_4‹??_10›)
    |}
  |}
|}
unify_pprbm(
  eq_term?( (sing_5‹??_6› #A_367 #m_368),
    (sing_5‹??_6› #A_367 #m_370))
  eq_pat?( #A_367, A_349 : Type‹s_239›)
  eq_pat?( #m_368, m_350 : #A_367)
  eq_pat?( #m_370, m_351 : #A_367)
)
case_coverage_ok((ex_5‹??_11,??_12,??_13› #m_370 refl_4‹??_10›), 
(exists_4‹??_7,U,L›
  #A_367
  function _413 : #A_367 -> U
  | x_415 => (eq_3‹??_9› #A_367 x_415 #m_370)))
check_tm((ex_5‹??_11,??_12,??_13› #m_370 refl_4‹??_10›), (exists_4‹??_7,U,L›
                                                                   #A_367
                                                                   function _416 :
                                                                    #A_367 ->
                                                                    U
                                                                   | 
                                                                   x_418 =>
                                                                   (eq_3‹??_9›
                                                                    #A_367
                                                                    x_418
                                                                    #m_370)))
infer_tm((ex_5‹??_11,??_12,??_13› #m_370 refl_4‹??_10›))
check_tm(?_10, Type‹??_11›)
check_tm(?_11, ?_10 -> Type‹??_12›)
check_tm(#m_370, ?_10)
infer_tm(#m_370)
assert_equal1( ?_10, #A_367)
check_tm(refl_4‹??_10›, (?_11) #m_370)
infer_tm(refl_4‹??_10›)
check_tm(?_8, Type‹??_10›)
check_tm(?_9, ?_8)
assert_equal1( (?_11) #m_370, (eq_3‹??_10› ?_8 ?_9 ?_9))
assert_equal1(
  (exists_4‹??_7,U,L›
    #A_367
    function _420 : #A_367 -> U
    | x_422 => (eq_3‹??_9› #A_367 x_422 #m_370)),
  (exists_4‹??_11,??_12,??_13› ?_10 ?_11))
assert_equal1(
  ∀ {A_423 : Type‹s_239›} ->
    ∀ {m_424 : A_423} ->
      ∀ (__425 : (sing_5‹??_14› ?_12 m_424)) ->
        (exists_4‹??_15,??_16,L›
          ?_13
          function _426 : ∀ (x_427 : ?_14) -> ?_15
          | x_428 => (eq_3‹??_17› ?_16 x_428 m_424)),
  ∀ {A_429 : Type‹s_239›} ->
    ∀ {m_430 : A_429} ->
      ∀ (__431 : (sing_5‹??_6› ?_3 m_430)) ->
        (exists_4‹??_7,??_8,L›
          ?_4
          function _432 : ∀ (x_433 : ?_5) -> ?_6
          | x_434 => (eq_3‹??_9› ?_7 x_434 m_430)))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_445
    ??_2 <= s_448
    ??_3 <= r_450
    ??_4 <= t_452
    ??_5 <= s_455
    ??_8 <= U
    ??_16 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_460
    ?_2 <= A_463
    ?_3 <= A_466
    ?_4 <= A_470
    ?_5 <= ?_4
    ?_6 <= Type‹??_8›
    ?_7 <= A_484
    ?_12 <= A_487
    ?_13 <= A_491
    ?_14 <= ?_13
    ?_15 <= Type‹??_16›
    ?_16 <= A_505
    ?_24 <= Type‹??_24›
    ?_25 <= Type‹??_25›
    ?_26 <= Type‹??_26›
    ?_27 <= Type‹??_27›
    
  |}
  eqns {|
    equal_tm?
      (∀ {A_524 : Type‹s_239›} ->
         ∀ {m_525 : A_524} ->
           ∀ (__526 : (sing_5‹??_14› ?_12 m_525)) ->
             (exists_4‹??_15,??_16,L›
               ?_13
               function _527 : ∀ (x_528 : ?_14) -> ?_15
               | x_529 => (eq_3‹??_17› ?_16 x_529 m_525)),
      ∀ {A_530 : Type‹s_239›} ->
        ∀ {m_531 : A_530} ->
          ∀ (__532 : (sing_5‹??_6› ?_3 m_531)) ->
            (exists_4‹??_7,??_8,L›
              ?_4
              function _533 : ∀ (x_534 : ?_5) -> ?_6
              | x_535 => (eq_3‹??_9› ?_7 x_535 m_531)));
    equal_tm?
      ((exists_4‹??_7,U,L›
         #A_367
         function _536 : #A_367 -> U
         | x_538 => (eq_3‹??_9› #A_367 x_538 #m_370)),
      (exists_4‹??_11,??_12,??_13› ?_10 ?_11));
    equal_tm? ((?_11) #m_370, (eq_3‹??_10› ?_8 ?_9 ?_9));
    equal_tm? (?_10, #A_367)
  |}
end_dump
infer_tm(Type‹??_6›)
check_tm(A_314, Type‹??_6›)
infer_tm(A_314)
assert_equal1( Type‹??_6›, Type‹s_239›)
infer_tm(Type‹??_7›)
check_tm(A_314, Type‹??_7›)
infer_tm(A_314)
assert_equal1( Type‹??_7›, Type‹s_239›)
infer_tm(Type‹??_26›)
check_tm(A_314, Type‹??_26›)
infer_tm(A_314)
assert_equal1( Type‹??_26›, Type‹s_239›)
infer_tm(Type‹??_27›)
check_tm(U, Type‹??_27›)
infer_tm(U)
assert_equal1( Type‹??_27›, U)
infer_tm(Type‹??_9›)
check_tm(A_314, Type‹??_9›)
infer_tm(A_314)
assert_equal1( Type‹??_9›, Type‹s_239›)
infer_tm(Type‹s_239›)
check_tm(#A_367, Type‹s_239›)
infer_tm(#A_367)
assert_equal1( Type‹s_239›, Type‹s_239›)
infer_tm(#A_367)
check_tm(#m_370, #A_367)
infer_tm(#m_370)
assert_equal1( #A_367, #A_367)
infer_tm(Type‹s_239›)
check_tm(#A_367, Type‹s_239›)
infer_tm(#A_367)
assert_equal1( Type‹s_239›, Type‹s_239›)
infer_tm(#A_367 -> U)
infer_tm(#A_367)
infer_tm(U)
check_tm(function _668 : #A_367 -> U
         | x_670 => (eq_3‹s_239› #A_367 x_670 #m_370), #A_367 -> U)
infer_tm(function _672 : #A_367 -> U
         | x_674 => (eq_3‹s_239› #A_367 x_674 #m_370))
infer_tm(#A_367 -> U)
infer_tm(#A_367)
infer_tm(U)
case_coverage{|
  prblm {| ;
    {| eq_pat?( #x_680, x_678 : #A_367) ::: [] =>?
         (eq_3‹s_239› #A_367 #x_678 #m_370)
    |}
  |}
|}
unify_pprbm( eq_pat?( #x_680, x_678 : #A_367) )
case_coverage_ok((eq_3‹s_239› #A_367 #x_680 #m_370), U)
check_tm((eq_3‹s_239› #A_367 #x_680 #m_370), U)
infer_tm((eq_3‹s_239› #A_367 #x_680 #m_370))
check_tm(#A_367, Type‹s_239›)
infer_tm(#A_367)
assert_equal1( Type‹s_239›, Type‹s_239›)
check_tm(#x_680, #A_367)
infer_tm(#x_680)
assert_equal1( #A_367, #A_367)
check_tm(#m_370, #A_367)
infer_tm(#m_370)
assert_equal1( #A_367, #A_367)
assert_equal1( U, U)
assert_equal1( #A_367 -> U, #A_367 -> U)
infer_tm(Type‹s_239›)
check_tm(A_246, Type‹s_239›)
infer_tm(A_246)
assert_equal1( Type‹s_239›, Type‹s_239›)
infer_tm(Type‹s_239›)
check_tm(A_246, Type‹s_239›)
infer_tm(A_246)
assert_equal1( Type‹s_239›, Type‹s_239›)
infer_tm(Type‹??_24›)
check_tm(A_246, Type‹??_24›)
infer_tm(A_246)
assert_equal1( Type‹??_24›, Type‹s_239›)
infer_tm(Type‹??_25›)
check_tm(U, Type‹??_25›)
infer_tm(U)
assert_equal1( Type‹??_25›, U)
infer_tm(Type‹s_239›)
check_tm(A_246, Type‹s_239›)
infer_tm(A_246)
assert_equal1( Type‹s_239›, Type‹s_239›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_758 : Type‹s_757›} ->
           ∀ {m_759 : A_758} ->
             ∀ (__760 : (sing_5‹??_22› ?_22 m_759)) ->
               (sing_5‹??_23› ?_23 m_759) -> unit_1)
infer_tm(Type‹s_757›)
infer_tm(∀ {m_763 : A_762} ->
           ∀ (__764 : (sing_5‹??_22› ?_22 m_763)) ->
             (sing_5‹??_23› ?_23 m_763) -> unit_1)
infer_tm(A_762)
infer_tm(∀ (__767 : (sing_5‹??_22› ?_22 m_766)) ->
           (sing_5‹??_23› ?_23 m_766) -> unit_1)
infer_tm((sing_5‹??_22› ?_22 m_766))
check_tm(?_22, Type‹??_22›)
check_tm(m_766, ?_22)
infer_tm(m_766)
assert_equal1( ?_22, A_762)
infer_tm((sing_5‹??_23› ?_23 m_766) -> unit_1)
infer_tm((sing_5‹??_23› ?_23 m_766))
check_tm(?_23, Type‹??_23›)
check_tm(m_766, ?_23)
infer_tm(m_766)
assert_equal1( ?_23, A_762)
infer_tm(unit_1)
check_tm(function sing_double_772 :
           ∀ {A_773 : Type‹s_757›} ->
             ∀ {m_774 : A_773} ->
               ∀ (__775 : (sing_5‹??_18› ?_17 m_774)) ->
                 (sing_5‹??_19› ?_18 m_774) -> unit_1
         | A_777 m_778 (just_6 x_779) (just_6 y_780) =>
           let pf_781 :=
             (refl_4‹??_20› : (eq_3‹??_21› ?_21 x_779 y_780))
           in tt_1, ∀ {A_782 : Type‹s_757›} ->
                      ∀ {m_783 : A_782} ->
                        ∀ (__784 : (sing_5‹??_22› ?_22 m_783)) ->
                          (sing_5‹??_23› ?_23 m_783) -> unit_1)
infer_tm(function sing_double_786 :
           ∀ {A_787 : Type‹s_757›} ->
             ∀ {m_788 : A_787} ->
               ∀ (__789 : (sing_5‹??_18› ?_17 m_788)) ->
                 (sing_5‹??_19› ?_18 m_788) -> unit_1
         | A_791 m_792 (just_6 x_793) (just_6 y_794) =>
           let pf_795 :=
             (refl_4‹??_20› : (eq_3‹??_21› ?_21 x_793 y_794))
           in tt_1)
infer_tm(∀ {A_797 : Type‹s_757›} ->
           ∀ {m_798 : A_797} ->
             ∀ (__799 : (sing_5‹??_18› ?_17 m_798)) ->
               (sing_5‹??_19› ?_18 m_798) -> unit_1)
infer_tm(Type‹s_757›)
infer_tm(∀ {m_802 : A_801} ->
           ∀ (__803 : (sing_5‹??_18› ?_17 m_802)) ->
             (sing_5‹??_19› ?_18 m_802) -> unit_1)
infer_tm(A_801)
infer_tm(∀ (__806 : (sing_5‹??_18› ?_17 m_805)) ->
           (sing_5‹??_19› ?_18 m_805) -> unit_1)
infer_tm((sing_5‹??_18› ?_17 m_805))
check_tm(?_17, Type‹??_18›)
check_tm(m_805, ?_17)
infer_tm(m_805)
assert_equal1( ?_17, A_801)
infer_tm((sing_5‹??_19› ?_18 m_805) -> unit_1)
infer_tm((sing_5‹??_19› ?_18 m_805))
check_tm(?_18, Type‹??_19›)
check_tm(m_805, ?_18)
infer_tm(m_805)
assert_equal1( ?_18, A_801)
infer_tm(unit_1)
case_coverage{|
  prblm {|
    eq_term?( (sing_5‹??_19› #A_822 #m_823),
      (sing_5‹??_19› #A_822 #m_834))
    eq_term?( (sing_5‹??_18› #A_822 #m_823),
      (sing_5‹??_18› #A_822 #m_826));
    {| eq_pat?( #A_822, A_811 : Type‹s_757›)
       eq_pat?( #m_823, m_812 : #A_822)
       eq_pat?( #m_826, x_813 : #A_822)
       eq_pat?( #m_834, y_814 : #A_822) ::: [] =>?
         let pf_842 :=
           (refl_4‹??_20› : (eq_3‹??_21› ?_21 #x_813 #y_814))
         in tt_1
    |}
  |}
|}
unify_pprbm(
  eq_term?( (sing_5‹??_19› #A_822 #m_823),
    (sing_5‹??_19› #A_822 #m_834))
  eq_term?( (sing_5‹??_18› #A_822 #m_823),
    (sing_5‹??_18› #A_822 #m_826))
  eq_pat?( #A_822, A_811 : Type‹s_757›)
  eq_pat?( #m_823, m_812 : #A_822)
  eq_pat?( #m_826, x_813 : #A_822)
  eq_pat?( #m_834, y_814 : #A_822)
)
case_coverage_ok(let pf_851 :=
                   (refl_4‹??_20› : (eq_3‹??_21› ?_21 #m_834 #m_834))
                 in tt_1, unit_1)
check_tm(let pf_852 :=
           (refl_4‹??_20› : (eq_3‹??_21› ?_21 #m_834 #m_834))
         in tt_1, unit_1)
infer_tm(let pf_853 :=
           (refl_4‹??_20› : (eq_3‹??_21› ?_21 #m_834 #m_834))
         in tt_1)
infer_tm((refl_4‹??_20› : (eq_3‹??_21› ?_21 #m_834 #m_834)))
infer_tm((eq_3‹??_21› ?_21 #m_834 #m_834))
check_tm(?_21, Type‹??_21›)
check_tm(#m_834, ?_21)
infer_tm(#m_834)
assert_equal1( ?_21, #A_822)
check_tm(#m_834, ?_21)
infer_tm(#m_834)
assert_equal1( ?_21, #A_822)
check_tm(refl_4‹??_20›, (eq_3‹??_21› ?_21 #m_834 #m_834))
infer_tm(refl_4‹??_20›)
check_tm(?_19, Type‹??_20›)
check_tm(?_20, ?_19)
assert_equal1( (eq_3‹??_21› ?_21 #m_834 #m_834),
  (eq_3‹??_20› ?_19 ?_20 ?_20))
infer_tm(tt_1)
assert_equal1( unit_1, unit_1)
assert_equal1(
  ∀ {A_859 : Type‹s_757›} ->
    ∀ {m_860 : A_859} ->
      ∀ (__861 : (sing_5‹??_22› ?_22 m_860)) ->
        (sing_5‹??_23› ?_23 m_860) -> unit_1,
  ∀ {A_863 : Type‹s_757›} ->
    ∀ {m_864 : A_863} ->
      ∀ (__865 : (sing_5‹??_18› ?_17 m_864)) ->
        (sing_5‹??_19› ?_18 m_864) -> unit_1)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_877
    ??_2 <= s_880
    ??_3 <= r_882
    ??_4 <= t_884
    ??_5 <= s_887
    ??_6 <= s_888
    ??_7 <= s_889
    ??_8 <= U
    ??_9 <= s_891
    ??_10 <= ??_9
    ??_11 <= ??_7
    ??_12 <= U
    ??_13 <= L
    ??_14 <= ??_6
    ??_15 <= ??_7
    ??_16 <= U
    ??_17 <= ??_9
    ??_24 <= s_900
    ??_25 <= U
    ??_26 <= s_902
    ??_27 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_906
    ?_2 <= A_909
    ?_3 <= A_912
    ?_4 <= A_916
    ?_5 <= ?_4
    ?_6 <= Type‹??_8›
    ?_7 <= A_930
    ?_8 <= #A_367
    ?_9 <= #m_370
    ?_10 <= #A_367
    ?_11 <= function _951 : #A_367 -> U
            | x_953 => (eq_3‹??_9› #A_367 x_953 #m_370)
    ?_12 <= A_956
    ?_13 <= A_960
    ?_14 <= ?_13
    ?_15 <= Type‹??_16›
    ?_16 <= A_974
    ?_17 <= A_977
    ?_18 <= A_981
    ?_21 <= #A_822
    ?_22 <= A_990
    ?_23 <= A_994
    ?_24 <= Type‹??_24›
    ?_25 <= Type‹??_25›
    ?_26 <= Type‹??_26›
    ?_27 <= Type‹??_27›
    
  |}
  eqns {|
    equal_tm?
      (∀ {A_1013 : Type‹s_757›} ->
         ∀ {m_1014 : A_1013} ->
           ∀ (__1015 : (sing_5‹??_22› ?_22 m_1014)) ->
             (sing_5‹??_23› ?_23 m_1014) -> unit_1,
      ∀ {A_1017 : Type‹s_757›} ->
        ∀ {m_1018 : A_1017} ->
          ∀ (__1019 : (sing_5‹??_18› ?_17 m_1018)) ->
            (sing_5‹??_19› ?_18 m_1018) -> unit_1);
    equal_tm? ((eq_3‹??_21› ?_21 #m_834 #m_834),
      (eq_3‹??_20› ?_19 ?_20 ?_20))
  |}
end_dump
infer_tm(Type‹??_18›)
check_tm(A_801, Type‹??_18›)
infer_tm(A_801)
assert_equal1( Type‹??_18›, Type‹s_757›)
infer_tm(Type‹??_19›)
check_tm(A_801, Type‹??_19›)
infer_tm(A_801)
assert_equal1( Type‹??_19›, Type‹s_757›)
infer_tm(Type‹??_20›)
check_tm(#A_822, Type‹??_20›)
infer_tm(#A_822)
assert_equal1( Type‹??_20›, Type‹s_757›)
infer_tm(#A_822)
check_tm(#m_834, #A_822)
infer_tm(#m_834)
assert_equal1( #A_822, #A_822)
infer_tm(Type‹s_757›)
check_tm(#A_822, Type‹s_757›)
infer_tm(#A_822)
assert_equal1( Type‹s_757›, Type‹s_757›)
infer_tm(Type‹s_757›)
check_tm(A_762, Type‹s_757›)
infer_tm(A_762)
assert_equal1( Type‹s_757›, Type‹s_757›)
infer_tm(Type‹s_757›)
check_tm(A_762, Type‹s_757›)
infer_tm(A_762)
assert_equal1( Type‹s_757›, Type‹s_757›)
----------------------------------

smeta_meta {|
  ??_1 <= s_1100
  ??_2 <= s_1103
  ??_3 <= r_1105
  ??_4 <= t_1107
  ??_5 <= s_1110
  ??_6 <= s_1111
  ??_7 <= s_1112
  ??_8 <= U
  ??_9 <= s_1114
  ??_10 <= ??_9
  ??_11 <= ??_7
  ??_12 <= U
  ??_13 <= L
  ??_14 <= ??_6
  ??_15 <= ??_7
  ??_16 <= U
  ??_17 <= ??_9
  ??_18 <= s_1123
  ??_19 <= s_1124
  ??_20 <= s_1125
  ??_21 <= ??_20
  ??_22 <= ??_18
  ??_23 <= ??_19
  ??_24 <= s_1129
  ??_25 <= U
  ??_26 <= s_1131
  ??_27 <= U
  
|}
imeta_meta {|
  ?_1 <= A_1135
  ?_2 <= A_1138
  ?_3 <= A_1141
  ?_4 <= A_1145
  ?_5 <= ?_4
  ?_6 <= Type‹??_8›
  ?_7 <= A_1159
  ?_8 <= #A_367
  ?_9 <= #m_370
  ?_10 <= #A_367
  ?_11 <= function _1180 : #A_367 -> U
          | x_1182 => (eq_3‹??_9› #A_367 x_1182 #m_370)
  ?_12 <= A_1185
  ?_13 <= A_1189
  ?_14 <= ?_13
  ?_15 <= Type‹??_16›
  ?_16 <= A_1203
  ?_17 <= A_1206
  ?_18 <= A_1210
  ?_19 <= #A_822
  ?_20 <= #m_834
  ?_21 <= #A_822
  ?_22 <= A_1231
  ?_23 <= A_1235
  ?_24 <= Type‹??_24›
  ?_25 <= Type‹??_25›
  ?_26 <= Type‹??_26›
  ?_27 <= Type‹??_27›
  
|}
#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive nat_2‹› : U where
| zero_2 : nat_2
| succ_3 (pred_1397 : nat_2) : nat_2

#[logical]
inductive eq_3‹s_1398› (A_1399 : Type‹s_1398›) (m_1400 : A_1399):
  A_1399 -> U
where
| refl_4 : (eq_3‹s_1398› A_1399 m_1400 m_1400)

#[program]
inductive exists_4‹s_1402,r_1403,t_1404› (A_1405 : Type‹s_1402›) (B_1406 : 
A_1405 -> Type‹r_1403›): Type‹t_1404› where
| ex_5
    (m_1408 : A_1405) {pf_1409 : (B_1406) m_1408}
    : (exists_4‹s_1402,r_1403,t_1404› A_1405 B_1406)

#[program]
inductive sing_5‹s_1410› (A_1411 : Type‹s_1410›):
  A_1411 -> Type‹s_1410›
where
| just_6 (m_1413 : A_1411) : (sing_5‹s_1410› A_1411 m_1413)

#[program]
def sing_eq_1‹s_1414› :
  ∀ {A_1415 : Type‹s_1414›} ->
    ∀ {m_1416 : A_1415} ->
      (sing_5‹s_1414› A_1415 m_1416) ->
        (exists_4‹s_1414,U,L›
          A_1415
          function _1418 : A_1415 -> U
          | x_1420 => (eq_3‹s_1414› A_1415 x_1420 m_1416))
:=
  function sing_eq_1421 :
    ∀ {A_1422 : Type‹s_1414›} ->
      ∀ {m_1423 : A_1422} ->
        (sing_5‹s_1414› A_1422 m_1423) ->
          (exists_4‹s_1414,U,L›
            A_1422
            function _1425 : A_1422 -> U
            | x_1427 => (eq_3‹s_1414› A_1422 x_1427 m_1423))
  | A_1428 m_1429 (just_6 m_1430) =>
    (ex_5‹s_1414,U,L› m_1430 refl_4‹s_1414›)

#[program]
def sing_double_2‹s_1431› :
  ∀ {A_1432 : Type‹s_1431›} ->
    ∀ {m_1433 : A_1432} ->
      (sing_5‹s_1431› A_1432 m_1433) ->
        (sing_5‹s_1431› A_1432 m_1433) -> unit_1
:=
  function sing_double_1436 :
    ∀ {A_1437 : Type‹s_1431›} ->
      ∀ {m_1438 : A_1437} ->
        (sing_5‹s_1431› A_1437 m_1438) ->
          (sing_5‹s_1431› A_1437 m_1438) -> unit_1
  | A_1441 m_1442 (just_6 x_1443) (just_6 y_1444) =>
    let pf_1445 :=
      (refl_4‹s_1431› : (eq_3‹s_1431› #A_822 x_1443 y_1444))
    in tt_1

-----------------------------------------

