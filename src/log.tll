[(DData ("unit", (PBase (TBase (Type U))),
    [(DCons ("tt", (PBase (TBase (Id "unit")))))]));
  (DData ("nat", (PBase (TBase (Type U))),
     [(DCons ("O", (PBase (TBase (Id "nat")))));
       (DCons ("S", (PBase (TBind (R, "", (Id "nat"), (TBase (Id "nat")))))))
       ]
     ));
  (DData ("list", (PBind ("A", (Type U), (PBase (TBase (Type L))))),
     [(DCons ("nil",
         (PBind ("A", (Type U), (PBase (TBase (App [(Id "list"); (Id "A")])))
            ))
         ));
       (DCons ("cons",
          (PBind ("A", (Type U),
             (PBase
                (TBind (R, "", (Id "A"),
                   (TBind (R, "", (App [(Id "list"); (Id "A")]),
                      (TBase (App [(Id "list"); (Id "A")]))))
                   )))
             ))
          ))
       ]
     ));
  (DData ("ex",
     (PBind ("A", (Type L),
        (PBind ("P", (Pi (R, U, "", (Id "A"), (Type U))),
           (PBase (TBase (Type L)))))
        )),
     [(DCons ("Ex",
         (PBind ("A", (Type L),
            (PBind ("P", (Pi (R, U, "", (Id "A"), (Type U))),
               (PBase
                  (TBind (R, "x", (Id "A"),
                     (TBind (N, "", (App [(Id "P"); (Id "x")]),
                        (TBase (App [(Id "ex"); (Id "A"); (Id "P")]))))
                     )))
               ))
            ))
         ))
       ]
     ));
  (DData ("eq",
     (PBind ("A", (Type U),
        (PBind ("x", (Id "A"),
           (PBase (TBind (R, "", (Id "A"), (TBase (Type U)))))))
        )),
     [(DCons ("refl",
         (PBind ("A", (Type U),
            (PBind ("x", (Id "A"),
               (PBase (TBase (App [(Id "eq"); (Id "A"); (Id "x"); (Id "x")])))
               ))
            ))
         ))
       ]
     ));
  (DTm (N, "rw",
     (Some (Pi (R, U, "A", (Type U),
              (Pi (R, U, "m", (Id "A"),
                 (Pi (R, U, "P", (Pi (R, U, "", (Id "A"), (Type U))),
                    (Pi (R, U, "pf", (App [(Id "P"); (Id "m")]),
                       (Pi (R, U, "n", (Id "A"),
                          (Pi (R, U, "",
                             (App [(Id "eq"); (Id "A"); (Id "m"); (Id "n")]),
                             (App [(Id "P"); (Id "n")])))
                          ))
                       ))
                    ))
                 ))
              ))),
     (Lam (R, U, "A",
        (Lam (R, U, "m",
           (Lam (R, U, "P",
              (Lam (R, U, "pf",
                 (Lam (R, U, "n",
                    (Lam (R, U, "e",
                       (Match ((Id "e"),
                          (Mot2 ((PData ("eq", ["_"; "_"; "x"])),
                             (App [(Id "P"); (Id "x")]))),
                          [((PCons ("refl", [])), (Id "pf"))]))
                       ))
                    ))
                 ))
              ))
           ))
        ))
     ));
  (DTm (R, "add",
     (Some (Pi (R, U, "", (Id "nat"), (Pi (R, U, "", (Id "nat"), (Id "nat")))
              ))),
     (Fix ("loop",
        (Lam (R, U, "x",
           (Lam (R, U, "y",
              (Match ((Id "x"), Mot0,
                 [((PCons ("O", [])), (Id "y"));
                   ((PCons ("S", ["x"])),
                    (App [(Id "S"); (App [(Id "loop"); (Id "x"); (Id "y")])]))
                   ]
                 ))
              ))
           ))
        ))
     ));
  (DTm (R, "append",
     (Some (Pi (N, U, "A", (Type U),
              (Pi (R, U, "", (App [(Id "list"); (Id "A")]),
                 (Pi (R, L, "", (App [(Id "list"); (Id "A")]),
                    (App [(Id "list"); (Id "A")])))
                 ))
              ))),
     (Fix ("loop",
        (Lam (N, U, "A",
           (Lam (R, U, "xs",
              (Lam (R, L, "ys",
                 (Match ((Id "xs"), Mot0,
                    [((PCons ("nil", [])), (Id "ys"));
                      ((PCons ("cons", ["x"; "xs"])),
                       (App
                          [(Id "cons"); (Id "x");
                            (App
                               [(Id "loop"); (Id "_"); (Id "xs"); (Id "ys")])
                            ]))
                      ]
                    ))
                 ))
              ))
           ))
        ))
     ));
  (DTm (N, "len",
     (Some (Pi (R, U, "A", (Type U),
              (Pi (R, U, "", (App [(Id "list"); (Id "A")]), (Id "nat")))))),
     (Fix ("loop",
        (Lam (R, U, "A",
           (Lam (R, U, "xs",
              (Match ((Id "xs"), Mot0,
                 [((PCons ("nil", [])), (Id "O"));
                   ((PCons ("cons", ["_"; "xs"])),
                    (App [(Id "S"); (App [(Id "loop"); (Id "_"); (Id "xs")])]))
                   ]
                 ))
              ))
           ))
        ))
     ));
  (DTm (N, "append_len",
     (Some (Pi (R, U, "A", (Type U),
              (Pi (R, U, "xs", (App [(Id "list"); (Id "A")]),
                 (Pi (R, U, "ys", (App [(Id "list"); (Id "A")]),
                    (App
                       [(Id "eq"); (Id "nat");
                         (App
                            [(Id "len"); (Id "A");
                              (App
                                 [(Id "append"); (Id "A"); (Id "xs");
                                   (Id "ys")])
                              ]);
                         (App
                            [(Id "add");
                              (App [(Id "len"); (Id "A"); (Id "xs")]);
                              (App [(Id "len"); (Id "A"); (Id "ys")])])
                         ])
                    ))
                 ))
              ))),
     (Fix ("loop",
        (Lam (R, U, "A",
           (Lam (R, U, "xs",
              (Lam (R, U, "ys",
                 (Match ((Id "xs"),
                    (Mot1 ("xs0",
                       (App
                          [(Id "eq"); (Id "nat");
                            (App
                               [(Id "len"); (Id "A");
                                 (App
                                    [(Id "append"); (Id "A"); (Id "xs0");
                                      (Id "ys")])
                                 ]);
                            (App
                               [(Id "add");
                                 (App [(Id "len"); (Id "A"); (Id "xs0")]);
                                 (App [(Id "len"); (Id "A"); (Id "ys")])])
                            ])
                       )),
                    [((PCons ("nil", [])), (Id "refl"));
                      ((PCons ("cons", ["x"; "xs0"])),
                       (App
                          [(Id "rw"); (Id "nat");
                            (App
                               [(Id "len"); (Id "A");
                                 (App
                                    [(Id "append"); (Id "A"); (Id "xs0");
                                      (Id "ys")])
                                 ]);
                            (Lam (R, U, "n",
                               (App
                                  [(Id "eq"); (Id "nat");
                                    (App
                                       [(Id "S");
                                         (App
                                            [(Id "len"); (Id "A");
                                              (App
                                                 [(Id "append"); (Id "A");
                                                   (Id "xs0"); (Id "ys")])
                                              ])
                                         ]);
                                    (App [(Id "S"); (Id "n")])])
                               ));
                            (Id "refl");
                            (App
                               [(Id "add");
                                 (App [(Id "len"); (Id "A"); (Id "xs0")]);
                                 (App [(Id "len"); (Id "A"); (Id "ys")])]);
                            (App
                               [(Id "loop"); (Id "A"); (Id "xs0"); (Id "ys")])
                            ]))
                      ]
                    ))
                 ))
              ))
           ))
        ))
     ));
  (DTm (R, "test",
     (Some (App
              [(Id "ex"); (App [(Id "list"); (Id "nat")]);
                (Lam (R, U, "ls",
                   (App
                      [(Id "eq"); (Id "nat");
                        (App [(Id "len"); (Id "nat"); (Id "ls")]);
                        (App [(Id "S"); (Id "O")])])
                   ))
                ])),
     (App [(Id "Ex"); (App [(Id "cons"); (Id "O"); (Id "nil")]); (Id "refl")])
     ));
  (DTm (N, "_", (Some (Id "unit")),
     (Match ((Id "test"), Mot0, [((PCons ("Ex", ["ls"; "pf"])), (Id "tt"))]))
     ));
  (DTm (R, "list_free",
     (Some (Pi (N, U, "A", (Type U),
              (Pi (R, U, "", (App [(Id "list"); (Id "A")]), (Id "unit")))))),
     (Fix ("loop",
        (Lam (N, U, "A",
           (Lam (R, U, "ls",
              (Match ((Id "ls"), Mot0,
                 [((PCons ("nil", [])), (Id "tt"));
                   ((PCons ("cons", ["_"; "ls"])),
                    (App [(Id "loop"); (Id "_"); (Id "ls")]))
                   ]
                 ))
              ))
           ))
        ))
     ));
  (DTm (R, "_", (Some (Id "unit")),
     (Match ((Id "test"), Mot0,
        [((PCons ("Ex", ["ls"; "pf"])),
          (App [(Id "list_free"); (Id "_"); (Id "ls")]))]
        ))
     ))
  ]
parse success---------------------------------------

inductive unit_d1 : U where
  | tt_c1 : unit_d1

inductive nat_d2 : U where
  | O_c2 : nat_d2
  | S_c3 : nat_d2 -> nat_d2

inductive list_d3 (A_91 : U) : L where
  | nil_c4 (A_92 : U) : (list_d3 A_92)
  | cons_c5 (A_93 : U) : A_93 -> (list_d3 A_93) -> (list_d3 A_93)

inductive ex_d4 (A_97 : L) (P_98 : A_97 -> U) : L where
  | Ex_c6 (A_100 : L) (P_101 : A_100 -> U) :
    âˆ€ (x_103 : A_100) -> {((P_101) x_103)} -> (ex_d4 A_100 P_101)

inductive eq_d5 (A_105 : U) (x_106 : A_105) : A_105 -> U where
  | refl_c7 (A_108 : U) (x_109 : A_108) : (eq_d5 A_108 x_109 x_109)

theorem rw_20 :
  âˆ€ (A_110 : U) ->
    âˆ€ (m_112 : A_110) ->
      âˆ€ (P_116 : A_110 -> U) ->
        ((P_116) m_112) ->
          âˆ€ (n_122 : A_110) -> (eq_d5 A_110 m_112 n_122) -> ((P_116) n_122) :=
  fun A_125 m_126 P_127 pf_128 n_129 e_130  ->
    match e_130 in (eq_d5 __131 __132 x_133) return ((P_127) x_133) with
    | refl_c7 -> pf_128

definition add_37 : nat_d2 -> nat_d2 -> nat_d2 :=
  fix loop_137 x_138 y_139  ->
    match x_138 with
    | O_c2 -> y_139 | (S_c3 x_140) -> (S_c3 ((loop_137) x_140 y_139))

definition append_44 :
  âˆ€ {A_141 : U} -> (list_d3 A_141) -> (list_d3 A_141) -o (list_d3 A_141) :=
  fix loop_146 {A_147} xs_148 ->
    fun ys_149 -o
      match xs_148 with
      | nil_c4 -> ys_149
      | (cons_c5 x_150 xs_151) ->
        (cons_c5 x_150 ((loop_146) ??1 xs_151 ys_149))

theorem len_54 : âˆ€ (A_152 : U) -> (list_d3 A_152) -> nat_d2 :=
  fix loop_155 A_156 xs_157  ->
    match xs_157 with
    | nil_c4 -> O_c2
    | (cons_c5 __158 xs_159) -> (S_c3 ((loop_155) ??2 xs_159))

theorem append_len_62 :
  âˆ€ (A_160 : U) ->
    âˆ€ (xs_162 : (list_d3 A_160)) ->
      âˆ€ (ys_164 : (list_d3 A_160)) ->
        (eq_d5 nat_d2 ((len_54) A_160 ((append_44) A_160 xs_162 ys_164))
        ((add_37) ((len_54) A_160 xs_162) ((len_54) A_160 ys_164))) :=
  fix loop_165 A_166 xs_167 ys_168  ->
    match xs_167 as xs0_169 return
      (eq_d5 nat_d2 ((len_54) A_166 ((append_44) A_166 xs0_169 ys_168))
      ((add_37) ((len_54) A_166 xs0_169) ((len_54) A_166 ys_168)))
    with
    | nil_c4 -> refl_c7
    | (cons_c5 x_170 xs0_171) ->
      ((rw_20)
        nat_d2 ((len_54) A_166 ((append_44) A_166 xs0_171 ys_168))
        fun n_172 ->
          (eq_d5 nat_d2
          (S_c3 ((len_54) A_166 ((append_44) A_166 xs0_171 ys_168)))
          (S_c3 n_172))
        refl_c7 ((add_37) ((len_54) A_166 xs0_171) ((len_54) A_166 ys_168))
        ((loop_165) A_166 xs0_171 ys_168))

definition test_74 :
  (ex_d4 (list_d3 nat_d2)
  fun ls_173 -> (eq_d5 nat_d2 ((len_54) nat_d2 ls_173) (S_c3 O_c2))) :=
  (Ex_c6 (cons_c5 O_c2 nil_c4) refl_c7)

theorem __76 : unit_d1 := match test_74 with
                          | (Ex_c6 ls_174 pf_175) -> tt_c1

definition list_free_79 : âˆ€ {A_176 : U} -> (list_d3 A_176) -> unit_d1 :=
  fix loop_179 {A_180} ls_181 ->
    match ls_181 with
    | nil_c4 -> tt_c1 | (cons_c5 __182 ls_183) -> ((loop_179) ??3 ls_183)

definition __87 : unit_d1 :=
  match test_74 with
  | (Ex_c6 ls_184 pf_185) -> ((list_free_79) ??4 ls_184)

trans01 success---------------------------------------

inductive unit_d1 : U where
  | tt_c1 : unit_d1

inductive nat_d2 : U where
  | O_c2 : nat_d2
  | S_c3 : nat_d2 -> nat_d2

inductive list_d3 (A_830 : U) : L where
  | nil_c4 (A_831 : U) : (list_d3 A_831)
  | cons_c5 (A_832 : U) : A_832 -> (list_d3 A_832) -> (list_d3 A_832)

inductive ex_d4 (A_836 : L) (P_837 : A_836 -> U) : L where
  | Ex_c6 (A_839 : L) (P_840 : A_839 -> U) :
    âˆ€ (x_842 : A_839) -> {((P_840) x_842)} -> (ex_d4 A_839 P_840)

inductive eq_d5 (A_844 : U) (x_845 : A_844) : A_844 -> U where
  | refl_c7 (A_847 : U) (x_848 : A_847) : (eq_d5 A_847 x_848 x_848)

theorem rw_20 :
  âˆ€ (A_849 : U) ->
    âˆ€ (m_851 : A_849) ->
      âˆ€ (P_855 : A_849 -> U) ->
        ((P_855) m_851) ->
          âˆ€ (n_861 : A_849) -> (eq_d5 A_849 m_851 n_861) -> ((P_855) n_861) :=
  fun A_864 m_865 P_866 pf_867 n_868 e_869  ->
    match e_869 in (eq_d5 __870 __871 x_872) return ((P_866) x_872) with
    | refl_c7 -> pf_867

definition add_37 : nat_d2 -> nat_d2 -> nat_d2 :=
  fix loop_876 x_877 y_878  ->
    match x_877 with
    | O_c2 -> y_878 | (S_c3 x_879) -> (S_c3 ((loop_876) x_879 y_878))

definition append_44 :
  âˆ€ {A_880 : U} -> (list_d3 A_880) -> (list_d3 A_880) -o (list_d3 A_880) :=
  fix loop_885 {A_886} xs_887 ->
    fun ys_888 -o
      match xs_887 with
      | nil_c4 -> ys_888
      | (cons_c5 x_889 xs_890) ->
        (cons_c5 x_889 ((loop_885) A_886 xs_890 ys_888))

theorem len_54 : âˆ€ (A_891 : U) -> (list_d3 A_891) -> nat_d2 :=
  fix loop_894 A_895 xs_896  ->
    match xs_896 with
    | nil_c4 -> O_c2
    | (cons_c5 __897 xs_898) -> (S_c3 ((loop_894) A_895 xs_898))

theorem append_len_62 :
  âˆ€ (A_899 : U) ->
    âˆ€ (xs_901 : (list_d3 A_899)) ->
      âˆ€ (ys_903 : (list_d3 A_899)) ->
        (eq_d5 nat_d2 ((len_54) A_899 ((append_44) A_899 xs_901 ys_903))
        ((add_37) ((len_54) A_899 xs_901) ((len_54) A_899 ys_903))) :=
  fix loop_904 A_905 xs_906 ys_907  ->
    match xs_906 as xs0_908 return
      (eq_d5 nat_d2 ((len_54) A_905 ((append_44) A_905 xs0_908 ys_907))
      ((add_37) ((len_54) A_905 xs0_908) ((len_54) A_905 ys_907)))
    with
    | nil_c4 -> refl_c7
    | (cons_c5 x_909 xs0_910) ->
      ((rw_20)
        nat_d2 ((len_54) A_905 ((append_44) A_905 xs0_910 ys_907))
        fun n_911 ->
          (eq_d5 nat_d2
          (S_c3 ((len_54) A_905 ((append_44) A_905 xs0_910 ys_907)))
          (S_c3 n_911))
        refl_c7 ((add_37) ((len_54) A_905 xs0_910) ((len_54) A_905 ys_907))
        ((loop_904) A_905 xs0_910 ys_907))

definition test_74 :
  (ex_d4 (list_d3 nat_d2)
  fun ls_912 -> (eq_d5 nat_d2 ((len_54) nat_d2 ls_912) (S_c3 O_c2))) :=
  (Ex_c6 (cons_c5 O_c2 nil_c4) refl_c7)

theorem __76 : unit_d1 := match test_74 with
                          | (Ex_c6 ls_913 pf_914) -> tt_c1

definition list_free_79 : âˆ€ {A_915 : U} -> (list_d3 A_915) -> unit_d1 :=
  fix loop_918 {A_919} ls_920 ->
    match ls_920 with
    | nil_c4 -> tt_c1 | (cons_c5 __921 ls_922) -> ((loop_918) A_919 ls_922)

definition __87 : unit_d1 :=
  match test_74 with
  | (Ex_c6 ls_923 pf_924) -> ((list_free_79) nat_d2 ls_923)

elab1 success---------------------------------------

inductive unit_d1 where
  | tt_c1 := 0

inductive nat_d2 where
  | O_c2 := 0
  | S_c3 := 1

inductive list_d3 where
  | nil_c4 := 0
  | cons_c5 := 2

inductive ex_d4 where
  | Ex_c6 := 2

inductive eq_d5 where
  | refl_c7 := 0

def rw_20 := â–¡

def add_37 :=
  fix loop_1200 x_1201 y_1202 ->
    match x_1201<U>with
    | O_c2 -> y_1202 | (S_c3 x_1203) -> (S_c3 ((loop_1200) x_1203 y_1202))

def append_44 :=
  fix loop_1204 A_1205 xs_1206 ->
    fun ys_1207 ->
      match xs_1206<L>with
      | nil_c4 -> ys_1207
      | (cons_c5 x_1208 xs_1209) ->
        (cons_c5 x_1208 ((loop_1204) â–¡ xs_1209 ys_1207))

def len_54 := â–¡

def append_len_62 := â–¡

def test_74 := (Ex_c6 (cons_c5 O_c2 nil_c4) â–¡)

def __76 := â–¡

def list_free_79 :=
  fix loop_1210 A_1211 ls_1212 ->
    match ls_1212<L>with
    | nil_c4 -> tt_c1 | (cons_c5 __1213 ls_1214) -> ((loop_1210) â–¡ ls_1214)

def __87 :=
  match test_74<L>with
  | (Ex_c6 ls_1215 pf_1216) -> ((list_free_79) â–¡ ls_1215)

dyntype1 success---------------------------------------

