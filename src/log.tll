[Inductive {name = "unit"; relv = R;
   body =
   (Binder ([],
      (PBase
         ((TBase (Type U)), [(DMul ("tt", (TBase (Id ("unit", I))), []))]))
      ));
   view = []};
  Inductive {name = "bool"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("true", (TBase (Id ("bool", I))), []));
             (DMul ("false", (TBase (Id ("bool", I))), []))]))
       ));
    view = []};
  Inductive {name = "nat"; relv = R;
    body =
    (Binder ([],
       (PBase
          ((TBase (Type U)),
           [(DMul ("zero", (TBase (Id ("nat", I))), []));
             (DMul ("succ",
                (TBind (R, (Id ("nat", I)),
                   (Binder ("pred", (TBase (Id ("nat", I))))))),
                [E]))
             ]))
       ));
    view = []};
  Inductive {name = "eq"; relv = N;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind ((Id ("A", I)),
                (Binder ("m",
                   (PBase
                      ((TBind (R, (Id ("A", I)),
                          (Binder ("_", (TBase (Type U)))))),
                       [(DMul ("refl",
                           (TBase
                              (App
                                 [(Id ("eq", I)); (Id ("m", I));
                                   (Id ("m", I))])),
                           []))
                         ]))
                   ))
                ))
             ))
          ))
       ));
    view = [I; E]};
  Inductive {name = "exists"; relv = R;
    body =
    (Binder (["s"; "r"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBind (
                (Pi (R, U, (Id ("A", I)), (Binder ("_", (Type (SId "r")))))),
                (Binder ("B",
                   (PBase
                      ((TBase (Type U)),
                       [(DMul ("ex",
                           (TBind (R, (Id ("A", I)),
                              (Binder ("m",
                                 (TBind (N,
                                    (App [(Id ("B", I)); (Id ("m", I))]),
                                    (Binder ("pf",
                                       (TBase
                                          (App
                                             [(Id ("exists", E));
                                               (Id ("A", I)); (Id ("B", I))]))
                                       ))
                                    ))
                                 ))
                              )),
                           [E; E]))
                         ]))
                   ))
                ))
             ))
          ))
       ));
    view = [I; E]};
  Inductive {name = "sing"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id ("A", I)),
                    (Binder ("_", (TBase (Type (SId "s"))))))),
                 [(DMul ("just",
                     (TBind (R, (Id ("A", I)),
                        (Binder ("m",
                           (TBase (App [(Id ("sing", I)); (Id ("m", I))]))))
                        )),
                     [E]))
                   ]))
             ))
          ))
       ));
    view = [I]};
  Inductive {name = "list"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBase (Type U)),
                 [(DMul ("nil",
                     (TBase (App [(Id ("list", I)); (Id ("A", I))])), 
                     []));
                   (DMul ("cons",
                      (TBind (R, (Id ("A", I)),
                         (Binder ("hd",
                            (TBind (R,
                               (App [(Id ("list", I)); (Id ("A", I))]),
                               (Binder ("tl",
                                  (TBase
                                     (App [(Id ("list", I)); (Id ("A", I))]))
                                  ))
                               ))
                            ))
                         )),
                      [E; E]))
                   ]))
             ))
          ))
       ));
    view = [E]};
  Inductive {name = "vec"; relv = R;
    body =
    (Binder (["s"],
       (PBind ((Type (SId "s")),
          (Binder ("A",
             (PBase
                ((TBind (R, (Id ("nat", I)), (Binder ("_", (TBase (Type U))))
                    )),
                 [(DMul ("vnil",
                     (TBase
                        (App
                           [(Id ("vec", I)); (Id ("A", I)); (Id ("zero", I))])),
                     []));
                   (DMul ("vcons",
                      (TBind (N, (Id ("nat", I)),
                         (Binder ("n",
                            (TBind (R, (Id ("A", I)),
                               (Binder ("hd",
                                  (TBind (R,
                                     (App
                                        [(Inst ("vec", [(SId "s")], I));
                                          (Id ("A", I)); (Id ("n", I))]),
                                     (Binder ("tl",
                                        (TBase
                                           (App
                                              [(Id ("vec", I));
                                                (Id ("A", I));
                                                (App
                                                   [(Id ("succ", I));
                                                     (Id ("n", I))])
                                                ]))
                                        ))
                                     ))
                                  ))
                               ))
                            ))
                         )),
                      [I; E; E]))
                   ]))
             ))
          ))
       ));
    view = [E]};
  Definition {name = "rwl"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("A", I)),
                    (Binder ("m",
                       (Pi (N, U, (Id ("A", I)),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id ("A", I)),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (R, U,
                                      (App
                                         [(Id ("eq", I)); (Id ("m", I));
                                           (Id ("n", I))]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App
                                               [(Id ("B", I)); (Id ("m", I))]),
                                            (Binder ("_",
                                               (App
                                                  [(Id ("B", I));
                                                    (Id ("n", I))])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwl"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id ("x", I))))]
              )),
           [I; I; I; E])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("A", I)),
                 (Binder ("m",
                    (Pi (N, U, (Id ("A", I)),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id ("A", I)),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (R, U,
                                   (App
                                      [(Id ("eq", I)); (Id ("m", I));
                                        (Id ("n", I))]),
                                   (Binder ("_",
                                      (Pi (R, U,
                                         (App [(Id ("B", I)); (Id ("m", I))]),
                                         (Binder ("_",
                                            (App
                                               [(Id ("B", I)); (Id ("n", I))])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; I; E]};
  Definition {name = "rwr"; relv = R;
    body =
    (Binder (["s"; "r"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("A", I)),
                    (Binder ("m",
                       (Pi (N, U, (Id ("A", I)),
                          (Binder ("n",
                             (Pi (N, U,
                                (Pi (R, U, (Id ("A", I)),
                                   (Binder ("_", (Type (SId "r")))))),
                                (Binder ("B",
                                   (Pi (R, U,
                                      (App
                                         [(Id ("eq", I)); (Id ("m", I));
                                           (Id ("n", I))]),
                                      (Binder ("_",
                                         (Pi (R, U,
                                            (App
                                               [(Id ("B", I)); (Id ("n", I))]),
                                            (Binder ("_",
                                               (App
                                                  [(Id ("B", I));
                                                    (Id ("m", I))])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "rwr"),
              [([(PId "A"); (PId "m"); (PId "n"); (PId "B"); (PId "refl");
                  (PId "x")],
                (Some (Id ("x", I))))]
              )),
           [I; I; I; E])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("A", I)),
                 (Binder ("m",
                    (Pi (N, U, (Id ("A", I)),
                       (Binder ("n",
                          (Pi (N, U,
                             (Pi (R, U, (Id ("A", I)),
                                (Binder ("_", (Type (SId "r")))))),
                             (Binder ("B",
                                (Pi (R, U,
                                   (App
                                      [(Id ("eq", I)); (Id ("m", I));
                                        (Id ("n", I))]),
                                   (Binder ("_",
                                      (Pi (R, U,
                                         (App [(Id ("B", I)); (Id ("n", I))]),
                                         (Binder ("_",
                                            (App
                                               [(Id ("B", I)); (Id ("m", I))])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; I; E]};
  Definition {name = "congr"; relv = N;
    body =
    (Binder (["s"; "r"; "t"],
       ((Fun (
           (Pi (R, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (R, U, (Type (SId "r")),
                    (Binder ("B",
                       (Pi (R, U, (Id ("A", I)),
                          (Binder ("m",
                             (Pi (R, U, (Id ("A", I)),
                                (Binder ("n",
                                   (Pi (R, U,
                                      (Pi (R, (SId "t"), (Id ("A", I)),
                                         (Binder ("_", (Id ("B", I)))))),
                                      (Binder ("f",
                                         (Pi (R, U,
                                            (App
                                               [(Id ("eq", I));
                                                 (Id ("m", I)); (Id ("n", I))
                                                 ]),
                                            (Binder ("_",
                                               (App
                                                  [(Id ("eq", I));
                                                    (App
                                                       [(Id ("f", I));
                                                         (Id ("m", I))]);
                                                    (App
                                                       [(Id ("f", I));
                                                         (Id ("n", I))])
                                                    ])
                                               ))
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "congr"),
              [([(PId "A"); (PId "B"); (PId "m"); (PId "n"); (PId "f");
                  (PId "refl")],
                (Some (Id ("refl", I))))]
              )),
           [I; I; I; I; E])),
        (Pi (R, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (R, U, (Type (SId "r")),
                 (Binder ("B",
                    (Pi (R, U, (Id ("A", I)),
                       (Binder ("m",
                          (Pi (R, U, (Id ("A", I)),
                             (Binder ("n",
                                (Pi (R, U,
                                   (Pi (R, (SId "t"), (Id ("A", I)),
                                      (Binder ("_", (Id ("B", I)))))),
                                   (Binder ("f",
                                      (Pi (R, U,
                                         (App
                                            [(Id ("eq", I)); (Id ("m", I));
                                              (Id ("n", I))]),
                                         (Binder ("_",
                                            (App
                                               [(Id ("eq", I));
                                                 (App
                                                    [(Id ("f", I));
                                                      (Id ("m", I))]);
                                                 (App
                                                    [(Id ("f", I));
                                                      (Id ("n", I))])
                                                 ])
                                            ))
                                         ))
                                      ))
                                   ))
                                ))
                             ))
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; I; I; E]};
  Definition {name = "hd_vec"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")], I)); (Id ("A", I));
                               (App [(Id ("succ", I)); (Id ("n", I))])]),
                          (Binder ("_", (Id ("A", I))))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec"),
              [([(PId "A"); (PId "n"); (PId "vnil")], None);
                ([(PId "A"); (PId "n");
                   (PMul ("vcons", [(PId "_"); (PId "hd"); (PId "_")]))],
                 (Some (Id ("hd", I))))
                ]
              )),
           [I; I])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")], I)); (Id ("A", I));
                            (App [(Id ("succ", I)); (Id ("n", I))])]),
                       (Binder ("_", (Id ("A", I))))))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I]};
  Definition {name = "hd_vec2"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")], I)); (Id ("A", I));
                               (App [(Id ("succ", I)); (Id ("n", I))])]),
                          (Binder ("xs", IMeta))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec2"),
              [([(PId "A"); (PId "n"); (PId "xs")],
                (Some (Match (
                         [(N, IMeta, (Some ("n0", IMeta)));
                           (R, (Id ("xs", I)),
                            (Some ("_",
                                   (App
                                      [(Inst ("vec", [(SId "s")], I));
                                        (Id ("A", I));
                                        (App
                                           [(Id ("succ", I)); (Id ("n0", I))])
                                        ]))))
                           ],
                         None,
                         [([(PId "_"); (PId "vnil")], None);
                           ([(PId "_");
                              (PMul ("vcons",
                                 [(PId "_"); (PId "hd"); (PId "_")]))
                              ],
                            (Some (Id ("hd", I))))
                           ]
                         ))))
                ]
              )),
           [I; I; E])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")], I)); (Id ("A", I));
                            (App [(Id ("succ", I)); (Id ("n", I))])]),
                       (Binder ("xs", IMeta))))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; E]};
  Definition {name = "hd_vec3"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Inst ("vec", [(SId "s")], I)); (Id ("A", I));
                               (App [(Id ("succ", I)); (Id ("n", I))])]),
                          (Binder ("xs", IMeta))))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "hd_vec3"),
              [([(PId "A"); (PId "n"); (PId "xs")],
                (Some (Match ([(R, (Id ("xs", I)), None)], None,
                         [([(PId "vnil")], None);
                           ([(PMul ("vcons",
                                [(PId "_"); (PId "hd"); (PId "_")]))
                              ],
                            (Some (Id ("hd", I))))
                           ]
                         ))))
                ]
              )),
           [I; I; E])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App
                          [(Inst ("vec", [(SId "s")], I)); (Id ("A", I));
                            (App [(Id ("succ", I)); (Id ("n", I))])]),
                       (Binder ("xs", IMeta))))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I; E]};
  Definition {name = "vlength"; relv = R;
    body =
    (Binder (["s"],
       ((Fun (
           (Pi (N, U, (Type (SId "s")),
              (Binder ("A",
                 (Pi (N, U, (Id ("nat", I)),
                    (Binder ("n",
                       (Pi (R, U,
                          (App
                             [(Id ("vec", I)); (Id ("A", I)); (Id ("n", I))]),
                          (Binder ("_",
                             (App
                                [(Id ("exists", I));
                                  (Fun (
                                     (Pi (R, U, IMeta, (Binder ("x", IMeta))
                                        )),
                                     (Binder (None,
                                        [([(PId "x")],
                                          (Some (App
                                                   [(Id ("eq", I));
                                                     (Id ("x", I));
                                                     (Id ("n", I))])))
                                          ]
                                        )),
                                     []))
                                  ])
                             ))
                          ))
                       ))
                    ))
                 ))
              )),
           (Binder ((Some "vlength"),
              [([(PId "A"); (PId "n"); (PId "vnil")],
                (Some (App
                         [(Id ("ex", I)); (Id ("zero", I)); (Id ("refl", I))])));
                ([(PId "A"); (PId "n");
                   (PMul ("vcons", [(PId "_"); (PId "_"); (PId "tl")]))],
                 (Some (Match (
                          [(R, (App [(Id ("vlength", I)); (Id ("tl", I))]),
                            None)],
                          None,
                          [([(PMul ("ex", [(PId "n"); (PId "pf")]))],
                            (Some (App
                                     [(Id ("ex", I));
                                       (App [(Id ("succ", I)); (Id ("n", I))]);
                                       (App
                                          [(Id ("congr", I));
                                            (Fun (
                                               (Pi (R, U, IMeta,
                                                  (Binder ("x", IMeta)))),
                                               (Binder (None,
                                                  [([(PId "x")],
                                                    (Some (App
                                                             [(Id ("succ", I
                                                                 ));
                                                               (Id ("x", I))])))
                                                    ]
                                                  )),
                                               []));
                                            (Id ("pf", I))])
                                       ])))
                            ]
                          ))))
                ]
              )),
           [I; I])),
        (Pi (N, U, (Type (SId "s")),
           (Binder ("A",
              (Pi (N, U, (Id ("nat", I)),
                 (Binder ("n",
                    (Pi (R, U,
                       (App [(Id ("vec", I)); (Id ("A", I)); (Id ("n", I))]),
                       (Binder ("_",
                          (App
                             [(Id ("exists", I));
                               (Fun (
                                  (Pi (R, U, IMeta, (Binder ("x", IMeta)))),
                                  (Binder (None,
                                     [([(PId "x")],
                                       (Some (App
                                                [(Id ("eq", I));
                                                  (Id ("x", I));
                                                  (Id ("n", I))])))
                                       ]
                                     )),
                                  []))
                               ])
                          ))
                       ))
                    ))
                 ))
              ))
           )))
       ));
    view = [I; I]};
  Definition {name = "xs"; relv = R;
    body =
    (Binder ([],
       ((App [(Id ("vcons", I)); (Id ("zero", I)); (Id ("vnil", I))]), IMeta)
       ));
    view = []};
  Definition {name = "x"; relv = R;
    body = (Binder ([], ((App [(Id ("hd_vec", I)); (Id ("xs", I))]), IMeta)));
    view = []};
  Definition {name = "y"; relv = R;
    body =
    (Binder ([], ((App [(Id ("hd_vec2", I)); (Id ("xs", I))]), IMeta)));
    view = []};
  Definition {name = "z"; relv = R;
    body =
    (Binder ([], ((App [(Id ("hd_vec2", I)); (Id ("xs", I))]), IMeta)));
    view = []}
  ]

-----------------------------------------

#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_186 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_187› (A_188 : Type‹s_187›) (m_189 : A_188):
  A_188 -> U
where
| refl_6 : (eq_4‹??_1› ?_1 m_189 m_189)

#[program]
inductive exists_5‹s_191,r_192› (A_193 : Type‹s_191›) (B_194 : 
A_193 -> Type‹r_192›): U where
| ex_7
    (m_196 : A_193) {pf_197 : ((B_194) m_196)}
    : (exists_5‹??_2,??_3› A_193 B_194)

#[program]
inductive sing_6‹s_198› (A_199 : Type‹s_198›):
  A_199 -> Type‹s_198›
where
| just_8 (m_201 : A_199) : (sing_6‹??_4› ?_2 m_201)

#[program]
inductive list_7‹s_202› (A_203 : Type‹s_202›): U where
| nil_9 : (list_7‹??_5› A_203)
| cons_10
    (hd_204 : A_203) (tl_205 : (list_7‹??_6› A_203))
    : (list_7‹??_7› A_203)

#[program]
inductive vec_8‹s_206› (A_207 : Type‹s_206›): nat_3 -> U where
| vnil_11 : (vec_8‹??_8› A_207 zero_4)
| vcons_12
    {n_209 : nat_3} (hd_210 : A_207)
    (tl_211 : (vec_8‹s_206› A_207 n_209))
    : (vec_8‹??_9› A_207 (succ_5‹› n_209))

#[program]
def rwl_1‹s_212,r_213› :
  ∀ {A_214 : Type‹s_212›} ->
    ∀ {m_215 : A_214} ->
      ∀ {n_216 : A_214} ->
        ∀ {B_217 : A_214 -> Type‹r_213›} ->
          (eq_4‹??_11› ?_4 m_215 n_216) ->
            ((B_217) m_215) -> ((B_217) n_216)
:=
  function rwl_221 :
    ∀ {A_222 : Type‹s_212›} ->
      ∀ {m_223 : A_222} ->
        ∀ {n_224 : A_222} ->
          ∀ {B_225 : A_222 -> Type‹r_213›} ->
            (eq_4‹??_10› ?_3 m_223 n_224) ->
              ((B_225) m_223) -> ((B_225) n_224)
  | A_229 m_230 n_231 B_232 refl_6 x_233 => x_233

#[program]
def rwr_2‹s_234,r_235› :
  ∀ {A_236 : Type‹s_234›} ->
    ∀ {m_237 : A_236} ->
      ∀ {n_238 : A_236} ->
        ∀ {B_239 : A_236 -> Type‹r_235›} ->
          (eq_4‹??_13› ?_6 m_237 n_238) ->
            ((B_239) n_238) -> ((B_239) m_237)
:=
  function rwr_243 :
    ∀ {A_244 : Type‹s_234›} ->
      ∀ {m_245 : A_244} ->
        ∀ {n_246 : A_244} ->
          ∀ {B_247 : A_244 -> Type‹r_235›} ->
            (eq_4‹??_12› ?_5 m_245 n_246) ->
              ((B_247) n_246) -> ((B_247) m_245)
  | A_251 m_252 n_253 B_254 refl_6 x_255 => x_255

#[logical]
def congr_3‹s_256,r_257,t_258› :
  ∀ (A_259 : Type‹s_256›) ->
    ∀ (B_260 : Type‹r_257›) ->
      ∀ (m_261 : A_259) ->
        ∀ (n_262 : A_259) ->
          ∀ (f_263 : forall‹t_258›(__264 : A_259), B_260) ->
            ∀ (__265 : (eq_4‹??_17› ?_11 m_261 n_262)) ->
              (eq_4‹??_18› ?_12 ((f_263) m_261) ((f_263) n_262))
:=
  function congr_266 :
    ∀ (A_267 : Type‹s_256›) ->
      ∀ (B_268 : Type‹r_257›) ->
        ∀ (m_269 : A_267) ->
          ∀ (n_270 : A_267) ->
            ∀ (f_271 : forall‹t_258›(__272 : A_267), B_268) ->
              ∀ (__273 : (eq_4‹??_14› ?_7 m_269 n_270)) ->
                (eq_4‹??_15› ?_8 ((f_271) m_269) ((f_271) n_270))
  | A_274 B_275 m_276 n_277 f_278 refl_6 => refl_6‹??_16›

#[program]
def hd_vec_4‹s_279› :
  ∀ {A_280 : Type‹s_279›} ->
    ∀ {n_281 : nat_3} ->
      (vec_8‹s_279› A_280 (succ_5‹› n_281)) -> A_280
:=
  function hd_vec_283 :
    ∀ {A_284 : Type‹s_279›} ->
      ∀ {n_285 : nat_3} ->
        (vec_8‹s_279› A_284 (succ_5‹› n_285)) -> A_284
  | A_287 n_288 vnil_11 =>
  | A_289 n_290 (vcons_12 _291 hd_292 _293) => hd_292

#[program]
def hd_vec2_5‹s_294› :
  ∀ {A_295 : Type‹s_294›} ->
    ∀ {n_296 : nat_3} ->
      ∀ (xs_297 : (vec_8‹s_294› A_295 (succ_5‹› n_296))) -> ?_17
:=
  function hd_vec2_298 :
    ∀ {A_299 : Type‹s_294›} ->
      ∀ {n_300 : nat_3} ->
        ∀ (xs_301 : (vec_8‹s_294› A_299 (succ_5‹› n_300))) -> ?_13
  | A_302 n_303 xs_304 =>
    match ?_14, xs_304 in
      ∀ {n0_305 : ?_15} -o
        ∀ (__306 : (vec_8‹s_294› A_302 (succ_5‹› n0_305))) -o ?_16
    with
    | _307, vnil_11 =>
    | _308, (vcons_12 _309 hd_310 _311) => hd_310

#[program]
def hd_vec3_6‹s_312› :
  ∀ {A_313 : Type‹s_312›} ->
    ∀ {n_314 : nat_3} ->
      ∀ (xs_315 : (vec_8‹s_312› A_313 (succ_5‹› n_314))) -> ?_21
:=
  function hd_vec3_316 :
    ∀ {A_317 : Type‹s_312›} ->
      ∀ {n_318 : nat_3} ->
        ∀ (xs_319 : (vec_8‹s_312› A_317 (succ_5‹› n_318))) -> ?_18
  | A_320 n_321 xs_322 =>
    match xs_322 in ∀ (_323 : ?_19) -o ?_20 with
    | vnil_11 =>
    | (vcons_12 _324 hd_325 _326) => hd_325

#[program]
def vlength_7‹s_327› :
  ∀ {A_328 : Type‹s_327›} ->
    ∀ {n_329 : nat_3} ->
      ∀ (__330 : (vec_8‹??_31› A_328 n_329)) ->
        (exists_5‹??_33,??_34›
          ?_45
          function _331 : ∀ (x_332 : ?_42) -> ?_43
          | x_333 => (eq_4‹??_32› ?_44 x_333 n_329))
:=
  function vlength_334 :
    ∀ {A_335 : Type‹s_327›} ->
      ∀ {n_336 : nat_3} ->
        ∀ (__337 : (vec_8‹??_19› A_335 n_336)) ->
          (exists_5‹??_21,??_22›
            ?_25
            function _338 : ∀ (x_339 : ?_22) -> ?_23
            | x_340 => (eq_4‹??_20› ?_24 x_340 n_336))
  | A_341 n_342 vnil_11 => (ex_7‹??_24,??_25› zero_4 refl_6‹??_23›)
  | A_343 n_344 (vcons_12 _345 _346 tl_347) =>
    match ((vlength_334) ?_31 ?_30 tl_347) in ∀ (_348 : ?_32) -o ?_33 with
    | (ex_7 n_349 pf_350) =>
      (ex_7‹??_29,??_30›
        (succ_5‹› n_349)
        ((congr_3‹??_26,??_27,??_28›)
          ?_39 ?_38 ?_37 ?_36
          function _351 : ∀ (x_352 : ?_34) -> ?_35
          | x_353 => (succ_5‹› x_353) pf_350))

#[program]
def xs_8‹› : ?_49 := (vcons_12‹??_36› ?_47 zero_4 vnil_11‹??_35›)

#[program]
def x_9‹› : ?_52 := ((hd_vec_4‹??_37›) ?_51 ?_50 xs_8)

#[program]
def y_10‹› : ?_55 := ((hd_vec2_5‹??_38›) ?_54 ?_53 xs_8)

#[program]
def z_11‹› : ?_58 := ((hd_vec2_5‹??_39›) ?_57 ?_56 xs_8)

-----------------------------------------

inductive-------------------------
infer_tm(unit_1)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(bool_2)
infer_tm(bool_2)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(nat_3)
infer_tm(nat_3)
infer_tm(nat_3)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    
  |}
  imeta_meta {|
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_356›)
infer_tm(A_357)
infer_tm(A_357)
infer_tm(Type‹s_360›)
infer_tm(A_361)
assert_equal1( A_361, ?_1)
assert_equal1( m_362, m_362)
infer_tm((eq_4‹??_1› ?_1 m_362 m_362))
check_tm( ?_1, Type‹??_1›)
check_tm( m_362, ?_1)
infer_tm(m_362)
assert_equal1( ?_1, A_361)
check_tm( m_362, ?_1)
infer_tm(m_362)
assert_equal1( ?_1, A_361)
simpl_tm ~expand:false( ?_1, A_361)
simpl_tm ~expand:false( A_361, A_361)
simpl_tm ~expand:false( A_361, A_361)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_363
    
  |}
  imeta_meta {|
    ?_1 <= A_366
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_360›)
check_tm( A_361, Type‹s_360›)
infer_tm(A_361)
assert_equal1( Type‹s_360›, Type‹s_360›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_378›)
infer_tm(A_380 -> Type‹r_379›)
infer_tm(A_380)
infer_tm(Type‹r_379›)
infer_tm(Type‹s_384›)
infer_tm(A_386 -> Type‹r_385›)
infer_tm(A_386)
infer_tm(Type‹r_385›)
infer_tm(A_386)
infer_tm(((B_387) m_390))
infer_tm(B_387)
check_tm( m_390, A_386)
infer_tm(m_390)
assert_equal1( A_386, A_386)
assert_equal1( A_386, A_386)
assert_equal1( B_387, B_387)
infer_tm((exists_5‹??_2,??_3› A_386 B_387))
check_tm( A_386, Type‹??_2›)
infer_tm(A_386)
assert_equal1( Type‹??_2›, Type‹s_384›)
check_tm( B_387, A_386 -> Type‹??_3›)
infer_tm(B_387)
assert_equal1( A_386 -> Type‹??_3›, A_386 -> Type‹r_385›)
simpl_tm ~expand:false( A_386 -> Type‹??_3›, A_386 -> Type‹r_385›)
simpl_tm ~expand:false( A_386, A_386)
simpl_tm ~expand:false( Type‹??_3›, Type‹r_385›)
simpl_tm ~expand:false( Type‹??_2›, Type‹s_384›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_405
    ??_2 <= s_407
    ??_3 <= r_408
    
  |}
  imeta_meta {|
    ?_1 <= A_412
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_440›)
infer_tm(A_441)
infer_tm(Type‹s_443›)
infer_tm(A_444)
assert_equal1( A_444, ?_2)
infer_tm((sing_6‹??_4› ?_2 m_445))
check_tm( ?_2, Type‹??_4›)
check_tm( m_445, ?_2)
infer_tm(m_445)
assert_equal1( ?_2, A_444)
simpl_tm ~expand:false( ?_2, A_444)
simpl_tm ~expand:false( A_444, A_444)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_446
    ??_2 <= s_448
    ??_3 <= r_449
    ??_4 <= s_451
    
  |}
  imeta_meta {|
    ?_1 <= A_454
    ?_2 <= A_457
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹s_443›)
check_tm( A_444, Type‹s_443›)
infer_tm(A_444)
assert_equal1( Type‹s_443›, Type‹s_443›)
----------------------------------

inductive-------------------------
infer_tm(Type‹s_470›)
infer_tm(Type‹s_472›)
assert_equal1( A_473, A_473)
infer_tm((list_7‹??_5› A_473))
check_tm( A_473, Type‹??_5›)
infer_tm(A_473)
assert_equal1( Type‹??_5›, Type‹s_472›)
simpl_tm ~expand:false( Type‹??_5›, Type‹s_472›)
infer_tm(Type‹s_474›)
infer_tm(A_475)
infer_tm((list_7‹??_6› A_475))
check_tm( A_475, Type‹??_6›)
infer_tm(A_475)
assert_equal1( Type‹??_6›, Type‹s_474›)
simpl_tm ~expand:false( Type‹??_6›, Type‹s_474›)
assert_equal1( A_475, A_475)
infer_tm((list_7‹??_7› A_475))
check_tm( A_475, Type‹??_7›)
infer_tm(A_475)
assert_equal1( Type‹??_7›, Type‹s_474›)
simpl_tm ~expand:false( Type‹??_7›, Type‹s_474›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_478
    ??_2 <= s_480
    ??_3 <= r_481
    ??_4 <= s_483
    ??_5 <= s_484
    ??_6 <= s_485
    ??_7 <= s_486
    
  |}
  imeta_meta {|
    ?_1 <= A_489
    ?_2 <= A_492
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

inductive-------------------------
infer_tm(Type‹s_508›)
infer_tm(nat_3)
infer_tm(Type‹s_511›)
assert_equal1( A_512, A_512)
infer_tm((vec_8‹??_8› A_512 zero_4))
check_tm( A_512, Type‹??_8›)
infer_tm(A_512)
assert_equal1( Type‹??_8›, Type‹s_511›)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_8›, Type‹s_511›)
infer_tm(Type‹s_513›)
infer_tm(nat_3)
infer_tm(A_514)
infer_tm((vec_8‹s_513› A_514 n_515))
check_tm( A_514, Type‹s_513›)
infer_tm(A_514)
assert_equal1( Type‹s_513›, Type‹s_513›)
check_tm( n_515, nat_3)
infer_tm(n_515)
assert_equal1( nat_3, nat_3)
assert_equal1( A_514, A_514)
infer_tm((vec_8‹??_9› A_514 (succ_5‹› n_515)))
check_tm( A_514, Type‹??_9›)
infer_tm(A_514)
assert_equal1( Type‹??_9›, Type‹s_513›)
check_tm( (succ_5‹› n_515), nat_3)
infer_tm((succ_5‹› n_515))
check_tm( n_515, nat_3)
infer_tm(n_515)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_9›, Type‹s_513›)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_518
    ??_2 <= s_520
    ??_3 <= r_521
    ??_4 <= s_523
    ??_5 <= s_524
    ??_6 <= s_525
    ??_7 <= s_526
    ??_8 <= s_527
    ??_9 <= s_528
    
  |}
  imeta_meta {|
    ?_1 <= A_531
    ?_2 <= A_534
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_558 : Type‹s_556›} ->
           ∀ {m_559 : A_558} ->
             ∀ {n_560 : A_558} ->
               ∀ {B_561 : A_558 -> Type‹r_557›} ->
                 (eq_4‹??_11› ?_4 m_559 n_560) ->
                   ((B_561) m_559) -> ((B_561) n_560))
infer_tm(Type‹s_556›)
infer_tm(∀ {m_566 : A_565} ->
           ∀ {n_567 : A_565} ->
             ∀ {B_568 : A_565 -> Type‹r_557›} ->
               (eq_4‹??_11› ?_4 m_566 n_567) ->
                 ((B_568) m_566) -> ((B_568) n_567))
infer_tm(A_565)
infer_tm(∀ {n_573 : A_565} ->
           ∀ {B_574 : A_565 -> Type‹r_557›} ->
             (eq_4‹??_11› ?_4 m_572 n_573) ->
               ((B_574) m_572) -> ((B_574) n_573))
infer_tm(A_565)
infer_tm(∀ {B_579 : A_565 -> Type‹r_557›} ->
           (eq_4‹??_11› ?_4 m_572 n_578) ->
             ((B_579) m_572) -> ((B_579) n_578))
infer_tm(A_565 -> Type‹r_557›)
infer_tm(A_565)
infer_tm(Type‹r_557›)
infer_tm((eq_4‹??_11› ?_4 m_572 n_578) ->
           ((B_583) m_572) -> ((B_583) n_578))
infer_tm((eq_4‹??_11› ?_4 m_572 n_578))
check_tm( ?_4, Type‹??_11›)
check_tm( m_572, ?_4)
infer_tm(m_572)
assert_equal1( ?_4, A_565)
check_tm( n_578, ?_4)
infer_tm(n_578)
assert_equal1( ?_4, A_565)
simpl_tm ~expand:false( ?_4, A_565)
simpl_tm ~expand:false( A_565, A_565)
infer_tm(((B_583) m_572) -> ((B_583) n_578))
infer_tm(((B_583) m_572))
infer_tm(B_583)
check_tm( m_572, A_565)
infer_tm(m_572)
assert_equal1( A_565, A_565)
infer_tm(((B_583) n_578))
infer_tm(B_583)
check_tm( n_578, A_565)
infer_tm(n_578)
assert_equal1( A_565, A_565)
check_tm(
  function rwl_593 :
    ∀ {A_594 : Type‹s_556›} ->
      ∀ {m_595 : A_594} ->
        ∀ {n_596 : A_594} ->
          ∀ {B_597 : A_594 -> Type‹r_557›} ->
            (eq_4‹??_10› ?_3 m_595 n_596) ->
              ((B_597) m_595) -> ((B_597) n_596)
  | A_601 m_602 n_603 B_604 refl_6 x_605 => x_605,
  ∀ {A_606 : Type‹s_556›} ->
    ∀ {m_607 : A_606} ->
      ∀ {n_608 : A_606} ->
        ∀ {B_609 : A_606 -> Type‹r_557›} ->
          (eq_4‹??_11› ?_4 m_607 n_608) ->
            ((B_609) m_607) -> ((B_609) n_608))
infer_tm(∀ {A_614 : Type‹s_556›} ->
           ∀ {m_615 : A_614} ->
             ∀ {n_616 : A_614} ->
               ∀ {B_617 : A_614 -> Type‹r_557›} ->
                 (eq_4‹??_10› ?_3 m_615 n_616) ->
                   ((B_617) m_615) -> ((B_617) n_616))
infer_tm(Type‹s_556›)
infer_tm(∀ {m_622 : A_621} ->
           ∀ {n_623 : A_621} ->
             ∀ {B_624 : A_621 -> Type‹r_557›} ->
               (eq_4‹??_10› ?_3 m_622 n_623) ->
                 ((B_624) m_622) -> ((B_624) n_623))
infer_tm(A_621)
infer_tm(∀ {n_629 : A_621} ->
           ∀ {B_630 : A_621 -> Type‹r_557›} ->
             (eq_4‹??_10› ?_3 m_628 n_629) ->
               ((B_630) m_628) -> ((B_630) n_629))
infer_tm(A_621)
infer_tm(∀ {B_635 : A_621 -> Type‹r_557›} ->
           (eq_4‹??_10› ?_3 m_628 n_634) ->
             ((B_635) m_628) -> ((B_635) n_634))
infer_tm(A_621 -> Type‹r_557›)
infer_tm(A_621)
infer_tm(Type‹r_557›)
infer_tm((eq_4‹??_10› ?_3 m_628 n_634) ->
           ((B_639) m_628) -> ((B_639) n_634))
infer_tm((eq_4‹??_10› ?_3 m_628 n_634))
check_tm( ?_3, Type‹??_10›)
check_tm( m_628, ?_3)
infer_tm(m_628)
assert_equal1( ?_3, A_621)
check_tm( n_634, ?_3)
infer_tm(n_634)
assert_equal1( ?_3, A_621)
simpl_tm ~expand:false( ?_3, A_621)
simpl_tm ~expand:false( A_621, A_621)
infer_tm(((B_639) m_628) -> ((B_639) n_634))
infer_tm(((B_639) m_628))
infer_tm(B_639)
check_tm( m_628, A_621)
infer_tm(m_628)
assert_equal1( A_621, A_621)
infer_tm(((B_639) n_634))
infer_tm(B_639)
check_tm( n_634, A_621)
infer_tm(n_634)
assert_equal1( A_621, A_621)
assert_equal1(
  ∀ {A_649 : Type‹s_556›} ->
    ∀ {m_650 : A_649} ->
      ∀ {n_651 : A_649} ->
        ∀ {B_652 : A_649 -> Type‹r_557›} ->
          (eq_4‹??_11› ?_4 m_650 n_651) ->
            ((B_652) m_650) -> ((B_652) n_651),
  ∀ {A_656 : Type‹s_556›} ->
    ∀ {m_657 : A_656} ->
      ∀ {n_658 : A_656} ->
        ∀ {B_659 : A_656 -> Type‹r_557›} ->
          (eq_4‹??_10› ?_3 m_657 n_658) ->
            ((B_659) m_657) -> ((B_659) n_658))
simpl_tm ~expand:false(
  ∀ {A_756 : Type‹s_556›} ->
    ∀ {m_757 : A_756} ->
      ∀ {n_758 : A_756} ->
        ∀ {B_759 : A_756 -> Type‹r_557›} ->
          (eq_4‹??_11› A_756 m_757 n_758) ->
            ((B_759) m_757) -> ((B_759) n_758),
  ∀ {A_763 : Type‹s_556›} ->
    ∀ {m_764 : A_763} ->
      ∀ {n_765 : A_763} ->
        ∀ {B_766 : A_763 -> Type‹r_557›} ->
          (eq_4‹??_10› A_763 m_764 n_765) ->
            ((B_766) m_764) -> ((B_766) n_765))
simpl_tm ~expand:false( Type‹s_556›, Type‹s_556›)
simpl_tm ~expand:false(
  ∀ {m_771 : A_770} ->
    ∀ {n_772 : A_770} ->
      ∀ {B_773 : A_770 -> Type‹r_557›} ->
        (eq_4‹??_11› A_770 m_771 n_772) ->
          ((B_773) m_771) -> ((B_773) n_772),
  ∀ {m_777 : A_770} ->
    ∀ {n_778 : A_770} ->
      ∀ {B_779 : A_770 -> Type‹r_557›} ->
        (eq_4‹??_10› A_770 m_777 n_778) ->
          ((B_779) m_777) -> ((B_779) n_778))
simpl_tm ~expand:false( A_770, A_770)
simpl_tm ~expand:false(
  ∀ {n_784 : A_770} ->
    ∀ {B_785 : A_770 -> Type‹r_557›} ->
      (eq_4‹??_11› A_770 m_783 n_784) ->
        ((B_785) m_783) -> ((B_785) n_784),
  ∀ {n_789 : A_770} ->
    ∀ {B_790 : A_770 -> Type‹r_557›} ->
      (eq_4‹??_10› A_770 m_783 n_789) ->
        ((B_790) m_783) -> ((B_790) n_789))
simpl_tm ~expand:false( A_770, A_770)
simpl_tm ~expand:false(
  ∀ {B_795 : A_770 -> Type‹r_557›} ->
    (eq_4‹??_11› A_770 m_783 n_794) -> ((B_795) m_783) -> ((B_795) n_794),
  ∀ {B_799 : A_770 -> Type‹r_557›} ->
    (eq_4‹??_10› A_770 m_783 n_794) -> ((B_799) m_783) -> ((B_799) n_794))
simpl_tm ~expand:false( A_770 -> Type‹r_557›, A_770 -> Type‹r_557›)
simpl_tm ~expand:false( A_770, A_770)
simpl_tm ~expand:false( Type‹r_557›, Type‹r_557›)
simpl_tm ~expand:false(
  (eq_4‹??_11› A_770 m_783 n_794) -> ((B_803) m_783) -> ((B_803) n_794),
  (eq_4‹??_10› A_770 m_783 n_794) -> ((B_803) m_783) -> ((B_803) n_794))
simpl_tm ~expand:false( (eq_4‹??_11› A_770 m_783 n_794),
  (eq_4‹??_10› A_770 m_783 n_794))
simpl_tm ~expand:false( A_770, A_770)
simpl_tm ~expand:false( m_783, m_783)
simpl_tm ~expand:false( n_794, n_794)
simpl_tm ~expand:false( ((B_803) m_783) -> ((B_803) n_794),
  ((B_803) m_783) -> ((B_803) n_794))
simpl_tm ~expand:false( ((B_803) m_783), ((B_803) m_783))
simpl_tm ~expand:false( B_803, B_803)
simpl_tm ~expand:false( m_783, m_783)
simpl_tm ~expand:false( ((B_803) n_794), ((B_803) n_794))
simpl_tm ~expand:false( B_803, B_803)
simpl_tm ~expand:false( n_794, n_794)
check_cls {|
  prblm {| ;
    {|  ::: [A_701, m_702, n_703, B_704, refl_6, x_705] =>? #x_705 |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_10› #A_840 #m_841 #n_842),
      (eq_4‹??_10› #A_840 #m_841 #m_841));
    {| eq_pat?( #A_840, A_701 : Type‹s_556›)
       eq_pat?( #m_841, m_702 : #A_840)
       eq_pat?( #n_842, n_703 : #A_840)
       eq_pat?( #B_843, B_704 : #A_840 -> Type‹r_557›)
       eq_pat?( #__845, x_705 : ((#B_843) #m_841)) ::: [] =>? #x_705
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_10› #A_840 #m_841 #n_842),
    (eq_4‹??_10› #A_840 #m_841 #m_841))
  eq_pat?( #A_840, A_701 : Type‹s_556›)
  eq_pat?( #m_841, m_702 : #A_840)
  eq_pat?( #n_842, n_703 : #A_840)
  eq_pat?( #B_843, B_704 : #A_840 -> Type‹r_557›)
  eq_pat?( #__845, x_705 : ((#B_843) #m_841))
)
simpl_pprbm ~expand:false( (eq_4‹??_10› #A_840 #m_841 #n_842),
  (eq_4‹??_10› #A_840 #m_841 #m_841))
simpl_pprbm ~expand:false( #A_840, #A_840)
simpl_pprbm ~expand:false( #m_841, #m_841)
simpl_pprbm ~expand:false( #n_842, #m_841)
simpl_pprbm ~expand:false( #A_840, #A_701)
simpl_pprbm ~expand:false( #m_841, #m_702)
simpl_pprbm ~expand:false( #n_842, #n_703)
simpl_pprbm ~expand:false( #B_843, #B_704)
simpl_pprbm ~expand:false( #__845, #x_705)
simpl_pprbm ~expand:false( #n_842, #m_841)
simpl_pprbm ~expand:false( #A_840, #A_701)
simpl_pprbm ~expand:false( #n_842, #m_702)
simpl_pprbm ~expand:false( #n_842, #n_703)
simpl_pprbm ~expand:false( #B_843, #B_704)
simpl_pprbm ~expand:false( #__845, #x_705)
case_coverage_ok( __845, ((B_843) n_842))
check_tm( __845, ((B_843) n_842))
infer_tm(__845)
assert_equal1( ((B_843) n_842), ((B_843) n_842))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_901
    ??_2 <= s_903
    ??_3 <= r_904
    ??_4 <= s_906
    ??_5 <= s_907
    ??_6 <= s_908
    ??_7 <= s_909
    ??_8 <= s_910
    ??_9 <= s_911
    ??_11 <= ??_10
    
  |}
  imeta_meta {|
    ?_1 <= A_916
    ?_2 <= A_919
    ?_3 <= A_925
    ?_4 <= A_931
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹??_10›)
check_tm( A_621, Type‹??_10›)
infer_tm(A_621)
assert_equal1( Type‹??_10›, Type‹s_556›)
simpl_tm ~expand:false( Type‹??_10›, Type‹s_556›)
infer_tm(Type‹s_556›)
check_tm( A_565, Type‹s_556›)
infer_tm(A_565)
assert_equal1( Type‹s_556›, Type‹s_556›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_1008 : Type‹s_1006›} ->
           ∀ {m_1009 : A_1008} ->
             ∀ {n_1010 : A_1008} ->
               ∀ {B_1011 : A_1008 -> Type‹r_1007›} ->
                 (eq_4‹??_13› ?_6 m_1009 n_1010) ->
                   ((B_1011) n_1010) -> ((B_1011) m_1009))
infer_tm(Type‹s_1006›)
infer_tm(∀ {m_1016 : A_1015} ->
           ∀ {n_1017 : A_1015} ->
             ∀ {B_1018 : A_1015 -> Type‹r_1007›} ->
               (eq_4‹??_13› ?_6 m_1016 n_1017) ->
                 ((B_1018) n_1017) -> ((B_1018) m_1016))
infer_tm(A_1015)
infer_tm(∀ {n_1023 : A_1015} ->
           ∀ {B_1024 : A_1015 -> Type‹r_1007›} ->
             (eq_4‹??_13› ?_6 m_1022 n_1023) ->
               ((B_1024) n_1023) -> ((B_1024) m_1022))
infer_tm(A_1015)
infer_tm(∀ {B_1029 : A_1015 -> Type‹r_1007›} ->
           (eq_4‹??_13› ?_6 m_1022 n_1028) ->
             ((B_1029) n_1028) -> ((B_1029) m_1022))
infer_tm(A_1015 -> Type‹r_1007›)
infer_tm(A_1015)
infer_tm(Type‹r_1007›)
infer_tm((eq_4‹??_13› ?_6 m_1022 n_1028) ->
           ((B_1033) n_1028) -> ((B_1033) m_1022))
infer_tm((eq_4‹??_13› ?_6 m_1022 n_1028))
check_tm( ?_6, Type‹??_13›)
check_tm( m_1022, ?_6)
infer_tm(m_1022)
assert_equal1( ?_6, A_1015)
check_tm( n_1028, ?_6)
infer_tm(n_1028)
assert_equal1( ?_6, A_1015)
simpl_tm ~expand:false( ?_6, A_1015)
simpl_tm ~expand:false( A_1015, A_1015)
infer_tm(((B_1033) n_1028) -> ((B_1033) m_1022))
infer_tm(((B_1033) n_1028))
infer_tm(B_1033)
check_tm( n_1028, A_1015)
infer_tm(n_1028)
assert_equal1( A_1015, A_1015)
infer_tm(((B_1033) m_1022))
infer_tm(B_1033)
check_tm( m_1022, A_1015)
infer_tm(m_1022)
assert_equal1( A_1015, A_1015)
check_tm(
  function rwr_1043 :
    ∀ {A_1044 : Type‹s_1006›} ->
      ∀ {m_1045 : A_1044} ->
        ∀ {n_1046 : A_1044} ->
          ∀ {B_1047 : A_1044 -> Type‹r_1007›} ->
            (eq_4‹??_12› ?_5 m_1045 n_1046) ->
              ((B_1047) n_1046) -> ((B_1047) m_1045)
  | A_1051 m_1052 n_1053 B_1054 refl_6 x_1055 => x_1055,
  ∀ {A_1056 : Type‹s_1006›} ->
    ∀ {m_1057 : A_1056} ->
      ∀ {n_1058 : A_1056} ->
        ∀ {B_1059 : A_1056 -> Type‹r_1007›} ->
          (eq_4‹??_13› ?_6 m_1057 n_1058) ->
            ((B_1059) n_1058) -> ((B_1059) m_1057))
infer_tm(∀ {A_1064 : Type‹s_1006›} ->
           ∀ {m_1065 : A_1064} ->
             ∀ {n_1066 : A_1064} ->
               ∀ {B_1067 : A_1064 -> Type‹r_1007›} ->
                 (eq_4‹??_12› ?_5 m_1065 n_1066) ->
                   ((B_1067) n_1066) -> ((B_1067) m_1065))
infer_tm(Type‹s_1006›)
infer_tm(∀ {m_1072 : A_1071} ->
           ∀ {n_1073 : A_1071} ->
             ∀ {B_1074 : A_1071 -> Type‹r_1007›} ->
               (eq_4‹??_12› ?_5 m_1072 n_1073) ->
                 ((B_1074) n_1073) -> ((B_1074) m_1072))
infer_tm(A_1071)
infer_tm(∀ {n_1079 : A_1071} ->
           ∀ {B_1080 : A_1071 -> Type‹r_1007›} ->
             (eq_4‹??_12› ?_5 m_1078 n_1079) ->
               ((B_1080) n_1079) -> ((B_1080) m_1078))
infer_tm(A_1071)
infer_tm(∀ {B_1085 : A_1071 -> Type‹r_1007›} ->
           (eq_4‹??_12› ?_5 m_1078 n_1084) ->
             ((B_1085) n_1084) -> ((B_1085) m_1078))
infer_tm(A_1071 -> Type‹r_1007›)
infer_tm(A_1071)
infer_tm(Type‹r_1007›)
infer_tm((eq_4‹??_12› ?_5 m_1078 n_1084) ->
           ((B_1089) n_1084) -> ((B_1089) m_1078))
infer_tm((eq_4‹??_12› ?_5 m_1078 n_1084))
check_tm( ?_5, Type‹??_12›)
check_tm( m_1078, ?_5)
infer_tm(m_1078)
assert_equal1( ?_5, A_1071)
check_tm( n_1084, ?_5)
infer_tm(n_1084)
assert_equal1( ?_5, A_1071)
simpl_tm ~expand:false( ?_5, A_1071)
simpl_tm ~expand:false( A_1071, A_1071)
infer_tm(((B_1089) n_1084) -> ((B_1089) m_1078))
infer_tm(((B_1089) n_1084))
infer_tm(B_1089)
check_tm( n_1084, A_1071)
infer_tm(n_1084)
assert_equal1( A_1071, A_1071)
infer_tm(((B_1089) m_1078))
infer_tm(B_1089)
check_tm( m_1078, A_1071)
infer_tm(m_1078)
assert_equal1( A_1071, A_1071)
assert_equal1(
  ∀ {A_1099 : Type‹s_1006›} ->
    ∀ {m_1100 : A_1099} ->
      ∀ {n_1101 : A_1099} ->
        ∀ {B_1102 : A_1099 -> Type‹r_1007›} ->
          (eq_4‹??_13› ?_6 m_1100 n_1101) ->
            ((B_1102) n_1101) -> ((B_1102) m_1100),
  ∀ {A_1106 : Type‹s_1006›} ->
    ∀ {m_1107 : A_1106} ->
      ∀ {n_1108 : A_1106} ->
        ∀ {B_1109 : A_1106 -> Type‹r_1007›} ->
          (eq_4‹??_12› ?_5 m_1107 n_1108) ->
            ((B_1109) n_1108) -> ((B_1109) m_1107))
simpl_tm ~expand:false(
  ∀ {A_1206 : Type‹s_1006›} ->
    ∀ {m_1207 : A_1206} ->
      ∀ {n_1208 : A_1206} ->
        ∀ {B_1209 : A_1206 -> Type‹r_1007›} ->
          (eq_4‹??_13› A_1206 m_1207 n_1208) ->
            ((B_1209) n_1208) -> ((B_1209) m_1207),
  ∀ {A_1213 : Type‹s_1006›} ->
    ∀ {m_1214 : A_1213} ->
      ∀ {n_1215 : A_1213} ->
        ∀ {B_1216 : A_1213 -> Type‹r_1007›} ->
          (eq_4‹??_12› A_1213 m_1214 n_1215) ->
            ((B_1216) n_1215) -> ((B_1216) m_1214))
simpl_tm ~expand:false( Type‹s_1006›, Type‹s_1006›)
simpl_tm ~expand:false(
  ∀ {m_1221 : A_1220} ->
    ∀ {n_1222 : A_1220} ->
      ∀ {B_1223 : A_1220 -> Type‹r_1007›} ->
        (eq_4‹??_13› A_1220 m_1221 n_1222) ->
          ((B_1223) n_1222) -> ((B_1223) m_1221),
  ∀ {m_1227 : A_1220} ->
    ∀ {n_1228 : A_1220} ->
      ∀ {B_1229 : A_1220 -> Type‹r_1007›} ->
        (eq_4‹??_12› A_1220 m_1227 n_1228) ->
          ((B_1229) n_1228) -> ((B_1229) m_1227))
simpl_tm ~expand:false( A_1220, A_1220)
simpl_tm ~expand:false(
  ∀ {n_1234 : A_1220} ->
    ∀ {B_1235 : A_1220 -> Type‹r_1007›} ->
      (eq_4‹??_13› A_1220 m_1233 n_1234) ->
        ((B_1235) n_1234) -> ((B_1235) m_1233),
  ∀ {n_1239 : A_1220} ->
    ∀ {B_1240 : A_1220 -> Type‹r_1007›} ->
      (eq_4‹??_12› A_1220 m_1233 n_1239) ->
        ((B_1240) n_1239) -> ((B_1240) m_1233))
simpl_tm ~expand:false( A_1220, A_1220)
simpl_tm ~expand:false(
  ∀ {B_1245 : A_1220 -> Type‹r_1007›} ->
    (eq_4‹??_13› A_1220 m_1233 n_1244) ->
      ((B_1245) n_1244) -> ((B_1245) m_1233),
  ∀ {B_1249 : A_1220 -> Type‹r_1007›} ->
    (eq_4‹??_12› A_1220 m_1233 n_1244) ->
      ((B_1249) n_1244) -> ((B_1249) m_1233))
simpl_tm ~expand:false( A_1220 -> Type‹r_1007›,
  A_1220 -> Type‹r_1007›)
simpl_tm ~expand:false( A_1220, A_1220)
simpl_tm ~expand:false( Type‹r_1007›, Type‹r_1007›)
simpl_tm ~expand:false(
  (eq_4‹??_13› A_1220 m_1233 n_1244) ->
    ((B_1253) n_1244) -> ((B_1253) m_1233),
  (eq_4‹??_12› A_1220 m_1233 n_1244) ->
    ((B_1253) n_1244) -> ((B_1253) m_1233))
simpl_tm ~expand:false( (eq_4‹??_13› A_1220 m_1233 n_1244),
  (eq_4‹??_12› A_1220 m_1233 n_1244))
simpl_tm ~expand:false( A_1220, A_1220)
simpl_tm ~expand:false( m_1233, m_1233)
simpl_tm ~expand:false( n_1244, n_1244)
simpl_tm ~expand:false( ((B_1253) n_1244) -> ((B_1253) m_1233),
  ((B_1253) n_1244) -> ((B_1253) m_1233))
simpl_tm ~expand:false( ((B_1253) n_1244), ((B_1253) n_1244))
simpl_tm ~expand:false( B_1253, B_1253)
simpl_tm ~expand:false( n_1244, n_1244)
simpl_tm ~expand:false( ((B_1253) m_1233), ((B_1253) m_1233))
simpl_tm ~expand:false( B_1253, B_1253)
simpl_tm ~expand:false( m_1233, m_1233)
check_cls {|
  prblm {| ;
    {|  ::: [A_1151, m_1152, n_1153, B_1154, refl_6, x_1155] =>? #x_1155 |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_12› #A_1290 #m_1291 #n_1292),
      (eq_4‹??_12› #A_1290 #m_1291 #m_1291));
    {| eq_pat?( #A_1290, A_1151 : Type‹s_1006›)
       eq_pat?( #m_1291, m_1152 : #A_1290)
       eq_pat?( #n_1292, n_1153 : #A_1290)
       eq_pat?( #B_1293, B_1154 : #A_1290 -> Type‹r_1007›)
       eq_pat?( #__1295, x_1155 : ((#B_1293) #n_1292)) ::: [] =>? #x_1155
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_12› #A_1290 #m_1291 #n_1292),
    (eq_4‹??_12› #A_1290 #m_1291 #m_1291))
  eq_pat?( #A_1290, A_1151 : Type‹s_1006›)
  eq_pat?( #m_1291, m_1152 : #A_1290)
  eq_pat?( #n_1292, n_1153 : #A_1290)
  eq_pat?( #B_1293, B_1154 : #A_1290 -> Type‹r_1007›)
  eq_pat?( #__1295, x_1155 : ((#B_1293) #n_1292))
)
simpl_pprbm ~expand:false( (eq_4‹??_12› #A_1290 #m_1291 #n_1292),
  (eq_4‹??_12› #A_1290 #m_1291 #m_1291))
simpl_pprbm ~expand:false( #A_1290, #A_1290)
simpl_pprbm ~expand:false( #m_1291, #m_1291)
simpl_pprbm ~expand:false( #n_1292, #m_1291)
simpl_pprbm ~expand:false( #A_1290, #A_1151)
simpl_pprbm ~expand:false( #m_1291, #m_1152)
simpl_pprbm ~expand:false( #n_1292, #n_1153)
simpl_pprbm ~expand:false( #B_1293, #B_1154)
simpl_pprbm ~expand:false( #__1295, #x_1155)
simpl_pprbm ~expand:false( #n_1292, #m_1291)
simpl_pprbm ~expand:false( #A_1290, #A_1151)
simpl_pprbm ~expand:false( #n_1292, #m_1152)
simpl_pprbm ~expand:false( #n_1292, #n_1153)
simpl_pprbm ~expand:false( #B_1293, #B_1154)
simpl_pprbm ~expand:false( #__1295, #x_1155)
case_coverage_ok( __1295, ((B_1293) n_1292))
check_tm( __1295, ((B_1293) n_1292))
infer_tm(__1295)
assert_equal1( ((B_1293) n_1292), ((B_1293) n_1292))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1351
    ??_2 <= s_1353
    ??_3 <= r_1354
    ??_4 <= s_1356
    ??_5 <= s_1357
    ??_6 <= s_1358
    ??_7 <= s_1359
    ??_8 <= s_1360
    ??_9 <= s_1361
    ??_10 <= s_1363
    ??_11 <= ??_10
    ??_13 <= ??_12
    
  |}
  imeta_meta {|
    ?_1 <= A_1370
    ?_2 <= A_1373
    ?_3 <= A_1379
    ?_4 <= A_1385
    ?_5 <= A_1391
    ?_6 <= A_1397
    
  |}
  eqns {|
    
  |}
end_dump
infer_tm(Type‹??_12›)
check_tm( A_1071, Type‹??_12›)
infer_tm(A_1071)
assert_equal1( Type‹??_12›, Type‹s_1006›)
simpl_tm ~expand:false( Type‹??_12›, Type‹s_1006›)
infer_tm(Type‹s_1006›)
check_tm( A_1015, Type‹s_1006›)
infer_tm(A_1015)
assert_equal1( Type‹s_1006›, Type‹s_1006›)
----------------------------------

definition-------------------------
infer_tm(∀ (A_1475 : Type‹s_1472›) ->
           ∀ (B_1476 : Type‹r_1473›) ->
             ∀ (m_1477 : A_1475) ->
               ∀ (n_1478 : A_1475) ->
                 ∀ (f_1479 :
                   forall‹t_1474›(__1480 : A_1475), B_1476) ->
                   ∀ (__1481 : (eq_4‹??_17› ?_11 m_1477 n_1478)) ->
                     (eq_4‹??_18›
                       ?_12 ((f_1479) m_1477) ((f_1479) n_1478)))
infer_tm(Type‹s_1472›)
infer_tm(∀ (B_1483 : Type‹r_1473›) ->
           ∀ (m_1484 : A_1482) ->
             ∀ (n_1485 : A_1482) ->
               ∀ (f_1486 : forall‹t_1474›(__1487 : A_1482), B_1483) ->
                 ∀ (__1488 : (eq_4‹??_17› ?_11 m_1484 n_1485)) ->
                   (eq_4‹??_18› ?_12 ((f_1486) m_1484) ((f_1486) n_1485)))
infer_tm(Type‹r_1473›)
infer_tm(∀ (m_1490 : A_1482) ->
           ∀ (n_1491 : A_1482) ->
             ∀ (f_1492 : forall‹t_1474›(__1493 : A_1482), B_1489) ->
               ∀ (__1494 : (eq_4‹??_17› ?_11 m_1490 n_1491)) ->
                 (eq_4‹??_18› ?_12 ((f_1492) m_1490) ((f_1492) n_1491)))
infer_tm(A_1482)
infer_tm(∀ (n_1496 : A_1482) ->
           ∀ (f_1497 : forall‹t_1474›(__1498 : A_1482), B_1489) ->
             ∀ (__1499 : (eq_4‹??_17› ?_11 m_1495 n_1496)) ->
               (eq_4‹??_18› ?_12 ((f_1497) m_1495) ((f_1497) n_1496)))
infer_tm(A_1482)
infer_tm(∀ (f_1501 : forall‹t_1474›(__1502 : A_1482), B_1489) ->
           ∀ (__1503 : (eq_4‹??_17› ?_11 m_1495 n_1500)) ->
             (eq_4‹??_18› ?_12 ((f_1501) m_1495) ((f_1501) n_1500)))
infer_tm(forall‹t_1474›(__1505 : A_1482), B_1489)
infer_tm(A_1482)
infer_tm(B_1489)
infer_tm(∀ (__1507 : (eq_4‹??_17› ?_11 m_1495 n_1500)) ->
           (eq_4‹??_18› ?_12 ((f_1504) m_1495) ((f_1504) n_1500)))
infer_tm((eq_4‹??_17› ?_11 m_1495 n_1500))
check_tm( ?_11, Type‹??_17›)
check_tm( m_1495, ?_11)
infer_tm(m_1495)
assert_equal1( ?_11, A_1482)
check_tm( n_1500, ?_11)
infer_tm(n_1500)
assert_equal1( ?_11, A_1482)
simpl_tm ~expand:false( ?_11, A_1482)
simpl_tm ~expand:false( A_1482, A_1482)
infer_tm((eq_4‹??_18› ?_12 ((f_1504) m_1495) ((f_1504) n_1500)))
check_tm( ?_12, Type‹??_18›)
check_tm( ((f_1504) m_1495), ?_12)
infer_tm(((f_1504) m_1495))
infer_tm(f_1504)
check_tm( m_1495, A_1482)
infer_tm(m_1495)
assert_equal1( A_1482, A_1482)
assert_equal1( ?_12, B_1489)
check_tm( ((f_1504) n_1500), ?_12)
infer_tm(((f_1504) n_1500))
infer_tm(f_1504)
simpl_tm ~expand:false( ?_12, B_1489)
check_tm( n_1500, A_1482)
infer_tm(n_1500)
assert_equal1( A_1482, A_1482)
assert_equal1( ?_12, B_1489)
simpl_tm ~expand:false( B_1489, B_1489)
check_tm(
  function congr_1511 :
    ∀ (A_1512 : Type‹s_1472›) ->
      ∀ (B_1513 : Type‹r_1473›) ->
        ∀ (m_1514 : A_1512) ->
          ∀ (n_1515 : A_1512) ->
            ∀ (f_1516 : forall‹t_1474›(__1517 : A_1512), B_1513) ->
              ∀ (__1518 : (eq_4‹??_14› ?_7 m_1514 n_1515)) ->
                (eq_4‹??_15› ?_8 ((f_1516) m_1514) ((f_1516) n_1515))
  | A_1519 B_1520 m_1521 n_1522 f_1523 refl_6 => refl_6‹??_16›,
  ∀ (A_1524 : Type‹s_1472›) ->
    ∀ (B_1525 : Type‹r_1473›) ->
      ∀ (m_1526 : A_1524) ->
        ∀ (n_1527 : A_1524) ->
          ∀ (f_1528 : forall‹t_1474›(__1529 : A_1524), B_1525) ->
            ∀ (__1530 : (eq_4‹??_17› ?_11 m_1526 n_1527)) ->
              (eq_4‹??_18› ?_12 ((f_1528) m_1526) ((f_1528) n_1527)))
infer_tm(∀ (A_1532 : Type‹s_1472›) ->
           ∀ (B_1533 : Type‹r_1473›) ->
             ∀ (m_1534 : A_1532) ->
               ∀ (n_1535 : A_1532) ->
                 ∀ (f_1536 :
                   forall‹t_1474›(__1537 : A_1532), B_1533) ->
                   ∀ (__1538 : (eq_4‹??_14› ?_7 m_1534 n_1535)) ->
                     (eq_4‹??_15›
                       ?_8 ((f_1536) m_1534) ((f_1536) n_1535)))
infer_tm(Type‹s_1472›)
infer_tm(∀ (B_1540 : Type‹r_1473›) ->
           ∀ (m_1541 : A_1539) ->
             ∀ (n_1542 : A_1539) ->
               ∀ (f_1543 : forall‹t_1474›(__1544 : A_1539), B_1540) ->
                 ∀ (__1545 : (eq_4‹??_14› ?_7 m_1541 n_1542)) ->
                   (eq_4‹??_15› ?_8 ((f_1543) m_1541) ((f_1543) n_1542)))
infer_tm(Type‹r_1473›)
infer_tm(∀ (m_1547 : A_1539) ->
           ∀ (n_1548 : A_1539) ->
             ∀ (f_1549 : forall‹t_1474›(__1550 : A_1539), B_1546) ->
               ∀ (__1551 : (eq_4‹??_14› ?_7 m_1547 n_1548)) ->
                 (eq_4‹??_15› ?_8 ((f_1549) m_1547) ((f_1549) n_1548)))
infer_tm(A_1539)
infer_tm(∀ (n_1553 : A_1539) ->
           ∀ (f_1554 : forall‹t_1474›(__1555 : A_1539), B_1546) ->
             ∀ (__1556 : (eq_4‹??_14› ?_7 m_1552 n_1553)) ->
               (eq_4‹??_15› ?_8 ((f_1554) m_1552) ((f_1554) n_1553)))
infer_tm(A_1539)
infer_tm(∀ (f_1558 : forall‹t_1474›(__1559 : A_1539), B_1546) ->
           ∀ (__1560 : (eq_4‹??_14› ?_7 m_1552 n_1557)) ->
             (eq_4‹??_15› ?_8 ((f_1558) m_1552) ((f_1558) n_1557)))
infer_tm(forall‹t_1474›(__1562 : A_1539), B_1546)
infer_tm(A_1539)
infer_tm(B_1546)
infer_tm(∀ (__1564 : (eq_4‹??_14› ?_7 m_1552 n_1557)) ->
           (eq_4‹??_15› ?_8 ((f_1561) m_1552) ((f_1561) n_1557)))
infer_tm((eq_4‹??_14› ?_7 m_1552 n_1557))
check_tm( ?_7, Type‹??_14›)
check_tm( m_1552, ?_7)
infer_tm(m_1552)
assert_equal1( ?_7, A_1539)
check_tm( n_1557, ?_7)
infer_tm(n_1557)
assert_equal1( ?_7, A_1539)
simpl_tm ~expand:false( ?_7, A_1539)
simpl_tm ~expand:false( A_1539, A_1539)
infer_tm((eq_4‹??_15› ?_8 ((f_1561) m_1552) ((f_1561) n_1557)))
check_tm( ?_8, Type‹??_15›)
check_tm( ((f_1561) m_1552), ?_8)
infer_tm(((f_1561) m_1552))
infer_tm(f_1561)
check_tm( m_1552, A_1539)
infer_tm(m_1552)
assert_equal1( A_1539, A_1539)
assert_equal1( ?_8, B_1546)
check_tm( ((f_1561) n_1557), ?_8)
infer_tm(((f_1561) n_1557))
infer_tm(f_1561)
simpl_tm ~expand:false( ?_8, B_1546)
check_tm( n_1557, A_1539)
infer_tm(n_1557)
assert_equal1( A_1539, A_1539)
assert_equal1( ?_8, B_1546)
simpl_tm ~expand:false( B_1546, B_1546)
assert_equal1(
  ∀ (A_1568 : Type‹s_1472›) ->
    ∀ (B_1569 : Type‹r_1473›) ->
      ∀ (m_1570 : A_1568) ->
        ∀ (n_1571 : A_1568) ->
          ∀ (f_1572 : forall‹t_1474›(__1573 : A_1568), B_1569) ->
            ∀ (__1574 : (eq_4‹??_17› ?_11 m_1570 n_1571)) ->
              (eq_4‹??_18› ?_12 ((f_1572) m_1570) ((f_1572) n_1571)),
  ∀ (A_1575 : Type‹s_1472›) ->
    ∀ (B_1576 : Type‹r_1473›) ->
      ∀ (m_1577 : A_1575) ->
        ∀ (n_1578 : A_1575) ->
          ∀ (f_1579 : forall‹t_1474›(__1580 : A_1575), B_1576) ->
            ∀ (__1581 : (eq_4‹??_14› ?_7 m_1577 n_1578)) ->
              (eq_4‹??_15› ?_8 ((f_1579) m_1577) ((f_1579) n_1578)))
simpl_tm ~expand:false(
  ∀ (A_1691 : Type‹s_1472›) ->
    ∀ (B_1692 : Type‹r_1473›) ->
      ∀ (m_1693 : A_1691) ->
        ∀ (n_1694 : A_1691) ->
          ∀ (f_1695 : forall‹t_1474›(__1696 : A_1691), B_1692) ->
            (eq_4‹??_17› A_1691 m_1693 n_1694) ->
              (eq_4‹??_18› B_1692 ((f_1695) m_1693) ((f_1695) n_1694)),
  ∀ (A_1698 : Type‹s_1472›) ->
    ∀ (B_1699 : Type‹r_1473›) ->
      ∀ (m_1700 : A_1698) ->
        ∀ (n_1701 : A_1698) ->
          ∀ (f_1702 : forall‹t_1474›(__1703 : A_1698), B_1699) ->
            (eq_4‹??_14› A_1698 m_1700 n_1701) ->
              (eq_4‹??_15› B_1699 ((f_1702) m_1700) ((f_1702) n_1701)))
simpl_tm ~expand:false( Type‹s_1472›, Type‹s_1472›)
simpl_tm ~expand:false(
  ∀ (B_1706 : Type‹r_1473›) ->
    ∀ (m_1707 : A_1705) ->
      ∀ (n_1708 : A_1705) ->
        ∀ (f_1709 : forall‹t_1474›(__1710 : A_1705), B_1706) ->
          (eq_4‹??_17› A_1705 m_1707 n_1708) ->
            (eq_4‹??_18› B_1706 ((f_1709) m_1707) ((f_1709) n_1708)),
  ∀ (B_1712 : Type‹r_1473›) ->
    ∀ (m_1713 : A_1705) ->
      ∀ (n_1714 : A_1705) ->
        ∀ (f_1715 : forall‹t_1474›(__1716 : A_1705), B_1712) ->
          (eq_4‹??_14› A_1705 m_1713 n_1714) ->
            (eq_4‹??_15› B_1712 ((f_1715) m_1713) ((f_1715) n_1714)))
simpl_tm ~expand:false( Type‹r_1473›, Type‹r_1473›)
simpl_tm ~expand:false(
  ∀ (m_1719 : A_1705) ->
    ∀ (n_1720 : A_1705) ->
      ∀ (f_1721 : forall‹t_1474›(__1722 : A_1705), B_1718) ->
        (eq_4‹??_17› A_1705 m_1719 n_1720) ->
          (eq_4‹??_18› B_1718 ((f_1721) m_1719) ((f_1721) n_1720)),
  ∀ (m_1724 : A_1705) ->
    ∀ (n_1725 : A_1705) ->
      ∀ (f_1726 : forall‹t_1474›(__1727 : A_1705), B_1718) ->
        (eq_4‹??_14› A_1705 m_1724 n_1725) ->
          (eq_4‹??_15› B_1718 ((f_1726) m_1724) ((f_1726) n_1725)))
simpl_tm ~expand:false( A_1705, A_1705)
simpl_tm ~expand:false(
  ∀ (n_1730 : A_1705) ->
    ∀ (f_1731 : forall‹t_1474›(__1732 : A_1705), B_1718) ->
      (eq_4‹??_17› A_1705 m_1729 n_1730) ->
        (eq_4‹??_18› B_1718 ((f_1731) m_1729) ((f_1731) n_1730)),
  ∀ (n_1734 : A_1705) ->
    ∀ (f_1735 : forall‹t_1474›(__1736 : A_1705), B_1718) ->
      (eq_4‹??_14› A_1705 m_1729 n_1734) ->
        (eq_4‹??_15› B_1718 ((f_1735) m_1729) ((f_1735) n_1734)))
simpl_tm ~expand:false( A_1705, A_1705)
simpl_tm ~expand:false(
  ∀ (f_1739 : forall‹t_1474›(__1740 : A_1705), B_1718) ->
    (eq_4‹??_17› A_1705 m_1729 n_1738) ->
      (eq_4‹??_18› B_1718 ((f_1739) m_1729) ((f_1739) n_1738)),
  ∀ (f_1742 : forall‹t_1474›(__1743 : A_1705), B_1718) ->
    (eq_4‹??_14› A_1705 m_1729 n_1738) ->
      (eq_4‹??_15› B_1718 ((f_1742) m_1729) ((f_1742) n_1738)))
simpl_tm ~expand:false( forall‹t_1474›(__1746 : A_1705), B_1718,
  forall‹t_1474›(__1747 : A_1705), B_1718)
simpl_tm ~expand:false( A_1705, A_1705)
simpl_tm ~expand:false( B_1718, B_1718)
simpl_tm ~expand:false(
  (eq_4‹??_17› A_1705 m_1729 n_1738) ->
    (eq_4‹??_18› B_1718 ((f_1745) m_1729) ((f_1745) n_1738)),
  (eq_4‹??_14› A_1705 m_1729 n_1738) ->
    (eq_4‹??_15› B_1718 ((f_1745) m_1729) ((f_1745) n_1738)))
simpl_tm ~expand:false( (eq_4‹??_17› A_1705 m_1729 n_1738),
  (eq_4‹??_14› A_1705 m_1729 n_1738))
simpl_tm ~expand:false( A_1705, A_1705)
simpl_tm ~expand:false( m_1729, m_1729)
simpl_tm ~expand:false( n_1738, n_1738)
simpl_tm ~expand:false(
  (eq_4‹??_18› B_1718 ((f_1745) m_1729) ((f_1745) n_1738)),
  (eq_4‹??_15› B_1718 ((f_1745) m_1729) ((f_1745) n_1738)))
simpl_tm ~expand:false( B_1718, B_1718)
simpl_tm ~expand:false( ((f_1745) m_1729), ((f_1745) m_1729))
simpl_tm ~expand:false( f_1745, f_1745)
simpl_tm ~expand:false( m_1729, m_1729)
simpl_tm ~expand:false( ((f_1745) n_1738), ((f_1745) n_1738))
simpl_tm ~expand:false( f_1745, f_1745)
simpl_tm ~expand:false( n_1738, n_1738)
check_cls {|
  prblm {| ;
    {|  ::: [A_1634, B_1635, m_1636, n_1637, f_1638, refl_6] =>?
         refl_6‹??_16›
    |}
  |}
|}
case_intro
case_intro
case_intro
case_intro
case_intro
case_intro
case_splitting
splitting_on(refl_6)
case_coverage{|
  prblm {|
    eq_term?( (eq_4‹??_14› #A_1778 #m_1780 #n_1781),
      (eq_4‹??_14› #A_1778 #m_1780 #m_1780));
    {| eq_pat?( #A_1778, A_1634 : Type‹s_1472›)
       eq_pat?( #B_1779, B_1635 : Type‹r_1473›)
       eq_pat?( #m_1780, m_1636 : #A_1778)
       eq_pat?( #n_1781, n_1637 : #A_1778)
       eq_pat?( #f_1782, f_1638 :
         forall‹t_1474›(__1812 : #A_1778), #B_1779) ::: [] =>?
         refl_6‹??_16›
    |}
  |}
|}
unify_pprbm(
  eq_term?( (eq_4‹??_14› #A_1778 #m_1780 #n_1781),
    (eq_4‹??_14› #A_1778 #m_1780 #m_1780))
  eq_pat?( #A_1778, A_1634 : Type‹s_1472›)
  eq_pat?( #B_1779, B_1635 : Type‹r_1473›)
  eq_pat?( #m_1780, m_1636 : #A_1778)
  eq_pat?( #n_1781, n_1637 : #A_1778)
  eq_pat?( #f_1782, f_1638 : forall‹t_1474›(__1813 : #A_1778), #B_1779)
)
simpl_pprbm ~expand:false( (eq_4‹??_14› #A_1778 #m_1780 #n_1781),
  (eq_4‹??_14› #A_1778 #m_1780 #m_1780))
simpl_pprbm ~expand:false( #A_1778, #A_1778)
simpl_pprbm ~expand:false( #m_1780, #m_1780)
simpl_pprbm ~expand:false( #n_1781, #m_1780)
simpl_pprbm ~expand:false( #A_1778, #A_1634)
simpl_pprbm ~expand:false( #B_1779, #B_1635)
simpl_pprbm ~expand:false( #m_1780, #m_1636)
simpl_pprbm ~expand:false( #n_1781, #n_1637)
simpl_pprbm ~expand:false( #f_1782, #f_1638)
simpl_pprbm ~expand:false( #n_1781, #m_1780)
simpl_pprbm ~expand:false( #A_1778, #A_1634)
simpl_pprbm ~expand:false( #B_1779, #B_1635)
simpl_pprbm ~expand:false( #n_1781, #m_1636)
simpl_pprbm ~expand:false( #n_1781, #n_1637)
simpl_pprbm ~expand:false( #f_1782, #f_1638)
case_coverage_ok( refl_6‹??_16›,
  (eq_4‹??_15› B_1779 ((f_1782) n_1781) ((f_1782) n_1781)))
check_tm( refl_6‹??_16›,
  (eq_4‹??_15› B_1779 ((f_1782) n_1781) ((f_1782) n_1781)))
infer_tm(refl_6‹??_16›)
check_tm( ?_9, Type‹??_16›)
check_tm( ?_10, ?_9)
assert_equal1( (eq_4‹??_15› B_1779 ((f_1782) n_1781) ((f_1782) n_1781)),
  (eq_4‹??_16› ?_9 ?_10 ?_10))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_1841
    ??_2 <= s_1843
    ??_3 <= r_1844
    ??_4 <= s_1846
    ??_5 <= s_1847
    ??_6 <= s_1848
    ??_7 <= s_1849
    ??_8 <= s_1850
    ??_9 <= s_1851
    ??_10 <= s_1853
    ??_11 <= ??_10
    ??_12 <= s_1857
    ??_13 <= ??_12
    ??_17 <= ??_14
    ??_18 <= ??_15
    
  |}
  imeta_meta {|
    ?_1 <= A_1868
    ?_2 <= A_1871
    ?_3 <= A_1877
    ?_4 <= A_1883
    ?_5 <= A_1889
    ?_6 <= A_1895
    ?_7 <= A_1903
    ?_8 <= B_1911
    ?_11 <= A_1920
    ?_12 <= B_1928
    
  |}
  eqns {|
    equal_tm? ((eq_4‹??_15› B_1779 ((f_1782) n_1781) ((f_1782) n_1781)),
      (eq_4‹??_16› ?_9 ?_10 ?_10))
  |}
end_dump
simpl_tm ~expand:false(
  (eq_4‹??_15› B_1779 ((f_1782) n_1781) ((f_1782) n_1781)),
  (eq_4‹??_16› ?_9 ?_10 ?_10))
simpl_tm ~expand:false( B_1779, ?_9)
simpl_tm ~expand:false( ((f_1782) n_1781), ?_10)
simpl_tm ~expand:false( ((f_1782) n_1781), ?_10)
simpl_tm ~expand:false( B_1779, ?_9)
simpl_tm ~expand:false( ((f_1782) n_1781), ?_10)
simpl_tm ~expand:false( ((f_1782) n_1781), ((f_1782) n_1781))
simpl_tm ~expand:false( f_1782, f_1782)
simpl_tm ~expand:false( n_1781, n_1781)
infer_tm(Type‹??_14›)
check_tm( A_1539, Type‹??_14›)
infer_tm(A_1539)
assert_equal1( Type‹??_14›, Type‹s_1472›)
simpl_tm ~expand:false( Type‹??_14›, Type‹s_1472›)
infer_tm(Type‹??_15›)
check_tm( B_1546, Type‹??_15›)
infer_tm(B_1546)
assert_equal1( Type‹??_15›, Type‹r_1473›)
simpl_tm ~expand:false( Type‹??_15›, Type‹r_1473›)
infer_tm(Type‹r_1473›)
check_tm( B_1779, Type‹r_1473›)
infer_tm(B_1779)
assert_equal1( Type‹r_1473›, Type‹r_1473›)
infer_tm(B_1779)
check_tm( ((f_1782) n_1781), B_1779)
infer_tm(((f_1782) n_1781))
infer_tm(f_1782)
check_tm( n_1781, A_1778)
infer_tm(n_1781)
assert_equal1( A_1778, A_1778)
assert_equal1( B_1779, B_1779)
infer_tm(Type‹s_1472›)
check_tm( A_1482, Type‹s_1472›)
infer_tm(A_1482)
assert_equal1( Type‹s_1472›, Type‹s_1472›)
infer_tm(Type‹r_1473›)
check_tm( B_1489, Type‹r_1473›)
infer_tm(B_1489)
assert_equal1( Type‹r_1473›, Type‹r_1473›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2071 : Type‹s_2070›} ->
           ∀ {n_2072 : nat_3} ->
             (vec_8‹s_2070› A_2071 (succ_5‹› n_2072)) -> A_2071)
infer_tm(Type‹s_2070›)
infer_tm(∀ {n_2075 : nat_3} ->
           (vec_8‹s_2070› A_2074 (succ_5‹› n_2075)) -> A_2074)
infer_tm(nat_3)
infer_tm((vec_8‹s_2070› A_2074 (succ_5‹› n_2077)) -> A_2074)
infer_tm((vec_8‹s_2070› A_2074 (succ_5‹› n_2077)))
check_tm( A_2074, Type‹s_2070›)
infer_tm(A_2074)
assert_equal1( Type‹s_2070›, Type‹s_2070›)
check_tm( (succ_5‹› n_2077), nat_3)
infer_tm((succ_5‹› n_2077))
check_tm( n_2077, nat_3)
infer_tm(n_2077)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2074)
check_tm(
  function hd_vec_2080 :
    ∀ {A_2081 : Type‹s_2070›} ->
      ∀ {n_2082 : nat_3} ->
        (vec_8‹s_2070› A_2081 (succ_5‹› n_2082)) -> A_2081
  | A_2084 n_2085 vnil_11 =>
  | A_2086 n_2087 (vcons_12 _2088 hd_2089 _2090) => hd_2089,
  ∀ {A_2091 : Type‹s_2070›} ->
    ∀ {n_2092 : nat_3} ->
      (vec_8‹s_2070› A_2091 (succ_5‹› n_2092)) -> A_2091)
infer_tm(∀ {A_2095 : Type‹s_2070›} ->
           ∀ {n_2096 : nat_3} ->
             (vec_8‹s_2070› A_2095 (succ_5‹› n_2096)) -> A_2095)
infer_tm(Type‹s_2070›)
infer_tm(∀ {n_2099 : nat_3} ->
           (vec_8‹s_2070› A_2098 (succ_5‹› n_2099)) -> A_2098)
infer_tm(nat_3)
infer_tm((vec_8‹s_2070› A_2098 (succ_5‹› n_2101)) -> A_2098)
infer_tm((vec_8‹s_2070› A_2098 (succ_5‹› n_2101)))
check_tm( A_2098, Type‹s_2070›)
infer_tm(A_2098)
assert_equal1( Type‹s_2070›, Type‹s_2070›)
check_tm( (succ_5‹› n_2101), nat_3)
infer_tm((succ_5‹› n_2101))
check_tm( n_2101, nat_3)
infer_tm(n_2101)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(A_2098)
assert_equal1(
  ∀ {A_2104 : Type‹s_2070›} ->
    ∀ {n_2105 : nat_3} ->
      (vec_8‹s_2070› A_2104 (succ_5‹› n_2105)) -> A_2104,
  ∀ {A_2107 : Type‹s_2070›} ->
    ∀ {n_2108 : nat_3} ->
      (vec_8‹s_2070› A_2107 (succ_5‹› n_2108)) -> A_2107)
check_cls {|
  prblm {| ;
    () ::: [A_2113, n_2114, vnil_11] =>? !!
    {|  ::: [A_2115, n_2116, (vcons_12 _2117 hd_2118 _2119)] =>? #hd_2118 |}
  |}
|}
case_intro
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2127)),
      (vec_8‹s_2070› #A_2126 zero_4));
    (eq_pat?( #A_2126, A_2113 : Type‹s_2070›)
     eq_pat?( #n_2127, n_2114 : nat_3)) ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2127)),
    (vec_8‹s_2070› #A_2126 zero_4))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2127)),
  (vec_8‹s_2070› #A_2126 zero_4))
simpl_pprbm ~expand:false( #A_2126, #A_2126)
simpl_pprbm ~expand:false( (succ_5‹› #n_2127), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› #n_2127), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2127)),
      (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2135)));
    {| eq_pat?( #A_2126, A_2115 : Type‹s_2070›)
       eq_pat?( #n_2127, n_2116 : nat_3)
       eq_pat?( #n_2135, _2117 : nat_3)
       eq_pat?( #hd_2136, hd_2118 : #A_2126)
       eq_pat?( #tl_2137, _2119 : (vec_8‹s_2070› #A_2126 #n_2135)) ::: [] =>?
         #hd_2118
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2127)),
    (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2135)))
  eq_pat?( #A_2126, A_2115 : Type‹s_2070›)
  eq_pat?( #n_2127, n_2116 : nat_3)
  eq_pat?( #n_2135, _2117 : nat_3)
  eq_pat?( #hd_2136, hd_2118 : #A_2126)
  eq_pat?( #tl_2137, _2119 : (vec_8‹s_2070› #A_2126 #n_2135))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2127)),
  (vec_8‹s_2070› #A_2126 (succ_5‹› #n_2135)))
simpl_pprbm ~expand:false( #A_2126, #A_2126)
simpl_pprbm ~expand:false( (succ_5‹› #n_2127), (succ_5‹› #n_2135))
simpl_pprbm ~expand:false( #n_2127, #n_2135)
simpl_pprbm ~expand:false( #A_2126, #A_2115)
simpl_pprbm ~expand:false( #n_2127, #n_2116)
simpl_pprbm ~expand:false( #n_2135, #_2117)
simpl_pprbm ~expand:false( #hd_2136, #hd_2118)
simpl_pprbm ~expand:false( #tl_2137, #_2119)
simpl_pprbm ~expand:false( #n_2135, #n_2127)
simpl_pprbm ~expand:false( #A_2126, #A_2115)
simpl_pprbm ~expand:false( #n_2135, #n_2116)
simpl_pprbm ~expand:false( #n_2135, #_2117)
simpl_pprbm ~expand:false( #hd_2136, #hd_2118)
simpl_pprbm ~expand:false( #tl_2137, #_2119)
case_coverage_ok( hd_2136, A_2126)
check_tm( hd_2136, A_2126)
infer_tm(hd_2136)
assert_equal1( A_2126, A_2126)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2150
    ??_2 <= s_2152
    ??_3 <= r_2153
    ??_4 <= s_2155
    ??_5 <= s_2156
    ??_6 <= s_2157
    ??_7 <= s_2158
    ??_8 <= s_2159
    ??_9 <= s_2160
    ??_10 <= s_2162
    ??_11 <= ??_10
    ??_12 <= s_2166
    ??_13 <= ??_12
    ??_14 <= s_2171
    ??_15 <= r_2173
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    
  |}
  imeta_meta {|
    ?_1 <= A_2186
    ?_2 <= A_2189
    ?_3 <= A_2195
    ?_4 <= A_2201
    ?_5 <= A_2207
    ?_6 <= A_2213
    ?_7 <= A_2221
    ?_8 <= B_2229
    ?_9 <= B_2237
    ?_10 <= ((f_2243) n_2245)
    ?_11 <= A_2256
    ?_12 <= B_2264
    
  |}
  eqns {|
    
  |}
end_dump
----------------------------------

definition-------------------------
infer_tm(∀ {A_2294 : Type‹s_2293›} ->
           ∀ {n_2295 : nat_3} ->
             ∀ (xs_2296 :
               (vec_8‹s_2293› A_2294 (succ_5‹› n_2295))) -> ?_17)
infer_tm(Type‹s_2293›)
infer_tm(∀ {n_2298 : nat_3} ->
           ∀ (xs_2299 :
             (vec_8‹s_2293› A_2297 (succ_5‹› n_2298))) -> ?_17)
infer_tm(nat_3)
infer_tm(∀ (xs_2301 : (vec_8‹s_2293› A_2297 (succ_5‹› n_2300))) ->
           ?_17)
infer_tm((vec_8‹s_2293› A_2297 (succ_5‹› n_2300)))
check_tm( A_2297, Type‹s_2293›)
infer_tm(A_2297)
assert_equal1( Type‹s_2293›, Type‹s_2293›)
check_tm( (succ_5‹› n_2300), nat_3)
infer_tm((succ_5‹› n_2300))
check_tm( n_2300, nat_3)
infer_tm(n_2300)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(?_17)
delay_assert(?_59, ??_40)
simpl_tm ~expand:false( ?_59, Type‹??_40›)
check_tm(
  function hd_vec2_2303 :
    ∀ {A_2304 : Type‹s_2293›} ->
      ∀ {n_2305 : nat_3} ->
        ∀ (xs_2306 : (vec_8‹s_2293› A_2304 (succ_5‹› n_2305))) ->
          ?_13
  | A_2307 n_2308 xs_2309 =>
    match ?_14, xs_2309 in
      ∀ {n0_2310 : ?_15} -o
        ∀ (__2311 : (vec_8‹s_2293› A_2307 (succ_5‹› n0_2310))) -o
          ?_16
    with
    | _2312, vnil_11 =>
    | _2313, (vcons_12 _2314 hd_2315 _2316) => hd_2315,
  ∀ {A_2317 : Type‹s_2293›} ->
    ∀ {n_2318 : nat_3} ->
      ∀ (xs_2319 : (vec_8‹s_2293› A_2317 (succ_5‹› n_2318))) ->
        ?_17)
infer_tm(∀ {A_2321 : Type‹s_2293›} ->
           ∀ {n_2322 : nat_3} ->
             ∀ (xs_2323 :
               (vec_8‹s_2293› A_2321 (succ_5‹› n_2322))) -> ?_13)
infer_tm(Type‹s_2293›)
infer_tm(∀ {n_2325 : nat_3} ->
           ∀ (xs_2326 :
             (vec_8‹s_2293› A_2324 (succ_5‹› n_2325))) -> ?_13)
infer_tm(nat_3)
infer_tm(∀ (xs_2328 : (vec_8‹s_2293› A_2324 (succ_5‹› n_2327))) ->
           ?_13)
infer_tm((vec_8‹s_2293› A_2324 (succ_5‹› n_2327)))
check_tm( A_2324, Type‹s_2293›)
infer_tm(A_2324)
assert_equal1( Type‹s_2293›, Type‹s_2293›)
check_tm( (succ_5‹› n_2327), nat_3)
infer_tm((succ_5‹› n_2327))
check_tm( n_2327, nat_3)
infer_tm(n_2327)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(?_13)
delay_assert(?_60, ??_41)
simpl_tm ~expand:false( ?_60, Type‹??_41›)
assert_equal1(
  ∀ {A_2330 : Type‹s_2293›} ->
    ∀ {n_2331 : nat_3} ->
      ∀ (xs_2332 : (vec_8‹s_2293› A_2330 (succ_5‹› n_2331))) ->
        ?_17,
  ∀ {A_2333 : Type‹s_2293›} ->
    ∀ {n_2334 : nat_3} ->
      ∀ (xs_2335 : (vec_8‹s_2293› A_2333 (succ_5‹› n_2334))) ->
        ?_13)
simpl_tm ~expand:false(
  ∀ {A_2369 : Type‹s_2293›} ->
    ∀ {n_2370 : nat_3} ->
      ∀ (xs_2371 : (vec_8‹s_2293› A_2369 (succ_5‹› n_2370))) ->
        ?_17,
  ∀ {A_2372 : Type‹s_2293›} ->
    ∀ {n_2373 : nat_3} ->
      ∀ (xs_2374 : (vec_8‹s_2293› A_2372 (succ_5‹› n_2373))) ->
        ?_13)
simpl_tm ~expand:false( Type‹s_2293›, Type‹s_2293›)
simpl_tm ~expand:false(
  ∀ {n_2376 : nat_3} ->
    ∀ (xs_2377 : (vec_8‹s_2293› A_2375 (succ_5‹› n_2376))) -> ?_17,
  ∀ {n_2378 : nat_3} ->
    ∀ (xs_2379 : (vec_8‹s_2293› A_2375 (succ_5‹› n_2378))) -> ?_13)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  ∀ (xs_2381 : (vec_8‹s_2293› A_2375 (succ_5‹› n_2380))) -> ?_17,
  ∀ (xs_2382 : (vec_8‹s_2293› A_2375 (succ_5‹› n_2380))) -> ?_13)
simpl_tm ~expand:false( (vec_8‹s_2293› A_2375 (succ_5‹› n_2380)),
  (vec_8‹s_2293› A_2375 (succ_5‹› n_2380)))
simpl_tm ~expand:false( A_2375, A_2375)
simpl_tm ~expand:false( (succ_5‹› n_2380), (succ_5‹› n_2380))
simpl_tm ~expand:false( n_2380, n_2380)
simpl_tm ~expand:false( ?_17, ?_13)
check_cls {|
  prblm {| ;
    {|  ::: [A_2354, n_2355, xs_2356] =>?
         match ?_14, #xs_2356 in
           ∀ {n0_2390 : ?_15} -o
             ∀ (__2391 :
               (vec_8‹s_2293› #A_2354 (succ_5‹› n0_2390))) -o ?_16
         with
         | _2392, vnil_11 =>
         | _2393, (vcons_12 _2394 hd_2395 _2396) => hd_2395
    |}
  |}
|}
case_intro
case_intro
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #A_2397, A_2354 : Type‹s_2293›)
       eq_pat?( #n_2398, n_2355 : nat_3)
       eq_pat?( #xs_2399, xs_2356 :
         (vec_8‹s_2293› #A_2397 (succ_5‹› #n_2398))) ::: [] =>?
         match ?_14, #xs_2356 in
           ∀ {n0_2400 : ?_15} -o
             ∀ (__2401 :
               (vec_8‹s_2293› #A_2354 (succ_5‹› n0_2400))) -o ?_16
         with
         | _2402, vnil_11 =>
         | _2403, (vcons_12 _2404 hd_2405 _2406) => hd_2405
    |}
  |}
|}
unify_pprbm(
  eq_pat?( #A_2397, A_2354 : Type‹s_2293›)
  eq_pat?( #n_2398, n_2355 : nat_3)
  eq_pat?( #xs_2399, xs_2356 :
    (vec_8‹s_2293› #A_2397 (succ_5‹› #n_2398)))
)
simpl_pprbm ~expand:false( #A_2397, #A_2354)
simpl_pprbm ~expand:false( #n_2398, #n_2355)
simpl_pprbm ~expand:false( #xs_2399, #xs_2356)
simpl_pprbm ~expand:false( #A_2397, #A_2354)
simpl_pprbm ~expand:false( #n_2398, #n_2355)
simpl_pprbm ~expand:false( #xs_2399, #xs_2356)
case_coverage_ok(
  match ?_14, xs_2399 in
    ∀ {n0_2421 : ?_15} -o
      ∀ (__2422 : (vec_8‹s_2293› A_2397 (succ_5‹› n0_2421))) -o
        ?_16
  with
  | _2423, vnil_11 =>
  | _2424, (vcons_12 _2425 hd_2426 _2427) => hd_2426, ?_13)
check_tm(
  match ?_14, xs_2399 in
    ∀ {n0_2428 : ?_15} -o
      ∀ (__2429 : (vec_8‹s_2293› A_2397 (succ_5‹› n0_2428))) -o
        ?_16
  with
  | _2430, vnil_11 =>
  | _2431, (vcons_12 _2432 hd_2433 _2434) => hd_2433, ?_13)
infer_tm(match ?_14, xs_2399 in
           ∀ {n0_2435 : ?_15} -o
             ∀ (__2436 :
               (vec_8‹s_2293› A_2397 (succ_5‹› n0_2435))) -o ?_16
         with
         | _2437, vnil_11 =>
         | _2438, (vcons_12 _2439 hd_2440 _2441) => hd_2440)
infer_tm(∀ {n0_2442 : ?_15} -o
           ∀ (__2443 :
             (vec_8‹s_2293› A_2397 (succ_5‹› n0_2442))) -o ?_16)
infer_tm(?_15)
delay_assert(?_61, ??_42)
infer_tm(∀ (__2445 : (vec_8‹s_2293› A_2397 (succ_5‹› n0_2444))) -o
           ?_16)
infer_tm((vec_8‹s_2293› A_2397 (succ_5‹› n0_2444)))
check_tm( A_2397, Type‹s_2293›)
infer_tm(A_2397)
assert_equal1( Type‹s_2293›, Type‹s_2293›)
check_tm( (succ_5‹› n0_2444), nat_3)
infer_tm((succ_5‹› n0_2444))
check_tm( n0_2444, nat_3)
infer_tm(n0_2444)
assert_equal1( nat_3, ?_15)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( nat_3, ?_15)
simpl_tm ~expand:false( ?_61, Type‹??_42›)
infer_tm(?_16)
delay_assert(?_62, ??_43)
simpl_tm ~expand:false( ?_62, Type‹??_43›)
check_tm( ?_14, ?_15)
check_tm( xs_2399, (vec_8‹s_2293› A_2397 (succ_5‹› ?_14)))
infer_tm(xs_2399)
assert_equal1( (vec_8‹s_2293› A_2397 (succ_5‹› ?_14)),
  (vec_8‹s_2293› A_2397 (succ_5‹› n_2398)))
simpl_tm ~expand:false( (vec_8‹s_2293› A_2397 (succ_5‹› ?_14)),
  (vec_8‹s_2293› A_2397 (succ_5‹› n_2398)))
simpl_tm ~expand:false( A_2397, A_2397)
simpl_tm ~expand:false( (succ_5‹› ?_14), (succ_5‹› n_2398))
simpl_tm ~expand:false( ?_14, n_2398)
check_cls {|
  prblm {| ;
    () ::: [_2447, vnil_11] =>? !!
    {|  ::: [_2448, (vcons_12 _2449 hd_2450 _2451)] =>? #hd_2450 |}
  |}
|}
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2293› A_2397 (succ_5‹› #n0_2455)),
      (vec_8‹s_2293› A_2397 zero_4));
    (eq_pat?( #n0_2455, _2447 : nat_3)) ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2293› A_2397 (succ_5‹› #n0_2455)),
    (vec_8‹s_2293› A_2397 zero_4))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2293› A_2397 (succ_5‹› #n0_2455)),
  (vec_8‹s_2293› A_2397 zero_4))
simpl_pprbm ~expand:false( A_2397, A_2397)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2455), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› #n0_2455), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2293› A_2397 (succ_5‹› #n0_2455)),
      (vec_8‹s_2293› A_2397 (succ_5‹› #n_2463)));
    {| eq_pat?( #n0_2455, _2448 : nat_3)
       eq_pat?( #n_2463, _2449 : nat_3)
       eq_pat?( #hd_2464, hd_2450 : A_2397)
       eq_pat?( #tl_2465, _2451 : (vec_8‹s_2293› A_2397 #n_2463)) ::: [] =>?
         #hd_2450
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2293› A_2397 (succ_5‹› #n0_2455)),
    (vec_8‹s_2293› A_2397 (succ_5‹› #n_2463)))
  eq_pat?( #n0_2455, _2448 : nat_3)
  eq_pat?( #n_2463, _2449 : nat_3)
  eq_pat?( #hd_2464, hd_2450 : A_2397)
  eq_pat?( #tl_2465, _2451 : (vec_8‹s_2293› A_2397 #n_2463))
)
simpl_pprbm ~expand:false(
  (vec_8‹s_2293› A_2397 (succ_5‹› #n0_2455)),
  (vec_8‹s_2293› A_2397 (succ_5‹› #n_2463)))
simpl_pprbm ~expand:false( A_2397, A_2397)
simpl_pprbm ~expand:false( (succ_5‹› #n0_2455), (succ_5‹› #n_2463))
simpl_pprbm ~expand:false( #n0_2455, #n_2463)
simpl_pprbm ~expand:false( #n0_2455, #_2448)
simpl_pprbm ~expand:false( #n_2463, #_2449)
simpl_pprbm ~expand:false( #hd_2464, #hd_2450)
simpl_pprbm ~expand:false( #tl_2465, #_2451)
simpl_pprbm ~expand:false( #n_2463, #n0_2455)
simpl_pprbm ~expand:false( #n_2463, #_2448)
simpl_pprbm ~expand:false( #n_2463, #_2449)
simpl_pprbm ~expand:false( #hd_2464, #hd_2450)
simpl_pprbm ~expand:false( #tl_2465, #_2451)
case_coverage_ok( hd_2464, ?_16)
check_tm( hd_2464, ?_16)
infer_tm(hd_2464)
assert_equal1( ?_16, A_2397)
assert_equal1( ?_13, ?_16)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2478
    ??_2 <= s_2480
    ??_3 <= r_2481
    ??_4 <= s_2483
    ??_5 <= s_2484
    ??_6 <= s_2485
    ??_7 <= s_2486
    ??_8 <= s_2487
    ??_9 <= s_2488
    ??_10 <= s_2490
    ??_11 <= ??_10
    ??_12 <= s_2494
    ??_13 <= ??_12
    ??_14 <= s_2499
    ??_15 <= r_2501
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    
  |}
  imeta_meta {|
    ?_1 <= A_2514
    ?_2 <= A_2517
    ?_3 <= A_2523
    ?_4 <= A_2529
    ?_5 <= A_2535
    ?_6 <= A_2541
    ?_7 <= A_2549
    ?_8 <= B_2557
    ?_9 <= B_2565
    ?_10 <= ((f_2571) n_2573)
    ?_11 <= A_2584
    ?_12 <= B_2592
    ?_14 <= n_2596
    ?_15 <= nat_3
    ?_17 <= ?_13
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    
  |}
  eqns {|
    equal_tm? (?_13, ?_16);
    equal_tm? (?_16, A_2397)
  |}
end_dump
simpl_tm ~expand:false( ?_13, ?_16)
simpl_tm ~expand:false( ?_13, A_2397)
infer_tm(Type‹??_41›)
check_tm( A_2324, Type‹??_41›)
infer_tm(A_2324)
assert_equal1( Type‹??_41›, Type‹s_2293›)
simpl_tm ~expand:false( Type‹??_41›, Type‹s_2293›)
infer_tm(nat_3)
check_tm( n_2398, nat_3)
infer_tm(n_2398)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹??_42›)
check_tm( nat_3, Type‹??_42›)
infer_tm(nat_3)
assert_equal1( Type‹??_42›, U)
simpl_tm ~expand:false( Type‹??_42›, U)
infer_tm(Type‹??_43›)
check_tm( A_2397, Type‹??_43›)
infer_tm(A_2397)
assert_equal1( Type‹??_43›, Type‹s_2293›)
simpl_tm ~expand:false( Type‹??_43›, Type‹s_2293›)
infer_tm(Type‹??_40›)
check_tm( A_2297, Type‹??_40›)
infer_tm(A_2297)
assert_equal1( Type‹??_40›, Type‹s_2293›)
simpl_tm ~expand:false( Type‹??_40›, Type‹s_2293›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_2687 : Type‹s_2686›} ->
           ∀ {n_2688 : nat_3} ->
             ∀ (xs_2689 :
               (vec_8‹s_2686› A_2687 (succ_5‹› n_2688))) -> ?_21)
infer_tm(Type‹s_2686›)
infer_tm(∀ {n_2691 : nat_3} ->
           ∀ (xs_2692 :
             (vec_8‹s_2686› A_2690 (succ_5‹› n_2691))) -> ?_21)
infer_tm(nat_3)
infer_tm(∀ (xs_2694 : (vec_8‹s_2686› A_2690 (succ_5‹› n_2693))) ->
           ?_21)
infer_tm((vec_8‹s_2686› A_2690 (succ_5‹› n_2693)))
check_tm( A_2690, Type‹s_2686›)
infer_tm(A_2690)
assert_equal1( Type‹s_2686›, Type‹s_2686›)
check_tm( (succ_5‹› n_2693), nat_3)
infer_tm((succ_5‹› n_2693))
check_tm( n_2693, nat_3)
infer_tm(n_2693)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(?_21)
delay_assert(?_63, ??_44)
simpl_tm ~expand:false( ?_63, Type‹??_44›)
check_tm(
  function hd_vec3_2696 :
    ∀ {A_2697 : Type‹s_2686›} ->
      ∀ {n_2698 : nat_3} ->
        ∀ (xs_2699 : (vec_8‹s_2686› A_2697 (succ_5‹› n_2698))) ->
          ?_18
  | A_2700 n_2701 xs_2702 =>
    match xs_2702 in ∀ (_2703 : ?_19) -o ?_20 with
    | vnil_11 =>
    | (vcons_12 _2704 hd_2705 _2706) => hd_2705,
  ∀ {A_2707 : Type‹s_2686›} ->
    ∀ {n_2708 : nat_3} ->
      ∀ (xs_2709 : (vec_8‹s_2686› A_2707 (succ_5‹› n_2708))) ->
        ?_21)
infer_tm(∀ {A_2711 : Type‹s_2686›} ->
           ∀ {n_2712 : nat_3} ->
             ∀ (xs_2713 :
               (vec_8‹s_2686› A_2711 (succ_5‹› n_2712))) -> ?_18)
infer_tm(Type‹s_2686›)
infer_tm(∀ {n_2715 : nat_3} ->
           ∀ (xs_2716 :
             (vec_8‹s_2686› A_2714 (succ_5‹› n_2715))) -> ?_18)
infer_tm(nat_3)
infer_tm(∀ (xs_2718 : (vec_8‹s_2686› A_2714 (succ_5‹› n_2717))) ->
           ?_18)
infer_tm((vec_8‹s_2686› A_2714 (succ_5‹› n_2717)))
check_tm( A_2714, Type‹s_2686›)
infer_tm(A_2714)
assert_equal1( Type‹s_2686›, Type‹s_2686›)
check_tm( (succ_5‹› n_2717), nat_3)
infer_tm((succ_5‹› n_2717))
check_tm( n_2717, nat_3)
infer_tm(n_2717)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
infer_tm(?_18)
delay_assert(?_64, ??_45)
simpl_tm ~expand:false( ?_64, Type‹??_45›)
assert_equal1(
  ∀ {A_2720 : Type‹s_2686›} ->
    ∀ {n_2721 : nat_3} ->
      ∀ (xs_2722 : (vec_8‹s_2686› A_2720 (succ_5‹› n_2721))) ->
        ?_21,
  ∀ {A_2723 : Type‹s_2686›} ->
    ∀ {n_2724 : nat_3} ->
      ∀ (xs_2725 : (vec_8‹s_2686› A_2723 (succ_5‹› n_2724))) ->
        ?_18)
simpl_tm ~expand:false(
  ∀ {A_2759 : Type‹s_2686›} ->
    ∀ {n_2760 : nat_3} ->
      ∀ (xs_2761 : (vec_8‹s_2686› A_2759 (succ_5‹› n_2760))) ->
        ?_21,
  ∀ {A_2762 : Type‹s_2686›} ->
    ∀ {n_2763 : nat_3} ->
      ∀ (xs_2764 : (vec_8‹s_2686› A_2762 (succ_5‹› n_2763))) ->
        ?_18)
simpl_tm ~expand:false( Type‹s_2686›, Type‹s_2686›)
simpl_tm ~expand:false(
  ∀ {n_2766 : nat_3} ->
    ∀ (xs_2767 : (vec_8‹s_2686› A_2765 (succ_5‹› n_2766))) -> ?_21,
  ∀ {n_2768 : nat_3} ->
    ∀ (xs_2769 : (vec_8‹s_2686› A_2765 (succ_5‹› n_2768))) -> ?_18)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  ∀ (xs_2771 : (vec_8‹s_2686› A_2765 (succ_5‹› n_2770))) -> ?_21,
  ∀ (xs_2772 : (vec_8‹s_2686› A_2765 (succ_5‹› n_2770))) -> ?_18)
simpl_tm ~expand:false( (vec_8‹s_2686› A_2765 (succ_5‹› n_2770)),
  (vec_8‹s_2686› A_2765 (succ_5‹› n_2770)))
simpl_tm ~expand:false( A_2765, A_2765)
simpl_tm ~expand:false( (succ_5‹› n_2770), (succ_5‹› n_2770))
simpl_tm ~expand:false( n_2770, n_2770)
simpl_tm ~expand:false( ?_21, ?_18)
check_cls {|
  prblm {| ;
    {|  ::: [A_2744, n_2745, xs_2746] =>?
         match #xs_2746 in ∀ (_2780 : ?_19) -o ?_20 with
         | vnil_11 =>
         | (vcons_12 _2781 hd_2782 _2783) => hd_2782
    |}
  |}
|}
case_intro
case_intro
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #A_2784, A_2744 : Type‹s_2686›)
       eq_pat?( #n_2785, n_2745 : nat_3)
       eq_pat?( #xs_2786, xs_2746 :
         (vec_8‹s_2686› #A_2784 (succ_5‹› #n_2785))) ::: [] =>?
         match #xs_2746 in ∀ (_2787 : ?_19) -o ?_20 with
         | vnil_11 =>
         | (vcons_12 _2788 hd_2789 _2790) => hd_2789
    |}
  |}
|}
unify_pprbm(
  eq_pat?( #A_2784, A_2744 : Type‹s_2686›)
  eq_pat?( #n_2785, n_2745 : nat_3)
  eq_pat?( #xs_2786, xs_2746 :
    (vec_8‹s_2686› #A_2784 (succ_5‹› #n_2785)))
)
simpl_pprbm ~expand:false( #A_2784, #A_2744)
simpl_pprbm ~expand:false( #n_2785, #n_2745)
simpl_pprbm ~expand:false( #xs_2786, #xs_2746)
simpl_pprbm ~expand:false( #A_2784, #A_2744)
simpl_pprbm ~expand:false( #n_2785, #n_2745)
simpl_pprbm ~expand:false( #xs_2786, #xs_2746)
case_coverage_ok(
  match xs_2786 in ∀ (_2801 : ?_19) -o ?_20 with
  | vnil_11 =>
  | (vcons_12 _2802 hd_2803 _2804) => hd_2803, ?_18)
check_tm(
  match xs_2786 in ∀ (_2805 : ?_19) -o ?_20 with
  | vnil_11 =>
  | (vcons_12 _2806 hd_2807 _2808) => hd_2807, ?_18)
infer_tm(match xs_2786 in ∀ (_2809 : ?_19) -o ?_20 with
         | vnil_11 =>
         | (vcons_12 _2810 hd_2811 _2812) => hd_2811)
infer_tm(∀ (_2813 : ?_19) -o ?_20)
infer_tm(?_19)
delay_assert(?_65, ??_46)
infer_tm(?_20)
simpl_tm ~expand:false( ?_65, Type‹??_46›)
delay_assert(?_66, ??_47)
simpl_tm ~expand:false( ?_66, Type‹??_47›)
check_tm( xs_2786, ?_19)
infer_tm(xs_2786)
assert_equal1( ?_19, (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)))
simpl_tm ~expand:false( ?_19,
  (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)))
check_cls {|
  prblm {| ;
    () ::: [vnil_11] =>? !!
    {|  ::: [(vcons_12 _2815 hd_2816 _2817)] =>? #hd_2816 |}
  |}
|}
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)),
      (vec_8‹s_2686› A_2784 zero_4));
    () ::: [] =>? !!
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)),
    (vec_8‹s_2686› A_2784 zero_4))
)
simpl_pprbm ~expand:false( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)),
  (vec_8‹s_2686› A_2784 zero_4))
simpl_pprbm ~expand:false( A_2784, A_2784)
simpl_pprbm ~expand:false( (succ_5‹› n_2785), zero_4)
simpl_pprbm ~expand:true( (succ_5‹› n_2785), zero_4)
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)),
      (vec_8‹s_2686› A_2784 (succ_5‹› #n_2826)));
    {| eq_pat?( #n_2826, _2815 : nat_3)
       eq_pat?( #hd_2827, hd_2816 : A_2784)
       eq_pat?( #tl_2828, _2817 : (vec_8‹s_2686› A_2784 #n_2826)) ::: [] =>?
         #hd_2816
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)),
    (vec_8‹s_2686› A_2784 (succ_5‹› #n_2826)))
  eq_pat?( #n_2826, _2815 : nat_3)
  eq_pat?( #hd_2827, hd_2816 : A_2784)
  eq_pat?( #tl_2828, _2817 : (vec_8‹s_2686› A_2784 #n_2826))
)
simpl_pprbm ~expand:false( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)),
  (vec_8‹s_2686› A_2784 (succ_5‹› #n_2826)))
simpl_pprbm ~expand:false( A_2784, A_2784)
simpl_pprbm ~expand:false( (succ_5‹› n_2785), (succ_5‹› #n_2826))
simpl_pprbm ~expand:false( n_2785, #n_2826)
simpl_pprbm ~expand:false( #n_2826, #_2815)
simpl_pprbm ~expand:false( #hd_2827, #hd_2816)
simpl_pprbm ~expand:false( #tl_2828, #_2817)
simpl_pprbm ~expand:false( n_2785, #n_2826)
simpl_pprbm ~expand:false( n_2785, #_2815)
simpl_pprbm ~expand:false( #hd_2827, #hd_2816)
simpl_pprbm ~expand:false( #tl_2828, #_2817)
case_coverage_ok( hd_2827, ?_20)
check_tm( hd_2827, ?_20)
infer_tm(hd_2827)
assert_equal1( ?_20, A_2784)
assert_equal1( ?_18, ?_20)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_2841
    ??_2 <= s_2843
    ??_3 <= r_2844
    ??_4 <= s_2846
    ??_5 <= s_2847
    ??_6 <= s_2848
    ??_7 <= s_2849
    ??_8 <= s_2850
    ??_9 <= s_2851
    ??_10 <= s_2853
    ??_11 <= ??_10
    ??_12 <= s_2857
    ??_13 <= ??_12
    ??_14 <= s_2862
    ??_15 <= r_2864
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_40 <= s_2875
    ??_41 <= s_2876
    ??_42 <= U
    ??_43 <= s_2878
    
  |}
  imeta_meta {|
    ?_1 <= A_2881
    ?_2 <= A_2884
    ?_3 <= A_2890
    ?_4 <= A_2896
    ?_5 <= A_2902
    ?_6 <= A_2908
    ?_7 <= A_2916
    ?_8 <= B_2924
    ?_9 <= B_2932
    ?_10 <= ((f_2938) n_2940)
    ?_11 <= A_2951
    ?_12 <= B_2959
    ?_13 <= A_2964
    ?_14 <= n_2967
    ?_15 <= nat_3
    ?_16 <= ?_13
    ?_17 <= ?_13
    ?_19 <= (vec_8‹s_2986› A_2989 (succ_5‹› n_2988))
    ?_21 <= ?_18
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    ?_63 <= Type‹??_44›
    ?_64 <= Type‹??_45›
    ?_65 <= Type‹??_46›
    ?_66 <= Type‹??_47›
    
  |}
  eqns {|
    equal_tm? (?_18, ?_20);
    equal_tm? (?_20, A_2784)
  |}
end_dump
simpl_tm ~expand:false( ?_18, ?_20)
simpl_tm ~expand:false( ?_18, A_2784)
infer_tm(Type‹??_45›)
check_tm( A_2714, Type‹??_45›)
infer_tm(A_2714)
assert_equal1( Type‹??_45›, Type‹s_2686›)
simpl_tm ~expand:false( Type‹??_45›, Type‹s_2686›)
infer_tm(Type‹??_46›)
check_tm( (vec_8‹s_2686› A_2784 (succ_5‹› n_2785)), Type‹??_46›)
infer_tm((vec_8‹s_2686› A_2784 (succ_5‹› n_2785)))
check_tm( A_2784, Type‹s_2686›)
infer_tm(A_2784)
assert_equal1( Type‹s_2686›, Type‹s_2686›)
check_tm( (succ_5‹› n_2785), nat_3)
infer_tm((succ_5‹› n_2785))
check_tm( n_2785, nat_3)
infer_tm(n_2785)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( Type‹??_46›, U)
simpl_tm ~expand:false( Type‹??_46›, U)
infer_tm(Type‹??_47›)
check_tm( A_2784, Type‹??_47›)
infer_tm(A_2784)
assert_equal1( Type‹??_47›, Type‹s_2686›)
simpl_tm ~expand:false( Type‹??_47›, Type‹s_2686›)
infer_tm(Type‹??_44›)
check_tm( A_2690, Type‹??_44›)
infer_tm(A_2690)
assert_equal1( Type‹??_44›, Type‹s_2686›)
simpl_tm ~expand:false( Type‹??_44›, Type‹s_2686›)
----------------------------------

definition-------------------------
infer_tm(∀ {A_3080 : Type‹s_3079›} ->
           ∀ {n_3081 : nat_3} ->
             ∀ (__3082 : (vec_8‹??_31› A_3080 n_3081)) ->
               (exists_5‹??_33,??_34›
                 ?_45
                 function _3083 : ∀ (x_3084 : ?_42) -> ?_43
                 | x_3085 => (eq_4‹??_32› ?_44 x_3085 n_3081)))
infer_tm(Type‹s_3079›)
infer_tm(∀ {n_3087 : nat_3} ->
           ∀ (__3088 : (vec_8‹??_31› A_3086 n_3087)) ->
             (exists_5‹??_33,??_34›
               ?_45
               function _3089 : ∀ (x_3090 : ?_42) -> ?_43
               | x_3091 => (eq_4‹??_32› ?_44 x_3091 n_3087)))
infer_tm(nat_3)
infer_tm(∀ (__3093 : (vec_8‹??_31› A_3086 n_3092)) ->
           (exists_5‹??_33,??_34›
             ?_45
             function _3094 : ∀ (x_3095 : ?_42) -> ?_43
             | x_3096 => (eq_4‹??_32› ?_44 x_3096 n_3092)))
infer_tm((vec_8‹??_31› A_3086 n_3092))
check_tm( A_3086, Type‹??_31›)
infer_tm(A_3086)
assert_equal1( Type‹??_31›, Type‹s_3079›)
check_tm( n_3092, nat_3)
infer_tm(n_3092)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_31›, Type‹s_3079›)
infer_tm((exists_5‹??_33,??_34›
           ?_45
           function _3098 : ∀ (x_3099 : ?_42) -> ?_43
           | x_3100 => (eq_4‹??_32› ?_44 x_3100 n_3092)))
check_tm( ?_45, Type‹??_33›)
check_tm(
  function _3101 : ∀ (x_3102 : ?_42) -> ?_43
  | x_3103 => (eq_4‹??_32› ?_44 x_3103 n_3092), ?_45 -> Type‹??_34›)
infer_tm(∀ (x_3106 : ?_42) -> ?_43)
infer_tm(?_42)
delay_assert(?_67, ??_48)
infer_tm(?_43)
simpl_tm ~expand:false( ?_67, Type‹??_48›)
delay_assert(?_68, ??_49)
simpl_tm ~expand:false( ?_68, Type‹??_49›)
assert_equal1( ?_45 -> Type‹??_34›, ∀ (x_3109 : ?_42) -> ?_43)
simpl_tm ~expand:false( ?_45 -> Type‹??_34›, ∀ (x_3114 : ?_42) -> ?_43)
simpl_tm ~expand:false( ?_45, ?_42)
simpl_tm ~expand:false( Type‹??_34›, ?_43)
simpl_tm ~expand:false( Type‹??_34›, ?_43)
check_cls {|
  prblm {| ; {|  ::: [x_3110] =>? (eq_4‹??_32› ?_44 #x_3110 n_3092) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3117, x_3110 : ?_42) ::: [] =>?
         (eq_4‹??_32› ?_44 #x_3110 n_3092)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__3117, x_3110 : ?_42) )
simpl_pprbm ~expand:false( #__3117, #x_3110)
simpl_pprbm ~expand:false( #__3117, #x_3110)
case_coverage_ok( (eq_4‹??_32› ?_44 __3117 n_3092), Type‹??_34›)
check_tm( (eq_4‹??_32› ?_44 __3117 n_3092), Type‹??_34›)
infer_tm((eq_4‹??_32› ?_44 __3117 n_3092))
check_tm( ?_44, Type‹??_32›)
check_tm( __3117, ?_44)
infer_tm(__3117)
assert_equal1( ?_44, ?_42)
check_tm( n_3092, ?_44)
infer_tm(n_3092)
assert_equal1( ?_44, nat_3)
assert_equal1( Type‹??_34›, U)
simpl_tm ~expand:false( Type‹??_34›, U)
simpl_tm ~expand:false( ?_44, nat_3)
simpl_tm ~expand:false( nat_3, ?_42)
check_tm(
  function vlength_3119 :
    ∀ {A_3120 : Type‹s_3079›} ->
      ∀ {n_3121 : nat_3} ->
        ∀ (__3122 : (vec_8‹??_19› A_3120 n_3121)) ->
          (exists_5‹??_21,??_22›
            ?_25
            function _3123 : ∀ (x_3124 : ?_22) -> ?_23
            | x_3125 => (eq_4‹??_20› ?_24 x_3125 n_3121))
  | A_3126 n_3127 vnil_11 => (ex_7‹??_24,??_25› zero_4 refl_6‹??_23›)
  | A_3128 n_3129 (vcons_12 _3130 _3131 tl_3132) =>
    match ((vlength_3119) ?_31 ?_30 tl_3132) in ∀ (_3133 : ?_32) -o ?_33
    with
    | (ex_7 n_3134 pf_3135) =>
      (ex_7‹??_29,??_30›
        (succ_5‹› n_3134)
        ((congr_3‹??_26,??_27,??_28›)
          ?_39 ?_38 ?_37 ?_36
          function _3136 : ∀ (x_3137 : ?_34) -> ?_35
          | x_3138 => (succ_5‹› x_3138) pf_3135)),
  ∀ {A_3139 : Type‹s_3079›} ->
    ∀ {n_3140 : nat_3} ->
      ∀ (__3141 : (vec_8‹??_31› A_3139 n_3140)) ->
        (exists_5‹??_33,??_34›
          ?_45
          function _3142 : ∀ (x_3143 : ?_42) -> ?_43
          | x_3144 => (eq_4‹??_32› ?_44 x_3144 n_3140)))
infer_tm(∀ {A_3146 : Type‹s_3079›} ->
           ∀ {n_3147 : nat_3} ->
             ∀ (__3148 : (vec_8‹??_19› A_3146 n_3147)) ->
               (exists_5‹??_21,??_22›
                 ?_25
                 function _3149 : ∀ (x_3150 : ?_22) -> ?_23
                 | x_3151 => (eq_4‹??_20› ?_24 x_3151 n_3147)))
infer_tm(Type‹s_3079›)
infer_tm(∀ {n_3153 : nat_3} ->
           ∀ (__3154 : (vec_8‹??_19› A_3152 n_3153)) ->
             (exists_5‹??_21,??_22›
               ?_25
               function _3155 : ∀ (x_3156 : ?_22) -> ?_23
               | x_3157 => (eq_4‹??_20› ?_24 x_3157 n_3153)))
infer_tm(nat_3)
infer_tm(∀ (__3159 : (vec_8‹??_19› A_3152 n_3158)) ->
           (exists_5‹??_21,??_22›
             ?_25
             function _3160 : ∀ (x_3161 : ?_22) -> ?_23
             | x_3162 => (eq_4‹??_20› ?_24 x_3162 n_3158)))
infer_tm((vec_8‹??_19› A_3152 n_3158))
check_tm( A_3152, Type‹??_19›)
infer_tm(A_3152)
assert_equal1( Type‹??_19›, Type‹s_3079›)
check_tm( n_3158, nat_3)
infer_tm(n_3158)
assert_equal1( nat_3, nat_3)
simpl_tm ~expand:false( Type‹??_19›, Type‹s_3079›)
infer_tm((exists_5‹??_21,??_22›
           ?_25
           function _3164 : ∀ (x_3165 : ?_22) -> ?_23
           | x_3166 => (eq_4‹??_20› ?_24 x_3166 n_3158)))
check_tm( ?_25, Type‹??_21›)
check_tm(
  function _3167 : ∀ (x_3168 : ?_22) -> ?_23
  | x_3169 => (eq_4‹??_20› ?_24 x_3169 n_3158), ?_25 -> Type‹??_22›)
infer_tm(∀ (x_3172 : ?_22) -> ?_23)
infer_tm(?_22)
delay_assert(?_69, ??_50)
infer_tm(?_23)
simpl_tm ~expand:false( ?_69, Type‹??_50›)
delay_assert(?_70, ??_51)
simpl_tm ~expand:false( ?_70, Type‹??_51›)
assert_equal1( ?_25 -> Type‹??_22›, ∀ (x_3175 : ?_22) -> ?_23)
simpl_tm ~expand:false( ?_25 -> Type‹??_22›, ∀ (x_3180 : ?_22) -> ?_23)
simpl_tm ~expand:false( ?_25, ?_22)
simpl_tm ~expand:false( Type‹??_22›, ?_23)
simpl_tm ~expand:false( Type‹??_22›, ?_23)
check_cls {|
  prblm {| ; {|  ::: [x_3176] =>? (eq_4‹??_20› ?_24 #x_3176 n_3158) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3183, x_3176 : ?_22) ::: [] =>?
         (eq_4‹??_20› ?_24 #x_3176 n_3158)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__3183, x_3176 : ?_22) )
simpl_pprbm ~expand:false( #__3183, #x_3176)
simpl_pprbm ~expand:false( #__3183, #x_3176)
case_coverage_ok( (eq_4‹??_20› ?_24 __3183 n_3158), Type‹??_22›)
check_tm( (eq_4‹??_20› ?_24 __3183 n_3158), Type‹??_22›)
infer_tm((eq_4‹??_20› ?_24 __3183 n_3158))
check_tm( ?_24, Type‹??_20›)
check_tm( __3183, ?_24)
infer_tm(__3183)
assert_equal1( ?_24, ?_22)
check_tm( n_3158, ?_24)
infer_tm(n_3158)
assert_equal1( ?_24, nat_3)
assert_equal1( Type‹??_22›, U)
simpl_tm ~expand:false( Type‹??_22›, U)
simpl_tm ~expand:false( ?_24, nat_3)
simpl_tm ~expand:false( nat_3, ?_22)
assert_equal1(
  ∀ {A_3185 : Type‹s_3079›} ->
    ∀ {n_3186 : nat_3} ->
      ∀ (__3187 : (vec_8‹??_31› A_3185 n_3186)) ->
        (exists_5‹??_33,??_34›
          ?_45
          function _3188 : ∀ (x_3189 : ?_42) -> ?_43
          | x_3190 => (eq_4‹??_32› ?_44 x_3190 n_3186)),
  ∀ {A_3191 : Type‹s_3079›} ->
    ∀ {n_3192 : nat_3} ->
      ∀ (__3193 : (vec_8‹??_19› A_3191 n_3192)) ->
        (exists_5‹??_21,??_22›
          ?_25
          function _3194 : ∀ (x_3195 : ?_22) -> ?_23
          | x_3196 => (eq_4‹??_20› ?_24 x_3196 n_3192)))
simpl_tm ~expand:false(
  ∀ {A_3244 : Type‹s_3079›} ->
    ∀ {n_3245 : nat_3} ->
      (vec_8‹s_3079› A_3244 n_3245) ->
        (exists_5‹??_33,U›
          nat_3
          function _3247 : nat_3 -> U
          | x_3249 => (eq_4‹??_32› nat_3 x_3249 n_3245)),
  ∀ {A_3250 : Type‹s_3079›} ->
    ∀ {n_3251 : nat_3} ->
      (vec_8‹s_3079› A_3250 n_3251) ->
        (exists_5‹??_21,U›
          nat_3
          function _3253 : nat_3 -> U
          | x_3255 => (eq_4‹??_20› nat_3 x_3255 n_3251)))
simpl_tm ~expand:false( Type‹s_3079›, Type‹s_3079›)
simpl_tm ~expand:false(
  ∀ {n_3257 : nat_3} ->
    (vec_8‹s_3079› A_3256 n_3257) ->
      (exists_5‹??_33,U›
        nat_3
        function _3259 : nat_3 -> U
        | x_3261 => (eq_4‹??_32› nat_3 x_3261 n_3257)),
  ∀ {n_3262 : nat_3} ->
    (vec_8‹s_3079› A_3256 n_3262) ->
      (exists_5‹??_21,U›
        nat_3
        function _3264 : nat_3 -> U
        | x_3266 => (eq_4‹??_20› nat_3 x_3266 n_3262)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  (vec_8‹s_3079› A_3256 n_3267) ->
    (exists_5‹??_33,U›
      nat_3
      function _3269 : nat_3 -> U
      | x_3271 => (eq_4‹??_32› nat_3 x_3271 n_3267)),
  (vec_8‹s_3079› A_3256 n_3267) ->
    (exists_5‹??_21,U›
      nat_3
      function _3273 : nat_3 -> U
      | x_3275 => (eq_4‹??_20› nat_3 x_3275 n_3267)))
simpl_tm ~expand:false( (vec_8‹s_3079› A_3256 n_3267),
  (vec_8‹s_3079› A_3256 n_3267))
simpl_tm ~expand:false( A_3256, A_3256)
simpl_tm ~expand:false( n_3267, n_3267)
simpl_tm ~expand:false(
  (exists_5‹??_33,U›
    nat_3
    function _3277 : nat_3 -> U
    | x_3279 => (eq_4‹??_32› nat_3 x_3279 n_3267)),
  (exists_5‹??_21,U›
    nat_3
    function _3280 : nat_3 -> U
    | x_3282 => (eq_4‹??_20› nat_3 x_3282 n_3267)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _3283 : nat_3 -> U
  | x_3285 => (eq_4‹??_32› nat_3 x_3285 n_3267),
  function _3286 : nat_3 -> U
  | x_3288 => (eq_4‹??_20› nat_3 x_3288 n_3267))
simpl_function(
  function _3289 : nat_3 -> U
  | x_3291 => (eq_4‹??_32› nat_3 x_3291 n_3267),
  function _3292 : nat_3 -> U
  | x_3294 => (eq_4‹??_20› nat_3 x_3294 n_3267))
simpl_tm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( U, U)
simpl_tm ~expand:false( (eq_4‹??_32› nat_3 x_3299 n_3267),
  (eq_4‹??_20› nat_3 x_3299 n_3267))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( x_3299, x_3299)
simpl_tm ~expand:false( n_3267, n_3267)
check_cls {|
  prblm {| ;
    {|  ::: [A_3207, n_3208, vnil_11] =>?
         (ex_7‹??_24,??_25› zero_4 refl_6‹??_23›)
    |}
    {|  ::: [A_3209, n_3210, (vcons_12 _3211 _3212 tl_3213)] =>?
         match ((vlength_3145) ?_31 ?_30 #tl_3213) in
           ∀ (_3315 : ?_32) -o ?_33
         with
         | (ex_7 n_3316 pf_3317) =>
           (ex_7‹??_29,??_30›
             (succ_5‹› n_3316)
             ((congr_3‹??_26,??_27,??_28›)
               ?_39 ?_38 ?_37 ?_36
               function _3318 : ∀ (x_3319 : ?_34) -> ?_35
               | x_3320 => (succ_5‹› x_3320) pf_3317))
    |}
  |}
|}
case_intro
case_intro
case_intro
case_splitting
splitting_on(vnil_11)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_3079› #A_3321 #n_3322),
      (vec_8‹s_3079› #A_3321 zero_4));
    {| eq_pat?( #A_3321, A_3207 : Type‹s_3079›)
       eq_pat?( #n_3322, n_3208 : nat_3) ::: [] =>?
         (ex_7‹??_24,??_25› zero_4 refl_6‹??_23›)
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_3079› #A_3321 #n_3322),
    (vec_8‹s_3079› #A_3321 zero_4))
  eq_pat?( #A_3321, A_3207 : Type‹s_3079›)
  eq_pat?( #n_3322, n_3208 : nat_3)
)
simpl_pprbm ~expand:false( (vec_8‹s_3079› #A_3321 #n_3322),
  (vec_8‹s_3079› #A_3321 zero_4))
simpl_pprbm ~expand:false( #A_3321, #A_3321)
simpl_pprbm ~expand:false( #n_3322, zero_4)
simpl_pprbm ~expand:false( #A_3321, #A_3207)
simpl_pprbm ~expand:false( #n_3322, #n_3208)
simpl_pprbm ~expand:false( zero_4, #n_3322)
simpl_pprbm ~expand:false( #A_3321, #A_3207)
simpl_pprbm ~expand:false( zero_4, #n_3208)
case_coverage_ok( (ex_7‹??_24,??_25› zero_4 refl_6‹??_23›),
  (exists_5‹??_21,U›
    nat_3
    function _3366 : nat_3 -> U
    | x_3368 => (eq_4‹??_20› nat_3 x_3368 zero_4)))
check_tm( (ex_7‹??_24,??_25› zero_4 refl_6‹??_23›),
  (exists_5‹??_21,U›
    nat_3
    function _3369 : nat_3 -> U
    | x_3371 => (eq_4‹??_20› nat_3 x_3371 zero_4)))
infer_tm((ex_7‹??_24,??_25› zero_4 refl_6‹??_23›))
check_tm( ?_28, Type‹??_24›)
check_tm( ?_29, ?_28 -> Type‹??_25›)
check_tm( zero_4, ?_28)
infer_tm(zero_4)
assert_equal1( ?_28, nat_3)
check_tm( refl_6‹??_23›, ((?_29) zero_4))
infer_tm(refl_6‹??_23›)
check_tm( ?_26, Type‹??_23›)
check_tm( ?_27, ?_26)
assert_equal1( ((?_29) zero_4), (eq_4‹??_23› ?_26 ?_27 ?_27))
assert_equal1(
  (exists_5‹??_21,U›
    nat_3
    function _3373 : nat_3 -> U
    | x_3375 => (eq_4‹??_20› nat_3 x_3375 zero_4)),
  (exists_5‹??_24,??_25› ?_28 ?_29))
splitting_on(vcons_12)
case_coverage{|
  prblm {|
    eq_term?( (vec_8‹s_3079› #A_3321 #n_3322),
      (vec_8‹s_3079› #A_3321 (succ_5‹› #n_3376)));
    {| eq_pat?( #A_3321, A_3209 : Type‹s_3079›)
       eq_pat?( #n_3322, n_3210 : nat_3)
       eq_pat?( #n_3376, _3211 : nat_3)
       eq_pat?( #hd_3377, _3212 : #A_3321)
       eq_pat?( #tl_3378, tl_3213 : (vec_8‹s_3079› #A_3321 #n_3376)) ::: [] =>?
         match ((vlength_3145) ?_31 ?_30 #tl_3213) in
           ∀ (_3400 : ?_32) -o ?_33
         with
         | (ex_7 n_3401 pf_3402) =>
           (ex_7‹??_29,??_30›
             (succ_5‹› n_3401)
             ((congr_3‹??_26,??_27,??_28›)
               ?_39 ?_38 ?_37 ?_36
               function _3403 : ∀ (x_3404 : ?_34) -> ?_35
               | x_3405 => (succ_5‹› x_3405) pf_3402))
    |}
  |}
|}
unify_pprbm(
  eq_term?( (vec_8‹s_3079› #A_3321 #n_3322),
    (vec_8‹s_3079› #A_3321 (succ_5‹› #n_3376)))
  eq_pat?( #A_3321, A_3209 : Type‹s_3079›)
  eq_pat?( #n_3322, n_3210 : nat_3)
  eq_pat?( #n_3376, _3211 : nat_3)
  eq_pat?( #hd_3377, _3212 : #A_3321)
  eq_pat?( #tl_3378, tl_3213 : (vec_8‹s_3079› #A_3321 #n_3376))
)
simpl_pprbm ~expand:false( (vec_8‹s_3079› #A_3321 #n_3322),
  (vec_8‹s_3079› #A_3321 (succ_5‹› #n_3376)))
simpl_pprbm ~expand:false( #A_3321, #A_3321)
simpl_pprbm ~expand:false( #n_3322, (succ_5‹› #n_3376))
simpl_pprbm ~expand:false( #A_3321, #A_3209)
simpl_pprbm ~expand:false( #n_3322, #n_3210)
simpl_pprbm ~expand:false( #n_3376, #_3211)
simpl_pprbm ~expand:false( #hd_3377, #_3212)
simpl_pprbm ~expand:false( #tl_3378, #tl_3213)
simpl_pprbm ~expand:false( (succ_5‹› #n_3376), #n_3322)
simpl_pprbm ~expand:false( #A_3321, #A_3209)
simpl_pprbm ~expand:false( (succ_5‹› #n_3376), #n_3210)
simpl_pprbm ~expand:false( #n_3376, #_3211)
simpl_pprbm ~expand:false( #hd_3377, #_3212)
simpl_pprbm ~expand:false( #tl_3378, #tl_3213)
case_coverage_ok(
  match ((vlength_3145) ?_31 ?_30 tl_3378) in ∀ (_3434 : ?_32) -o ?_33 with
  | (ex_7 n_3435 pf_3436) =>
    (ex_7‹??_29,??_30›
      (succ_5‹› n_3435)
      ((congr_3‹??_26,??_27,??_28›)
        ?_39 ?_38 ?_37 ?_36
        function _3437 : ∀ (x_3438 : ?_34) -> ?_35
        | x_3439 => (succ_5‹› x_3439) pf_3436)),
  (exists_5‹??_21,U›
    nat_3
    function _3440 : nat_3 -> U
    | x_3442 => (eq_4‹??_20› nat_3 x_3442 (succ_5‹› n_3376))))
check_tm(
  match ((vlength_3145) ?_31 ?_30 tl_3378) in ∀ (_3443 : ?_32) -o ?_33 with
  | (ex_7 n_3444 pf_3445) =>
    (ex_7‹??_29,??_30›
      (succ_5‹› n_3444)
      ((congr_3‹??_26,??_27,??_28›)
        ?_39 ?_38 ?_37 ?_36
        function _3446 : ∀ (x_3447 : ?_34) -> ?_35
        | x_3448 => (succ_5‹› x_3448) pf_3445)),
  (exists_5‹??_21,U›
    nat_3
    function _3449 : nat_3 -> U
    | x_3451 => (eq_4‹??_20› nat_3 x_3451 (succ_5‹› n_3376))))
infer_tm(match ((vlength_3145) ?_31 ?_30 tl_3378) in
           ∀ (_3452 : ?_32) -o ?_33
         with
         | (ex_7 n_3453 pf_3454) =>
           (ex_7‹??_29,??_30›
             (succ_5‹› n_3453)
             ((congr_3‹??_26,??_27,??_28›)
               ?_39 ?_38 ?_37 ?_36
               function _3455 : ∀ (x_3456 : ?_34) -> ?_35
               | x_3457 => (succ_5‹› x_3457) pf_3454)))
infer_tm(∀ (_3458 : ?_32) -o ?_33)
infer_tm(?_32)
simpl_tm ~expand:false(
  (exists_5‹??_21,U›
    nat_3
    function _3463 : nat_3 -> U
    | x_3465 => (eq_4‹??_20› nat_3 x_3465 zero_4)),
  (exists_5‹??_24,??_25› ?_28 ?_29))
simpl_tm ~expand:false( nat_3, ?_28)
simpl_tm ~expand:false(
  function _3466 : nat_3 -> U
  | x_3468 => (eq_4‹??_20› nat_3 x_3468 zero_4), ?_29)
simpl_tm ~expand:false( nat_3, ?_28)
simpl_tm ~expand:false(
  function _3473 : nat_3 -> U
  | x_3475 => (eq_4‹??_20› nat_3 x_3475 zero_4), ?_29)
simpl_tm ~expand:false( (eq_4‹??_20› nat_3 zero_4 zero_4),
  (eq_4‹??_23› ?_26 ?_27 ?_27))
simpl_tm ~expand:false( nat_3, ?_26)
simpl_tm ~expand:false( zero_4, ?_27)
simpl_tm ~expand:false( zero_4, ?_27)
simpl_tm ~expand:false( nat_3, ?_26)
simpl_tm ~expand:false( zero_4, ?_27)
simpl_tm ~expand:false( zero_4, zero_4)
simpl_tm ~expand:false( nat_3, nat_3)
delay_assert(?_71, ??_52)
infer_tm(?_33)
simpl_tm ~expand:false( ?_71, Type‹??_52›)
delay_assert(?_72, ??_53)
simpl_tm ~expand:false( ?_72, Type‹??_53›)
check_tm( ((vlength_3145) ?_31 ?_30 tl_3378), ?_32)
infer_tm(((vlength_3145) ?_31 ?_30 tl_3378))
infer_tm(((vlength_3145) ?_31 ?_30))
infer_tm(((vlength_3145) ?_31))
infer_tm(vlength_3145)
check_tm( ?_31, Type‹s_3079›)
check_tm( ?_30, nat_3)
check_tm( tl_3378, (vec_8‹s_3079› ?_31 ?_30))
infer_tm(tl_3378)
assert_equal1( (vec_8‹s_3079› ?_31 ?_30),
  (vec_8‹s_3079› A_3321 n_3376))
assert_equal1( ?_32,
  (exists_5‹??_21,U›
    nat_3
    function _3518 : nat_3 -> U
    | x_3520 => (eq_4‹??_20› nat_3 x_3520 ?_30)))
simpl_tm ~expand:false( ?_32,
  (exists_5‹??_21,U›
    nat_3
    function _3526 : nat_3 -> U
    | x_3528 => (eq_4‹??_20› nat_3 x_3528 ?_30)))
simpl_tm ~expand:false( (vec_8‹s_3079› ?_31 ?_30),
  (vec_8‹s_3079› A_3321 n_3376))
simpl_tm ~expand:false( ?_31, A_3321)
simpl_tm ~expand:false( ?_30, n_3376)
simpl_tm ~expand:false( n_3376, ?_30)
check_cls {|
  prblm {| ;
    {|  ::: [(ex_7 n_3521 pf_3522)] =>?
         (ex_7‹??_29,??_30›
           (succ_5‹› #n_3521)
           ((congr_3‹??_26,??_27,??_28›)
             ?_39 ?_38 ?_37 ?_36
             function _3541 : ∀ (x_3542 : ?_34) -> ?_35
             | x_3543 => (succ_5‹› x_3543) #pf_3522))
    |}
  |}
|}
case_intro
case_splitting
splitting_on(ex_7)
case_coverage{|
  prblm {|
    eq_term?(
      (exists_5‹??_21,U›
        nat_3
        function _3580 : nat_3 -> U
        | x_3582 => (eq_4‹??_20› nat_3 x_3582 n_3376)),
      (exists_5‹??_21,U›
        nat_3
        function _3583 : nat_3 -> U
        | x_3585 => (eq_4‹??_20› nat_3 x_3585 n_3376)));
    {| eq_pat?( #m_3545, n_3521 : nat_3)
       eq_pat?( #pf_3546, pf_3522 : (eq_4‹??_20› nat_3 #m_3545 n_3376)) ::: [] =>?
         (ex_7‹??_29,??_30›
           (succ_5‹› #n_3521)
           ((congr_3‹??_26,??_27,??_28›)
             ?_39 ?_38 ?_37 ?_36
             function _3586 : ∀ (x_3587 : ?_34) -> ?_35
             | x_3588 => (succ_5‹› x_3588) #pf_3522))
    |}
  |}
|}
unify_pprbm(
  eq_term?(
    (exists_5‹??_21,U›
      nat_3
      function _3589 : nat_3 -> U
      | x_3591 => (eq_4‹??_20› nat_3 x_3591 n_3376)),
    (exists_5‹??_21,U›
      nat_3
      function _3592 : nat_3 -> U
      | x_3594 => (eq_4‹??_20› nat_3 x_3594 n_3376)))
  eq_pat?( #m_3545, n_3521 : nat_3)
  eq_pat?( #pf_3546, pf_3522 : (eq_4‹??_20› nat_3 #m_3545 n_3376))
)
simpl_pprbm ~expand:false(
  (exists_5‹??_21,U›
    nat_3
    function _3595 : nat_3 -> U
    | x_3597 => (eq_4‹??_20› nat_3 x_3597 n_3376)),
  (exists_5‹??_21,U›
    nat_3
    function _3598 : nat_3 -> U
    | x_3600 => (eq_4‹??_20› nat_3 x_3600 n_3376)))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false(
  function _3601 : nat_3 -> U
  | x_3603 => (eq_4‹??_20› nat_3 x_3603 n_3376),
  function _3604 : nat_3 -> U
  | x_3606 => (eq_4‹??_20› nat_3 x_3606 n_3376))
simpl_pprbm ~expand:false( nat_3 -> U, nat_3 -> U)
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( U, U)
simpl_pprbm ~expand:false( (eq_4‹??_20› nat_3 x_3611 n_3376),
  (eq_4‹??_20› nat_3 x_3611 n_3376))
simpl_pprbm ~expand:false( nat_3, nat_3)
simpl_pprbm ~expand:false( x_3611, x_3611)
simpl_pprbm ~expand:false( n_3376, n_3376)
simpl_pprbm ~expand:false( #m_3545, #n_3521)
simpl_pprbm ~expand:false( #pf_3546, #pf_3522)
simpl_pprbm ~expand:false( #m_3545, #n_3521)
simpl_pprbm ~expand:false( #pf_3546, #pf_3522)
case_coverage_ok(
  (ex_7‹??_29,??_30›
    (succ_5‹› m_3545)
    ((congr_3‹??_26,??_27,??_28›)
      ?_39 ?_38 ?_37 ?_36
      function _3642 : ∀ (x_3643 : ?_34) -> ?_35
      | x_3644 => (succ_5‹› x_3644) pf_3546)),
  ?_33)
check_tm(
  (ex_7‹??_29,??_30›
    (succ_5‹› m_3545)
    ((congr_3‹??_26,??_27,??_28›)
      ?_39 ?_38 ?_37 ?_36
      function _3645 : ∀ (x_3646 : ?_34) -> ?_35
      | x_3647 => (succ_5‹› x_3647) pf_3546)),
  ?_33)
infer_tm((ex_7‹??_29,??_30›
           (succ_5‹› m_3545)
           ((congr_3‹??_26,??_27,??_28›)
             ?_39 ?_38 ?_37 ?_36
             function _3648 : ∀ (x_3649 : ?_34) -> ?_35
             | x_3650 => (succ_5‹› x_3650) pf_3546)))
check_tm( ?_40, Type‹??_29›)
check_tm( ?_41, ?_40 -> Type‹??_30›)
check_tm( (succ_5‹› m_3545), ?_40)
infer_tm((succ_5‹› m_3545))
check_tm( m_3545, nat_3)
infer_tm(m_3545)
assert_equal1( nat_3, nat_3)
assert_equal1( ?_40, nat_3)
check_tm(
  ((congr_3‹??_26,??_27,??_28›)
    ?_39 ?_38 ?_37 ?_36
    function _3652 : ∀ (x_3653 : ?_34) -> ?_35
    | x_3654 => (succ_5‹› x_3654) pf_3546),
  ((?_41) (succ_5‹› m_3545)))
infer_tm(((congr_3‹??_26,??_27,??_28›)
           ?_39 ?_38 ?_37 ?_36
           function _3655 : ∀ (x_3656 : ?_34) -> ?_35
           | x_3657 => (succ_5‹› x_3657) pf_3546))
infer_tm(((congr_3‹??_26,??_27,??_28›)
           ?_39 ?_38 ?_37 ?_36
           function _3658 : ∀ (x_3659 : ?_34) -> ?_35
           | x_3660 => (succ_5‹› x_3660)))
infer_tm(((congr_3‹??_26,??_27,??_28›) ?_39 ?_38 ?_37 ?_36))
infer_tm(((congr_3‹??_26,??_27,??_28›) ?_39 ?_38 ?_37))
infer_tm(((congr_3‹??_26,??_27,??_28›) ?_39 ?_38))
infer_tm(((congr_3‹??_26,??_27,??_28›) ?_39))
infer_tm(congr_3‹??_26,??_27,??_28›)
simpl_tm ~expand:false( ?_40, nat_3)
check_tm( ?_39, Type‹??_26›)
check_tm( ?_38, Type‹??_27›)
check_tm( ?_37, ?_39)
check_tm( ?_36, ?_39)
check_tm(
  function _3732 : ∀ (x_3733 : ?_34) -> ?_35
  | x_3734 => (succ_5‹› x_3734), forall‹??_28›(__3735 : ?_39), ?_38)
infer_tm(∀ (x_3737 : ?_34) -> ?_35)
infer_tm(?_34)
delay_assert(?_73, ??_54)
infer_tm(?_35)
simpl_tm ~expand:false( ?_73, Type‹??_54›)
delay_assert(?_74, ??_55)
simpl_tm ~expand:false( ?_74, Type‹??_55›)
assert_equal1( forall‹??_28›(__3739 : ?_39), ?_38,
  ∀ (x_3740 : ?_34) -> ?_35)
simpl_tm ~expand:false( forall‹??_28›(__3744 : ?_39), ?_38,
  ∀ (x_3745 : ?_34) -> ?_35)
simpl_tm ~expand:false( ?_39, ?_34)
simpl_tm ~expand:false( ?_38, ?_35)
simpl_tm ~expand:false( ?_34, ?_39)
simpl_tm ~expand:false( ?_35, ?_38)
check_cls {|
  prblm {| ; {|  ::: [x_3741] =>? (succ_5‹› #x_3741) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__3750, x_3741 : ?_34) ::: [] =>? (succ_5‹› #x_3741) |}
  |}
|}
unify_pprbm( eq_pat?( #__3750, x_3741 : ?_34) )
simpl_pprbm ~expand:false( #__3750, #x_3741)
simpl_pprbm ~expand:false( #__3750, #x_3741)
case_coverage_ok( (succ_5‹› __3750), ?_35)
check_tm( (succ_5‹› __3750), ?_35)
infer_tm((succ_5‹› __3750))
check_tm( __3750, nat_3)
infer_tm(__3750)
assert_equal1( nat_3, ?_34)
assert_equal1( ?_35, nat_3)
simpl_tm ~expand:false( ?_35, nat_3)
simpl_tm ~expand:false( nat_3, ?_34)
check_tm( pf_3546, (eq_4‹??_26› nat_3 ?_37 ?_36))
infer_tm(pf_3546)
assert_equal1( (eq_4‹??_26› nat_3 ?_37 ?_36),
  ((function _3785 : nat_3 -> U
    | x_3787 => (eq_4‹??_20› nat_3 x_3787 n_3376)) m_3545))
assert_equal1( ((?_41) (succ_5‹› m_3545)),
  (eq_4‹??_27›
    nat_3
    ((function _3788 : nat_3 -> nat_3
      | x_3790 => (succ_5‹› x_3790)) ?_37)
    ((function _3791 : nat_3 -> nat_3
      | x_3793 => (succ_5‹› x_3793)) ?_36)))
assert_equal1( ?_33, (exists_5‹??_29,??_30› ?_40 ?_41))
assert_equal1(
  (exists_5‹??_21,U›
    nat_3
    function _3794 : nat_3 -> U
    | x_3796 => (eq_4‹??_20› nat_3 x_3796 (succ_5‹› n_3376))),
  ?_33)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_3797
    ??_2 <= s_3799
    ??_3 <= r_3800
    ??_4 <= s_3802
    ??_5 <= s_3803
    ??_6 <= s_3804
    ??_7 <= s_3805
    ??_8 <= s_3806
    ??_9 <= s_3807
    ??_10 <= s_3809
    ??_11 <= ??_10
    ??_12 <= s_3813
    ??_13 <= ??_12
    ??_14 <= s_3818
    ??_15 <= r_3820
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= s_3831
    ??_22 <= U
    ??_23 <= ??_20
    ??_24 <= ??_21
    ??_25 <= U
    ??_28 <= U
    ??_31 <= s_3837
    ??_32 <= ??_20
    ??_33 <= ??_21
    ??_34 <= U
    ??_40 <= s_3841
    ??_41 <= s_3842
    ??_42 <= U
    ??_43 <= s_3844
    ??_44 <= s_3845
    ??_45 <= s_3846
    ??_46 <= U
    ??_47 <= s_3848
    
  |}
  imeta_meta {|
    ?_1 <= A_3851
    ?_2 <= A_3854
    ?_3 <= A_3860
    ?_4 <= A_3866
    ?_5 <= A_3872
    ?_6 <= A_3878
    ?_7 <= A_3886
    ?_8 <= B_3894
    ?_9 <= B_3902
    ?_10 <= ((f_3908) n_3910)
    ?_11 <= A_3921
    ?_12 <= B_3929
    ?_13 <= A_3934
    ?_14 <= n_3937
    ?_15 <= nat_3
    ?_16 <= ?_13
    ?_17 <= ?_13
    ?_18 <= A_3959
    ?_19 <= (vec_8‹s_3960› A_3963 (succ_5‹› n_3962))
    ?_20 <= ?_18
    ?_21 <= ?_18
    ?_22 <= nat_3
    ?_23 <= Type‹??_22›
    ?_24 <= nat_3
    ?_25 <= ?_22
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _4009 : nat_3 -> U
            | x_4011 => (eq_4‹??_20› nat_3 x_4011 zero_4)
    ?_30 <= n_4015
    ?_31 <= A_4024
    ?_32 <= (exists_5‹??_21,U›
              nat_3
              function _4033 : nat_3 -> U
              | x_4035 => (eq_4‹??_20› nat_3 x_4035 ?_30))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_38 <= ?_35
    ?_39 <= ?_34
    ?_40 <= nat_3
    ?_42 <= nat_3
    ?_43 <= Type‹??_34›
    ?_44 <= nat_3
    ?_45 <= ?_42
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    ?_63 <= Type‹??_44›
    ?_64 <= Type‹??_45›
    ?_65 <= Type‹??_46›
    ?_66 <= Type‹??_47›
    ?_67 <= Type‹??_48›
    ?_68 <= Type‹??_49›
    ?_69 <= Type‹??_50›
    ?_70 <= Type‹??_51›
    ?_71 <= Type‹??_52›
    ?_72 <= Type‹??_53›
    ?_73 <= Type‹??_54›
    ?_74 <= Type‹??_55›
    
  |}
  eqns {|
    equal_tm?
      ((exists_5‹??_21,U›
         nat_3
         function _4197 : nat_3 -> U
         | x_4199 => (eq_4‹??_20› nat_3 x_4199 (succ_5‹› n_3376))),
      ?_33);
    equal_tm? (?_33, (exists_5‹??_29,??_30› ?_40 ?_41));
    equal_tm? (((?_41) (succ_5‹› m_3545)),
      (eq_4‹??_27›
        nat_3
        ((function _4200 : nat_3 -> nat_3
          | x_4202 => (succ_5‹› x_4202)) ?_37)
        ((function _4203 : nat_3 -> nat_3
          | x_4205 => (succ_5‹› x_4205)) ?_36)));
    equal_tm? ((eq_4‹??_26› nat_3 ?_37 ?_36),
      ((function _4206 : nat_3 -> U
        | x_4208 => (eq_4‹??_20› nat_3 x_4208 n_3376)) m_3545))
  |}
end_dump
simpl_tm ~expand:false(
  (exists_5‹??_21,U›
    nat_3
    function _4212 : nat_3 -> U
    | x_4214 => (eq_4‹??_20› nat_3 x_4214 (succ_5‹› n_3376))),
  ?_33)
simpl_tm ~expand:false(
  (exists_5‹??_21,U›
    nat_3
    function _4225 : nat_3 -> U
    | x_4227 => (eq_4‹??_20› nat_3 x_4227 (succ_5‹› n_3376))),
  (exists_5‹??_29,??_30› nat_3 ?_41))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false(
  function _4228 : nat_3 -> U
  | x_4230 => (eq_4‹??_20› nat_3 x_4230 (succ_5‹› n_3376)), ?_41)
simpl_tm ~expand:false(
  function _4234 : nat_3 -> U
  | x_4236 => (eq_4‹??_20› nat_3 x_4236 (succ_5‹› n_3376)), ?_41)
simpl_tm ~expand:false(
  (eq_4‹??_20› nat_3 (succ_5‹› m_3545) (succ_5‹› n_3376)),
  (eq_4‹??_27›
    nat_3
    ((function _4252 : nat_3 -> nat_3
      | x_4254 => (succ_5‹› x_4254)) ?_37)
    ((function _4255 : nat_3 -> nat_3
      | x_4257 => (succ_5‹› x_4257)) ?_36)))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( (succ_5‹› m_3545), (succ_5‹› ?_37))
simpl_tm ~expand:false( m_3545, ?_37)
simpl_tm ~expand:false( (succ_5‹› n_3376), (succ_5‹› ?_36))
simpl_tm ~expand:false( n_3376, ?_36)
simpl_tm ~expand:false( m_3545, ?_37)
simpl_tm ~expand:false( n_3376, ?_36)
simpl_tm ~expand:false( (eq_4‹??_26› nat_3 m_3545 n_3376),
  (eq_4‹??_20› nat_3 m_3545 n_3376))
simpl_tm ~expand:false( nat_3, nat_3)
simpl_tm ~expand:false( m_3545, m_3545)
simpl_tm ~expand:false( n_3376, n_3376)
infer_tm(Type‹??_50›)
check_tm( nat_3, Type‹??_50›)
infer_tm(nat_3)
assert_equal1( Type‹??_50›, U)
simpl_tm ~expand:false( Type‹??_50›, U)
infer_tm(Type‹??_51›)
check_tm( U, Type‹??_51›)
infer_tm(U)
assert_equal1( Type‹??_51›, U)
simpl_tm ~expand:false( Type‹??_51›, U)
infer_tm(Type‹??_20›)
check_tm( nat_3, Type‹??_20›)
infer_tm(nat_3)
assert_equal1( Type‹??_20›, U)
simpl_tm ~expand:false( Type‹??_20›, U)
infer_tm(Type‹??_21›)
check_tm( nat_3, Type‹??_21›)
infer_tm(nat_3)
assert_equal1( Type‹??_21›, U)
simpl_tm ~expand:false( Type‹??_21›, U)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(
  function _4330 : nat_3 -> U
  | x_4332 => (eq_4‹U› nat_3 x_4332 zero_4), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ; {|  ::: [x_4340] =>? (eq_4‹U› nat_3 #x_4340 zero_4) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4342, x_4340 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4340 zero_4)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__4342, x_4340 : nat_3) )
simpl_pprbm ~expand:false( #__4342, #x_4340)
simpl_pprbm ~expand:false( #__4342, #x_4340)
case_coverage_ok( (eq_4‹U› nat_3 __4342 zero_4), U)
check_tm( (eq_4‹U› nat_3 __4342 zero_4), U)
infer_tm((eq_4‹U› nat_3 __4342 zero_4))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm( __4342, nat_3)
infer_tm(__4342)
assert_equal1( nat_3, nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
infer_tm(nat_3)
check_tm( n_3376, nat_3)
infer_tm(n_3376)
assert_equal1( nat_3, nat_3)
infer_tm(Type‹s_3079›)
check_tm( A_3321, Type‹s_3079›)
infer_tm(A_3321)
assert_equal1( Type‹s_3079›, Type‹s_3079›)
infer_tm(Type‹??_52›)
check_tm(
  (exists_5‹U,U›
    nat_3
    function _4407 : nat_3 -> U
    | x_4409 => (eq_4‹U› nat_3 x_4409 n_3376)),
  Type‹??_52›)
infer_tm((exists_5‹U,U›
           nat_3
           function _4410 : nat_3 -> U
           | x_4412 => (eq_4‹U› nat_3 x_4412 n_3376)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(
  function _4413 : nat_3 -> U
  | x_4415 => (eq_4‹U› nat_3 x_4415 n_3376), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ; {|  ::: [x_4423] =>? (eq_4‹U› nat_3 #x_4423 n_3376) |} |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4425, x_4423 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4423 n_3376)
    |}
  |}
|}
unify_pprbm( eq_pat?( #__4425, x_4423 : nat_3) )
simpl_pprbm ~expand:false( #__4425, #x_4423)
simpl_pprbm ~expand:false( #__4425, #x_4423)
case_coverage_ok( (eq_4‹U› nat_3 __4425 n_3376), U)
check_tm( (eq_4‹U› nat_3 __4425 n_3376), U)
infer_tm((eq_4‹U› nat_3 __4425 n_3376))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm( __4425, nat_3)
infer_tm(__4425)
assert_equal1( nat_3, nat_3)
check_tm( n_3376, nat_3)
infer_tm(n_3376)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( Type‹??_52›, U)
simpl_tm ~expand:false( Type‹??_52›, U)
infer_tm(Type‹??_53›)
check_tm(
  (exists_5‹U,U›
    nat_3
    function _4463 : nat_3 -> U
    | x_4465 => (eq_4‹U› nat_3 x_4465 (succ_5‹› n_3376))),
  Type‹??_53›)
infer_tm((exists_5‹U,U›
           nat_3
           function _4466 : nat_3 -> U
           | x_4468 => (eq_4‹U› nat_3 x_4468 (succ_5‹› n_3376))))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm(
  function _4469 : nat_3 -> U
  | x_4471 => (eq_4‹U› nat_3 x_4471 (succ_5‹› n_3376)), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ;
    {|  ::: [x_4479] =>? (eq_4‹U› nat_3 #x_4479 (succ_5‹› n_3376)) |}
  |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4481, x_4479 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4479 (succ_5‹› n_3376))
    |}
  |}
|}
unify_pprbm( eq_pat?( #__4481, x_4479 : nat_3) )
simpl_pprbm ~expand:false( #__4481, #x_4479)
simpl_pprbm ~expand:false( #__4481, #x_4479)
case_coverage_ok( (eq_4‹U› nat_3 __4481 (succ_5‹› n_3376)), U)
check_tm( (eq_4‹U› nat_3 __4481 (succ_5‹› n_3376)), U)
infer_tm((eq_4‹U› nat_3 __4481 (succ_5‹› n_3376)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm( __4481, nat_3)
infer_tm(__4481)
assert_equal1( nat_3, nat_3)
check_tm( (succ_5‹› n_3376), nat_3)
infer_tm((succ_5‹› n_3376))
check_tm( n_3376, nat_3)
infer_tm(n_3376)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
assert_equal1( Type‹??_53›, U)
simpl_tm ~expand:false( Type‹??_53›, U)
infer_tm(Type‹??_54›)
check_tm( nat_3, Type‹??_54›)
infer_tm(nat_3)
assert_equal1( Type‹??_54›, U)
simpl_tm ~expand:false( Type‹??_54›, U)
infer_tm(Type‹??_55›)
check_tm( nat_3, Type‹??_55›)
infer_tm(nat_3)
assert_equal1( Type‹??_55›, U)
simpl_tm ~expand:false( Type‹??_55›, U)
infer_tm(nat_3)
check_tm( n_3376, nat_3)
infer_tm(n_3376)
assert_equal1( nat_3, nat_3)
infer_tm(nat_3)
check_tm( m_3545, nat_3)
infer_tm(m_3545)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
check_tm(
  function _4675 : nat_3 -> U
  | x_4677 => (eq_4‹U› nat_3 x_4677 (succ_5‹› n_3376)), nat_3 -> U)
infer_tm(nat_3 -> U)
infer_tm(nat_3)
infer_tm(U)
assert_equal1( nat_3 -> U, nat_3 -> U)
check_cls {|
  prblm {| ;
    {|  ::: [x_4685] =>? (eq_4‹U› nat_3 #x_4685 (succ_5‹› n_3376)) |}
  |}
|}
case_intro
case_coverage{|
  prblm {| ;
    {| eq_pat?( #__4687, x_4685 : nat_3) ::: [] =>?
         (eq_4‹U› nat_3 #x_4685 (succ_5‹› n_3376))
    |}
  |}
|}
unify_pprbm( eq_pat?( #__4687, x_4685 : nat_3) )
simpl_pprbm ~expand:false( #__4687, #x_4685)
simpl_pprbm ~expand:false( #__4687, #x_4685)
case_coverage_ok( (eq_4‹U› nat_3 __4687 (succ_5‹› n_3376)), U)
check_tm( (eq_4‹U› nat_3 __4687 (succ_5‹› n_3376)), U)
infer_tm((eq_4‹U› nat_3 __4687 (succ_5‹› n_3376)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm( __4687, nat_3)
infer_tm(__4687)
assert_equal1( nat_3, nat_3)
check_tm( (succ_5‹› n_3376), nat_3)
infer_tm((succ_5‹› n_3376))
check_tm( n_3376, nat_3)
infer_tm(n_3376)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_48›)
check_tm( nat_3, Type‹??_48›)
infer_tm(nat_3)
assert_equal1( Type‹??_48›, U)
simpl_tm ~expand:false( Type‹??_48›, U)
infer_tm(Type‹??_49›)
check_tm( U, Type‹??_49›)
infer_tm(U)
assert_equal1( Type‹??_49›, U)
simpl_tm ~expand:false( Type‹??_49›, U)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
----------------------------------

definition-------------------------
infer_tm(?_49)
delay_assert(?_75, ??_56)
check_tm( (vcons_12‹??_36› ?_47 zero_4 vnil_11‹??_35›), ?_49)
infer_tm((vcons_12‹??_36› ?_47 zero_4 vnil_11‹??_35›))
check_tm( ?_48, Type‹??_36›)
check_tm( ?_47, nat_3)
check_tm( zero_4, ?_48)
infer_tm(zero_4)
assert_equal1( ?_48, nat_3)
check_tm( vnil_11‹??_35›, (vec_8‹??_36› ?_48 ?_47))
infer_tm(vnil_11‹??_35›)
check_tm( ?_46, Type‹??_35›)
assert_equal1( (vec_8‹??_36› ?_48 ?_47), (vec_8‹??_35› ?_46 zero_4))
assert_equal1( ?_49, (vec_8‹??_36› ?_48 (succ_5‹› ?_47)))
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_4791
    ??_2 <= s_4793
    ??_3 <= r_4794
    ??_4 <= s_4796
    ??_5 <= s_4797
    ??_6 <= s_4798
    ??_7 <= s_4799
    ??_8 <= s_4800
    ??_9 <= s_4801
    ??_10 <= s_4803
    ??_11 <= ??_10
    ??_12 <= s_4807
    ??_13 <= ??_12
    ??_14 <= s_4812
    ??_15 <= r_4814
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= s_4825
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= ??_20
    ??_24 <= ??_21
    ??_25 <= U
    ??_26 <= ??_20
    ??_27 <= ??_20
    ??_28 <= U
    ??_29 <= ??_21
    ??_30 <= U
    ??_31 <= s_4837
    ??_32 <= ??_20
    ??_33 <= ??_21
    ??_34 <= U
    ??_40 <= s_4841
    ??_41 <= s_4842
    ??_42 <= U
    ??_43 <= s_4844
    ??_44 <= s_4845
    ??_45 <= s_4846
    ??_46 <= U
    ??_47 <= s_4848
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_4859
    ?_2 <= A_4862
    ?_3 <= A_4868
    ?_4 <= A_4874
    ?_5 <= A_4880
    ?_6 <= A_4886
    ?_7 <= A_4894
    ?_8 <= B_4902
    ?_9 <= B_4910
    ?_10 <= ((f_4916) n_4918)
    ?_11 <= A_4929
    ?_12 <= B_4937
    ?_13 <= A_4942
    ?_14 <= n_4945
    ?_15 <= nat_3
    ?_16 <= ?_13
    ?_17 <= ?_13
    ?_18 <= A_4967
    ?_19 <= (vec_8‹s_4968› A_4971 (succ_5‹› n_4970))
    ?_20 <= ?_18
    ?_21 <= ?_18
    ?_22 <= nat_3
    ?_23 <= Type‹??_22›
    ?_24 <= nat_3
    ?_25 <= ?_22
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _5017 : nat_3 -> U
            | x_5019 => (eq_4‹??_20› nat_3 x_5019 zero_4)
    ?_30 <= n_5023
    ?_31 <= A_5032
    ?_32 <= (exists_5‹??_21,U›
              nat_3
              function _5041 : nat_3 -> U
              | x_5043 => (eq_4‹??_20› nat_3 x_5043 ?_30))
    ?_33 <= (exists_5‹??_21,U›
              nat_3
              function _5052 : nat_3 -> U
              | x_5054 =>
                (eq_4‹??_20› nat_3 x_5054 (succ_5‹› n_5048)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_5079
    ?_37 <= m_5085
    ?_38 <= ?_35
    ?_39 <= ?_34
    ?_40 <= nat_3
    ?_41 <= function _5128 : nat_3 -> U
            | x_5130 => (eq_4‹??_20› nat_3 x_5130 (succ_5‹› n_5124))
    ?_42 <= nat_3
    ?_43 <= Type‹??_34›
    ?_44 <= nat_3
    ?_45 <= ?_42
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    ?_63 <= Type‹??_44›
    ?_64 <= Type‹??_45›
    ?_65 <= Type‹??_46›
    ?_66 <= Type‹??_47›
    ?_67 <= Type‹??_48›
    ?_68 <= Type‹??_49›
    ?_69 <= Type‹??_50›
    ?_70 <= Type‹??_51›
    ?_71 <= Type‹??_52›
    ?_72 <= Type‹??_53›
    ?_73 <= Type‹??_54›
    ?_74 <= Type‹??_55›
    
  |}
  eqns {|
    equal_tm? (?_49, (vec_8‹??_36› ?_48 (succ_5‹› ?_47)));
    equal_tm? ((vec_8‹??_36› ?_48 ?_47), (vec_8‹??_35› ?_46 zero_4));
    equal_tm? (?_48, nat_3);
    equal_tm? (?_75, Type‹??_56›)
  |}
end_dump
simpl_tm ~expand:false( ?_49, (vec_8‹??_36› ?_48 (succ_5‹› ?_47)))
simpl_tm ~expand:false( (vec_8‹??_36› ?_48 ?_47),
  (vec_8‹??_35› ?_46 zero_4))
simpl_tm ~expand:false( ?_48, ?_46)
simpl_tm ~expand:false( ?_47, zero_4)
simpl_tm ~expand:false( ?_46, ?_48)
simpl_tm ~expand:false( zero_4, ?_47)
simpl_tm ~expand:false( ?_46, nat_3)
simpl_tm ~expand:false( ?_75, Type‹??_56›)
infer_tm(Type‹??_35›)
check_tm( nat_3, Type‹??_35›)
infer_tm(nat_3)
assert_equal1( Type‹??_35›, U)
simpl_tm ~expand:false( Type‹??_35›, U)
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_56›)
check_tm( (vec_8‹U› nat_3 (succ_5‹› zero_4)), Type‹??_56›)
infer_tm((vec_8‹U› nat_3 (succ_5‹› zero_4)))
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
check_tm( (succ_5‹› zero_4), nat_3)
infer_tm((succ_5‹› zero_4))
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
assert_equal1( nat_3, nat_3)
assert_equal1( Type‹??_56›, U)
simpl_tm ~expand:false( Type‹??_56›, U)
----------------------------------

definition-------------------------
infer_tm(?_52)
delay_assert(?_76, ??_57)
check_tm( ((hd_vec_4‹??_37›) ?_51 ?_50 xs_8), ?_52)
infer_tm(((hd_vec_4‹??_37›) ?_51 ?_50 xs_8))
infer_tm(((hd_vec_4‹??_37›) ?_51 ?_50))
infer_tm(((hd_vec_4‹??_37›) ?_51))
infer_tm(hd_vec_4‹??_37›)
simpl_tm ~expand:false( ?_76, Type‹??_57›)
check_tm( ?_51, Type‹??_37›)
check_tm( ?_50, nat_3)
check_tm( xs_8, (vec_8‹??_37› ?_51 (succ_5‹› ?_50)))
infer_tm(xs_8)
assert_equal1( (vec_8‹??_37› ?_51 (succ_5‹› ?_50)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1( ?_52, ?_51)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_5255
    ??_2 <= s_5257
    ??_3 <= r_5258
    ??_4 <= s_5260
    ??_5 <= s_5261
    ??_6 <= s_5262
    ??_7 <= s_5263
    ??_8 <= s_5264
    ??_9 <= s_5265
    ??_10 <= s_5267
    ??_11 <= ??_10
    ??_12 <= s_5271
    ??_13 <= ??_12
    ??_14 <= s_5276
    ??_15 <= r_5278
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= s_5289
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= ??_20
    ??_24 <= ??_21
    ??_25 <= U
    ??_26 <= ??_20
    ??_27 <= ??_20
    ??_28 <= U
    ??_29 <= ??_21
    ??_30 <= U
    ??_31 <= s_5301
    ??_32 <= ??_20
    ??_33 <= ??_21
    ??_34 <= U
    ??_35 <= U
    ??_36 <= ??_35
    ??_40 <= s_5305
    ??_41 <= s_5306
    ??_42 <= U
    ??_43 <= s_5308
    ??_44 <= s_5309
    ??_45 <= s_5310
    ??_46 <= U
    ??_47 <= s_5312
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_5323
    ?_2 <= A_5326
    ?_3 <= A_5332
    ?_4 <= A_5338
    ?_5 <= A_5344
    ?_6 <= A_5350
    ?_7 <= A_5358
    ?_8 <= B_5366
    ?_9 <= B_5374
    ?_10 <= ((f_5380) n_5382)
    ?_11 <= A_5393
    ?_12 <= B_5401
    ?_13 <= A_5406
    ?_14 <= n_5409
    ?_15 <= nat_3
    ?_16 <= ?_13
    ?_17 <= ?_13
    ?_18 <= A_5431
    ?_19 <= (vec_8‹s_5432› A_5435 (succ_5‹› n_5434))
    ?_20 <= ?_18
    ?_21 <= ?_18
    ?_22 <= nat_3
    ?_23 <= Type‹??_22›
    ?_24 <= nat_3
    ?_25 <= ?_22
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _5481 : nat_3 -> U
            | x_5483 => (eq_4‹??_20› nat_3 x_5483 zero_4)
    ?_30 <= n_5487
    ?_31 <= A_5496
    ?_32 <= (exists_5‹??_21,U›
              nat_3
              function _5505 : nat_3 -> U
              | x_5507 => (eq_4‹??_20› nat_3 x_5507 ?_30))
    ?_33 <= (exists_5‹??_21,U›
              nat_3
              function _5516 : nat_3 -> U
              | x_5518 =>
                (eq_4‹??_20› nat_3 x_5518 (succ_5‹› n_5512)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_5543
    ?_37 <= m_5549
    ?_38 <= ?_35
    ?_39 <= ?_34
    ?_40 <= nat_3
    ?_41 <= function _5592 : nat_3 -> U
            | x_5594 => (eq_4‹??_20› nat_3 x_5594 (succ_5‹› n_5588))
    ?_42 <= nat_3
    ?_43 <= Type‹??_34›
    ?_44 <= nat_3
    ?_45 <= ?_42
    ?_46 <= nat_3
    ?_47 <= zero_4
    ?_48 <= ?_46
    ?_49 <= (vec_8‹??_36› ?_48 (succ_5‹› ?_47))
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    ?_63 <= Type‹??_44›
    ?_64 <= Type‹??_45›
    ?_65 <= Type‹??_46›
    ?_66 <= Type‹??_47›
    ?_67 <= Type‹??_48›
    ?_68 <= Type‹??_49›
    ?_69 <= Type‹??_50›
    ?_70 <= Type‹??_51›
    ?_71 <= Type‹??_52›
    ?_72 <= Type‹??_53›
    ?_73 <= Type‹??_54›
    ?_74 <= Type‹??_55›
    ?_75 <= Type‹??_56›
    ?_76 <= Type‹??_57›
    
  |}
  eqns {|
    equal_tm? (?_52, ?_51);
    equal_tm? ((vec_8‹??_37› ?_51 (succ_5‹› ?_50)),
      (vec_8‹U› nat_3 (succ_5‹› zero_4)))
  |}
end_dump
simpl_tm ~expand:false( ?_52, ?_51)
simpl_tm ~expand:false( (vec_8‹??_37› ?_51 (succ_5‹› ?_50)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
simpl_tm ~expand:false( ?_51, nat_3)
simpl_tm ~expand:false( (succ_5‹› ?_50), (succ_5‹› zero_4))
simpl_tm ~expand:false( ?_50, zero_4)
simpl_tm ~expand:false( nat_3, ?_51)
simpl_tm ~expand:false( zero_4, ?_50)
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_57›)
check_tm( nat_3, Type‹??_57›)
infer_tm(nat_3)
assert_equal1( Type‹??_57›, U)
simpl_tm ~expand:false( Type‹??_57›, U)
----------------------------------

definition-------------------------
infer_tm(?_55)
delay_assert(?_77, ??_58)
check_tm( ((hd_vec2_5‹??_38›) ?_54 ?_53 xs_8), ?_55)
infer_tm(((hd_vec2_5‹??_38›) ?_54 ?_53 xs_8))
infer_tm(((hd_vec2_5‹??_38›) ?_54 ?_53))
infer_tm(((hd_vec2_5‹??_38›) ?_54))
infer_tm(hd_vec2_5‹??_38›)
simpl_tm ~expand:false( ?_77, Type‹??_58›)
check_tm( ?_54, Type‹??_38›)
check_tm( ?_53, nat_3)
check_tm( xs_8, (vec_8‹??_38› ?_54 (succ_5‹› ?_53)))
infer_tm(xs_8)
assert_equal1( (vec_8‹??_38› ?_54 (succ_5‹› ?_53)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1( ?_55, ?_54)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_5719
    ??_2 <= s_5721
    ??_3 <= r_5722
    ??_4 <= s_5724
    ??_5 <= s_5725
    ??_6 <= s_5726
    ??_7 <= s_5727
    ??_8 <= s_5728
    ??_9 <= s_5729
    ??_10 <= s_5731
    ??_11 <= ??_10
    ??_12 <= s_5735
    ??_13 <= ??_12
    ??_14 <= s_5740
    ??_15 <= r_5742
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= s_5753
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= ??_20
    ??_24 <= ??_21
    ??_25 <= U
    ??_26 <= ??_20
    ??_27 <= ??_20
    ??_28 <= U
    ??_29 <= ??_21
    ??_30 <= U
    ??_31 <= s_5765
    ??_32 <= ??_20
    ??_33 <= ??_21
    ??_34 <= U
    ??_35 <= U
    ??_36 <= ??_35
    ??_37 <= U
    ??_40 <= s_5769
    ??_41 <= s_5770
    ??_42 <= U
    ??_43 <= s_5772
    ??_44 <= s_5773
    ??_45 <= s_5774
    ??_46 <= U
    ??_47 <= s_5776
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    ??_57 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_5787
    ?_2 <= A_5790
    ?_3 <= A_5796
    ?_4 <= A_5802
    ?_5 <= A_5808
    ?_6 <= A_5814
    ?_7 <= A_5822
    ?_8 <= B_5830
    ?_9 <= B_5838
    ?_10 <= ((f_5844) n_5846)
    ?_11 <= A_5857
    ?_12 <= B_5865
    ?_13 <= A_5870
    ?_14 <= n_5873
    ?_15 <= nat_3
    ?_16 <= ?_13
    ?_17 <= ?_13
    ?_18 <= A_5895
    ?_19 <= (vec_8‹s_5896› A_5899 (succ_5‹› n_5898))
    ?_20 <= ?_18
    ?_21 <= ?_18
    ?_22 <= nat_3
    ?_23 <= Type‹??_22›
    ?_24 <= nat_3
    ?_25 <= ?_22
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _5945 : nat_3 -> U
            | x_5947 => (eq_4‹??_20› nat_3 x_5947 zero_4)
    ?_30 <= n_5951
    ?_31 <= A_5960
    ?_32 <= (exists_5‹??_21,U›
              nat_3
              function _5969 : nat_3 -> U
              | x_5971 => (eq_4‹??_20› nat_3 x_5971 ?_30))
    ?_33 <= (exists_5‹??_21,U›
              nat_3
              function _5980 : nat_3 -> U
              | x_5982 =>
                (eq_4‹??_20› nat_3 x_5982 (succ_5‹› n_5976)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_6007
    ?_37 <= m_6013
    ?_38 <= ?_35
    ?_39 <= ?_34
    ?_40 <= nat_3
    ?_41 <= function _6056 : nat_3 -> U
            | x_6058 => (eq_4‹??_20› nat_3 x_6058 (succ_5‹› n_6052))
    ?_42 <= nat_3
    ?_43 <= Type‹??_34›
    ?_44 <= nat_3
    ?_45 <= ?_42
    ?_46 <= nat_3
    ?_47 <= zero_4
    ?_48 <= ?_46
    ?_49 <= (vec_8‹??_36› ?_48 (succ_5‹› ?_47))
    ?_50 <= zero_4
    ?_51 <= nat_3
    ?_52 <= ?_51
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    ?_63 <= Type‹??_44›
    ?_64 <= Type‹??_45›
    ?_65 <= Type‹??_46›
    ?_66 <= Type‹??_47›
    ?_67 <= Type‹??_48›
    ?_68 <= Type‹??_49›
    ?_69 <= Type‹??_50›
    ?_70 <= Type‹??_51›
    ?_71 <= Type‹??_52›
    ?_72 <= Type‹??_53›
    ?_73 <= Type‹??_54›
    ?_74 <= Type‹??_55›
    ?_75 <= Type‹??_56›
    ?_76 <= Type‹??_57›
    ?_77 <= Type‹??_58›
    
  |}
  eqns {|
    equal_tm? (?_55, ?_54);
    equal_tm? ((vec_8‹??_38› ?_54 (succ_5‹› ?_53)),
      (vec_8‹U› nat_3 (succ_5‹› zero_4)))
  |}
end_dump
simpl_tm ~expand:false( ?_55, ?_54)
simpl_tm ~expand:false( (vec_8‹??_38› ?_54 (succ_5‹› ?_53)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
simpl_tm ~expand:false( ?_54, nat_3)
simpl_tm ~expand:false( (succ_5‹› ?_53), (succ_5‹› zero_4))
simpl_tm ~expand:false( ?_53, zero_4)
simpl_tm ~expand:false( nat_3, ?_54)
simpl_tm ~expand:false( zero_4, ?_53)
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_58›)
check_tm( nat_3, Type‹??_58›)
infer_tm(nat_3)
assert_equal1( Type‹??_58›, U)
simpl_tm ~expand:false( Type‹??_58›, U)
----------------------------------

definition-------------------------
infer_tm(?_58)
delay_assert(?_78, ??_59)
check_tm( ((hd_vec2_5‹??_39›) ?_57 ?_56 xs_8), ?_58)
infer_tm(((hd_vec2_5‹??_39›) ?_57 ?_56 xs_8))
infer_tm(((hd_vec2_5‹??_39›) ?_57 ?_56))
infer_tm(((hd_vec2_5‹??_39›) ?_57))
infer_tm(hd_vec2_5‹??_39›)
simpl_tm ~expand:false( ?_78, Type‹??_59›)
check_tm( ?_57, Type‹??_39›)
check_tm( ?_56, nat_3)
check_tm( xs_8, (vec_8‹??_39› ?_57 (succ_5‹› ?_56)))
infer_tm(xs_8)
assert_equal1( (vec_8‹??_39› ?_57 (succ_5‹› ?_56)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
assert_equal1( ?_58, ?_57)
begin_dump
  mctx {|
    
  |}
  smeta_meta {|
    ??_1 <= s_6183
    ??_2 <= s_6185
    ??_3 <= r_6186
    ??_4 <= s_6188
    ??_5 <= s_6189
    ??_6 <= s_6190
    ??_7 <= s_6191
    ??_8 <= s_6192
    ??_9 <= s_6193
    ??_10 <= s_6195
    ??_11 <= ??_10
    ??_12 <= s_6199
    ??_13 <= ??_12
    ??_14 <= s_6204
    ??_15 <= r_6206
    ??_16 <= ??_15
    ??_17 <= ??_14
    ??_18 <= ??_15
    ??_19 <= s_6217
    ??_20 <= U
    ??_21 <= U
    ??_22 <= U
    ??_23 <= ??_20
    ??_24 <= ??_21
    ??_25 <= U
    ??_26 <= ??_20
    ??_27 <= ??_20
    ??_28 <= U
    ??_29 <= ??_21
    ??_30 <= U
    ??_31 <= s_6229
    ??_32 <= ??_20
    ??_33 <= ??_21
    ??_34 <= U
    ??_35 <= U
    ??_36 <= ??_35
    ??_37 <= U
    ??_38 <= U
    ??_40 <= s_6233
    ??_41 <= s_6234
    ??_42 <= U
    ??_43 <= s_6236
    ??_44 <= s_6237
    ??_45 <= s_6238
    ??_46 <= U
    ??_47 <= s_6240
    ??_48 <= U
    ??_49 <= U
    ??_50 <= U
    ??_51 <= U
    ??_52 <= U
    ??_53 <= U
    ??_54 <= U
    ??_55 <= U
    ??_56 <= U
    ??_57 <= U
    ??_58 <= U
    
  |}
  imeta_meta {|
    ?_1 <= A_6251
    ?_2 <= A_6254
    ?_3 <= A_6260
    ?_4 <= A_6266
    ?_5 <= A_6272
    ?_6 <= A_6278
    ?_7 <= A_6286
    ?_8 <= B_6294
    ?_9 <= B_6302
    ?_10 <= ((f_6308) n_6310)
    ?_11 <= A_6321
    ?_12 <= B_6329
    ?_13 <= A_6334
    ?_14 <= n_6337
    ?_15 <= nat_3
    ?_16 <= ?_13
    ?_17 <= ?_13
    ?_18 <= A_6359
    ?_19 <= (vec_8‹s_6360› A_6363 (succ_5‹› n_6362))
    ?_20 <= ?_18
    ?_21 <= ?_18
    ?_22 <= nat_3
    ?_23 <= Type‹??_22›
    ?_24 <= nat_3
    ?_25 <= ?_22
    ?_26 <= nat_3
    ?_27 <= zero_4
    ?_28 <= nat_3
    ?_29 <= function _6409 : nat_3 -> U
            | x_6411 => (eq_4‹??_20› nat_3 x_6411 zero_4)
    ?_30 <= n_6415
    ?_31 <= A_6424
    ?_32 <= (exists_5‹??_21,U›
              nat_3
              function _6433 : nat_3 -> U
              | x_6435 => (eq_4‹??_20› nat_3 x_6435 ?_30))
    ?_33 <= (exists_5‹??_21,U›
              nat_3
              function _6444 : nat_3 -> U
              | x_6446 =>
                (eq_4‹??_20› nat_3 x_6446 (succ_5‹› n_6440)))
    ?_34 <= nat_3
    ?_35 <= nat_3
    ?_36 <= n_6471
    ?_37 <= m_6477
    ?_38 <= ?_35
    ?_39 <= ?_34
    ?_40 <= nat_3
    ?_41 <= function _6520 : nat_3 -> U
            | x_6522 => (eq_4‹??_20› nat_3 x_6522 (succ_5‹› n_6516))
    ?_42 <= nat_3
    ?_43 <= Type‹??_34›
    ?_44 <= nat_3
    ?_45 <= ?_42
    ?_46 <= nat_3
    ?_47 <= zero_4
    ?_48 <= ?_46
    ?_49 <= (vec_8‹??_36› ?_48 (succ_5‹› ?_47))
    ?_50 <= zero_4
    ?_51 <= nat_3
    ?_52 <= ?_51
    ?_53 <= zero_4
    ?_54 <= nat_3
    ?_55 <= ?_54
    ?_59 <= Type‹??_40›
    ?_60 <= Type‹??_41›
    ?_61 <= Type‹??_42›
    ?_62 <= Type‹??_43›
    ?_63 <= Type‹??_44›
    ?_64 <= Type‹??_45›
    ?_65 <= Type‹??_46›
    ?_66 <= Type‹??_47›
    ?_67 <= Type‹??_48›
    ?_68 <= Type‹??_49›
    ?_69 <= Type‹??_50›
    ?_70 <= Type‹??_51›
    ?_71 <= Type‹??_52›
    ?_72 <= Type‹??_53›
    ?_73 <= Type‹??_54›
    ?_74 <= Type‹??_55›
    ?_75 <= Type‹??_56›
    ?_76 <= Type‹??_57›
    ?_77 <= Type‹??_58›
    ?_78 <= Type‹??_59›
    
  |}
  eqns {|
    equal_tm? (?_58, ?_57);
    equal_tm? ((vec_8‹??_39› ?_57 (succ_5‹› ?_56)),
      (vec_8‹U› nat_3 (succ_5‹› zero_4)))
  |}
end_dump
simpl_tm ~expand:false( ?_58, ?_57)
simpl_tm ~expand:false( (vec_8‹??_39› ?_57 (succ_5‹› ?_56)),
  (vec_8‹U› nat_3 (succ_5‹› zero_4)))
simpl_tm ~expand:false( ?_57, nat_3)
simpl_tm ~expand:false( (succ_5‹› ?_56), (succ_5‹› zero_4))
simpl_tm ~expand:false( ?_56, zero_4)
simpl_tm ~expand:false( nat_3, ?_57)
simpl_tm ~expand:false( zero_4, ?_56)
infer_tm(nat_3)
check_tm( zero_4, nat_3)
infer_tm(zero_4)
assert_equal1( nat_3, nat_3)
infer_tm(U)
check_tm( nat_3, U)
infer_tm(nat_3)
assert_equal1( U, U)
infer_tm(Type‹??_59›)
check_tm( nat_3, Type‹??_59›)
infer_tm(nat_3)
assert_equal1( Type‹??_59›, U)
simpl_tm ~expand:false( Type‹??_59›, U)
----------------------------------

smeta_meta {|
  ??_1 <= s_6638
  ??_2 <= s_6640
  ??_3 <= r_6641
  ??_4 <= s_6643
  ??_5 <= s_6644
  ??_6 <= s_6645
  ??_7 <= s_6646
  ??_8 <= s_6647
  ??_9 <= s_6648
  ??_10 <= s_6650
  ??_11 <= ??_10
  ??_12 <= s_6654
  ??_13 <= ??_12
  ??_14 <= s_6659
  ??_15 <= r_6661
  ??_16 <= ??_15
  ??_17 <= ??_14
  ??_18 <= ??_15
  ??_19 <= s_6672
  ??_20 <= U
  ??_21 <= U
  ??_22 <= U
  ??_23 <= ??_20
  ??_24 <= ??_21
  ??_25 <= U
  ??_26 <= ??_20
  ??_27 <= ??_20
  ??_28 <= U
  ??_29 <= ??_21
  ??_30 <= U
  ??_31 <= s_6684
  ??_32 <= ??_20
  ??_33 <= ??_21
  ??_34 <= U
  ??_35 <= U
  ??_36 <= ??_35
  ??_37 <= U
  ??_38 <= U
  ??_39 <= U
  ??_40 <= s_6688
  ??_41 <= s_6689
  ??_42 <= U
  ??_43 <= s_6691
  ??_44 <= s_6692
  ??_45 <= s_6693
  ??_46 <= U
  ??_47 <= s_6695
  ??_48 <= U
  ??_49 <= U
  ??_50 <= U
  ??_51 <= U
  ??_52 <= U
  ??_53 <= U
  ??_54 <= U
  ??_55 <= U
  ??_56 <= U
  ??_57 <= U
  ??_58 <= U
  ??_59 <= U
  
|}
imeta_meta {|
  ?_1 <= A_6706
  ?_2 <= A_6709
  ?_3 <= A_6715
  ?_4 <= A_6721
  ?_5 <= A_6727
  ?_6 <= A_6733
  ?_7 <= A_6741
  ?_8 <= B_6749
  ?_9 <= B_6757
  ?_10 <= ((f_6763) n_6765)
  ?_11 <= A_6776
  ?_12 <= B_6784
  ?_13 <= A_6789
  ?_14 <= n_6792
  ?_15 <= nat_3
  ?_16 <= ?_13
  ?_17 <= ?_13
  ?_18 <= A_6814
  ?_19 <= (vec_8‹s_6815› A_6818 (succ_5‹› n_6817))
  ?_20 <= ?_18
  ?_21 <= ?_18
  ?_22 <= nat_3
  ?_23 <= Type‹??_22›
  ?_24 <= nat_3
  ?_25 <= ?_22
  ?_26 <= nat_3
  ?_27 <= zero_4
  ?_28 <= nat_3
  ?_29 <= function _6864 : nat_3 -> U
          | x_6866 => (eq_4‹??_20› nat_3 x_6866 zero_4)
  ?_30 <= n_6870
  ?_31 <= A_6879
  ?_32 <= (exists_5‹??_21,U›
            nat_3
            function _6888 : nat_3 -> U
            | x_6890 => (eq_4‹??_20› nat_3 x_6890 ?_30))
  ?_33 <= (exists_5‹??_21,U›
            nat_3
            function _6899 : nat_3 -> U
            | x_6901 => (eq_4‹??_20› nat_3 x_6901 (succ_5‹› n_6895)))
  ?_34 <= nat_3
  ?_35 <= nat_3
  ?_36 <= n_6926
  ?_37 <= m_6932
  ?_38 <= ?_35
  ?_39 <= ?_34
  ?_40 <= nat_3
  ?_41 <= function _6975 : nat_3 -> U
          | x_6977 => (eq_4‹??_20› nat_3 x_6977 (succ_5‹› n_6971))
  ?_42 <= nat_3
  ?_43 <= Type‹??_34›
  ?_44 <= nat_3
  ?_45 <= ?_42
  ?_46 <= nat_3
  ?_47 <= zero_4
  ?_48 <= ?_46
  ?_49 <= (vec_8‹??_36› ?_48 (succ_5‹› ?_47))
  ?_50 <= zero_4
  ?_51 <= nat_3
  ?_52 <= ?_51
  ?_53 <= zero_4
  ?_54 <= nat_3
  ?_55 <= ?_54
  ?_56 <= zero_4
  ?_57 <= nat_3
  ?_58 <= ?_57
  ?_59 <= Type‹??_40›
  ?_60 <= Type‹??_41›
  ?_61 <= Type‹??_42›
  ?_62 <= Type‹??_43›
  ?_63 <= Type‹??_44›
  ?_64 <= Type‹??_45›
  ?_65 <= Type‹??_46›
  ?_66 <= Type‹??_47›
  ?_67 <= Type‹??_48›
  ?_68 <= Type‹??_49›
  ?_69 <= Type‹??_50›
  ?_70 <= Type‹??_51›
  ?_71 <= Type‹??_52›
  ?_72 <= Type‹??_53›
  ?_73 <= Type‹??_54›
  ?_74 <= Type‹??_55›
  ?_75 <= Type‹??_56›
  ?_76 <= Type‹??_57›
  ?_77 <= Type‹??_58›
  ?_78 <= Type‹??_59›
  
|}
#[program]
inductive unit_1‹› : U where
| tt_1 : unit_1

#[program]
inductive bool_2‹› : U where
| true_2 : bool_2
| false_3 : bool_2

#[program]
inductive nat_3‹› : U where
| zero_4 : nat_3
| succ_5 (pred_7584 : nat_3) : nat_3

#[logical]
inductive eq_4‹s_7585› (A_7586 : Type‹s_7585›) (m_7587 : A_7586):
  A_7586 -> U
where
| refl_6 : (eq_4‹s_7585› A_7586 m_7587 m_7587)

#[program]
inductive exists_5‹s_7589,r_7590› (A_7591 : Type‹s_7589›) (B_7592 : 
A_7591 -> Type‹r_7590›): U where
| ex_7
    (m_7594 : A_7591) {pf_7595 : ((B_7592) m_7594)}
    : (exists_5‹s_7589,r_7590› A_7591 B_7592)

#[program]
inductive sing_6‹s_7596› (A_7597 : Type‹s_7596›):
  A_7597 -> Type‹s_7596›
where
| just_8 (m_7599 : A_7597) : (sing_6‹s_7596› A_7597 m_7599)

#[program]
inductive list_7‹s_7600› (A_7601 : Type‹s_7600›): U where
| nil_9 : (list_7‹s_7600› A_7601)
| cons_10
    (hd_7602 : A_7601) (tl_7603 : (list_7‹s_7600› A_7601))
    : (list_7‹s_7600› A_7601)

#[program]
inductive vec_8‹s_7604› (A_7605 : Type‹s_7604›): nat_3 -> U where
| vnil_11 : (vec_8‹s_7604› A_7605 zero_4)
| vcons_12
    {n_7607 : nat_3} (hd_7608 : A_7605)
    (tl_7609 : (vec_8‹s_7604› A_7605 n_7607))
    : (vec_8‹s_7604› A_7605 (succ_5‹› n_7607))

#[program]
def rwl_1‹s_7610,r_7611› :
  ∀ {A_7612 : Type‹s_7610›} ->
    ∀ {m_7613 : A_7612} ->
      ∀ {n_7614 : A_7612} ->
        ∀ {B_7615 : A_7612 -> Type‹r_7611›} ->
          (eq_4‹s_7610› A_7612 m_7613 n_7614) ->
            ((B_7615) m_7613) -> ((B_7615) n_7614)
:=
  function rwl_7619 :
    ∀ {A_7620 : Type‹s_7610›} ->
      ∀ {m_7621 : A_7620} ->
        ∀ {n_7622 : A_7620} ->
          ∀ {B_7623 : A_7620 -> Type‹r_7611›} ->
            (eq_4‹s_7610› A_7620 m_7621 n_7622) ->
              ((B_7623) m_7621) -> ((B_7623) n_7622)
  | A_7627 m_7628 n_7629 B_7630 refl_6 x_7631 => x_7631

#[program]
def rwr_2‹s_7632,r_7633› :
  ∀ {A_7634 : Type‹s_7632›} ->
    ∀ {m_7635 : A_7634} ->
      ∀ {n_7636 : A_7634} ->
        ∀ {B_7637 : A_7634 -> Type‹r_7633›} ->
          (eq_4‹s_7632› A_7634 m_7635 n_7636) ->
            ((B_7637) n_7636) -> ((B_7637) m_7635)
:=
  function rwr_7641 :
    ∀ {A_7642 : Type‹s_7632›} ->
      ∀ {m_7643 : A_7642} ->
        ∀ {n_7644 : A_7642} ->
          ∀ {B_7645 : A_7642 -> Type‹r_7633›} ->
            (eq_4‹s_7632› A_7642 m_7643 n_7644) ->
              ((B_7645) n_7644) -> ((B_7645) m_7643)
  | A_7649 m_7650 n_7651 B_7652 refl_6 x_7653 => x_7653

#[logical]
def congr_3‹s_7654,r_7655,t_7656› :
  ∀ (A_7657 : Type‹s_7654›) ->
    ∀ (B_7658 : Type‹r_7655›) ->
      ∀ (m_7659 : A_7657) ->
        ∀ (n_7660 : A_7657) ->
          ∀ (f_7661 : forall‹t_7656›(__7662 : A_7657), B_7658) ->
            (eq_4‹s_7654› A_7657 m_7659 n_7660) ->
              (eq_4‹r_7655› B_7658 ((f_7661) m_7659) ((f_7661) n_7660))
:=
  function congr_7664 :
    ∀ (A_7665 : Type‹s_7654›) ->
      ∀ (B_7666 : Type‹r_7655›) ->
        ∀ (m_7667 : A_7665) ->
          ∀ (n_7668 : A_7665) ->
            ∀ (f_7669 : forall‹t_7656›(__7670 : A_7665), B_7666) ->
              (eq_4‹s_7654› A_7665 m_7667 n_7668) ->
                (eq_4‹r_7655› B_7666 ((f_7669) m_7667) ((f_7669) n_7668))
  | A_7672 B_7673 m_7674 n_7675 f_7676 refl_6 => refl_6‹r_7655›

#[program]
def hd_vec_4‹s_7677› :
  ∀ {A_7678 : Type‹s_7677›} ->
    ∀ {n_7679 : nat_3} ->
      (vec_8‹s_7677› A_7678 (succ_5‹› n_7679)) -> A_7678
:=
  function hd_vec_7681 :
    ∀ {A_7682 : Type‹s_7677›} ->
      ∀ {n_7683 : nat_3} ->
        (vec_8‹s_7677› A_7682 (succ_5‹› n_7683)) -> A_7682
  | A_7685 n_7686 vnil_11 =>
  | A_7687 n_7688 (vcons_12 _7689 hd_7690 _7691) => hd_7690

#[program]
def hd_vec2_5‹s_7692› :
  ∀ {A_7693 : Type‹s_7692›} ->
    ∀ {n_7694 : nat_3} ->
      (vec_8‹s_7692› A_7693 (succ_5‹› n_7694)) -> A_7693
:=
  function hd_vec2_7696 :
    ∀ {A_7697 : Type‹s_7692›} ->
      ∀ {n_7698 : nat_3} ->
        (vec_8‹s_7692› A_7697 (succ_5‹› n_7698)) -> A_7697
  | A_7700 n_7701 xs_7702 =>
    match n_7701, xs_7702 in
      ∀ {n0_7703 : nat_3} -o
        (vec_8‹s_7692› A_7700 (succ_5‹› n0_7703)) -o A_7700
    with
    | _7705, vnil_11 =>
    | _7706, (vcons_12 _7707 hd_7708 _7709) => hd_7708

#[program]
def hd_vec3_6‹s_7710› :
  ∀ {A_7711 : Type‹s_7710›} ->
    ∀ {n_7712 : nat_3} ->
      (vec_8‹s_7710› A_7711 (succ_5‹› n_7712)) -> A_7711
:=
  function hd_vec3_7714 :
    ∀ {A_7715 : Type‹s_7710›} ->
      ∀ {n_7716 : nat_3} ->
        (vec_8‹s_7710› A_7715 (succ_5‹› n_7716)) -> A_7715
  | A_7718 n_7719 xs_7720 =>
    match xs_7720 in
      (vec_8‹s_7710› A_7718 (succ_5‹› n_7719)) -o A_7718
    with
    | vnil_11 =>
    | (vcons_12 _7722 hd_7723 _7724) => hd_7723

#[program]
def vlength_7‹s_7725› :
  ∀ {A_7726 : Type‹s_7725›} ->
    ∀ {n_7727 : nat_3} ->
      (vec_8‹s_7725› A_7726 n_7727) ->
        (exists_5‹U,U›
          nat_3
          function _7729 : nat_3 -> U
          | x_7731 => (eq_4‹U› nat_3 x_7731 n_7727))
:=
  function vlength_7732 :
    ∀ {A_7733 : Type‹s_7725›} ->
      ∀ {n_7734 : nat_3} ->
        (vec_8‹s_7725› A_7733 n_7734) ->
          (exists_5‹U,U›
            nat_3
            function _7736 : nat_3 -> U
            | x_7738 => (eq_4‹U› nat_3 x_7738 n_7734))
  | A_7739 n_7740 vnil_11 => (ex_7‹U,U› zero_4 refl_6‹U›)
  | A_7741 n_7742 (vcons_12 _7743 _7744 tl_7745) =>
    match ((vlength_7732) A_7741 _7743 tl_7745) in
      (exists_5‹U,U›
        nat_3
        function _7747 : nat_3 -> U
        | x_7749 => (eq_4‹U› nat_3 x_7749 _7743)) -o
        (exists_5‹U,U›
          nat_3
          function _7750 : nat_3 -> U
          | x_7752 => (eq_4‹U› nat_3 x_7752 (succ_5‹› _7743)))
    with
    | (ex_7 n_7753 pf_7754) =>
      (ex_7‹U,U›
        (succ_5‹› n_7753)
        ((congr_3‹U,U,U›)
          nat_3 nat_3 n_7753 _7743
          function _7755 : nat_3 -> nat_3
          | x_7757 => (succ_5‹› x_7757) pf_7754))

#[program]
def xs_8‹› : (vec_8‹U› nat_3 (succ_5‹› zero_4)) :=
  (vcons_12‹U› zero_4 zero_4 vnil_11‹U›)

#[program]
def x_9‹› : nat_3 := ((hd_vec_4‹U›) nat_3 zero_4 xs_8)

#[program]
def y_10‹› : nat_3 := ((hd_vec2_5‹U›) nat_3 zero_4 xs_8)

#[program]
def z_11‹› : nat_3 := ((hd_vec2_5‹U›) nat_3 zero_4 xs_8)

-----------------------------------------

