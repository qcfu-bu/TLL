* TLL
** Static Fragment
#+begin_src 
Γ ⊢
—————————
Γ ⊢ s : U

Γ, x : A ⊢
————————————————
Γ, x : A ⊢ x : A

Γ ⊢ A : s    Γ, x : A ⊢ B : r
—————————————————————————————
Γ ⊢ Πt (x : A).B : t

Γ ⊢ A : s    Γ, x : A ⊢ B : r
—————————————————————————————
Γ ⊢ Πt {x : A}.B : t

Γ, x : A ⊢ m : B
———————————————————————————————
Γ ⊢ λt (x : A).m : Πt (x : A).B

Γ, x : A ⊢ m : B
——————————————————————————————–
Γ ⊢ λt {x : A}.m : Πt {x : A}.B

Γ ⊢ m : Πt (x : A).B    Γ ⊢ n : A
—————————————————————————————————
Γ ⊢ m n : B[n/x]

Γ ⊢ m : Πt {x : A}.B    Γ ⊢ n : A
—————————————————————————————————
Γ ⊢ m n : B[n/x]

Γ ⊢ B : s    Γ ⊢ m : A    A = B
———————————————————————————————
Γ ⊢ m : B

Γ ⊢ m : A    Γ ⊢ n : A
—————————————————————–
Γ ⊢ m =A n : U

Γ ⊢ m : A
—————————–————————–
Γ ⊢ refl m : m =A m

Γ, x : A ⊢ P : s    Γ ⊢ h : P m    Γ ⊢ e : m =A n
—————————————————–———–———————————————————————————
Γ ⊢ rew P h e : P n
#+end_src

** Dynamic Fragment
#+begin_src 
Γ, x : A; Δ, x :s A ⊢    Δ ▹ U
——————————————————————————–———
Γ, x : A; Δ, x :s A ⊢ x : A

Γ, x : A; Δ, x :s A ⊢ m : B    Δ ▹ t
————————————————————————————————————
Γ; Δ ⊢ λt (x : A).m : Πt (x : A).B

Γ, x : A; Δ ⊢ m : B    Δ ▹ t
——————————————————————————————————
Γ; Δ ⊢ λt {x : A}.m : Πt {x : A}.B

Γ; Δ1 ⊢ m : Πt (x : A).B    Γ; Δ2 ⊢ n : A
—————————————————————————————————————————
Γ; Δ1 ⊍ Δ2 ⊢ m n : B[n/x]

Γ; Δ ⊢ m : Πt {x : A}.B    Γ ⊢ n : A
————————————————————————————————————
Γ; Δ ⊢ m n : B[n/x]

Γ ⊢ B : s    Γ; Δ ⊢ m : A     A = B
———————————————————————————————————
Γ; Δ ⊢ m : B
#+end_src

** Theorems
- *Translation*\\
  For dynamic typing ~Γ; Δ ⊢ m : A~ then static typing ~Γ ⊢ m : A~ is well-typed.
- *Validity*\\
  For dynamic typing ~Γ; Δ ⊢ m : A~, there exists sort ~s~ such that static typing ~Γ ⊢ A : s~ is well-typed.
- *Subject Reduction*\\
  For dynamic typing ~Γ; Δ ⊢ m : A~, if there is reduction ~m ↝ n~ then ~Γ; Δ ⊢ n : A~ is well-typed.
- *Strong Normalization*\\
  For dynamic typing ~Γ; Δ ⊢ m : A~, ~m~ is strongly normalizing.

** Experimental
#+begin_src 
    U(1) ≼ U(2) ≼ U(3) ≼ ... ≼ U(n) ...
       \      \      \            \
Prop ≼ T(1) ≼ T(2) ≼ T(3) ≼ ... ≼ T(n) ...
       /      /      /            /
    L(1) ≼ L(2) ≼ L(3) ≼ ... ≼ L(n) ...
#+end_src
